{"sha": "21265dd0d209e7b682f249a3a45034f02d32650b", "node_id": "C_kwDOAAsO6NoAKDIxMjY1ZGQwZDIwOWU3YjY4MmYyNDlhM2E0NTAzNGYwMmQzMjY1MGI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-26T08:08:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-26T08:08:35Z"}, "message": "Auto merge of #102224 - fee1-dead-contrib:const_trait_impl_specialization, r=oli-obk\n\nAllow specializing on const trait bounds", "tree": {"sha": "6386b68f21d7ee6867d0f56a64052e3b5ae52d56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6386b68f21d7ee6867d0f56a64052e3b5ae52d56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21265dd0d209e7b682f249a3a45034f02d32650b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21265dd0d209e7b682f249a3a45034f02d32650b", "html_url": "https://github.com/rust-lang/rust/commit/21265dd0d209e7b682f249a3a45034f02d32650b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21265dd0d209e7b682f249a3a45034f02d32650b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72f4923979979abb5d6b975353e9b3053d257e60", "url": "https://api.github.com/repos/rust-lang/rust/commits/72f4923979979abb5d6b975353e9b3053d257e60", "html_url": "https://github.com/rust-lang/rust/commit/72f4923979979abb5d6b975353e9b3053d257e60"}, {"sha": "36e8c113f67bb793cb231cbf0d29c29c02819b85", "url": "https://api.github.com/repos/rust-lang/rust/commits/36e8c113f67bb793cb231cbf0d29c29c02819b85", "html_url": "https://github.com/rust-lang/rust/commit/36e8c113f67bb793cb231cbf0d29c29c02819b85"}], "stats": {"total": 150, "additions": 143, "deletions": 7}, "files": [{"sha": "5bebd7dee09b922004dc287838460b0670d4d9e6", "filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/21265dd0d209e7b682f249a3a45034f02d32650b/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21265dd0d209e7b682f249a3a45034f02d32650b/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=21265dd0d209e7b682f249a3a45034f02d32650b", "patch": "@@ -423,13 +423,10 @@ fn trait_predicate_kind<'tcx>(\n     predicate: ty::Predicate<'tcx>,\n ) -> Option<TraitSpecializationKind> {\n     match predicate.kind().skip_binder() {\n-        ty::PredicateKind::Trait(ty::TraitPredicate {\n-            trait_ref,\n-            constness: ty::BoundConstness::NotConst,\n-            polarity: _,\n-        }) => Some(tcx.trait_def(trait_ref.def_id).specialization_kind),\n-        ty::PredicateKind::Trait(_)\n-        | ty::PredicateKind::RegionOutlives(_)\n+        ty::PredicateKind::Trait(ty::TraitPredicate { trait_ref, constness: _, polarity: _ }) => {\n+            Some(tcx.trait_def(trait_ref.def_id).specialization_kind)\n+        }\n+        ty::PredicateKind::RegionOutlives(_)\n         | ty::PredicateKind::TypeOutlives(_)\n         | ty::PredicateKind::Projection(_)\n         | ty::PredicateKind::WellFormed(_)"}, {"sha": "633543700d2ec445548bef0f6fa6e9fa23fee5f3", "filename": "src/test/ui/rfc-2632-const-trait-impl/specializing-constness-2.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness-2.rs?ref=21265dd0d209e7b682f249a3a45034f02d32650b", "patch": "@@ -0,0 +1,31 @@\n+#![feature(const_trait_impl, min_specialization, rustc_attrs)]\n+\n+#[rustc_specialization_trait]\n+#[const_trait]\n+pub trait Sup {}\n+\n+impl const Sup for () {}\n+\n+#[const_trait]\n+pub trait A {\n+    fn a() -> u32;\n+}\n+\n+impl<T: Default> A for T {\n+    default fn a() -> u32 {\n+        2\n+    }\n+}\n+\n+impl<T: Default + ~const Sup> const A for T {\n+    fn a() -> u32 {\n+        3\n+    }\n+}\n+\n+const fn generic<T: Default>() {\n+    <T as A>::a();\n+    //~^ ERROR: the trait bound `T: ~const Sup` is not satisfied\n+}\n+\n+fn main() {}"}, {"sha": "c554671e18d8261a9f813824ae3b295d2b4407cc", "filename": "src/test/ui/rfc-2632-const-trait-impl/specializing-constness-2.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness-2.stderr?ref=21265dd0d209e7b682f249a3a45034f02d32650b", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: the trait bound `T: ~const Sup` is not satisfied\n+  --> $DIR/specializing-constness-2.rs:27:5\n+   |\n+LL |     <T as A>::a();\n+   |     ^^^^^^^^^^^^^ the trait `~const Sup` is not implemented for `T`\n+   |\n+note: required for `T` to implement `~const A`\n+  --> $DIR/specializing-constness-2.rs:20:37\n+   |\n+LL | impl<T: Default + ~const Sup> const A for T {\n+   |                                     ^     ^\n+help: consider further restricting this bound\n+   |\n+LL | const fn generic<T: Default + ~const Sup>() {\n+   |                             ++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "ff0cd489d47440cd448e46f61675335f6f5a4930", "filename": "src/test/ui/rfc-2632-const-trait-impl/specializing-constness.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness.rs?ref=21265dd0d209e7b682f249a3a45034f02d32650b", "patch": "@@ -0,0 +1,26 @@\n+#![feature(const_trait_impl, min_specialization, rustc_attrs)]\n+\n+#[rustc_specialization_trait]\n+#[const_trait]\n+pub trait Sup {}\n+\n+impl const Sup for () {}\n+\n+#[const_trait]\n+pub trait A {\n+    fn a() -> u32;\n+}\n+\n+impl<T: ~const Default> const A for T {\n+    default fn a() -> u32 {\n+        2\n+    }\n+}\n+\n+impl<T: Default + Sup> A for T { //~ ERROR: cannot specialize\n+    fn a() -> u32 {\n+        3\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "3296c109c4e7361bf7b2b4904577bf374725209b", "filename": "src/test/ui/rfc-2632-const-trait-impl/specializing-constness.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fspecializing-constness.stderr?ref=21265dd0d209e7b682f249a3a45034f02d32650b", "patch": "@@ -0,0 +1,8 @@\n+error: cannot specialize on trait `Default`\n+  --> $DIR/specializing-constness.rs:20:9\n+   |\n+LL | impl<T: Default + Sup> A for T {\n+   |         ^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "05ba4c8d45d5b22a74bec099d7c75177ec48ac27", "filename": "src/test/ui/specialization/const_trait_impl.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Fspecialization%2Fconst_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21265dd0d209e7b682f249a3a45034f02d32650b/src%2Ftest%2Fui%2Fspecialization%2Fconst_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fconst_trait_impl.rs?ref=21265dd0d209e7b682f249a3a45034f02d32650b", "patch": "@@ -0,0 +1,55 @@\n+// check-pass\n+#![feature(const_trait_impl, min_specialization, rustc_attrs)]\n+\n+#[rustc_specialization_trait]\n+#[const_trait]\n+pub unsafe trait Sup {\n+    fn foo() -> u32;\n+}\n+\n+#[rustc_specialization_trait]\n+#[const_trait]\n+pub unsafe trait Sub: ~const Sup {}\n+\n+unsafe impl const Sup for u8 {\n+    default fn foo() -> u32 {\n+        1\n+    }\n+}\n+\n+unsafe impl const Sup for () {\n+    fn foo() -> u32 {\n+        42\n+    }\n+}\n+\n+unsafe impl const Sub for () {}\n+\n+#[const_trait]\n+pub trait A {\n+    fn a() -> u32;\n+}\n+\n+impl<T: ~const Default> const A for T {\n+    default fn a() -> u32 {\n+        2\n+    }\n+}\n+\n+impl<T: ~const Default + ~const Sup> const A for T {\n+    default fn a() -> u32 {\n+        3\n+    }\n+}\n+\n+impl<T: ~const Default + ~const Sub> const A for T {\n+    fn a() -> u32 {\n+        T::foo()\n+    }\n+}\n+\n+const _: () = assert!(<()>::a() == 42);\n+const _: () = assert!(<u8>::a() == 3);\n+const _: () = assert!(<u16>::a() == 2);\n+\n+fn main() {}"}]}