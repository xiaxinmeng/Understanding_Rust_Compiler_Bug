{"sha": "445faca8441aae34c91318b6ad9e2049885af8dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NWZhY2E4NDQxYWFlMzRjOTEzMThiNmFkOWUyMDQ5ODg1YWY4ZGM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-08T03:11:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-10T07:58:10Z"}, "message": "Test fixes and review feedback", "tree": {"sha": "f76e275a8304f0496ca0a71576cc9db92a09194a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f76e275a8304f0496ca0a71576cc9db92a09194a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/445faca8441aae34c91318b6ad9e2049885af8dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/445faca8441aae34c91318b6ad9e2049885af8dc", "html_url": "https://github.com/rust-lang/rust/commit/445faca8441aae34c91318b6ad9e2049885af8dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/445faca8441aae34c91318b6ad9e2049885af8dc/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "262527601e67714f3fa9d2e45738ba60023148d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/262527601e67714f3fa9d2e45738ba60023148d6", "html_url": "https://github.com/rust-lang/rust/commit/262527601e67714f3fa9d2e45738ba60023148d6"}], "stats": {"total": 112, "additions": 64, "deletions": 48}, "files": [{"sha": "daa53e2dbd596a4267ed22021f9e4833ce8d4693", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -726,18 +726,18 @@ fn run_debuginfo_lldb_test(config: &Config, props: &TestProps, testfile: &Path)\n                 -> ProcRes {\n         // Prepare the lldb_batchmode which executes the debugger script\n         let lldb_script_path = rust_src_root.join(\"src/etc/lldb_batchmode.py\");\n-        cmd2proces(config,\n-                   test_executable,\n-                   Command::new(&config.python)\n-                           .arg(&lldb_script_path)\n-                           .arg(test_executable)\n-                           .arg(debugger_script)\n-                           .env(\"PYTHONPATH\",\n-                                config.lldb_python_dir.as_ref().unwrap()))\n+        cmd2procres(config,\n+                    test_executable,\n+                    Command::new(&config.python)\n+                            .arg(&lldb_script_path)\n+                            .arg(test_executable)\n+                            .arg(debugger_script)\n+                            .env(\"PYTHONPATH\",\n+                                 config.lldb_python_dir.as_ref().unwrap()))\n     }\n }\n \n-fn cmd2proces(config: &Config, test_executable: &Path, cmd: &mut Command)\n+fn cmd2procres(config: &Config, test_executable: &Path, cmd: &mut Command)\n               -> ProcRes {\n     let (status, out, err) = match cmd.output() {\n         Ok(Output { status, stdout, stderr }) => {\n@@ -1828,12 +1828,12 @@ fn run_rustdoc_test(config: &Config, props: &TestProps, testfile: &Path) {\n     }\n     let root = find_rust_src_root(config).unwrap();\n \n-    let res = cmd2proces(config,\n-                         testfile,\n-                         Command::new(&config.python)\n-                                 .arg(root.join(\"src/etc/htmldocck.py\"))\n-                                 .arg(out_dir)\n-                                 .arg(testfile));\n+    let res = cmd2procres(config,\n+                          testfile,\n+                          Command::new(&config.python)\n+                                  .arg(root.join(\"src/etc/htmldocck.py\"))\n+                                  .arg(out_dir)\n+                                  .arg(testfile));\n     if !res.status.success() {\n         fatal_proc_rec(\"htmldocck failed!\", &res);\n     }"}, {"sha": "94b521a89cfbc96f1c30b401097e29be885bf658", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -124,7 +124,7 @@ fn scrape_test_config(krate: &::syntax::ast::Crate) -> TestOptions {\n     use syntax::print::pprust;\n \n     let mut opts = TestOptions {\n-        no_crate_inject: true,\n+        no_crate_inject: false,\n         attrs: Vec::new(),\n     };\n "}, {"sha": "2dee90e9a6660daad699813cf8bac4ab0923bae6", "filename": "src/libstd/old_path/mod.rs", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Flibstd%2Fold_path%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Flibstd%2Fold_path%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_path%2Fmod.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -48,7 +48,7 @@\n //!\n //! ## Examples\n //!\n-//! ```rust\n+//! ```rust,ignore\n //! # #![feature(old_path, old_io)]\n //! use std::old_io::fs::PathExtensions;\n //! use std::old_path::{Path, GenericPath};\n@@ -190,7 +190,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -209,7 +209,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -225,7 +225,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -242,7 +242,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -262,7 +262,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -281,7 +281,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -298,7 +298,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -319,7 +319,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -336,7 +336,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -357,7 +357,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -386,7 +386,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -408,7 +408,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -437,7 +437,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -457,7 +457,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -485,7 +485,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -537,7 +537,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -564,7 +564,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -590,7 +590,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -611,7 +611,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -628,7 +628,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -654,7 +654,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -685,7 +685,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -704,7 +704,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -731,7 +731,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -755,7 +755,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -774,7 +774,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -794,7 +794,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -815,7 +815,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();\n@@ -833,7 +833,7 @@ pub trait GenericPath: Clone + GenericPathUnsafe {\n     ///\n     /// # Examples\n     ///\n-    /// ```\n+    /// ```ignore\n     /// # #![feature(old_path)]\n     /// use std::old_path::{Path, GenericPath};\n     /// # foo();"}, {"sha": "50c63abc0d4e54432de2c5ee92b45e0ff1b45ef2", "filename": "src/test/run-make/issue-22131/foo.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frun-make%2Fissue-22131%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frun-make%2Fissue-22131%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-22131%2Ffoo.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_name=\"foo\"]\n-\n /// ```rust\n /// assert_eq!(foo::foo(), 1);\n /// ```"}, {"sha": "92b243140021d26004cf22eda29972f79ec99cbd", "filename": "src/test/rustdoc/default-impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fdefault-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fdefault-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdefault-impl.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:rustdoc-default-impl.rs\n+// ignore-android\n \n extern crate rustdoc_default_impl as foo;\n "}, {"sha": "9178c1bcb9d76d56b65755ec191b8909669d5c41", "filename": "src/test/rustdoc/extern-default-method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fextern-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fextern-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-default-method.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:rustdoc-extern-default-method.rs\n+// ignore-android\n \n extern crate rustdoc_extern_default_method as ext;\n "}, {"sha": "5e30e6c0c1c58a008651bd2414062f012ed5df17", "filename": "src/test/rustdoc/extern-method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fextern-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fextern-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-method.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:rustdoc-extern-method.rs\n+// ignore-android\n \n #![feature(unboxed_closures)]\n "}, {"sha": "717c64b3aa54667cf841c79af8c25310c24700cb", "filename": "src/test/rustdoc/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fffi.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:rustdoc-ffi.rs\n+// ignore-android\n \n extern crate rustdoc_ffi as lib;\n "}, {"sha": "a613736ab4c500bed8e419a9253836fba51ca8d4", "filename": "src/test/rustdoc/inline-default-methods.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Finline-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Finline-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline-default-methods.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:inline-default-methods.rs\n+// ignore-android\n \n extern crate inline_default_methods;\n "}, {"sha": "5c31c297724649f8cbb95b547e8635a62868c9e5", "filename": "src/test/rustdoc/issue-13698.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-13698.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-13698.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-13698.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-13698.rs\n+// ignore-android\n \n extern crate issue_13698;\n "}, {"sha": "32898d652f8217fb112d6dce6b5acb4ae7b0e791", "filename": "src/test/rustdoc/issue-15318-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-15318-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-15318-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-15318-2.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-15318.rs\n+// ignore-android\n \n extern crate issue_15318;\n "}, {"sha": "3bcc8f45b0e88338009deb0e5e709a5e1628dd80", "filename": "src/test/rustdoc/issue-15318.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-15318.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-15318.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-15318.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-15318.rs\n+// ignore-android\n \n #![feature(no_std)]\n #![no_std]"}, {"sha": "8d31a1c288eb8d097d53eb9916ffefe4b2b5e816", "filename": "src/test/rustdoc/issue-17476.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-17476.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-17476.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-17476.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-17476.rs\n+// ignore-android\n \n extern crate issue_17476;\n "}, {"sha": "77abe35948c3de259726a6f80e855f957b9ad984", "filename": "src/test/rustdoc/issue-20646.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20646.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20646.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-20646.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-20646.rs\n+// ignore-android\n \n #![feature(associated_types)]\n "}, {"sha": "03181bebdb05a187c08d43ee9290ae5deb59b2d6", "filename": "src/test/rustdoc/issue-20727-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-20727-2.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-20727.rs\n+// ignore-android\n \n extern crate issue_20727;\n "}, {"sha": "9d05ce99c4d3034908cc52f71e576ff9a54b66d2", "filename": "src/test/rustdoc/issue-20727-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-20727-3.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-20727.rs\n+// ignore-android\n \n extern crate issue_20727;\n "}, {"sha": "39db387f090003ebe6696b173b3d8a0d5d646264", "filename": "src/test/rustdoc/issue-20727-4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-20727-4.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-20727.rs\n+// ignore-android\n \n extern crate issue_20727;\n "}, {"sha": "3205f5bfa33715ff2d6bb5d6dbd8e67146c7d6cb", "filename": "src/test/rustdoc/issue-20727.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-20727.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-20727.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-20727.rs\n+// ignore-android\n \n extern crate issue_20727;\n "}, {"sha": "38983aee93397de586152071a1ebba5c4799a768", "filename": "src/test/rustdoc/issue-21092.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-21092.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-21092.rs\n+// ignore-android\n \n extern crate issue_21092;\n "}, {"sha": "a4392b84e5b12ab89e2a30b48a5f727000f2b729", "filename": "src/test/rustdoc/issue-21801.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-21801.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-21801.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-21801.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-21801.rs\n+// ignore-android\n \n extern crate issue_21801;\n "}, {"sha": "d2eb4fb6ad845559e3f4b74c8ce497b4960d487d", "filename": "src/test/rustdoc/issue-22025.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-22025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-22025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-22025.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue-22025.rs\n+// ignore-android\n \n extern crate issue_22025;\n "}, {"sha": "722046723be7c4e96d1461755cc5ffd31e402f39", "filename": "src/test/rustdoc/issue-23207.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-23207.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445faca8441aae34c91318b6ad9e2049885af8dc/src%2Ftest%2Frustdoc%2Fissue-23207.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-23207.rs?ref=445faca8441aae34c91318b6ad9e2049885af8dc", "patch": "@@ -10,6 +10,7 @@\n \n // aux-build:issue-23207-1.rs\n // aux-build:issue-23207-2.rs\n+// ignore-android\n \n extern crate issue_23207_2;\n "}]}