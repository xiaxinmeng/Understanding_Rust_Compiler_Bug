{"sha": "66eb109070a824057e61571bc2b2714cad6a65d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZWIxMDkwNzBhODI0MDU3ZTYxNTcxYmMyYjI3MTRjYWQ2YTY1ZDA=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-14T00:33:26Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-14T00:33:26Z"}, "message": "Properly handle generic fn calls.", "tree": {"sha": "eefc5f8c7c4da294e3202cf15756817e235619a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eefc5f8c7c4da294e3202cf15756817e235619a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66eb109070a824057e61571bc2b2714cad6a65d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66eb109070a824057e61571bc2b2714cad6a65d0", "html_url": "https://github.com/rust-lang/rust/commit/66eb109070a824057e61571bc2b2714cad6a65d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66eb109070a824057e61571bc2b2714cad6a65d0/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a27734a7b7657e28baad2505aab39a962028108", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a27734a7b7657e28baad2505aab39a962028108", "html_url": "https://github.com/rust-lang/rust/commit/1a27734a7b7657e28baad2505aab39a962028108"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "2b5c4ffa2fdf4c0fef2fab964cd58b1ecd0c2ef3", "filename": "src/interpreter.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66eb109070a824057e61571bc2b2714cad6a65d0/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb109070a824057e61571bc2b2714cad6a65d0/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=66eb109070a824057e61571bc2b2714cad6a65d0", "patch": "@@ -1,7 +1,7 @@\n use rustc::middle::const_eval;\n use rustc::middle::def_id::DefId;\n use rustc::middle::ty::{self, TyCtxt};\n-use rustc::middle::subst::Substs;\n+use rustc::middle::subst::{Subst, Substs};\n use rustc::mir::mir_map::MirMap;\n use rustc::mir::repr as mir;\n use rustc::util::nodemap::DefIdMap;\n@@ -102,6 +102,7 @@ struct Interpreter<'a, 'tcx: 'a> {\n     mir_cache: RefCell<DefIdMap<Rc<mir::Mir<'tcx>>>>,\n     memory: Memory,\n     stack: Vec<Frame<'a, 'tcx>>,\n+    substs_stack: Vec<&'tcx Substs<'tcx>>,\n }\n \n impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n@@ -112,6 +113,7 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n             mir_cache: RefCell::new(DefIdMap()),\n             memory: Memory::new(),\n             stack: Vec::new(),\n+            substs_stack: vec![tcx.mk_substs(Substs::empty())],\n         }\n     }\n \n@@ -238,7 +240,8 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                     let func_ty = self.current_frame().mir.operand_ty(self.tcx, func);\n \n                     match func_ty.sty {\n-                        ty::TyFnDef(def_id, _, _) => {\n+                        ty::TyFnDef(def_id, substs, _) => {\n+                            self.substs_stack.push(substs);\n                             let mir = self.load_mir(def_id);\n                             try!(self.call(mir, args, ptr));\n                         }\n@@ -261,6 +264,7 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n         }\n \n         self.pop_stack_frame();\n+        self.substs_stack.pop();\n         Ok(())\n     }\n \n@@ -450,7 +454,9 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n     // TODO(tsion): Cache these outputs.\n     fn ty_to_repr(&self, ty: ty::Ty<'tcx>) -> Repr {\n         use syntax::ast::IntTy;\n-        match ty.sty {\n+        let substs = self.substs_stack.last().unwrap();\n+\n+        match ty.subst(self.tcx, substs).sty {\n             ty::TyBool => Repr::Bool,\n \n             ty::TyInt(IntTy::Is) => unimplemented!(),"}, {"sha": "56f5237113dbfcc476cdf2965fad762bb3147a5d", "filename": "test/calls.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66eb109070a824057e61571bc2b2714cad6a65d0/test%2Fcalls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66eb109070a824057e61571bc2b2714cad6a65d0/test%2Fcalls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fcalls.rs?ref=66eb109070a824057e61571bc2b2714cad6a65d0", "patch": "@@ -21,6 +21,12 @@ fn factorial_recursive() -> i64 {\n     fact(10)\n }\n \n+#[miri_run]\n+fn call_generic() -> (i16, bool) {\n+    fn id<T>(t: T) -> T { t }\n+    (id(42), id(true))\n+}\n+\n // Test calling a very simple function from the standard library.\n #[miri_run]\n fn cross_crate_fn_call() -> i64 {"}]}