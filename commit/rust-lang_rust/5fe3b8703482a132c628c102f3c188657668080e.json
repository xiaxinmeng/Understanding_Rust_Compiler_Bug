{"sha": "5fe3b8703482a132c628c102f3c188657668080e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZTNiODcwMzQ4MmExMzJjNjI4YzEwMmYzYzE4ODY1NzY2ODA4MGU=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-03-13T05:59:16Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-03-13T06:58:31Z"}, "message": "Get rid of the garbage produced by getObjectFromId\n\nThere is no reason for this function to return an object,\nsince it is always used for getting at the name anyhow.\nIt's used in the inner loop for some popular functions,\nso we want to avoid allocating in it.", "tree": {"sha": "2bfdec5ec46d5a1cf7094039e9a50b34db41e8c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bfdec5ec46d5a1cf7094039e9a50b34db41e8c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fe3b8703482a132c628c102f3c188657668080e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe3b8703482a132c628c102f3c188657668080e", "html_url": "https://github.com/rust-lang/rust/commit/5fe3b8703482a132c628c102f3c188657668080e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fe3b8703482a132c628c102f3c188657668080e/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d76b4ca52a65d63ab83d82d6630f1df8ec05a93", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d76b4ca52a65d63ab83d82d6630f1df8ec05a93", "html_url": "https://github.com/rust-lang/rust/commit/4d76b4ca52a65d63ab83d82d6630f1df8ec05a93"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "24170837e3aa77a87046e37f25c491e194d89160", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5fe3b8703482a132c628c102f3c188657668080e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/5fe3b8703482a132c628c102f3c188657668080e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=5fe3b8703482a132c628c102f3c188657668080e", "patch": "@@ -833,11 +833,11 @@ function defocusSearchBar() {\n                 };\n             }\n \n-            function getObjectFromId(id) {\n+            function getObjectNameFromId(id) {\n                 if (typeof id === \"number\") {\n-                    return searchIndex[id];\n+                    return searchIndex[id].name;\n                 }\n-                return {'name': id};\n+                return id;\n             }\n \n             function checkGenerics(obj, val) {\n@@ -854,9 +854,9 @@ function defocusSearchBar() {\n                         var vlength = val.generics.length;\n                         for (var y = 0; y < vlength; ++y) {\n                             var lev = { pos: -1, lev: MAX_LEV_DISTANCE + 1};\n-                            var firstGeneric = getObjectFromId(val.generics[y]).name;\n+                            var firstGeneric = getObjectNameFromId(val.generics[y]);\n                             for (var x = 0, elength = elems.length; x < elength; ++x) {\n-                                var tmp_lev = levenshtein(getObjectFromId(elems[x]).name,\n+                                var tmp_lev = levenshtein(getObjectNameFromId(elems[x]),\n                                                                           firstGeneric);\n                                 if (tmp_lev < lev.lev) {\n                                     lev.lev = tmp_lev;\n@@ -892,10 +892,10 @@ function defocusSearchBar() {\n                                 len = val.generics.length;\n                                 for (y = 0; allFound === true && y < len; ++y) {\n                                     allFound = false;\n-                                    firstGeneric = getObjectFromId(val.generics[y]).name;\n+                                    firstGeneric = getObjectNameFromId(val.generics[y]);\n                                     e_len = elems.length;\n                                     for (x = 0; allFound === false && x < e_len; ++x) {\n-                                        allFound = getObjectFromId(elems[x]).name === firstGeneric;\n+                                        allFound = getObjectNameFromId(elems[x]) === firstGeneric;\n                                     }\n                                     if (allFound === true) {\n                                         elems.splice(x - 1, 1);"}]}