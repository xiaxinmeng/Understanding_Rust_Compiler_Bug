{"sha": "ff6754c68ec293d46eb294f3b7efeca8300b2251", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNjc1NGM2OGVjMjkzZDQ2ZWIyOTRmM2I3ZWZlY2E4MzAwYjIyNTE=", "commit": {"author": {"name": "Maxim Nazarenko", "email": "nz.phone@mail.ru", "date": "2018-02-27T21:34:38Z"}, "committer": {"name": "Maxim Nazarenko", "email": "nz.phone@mail.ru", "date": "2018-02-27T21:34:38Z"}, "message": "fix tidy checks", "tree": {"sha": "ca2e9a9166d72100d0ddc31878aa1855c65add89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca2e9a9166d72100d0ddc31878aa1855c65add89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff6754c68ec293d46eb294f3b7efeca8300b2251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff6754c68ec293d46eb294f3b7efeca8300b2251", "html_url": "https://github.com/rust-lang/rust/commit/ff6754c68ec293d46eb294f3b7efeca8300b2251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff6754c68ec293d46eb294f3b7efeca8300b2251/comments", "author": {"login": "NovemberZulu", "id": 897004, "node_id": "MDQ6VXNlcjg5NzAwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/897004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NovemberZulu", "html_url": "https://github.com/NovemberZulu", "followers_url": "https://api.github.com/users/NovemberZulu/followers", "following_url": "https://api.github.com/users/NovemberZulu/following{/other_user}", "gists_url": "https://api.github.com/users/NovemberZulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/NovemberZulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NovemberZulu/subscriptions", "organizations_url": "https://api.github.com/users/NovemberZulu/orgs", "repos_url": "https://api.github.com/users/NovemberZulu/repos", "events_url": "https://api.github.com/users/NovemberZulu/events{/privacy}", "received_events_url": "https://api.github.com/users/NovemberZulu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "NovemberZulu", "id": 897004, "node_id": "MDQ6VXNlcjg5NzAwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/897004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NovemberZulu", "html_url": "https://github.com/NovemberZulu", "followers_url": "https://api.github.com/users/NovemberZulu/followers", "following_url": "https://api.github.com/users/NovemberZulu/following{/other_user}", "gists_url": "https://api.github.com/users/NovemberZulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/NovemberZulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NovemberZulu/subscriptions", "organizations_url": "https://api.github.com/users/NovemberZulu/orgs", "repos_url": "https://api.github.com/users/NovemberZulu/repos", "events_url": "https://api.github.com/users/NovemberZulu/events{/privacy}", "received_events_url": "https://api.github.com/users/NovemberZulu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d", "html_url": "https://github.com/rust-lang/rust/commit/50f5ea919231b41b7d8ccb1023b4dc0fd6e6730d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6f18b8466a665948b36f365afb7d5033eddcac7a", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff6754c68ec293d46eb294f3b7efeca8300b2251/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6754c68ec293d46eb294f3b7efeca8300b2251/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=ff6754c68ec293d46eb294f3b7efeca8300b2251", "patch": "@@ -1166,12 +1166,12 @@ impl<'a, T: ?Sized + fmt::Display> fmt::Display for RefMut<'a, T> {\n /// `Mutex`, etc, you need to turn these optimizations off. `UnsafeCell` is the only legal way\n /// to do this. When `UnsafeCell<T>` itself is immutably aliased, it is still safe to obtain\n /// a mutable reference to its interior and/or to mutate the interior. However, the abstraction\n-/// designer must ensure that any active mutable references to the interior obtained this way does \n-/// not co-exist with other active references to the interior, either mutable or not. This is often \n+/// designer must ensure that any active mutable references to the interior obtained this way does\n+/// not co-exist with other active references to the interior, either mutable or not. This is often\n /// done via runtime checks. Naturally, several active immutable references to the interior can \n /// co-exits with each other (but not with a mutable reference).\n ///\n-/// To put it in other words, if a mutable reference to the contents is active, no other references \n+/// To put it in other words, if a mutable reference to the contents is active, no other references\n /// can be active at the same time, and if an immutable reference to the contents is active, then\n /// only other immutable reference may be active. \n ///"}]}