{"sha": "5e47cd4a1784bd9d86a3f5a413d606e938679044", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNDdjZDRhMTc4NGJkOWQ4NmEzZjVhNDEzZDYwNmU5Mzg2NzkwNDQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-16T18:19:43Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-16T18:28:22Z"}, "message": "Fix rebase\n\nMove some code into `build_reduced_graph.rs` to keep `BuildReducedGraphVisitor` it private\nAlso move the def collector call to `build_reduced_graph.rs`, it belongs there.", "tree": {"sha": "ed8d206b645e7d84372828164e2425b7d33e28cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed8d206b645e7d84372828164e2425b7d33e28cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e47cd4a1784bd9d86a3f5a413d606e938679044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e47cd4a1784bd9d86a3f5a413d606e938679044", "html_url": "https://github.com/rust-lang/rust/commit/5e47cd4a1784bd9d86a3f5a413d606e938679044", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e47cd4a1784bd9d86a3f5a413d606e938679044/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab4cc2db56c0985ff5a0eb722898d8f45186d5aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab4cc2db56c0985ff5a0eb722898d8f45186d5aa", "html_url": "https://github.com/rust-lang/rust/commit/ab4cc2db56c0985ff5a0eb722898d8f45186d5aa"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "1510d74babb6d8b17abe6213e2f4eb5a4f2385e1", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5e47cd4a1784bd9d86a3f5a413d606e938679044/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e47cd4a1784bd9d86a3f5a413d606e938679044/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=5e47cd4a1784bd9d86a3f5a413d606e938679044", "patch": "@@ -16,6 +16,7 @@ use crate::{ResolutionError, Determinacy, PathResult, CrateLint};\n use rustc::bug;\n use rustc::hir::def::{self, *};\n use rustc::hir::def_id::{CRATE_DEF_INDEX, LOCAL_CRATE, DefId};\n+use rustc::hir::map::DefCollector;\n use rustc::ty;\n use rustc::middle::cstore::CrateStore;\n use rustc_metadata::cstore::LoadedMacro;\n@@ -162,10 +163,20 @@ impl<'a> Resolver<'a> {\n     crate fn build_reduced_graph(\n         &mut self, fragment: &AstFragment, parent_scope: ParentScope<'a>\n     ) -> LegacyScope<'a> {\n+        fragment.visit_with(&mut DefCollector::new(&mut self.definitions, parent_scope.expansion));\n         let mut visitor = BuildReducedGraphVisitor { r: self, parent_scope };\n         fragment.visit_with(&mut visitor);\n         visitor.parent_scope.legacy\n     }\n+\n+    crate fn build_reduced_graph_external(&mut self, module: Module<'a>) {\n+        let def_id = module.def_id().expect(\"unpopulated module without a def-id\");\n+        for child in self.cstore.item_children_untracked(def_id, self.session) {\n+            let child = child.map_id(|_| panic!(\"unexpected id\"));\n+            BuildReducedGraphVisitor { r: self, parent_scope: ParentScope::module(module) }\n+                .build_reduced_graph_for_external_crate_res(child);\n+        }\n+    }\n }\n \n struct BuildReducedGraphVisitor<'a, 'b> {"}, {"sha": "12c4f5bfe8e617f8fb538d147c4297ae4d55a279", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5e47cd4a1784bd9d86a3f5a413d606e938679044/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e47cd4a1784bd9d86a3f5a413d606e938679044/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=5e47cd4a1784bd9d86a3f5a413d606e938679044", "patch": "@@ -59,7 +59,6 @@ use std::collections::BTreeSet;\n use rustc_data_structures::ptr_key::PtrKey;\n use rustc_data_structures::sync::Lrc;\n \n-use build_reduced_graph::BuildReducedGraphVisitor;\n use diagnostics::{Suggestion, ImportSuggestion};\n use diagnostics::{find_span_of_binding_until_next_binding, extend_span_to_previous_binding};\n use late::{PathSource, Rib, RibKind::*};\n@@ -1261,12 +1260,7 @@ impl<'a> Resolver<'a> {\n     fn resolutions(&mut self, module: Module<'a>) -> &'a Resolutions<'a> {\n         if module.populate_on_access.get() {\n             module.populate_on_access.set(false);\n-            let def_id = module.def_id().expect(\"unpopulated module without a def-id\");\n-            for child in self.cstore.item_children_untracked(def_id, self.session) {\n-                let child = child.map_id(|_| panic!(\"unexpected id\"));\n-                BuildReducedGraphVisitor { parent_scope: self.dummy_parent_scope(), r: self }\n-                    .build_reduced_graph_for_external_crate_res(module, child);\n-            }\n+            self.build_reduced_graph_external(module);\n         }\n         &module.lazy_resolutions\n     }"}, {"sha": "6f49377c187aa91a8103159d65c7c41cedb0a80f", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e47cd4a1784bd9d86a3f5a413d606e938679044/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e47cd4a1784bd9d86a3f5a413d606e938679044/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=5e47cd4a1784bd9d86a3f5a413d606e938679044", "patch": "@@ -8,7 +8,6 @@ use crate::{ModuleOrUniformRoot, KNOWN_TOOLS};\n use crate::Namespace::*;\n use crate::resolve_imports::ImportResolver;\n use rustc::hir::def::{self, DefKind, NonMacroAttrKind};\n-use rustc::hir::map::DefCollector;\n use rustc::middle::stability;\n use rustc::{ty, lint, span_bug};\n use syntax::ast::{self, Ident};\n@@ -131,7 +130,6 @@ impl<'a> base::Resolver for Resolver<'a> {\n         parent_scope.module.unresolved_invocations.borrow_mut().extend(derives);\n \n         // Integrate the new AST fragment into all the definition and module structures.\n-        fragment.visit_with(&mut DefCollector::new(&mut self.definitions, expansion));\n         let output_legacy_scope = self.build_reduced_graph(fragment, parent_scope);\n         self.output_legacy_scopes.insert(expansion, output_legacy_scope);\n     }"}]}