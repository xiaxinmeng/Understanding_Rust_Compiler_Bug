{"sha": "fe683dfb80498fa3336c6f5f96b6b82917ac08b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNjgzZGZiODA0OThmYTMzMzZjNmY1Zjk2YjZiODI5MTdhYzA4YjM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-18T00:46:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-18T00:46:50Z"}, "message": "rt: Get rid of the valgrind guard bytes at the end of the stack\n\nPreventing us from writing beyond our allocations is _what valgrind does_,\nso telling valgrind not to let us write to the end of the stack isn't\nbuying anything.", "tree": {"sha": "6a3c95ac14609fcfbc0aba9f967f3bf01c2188c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a3c95ac14609fcfbc0aba9f967f3bf01c2188c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe683dfb80498fa3336c6f5f96b6b82917ac08b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe683dfb80498fa3336c6f5f96b6b82917ac08b3", "html_url": "https://github.com/rust-lang/rust/commit/fe683dfb80498fa3336c6f5f96b6b82917ac08b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe683dfb80498fa3336c6f5f96b6b82917ac08b3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00be34608914681e9a0a14611fc5ced6cffa32ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/00be34608914681e9a0a14611fc5ced6cffa32ec", "html_url": "https://github.com/rust-lang/rust/commit/00be34608914681e9a0a14611fc5ced6cffa32ec"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "0f5a6904ff17dba028c61b3599a0af40908ecd08", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fe683dfb80498fa3336c6f5f96b6b82917ac08b3/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/fe683dfb80498fa3336c6f5f96b6b82917ac08b3/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=fe683dfb80498fa3336c6f5f96b6b82917ac08b3", "patch": "@@ -15,22 +15,15 @@\n \n #include \"globals.h\"\n \n-// Each stack gets some guard bytes that valgrind will verify we don't touch\n-#ifndef NVALGRIND\n-#define STACK_NOACCESS_SIZE 16\n-#else\n-#define STACK_NOACCESS_SIZE 0\n-#endif\n-\n // The amount of extra space at the end of each stack segment, available\n // to the rt, compiler and dynamic linker for running small functions\n // FIXME: We want this to be 128 but need to slim the red zone calls down\n #ifdef __i386__\n-#define RED_ZONE_SIZE (65536 + STACK_NOACCESS_SIZE)\n+#define RED_ZONE_SIZE 65536\n #endif\n \n #ifdef __x86_64__\n-#define RED_ZONE_SIZE (65536 + STACK_NOACCESS_SIZE)\n+#define RED_ZONE_SIZE 65536\n #endif\n \n // Stack size\n@@ -80,19 +73,11 @@ config_valgrind_stack(stk_seg *stk) {\n     // caused valgrind to consider the whole thing inaccessible.\n     size_t sz = stk->end - (uintptr_t)&stk->data[0];\n     VALGRIND_MAKE_MEM_UNDEFINED(stk->data, sz);\n-\n-    // Establish some guard bytes so valgrind will tell\n-    // us if we run off the end of the stack\n-    VALGRIND_MAKE_MEM_NOACCESS(stk->data, STACK_NOACCESS_SIZE);\n #endif\n }\n \n static void\n unconfig_valgrind_stack(stk_seg *stk) {\n-#ifndef NVALGRIND\n-    // Make the guard bytes accessible again, but undefined\n-    VALGRIND_MAKE_MEM_UNDEFINED(stk->data, STACK_NOACCESS_SIZE);\n-#endif\n VALGRIND_STACK_DEREGISTER(stk->valgrind_id);\n }\n "}]}