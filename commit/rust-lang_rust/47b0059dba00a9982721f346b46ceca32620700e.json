{"sha": "47b0059dba00a9982721f346b46ceca32620700e", "node_id": "C_kwDOAAsO6NoAKDQ3YjAwNTlkYmEwMGE5OTgyNzIxZjM0NmI0NmNlY2EzMjYyMDcwMGU", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-30T02:59:49Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-30T18:15:21Z"}, "message": "rustdoc: Document that `Crate` is always local", "tree": {"sha": "ecd9706942200ffc45b3fd5fa2222836441e2060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecd9706942200ffc45b3fd5fa2222836441e2060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47b0059dba00a9982721f346b46ceca32620700e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47b0059dba00a9982721f346b46ceca32620700e", "html_url": "https://github.com/rust-lang/rust/commit/47b0059dba00a9982721f346b46ceca32620700e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47b0059dba00a9982721f346b46ceca32620700e/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d47d93be38911c365b11ad36536e4ed926fc76", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d47d93be38911c365b11ad36536e4ed926fc76", "html_url": "https://github.com/rust-lang/rust/commit/27d47d93be38911c365b11ad36536e4ed926fc76"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c0ceb9a09f404d42dc5645efa8ebc3ca72d11e4a", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47b0059dba00a9982721f346b46ceca32620700e/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b0059dba00a9982721f346b46ceca32620700e/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=47b0059dba00a9982721f346b46ceca32620700e", "patch": "@@ -113,6 +113,7 @@ impl From<DefId> for ItemId {\n     }\n }\n \n+/// The crate currently being documented.\n #[derive(Clone, Debug)]\n crate struct Crate {\n     crate name: Symbol,\n@@ -142,6 +143,8 @@ crate struct ExternalCrate {\n }\n \n impl ExternalCrate {\n+    const LOCAL: Self = Self { crate_num: LOCAL_CRATE };\n+\n     #[inline]\n     crate fn def_id(&self) -> DefId {\n         DefId { krate: self.crate_num, index: CRATE_DEF_INDEX }"}]}