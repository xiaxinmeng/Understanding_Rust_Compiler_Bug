{"sha": "6f3706ea71a89a431acf7f84573b87c2ac98b0c7", "node_id": "C_kwDOAAsO6NoAKDZmMzcwNmVhNzFhODlhNDMxYWNmN2Y4NDU3M2I4N2MyYWM5OGIwYzc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-17T21:21:27Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-18T19:49:40Z"}, "message": "Pretty placeholders using their names", "tree": {"sha": "f368516dae7ea14d2f5a75fa30e57bbbc679bd87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f368516dae7ea14d2f5a75fa30e57bbbc679bd87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f3706ea71a89a431acf7f84573b87c2ac98b0c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3706ea71a89a431acf7f84573b87c2ac98b0c7", "html_url": "https://github.com/rust-lang/rust/commit/6f3706ea71a89a431acf7f84573b87c2ac98b0c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f3706ea71a89a431acf7f84573b87c2ac98b0c7/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec40b1a3938ea0f7ae27b4bffe62bd41dc8015af", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec40b1a3938ea0f7ae27b4bffe62bd41dc8015af", "html_url": "https://github.com/rust-lang/rust/commit/ec40b1a3938ea0f7ae27b4bffe62bd41dc8015af"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "a101127104de812d83cff116dbfce975e9d9bd8a", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f3706ea71a89a431acf7f84573b87c2ac98b0c7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3706ea71a89a431acf7f84573b87c2ac98b0c7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=6f3706ea71a89a431acf7f84573b87c2ac98b0c7", "patch": "@@ -735,7 +735,10 @@ pub trait PrettyPrinter<'tcx>:\n                     p!(print(data))\n                 }\n             }\n-            ty::Placeholder(placeholder) => p!(write(\"Placeholder({:?})\", placeholder)),\n+            ty::Placeholder(placeholder) => match placeholder.name {\n+                ty::BoundTyKind::Anon(_) => p!(write(\"Placeholder({:?})\", placeholder)),\n+                ty::BoundTyKind::Param(_, name) => p!(write(\"{}\", name)),\n+            },\n             ty::Alias(ty::Opaque, ty::AliasTy { def_id, substs, .. }) => {\n                 // We use verbose printing in 'NO_QUERIES' mode, to\n                 // avoid needing to call `predicates_of`. This should"}, {"sha": "dfc800c8e7e1213811489a12af5ddde1463b342e", "filename": "tests/ui/traits/non_lifetime_binders/bad-sized-cond.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f3706ea71a89a431acf7f84573b87c2ac98b0c7/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f3706ea71a89a431acf7f84573b87c2ac98b0c7/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.rs?ref=6f3706ea71a89a431acf7f84573b87c2ac98b0c7", "patch": "@@ -18,4 +18,6 @@ fn main() {\n     //~^ ERROR the size for values of type `V` cannot be known at compilation time\n \n     bar();\n+    //~^ ERROR the size for values of type `V` cannot be known at compilation time\n+    //~| ERROR `V` is not an iterator\n }"}, {"sha": "6480e490e8b307fffdd62f6e13c001782ad429f5", "filename": "tests/ui/traits/non_lifetime_binders/bad-sized-cond.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f3706ea71a89a431acf7f84573b87c2ac98b0c7/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f3706ea71a89a431acf7f84573b87c2ac98b0c7/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.stderr?ref=6f3706ea71a89a431acf7f84573b87c2ac98b0c7", "patch": "@@ -23,13 +23,13 @@ LL | where\n LL |     for<V> V: Sized,\n    |               ^^^^^ required by this bound in `foo`\n \n-error[E0277]: the size for values of type `Placeholder(Placeholder { universe: U3, name: Param(DefId(0:6 ~ bad_sized_cond[9450]::bar::V), \"V\") })` cannot be known at compilation time\n+error[E0277]: the size for values of type `V` cannot be known at compilation time\n   --> $DIR/bad-sized-cond.rs:20:5\n    |\n LL |     bar();\n    |     ^^^ doesn't have a size known at compile-time\n    |\n-   = help: the trait `Sized` is not implemented for `Placeholder(Placeholder { universe: U3, name: Param(DefId(0:6 ~ bad_sized_cond[9450]::bar::V), \"V\") })`\n+   = help: the trait `Sized` is not implemented for `V`\n    = note: required for `V` to implement `IntoIterator`\n note: required by a bound in `bar`\n   --> $DIR/bad-sized-cond.rs:12:15\n@@ -40,13 +40,13 @@ LL | where\n LL |     for<V> V: IntoIterator,\n    |               ^^^^^^^^^^^^ required by this bound in `bar`\n \n-error[E0277]: `Placeholder(Placeholder { universe: U3, name: Param(DefId(0:6 ~ bad_sized_cond[9450]::bar::V), \"V\") })` is not an iterator\n+error[E0277]: `V` is not an iterator\n   --> $DIR/bad-sized-cond.rs:20:5\n    |\n LL |     bar();\n-   |     ^^^ `Placeholder(Placeholder { universe: U3, name: Param(DefId(0:6 ~ bad_sized_cond[9450]::bar::V), \"V\") })` is not an iterator\n+   |     ^^^ `V` is not an iterator\n    |\n-   = help: the trait `Iterator` is not implemented for `Placeholder(Placeholder { universe: U3, name: Param(DefId(0:6 ~ bad_sized_cond[9450]::bar::V), \"V\") })`\n+   = help: the trait `Iterator` is not implemented for `V`\n    = note: required for `V` to implement `IntoIterator`\n note: required by a bound in `bar`\n   --> $DIR/bad-sized-cond.rs:12:15"}]}