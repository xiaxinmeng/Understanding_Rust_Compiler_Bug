{"sha": "0f3dcdc3aad5527049c6cfcfae8bd3d697c26447", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmM2RjZGMzYWFkNTUyNzA0OWM2Y2ZjZmFlOGJkM2Q2OTdjMjY0NDc=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2018-12-27T08:54:19Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2018-12-30T07:20:49Z"}, "message": "Document known problems", "tree": {"sha": "15fee554128406f9173c852ec5cc983024f1596c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15fee554128406f9173c852ec5cc983024f1596c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447", "html_url": "https://github.com/rust-lang/rust/commit/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff", "html_url": "https://github.com/rust-lang/rust/commit/ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff"}], "stats": {"total": 43, "additions": 24, "deletions": 19}, "files": [{"sha": "d08a89314199e751ca1c0f251b38fdb07e363aa0", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=0f3dcdc3aad5527049c6cfcfae8bd3d697c26447", "patch": "@@ -25,7 +25,13 @@ use syntax_pos::symbol::keywords::SelfUpper;\n /// name\n /// feels inconsistent.\n ///\n-/// **Known problems:** None.\n+/// **Known problems:**\n+/// - Does not trigger within locally defined macros (#2098)\n+/// - False positive when using associated types (#2843)\n+/// - False positives in some situations when using generics (#3410)\n+/// - False positive when type from outer function can't be used (#3463)\n+/// - Does not diagnose tuple structs (#3498)\n+/// - Does not trigger in lifetimed struct\n ///\n /// **Example:**\n /// ```rust"}, {"sha": "561d2418228e2746ba284f1bd124975a6a4a5138", "filename": "tests/ui/use_self.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447/tests%2Fui%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447/tests%2Fui%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.rs?ref=0f3dcdc3aad5527049c6cfcfae8bd3d697c26447", "patch": "@@ -51,8 +51,6 @@ mod better {\n     }\n }\n \n-//todo the lint does not handle lifetimed struct\n-//the following module should trigger the lint on the third method only\n mod lifetimes {\n     struct Foo<'a> {\n         foo_str: &'a str,\n@@ -69,7 +67,8 @@ mod lifetimes {\n             Foo { foo_str: \"foo\" }\n         }\n \n-        // `Self` is applicable here\n+        // TODO: the lint does not handle lifetimed struct\n+        // `Self` should be applicable here\n         fn clone(&self) -> Foo<'a> {\n             Foo { foo_str: self.foo_str }\n         }"}, {"sha": "bb81ad799005f6f25f53ef817451ac7a3f04bf9b", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0f3dcdc3aad5527049c6cfcfae8bd3d697c26447/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=0f3dcdc3aad5527049c6cfcfae8bd3d697c26447", "patch": "@@ -37,91 +37,91 @@ LL |             Foo::new()\n    |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:96:22\n+  --> $DIR/use_self.rs:95:22\n    |\n LL |         fn refs(p1: &Bad) -> &Bad {\n    |                      ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:96:31\n+  --> $DIR/use_self.rs:95:31\n    |\n LL |         fn refs(p1: &Bad) -> &Bad {\n    |                               ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:100:37\n+  --> $DIR/use_self.rs:99:37\n    |\n LL |         fn ref_refs<'a>(p1: &'a &'a Bad) -> &'a &'a Bad {\n    |                                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:100:53\n+  --> $DIR/use_self.rs:99:53\n    |\n LL |         fn ref_refs<'a>(p1: &'a &'a Bad) -> &'a &'a Bad {\n    |                                                     ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:104:30\n+  --> $DIR/use_self.rs:103:30\n    |\n LL |         fn mut_refs(p1: &mut Bad) -> &mut Bad {\n    |                              ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:104:43\n+  --> $DIR/use_self.rs:103:43\n    |\n LL |         fn mut_refs(p1: &mut Bad) -> &mut Bad {\n    |                                           ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:108:28\n+  --> $DIR/use_self.rs:107:28\n    |\n LL |         fn nested(_p1: Box<Bad>, _p2: (&u8, &Bad)) {}\n    |                            ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:108:46\n+  --> $DIR/use_self.rs:107:46\n    |\n LL |         fn nested(_p1: Box<Bad>, _p2: (&u8, &Bad)) {}\n    |                                              ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:110:20\n+  --> $DIR/use_self.rs:109:20\n    |\n LL |         fn vals(_: Bad) -> Bad {\n    |                    ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:110:28\n+  --> $DIR/use_self.rs:109:28\n    |\n LL |         fn vals(_: Bad) -> Bad {\n    |                            ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:111:13\n+  --> $DIR/use_self.rs:110:13\n    |\n LL |             Bad::default()\n    |             ^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:116:23\n+  --> $DIR/use_self.rs:115:23\n    |\n LL |         type Output = Bad;\n    |                       ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:118:27\n+  --> $DIR/use_self.rs:117:27\n    |\n LL |         fn mul(self, rhs: Bad) -> Bad {\n    |                           ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:118:35\n+  --> $DIR/use_self.rs:117:35\n    |\n LL |         fn mul(self, rhs: Bad) -> Bad {\n    |                                   ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n-  --> $DIR/use_self.rs:210:56\n+  --> $DIR/use_self.rs:209:56\n    |\n LL |         fn bad(foos: &[Self]) -> impl Iterator<Item = &Foo> {\n    |                                                        ^^^ help: use the applicable keyword: `Self`"}]}