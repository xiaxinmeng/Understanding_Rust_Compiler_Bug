{"sha": "cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiY2IxOTFiOTcwMzYwZTNiMzJhOGJlN2Q4NmQ1YzZlYzJiOGU3Yzk=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-01-26T16:45:21Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-01-26T16:45:21Z"}, "message": "Remove comment about `UnsafeCell`s and `static`\n\nIt has actually been safe to put an `UnsafeCell` into a non-mutable `static`\nsince the `const` change.", "tree": {"sha": "96dfa9e7555c6161c760e69327a25c6fbd7c3aa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96dfa9e7555c6161c760e69327a25c6fbd7c3aa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9", "html_url": "https://github.com/rust-lang/rust/commit/cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edc67817a312d2c7924ae333facb9294ff751008", "url": "https://api.github.com/repos/rust-lang/rust/commits/edc67817a312d2c7924ae333facb9294ff751008", "html_url": "https://github.com/rust-lang/rust/commit/edc67817a312d2c7924ae333facb9294ff751008"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "62029a4ea010dcce457e38badc8d3d17dbda2cd4", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=cbcb191b970360e3b32a8be7d86d5c6ec2b8e7c9", "patch": "@@ -592,12 +592,6 @@ impl<'b, T> DerefMut for RefMut<'b, T> {\n /// The `UnsafeCell<T>` type is the only legal way to obtain aliasable data that is considered\n /// mutable. In general, transmuting an `&T` type into an `&mut T` is considered undefined behavior.\n ///\n-/// Although it is possible to put an `UnsafeCell<T>` into static item, it is not permitted to take\n-/// the address of the static item if the item is not declared as mutable. This rule exists because\n-/// immutable static items are stored in read-only memory, and thus any attempt to mutate their\n-/// interior can cause segfaults. Immutable static items containing `UnsafeCell<T>` instances are\n-/// still useful as read-only initializers, however, so we do not forbid them altogether.\n-///\n /// Types like `Cell<T>` and `RefCell<T>` use this type to wrap their internal data.\n ///\n /// `UnsafeCell<T>` doesn't opt-out from any marker traits, instead, types with an `UnsafeCell<T>`"}]}