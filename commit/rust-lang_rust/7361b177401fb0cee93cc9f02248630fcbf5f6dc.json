{"sha": "7361b177401fb0cee93cc9f02248630fcbf5f6dc", "node_id": "C_kwDOAAsO6NoAKDczNjFiMTc3NDAxZmIwY2VlOTNjYzlmMDIyNDg2MzBmY2JmNWY2ZGM", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-14T14:00:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-14T14:00:34Z"}, "message": "Rollup merge of #110047 - skaunov:patch-1, r=ChrisDenton\n\nAdd link to `collections` docs to `extend` trait\n\nI believe it would be useful here.", "tree": {"sha": "16c9a6d6cf1887a9d124d7737a04565680059f27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16c9a6d6cf1887a9d124d7737a04565680059f27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7361b177401fb0cee93cc9f02248630fcbf5f6dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkOVyCCRBK7hj4Ov3rIwAA8VUIAHgEjyGuD4DfQ1Eu9EGIZ5g4\noA3Guoi8kfJpzSifo0taXpUPOKKVuN1wNtFlChCQkPRnpTTddLlVYyMA7I1OoxpY\ngvVmWxL4XKDbtetBlosy6iCU7TassDjlaT1IAi6vm9Ut2Svc9fPl/KQJAUb4CM5n\n5CvAsku95quietfsdlVXIOcz93miX45hqP1rRu6Q+gCwuTRdGZYLkjpk7sKb2OCb\ndEC+qwjhmtLL/WhQwhprWRksxzbRMUdXgJZjHlJqEKAdkseUzoDzNhDbQlxq5KEW\nL1y6JBIAVWny5P9fsY2NyAjFYf/Md7f8qwiSBeymsQGw+1qEl+mRAY69DOhsVdk=\n=1qYU\n-----END PGP SIGNATURE-----\n", "payload": "tree 16c9a6d6cf1887a9d124d7737a04565680059f27\nparent 78793869d72fb21117387ee365871f61f9c6e64a\nparent 18ca509e99cb3b7741e3d1124e59adb53f87f1ea\nauthor Yuki Okushi <jtitor@2k36.org> 1681480834 +0900\ncommitter GitHub <noreply@github.com> 1681480834 +0900\n\nRollup merge of #110047 - skaunov:patch-1, r=ChrisDenton\n\nAdd link to `collections` docs to `extend` trait\n\nI believe it would be useful here.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7361b177401fb0cee93cc9f02248630fcbf5f6dc", "html_url": "https://github.com/rust-lang/rust/commit/7361b177401fb0cee93cc9f02248630fcbf5f6dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7361b177401fb0cee93cc9f02248630fcbf5f6dc/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78793869d72fb21117387ee365871f61f9c6e64a", "url": "https://api.github.com/repos/rust-lang/rust/commits/78793869d72fb21117387ee365871f61f9c6e64a", "html_url": "https://github.com/rust-lang/rust/commit/78793869d72fb21117387ee365871f61f9c6e64a"}, {"sha": "18ca509e99cb3b7741e3d1124e59adb53f87f1ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/18ca509e99cb3b7741e3d1124e59adb53f87f1ea", "html_url": "https://github.com/rust-lang/rust/commit/18ca509e99cb3b7741e3d1124e59adb53f87f1ea"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "23ed577ea609aaab2a01456428ddadf3b6a62832", "filename": "library/std/src/collections/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7361b177401fb0cee93cc9f02248630fcbf5f6dc/library%2Fstd%2Fsrc%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7361b177401fb0cee93cc9f02248630fcbf5f6dc/library%2Fstd%2Fsrc%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fmod.rs?ref=7361b177401fb0cee93cc9f02248630fcbf5f6dc", "patch": "@@ -172,7 +172,8 @@\n //!\n //! ## Iterators\n //!\n-//! Iterators are a powerful and robust mechanism used throughout Rust's\n+//! [Iterators][crate::iter]\n+//! are a powerful and robust mechanism used throughout Rust's\n //! standard libraries. Iterators provide a sequence of values in a generic,\n //! safe, efficient and convenient way. The contents of an iterator are usually\n //! *lazily* evaluated, so that only the values that are actually needed are\n@@ -252,7 +253,9 @@\n //!\n //! Several other collection methods also return iterators to yield a sequence\n //! of results but avoid allocating an entire collection to store the result in.\n-//! This provides maximum flexibility as `collect` or `extend` can be called to\n+//! This provides maximum flexibility as\n+//! [`collect`][crate::iter::Iterator::collect] or\n+//! [`extend`][crate::iter::Extend::extend] can be called to\n //! \"pipe\" the sequence into any collection if desired. Otherwise, the sequence\n //! can be looped over with a `for` loop. The iterator can also be discarded\n //! after partial use, preventing the computation of the unused items."}]}