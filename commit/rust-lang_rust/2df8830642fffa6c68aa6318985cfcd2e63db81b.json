{"sha": "2df8830642fffa6c68aa6318985cfcd2e63db81b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZjg4MzA2NDJmZmZhNmM2OGFhNjMxODk4NWNmY2QyZTYzZGI4MWI=", "commit": {"author": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2015-03-23T21:01:28Z"}, "committer": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2015-03-23T21:02:34Z"}, "message": "rustdoc: Support for \"array\" primitive\n\nImpls on `clean::Type::FixedVector` are now collected in the array\nprimitive page instead of the slice primitive page.\n\nAlso add a primitive docs for arrays to `std`.", "tree": {"sha": "75d69a6bdb9727c6ecf6c5816cec96b2e169b9af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75d69a6bdb9727c6ecf6c5816cec96b2e169b9af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2df8830642fffa6c68aa6318985cfcd2e63db81b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2df8830642fffa6c68aa6318985cfcd2e63db81b", "html_url": "https://github.com/rust-lang/rust/commit/2df8830642fffa6c68aa6318985cfcd2e63db81b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2df8830642fffa6c68aa6318985cfcd2e63db81b/comments", "author": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0aad7dd4fad8d7e2e2f877a511a637258949597", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0aad7dd4fad8d7e2e2f877a511a637258949597", "html_url": "https://github.com/rust-lang/rust/commit/b0aad7dd4fad8d7e2e2f877a511a637258949597"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "b2c23f051d5f1d1b96dd9eecd3b71915717c4078", "filename": "src/libcore/array.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=2df8830642fffa6c68aa6318985cfcd2e63db81b", "patch": "@@ -14,6 +14,8 @@\n \n #![unstable(feature = \"core\")] // not yet reviewed\n \n+#![doc(primitive = \"array\")]\n+\n use clone::Clone;\n use cmp::{PartialEq, Eq, PartialOrd, Ord, Ordering};\n use fmt;"}, {"sha": "3db51ff86a3368767ecb2305c679e32416404fda", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2df8830642fffa6c68aa6318985cfcd2e63db81b", "patch": "@@ -1322,7 +1322,8 @@ pub enum Type {\n     /// For parameterized types, so the consumer of the JSON don't go\n     /// looking for types which don't exist anywhere.\n     Generic(String),\n-    /// Primitives are just the fixed-size numeric types (plus int/uint/float), and char.\n+    /// Primitives are the fixed-size numeric types (plus int/uint/float), char,\n+    /// arrays, slices, and tuples.\n     Primitive(PrimitiveType),\n     /// extern \"ABI\" fn\n     BareFunction(Box<BareFunctionDecl>),\n@@ -1362,6 +1363,7 @@ pub enum PrimitiveType {\n     Bool,\n     Str,\n     Slice,\n+    Array,\n     PrimitiveTuple,\n }\n \n@@ -1396,6 +1398,7 @@ impl PrimitiveType {\n             \"str\" => Some(Str),\n             \"f32\" => Some(F32),\n             \"f64\" => Some(F64),\n+            \"array\" => Some(Array),\n             \"slice\" => Some(Slice),\n             \"tuple\" => Some(PrimitiveTuple),\n             _ => None,\n@@ -1440,6 +1443,7 @@ impl PrimitiveType {\n             Str => \"str\",\n             Bool => \"bool\",\n             Char => \"char\",\n+            Array => \"array\",\n             Slice => \"slice\",\n             PrimitiveTuple => \"tuple\",\n         }"}, {"sha": "0e6e008c616523f9a47dea6078179f59f54d3955", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=2df8830642fffa6c68aa6318985cfcd2e63db81b", "patch": "@@ -486,7 +486,7 @@ impl fmt::Display for clean::Type {\n                 primitive_link(f, clean::Slice, &format!(\"[{}]\", **t))\n             }\n             clean::FixedVector(ref t, ref s) => {\n-                primitive_link(f, clean::Slice,\n+                primitive_link(f, clean::PrimitiveType::Array,\n                                &format!(\"[{}; {}]\", **t, *s))\n             }\n             clean::Bottom => f.write_str(\"!\"),"}, {"sha": "2018de17e792207669c6ef3824872cd22e95c5d9", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=2df8830642fffa6c68aa6318985cfcd2e63db81b", "patch": "@@ -1026,7 +1026,8 @@ impl DocFolder for Cache {\n                 match item {\n                     clean::Item{ attrs, inner: clean::ImplItem(i), .. } => {\n                         use clean::{Primitive, Vector, ResolvedPath, BorrowedRef};\n-                        use clean::{FixedVector, Slice, Tuple, PrimitiveTuple};\n+                        use clean::PrimitiveType::{Array, Slice, PrimitiveTuple};\n+                        use clean::{FixedVector, Tuple};\n \n                         // extract relevant documentation for this impl\n                         let dox = match attrs.into_iter().find(|a| {\n@@ -1056,12 +1057,16 @@ impl DocFolder for Cache {\n                                 Some(ast_util::local_def(p.to_node_id()))\n                             }\n \n-                            // In a DST world, we may only need\n-                            // Vector/FixedVector, but for now we also pick up\n-                            // borrowed references\n-                            Vector(..) | FixedVector(..) |\n-                                BorrowedRef{ type_: box Vector(..), ..  } |\n-                                BorrowedRef{ type_: box FixedVector(..), .. } =>\n+                            FixedVector(..) |\n+                                BorrowedRef { type_: box FixedVector(..), .. } =>\n+                            {\n+                                Some(ast_util::local_def(Array.to_node_id()))\n+                            }\n+\n+                            // In a DST world, we may only need Vector, but for now we\n+                            // also pick up borrowed references\n+                            Vector(..) |\n+                                BorrowedRef{ type_: box Vector(..), ..  } =>\n                             {\n                                 Some(ast_util::local_def(Slice.to_node_id()))\n                             }"}, {"sha": "a6b8cd71a3b3d31ae2e8955993431d88b4377387", "filename": "src/libstd/array.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibstd%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibstd%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Farray.rs?ref=2df8830642fffa6c68aa6318985cfcd2e63db81b", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The fixed-size array type (`[T; n]`).\n+\n+#![doc(primitive = \"array\")]"}, {"sha": "5839e3fb63887c7747c0fbb84d2b5f7961b7ff40", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df8830642fffa6c68aa6318985cfcd2e63db81b/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=2df8830642fffa6c68aa6318985cfcd2e63db81b", "patch": "@@ -212,6 +212,9 @@ pub mod prelude;\n \n /* Primitive types */\n \n+// NB: slice and str are primitive types too, but their module docs + primitive doc pages\n+// are inlined from the public re-exports of core_collections::{slice, str} above.\n+\n #[path = \"num/float_macros.rs\"]\n #[macro_use]\n mod float_macros;\n@@ -285,8 +288,9 @@ pub mod sync;\n pub mod rt;\n mod panicking;\n \n-// Documentation for primitive types\n+// Modules that exist purely to document + host impl docs for primitive types\n \n+mod array;\n mod bool;\n mod unit;\n mod tuple;"}]}