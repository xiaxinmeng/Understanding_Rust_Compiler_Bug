{"sha": "a3bf27b1db29887b49614934105a105d1b8d09fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYmYyN2IxZGIyOTg4N2I0OTYxNDkzNDEwNWExMDVkMWI4ZDA5ZmM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-07-26T05:18:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-07-26T20:12:42Z"}, "message": "Suggest underscore when using dashes in crate namet push fork", "tree": {"sha": "cdfe2c8642eeab38388c495492305a932cb85b30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdfe2c8642eeab38388c495492305a932cb85b30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3bf27b1db29887b49614934105a105d1b8d09fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3bf27b1db29887b49614934105a105d1b8d09fc", "html_url": "https://github.com/rust-lang/rust/commit/a3bf27b1db29887b49614934105a105d1b8d09fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3bf27b1db29887b49614934105a105d1b8d09fc/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dbbd81f7ed83943b870407ef44aecf6664e7679", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dbbd81f7ed83943b870407ef44aecf6664e7679", "html_url": "https://github.com/rust-lang/rust/commit/8dbbd81f7ed83943b870407ef44aecf6664e7679"}], "stats": {"total": 78, "additions": 75, "deletions": 3}, "files": [{"sha": "6dab7865eeadb707d152bb230ed29373f2be45c5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a3bf27b1db29887b49614934105a105d1b8d09fc/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3bf27b1db29887b49614934105a105d1b8d09fc/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a3bf27b1db29887b49614934105a105d1b8d09fc", "patch": "@@ -6508,6 +6508,40 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n+    fn parse_crate_name_with_dashes(\n+        &mut self,\n+        error_msg: &str,\n+        suggestion_msg: &str,\n+    ) -> PResult<'a, ast::Ident> {\n+        let mut ident = self.parse_ident()?;\n+        let mut idents = vec![];\n+        let mut replacement = vec![];\n+        let mut fixed_crate_name = false;\n+        // Accept `extern crate name-like-this` for better diagnostics\n+        let dash = token::Token::BinOp(token::BinOpToken::Minus);\n+        if self.token == dash {  // Do not include `-` as part of the expected tokens list\n+            while self.eat(&dash) {\n+                fixed_crate_name = true;\n+                replacement.push((self.prev_span, \"_\".to_string()));\n+                idents.push(self.parse_ident()?);\n+            }\n+        }\n+        if fixed_crate_name {\n+            let fixed_name_sp = ident.span.to(idents.last().unwrap().span);\n+            let mut fixed_name = format!(\"{}\", ident.name);\n+            for part in idents {\n+                fixed_name.push_str(&format!(\"_{}\", part.name));\n+            }\n+            ident = Ident::from_str(&fixed_name).with_span_pos(fixed_name_sp);\n+\n+            let mut err = self.struct_span_err(fixed_name_sp, error_msg);\n+            err.span_label(fixed_name_sp, \"dash-separated idents are not valid\");\n+            err.multipart_suggestion(suggestion_msg, replacement);\n+            err.emit();\n+        }\n+        Ok(ident)\n+    }\n+\n     /// Parse extern crate links\n     ///\n     /// # Examples\n@@ -6519,11 +6553,15 @@ impl<'a> Parser<'a> {\n                                visibility: Visibility,\n                                attrs: Vec<Attribute>)\n                                -> PResult<'a, P<Item>> {\n-        let orig_name = self.parse_ident()?;\n+        // Accept `extern crate name-like-this` for better diagnostics\n+        let ident = self.parse_crate_name_with_dashes(\n+            \"crate name using dashes are not valid in `extern crate` statements\",\n+            \"if the original crate name uses dashes you need to use underscores in the code\",\n+        )?;\n         let (item_name, orig_name) = if let Some(rename) = self.parse_rename()? {\n-            (rename, Some(orig_name.name))\n+            (rename, Some(ident.name))\n         } else {\n-            (orig_name, None)\n+            (ident, None)\n         };\n         self.expect(&token::Semi)?;\n "}, {"sha": "70e1806a20b54acddbc58f1344367e3d7d1cd6b2", "filename": "src/test/ui/bad-crate-name.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a3bf27b1db29887b49614934105a105d1b8d09fc/src%2Ftest%2Fui%2Fbad-crate-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3bf27b1db29887b49614934105a105d1b8d09fc/src%2Ftest%2Fui%2Fbad-crate-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad-crate-name.rs?ref=a3bf27b1db29887b49614934105a105d1b8d09fc", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate krate-name-here;\n+//~^ ERROR crate name using dashes are not valid in `extern crate` statements\n+//~| ERROR can't find crate for `krate_name_here`\n+\n+fn main() {}"}, {"sha": "8348badeeeb175338fcb22ee4d2ef9c662267e18", "filename": "src/test/ui/bad-crate-name.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a3bf27b1db29887b49614934105a105d1b8d09fc/src%2Ftest%2Fui%2Fbad-crate-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3bf27b1db29887b49614934105a105d1b8d09fc/src%2Ftest%2Fui%2Fbad-crate-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad-crate-name.stderr?ref=a3bf27b1db29887b49614934105a105d1b8d09fc", "patch": "@@ -0,0 +1,19 @@\n+error: crate name using dashes are not valid in `extern crate` statements\n+  --> $DIR/bad-crate-name.rs:11:14\n+   |\n+LL | extern crate krate-name-here;\n+   |              ^^^^^^^^^^^^^^^ dash-separated idents are not valid\n+help: if the original crate name uses dashes you need to use underscores in the code\n+   |\n+LL | extern crate krate_name_here;\n+   |                   ^    ^\n+\n+error[E0463]: can't find crate for `krate_name_here`\n+  --> $DIR/bad-crate-name.rs:11:1\n+   |\n+LL | extern crate krate-name-here;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0463`."}]}