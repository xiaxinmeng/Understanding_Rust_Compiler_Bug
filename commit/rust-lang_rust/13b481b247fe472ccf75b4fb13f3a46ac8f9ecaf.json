{"sha": "13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYjQ4MWIyNDdmZTQ3MmNjZjc1YjRmYjEzZjNhNDZhYzhmOWVjYWY=", "commit": {"author": {"name": "Florian Warzecha", "email": "liketechnik@disroot.org", "date": "2020-10-23T15:11:08Z"}, "committer": {"name": "Florian Warzecha", "email": "liketechnik@disroot.org", "date": "2020-10-23T15:14:57Z"}, "message": "rename allow_internal_unstable() to rustc_allow_const_fn_unstable() in rustc_mir\n\nFollowup rename from 05f4a9a42abbbdb64d3ec4ed0ae6883c10c66e3f,\nwhich introduced `#[rustc_allow_const_fn_unstable]` for `const fn`s.", "tree": {"sha": "6447c615d1e24d5444ac9b62ac9fdbf8658bb1c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6447c615d1e24d5444ac9b62ac9fdbf8658bb1c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmbauVGD14yLN3Z9qS+jH2X+RDGAFAl+S85oACgkQS+jH2X+R\nDGA8/w//WeTc8l98AD9v8EnQgmM2NE2OebxvokOIs4WvTlDTNfSrbo0jMIoDbbYa\ncuTKDau3SG6VJ3oXK1B29lXjEFqSdFLsdMufX4MfZMLx0RXpmwkavfxoHCshnhUH\ncpVDdeVcQy491+omEGsucxn0lL5WFnk053h90Pch91Lb6Y0p/nXBPXzzs0r+3dX8\nP6Zwi2K/nSdgiwQBTb/VTeGsoVB6wGtvwpHMBA2aa5C9MwnRNUjw7PZ201Q61Hsn\ndr/0Y61GIzo5PJHUKWsstYbF6JrY0nnuzDHsLlkNIC8T6299G+3Kw91JMLuy332i\n+bePG8dPWThq1azVsPmrkA8THdprrxoUO3Flp/OCyMq83ZCU34F5X0dJ3CQMmq8A\neIuXOlT/CShIOlHyhk4+cD3FxAog5F6UHM7xifoPpkniO/KLq8nYS8tsyD51CIWu\nwBnXqmHqFXp5GZeb5Wy2b7DMzsjz3fbS1P8797zW4aaAf/z9+w8VMWOuuXEQbzE/\ntIPsf6p+BstVfP67N8sDn6WWppD55v1D75HGCtLTmoxxJtfG7gCfmGsnzON3WdE0\n/H1wM/yRYymVgaWfT5pBA/yCUaEp/Z5xWzonGA+5NPp/ATrrhBlakeVA5zhL45KT\nklDx8SepwivqJ0+GR9VXtYcvXA05yBwUAFl8oxbardGVxAACPoQ=\n=FXyW\n-----END PGP SIGNATURE-----", "payload": "tree 6447c615d1e24d5444ac9b62ac9fdbf8658bb1c2\nparent 83fbdddc99f5fc4f76e144c6d86184dd09169287\nauthor Florian Warzecha <liketechnik@disroot.org> 1603465868 +0200\ncommitter Florian Warzecha <liketechnik@disroot.org> 1603466097 +0200\n\nrename allow_internal_unstable() to rustc_allow_const_fn_unstable() in rustc_mir\n\nFollowup rename from 05f4a9a42abbbdb64d3ec4ed0ae6883c10c66e3f,\nwhich introduced `#[rustc_allow_const_fn_unstable]` for `const fn`s.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "html_url": "https://github.com/rust-lang/rust/commit/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf/comments", "author": {"login": "liketechnik", "id": 24209689, "node_id": "MDQ6VXNlcjI0MjA5Njg5", "avatar_url": "https://avatars.githubusercontent.com/u/24209689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketechnik", "html_url": "https://github.com/liketechnik", "followers_url": "https://api.github.com/users/liketechnik/followers", "following_url": "https://api.github.com/users/liketechnik/following{/other_user}", "gists_url": "https://api.github.com/users/liketechnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketechnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketechnik/subscriptions", "organizations_url": "https://api.github.com/users/liketechnik/orgs", "repos_url": "https://api.github.com/users/liketechnik/repos", "events_url": "https://api.github.com/users/liketechnik/events{/privacy}", "received_events_url": "https://api.github.com/users/liketechnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liketechnik", "id": 24209689, "node_id": "MDQ6VXNlcjI0MjA5Njg5", "avatar_url": "https://avatars.githubusercontent.com/u/24209689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liketechnik", "html_url": "https://github.com/liketechnik", "followers_url": "https://api.github.com/users/liketechnik/followers", "following_url": "https://api.github.com/users/liketechnik/following{/other_user}", "gists_url": "https://api.github.com/users/liketechnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/liketechnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liketechnik/subscriptions", "organizations_url": "https://api.github.com/users/liketechnik/orgs", "repos_url": "https://api.github.com/users/liketechnik/repos", "events_url": "https://api.github.com/users/liketechnik/events{/privacy}", "received_events_url": "https://api.github.com/users/liketechnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83fbdddc99f5fc4f76e144c6d86184dd09169287", "url": "https://api.github.com/repos/rust-lang/rust/commits/83fbdddc99f5fc4f76e144c6d86184dd09169287", "html_url": "https://github.com/rust-lang/rust/commit/83fbdddc99f5fc4f76e144c6d86184dd09169287"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "1eb06c0ef65e2db88899c7f207794d8eeb4c8e9b", "filename": "compiler/rustc_mir/src/transform/check_consts/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "patch": "@@ -77,7 +77,11 @@ pub fn is_lang_panic_fn(tcx: TyCtxt<'tcx>, def_id: DefId) -> bool {\n     Some(def_id) == tcx.lang_items().panic_fn() || Some(def_id) == tcx.lang_items().begin_panic_fn()\n }\n \n-pub fn allow_internal_unstable(tcx: TyCtxt<'tcx>, def_id: DefId, feature_gate: Symbol) -> bool {\n+pub fn rustc_allow_const_fn_unstable(\n+    tcx: TyCtxt<'tcx>,\n+    def_id: DefId,\n+    feature_gate: Symbol,\n+) -> bool {\n     let attrs = tcx.get_attrs(def_id);\n     attr::rustc_allow_const_fn_unstable(&tcx.sess, attrs)\n         .map_or(false, |mut features| features.any(|name| name == feature_gate))"}, {"sha": "30e1d0d8adc048590f3ecc40cc5389fac2e4ffbf", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=13b481b247fe472ccf75b4fb13f3a46ac8f9ecaf", "patch": "@@ -292,7 +292,11 @@ impl Validator<'mir, 'tcx> {\n \n             Status::Unstable(gate) if self.tcx.features().enabled(gate) => {\n                 let unstable_in_stable = self.ccx.is_const_stable_const_fn()\n-                    && !super::allow_internal_unstable(self.tcx, self.def_id().to_def_id(), gate);\n+                    && !super::rustc_allow_const_fn_unstable(\n+                        self.tcx,\n+                        self.def_id().to_def_id(),\n+                        gate,\n+                    );\n                 if unstable_in_stable {\n                     emit_unstable_in_stable_error(self.ccx, span, gate);\n                 }\n@@ -819,7 +823,7 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n \n                     // Otherwise, we are something const-stable calling a const-unstable fn.\n \n-                    if super::allow_internal_unstable(tcx, caller, gate) {\n+                    if super::rustc_allow_const_fn_unstable(tcx, caller, gate) {\n                         return;\n                     }\n "}]}