{"sha": "1ec60730fecfc72eb7454f2b8d37f7de7068cd20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYzYwNzMwZmVjZmM3MmViNzQ1NGYyYjhkMzdmN2RlNzA2OGNkMjA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-30T00:42:45Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-16T18:57:19Z"}, "message": "Deduplicate code for formatting `RangeEnd`", "tree": {"sha": "a9fba1ec2b7eae9f2ccfbeb8af9c3c43410a3d7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9fba1ec2b7eae9f2ccfbeb8af9c3c43410a3d7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ec60730fecfc72eb7454f2b8d37f7de7068cd20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ec60730fecfc72eb7454f2b8d37f7de7068cd20", "html_url": "https://github.com/rust-lang/rust/commit/1ec60730fecfc72eb7454f2b8d37f7de7068cd20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ec60730fecfc72eb7454f2b8d37f7de7068cd20/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be9e6af65e5cd4811725c6f29fe99b7bf6e6611d", "url": "https://api.github.com/repos/rust-lang/rust/commits/be9e6af65e5cd4811725c6f29fe99b7bf6e6611d", "html_url": "https://github.com/rust-lang/rust/commit/be9e6af65e5cd4811725c6f29fe99b7bf6e6611d"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "02b391615b621f2f2fdc04edcb97ce03748732cf", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1ec60730fecfc72eb7454f2b8d37f7de7068cd20/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec60730fecfc72eb7454f2b8d37f7de7068cd20/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=1ec60730fecfc72eb7454f2b8d37f7de7068cd20", "patch": "@@ -989,6 +989,15 @@ pub enum RangeEnd {\n     Excluded,\n }\n \n+impl fmt::Display for RangeEnd {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.write_str(match self {\n+            RangeEnd::Included => \"..=\",\n+            RangeEnd::Excluded => \"..\",\n+        })\n+    }\n+}\n+\n #[derive(RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub enum PatKind {\n     /// Represents a wildcard pattern (i.e., `_`)."}, {"sha": "636bb2ed6179c47b9d57f9c92a30fdc7e0e88e26", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1ec60730fecfc72eb7454f2b8d37f7de7068cd20/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec60730fecfc72eb7454f2b8d37f7de7068cd20/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=1ec60730fecfc72eb7454f2b8d37f7de7068cd20", "patch": "@@ -482,12 +482,9 @@ impl<'tcx> Constructor<'tcx> {\n                 // Get the right sign on the output:\n                 let ty = ty::ParamEnv::empty().and(*ty);\n                 format!(\n-                    \"{}..{}{}\",\n+                    \"{}{}{}\",\n                     ty::Const::from_bits(tcx, *lo, ty),\n-                    match range_end {\n-                        RangeEnd::Included => \"=\",\n-                        RangeEnd::Excluded => \"\",\n-                    },\n+                    range_end,\n                     ty::Const::from_bits(tcx, *hi, ty),\n                 )\n             }"}, {"sha": "7e17162dfb3ef0df1d79afabee9e8d98707b5ec4", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ec60730fecfc72eb7454f2b8d37f7de7068cd20/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ec60730fecfc72eb7454f2b8d37f7de7068cd20/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=1ec60730fecfc72eb7454f2b8d37f7de7068cd20", "patch": "@@ -312,10 +312,7 @@ impl<'tcx> fmt::Display for Pat<'tcx> {\n             }\n             PatKind::Range(PatRange { lo, hi, end }) => {\n                 write!(f, \"{}\", lo)?;\n-                match end {\n-                    RangeEnd::Included => write!(f, \"..=\")?,\n-                    RangeEnd::Excluded => write!(f, \"..\")?,\n-                }\n+                write!(f, \"{}\", end)?;\n                 write!(f, \"{}\", hi)\n             }\n             PatKind::Slice { ref prefix, ref slice, ref suffix } |"}]}