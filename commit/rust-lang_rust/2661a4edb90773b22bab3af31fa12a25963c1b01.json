{"sha": "2661a4edb90773b22bab3af31fa12a25963c1b01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NjFhNGVkYjkwNzczYjIyYmFiM2FmMzFmYTEyYTI1OTYzYzFiMDE=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-29T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-29T17:09:53Z"}, "message": "Avoid BorrowMutError with RUSTC_LOG=debug\n\n$ touch empty.rs\n$ env RUSTC_LOG=debug rustc +stage1 --crate-type=lib empty.rs\n\nFails with a `BorrowMutError` because source map files are already\nborrowed while `features_query` attempts to format a log message\ncontaining a span.\n\nRelease the borrow before the query to avoid the issue.", "tree": {"sha": "806082f747f7874d319772d0bfb808903297152a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/806082f747f7874d319772d0bfb808903297152a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2661a4edb90773b22bab3af31fa12a25963c1b01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2661a4edb90773b22bab3af31fa12a25963c1b01", "html_url": "https://github.com/rust-lang/rust/commit/2661a4edb90773b22bab3af31fa12a25963c1b01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2661a4edb90773b22bab3af31fa12a25963c1b01/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "url": "https://api.github.com/repos/rust-lang/rust/commits/a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "html_url": "https://github.com/rust-lang/rust/commit/a53fb30e3bf2655b0563da6d561c23cda5f3ec11"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "2a81737e168d4cfc1d52bf0767942a0d1ea58ad1", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2661a4edb90773b22bab3af31fa12a25963c1b01/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2661a4edb90773b22bab3af31fa12a25963c1b01/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=2661a4edb90773b22bab3af31fa12a25963c1b01", "patch": "@@ -2042,6 +2042,10 @@ fn encode_metadata_impl(tcx: TyCtxt<'_>) -> EncodedMetadata {\n     encoder.emit_raw_bytes(&[0, 0, 0, 0]);\n \n     let source_map_files = tcx.sess.source_map().files();\n+    let source_file_cache = (source_map_files[0].clone(), 0);\n+    let required_source_files = Some(GrowableBitSet::with_capacity(source_map_files.len()));\n+    drop(source_map_files);\n+\n     let hygiene_ctxt = HygieneEncodeContext::default();\n \n     let mut ecx = EncodeContext {\n@@ -2052,13 +2056,12 @@ fn encode_metadata_impl(tcx: TyCtxt<'_>) -> EncodedMetadata {\n         lazy_state: LazyState::NoNode,\n         type_shorthands: Default::default(),\n         predicate_shorthands: Default::default(),\n-        source_file_cache: (source_map_files[0].clone(), 0),\n+        source_file_cache,\n         interpret_allocs: Default::default(),\n-        required_source_files: Some(GrowableBitSet::with_capacity(source_map_files.len())),\n+        required_source_files,\n         is_proc_macro: tcx.sess.crate_types().contains(&CrateType::ProcMacro),\n         hygiene_ctxt: &hygiene_ctxt,\n     };\n-    drop(source_map_files);\n \n     // Encode the rustc version string in a predictable location.\n     rustc_version().encode(&mut ecx).unwrap();"}]}