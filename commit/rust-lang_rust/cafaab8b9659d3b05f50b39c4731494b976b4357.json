{"sha": "cafaab8b9659d3b05f50b39c4731494b976b4357", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZmFhYjhiOTY1OWQzYjA1ZjUwYjM5YzQ3MzE0OTRiOTc2YjQzNTc=", "commit": {"author": {"name": "lumenian", "email": "lumenian@gmail.com", "date": "2021-02-02T14:47:56Z"}, "committer": {"name": "lumenian", "email": "lumenian@gmail.com", "date": "2021-02-02T14:47:56Z"}, "message": "Show alias underlying type", "tree": {"sha": "a0e1c3299f56e141b535f380a5da7a1ab30bf41e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0e1c3299f56e141b535f380a5da7a1ab30bf41e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cafaab8b9659d3b05f50b39c4731494b976b4357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cafaab8b9659d3b05f50b39c4731494b976b4357", "html_url": "https://github.com/rust-lang/rust/commit/cafaab8b9659d3b05f50b39c4731494b976b4357", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cafaab8b9659d3b05f50b39c4731494b976b4357/comments", "author": {"login": "lumenian", "id": 46848997, "node_id": "MDQ6VXNlcjQ2ODQ4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/46848997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumenian", "html_url": "https://github.com/lumenian", "followers_url": "https://api.github.com/users/lumenian/followers", "following_url": "https://api.github.com/users/lumenian/following{/other_user}", "gists_url": "https://api.github.com/users/lumenian/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumenian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumenian/subscriptions", "organizations_url": "https://api.github.com/users/lumenian/orgs", "repos_url": "https://api.github.com/users/lumenian/repos", "events_url": "https://api.github.com/users/lumenian/events{/privacy}", "received_events_url": "https://api.github.com/users/lumenian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lumenian", "id": 46848997, "node_id": "MDQ6VXNlcjQ2ODQ4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/46848997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumenian", "html_url": "https://github.com/lumenian", "followers_url": "https://api.github.com/users/lumenian/followers", "following_url": "https://api.github.com/users/lumenian/following{/other_user}", "gists_url": "https://api.github.com/users/lumenian/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumenian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumenian/subscriptions", "organizations_url": "https://api.github.com/users/lumenian/orgs", "repos_url": "https://api.github.com/users/lumenian/repos", "events_url": "https://api.github.com/users/lumenian/events{/privacy}", "received_events_url": "https://api.github.com/users/lumenian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96f9f0741f0b1ba345f35637cd5b21f5fad2a354", "url": "https://api.github.com/repos/rust-lang/rust/commits/96f9f0741f0b1ba345f35637cd5b21f5fad2a354", "html_url": "https://github.com/rust-lang/rust/commit/96f9f0741f0b1ba345f35637cd5b21f5fad2a354"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "84b8883de5fcf94ef8ced43cb89af941c829950b", "filename": "crates/ide/src/display/short_label.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cafaab8b9659d3b05f50b39c4731494b976b4357/crates%2Fide%2Fsrc%2Fdisplay%2Fshort_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cafaab8b9659d3b05f50b39c4731494b976b4357/crates%2Fide%2Fsrc%2Fdisplay%2Fshort_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdisplay%2Fshort_label.rs?ref=cafaab8b9659d3b05f50b39c4731494b976b4357", "patch": "@@ -61,7 +61,11 @@ impl ShortLabel for ast::BlockExpr {\n \n impl ShortLabel for ast::TypeAlias {\n     fn short_label(&self) -> Option<String> {\n-        short_label_from_node(self, \"type \")\n+        let mut buf = short_label_from_node(self, \"type \")?;\n+        if let Some(type_ref) = self.ty() {\n+            format_to!(buf, \" = {}\", type_ref.syntax());\n+        }\n+        Some(buf)\n     }\n }\n "}]}