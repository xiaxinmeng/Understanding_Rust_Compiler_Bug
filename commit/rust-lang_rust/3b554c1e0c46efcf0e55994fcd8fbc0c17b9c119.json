{"sha": "3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNTU0YzFlMGM0NmVmY2YwZTU1OTk0ZmNkOGZiYzBjMTdiOWMxMTk=", "commit": {"author": {"name": "Elliott Slaughter", "email": "eslaughter@mozilla.com", "date": "2012-08-31T18:01:35Z"}, "committer": {"name": "Elliott Slaughter", "email": "eslaughter@mozilla.com", "date": "2012-08-31T22:10:52Z"}, "message": "rt: Add tests for box annihilator.", "tree": {"sha": "7efc8f55de0fe08a62f70226d97212d79475d1f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7efc8f55de0fe08a62f70226d97212d79475d1f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119", "html_url": "https://github.com/rust-lang/rust/commit/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119/comments", "author": null, "committer": null, "parents": [{"sha": "f022f566a437819d5b41903fa0c59471cd3c7491", "url": "https://api.github.com/repos/rust-lang/rust/commits/f022f566a437819d5b41903fa0c59471cd3c7491", "html_url": "https://github.com/rust-lang/rust/commit/f022f566a437819d5b41903fa0c59471cd3c7491"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "1f75e95483ee7599bf09ca89fbe7a24b4bfdcf9c", "filename": "src/test/run-pass/box-annihilator-shared.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119/src%2Ftest%2Frun-pass%2Fbox-annihilator-shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119/src%2Ftest%2Frun-pass%2Fbox-annihilator-shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-annihilator-shared.rs?ref=3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119", "patch": "@@ -0,0 +1,11 @@\n+extern mod rustrt {\n+    fn rust_annihilate_box(ptr: *uint);\n+}\n+\n+fn main() {\n+    unsafe {\n+        let x = @3;\n+        let p: *uint = unsafe::transmute(x);\n+        rustrt::rust_annihilate_box(p);\n+    }\n+}"}, {"sha": "ec158a48557c197cd8935b754eb69b2302ade205", "filename": "src/test/run-pass/box-annihilator-unique-vec.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119/src%2Ftest%2Frun-pass%2Fbox-annihilator-unique-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119/src%2Ftest%2Frun-pass%2Fbox-annihilator-unique-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-annihilator-unique-vec.rs?ref=3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119", "patch": "@@ -0,0 +1,11 @@\n+extern mod rustrt {\n+    fn rust_annihilate_box(ptr: *uint);\n+}\n+\n+fn main() {\n+    unsafe {\n+        let x = ~[~\"a\", ~\"b\", ~\"c\"];\n+        let p: *uint = unsafe::transmute(x);\n+        rustrt::rust_annihilate_box(p);\n+    }\n+}"}, {"sha": "cebb7407d5c03c7d4a3f6a69c72aa1956abafa4d", "filename": "src/test/run-pass/box-annihilator-unique.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119/src%2Ftest%2Frun-pass%2Fbox-annihilator-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119/src%2Ftest%2Frun-pass%2Fbox-annihilator-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-annihilator-unique.rs?ref=3b554c1e0c46efcf0e55994fcd8fbc0c17b9c119", "patch": "@@ -0,0 +1,11 @@\n+extern mod rustrt {\n+    fn rust_annihilate_box(ptr: *uint);\n+}\n+\n+fn main() {\n+    unsafe {\n+        let x = ~3;\n+        let p: *uint = unsafe::transmute(x);\n+        rustrt::rust_annihilate_box(p);\n+    }\n+}"}]}