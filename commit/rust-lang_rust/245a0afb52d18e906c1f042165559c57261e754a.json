{"sha": "245a0afb52d18e906c1f042165559c57261e754a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NWEwYWZiNTJkMThlOTA2YzFmMDQyMTY1NTU5YzU3MjYxZTc1NGE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-31T17:19:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-31T17:19:48Z"}, "message": "Rollup merge of #59506 - JohnTitor:improve-mcount, r=nagisa\n\nUse platform dependent mcount function\n\nclose #59097\n\nThis pull-request is based on #57244 and [here](https://github.com/llvm-mirror/clang/search?q=MCountName&unscoped_MCountName).\n\nr? @nagisa", "tree": {"sha": "9879c6704431e09eb600b260895d22e44f7ebc41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9879c6704431e09eb600b260895d22e44f7ebc41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/245a0afb52d18e906c1f042165559c57261e754a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcoPa1CRBK7hj4Ov3rIwAAdHIIAGeqBOAaTwBc5IPrF7v9gppZ\n2bIziAk4TccAG/fusQH6LRrEXosFNjaN49EHl6q7oxd8VLcAw8gtaAgoRfZ4DQOj\nGUW0+keP5ao5aKhe6Pl+4vJiv/pGNau9aCT4/UmRPAgEH2maIiXZWZgNqArIfZp8\nN2X986gxFEKLqevHKEhL0E44NREUUizYMUUhv3+dp5dGqZj1vSfEtwu++cA3O3fD\nesBzHRLRmioGLOfdmr2Yx8AsLJvx8Ovb9IUox+coALXFqGu0OSsrN7uD2fWz7AGH\nU5c7hRKDyWoPMxJNjR1J0VPOKbp70Szdo+xoRMbL2DxnXVbjI4VC81EAuVYOsbg=\n=qw1b\n-----END PGP SIGNATURE-----\n", "payload": "tree 9879c6704431e09eb600b260895d22e44f7ebc41\nparent dffdd8f72880cd8119fc1a68028f9c02b115a9d2\nparent 7b26a43ae51fdb3c2ec7a3407e91add212c5754e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554052788 +0200\ncommitter GitHub <noreply@github.com> 1554052788 +0200\n\nRollup merge of #59506 - JohnTitor:improve-mcount, r=nagisa\n\nUse platform dependent mcount function\n\nclose #59097\n\nThis pull-request is based on #57244 and [here](https://github.com/llvm-mirror/clang/search?q=MCountName&unscoped_MCountName).\n\nr? @nagisa\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/245a0afb52d18e906c1f042165559c57261e754a", "html_url": "https://github.com/rust-lang/rust/commit/245a0afb52d18e906c1f042165559c57261e754a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/245a0afb52d18e906c1f042165559c57261e754a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dffdd8f72880cd8119fc1a68028f9c02b115a9d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/dffdd8f72880cd8119fc1a68028f9c02b115a9d2", "html_url": "https://github.com/rust-lang/rust/commit/dffdd8f72880cd8119fc1a68028f9c02b115a9d2"}, {"sha": "7b26a43ae51fdb3c2ec7a3407e91add212c5754e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b26a43ae51fdb3c2ec7a3407e91add212c5754e", "html_url": "https://github.com/rust-lang/rust/commit/7b26a43ae51fdb3c2ec7a3407e91add212c5754e"}], "stats": {"total": 181, "additions": 141, "deletions": 40}, "files": [{"sha": "77fa34e74dd70cee88a01fbd019a6a1a2bcfe84e", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -77,9 +77,15 @@ pub fn set_instrument_function(cx: &CodegenCx<'ll, '_>, llfn: &'ll Value) {\n     if cx.sess().instrument_mcount() {\n         // Similar to `clang -pg` behavior. Handled by the\n         // `post-inline-ee-instrument` LLVM pass.\n+\n+        // The function name varies on platforms.\n+        // See test/CodeGen/mcount.c in clang.\n+        let mcount_name = CString::new(\n+            cx.sess().target.target.options.target_mcount.as_str().as_bytes()).unwrap();\n+\n         llvm::AddFunctionAttrStringValue(\n             llfn, llvm::AttributePlace::Function,\n-            const_cstr!(\"instrument-function-entry-inlined\"), const_cstr!(\"mcount\"));\n+            const_cstr!(\"instrument-function-entry-inlined\"), &mcount_name);\n     }\n }\n "}, {"sha": "b9d36c09f163646563f4a545cd4250af699decd0", "filename": "src/librustc_target/spec/aarch64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}_mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "968e82ca39fbedcaeb36e57f6da867543771e393", "filename": "src/librustc_target/spec/aarch64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}_mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "455cbebb91e28e551217c61833776fb82ebf3809", "filename": "src/librustc_target/spec/aarch64_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "2f835420148fefa1b9c55b6f196fe1ced1b1466b", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n         options: TargetOptions {\n             features: \"+strict-align,+v6\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "cd4b2e1c92252cbeaca750323dd732c2274b64f8", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n         options: TargetOptions {\n             features: \"+strict-align,+v6,+vfp2\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "606c3f1906031fa45f2e9d1405a551f6627eee8c", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -23,6 +23,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "d22156bc328e017293fde67e5f621fd7b053ec5a", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -23,6 +23,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n             .. base\n         },\n     })"}, {"sha": "e7da24843cc0598f0d991d602b7191ec3851c806", "filename": "src/librustc_target/spec/armv4t_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> TargetResult {\n             // Atomic operations provided by compiler-builtins\n             max_atomic_width: Some(32),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "ea586f42c269e38a7232bee3bec3429e97eccb98", "filename": "src/librustc_target/spec/armv5te_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> TargetResult {\n             // Atomic operations provided by compiler-builtins\n             max_atomic_width: Some(32),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "dae5c8c3d7504d02b75e12203ca544b23057369f", "filename": "src/librustc_target/spec/armv5te_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> TargetResult {\n             // Atomic operations provided by compiler-builtins\n             max_atomic_width: Some(32),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "a90590a39e75edd58d2146efe0a0dd96fa64453c", "filename": "src/librustc_target/spec/armv6_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_freebsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n             features: \"+v6,+vfp2\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "b056776bdfb8b0d85715af26f7531e6e8a3fb44c", "filename": "src/librustc_target/spec/armv6_unknown_netbsd_eabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n         options: TargetOptions {\n             features: \"+v6,+vfp2\".to_string(),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"__mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "c03f4b544ed0b3ff186ae8ad9f55c1c5def36ccc", "filename": "src/librustc_target/spec/armv7_unknown_cloudabi_eabihf.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();\n@@ -19,6 +19,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "ca7ab474bef88d4d53ffe7e74f3d3e1c962b518b", "filename": "src/librustc_target/spec/armv7_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_freebsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -18,6 +18,7 @@ pub fn target() -> TargetResult {\n             features: \"+v7,+vfp3,+d16,+thumb2,-neon\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "f0952cccb2087727858c7c7667c100d4de1332c6", "filename": "src/librustc_target/spec/armv7_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -23,6 +23,7 @@ pub fn target() -> TargetResult {\n             cpu: \"generic\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}__gnu_mcount_nc\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "a9974f6b80c93e218345dd491104b169ebccba52", "filename": "src/librustc_target/spec/armv7_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -26,6 +26,7 @@ pub fn target() -> TargetResult {\n             cpu: \"generic\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "e2d55e9317b76ab965b6ffdc7706134875ca1907", "filename": "src/librustc_target/spec/armv7_unknown_netbsd_eabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -19,6 +19,7 @@ pub fn target() -> TargetResult {\n             cpu: \"generic\".to_string(),\n             max_atomic_width: Some(64),\n             abi_blacklist: super::arm_base::abi_blacklist(),\n+            target_mcount: \"__mcount\".to_string(),\n             .. base\n         }\n     })"}, {"sha": "58c59cc8728464dc362e26d428e2d3bedd3f9502", "filename": "src/librustc_target/spec/i686_apple_darwin.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();\n@@ -19,6 +19,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"apple\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "99130e93dad6122c472a53ad7b3dc1f1875edceb", "filename": "src/librustc_target/spec/i686_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -18,6 +18,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "b2ea8a6f38814878db9d96236985de0f9168afce", "filename": "src/librustc_target/spec/mips64_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r2\".to_string(),\n             features: \"+mips64r2\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "48aea4a39b0a4f3f05dcadcd9f063994bb1c48b0", "filename": "src/librustc_target/spec/mips64el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r2\".to_string(),\n             features: \"+mips64r2\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "e360abdb38d3fe5130c9baf900c8a3bee14f0676", "filename": "src/librustc_target/spec/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+fpxx,+nooddspreg\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "3f5428de9507446aa5759d93d2ff5f9ed7741650", "filename": "src/librustc_target/spec/mips_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "8116b8c9cc8403ea1e183efa0124345735603be2", "filename": "src/librustc_target/spec/mips_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+soft-float\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "7e9d8cd942a238a702d5f3f1d22f14fc874c6646", "filename": "src/librustc_target/spec/mipsel_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+fpxx,+nooddspreg\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "56ad2940feba81ea0744df4896cf14fc21495f9a", "filename": "src/librustc_target/spec/mipsel_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "a8152011efa7940cf601f05a0d26ec41a33acc16", "filename": "src/librustc_target/spec/mipsel_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r2\".to_string(),\n             features: \"+mips32r2,+soft-float\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "36b83c63fca28f1050ec095235a967ef98c85d25", "filename": "src/librustc_target/spec/mipsisa32r6_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r6\".to_string(),\n             features: \"+mips32r6\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "717ae3f1d20e19934ad735efc3e45a3858228d9d", "filename": "src/librustc_target/spec/mipsisa32r6el_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa32r6el_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips32r6\".to_string(),\n             features: \"+mips32r6\".to_string(),\n             max_atomic_width: Some(32),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "3f7d233e55fbcd7e23ea71da36af41e027564e8f", "filename": "src/librustc_target/spec/mipsisa64r6_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6_unknown_linux_gnuabi64.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r6\".to_string(),\n             features: \"+mips64r6\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "4f41b8323a99a5724866df8650d2ddee8ce61e6f", "filename": "src/librustc_target/spec/mipsisa64r6el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsisa64r6el_unknown_linux_gnuabi64.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n             cpu: \"mips64r6\".to_string(),\n             features: \"+mips64r6\".to_string(),\n             max_atomic_width: Some(64),\n+            target_mcount: \"_mcount\".to_string(),\n \n             ..super::linux_base::opts()\n         },"}, {"sha": "46fefd78f45197632d36f219b0d07466e35cd605", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -761,7 +761,10 @@ pub struct TargetOptions {\n     /// to opt out. The default is \"aliases\".\n     ///\n     /// Workaround for: https://github.com/rust-lang/rust/issues/57356\n-    pub merge_functions: MergeFunctions\n+    pub merge_functions: MergeFunctions,\n+\n+    /// Use platform dependent mcount function\n+    pub target_mcount: String\n }\n \n impl Default for TargetOptions {\n@@ -845,6 +848,7 @@ impl Default for TargetOptions {\n             simd_types_indirect: true,\n             override_export_symbols: None,\n             merge_functions: MergeFunctions::Aliases,\n+            target_mcount: \"mcount\".to_string(),\n         }\n     }\n }\n@@ -1150,6 +1154,7 @@ impl Target {\n         key!(simd_types_indirect, bool);\n         key!(override_export_symbols, opt_list);\n         key!(merge_functions, MergeFunctions)?;\n+        key!(target_mcount);\n \n         if let Some(array) = obj.find(\"abi-blacklist\").and_then(Json::as_array) {\n             for name in array.iter().filter_map(|abi| abi.as_string()) {\n@@ -1364,6 +1369,7 @@ impl ToJson for Target {\n         target_option_val!(simd_types_indirect);\n         target_option_val!(override_export_symbols);\n         target_option_val!(merge_functions);\n+        target_option_val!(target_mcount);\n \n         if default.abi_blacklist != self.options.abi_blacklist {\n             d.insert(\"abi-blacklist\".to_string(), self.options.abi_blacklist.iter()"}, {"sha": "fc881db6b09063d7cc863d2f9cc900c3c2720fa7", "filename": "src/librustc_target/spec/powerpc64_unknown_freebsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "89e68ab30620008ea440c7c3c73877b8599c4e82", "filename": "src/librustc_target/spec/powerpc64_unknown_linux_gnu.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult, RelroLevel};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult, RelroLevel};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -21,6 +21,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "be91dc44b9357912a55b594cffc39d6a672b9adc", "filename": "src/librustc_target/spec/powerpc64_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "784e3b090943caed6dc598ff43f848c51ac5565a", "filename": "src/librustc_target/spec/powerpc64le_unknown_linux_gnu.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "a3cf47fc5e08229f7d7acc2d53ab691e9405e93c", "filename": "src/librustc_target/spec/powerpc64le_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "ff52fbc179b168d2ae3aaded592caad435fc8c0d", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnu.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "1868c42be39d20a9b58ddd06522a74239314841e", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnuspe.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: \"gnu\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "1ad2201092c3f8bf75276bcefcafd9851ba87eff", "filename": "src/librustc_target/spec/powerpc_unknown_linux_musl.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: \"musl\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"_mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "6cc3a6c2ef3f2d8979c7ae94d9bb0d1d2d902920", "filename": "src/librustc_target/spec/powerpc_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -16,6 +16,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "09d1debef41e9a1ab21ae3759ba7c517dcb77020", "filename": "src/librustc_target/spec/sparc64_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -17,6 +17,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "c54181741b3cca5f1955ccb949f023ef565d399a", "filename": "src/librustc_target/spec/x86_64_apple_darwin.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();\n@@ -19,6 +19,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"apple\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"\\u{1}mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "f6861f2a6872727943578fb28b8b8e4ea30702a3", "filename": "src/librustc_target/spec/x86_64_rumprun_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -24,6 +24,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"rumprun\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "6f4ab4995b5dc3255d58cee0a31b003742effdf7", "filename": "src/librustc_target/spec/x86_64_unknown_netbsd.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -1,4 +1,4 @@\n-use crate::spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();\n@@ -18,6 +18,9 @@ pub fn target() -> TargetResult {\n         target_env: String::new(),\n         target_vendor: \"unknown\".to_string(),\n         linker_flavor: LinkerFlavor::Gcc,\n-        options: base,\n+        options: TargetOptions {\n+            target_mcount: \"__mcount\".to_string(),\n+            .. base\n+        },\n     })\n }"}, {"sha": "c72d09f7a03d2931f78ce0f01e6a0d44a2eeab2c", "filename": "src/test/codegen/instrument-mcount.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/245a0afb52d18e906c1f042165559c57261e754a/src%2Ftest%2Fcodegen%2Finstrument-mcount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/245a0afb52d18e906c1f042165559c57261e754a/src%2Ftest%2Fcodegen%2Finstrument-mcount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Finstrument-mcount.rs?ref=245a0afb52d18e906c1f042165559c57261e754a", "patch": "@@ -0,0 +1,7 @@\n+// ignore-tidy-linelength\n+// compile-flags: -Z instrument-mcount\n+\n+#![crate_type = \"lib\"]\n+\n+// CHECK: attributes #{{.*}} \"instrument-function-entry-inlined\"=\"{{.*}}mcount{{.*}}\" \"no-frame-pointer-elim\"=\"true\"\n+pub fn foo() {}"}]}