{"sha": "1c2fba65406e1d901194ec4c2c3162ba10e45f5b", "node_id": "C_kwDOAAsO6NoAKDFjMmZiYTY1NDA2ZTFkOTAxMTk0ZWM0YzJjMzE2MmJhMTBlNDVmNWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-07T10:05:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-07T10:05:04Z"}, "message": "Rollup merge of #91547 - TennyZhuang:suggest_try_reserve, r=scottmcm\n\nSuggest try_reserve in try_reserve_exact\n\nDuring developing #91529 , I found that `try_reserve_exact` suggests `reserve` for further insertions. I think it's a mistake by copy&paste, `try_reserve` is better here.", "tree": {"sha": "df24541c76b0abf3cdf69dd2c1492444c8d898c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df24541c76b0abf3cdf69dd2c1492444c8d898c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c2fba65406e1d901194ec4c2c3162ba10e45f5b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrzHRCRBK7hj4Ov3rIwAAl58IAHxDseCSsErg965XdUAYfyIs\nouMceI6fTUuMa4/JUHmGJJnvnpZUxy3+EQH6xYHeGMpFxMOEHCJ11vji7y8+/F1w\nrY2m3aSrxp/XU9GRx0Cex0aSd+jcqToY60D7BQbcLnZa/Fx+BrqeV7JuTm/AGLwk\nVfGl9dTjkS6ya4yA33oincctAJpySgkk1WUFfA7E8VpDTIO6rLkSegnlrlZG8/6E\nDROuMfI7uSqyRUW2oRTUsLFneyfnlKbdgm2Dudl9+F3aDnjwAZYY6KYMCFP7OMla\nRpNP/akVYdhZDHqSfx/cfF0MuQihKdQXZzxPplwDnTqkJTm4JmfzzAMUpLUKAq4=\n=ferT\n-----END PGP SIGNATURE-----\n", "payload": "tree df24541c76b0abf3cdf69dd2c1492444c8d898c4\nparent a8f47dc7aa237b074f718c446b040e86ac633b17\nparent aa3370c92be12d04db6a99c92044c56d453f94df\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638871504 +0100\ncommitter GitHub <noreply@github.com> 1638871504 +0100\n\nRollup merge of #91547 - TennyZhuang:suggest_try_reserve, r=scottmcm\n\nSuggest try_reserve in try_reserve_exact\n\nDuring developing #91529 , I found that `try_reserve_exact` suggests `reserve` for further insertions. I think it's a mistake by copy&paste, `try_reserve` is better here.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2fba65406e1d901194ec4c2c3162ba10e45f5b", "html_url": "https://github.com/rust-lang/rust/commit/1c2fba65406e1d901194ec4c2c3162ba10e45f5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c2fba65406e1d901194ec4c2c3162ba10e45f5b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8f47dc7aa237b074f718c446b040e86ac633b17", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f47dc7aa237b074f718c446b040e86ac633b17", "html_url": "https://github.com/rust-lang/rust/commit/a8f47dc7aa237b074f718c446b040e86ac633b17"}, {"sha": "aa3370c92be12d04db6a99c92044c56d453f94df", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa3370c92be12d04db6a99c92044c56d453f94df", "html_url": "https://github.com/rust-lang/rust/commit/aa3370c92be12d04db6a99c92044c56d453f94df"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "702d97858eb45a43d2e6d3b277ec599a17443bc2", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c2fba65406e1d901194ec4c2c3162ba10e45f5b/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2fba65406e1d901194ec4c2c3162ba10e45f5b/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=1c2fba65406e1d901194ec4c2c3162ba10e45f5b", "patch": "@@ -720,9 +720,9 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     ///\n     /// Note that the allocator may give the collection more space than it\n     /// requests. Therefore, capacity can not be relied upon to be precisely\n-    /// minimal. Prefer [`reserve`] if future insertions are expected.\n+    /// minimal. Prefer [`try_reserve`] if future insertions are expected.\n     ///\n-    /// [`reserve`]: VecDeque::reserve\n+    /// [`try_reserve`]: VecDeque::try_reserve\n     ///\n     /// # Errors\n     ///"}, {"sha": "b151842458d355789feaac777ac36da32be195b2", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c2fba65406e1d901194ec4c2c3162ba10e45f5b/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2fba65406e1d901194ec4c2c3162ba10e45f5b/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=1c2fba65406e1d901194ec4c2c3162ba10e45f5b", "patch": "@@ -1044,9 +1044,9 @@ impl String {\n     ///\n     /// Note that the allocator may give the collection more space than it\n     /// requests. Therefore, capacity can not be relied upon to be precisely\n-    /// minimal. Prefer [`reserve`] if future insertions are expected.\n+    /// minimal. Prefer [`try_reserve`] if future insertions are expected.\n     ///\n-    /// [`reserve`]: String::reserve\n+    /// [`try_reserve`]: String::try_reserve\n     ///\n     /// # Errors\n     ///"}, {"sha": "f1b70fa280214364843eebec90683a90585998ff", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c2fba65406e1d901194ec4c2c3162ba10e45f5b/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2fba65406e1d901194ec4c2c3162ba10e45f5b/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=1c2fba65406e1d901194ec4c2c3162ba10e45f5b", "patch": "@@ -881,9 +881,9 @@ impl<T, A: Allocator> Vec<T, A> {\n     ///\n     /// Note that the allocator may give the collection more space than it\n     /// requests. Therefore, capacity can not be relied upon to be precisely\n-    /// minimal. Prefer [`reserve`] if future insertions are expected.\n+    /// minimal. Prefer [`try_reserve`] if future insertions are expected.\n     ///\n-    /// [`reserve`]: Vec::reserve\n+    /// [`try_reserve`]: Vec::try_reserve\n     ///\n     /// # Errors\n     ///"}]}