{"sha": "3f6b4c24ec2234a06632234eaf3014ae0e4adc66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNmI0YzI0ZWMyMjM0YTA2NjMyMjM0ZWFmMzAxNGFlMGU0YWRjNjY=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-07-29T19:53:30Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-07-30T17:19:25Z"}, "message": "Add a better-for-testing optimistic_check() for pipes with cfg(test).", "tree": {"sha": "dd0e0223f84b157e92a9890f7f83cc232b9c85fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd0e0223f84b157e92a9890f7f83cc232b9c85fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f6b4c24ec2234a06632234eaf3014ae0e4adc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f6b4c24ec2234a06632234eaf3014ae0e4adc66", "html_url": "https://github.com/rust-lang/rust/commit/3f6b4c24ec2234a06632234eaf3014ae0e4adc66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f6b4c24ec2234a06632234eaf3014ae0e4adc66/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cccfa8acc450631fe9520abbe40360927ce1961d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cccfa8acc450631fe9520abbe40360927ce1961d", "html_url": "https://github.com/rust-lang/rust/commit/cccfa8acc450631fe9520abbe40360927ce1961d"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "6528835c52c0a089b3c45c7525d972555aab0e44", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3f6b4c24ec2234a06632234eaf3014ae0e4adc66/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f6b4c24ec2234a06632234eaf3014ae0e4adc66/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=3f6b4c24ec2234a06632234eaf3014ae0e4adc66", "patch": "@@ -180,11 +180,25 @@ impl<T> PortOne<T> {\n }\n \n impl<T> Select for PortOne<T> {\n-    #[inline]\n+    #[inline] #[cfg(not(test))]\n     fn optimistic_check(&mut self) -> bool {\n         unsafe { (*self.packet()).state.load(Acquire) == STATE_ONE }\n     }\n \n+    #[inline] #[cfg(test)]\n+    fn optimistic_check(&mut self) -> bool {\n+        // The optimistic check is never necessary for correctness. For testing\n+        // purposes, making it randomly return false simulates a racing sender.\n+        use rand::{Rand, rng};\n+        let mut rng = rng();\n+        let actually_check = Rand::rand(&mut rng);\n+        if actually_check {\n+            unsafe { (*self.packet()).state.load(Acquire) == STATE_ONE }\n+        } else {\n+            false\n+        }\n+    }\n+\n     fn block_on(&mut self, sched: &mut Scheduler, task: BlockedTask) -> bool {\n         unsafe {\n             // Atomically swap the task pointer into the Packet state, issuing"}]}