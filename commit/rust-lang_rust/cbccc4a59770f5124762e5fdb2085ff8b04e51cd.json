{"sha": "cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "node_id": "C_kwDOAAsO6NoAKGNiY2NjNGE1OTc3MGY1MTI0NzYyZTVmZGIyMDg1ZmY4YjA0ZTUxY2Q", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-28T20:26:18Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-28T20:42:50Z"}, "message": "Remove pretty printer space inside block with only outer attrs", "tree": {"sha": "427e1c010ffd4dc0276b18f0fd8520d4860e6d4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/427e1c010ffd4dc0276b18f0fd8520d4860e6d4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHLdsoACgkQ+boUO5X/\nbYJW2g//VDmNJWZCVFvaWkpT1no/xBxQEZQjsFhoqQSSqWP83Mo5bQeWUD8dvGL3\ntOzP/iI5uW+X9SvrZOq9P+h+iFTuYahmfM5VEJqtORL9twnc7A6qZ/76Eepw+Oi2\n1xJmLm9b+mS0w9SJFexQT71ySm7yXGxkKTGJfuGIi880pk9K9VL4oKp5oofRmFja\nOlUQMkmU5q8r7E/X8rtY63ZXnaUAoK2+EMXpQGcXuzn1Y6+zu5awqbZyyT4JooGV\njl5Thh51y/mUi4NoPsrro44LIwMbYgj8rtuEkcM0wW69B6oDn9Zg8y1JhBCC2k+d\n9Lw00OEq2JLUt7J/uPMQhGP8fWpgP3K3aDOpTDBxB81Qbd2m8ipiOhlarlP9G4kb\nA3cIdvNI4nsyDJckgKczcszY0UZvwrVwlLKdAdOZ9wOyNy5h4B2rLGzTyDENCoY0\nMnUM2YMRjafRcsiDndKcqXMYk6W67C6hEUcoNY+iJAY71z8LvrIAwrde6zsxfygL\nNAfLmY7VmTNTzCohyxTYOBLbew4Thm0yD6YzJ0Wn0vZyuX2KNFZd+plIFYmLdZSD\nePfjJSUYQWDw4jON0lNdqUfnBqqeRYBMoc0hIRuE4BCJVrBNvns/n26yeXBCgVii\nFZaw1NPnSD2hsCgeNIViY4H7aRt2L1vENJ+omP5VEy9x8Ofxzec=\n=/cB8\n-----END PGP SIGNATURE-----", "payload": "tree 427e1c010ffd4dc0276b18f0fd8520d4860e6d4f\nparent 83b15bfe1c15f325bc186ebfe3691b729ed59f2b\nauthor David Tolnay <dtolnay@gmail.com> 1640723178 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1640724170 -0800\n\nRemove pretty printer space inside block with only outer attrs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "html_url": "https://github.com/rust-lang/rust/commit/cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83b15bfe1c15f325bc186ebfe3691b729ed59f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/83b15bfe1c15f325bc186ebfe3691b729ed59f2b", "html_url": "https://github.com/rust-lang/rust/commit/83b15bfe1c15f325bc186ebfe3691b729ed59f2b"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "eb6ea8e5fe4d1e7d6aae8fa0cb3d46a946fa20be", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "patch": "@@ -387,23 +387,23 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n         self.print_string(sym.as_str(), style);\n     }\n \n-    fn print_inner_attributes(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_inner_attributes(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Inner, false, true)\n     }\n \n-    fn print_inner_attributes_no_trailing_hardbreak(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_inner_attributes_no_trailing_hardbreak(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Inner, false, false)\n     }\n \n-    fn print_outer_attributes(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_outer_attributes(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Outer, false, true)\n     }\n \n-    fn print_inner_attributes_inline(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_inner_attributes_inline(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Inner, true, true)\n     }\n \n-    fn print_outer_attributes_inline(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_outer_attributes_inline(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Outer, true, true)\n     }\n \n@@ -413,20 +413,21 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n         kind: ast::AttrStyle,\n         is_inline: bool,\n         trailing_hardbreak: bool,\n-    ) {\n-        let mut count = 0;\n+    ) -> bool {\n+        let mut printed = false;\n         for attr in attrs {\n             if attr.style == kind {\n                 self.print_attribute_inline(attr, is_inline);\n                 if is_inline {\n                     self.nbsp();\n                 }\n-                count += 1;\n+                printed = true;\n             }\n         }\n-        if count > 0 && trailing_hardbreak && !is_inline {\n+        if printed && trailing_hardbreak && !is_inline {\n             self.hardbreak_if_not_bol();\n         }\n+        printed\n     }\n \n     fn print_attribute(&mut self, attr: &ast::Attribute) {\n@@ -1646,7 +1647,7 @@ impl<'a> State<'a> {\n         self.ann.pre(self, AnnNode::Block(blk));\n         self.bopen();\n \n-        self.print_inner_attributes(attrs);\n+        let has_attrs = self.print_inner_attributes(attrs);\n \n         for (i, st) in blk.stmts.iter().enumerate() {\n             match st.kind {\n@@ -1660,7 +1661,7 @@ impl<'a> State<'a> {\n             }\n         }\n \n-        let empty = attrs.is_empty() && blk.stmts.is_empty();\n+        let empty = !has_attrs && blk.stmts.is_empty();\n         self.bclose_maybe_open(blk.span, empty, close_box);\n         self.ann.post(self, AnnNode::Block(blk))\n     }"}, {"sha": "6d9cb89f022987e6b6d63cfb97218b28bcc09ed1", "filename": "src/test/pretty/attr-fn-inner.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fattr-fn-inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fattr-fn-inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-fn-inner.rs?ref=cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "patch": "@@ -9,8 +9,8 @@\n fn main() {\n     #![rustc_dummy]\n     #[rustc_dummy]\n-    fn f() { }\n+    fn f() {}\n \n     #[rustc_dummy]\n-    fn g() { }\n+    fn g() {}\n }"}, {"sha": "d132014420df9aee90581da15c224fdf1c06e2dd", "filename": "src/test/pretty/attr-literals.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fattr-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fattr-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-literals.rs?ref=cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "patch": "@@ -7,8 +7,8 @@\n fn main() {\n     #![rustc_dummy(\"hi\", 1, 2, 1.012, pi = 3.14, bye, name(\"John\"))]\n     #[rustc_dummy = 8]\n-    fn f() { }\n+    fn f() {}\n \n     #[rustc_dummy(1, 2, 3)]\n-    fn g() { }\n+    fn g() {}\n }"}, {"sha": "8486342b0879f0c2f371cc6cfa15dc2639e195cb", "filename": "src/test/pretty/attr-tokens-raw-ident.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fattr-tokens-raw-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fattr-tokens-raw-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-tokens-raw-ident.rs?ref=cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "patch": "@@ -4,4 +4,4 @@\n // pp-exact\n \n #[rustfmt::r#final(final)]\n-fn main() { }\n+fn main() {}"}, {"sha": "1137d8045648920697911ee34dd97200170c9b91", "filename": "src/test/pretty/delimited-token-groups.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs?ref=cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "patch": "@@ -45,4 +45,4 @@ mac! {\n   }]\n #[rustc_dummy =\n   \"aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\"]\n-fn main() { }\n+fn main() {}"}, {"sha": "a49860daa6ad6e0f7781384cedbf90d38908aa4e", "filename": "src/test/pretty/doc-comments.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fdoc-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fpretty%2Fdoc-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdoc-comments.rs?ref=cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "patch": "@@ -5,7 +5,7 @@\n // some single-line non-doc comment\n \n /// some single line outer-docs\n-fn a() { }\n+fn a() {}\n \n fn b() {\n     //! some single line inner-docs\n@@ -17,7 +17,7 @@ fn b() {\n //////////////////////////////////\n /// some single-line outer-docs preceded by a separator\n /// (and trailing whitespaces)\n-fn c() { }\n+fn c() {}\n \n /*\n  * some multi-line non-doc comment\n@@ -26,7 +26,7 @@ fn c() { }\n /**\n  * some multi-line outer-docs\n  */\n-fn d() { }\n+fn d() {}\n \n fn e() {\n     /*!\n@@ -43,10 +43,10 @@ fn e() {\n /**\n  * some multi-line outer-docs preceded by a separator\n  */\n-fn f() { }\n+fn f() {}\n \n #[doc = \"unsugared outer doc-comments work also\"]\n-fn g() { }\n+fn g() {}\n \n fn h() {\n     #![doc = \"as do inner ones\"]"}, {"sha": "f284ac727f4b7f15c05b1b157077e6ea947a3015", "filename": "src/test/ui/macros/stringify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbccc4a59770f5124762e5fdb2085ff8b04e51cd/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs?ref=cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "patch": "@@ -235,7 +235,7 @@ fn test_expr() {\n             #[attr]\n             {}\n         ),\n-        \"#[attr] { }\", // FIXME\n+        \"#[attr] {}\",\n     );\n     assert_eq!(\n         stringify_expr!("}]}