{"sha": "c6146b2370d0952a0f48f715928625ab4382d5d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MTQ2YjIzNzBkMDk1MmEwZjQ4ZjcxNTkyODYyNWFiNDM4MmQ1ZDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-12T09:54:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-12T09:54:59Z"}, "message": "Rollup merge of #57368 - petrhosek:cmake-compiler-launcher, r=alexcrichton\n\nUse CMAKE_{C,CXX}_COMPILER_LAUNCHER for ccache\n\nCMake 3.4 and newer which is the required minimum version for LLVM\nsupports CMAKE_{C,CXX}_COMPILER_LAUNCHER for settting the compiler\nlauncher such as ccache which doesn't require shifting arguments.", "tree": {"sha": "c0dcb523c82103ac80fbd33c22714e94284dc291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0dcb523c82103ac80fbd33c22714e94284dc291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6146b2370d0952a0f48f715928625ab4382d5d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcObl0CRBK7hj4Ov3rIwAAdHIIAEu5KlArHIHGAI+mPLCtFHiO\nKp+Oj9y2BwVT4YvZOMvgc3DbUa1qV2UbT549wYZ9rEo2XuTfqb379cJjVif+UJC2\nOgGJcpHwhuQ7JCAf+2VJpFk3jEPBEpW+GpLsB2G2lKohaMClRSx/x+qG+MNR8PM5\ndYtswz+5NXSQSa6NjiJCTYE2EXAWpOtk9mKl+eW1u6VeE7Ppuawg1GFWB1tgubYY\n+rKqfLpCYFuh24cvYy1oll8S9oHHlQUIeLj+8DWPgt6SyXEqu3WfcysBrpeMQeaF\nyor9NXz5lbar8kpUiQwAR8VC818Mlj5+w5y2PNXYw8hIbUoWpeSsAd2KU+2o5Yg=\n=IKTp\n-----END PGP SIGNATURE-----\n", "payload": "tree c0dcb523c82103ac80fbd33c22714e94284dc291\nparent ebbecac538137fca1c36ceca91337b5ff4d196b5\nparent 42e65c164d0ee00bd3bb3716b5aa50d490006632\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547286899 +0100\ncommitter GitHub <noreply@github.com> 1547286899 +0100\n\nRollup merge of #57368 - petrhosek:cmake-compiler-launcher, r=alexcrichton\n\nUse CMAKE_{C,CXX}_COMPILER_LAUNCHER for ccache\n\nCMake 3.4 and newer which is the required minimum version for LLVM\nsupports CMAKE_{C,CXX}_COMPILER_LAUNCHER for settting the compiler\nlauncher such as ccache which doesn't require shifting arguments.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6146b2370d0952a0f48f715928625ab4382d5d1", "html_url": "https://github.com/rust-lang/rust/commit/c6146b2370d0952a0f48f715928625ab4382d5d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6146b2370d0952a0f48f715928625ab4382d5d1/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebbecac538137fca1c36ceca91337b5ff4d196b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebbecac538137fca1c36ceca91337b5ff4d196b5", "html_url": "https://github.com/rust-lang/rust/commit/ebbecac538137fca1c36ceca91337b5ff4d196b5"}, {"sha": "42e65c164d0ee00bd3bb3716b5aa50d490006632", "url": "https://api.github.com/repos/rust-lang/rust/commits/42e65c164d0ee00bd3bb3716b5aa50d490006632", "html_url": "https://github.com/rust-lang/rust/commit/42e65c164d0ee00bd3bb3716b5aa50d490006632"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "cb9c86df55080d560f93814e2e777a8acec3770c", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c6146b2370d0952a0f48f715928625ab4382d5d1/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6146b2370d0952a0f48f715928625ab4382d5d1/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=c6146b2370d0952a0f48f715928625ab4382d5d1", "patch": "@@ -346,15 +346,13 @@ fn configure_cmake(builder: &Builder,\n        if builder.config.llvm_clang_cl.is_some() && target.contains(\"i686\") {\n            cfg.env(\"SCCACHE_EXTRA_ARGS\", \"-m32\");\n        }\n-\n-    // If ccache is configured we inform the build a little differently how\n-    // to invoke ccache while also invoking our compilers.\n-    } else if let Some(ref ccache) = builder.config.ccache {\n-       cfg.define(\"CMAKE_C_COMPILER\", ccache)\n-          .define(\"CMAKE_C_COMPILER_ARG1\", sanitize_cc(cc))\n-          .define(\"CMAKE_CXX_COMPILER\", ccache)\n-          .define(\"CMAKE_CXX_COMPILER_ARG1\", sanitize_cc(cxx));\n     } else {\n+       // If ccache is configured we inform the build a little differently how\n+       // to invoke ccache while also invoking our compilers.\n+       if let Some(ref ccache) = builder.config.ccache {\n+         cfg.define(\"CMAKE_C_COMPILER_LAUNCHER\", ccache)\n+            .define(\"CMAKE_CXX_COMPILER_LAUNCHER\", ccache);\n+       }\n        cfg.define(\"CMAKE_C_COMPILER\", sanitize_cc(cc))\n           .define(\"CMAKE_CXX_COMPILER\", sanitize_cc(cxx));\n     }"}]}