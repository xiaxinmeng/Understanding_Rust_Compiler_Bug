{"sha": "40ba599365570ab4c3fa7091736b25a602d2b6e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwYmE1OTkzNjU1NzBhYjRjM2ZhNzA5MTczNmIyNWE2MDJkMmI2ZTA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-20T21:32:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-20T21:32:48Z"}, "message": "Rollup merge of #47568 - EdSchouten:cloudabi-linker, r=alexcrichton\n\nGive TargetOptions::linker a sane default value for CloudABI.\n\nThough some parts of rust use cc-rs to invoke a compiler/linker, Cargo\nseems to make use of the TargetOptions::linker property. Make the out of\nthe box experience for CloudABI a bit better by using the same compiler\nname as cc-rs.", "tree": {"sha": "610099f92065d257d44840f4f16b6bbdb0f3d062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/610099f92065d257d44840f4f16b6bbdb0f3d062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40ba599365570ab4c3fa7091736b25a602d2b6e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40ba599365570ab4c3fa7091736b25a602d2b6e0", "html_url": "https://github.com/rust-lang/rust/commit/40ba599365570ab4c3fa7091736b25a602d2b6e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40ba599365570ab4c3fa7091736b25a602d2b6e0/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea65bad080dd0bab07736eb73c44b635e09d2aa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea65bad080dd0bab07736eb73c44b635e09d2aa1", "html_url": "https://github.com/rust-lang/rust/commit/ea65bad080dd0bab07736eb73c44b635e09d2aa1"}, {"sha": "8d7f554a7fa0746bf84c118e7060d8c36487ac9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7f554a7fa0746bf84c118e7060d8c36487ac9e", "html_url": "https://github.com/rust-lang/rust/commit/8d7f554a7fa0746bf84c118e7060d8c36487ac9e"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "59c82e06a679c1eb2133e74f3136267362664b1d", "filename": "src/librustc_back/target/aarch64_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs?ref=40ba599365570ab4c3fa7091736b25a602d2b6e0", "patch": "@@ -15,6 +15,7 @@ pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();\n     base.max_atomic_width = Some(128);\n     base.abi_blacklist = super::arm_base::abi_blacklist();\n+    base.linker = \"aarch64-unknown-cloudabi-cc\".to_string();\n \n     Ok(Target {\n         llvm_target: \"aarch64-unknown-cloudabi\".to_string(),"}, {"sha": "faa2c4fdceb9b2fce6b8b60182a03bf6c12aef45", "filename": "src/librustc_back/target/armv7_unknown_cloudabi_eabihf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs?ref=40ba599365570ab4c3fa7091736b25a602d2b6e0", "patch": "@@ -17,6 +17,7 @@ pub fn target() -> TargetResult {\n     base.max_atomic_width = Some(64);\n     base.features = \"+v7,+vfp3,+neon\".to_string();\n     base.abi_blacklist = super::arm_base::abi_blacklist();\n+    base.linker = \"armv7-unknown-cloudabi-eabihf-cc\".to_string();\n \n     Ok(Target {\n         llvm_target: \"armv7-unknown-cloudabi-eabihf\".to_string(),"}, {"sha": "e244f443d3e3a353acf2fbd70995f933de14dcb6", "filename": "src/librustc_back/target/i686_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs?ref=40ba599365570ab4c3fa7091736b25a602d2b6e0", "patch": "@@ -15,6 +15,7 @@ pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();\n     base.cpu = \"pentium4\".to_string();\n     base.max_atomic_width = Some(64);\n+    base.linker = \"i686-unknown-cloudabi-cc\".to_string();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m32\".to_string());\n     base.stack_probes = true;\n "}, {"sha": "1ce3c6444f1ea718d492ed6be6b8eca154dd7402", "filename": "src/librustc_back/target/x86_64_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ba599365570ab4c3fa7091736b25a602d2b6e0/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs?ref=40ba599365570ab4c3fa7091736b25a602d2b6e0", "patch": "@@ -15,6 +15,7 @@ pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();\n     base.cpu = \"x86-64\".to_string();\n     base.max_atomic_width = Some(64);\n+    base.linker = \"x86_64-unknown-cloudabi-cc\".to_string();\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n     base.stack_probes = true;\n "}]}