{"sha": "4dc122580714a5f8859e993bf56a7228b0bcd7c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYzEyMjU4MDcxNGE1Zjg4NTllOTkzYmY1NmE3MjI4YjBiY2Q3YzE=", "commit": {"author": {"name": "Nick Sweeting", "email": "git@nicksweeting.com", "date": "2017-03-23T17:17:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-23T17:17:21Z"}, "message": "Add helpful hint on io function for beginners", "tree": {"sha": "61e2e8afb45ff8a15f7098ff0eb6934da90044ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61e2e8afb45ff8a15f7098ff0eb6934da90044ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dc122580714a5f8859e993bf56a7228b0bcd7c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc122580714a5f8859e993bf56a7228b0bcd7c1", "html_url": "https://github.com/rust-lang/rust/commit/4dc122580714a5f8859e993bf56a7228b0bcd7c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dc122580714a5f8859e993bf56a7228b0bcd7c1/comments", "author": {"login": "pirate", "id": 511499, "node_id": "MDQ6VXNlcjUxMTQ5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/511499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pirate", "html_url": "https://github.com/pirate", "followers_url": "https://api.github.com/users/pirate/followers", "following_url": "https://api.github.com/users/pirate/following{/other_user}", "gists_url": "https://api.github.com/users/pirate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pirate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pirate/subscriptions", "organizations_url": "https://api.github.com/users/pirate/orgs", "repos_url": "https://api.github.com/users/pirate/repos", "events_url": "https://api.github.com/users/pirate/events{/privacy}", "received_events_url": "https://api.github.com/users/pirate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5580374d7eb8795a8188be4650bd5079a25c6b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5580374d7eb8795a8188be4650bd5079a25c6b3", "html_url": "https://github.com/rust-lang/rust/commit/d5580374d7eb8795a8188be4650bd5079a25c6b3"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "dda9d6bca797766a603215ef600ca746c57f9ddc", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4dc122580714a5f8859e993bf56a7228b0bcd7c1/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc122580714a5f8859e993bf56a7228b0bcd7c1/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=4dc122580714a5f8859e993bf56a7228b0bcd7c1", "patch": "@@ -144,6 +144,16 @@\n //! # Ok(())\n //! # }\n //! ```\n+//! Note that you cannot use the `?` operator in functions that do not return a `Result` (e.g. `main()`).\n+//! Instead, you can `match` on the return value to catch any possible errors:\n+//! \n+//! ```\n+//! let mut input = String::new();\n+//! match io::stdin().read_line(&mut input) {\n+//!     Err(why) => panic!(\"Failed to read input: {}\", why.description()),\n+//!     Ok(_) => println!(\"You typed: {}\", input.trim()),\n+//! }\n+//! ```\n //!\n //! And a very common source of output is standard output:\n //!"}]}