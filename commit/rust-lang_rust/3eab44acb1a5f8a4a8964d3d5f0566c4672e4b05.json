{"sha": "3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYWI0NGFjYjFhNWY4YTRhODk2NGQzZDVmMDU2NmM0NjcyZTRiMDU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-21T10:58:06Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-21T10:58:06Z"}, "message": "Don't trigger `Self` suggestion inside derives", "tree": {"sha": "8b1fe916f61ded8a89e4868cc83853b4f91ecb36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b1fe916f61ded8a89e4868cc83853b4f91ecb36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmavM8ACgkQpp+NIls6\n19nBoQ/9FZGHaA/VkgsB4g+NL85NgTxC2V/lGt9xFy8aGJBnewICG4qQahpRg42Y\naM0TEo2n2A0JxK23Pex3D3xleSCMlyfG6nVTrKtUHhuoytBV/z58I8U+Mj65HJWX\nU0SuRs5yhHw5rzmeU/nwjfB0Y10Rl/tfd2ulaamt116CkOoYNa/PLqP6twJb+s64\n7U/yCb6IqB6kkZI+/hcLh6/Gu7nsulvAqOC+cYGnurG0b/yQ7CTVbX4sGnJeycXG\nFLi579jR4DBUq4XWGLEOPb/J22RsOPYAwe7WGrc0p+S9r0FJYdY20bAOjaB3I7DI\noERiFedvNm3JMAEQy8iehscUs/989o6I2yKUKh6uyYRrLrHlJd7FNwsRJlRvrp3o\nobBLqkL30KXtuZYPa1RMdInICv3HwLWZ0Rvoys5ZQXWC2BBH782ylgbIMgJWBs+K\nhyFRfPezI7WTp7t5HABMuEKUuqcFUHePkFR+Vx8kbo+F3eHjqq+RxLAWrMTBj7rU\n50Z1WjxF3ge7felMgq2E9V+ts4hLXy+NuCIfKeUTLbeP9I3Q3kSinqDWFVhn3R7q\n0xjb8uhyZtCT+e0Zv4RyznppXPnOGlGAg1R4H4pQKMfePYnBl9PAlHKUDVi1w1Zr\nhJWPYaNkeUryFI1dwC31C8YuWFZSdkwOxusJ2ZEw03P+3ZzT7S0=\n=2RX7\n-----END PGP SIGNATURE-----", "payload": "tree 8b1fe916f61ded8a89e4868cc83853b4f91ecb36\nparent 56068b1b671f6490c1be9ea3834784e89a0a4ba7\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503313086 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503313086 +0200\n\nDon't trigger `Self` suggestion inside derives\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05", "html_url": "https://github.com/rust-lang/rust/commit/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56068b1b671f6490c1be9ea3834784e89a0a4ba7", "url": "https://api.github.com/repos/rust-lang/rust/commits/56068b1b671f6490c1be9ea3834784e89a0a4ba7", "html_url": "https://github.com/rust-lang/rust/commit/56068b1b671f6490c1be9ea3834784e89a0a4ba7"}], "stats": {"total": 33, "additions": 5, "deletions": 28}, "files": [{"sha": "b1e46e17f13e7bb7f2ae3ed2cc986e490a51661a", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::{LintArray, LateLintPass, LateContext, LintPass};\n use rustc::hir::*;\n use rustc::hir::intravisit::{Visitor, walk_path, NestedVisitorMap};\n-use utils::span_lint_and_then;\n+use utils::{span_lint_and_then, in_macro};\n use syntax::ast::NodeId;\n use syntax_pos::symbol::keywords::SelfType;\n \n@@ -48,6 +48,9 @@ impl LintPass for UseSelf {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UseSelf {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n+        if in_macro(item.span) {\n+            return;\n+        }\n         if_let_chain!([\n             let ItemImpl(.., ref item_type, ref refs) = item.node,\n             let Ty_::TyPath(QPath::Resolved(_, ref item_path)) = item_type.node,"}, {"sha": "65975c5177c47a088ae390c005603fb1635541ba", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=3eab44acb1a5f8a4a8964d3d5f0566c4672e4b05", "patch": "@@ -96,12 +96,6 @@ error: unnecessary structure name repetition\n 58 |     pub fn new() -> Lt3<'static> { unimplemented!() }\n    |                     ^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n-error: unnecessary structure name repetition\n-  --> $DIR/methods.rs:61:10\n-   |\n-61 | #[derive(Clone,Copy)]\n-   |          ^^^^^ help: use the applicable keyword: `Self`\n-\n error: unnecessary structure name repetition\n   --> $DIR/methods.rs:74:24\n    |\n@@ -190,18 +184,6 @@ error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done mo\n 125 | |                 );\n     | |_________________^\n \n-error: unnecessary structure name repetition\n-   --> $DIR/methods.rs:131:16\n-    |\n-131 | #[derive(Copy, Clone)]\n-    |                ^^^^^ help: use the applicable keyword: `Self`\n-\n-error: unnecessary structure name repetition\n-   --> $DIR/methods.rs:145:16\n-    |\n-145 | #[derive(Copy, Clone)]\n-    |                ^^^^^ help: use the applicable keyword: `Self`\n-\n error: unnecessary structure name repetition\n    --> $DIR/methods.rs:151:24\n     |\n@@ -220,12 +202,6 @@ error: unnecessary structure name repetition\n 175 |     fn skip(self, _: usize) -> IteratorFalsePositives {\n     |                                ^^^^^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n \n-error: unnecessary structure name repetition\n-   --> $DIR/methods.rs:180:16\n-    |\n-180 | #[derive(Copy, Clone)]\n-    |                ^^^^^ help: use the applicable keyword: `Self`\n-\n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n    --> $DIR/methods.rs:194:13\n     |\n@@ -560,8 +536,6 @@ error: called `ok().expect()` on a Result value. You can call `expect` directly\n 413 |     res6.ok().expect(\"meh\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: unnecessary structure name repetition\n-\n error: you should use the `starts_with` method\n    --> $DIR/methods.rs:425:5\n     |\n@@ -756,5 +730,5 @@ error: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec\n     |\n     = note: `-D iter-cloned-collect` implied by `-D warnings`\n \n-error: aborting due to 111 previous errors\n+error: aborting due to 106 previous errors\n "}]}