{"sha": "336b02347f5c42cd330eb2678648e559ff4390f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNmIwMjM0N2Y1YzQyY2QzMzBlYjI2Nzg2NDhlNTU5ZmY0MzkwZjQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-11-03T12:40:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-03T12:40:32Z"}, "message": "Rollup merge of #54162 - GuillaumeGomez:hide-default-impls-items, r=QuietMisdreavus\n\nHide default impls items\n\nFollow up of #51885.\nFixes #54025.\n\ncc @Mark-Simulacrum\n\nr? @QuietMisdreavus\n\nAnd screenshots of course:\n\n<img width=\"1440\" alt=\"screen shot 2018-09-12 at 23 30 35\" src=\"https://user-images.githubusercontent.com/3050060/45454424-1ff8d500-b6e4-11e8-9257-030322495d58.png\">\n\n<img width=\"1440\" alt=\"screen shot 2018-09-12 at 23 30 42\" src=\"https://user-images.githubusercontent.com/3050060/45454431-2424f280-b6e4-11e8-8d65-db0d85ac18f0.png\">", "tree": {"sha": "b0aeae652bd622028d6e98926544277edf040801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0aeae652bd622028d6e98926544277edf040801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/336b02347f5c42cd330eb2678648e559ff4390f4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb3ZdBCRBK7hj4Ov3rIwAAdHIIAIAn+7wX18t2tdbBfE2iO3fr\nsx+IjhwHsTMKzqLpkjdRDABqaxzUo4k9GKhLtDN2MHRKY83fi+RFxZfJb1oBDXur\nVygxLjK+RxXgEXFeHofa62BrxNtAEEvyZhRmuF1URsJYWt8tMm8y7JyxFsahLCva\n8r1/Z85069eiGyG+gnEmKO4AKJsF5zSubiy0GK8cFjRV+NtAUDFw+gbUIgG+QXKf\naTySvyLcol2je9nocgWwHKzsl288I0ZIJyOB0wRMm8ueKXkDqj5DLn/tHDFt4yFg\n/KuoFyjmKX1lNnnRKrI7Wxqs3adaCOgECtVypJOBM1D/pmx5Ukd3OFZigck45G4=\n=ZcHe\n-----END PGP SIGNATURE-----\n", "payload": "tree b0aeae652bd622028d6e98926544277edf040801\nparent b6e8f9dbdc4f154d799589ce5e21c020c51f2123\nparent ca65b4304e2a3179c206a4d61dc623e790fc117d\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1541248832 +0100\ncommitter GitHub <noreply@github.com> 1541248832 +0100\n\nRollup merge of #54162 - GuillaumeGomez:hide-default-impls-items, r=QuietMisdreavus\n\nHide default impls items\n\nFollow up of #51885.\nFixes #54025.\n\ncc @Mark-Simulacrum\n\nr? @QuietMisdreavus\n\nAnd screenshots of course:\n\n<img width=\"1440\" alt=\"screen shot 2018-09-12 at 23 30 35\" src=\"https://user-images.githubusercontent.com/3050060/45454424-1ff8d500-b6e4-11e8-9257-030322495d58.png\">\n\n<img width=\"1440\" alt=\"screen shot 2018-09-12 at 23 30 42\" src=\"https://user-images.githubusercontent.com/3050060/45454431-2424f280-b6e4-11e8-8d65-db0d85ac18f0.png\">\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/336b02347f5c42cd330eb2678648e559ff4390f4", "html_url": "https://github.com/rust-lang/rust/commit/336b02347f5c42cd330eb2678648e559ff4390f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/336b02347f5c42cd330eb2678648e559ff4390f4/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6e8f9dbdc4f154d799589ce5e21c020c51f2123", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6e8f9dbdc4f154d799589ce5e21c020c51f2123", "html_url": "https://github.com/rust-lang/rust/commit/b6e8f9dbdc4f154d799589ce5e21c020c51f2123"}, {"sha": "ca65b4304e2a3179c206a4d61dc623e790fc117d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca65b4304e2a3179c206a4d61dc623e790fc117d", "html_url": "https://github.com/rust-lang/rust/commit/ca65b4304e2a3179c206a4d61dc623e790fc117d"}], "stats": {"total": 173, "additions": 128, "deletions": 45}, "files": [{"sha": "2d77eaf2effd5f3d2097027f1c68bb3b4d6f0271", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=336b02347f5c42cd330eb2678648e559ff4390f4", "patch": "@@ -552,6 +552,14 @@ impl ItemEnum {\n             _ => return None,\n         })\n     }\n+\n+    pub fn is_associated(&self) -> bool {\n+        match *self {\n+            ItemEnum::TypedefItem(_, _) |\n+            ItemEnum::AssociatedTypeItem(_, _) => true,\n+            _ => false,\n+        }\n+    }\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]"}, {"sha": "8ba299d229885932e10da7ca1be49c3891178f7e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 41, "deletions": 25, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=336b02347f5c42cd330eb2678648e559ff4390f4", "patch": "@@ -2322,8 +2322,8 @@ fn document(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Re\n     if let Some(ref name) = item.name {\n         info!(\"Documenting {}\", name);\n     }\n-    document_stability(w, cx, item)?;\n-    document_full(w, item, cx, \"\")?;\n+    document_stability(w, cx, item, false)?;\n+    document_full(w, item, cx, \"\", false)?;\n     Ok(())\n }\n \n@@ -2332,44 +2332,53 @@ fn render_markdown(w: &mut fmt::Formatter,\n                    cx: &Context,\n                    md_text: &str,\n                    links: Vec<(String, String)>,\n-                   prefix: &str)\n+                   prefix: &str,\n+                   is_hidden: bool)\n                    -> fmt::Result {\n     let mut ids = cx.id_map.borrow_mut();\n-    write!(w, \"<div class='docblock'>{}{}</div>\",\n-        prefix, Markdown(md_text, &links, RefCell::new(&mut ids), cx.codes))\n+    write!(w, \"<div class='docblock{}'>{}{}</div>\",\n+           if is_hidden { \" hidden\" } else { \"\" },\n+           prefix,\n+           Markdown(md_text, &links, RefCell::new(&mut ids),\n+           cx.codes))\n }\n \n fn document_short(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item, link: AssocItemLink,\n-                  prefix: &str) -> fmt::Result {\n+                  prefix: &str, is_hidden: bool) -> fmt::Result {\n     if let Some(s) = item.doc_value() {\n         let markdown = if s.contains('\\n') {\n             format!(\"{} [Read more]({})\",\n                     &plain_summary_line(Some(s)), naive_assoc_href(item, link))\n         } else {\n             plain_summary_line(Some(s))\n         };\n-        render_markdown(w, cx, &markdown, item.links(), prefix)?;\n+        render_markdown(w, cx, &markdown, item.links(), prefix, is_hidden)?;\n     } else if !prefix.is_empty() {\n-        write!(w, \"<div class='docblock'>{}</div>\", prefix)?;\n+        write!(w, \"<div class='docblock{}'>{}</div>\",\n+               if is_hidden { \" hidden\" } else { \"\" },\n+               prefix)?;\n     }\n     Ok(())\n }\n \n fn document_full(w: &mut fmt::Formatter, item: &clean::Item,\n-                 cx: &Context, prefix: &str) -> fmt::Result {\n+                 cx: &Context, prefix: &str, is_hidden: bool) -> fmt::Result {\n     if let Some(s) = cx.shared.maybe_collapsed_doc_value(item) {\n         debug!(\"Doc block: =====\\n{}\\n=====\", s);\n-        render_markdown(w, cx, &*s, item.links(), prefix)?;\n+        render_markdown(w, cx, &*s, item.links(), prefix, is_hidden)?;\n     } else if !prefix.is_empty() {\n-        write!(w, \"<div class='docblock'>{}</div>\", prefix)?;\n+        write!(w, \"<div class='docblock{}'>{}</div>\",\n+               if is_hidden { \" hidden\" } else { \"\" },\n+               prefix)?;\n     }\n     Ok(())\n }\n \n-fn document_stability(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item) -> fmt::Result {\n+fn document_stability(w: &mut fmt::Formatter, cx: &Context, item: &clean::Item,\n+                      is_hidden: bool) -> fmt::Result {\n     let stabilities = short_stability(item, cx, true);\n     if !stabilities.is_empty() {\n-        write!(w, \"<div class='stability'>\")?;\n+        write!(w, \"<div class='stability{}'>\", if is_hidden { \" hidden\" } else { \"\" })?;\n         for stability in stabilities {\n             write!(w, \"{}\", stability)?;\n         }\n@@ -3934,14 +3943,21 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n             RenderMode::ForDeref { mut_: deref_mut_ } => should_render_item(&item, deref_mut_),\n         };\n \n+        let (is_hidden, extra_class) = if trait_.is_none() ||\n+                                          item.doc_value().is_some() ||\n+                                          item.inner.is_associated() {\n+            (false, \"\")\n+        } else {\n+            (true, \" hidden\")\n+        };\n         match item.inner {\n             clean::MethodItem(clean::Method { ref decl, .. }) |\n-            clean::TyMethodItem(clean::TyMethod{ ref decl, .. }) => {\n+            clean::TyMethodItem(clean::TyMethod { ref decl, .. }) => {\n                 // Only render when the method is not static or we allow static methods\n                 if render_method_item {\n                     let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n                     let ns_id = cx.derive_id(format!(\"{}.{}\", name, item_type.name_space()));\n-                    write!(w, \"<h4 id='{}' class=\\\"{}\\\">\", id, item_type)?;\n+                    write!(w, \"<h4 id='{}' class=\\\"{}{}\\\">\", id, item_type, extra_class)?;\n                     write!(w, \"{}\", spotlight_decl(decl)?)?;\n                     write!(w, \"<span id='{}' class='invisible'>\", ns_id)?;\n                     write!(w, \"<table class='table-display'><tbody><tr><td><code>\")?;\n@@ -3963,15 +3979,15 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n             clean::TypedefItem(ref tydef, _) => {\n                 let id = cx.derive_id(format!(\"{}.{}\", ItemType::AssociatedType, name));\n                 let ns_id = cx.derive_id(format!(\"{}.{}\", name, item_type.name_space()));\n-                write!(w, \"<h4 id='{}' class=\\\"{}\\\">\", id, item_type)?;\n+                write!(w, \"<h4 id='{}' class=\\\"{}{}\\\">\", id, item_type, extra_class)?;\n                 write!(w, \"<span id='{}' class='invisible'><code>\", ns_id)?;\n                 assoc_type(w, item, &Vec::new(), Some(&tydef.type_), link.anchor(&id))?;\n                 write!(w, \"</code></span></h4>\\n\")?;\n             }\n             clean::AssociatedConstItem(ref ty, ref default) => {\n                 let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n                 let ns_id = cx.derive_id(format!(\"{}.{}\", name, item_type.name_space()));\n-                write!(w, \"<h4 id='{}' class=\\\"{}\\\">\", id, item_type)?;\n+                write!(w, \"<h4 id='{}' class=\\\"{}{}\\\">\", id, item_type, extra_class)?;\n                 write!(w, \"<span id='{}' class='invisible'><code>\", ns_id)?;\n                 assoc_const(w, item, ty, default.as_ref(), link.anchor(&id))?;\n                 let src = if let Some(l) = (Item { cx, item }).src_href() {\n@@ -3985,7 +4001,7 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n             clean::AssociatedTypeItem(ref bounds, ref default) => {\n                 let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n                 let ns_id = cx.derive_id(format!(\"{}.{}\", name, item_type.name_space()));\n-                write!(w, \"<h4 id='{}' class=\\\"{}\\\">\", id, item_type)?;\n+                write!(w, \"<h4 id='{}' class=\\\"{}{}\\\">\", id, item_type, extra_class)?;\n                 write!(w, \"<span id='{}' class='invisible'><code>\", ns_id)?;\n                 assoc_type(w, item, bounds, default.as_ref(), link.anchor(&id))?;\n                 write!(w, \"</code></span></h4>\\n\")?;\n@@ -4002,25 +4018,25 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n                     if let Some(it) = t.items.iter().find(|i| i.name == item.name) {\n                         // We need the stability of the item from the trait\n                         // because impls can't have a stability.\n-                        document_stability(w, cx, it)?;\n+                        document_stability(w, cx, it, is_hidden)?;\n                         if item.doc_value().is_some() {\n-                            document_full(w, item, cx, \"\")?;\n+                            document_full(w, item, cx, \"\", is_hidden)?;\n                         } else if show_def_docs {\n                             // In case the item isn't documented,\n                             // provide short documentation from the trait.\n-                            document_short(w, cx, it, link, \"\")?;\n+                            document_short(w, cx, it, link, \"\", is_hidden)?;\n                         }\n                     }\n                 } else {\n-                    document_stability(w, cx, item)?;\n+                    document_stability(w, cx, item, is_hidden)?;\n                     if show_def_docs {\n-                        document_full(w, item, cx, \"\")?;\n+                        document_full(w, item, cx, \"\", is_hidden)?;\n                     }\n                 }\n             } else {\n-                document_stability(w, cx, item)?;\n+                document_stability(w, cx, item, is_hidden)?;\n                 if show_def_docs {\n-                    document_short(w, cx, item, link, \"\")?;\n+                    document_short(w, cx, item, link, \"\", is_hidden)?;\n                 }\n             }\n         }"}, {"sha": "4425712eed7a15aaf9fecc4ae761453769f31aac", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=336b02347f5c42cd330eb2678648e559ff4390f4", "patch": "@@ -2052,6 +2052,50 @@\n     onEach(document.getElementsByClassName('method'), func);\n     onEach(document.getElementsByClassName('associatedconstant'), func);\n     onEach(document.getElementsByClassName('impl'), func);\n+    onEach(document.getElementsByClassName('impl-items'), function(e) {\n+        onEach(e.getElementsByClassName('associatedconstant'), func);\n+        var hiddenElems = e.getElementsByClassName('hidden');\n+        var needToggle = false;\n+\n+        for (var i = 0; i < hiddenElems.length; ++i) {\n+            if (hasClass(hiddenElems[i], \"content\") === false &&\n+                hasClass(hiddenElems[i], \"docblock\") === false) {\n+                needToggle = true;\n+                break;\n+            }\n+        }\n+        if (needToggle === true) {\n+            var newToggle = document.createElement('a');\n+            newToggle.href = 'javascript:void(0)';\n+            newToggle.className = 'collapse-toggle hidden-default collapsed';\n+            newToggle.innerHTML = \"[<span class='inner'>\" + labelForToggleButton(true) + \"</span>\" +\n+                                  \"] Show hidden undocumented items\";\n+            newToggle.onclick = function() {\n+                if (hasClass(this, \"collapsed\")) {\n+                    removeClass(this, \"collapsed\");\n+                    onEach(this.parentNode.getElementsByClassName(\"hidden\"), function(x) {\n+                        if (hasClass(x, \"content\") === false) {\n+                            removeClass(x, \"hidden\");\n+                            addClass(x, \"x\");\n+                        }\n+                    }, true);\n+                    this.innerHTML = \"[<span class='inner'>\" + labelForToggleButton(false) +\n+                                     \"</span>] Hide undocumented items\"\n+                } else {\n+                    addClass(this, \"collapsed\");\n+                    onEach(this.parentNode.getElementsByClassName(\"x\"), function(x) {\n+                        if (hasClass(x, \"content\") === false) {\n+                            addClass(x, \"hidden\");\n+                            removeClass(x, \"x\");\n+                        }\n+                    }, true);\n+                    this.innerHTML = \"[<span class='inner'>\" + labelForToggleButton(true) +\n+                                     \"</span>] Show hidden undocumented items\";\n+                }\n+            };\n+            e.insertBefore(newToggle, e.firstChild);\n+        }\n+    });\n \n     function createToggle(otherMessage, fontSize, extraClass, show) {\n         var span = document.createElement('span');"}, {"sha": "8f679b4d22b25d51f292e0b278f7ae7578e66e2f", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=336b02347f5c42cd330eb2678648e559ff4390f4", "patch": "@@ -479,17 +479,6 @@ h4 > code, h3 > code, .invisible > code {\n \tmargin-bottom: 15px;\n }\n \n-.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant {\n-\tmargin-left: 20px;\n-}\n-.content .impl-items .docblock, .content .impl-items .stability {\n-\tmargin-bottom: .6em;\n-}\n-\n-.content .impl-items > .stability {\n-\tmargin-left: 40px;\n-}\n-\n .content .docblock > .impl-items {\n \tmargin-left: 20px;\n \tmargin-top: -34px;\n@@ -531,7 +520,20 @@ h4 > code, h3 > code, .invisible > code {\n \ttop: -9px;\n \tleft: -13px;\n }\n-.methods > .stability {\n+\n+.content .impl-items .method, .content .impl-items > .type, .impl-items > .associatedconstant {\n+\tmargin-left: 20px;\n+}\n+\n+.content .impl-items .docblock, .content .impl-items .stability {\n+\tmargin-bottom: .6em;\n+}\n+\n+.content .impl-items > .stability {\n+\tmargin-left: 40px;\n+}\n+\n+.methods > .stability, .content .impl-items > .stability {\n \tmargin-top: -8px;\n }\n \n@@ -839,6 +841,11 @@ h3 > .collapse-toggle, h4 > .collapse-toggle {\n \ttext-align: center;\n }\n \n+.collapse-toggle.hidden-default {\n+\tposition: relative;\n+\tmargin-left: 20px;\n+}\n+\n .ghost {\n \tdisplay: none;\n }"}, {"sha": "5f7a8c75d3c5f6973775c2a09fd98b1af6e4693c", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=336b02347f5c42cd330eb2678648e559ff4390f4", "patch": "@@ -15,11 +15,19 @@ var mainTheme = document.getElementById(\"mainThemeStyle\");\n \n var savedHref = [];\n \n-function onEach(arr, func) {\n+function onEach(arr, func, reversed) {\n     if (arr && arr.length > 0 && func) {\n-        for (var i = 0; i < arr.length; i++) {\n-            if (func(arr[i]) === true) {\n-                return true;\n+        if (reversed !== true) {\n+            for (var i = 0; i < arr.length; ++i) {\n+                if (func(arr[i]) === true) {\n+                    return true;\n+                }\n+            }\n+        } else {\n+            for (var i = arr.length - 1; i >= 0; --i) {\n+                if (func(arr[i]) === true) {\n+                    return true;\n+                }\n             }\n         }\n     }"}, {"sha": "9ace8714918248c619b2c7c8a46be0e4f01540dc", "filename": "src/test/rustdoc/assoc-consts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Ftest%2Frustdoc%2Fassoc-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-consts.rs?ref=336b02347f5c42cd330eb2678648e559ff4390f4", "patch": "@@ -75,8 +75,8 @@ pub trait Qux {\n     /// Docs for QUX1 in trait.\n     const QUX1: i8;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT0\"]' 'const QUX_DEFAULT0: u16'\n-    // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT0 in trait.\"\n-    /// Docs for QUX_DEFAULT0 in trait.\n+    // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT12 in trait.\"\n+    /// Docs for QUX_DEFAULT12 in trait.\n     const QUX_DEFAULT0: u16 = 1;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT1\"]' 'const QUX_DEFAULT1: i16'\n     // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT1 in trait.\"\n@@ -99,7 +99,7 @@ impl Qux for Bar {\n     /// Docs for QUX1 in impl.\n     const QUX1: i8 = 5;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT0\"]' 'const QUX_DEFAULT0: u16'\n-    // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT0 in trait.\"\n+    // @has - '//*[@class=\"docblock hidden\"]' \"Docs for QUX_DEFAULT12 in trait.\"\n     const QUX_DEFAULT0: u16 = 6;\n     // @has - '//*[@id=\"associatedconstant.QUX_DEFAULT1\"]' 'const QUX_DEFAULT1: i16'\n     // @has - '//*[@class=\"docblock\"]' \"Docs for QUX_DEFAULT1 in impl.\""}, {"sha": "949ef1182889730f580ce65f67a7e77f6ab818e9", "filename": "src/test/rustdoc/manual_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336b02347f5c42cd330eb2678648e559ff4390f4/src%2Ftest%2Frustdoc%2Fmanual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmanual_impl.rs?ref=336b02347f5c42cd330eb2678648e559ff4390f4", "patch": "@@ -73,7 +73,7 @@ impl T for S2 {\n // @has manual_impl/struct.S3.html '//*[@class=\"trait\"]' 'T'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait implementation.'\n // @has  - '//*[@class=\"docblock\"]' 'Docs associated with the S3 trait b_method implementation.'\n-// @has - '//*[@class=\"docblock\"]' 'Docs associated with the trait a_method definition.'\n+// @has - '//*[@class=\"docblock hidden\"]' 'Docs associated with the trait a_method definition.'\n pub struct S3(usize);\n \n /// Docs associated with the S3 trait implementation."}]}