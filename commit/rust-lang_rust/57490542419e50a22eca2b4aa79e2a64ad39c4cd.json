{"sha": "57490542419e50a22eca2b4aa79e2a64ad39c4cd", "node_id": "C_kwDOAAsO6NoAKDU3NDkwNTQyNDE5ZTUwYTIyZWNhMmI0YWE3OWUyYTY0YWQzOWM0Y2Q", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-05-01T10:39:20Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-05-01T10:39:20Z"}, "message": "globally ignore `#[no_std]` crates", "tree": {"sha": "4a962b9b2b1ea3057061e22e35857e715f6dc3a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a962b9b2b1ea3057061e22e35857e715f6dc3a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57490542419e50a22eca2b4aa79e2a64ad39c4cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmRPltkACgkQTTgXC1ov\nwzQzEA/+O2os9lw/IbeMjgFIJCXp2BadnumtnTtJW6EZdpYDzomH6fdPPF3/Eb3J\nuLGcAvzNywi31nlxFp2oIdZ96bepOj8XCew4ZXdIWfCRwKrZjB148xWrUr0Z7Gbe\nZIfmSnzl6TUyN6Bah3Tz6FIETvGP/OYtJvUqdCbzKX2McuTzMiEBKGHSfQEpMwOW\n2RS/JyzrOtspeQWRAEU/3yq9hCcFM7GtaJD75uy4vrDEas/lT/IEKHCmb1RDmnqt\nso8QrHVYc+1dv34Ac8v3o/jkZFt3i9bHp1cIsNta+/POF2S3PKOMXVo/eGbU9cPv\nOq8mBEbSFbW6eVufzPgBYDv1Y3YvU/va036ByKc9sEgb+/Mml7D/Xh4k8NYHtROJ\niqEroFgklmBLLAkeepGTjB4gAbGlkdV2RasdQZHHxgZvpfQAaBnpjU3mXbuVS1CG\nB60U52+LSK3DQWd7wUHPA3DHyTaL16HPbaYUPkiJNnYq1+CUdDVNzzHnvvp9j8OK\n4OXgN0VjBCbZZbhp9Yg8TeFsDlk7T7fTHi2X/Lqq+FxgT8G/F5etCWGfL6unNl9a\nCYdz81XwWE1aiMC2X5Y9bW5sla4FYJ9aoejS3MsSHq+wZfYOjui7d5HFQxT3e+22\nFA0XZJqO+8RNozW7RuDl9AadNHN6KzdQM11PrHLXKfxvlBIWMcI=\n=Cwp5\n-----END PGP SIGNATURE-----", "payload": "tree 4a962b9b2b1ea3057061e22e35857e715f6dc3a5\nparent 7bc3da975a27fe6fe981559171f1cd7a778adb86\nauthor blyxyas <blyxyas@gmail.com> 1682937560 +0200\ncommitter blyxyas <blyxyas@gmail.com> 1682937560 +0200\n\nglobally ignore `#[no_std]` crates\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57490542419e50a22eca2b4aa79e2a64ad39c4cd", "html_url": "https://github.com/rust-lang/rust/commit/57490542419e50a22eca2b4aa79e2a64ad39c4cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57490542419e50a22eca2b4aa79e2a64ad39c4cd/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bc3da975a27fe6fe981559171f1cd7a778adb86", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bc3da975a27fe6fe981559171f1cd7a778adb86", "html_url": "https://github.com/rust-lang/rust/commit/7bc3da975a27fe6fe981559171f1cd7a778adb86"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "e221905580cb11741a7822db4ee00a5a4a40ba1a", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/57490542419e50a22eca2b4aa79e2a64ad39c4cd/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57490542419e50a22eca2b4aa79e2a64ad39c4cd/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=57490542419e50a22eca2b4aa79e2a64ad39c4cd", "patch": "@@ -453,9 +453,6 @@ fn is_float_mul_expr<'a>(cx: &LateContext<'_>, expr: &'a Expr<'a>) -> Option<(&'\n \n // TODO: Fix rust-lang/rust-clippy#4735\n fn check_mul_add(cx: &LateContext<'_>, expr: &Expr<'_>) {\n-    if is_no_std_crate(cx) {\n-        return; // The suggested methods are not available in core\n-    }\n     if let ExprKind::Binary(\n         Spanned {\n             node: op @ (BinOpKind::Add | BinOpKind::Sub),\n@@ -570,9 +567,6 @@ fn are_negated<'a>(cx: &LateContext<'_>, expr1: &'a Expr<'a>, expr2: &'a Expr<'a\n }\n \n fn check_custom_abs(cx: &LateContext<'_>, expr: &Expr<'_>) {\n-    if is_no_std_crate(cx) {\n-        return; // The suggested methods are not available in core\n-    }\n     if_chain! {\n         if let Some(higher::If { cond, then, r#else: Some(r#else) }) = higher::If::hir(expr);\n         let if_body_expr = peel_blocks(then);\n@@ -737,8 +731,8 @@ fn check_radians(cx: &LateContext<'_>, expr: &Expr<'_>) {\n \n impl<'tcx> LateLintPass<'tcx> for FloatingPointArithmetic {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n-        // All of these operations are currently not const.\n-        if in_constant(cx, expr.hir_id) {\n+        // All of these operations are currently not const and are in std.\n+        if in_constant(cx, expr.hir_id) || is_no_std_crate(cx) {\n             return;\n         }\n "}]}