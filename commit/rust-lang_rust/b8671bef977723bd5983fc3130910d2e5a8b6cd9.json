{"sha": "b8671bef977723bd5983fc3130910d2e5a8b6cd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NjcxYmVmOTc3NzIzYmQ1OTgzZmMzMTMwOTEwZDJlNWE4YjZjZDk=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-06-14T09:27:43Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-19T00:14:28Z"}, "message": "rustc_trans: remove obsolete Type methods.", "tree": {"sha": "5c88acf048ed128c38f4d7130e8d3a6b4d355454", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c88acf048ed128c38f4d7130e8d3a6b4d355454"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8671bef977723bd5983fc3130910d2e5a8b6cd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8671bef977723bd5983fc3130910d2e5a8b6cd9", "html_url": "https://github.com/rust-lang/rust/commit/b8671bef977723bd5983fc3130910d2e5a8b6cd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8671bef977723bd5983fc3130910d2e5a8b6cd9/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "386d59dc893375e4386d4f52b79b6c65a593be00", "url": "https://api.github.com/repos/rust-lang/rust/commits/386d59dc893375e4386d4f52b79b6c65a593be00", "html_url": "https://github.com/rust-lang/rust/commit/386d59dc893375e4386d4f52b79b6c65a593be00"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "4d02274eadd4ade36d251ff2179913b4473e3026", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8671bef977723bd5983fc3130910d2e5a8b6cd9/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8671bef977723bd5983fc3130910d2e5a8b6cd9/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=b8671bef977723bd5983fc3130910d2e5a8b6cd9", "patch": "@@ -585,7 +585,6 @@ extern \"C\" {\n     pub fn LLVMVectorType(ElementType: TypeRef, ElementCount: c_uint) -> TypeRef;\n \n     pub fn LLVMGetElementType(Ty: TypeRef) -> TypeRef;\n-    pub fn LLVMGetArrayLength(ArrayTy: TypeRef) -> c_uint;\n     pub fn LLVMGetVectorSize(VectorTy: TypeRef) -> c_uint;\n \n     // Operations on other types"}, {"sha": "5e12be5a22c9a41b4163f079c4e050db0bc650e3", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b8671bef977723bd5983fc3130910d2e5a8b6cd9/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8671bef977723bd5983fc3130910d2e5a8b6cd9/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=b8671bef977723bd5983fc3130910d2e5a8b6cd9", "patch": "@@ -101,7 +101,6 @@ pub struct LocalCrateContext<'a, 'tcx: 'a> {\n \n     lltypes: RefCell<FxHashMap<Ty<'tcx>, Type>>,\n     isize_ty: Type,\n-    opaque_vec_type: Type,\n     str_slice_type: Type,\n \n     dbg_cx: Option<debuginfo::CrateDebugContext<'tcx>>,\n@@ -378,7 +377,6 @@ impl<'a, 'tcx> LocalCrateContext<'a, 'tcx> {\n                 used_statics: RefCell::new(Vec::new()),\n                 lltypes: RefCell::new(FxHashMap()),\n                 isize_ty: Type::from_ref(ptr::null_mut()),\n-                opaque_vec_type: Type::from_ref(ptr::null_mut()),\n                 str_slice_type: Type::from_ref(ptr::null_mut()),\n                 dbg_cx,\n                 eh_personality: Cell::new(None),\n@@ -389,24 +387,23 @@ impl<'a, 'tcx> LocalCrateContext<'a, 'tcx> {\n                 placeholder: PhantomData,\n             };\n \n-            let (isize_ty, opaque_vec_type, str_slice_ty, mut local_ccx) = {\n+            let (isize_ty, str_slice_ty, mut local_ccx) = {\n                 // Do a little dance to create a dummy CrateContext, so we can\n                 // create some things in the LLVM module of this codegen unit\n                 let mut local_ccxs = vec![local_ccx];\n-                let (isize_ty, opaque_vec_type, str_slice_ty) = {\n+                let (isize_ty, str_slice_ty) = {\n                     let dummy_ccx = LocalCrateContext::dummy_ccx(shared,\n                                                                  local_ccxs.as_mut_slice());\n                     let mut str_slice_ty = Type::named_struct(&dummy_ccx, \"str_slice\");\n                     str_slice_ty.set_struct_body(&[Type::i8p(&dummy_ccx),\n                                                    Type::isize(&dummy_ccx)],\n                                                  false);\n-                    (Type::isize(&dummy_ccx), Type::opaque_vec(&dummy_ccx), str_slice_ty)\n+                    (Type::isize(&dummy_ccx), str_slice_ty)\n                 };\n-                (isize_ty, opaque_vec_type, str_slice_ty, local_ccxs.pop().unwrap())\n+                (isize_ty, str_slice_ty, local_ccxs.pop().unwrap())\n             };\n \n             local_ccx.isize_ty = isize_ty;\n-            local_ccx.opaque_vec_type = opaque_vec_type;\n             local_ccx.str_slice_type = str_slice_ty;\n \n             local_ccx"}, {"sha": "098c5b2d957ab5d7d3afa98758e3b0e42f07f5e1", "filename": "src/librustc_trans/type_.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b8671bef977723bd5983fc3130910d2e5a8b6cd9/src%2Flibrustc_trans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8671bef977723bd5983fc3130910d2e5a8b6cd9/src%2Flibrustc_trans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftype_.rs?ref=b8671bef977723bd5983fc3130910d2e5a8b6cd9", "patch": "@@ -214,16 +214,6 @@ impl Type {\n         ty!(llvm::LLVMVectorType(ty.to_ref(), len as c_uint))\n     }\n \n-    pub fn vec(ccx: &CrateContext, ty: &Type) -> Type {\n-        Type::struct_(ccx,\n-            &[Type::array(ty, 0), Type::isize(ccx)],\n-        false)\n-    }\n-\n-    pub fn opaque_vec(ccx: &CrateContext) -> Type {\n-        Type::vec(ccx, &Type::i8(ccx))\n-    }\n-\n     pub fn vtable_ptr(ccx: &CrateContext) -> Type {\n         Type::func(&[Type::i8p(ccx)], &Type::void(ccx)).ptr_to().ptr_to()\n     }"}]}