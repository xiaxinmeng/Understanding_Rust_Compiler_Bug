{"sha": "81efd696ccb369d6c4813bad1107bfd9e270385b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZWZkNjk2Y2NiMzY5ZDZjNDgxM2JhZDExMDdiZmQ5ZTI3MDM4NWI=", "commit": {"author": {"name": "Alexander Andreev", "email": "andreevlex.as@gmail.com", "date": "2019-09-30T09:07:26Z"}, "committer": {"name": "Alexander Andreev", "email": "andreevlex.as@gmail.com", "date": "2019-09-30T09:07:26Z"}, "message": "Merge branch 'master' into feature/issue/1856\n\n# Conflicts:\n#\tcrates/ra_assists/src/ast_editor.rs", "tree": {"sha": "f91b652c3ee8e4503c146bf4f76f129fb9ef1428", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f91b652c3ee8e4503c146bf4f76f129fb9ef1428"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81efd696ccb369d6c4813bad1107bfd9e270385b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81efd696ccb369d6c4813bad1107bfd9e270385b", "html_url": "https://github.com/rust-lang/rust/commit/81efd696ccb369d6c4813bad1107bfd9e270385b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81efd696ccb369d6c4813bad1107bfd9e270385b/comments", "author": {"login": "ava57r", "id": 20382553, "node_id": "MDQ6VXNlcjIwMzgyNTUz", "avatar_url": "https://avatars.githubusercontent.com/u/20382553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ava57r", "html_url": "https://github.com/ava57r", "followers_url": "https://api.github.com/users/ava57r/followers", "following_url": "https://api.github.com/users/ava57r/following{/other_user}", "gists_url": "https://api.github.com/users/ava57r/gists{/gist_id}", "starred_url": "https://api.github.com/users/ava57r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ava57r/subscriptions", "organizations_url": "https://api.github.com/users/ava57r/orgs", "repos_url": "https://api.github.com/users/ava57r/repos", "events_url": "https://api.github.com/users/ava57r/events{/privacy}", "received_events_url": "https://api.github.com/users/ava57r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ava57r", "id": 20382553, "node_id": "MDQ6VXNlcjIwMzgyNTUz", "avatar_url": "https://avatars.githubusercontent.com/u/20382553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ava57r", "html_url": "https://github.com/ava57r", "followers_url": "https://api.github.com/users/ava57r/followers", "following_url": "https://api.github.com/users/ava57r/following{/other_user}", "gists_url": "https://api.github.com/users/ava57r/gists{/gist_id}", "starred_url": "https://api.github.com/users/ava57r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ava57r/subscriptions", "organizations_url": "https://api.github.com/users/ava57r/orgs", "repos_url": "https://api.github.com/users/ava57r/repos", "events_url": "https://api.github.com/users/ava57r/events{/privacy}", "received_events_url": "https://api.github.com/users/ava57r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdbd6bb11a0c47bf9ba1428e6bd432cd2ce72045", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdbd6bb11a0c47bf9ba1428e6bd432cd2ce72045", "html_url": "https://github.com/rust-lang/rust/commit/fdbd6bb11a0c47bf9ba1428e6bd432cd2ce72045"}, {"sha": "733f1d8b709788225bd06f8c0aee1819db92620b", "url": "https://api.github.com/repos/rust-lang/rust/commits/733f1d8b709788225bd06f8c0aee1819db92620b", "html_url": "https://github.com/rust-lang/rust/commit/733f1d8b709788225bd06f8c0aee1819db92620b"}], "stats": {"total": 2139, "additions": 1181, "deletions": 958}, "files": [{"sha": "189cad7d04e1fed1bbea0c94f8b69efe8ed19db8", "filename": "crates/ra_assists/src/assist_ctx.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -4,7 +4,7 @@ use hir::db::HirDatabase;\n use ra_db::FileRange;\n use ra_fmt::{leading_indent, reindent};\n use ra_syntax::{\n-    algo::{find_covering_element, find_node_at_offset},\n+    algo::{self, find_covering_element, find_node_at_offset},\n     AstNode, SourceFile, SyntaxElement, SyntaxNode, SyntaxToken, TextRange, TextUnit,\n     TokenAtOffset,\n };\n@@ -179,6 +179,10 @@ impl AssistBuilder {\n         &mut self.edit\n     }\n \n+    pub(crate) fn replace_ast<N: AstNode>(&mut self, old: N, new: N) {\n+        algo::diff(old.syntax(), new.syntax()).into_text_edit(&mut self.edit)\n+    }\n+\n     fn build(self) -> AssistAction {\n         AssistAction {\n             edit: self.edit.finish(),"}, {"sha": "77ecc33c9d9ff7f1c95f3b5b1b2487d3ae9928ad", "filename": "crates/ra_assists/src/assists/add_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_derive.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -15,7 +15,7 @@ pub(crate) fn add_derive(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist>\n     ctx.add_action(AssistId(\"add_derive\"), \"add `#[derive]`\", |edit| {\n         let derive_attr = nominal\n             .attrs()\n-            .filter_map(|x| x.as_call())\n+            .filter_map(|x| x.as_simple_call())\n             .filter(|(name, _arg)| name == \"derive\")\n             .map(|(_name, arg)| arg)\n             .next();"}, {"sha": "565b96fb509f0392461f8d1c2cfea15db6c11ca9", "filename": "crates/ra_assists/src/assists/add_missing_impl_members.rs", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_missing_impl_members.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -2,11 +2,11 @@\n \n use hir::{db::HirDatabase, HasSource};\n use ra_syntax::{\n-    ast::{self, make, AstNode, NameOwner},\n+    ast::{self, edit, make, AstNode, NameOwner},\n     SmolStr,\n };\n \n-use crate::{ast_editor::AstEditor, Assist, AssistCtx, AssistId};\n+use crate::{Assist, AssistCtx, AssistId};\n \n #[derive(PartialEq)]\n enum AddMissingImplMembersMode {\n@@ -77,30 +77,26 @@ fn add_missing_impl_members_inner(\n \n     ctx.add_action(AssistId(assist_id), label, |edit| {\n         let n_existing_items = impl_item_list.impl_items().count();\n-        let items = missing_items.into_iter().map(|it| match it {\n-            ast::ImplItem::FnDef(def) => strip_docstring(add_body(def).into()),\n-            _ => strip_docstring(it),\n-        });\n-        let mut ast_editor = AstEditor::new(impl_item_list);\n-\n-        ast_editor.append_items(items);\n-\n-        let first_new_item = ast_editor.ast().impl_items().nth(n_existing_items).unwrap();\n-        let cursor_position = first_new_item.syntax().text_range().start();\n-        ast_editor.into_text_edit(edit.text_edit_builder());\n-\n+        let items = missing_items\n+            .into_iter()\n+            .map(|it| match it {\n+                ast::ImplItem::FnDef(def) => ast::ImplItem::FnDef(add_body(def)),\n+                _ => it,\n+            })\n+            .map(|it| edit::strip_attrs_and_docs(&it));\n+        let new_impl_item_list = impl_item_list.append_items(items);\n+        let cursor_position = {\n+            let first_new_item = new_impl_item_list.impl_items().nth(n_existing_items).unwrap();\n+            first_new_item.syntax().text_range().start()\n+        };\n+\n+        edit.replace_ast(impl_item_list, new_impl_item_list);\n         edit.set_cursor(cursor_position);\n     });\n \n     ctx.build()\n }\n \n-fn strip_docstring(item: ast::ImplItem) -> ast::ImplItem {\n-    let mut ast_editor = AstEditor::new(item);\n-    ast_editor.strip_attrs_and_docs();\n-    ast_editor.ast().to_owned()\n-}\n-\n fn add_body(fn_def: ast::FnDef) -> ast::FnDef {\n     if fn_def.body().is_none() {\n         fn_def.with_body(make::block_from_expr(make::expr_unimplemented()))"}, {"sha": "f791d22b0ba7259d9e772390e21bb14ad806a114", "filename": "crates/ra_assists/src/assists/move_bounds.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fmove_bounds.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -2,12 +2,12 @@\n \n use hir::db::HirDatabase;\n use ra_syntax::{\n-    ast::{self, make, AstNode, NameOwner, TypeBoundsOwner},\n+    ast::{self, edit, make, AstNode, NameOwner, TypeBoundsOwner},\n     SyntaxElement,\n     SyntaxKind::*,\n };\n \n-use crate::{ast_editor::AstEditor, Assist, AssistCtx, AssistId};\n+use crate::{Assist, AssistCtx, AssistId};\n \n pub(crate) fn move_bounds_to_where_clause(mut ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n     let type_param_list = ctx.node_at_offset::<ast::TypeParamList>()?;\n@@ -41,14 +41,12 @@ pub(crate) fn move_bounds_to_where_clause(mut ctx: AssistCtx<impl HirDatabase>)\n                 .type_params()\n                 .filter(|it| it.type_bound_list().is_some())\n                 .map(|type_param| {\n-                    let without_bounds =\n-                        AstEditor::new(type_param.clone()).remove_bounds().ast().clone();\n+                    let without_bounds = type_param.remove_bounds();\n                     (type_param, without_bounds)\n                 });\n \n-            let mut ast_editor = AstEditor::new(type_param_list.clone());\n-            ast_editor.replace_descendants(new_params);\n-            ast_editor.into_text_edit(edit.text_edit_builder());\n+            let new_type_param_list = edit::replace_descendants(&type_param_list, new_params);\n+            edit.replace_ast(type_param_list.clone(), new_type_param_list);\n \n             let where_clause = {\n                 let predicates = type_param_list.type_params().filter_map(build_predicate);"}, {"sha": "2de71a0cb008583f28a4c0c0edd8d68ea51a76cd", "filename": "crates/ra_assists/src/ast_editor.rs", "status": "removed", "additions": 0, "deletions": 247, "changes": 247, "blob_url": "https://github.com/rust-lang/rust/blob/fdbd6bb11a0c47bf9ba1428e6bd432cd2ce72045/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdbd6bb11a0c47bf9ba1428e6bd432cd2ce72045/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_editor.rs?ref=fdbd6bb11a0c47bf9ba1428e6bd432cd2ce72045", "patch": "@@ -1,247 +0,0 @@\n-//! FIXME: write short doc here\n-\n-use std::{iter, ops::RangeInclusive};\n-\n-use arrayvec::ArrayVec;\n-use rustc_hash::FxHashMap;\n-\n-use ra_fmt::leading_indent;\n-use ra_syntax::{\n-    algo,\n-    ast::{self, make::tokens, TypeBoundsOwner},\n-    AstNode, Direction, InsertPosition, SyntaxElement,\n-    SyntaxKind::*,\n-    T,\n-};\n-use ra_text_edit::TextEditBuilder;\n-\n-pub struct AstEditor<N: AstNode> {\n-    original_ast: N,\n-    ast: N,\n-}\n-\n-impl<N: AstNode> AstEditor<N> {\n-    pub fn new(node: N) -> AstEditor<N>\n-    where\n-        N: Clone,\n-    {\n-        AstEditor { original_ast: node.clone(), ast: node }\n-    }\n-\n-    pub fn into_text_edit(self, builder: &mut TextEditBuilder) {\n-        for (from, to) in algo::diff(&self.original_ast.syntax(), self.ast().syntax()) {\n-            builder.replace(from.text_range(), to.to_string())\n-        }\n-    }\n-\n-    pub fn ast(&self) -> &N {\n-        &self.ast\n-    }\n-\n-    pub fn replace_descendants<T: AstNode>(\n-        &mut self,\n-        replacement_map: impl Iterator<Item = (T, T)>,\n-    ) -> &mut Self {\n-        let map = replacement_map\n-            .map(|(from, to)| (from.syntax().clone().into(), to.syntax().clone().into()))\n-            .collect::<FxHashMap<_, _>>();\n-        let new_syntax = algo::replace_descendants(self.ast.syntax(), &map);\n-        self.ast = N::cast(new_syntax).unwrap();\n-        self\n-    }\n-\n-    #[must_use]\n-    fn insert_children(\n-        &self,\n-        position: InsertPosition<SyntaxElement>,\n-        mut to_insert: impl Iterator<Item = SyntaxElement>,\n-    ) -> N {\n-        let new_syntax = algo::insert_children(self.ast().syntax(), position, &mut to_insert);\n-        N::cast(new_syntax).unwrap()\n-    }\n-\n-    #[must_use]\n-    fn replace_children(\n-        &self,\n-        to_delete: RangeInclusive<SyntaxElement>,\n-        mut to_insert: impl Iterator<Item = SyntaxElement>,\n-    ) -> N {\n-        let new_syntax = algo::replace_children(self.ast().syntax(), to_delete, &mut to_insert);\n-        N::cast(new_syntax).unwrap()\n-    }\n-\n-    fn do_make_multiline(&mut self) {\n-        let l_curly =\n-            match self.ast().syntax().children_with_tokens().find(|it| it.kind() == T!['{']) {\n-                Some(it) => it,\n-                None => return,\n-            };\n-        let sibling = match l_curly.next_sibling_or_token() {\n-            Some(it) => it,\n-            None => return,\n-        };\n-        let existing_ws = match sibling.as_token() {\n-            None => None,\n-            Some(tok) if tok.kind() != WHITESPACE => None,\n-            Some(ws) => {\n-                if ws.text().contains('\\n') {\n-                    return;\n-                }\n-                Some(ws.clone())\n-            }\n-        };\n-\n-        let indent = leading_indent(self.ast().syntax()).unwrap_or(\"\".into());\n-        let ws = tokens::WsBuilder::new(&format!(\"\\n{}\", indent));\n-        let to_insert = iter::once(ws.ws().into());\n-        self.ast = match existing_ws {\n-            None => self.insert_children(InsertPosition::After(l_curly), to_insert),\n-            Some(ws) => {\n-                self.replace_children(RangeInclusive::new(ws.clone().into(), ws.into()), to_insert)\n-            }\n-        };\n-    }\n-}\n-\n-impl AstEditor<ast::RecordFieldList> {\n-    pub fn append_field(&mut self, field: &ast::RecordField) {\n-        self.insert_field(InsertPosition::Last, field)\n-    }\n-\n-    pub fn insert_field(\n-        &mut self,\n-        position: InsertPosition<&'_ ast::RecordField>,\n-        field: &ast::RecordField,\n-    ) {\n-        let is_multiline = self.ast().syntax().text().contains_char('\\n');\n-        let ws;\n-        let space = if is_multiline {\n-            ws = tokens::WsBuilder::new(&format!(\n-                \"\\n{}    \",\n-                leading_indent(self.ast().syntax()).unwrap_or(\"\".into())\n-            ));\n-            ws.ws()\n-        } else {\n-            tokens::single_space()\n-        };\n-\n-        let mut to_insert: ArrayVec<[SyntaxElement; 4]> = ArrayVec::new();\n-        to_insert.push(space.into());\n-        to_insert.push(field.syntax().clone().into());\n-        to_insert.push(tokens::comma().into());\n-\n-        macro_rules! after_l_curly {\n-            () => {{\n-                let anchor = match self.l_curly() {\n-                    Some(it) => it,\n-                    None => return,\n-                };\n-                InsertPosition::After(anchor)\n-            }};\n-        }\n-\n-        macro_rules! after_field {\n-            ($anchor:expr) => {\n-                if let Some(comma) = $anchor\n-                    .syntax()\n-                    .siblings_with_tokens(Direction::Next)\n-                    .find(|it| it.kind() == T![,])\n-                {\n-                    InsertPosition::After(comma)\n-                } else {\n-                    to_insert.insert(0, tokens::comma().into());\n-                    InsertPosition::After($anchor.syntax().clone().into())\n-                }\n-            };\n-        };\n-\n-        let position = match position {\n-            InsertPosition::First => after_l_curly!(),\n-            InsertPosition::Last => {\n-                if !is_multiline {\n-                    // don't insert comma before curly\n-                    to_insert.pop();\n-                }\n-                match self.ast().fields().last() {\n-                    Some(it) => after_field!(it),\n-                    None => after_l_curly!(),\n-                }\n-            }\n-            InsertPosition::Before(anchor) => {\n-                InsertPosition::Before(anchor.syntax().clone().into())\n-            }\n-            InsertPosition::After(anchor) => after_field!(anchor),\n-        };\n-\n-        self.ast = self.insert_children(position, to_insert.iter().cloned());\n-    }\n-\n-    fn l_curly(&self) -> Option<SyntaxElement> {\n-        self.ast().syntax().children_with_tokens().find(|it| it.kind() == T!['{'])\n-    }\n-}\n-\n-impl AstEditor<ast::ItemList> {\n-    pub fn append_items(&mut self, items: impl Iterator<Item = ast::ImplItem>) {\n-        if !self.ast().syntax().text().contains_char('\\n') {\n-            self.do_make_multiline();\n-        }\n-        items.for_each(|it| self.append_item(it));\n-    }\n-\n-    pub fn append_item(&mut self, item: ast::ImplItem) {\n-        let (indent, position) = match self.ast().impl_items().last() {\n-            Some(it) => (\n-                leading_indent(it.syntax()).unwrap_or_default().to_string(),\n-                InsertPosition::After(it.syntax().clone().into()),\n-            ),\n-            None => match self.l_curly() {\n-                Some(it) => (\n-                    \"    \".to_string() + &leading_indent(self.ast().syntax()).unwrap_or_default(),\n-                    InsertPosition::After(it),\n-                ),\n-                None => return,\n-            },\n-        };\n-        let ws = tokens::WsBuilder::new(&format!(\"\\n{}\", indent));\n-        let to_insert: ArrayVec<[SyntaxElement; 2]> =\n-            [ws.ws().into(), item.syntax().clone().into()].into();\n-        self.ast = self.insert_children(position, to_insert.into_iter());\n-    }\n-\n-    fn l_curly(&self) -> Option<SyntaxElement> {\n-        self.ast().syntax().children_with_tokens().find(|it| it.kind() == T!['{'])\n-    }\n-}\n-\n-impl AstEditor<ast::ImplItem> {\n-    pub fn strip_attrs_and_docs(&mut self) {\n-        while let Some(start) = self\n-            .ast()\n-            .syntax()\n-            .children_with_tokens()\n-            .find(|it| it.kind() == ATTR || it.kind() == COMMENT)\n-        {\n-            let end = match &start.next_sibling_or_token() {\n-                Some(el) if el.kind() == WHITESPACE => el.clone(),\n-                Some(_) | None => start.clone(),\n-            };\n-            self.ast = self.replace_children(RangeInclusive::new(start, end), iter::empty());\n-        }\n-    }\n-}\n-\n-impl AstEditor<ast::TypeParam> {\n-    pub fn remove_bounds(&mut self) -> &mut Self {\n-        let colon = match self.ast.colon_token() {\n-            Some(it) => it,\n-            None => return self,\n-        };\n-        let end = match self.ast.type_bound_list() {\n-            Some(it) => it.syntax().clone().into(),\n-            None => colon.clone().into(),\n-        };\n-        self.ast = self.replace_children(RangeInclusive::new(colon.into(), end), iter::empty());\n-        self\n-    }\n-}"}, {"sha": "91b2a1dcefb870815040e7becbc313b62b0390ba", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -7,7 +7,6 @@\n \n mod assist_ctx;\n mod marks;\n-pub mod ast_editor;\n \n use hir::db::HirDatabase;\n use itertools::Itertools;"}, {"sha": "603daed3746e15cf119247779a8c2ccbdb153661", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -32,11 +32,10 @@ pub trait CheckCanceled {\n \n     fn catch_canceled<F, T>(&self, f: F) -> Result<T, Canceled>\n     where\n-        Self: Sized,\n+        Self: Sized + panic::RefUnwindSafe,\n         F: FnOnce(&Self) -> T + panic::UnwindSafe,\n     {\n-        let this = panic::AssertUnwindSafe(self);\n-        panic::catch_unwind(|| f(*this)).map_err(|err| match err.downcast::<Canceled>() {\n+        panic::catch_unwind(|| f(self)).map_err(|err| match err.downcast::<Canceled>() {\n             Ok(canceled) => *canceled,\n             Err(payload) => panic::resume_unwind(payload),\n         })"}, {"sha": "6c4e8ffbd3bd842afbb68e148c7d87b80b1c14a3", "filename": "crates/ra_hir/src/lang_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_hir%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_hir%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flang_item.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -153,7 +153,7 @@ impl LangItems {\n \n fn lang_item_name<T: AttrsOwner>(node: &T) -> Option<SmolStr> {\n     node.attrs()\n-        .filter_map(|a| a.as_key_value())\n+        .filter_map(|a| a.as_simple_key_value())\n         .filter(|(key, _)| key == \"lang\")\n         .map(|(_, val)| val)\n         .nth(0)"}, {"sha": "606bd1a9586ea7847c473db9222e0ceb388ba4c7", "filename": "crates/ra_hir/src/nameres/raw.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_hir%2Fsrc%2Fnameres%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_hir%2Fsrc%2Fnameres%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Fraw.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -355,8 +355,7 @@ impl<DB: AstDatabase> RawItemsCollector<&DB> {\n \n         let name = m.name().map(|it| it.as_name());\n         let ast_id = self.source_ast_id_map.ast_id(&m);\n-        let export = m.has_atom_attr(\"macro_export\")\n-            || m.attrs().filter_map(|x| x.as_call()).any(|(name, _)| name == \"macro_export\");\n+        let export = m.attrs().filter_map(|x| x.simple_name()).any(|name| name == \"macro_export\");\n \n         let m = self.raw_items.macros.alloc(MacroData { ast_id, path, name, export });\n         self.push_item(current_module, RawItem::Macro(m));\n@@ -387,7 +386,7 @@ impl<DB: AstDatabase> RawItemsCollector<&DB> {\n \n fn extract_mod_path_attribute(module: &ast::Module) -> Option<SmolStr> {\n     module.attrs().into_iter().find_map(|attr| {\n-        attr.as_key_value().and_then(|(name, value)| {\n+        attr.as_simple_key_value().and_then(|(name, value)| {\n             let is_path = name == \"path\";\n             if is_path {\n                 Some(value)"}, {"sha": "b0f67ae501d88a1f6df7332ffff69d4205c48c24", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -1,9 +1,8 @@\n //! Trait solving using Chalk.\n-use std::sync::Arc;\n+use std::sync::{Arc, Mutex};\n \n use chalk_ir::cast::Cast;\n use log::debug;\n-use parking_lot::Mutex;\n use ra_db::salsa;\n use ra_prof::profile;\n use rustc_hash::FxHashSet;\n@@ -38,7 +37,14 @@ impl TraitSolver {\n     ) -> Option<chalk_solve::Solution> {\n         let context = ChalkContext { db, krate: self.krate };\n         debug!(\"solve goal: {:?}\", goal);\n-        let solution = self.inner.lock().solve(&context, goal);\n+        let mut solver = match self.inner.lock() {\n+            Ok(it) => it,\n+            // Our cancellation works via unwinding, but, as chalk is not\n+            // panic-safe, we need to make sure to propagate the cancellation.\n+            // Ideally, we should also make chalk panic-safe.\n+            Err(_) => ra_db::Canceled::throw(),\n+        };\n+        let solution = solver.solve(&context, goal);\n         debug!(\"solve({:?}) => {:?}\", goal, solution);\n         solution\n     }"}, {"sha": "0435188c8488cbe68c86de1ee3a2857d4f9cfa28", "filename": "crates/ra_ide_api/src/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -4,10 +4,10 @@ use std::cell::RefCell;\n \n use hir::diagnostics::{AstDiagnostic, Diagnostic as _, DiagnosticSink};\n use itertools::Itertools;\n-use ra_assists::ast_editor::AstEditor;\n use ra_db::SourceDatabase;\n use ra_prof::profile;\n use ra_syntax::{\n+    algo,\n     ast::{self, make, AstNode},\n     Location, SyntaxNode, TextRange, T,\n };\n@@ -58,15 +58,15 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n         })\n     })\n     .on::<hir::diagnostics::MissingFields, _>(|d| {\n-        let node = d.ast(db);\n-        let mut ast_editor = AstEditor::new(node);\n+        let mut field_list = d.ast(db);\n         for f in d.missed_fields.iter() {\n             let field = make::record_field(make::name_ref(&f.to_string()), Some(make::expr_unit()));\n-            ast_editor.append_field(&field);\n+            field_list = field_list.append_field(&field);\n         }\n \n         let mut builder = TextEditBuilder::default();\n-        ast_editor.into_text_edit(&mut builder);\n+        algo::diff(&d.ast(db).syntax(), &field_list.syntax()).into_text_edit(&mut builder);\n+\n         let fix =\n             SourceChange::source_file_edit_from(\"fill struct fields\", file_id, builder.finish());\n         res.borrow_mut().push(Diagnostic {"}, {"sha": "8815df747e8312518b9c541d6f2322ceb0b8b5eb", "filename": "crates/ra_ide_api/src/display/structure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -79,7 +79,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n             node_range: node.syntax().text_range(),\n             kind: node.syntax().kind(),\n             detail,\n-            deprecated: node.attrs().filter_map(|x| x.as_named()).any(|x| x == \"deprecated\"),\n+            deprecated: node.attrs().filter_map(|x| x.simple_name()).any(|x| x == \"deprecated\"),\n         })\n     }\n "}, {"sha": "ae30ebba383d06a6f2f287459ac9a112ee53e12c", "filename": "crates/ra_ide_api/src/snapshots/highlighting.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -19,7 +19,7 @@\n .keyword\\.unsafe   { color: #DFAF8F; }\n .keyword\\.control  { color: #F0DFAF; font-weight: bold; }\n </style>\n-<pre><code><span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"attribute\">derive</span><span class=\"attribute\">(</span><span class=\"attribute\">Clone</span><span class=\"attribute\">,</span><span class=\"attribute\"> </span><span class=\"attribute\">Debug</span><span class=\"attribute\">)</span><span class=\"attribute\">]</span>\n+<pre><code><span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"attribute text\">derive</span><span class=\"attribute\">(</span><span class=\"attribute\">Clone</span><span class=\"attribute\">,</span><span class=\"attribute\"> </span><span class=\"attribute\">Debug</span><span class=\"attribute\">)</span><span class=\"attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"type\">Foo</span> {\n     <span class=\"keyword\">pub</span> <span class=\"field\">x</span>: <span class=\"type\">i32</span>,\n     <span class=\"keyword\">pub</span> <span class=\"field\">y</span>: <span class=\"type\">i32</span>,"}, {"sha": "f3158ade300bc208fabfde1627d7e64552858809", "filename": "crates/ra_parser/src/grammar/attributes.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fattributes.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -24,8 +24,23 @@ fn attribute(p: &mut Parser, inner: bool) {\n         p.bump(T![!]);\n     }\n \n-    if p.at(T!['[']) {\n-        items::token_tree(p);\n+    if p.eat(T!['[']) {\n+        paths::use_path(p);\n+\n+        match p.current() {\n+            T![=] => {\n+                p.bump(T![=]);\n+                if expressions::literal(p).is_none() {\n+                    p.error(\"expected literal\");\n+                }\n+            }\n+            T!['('] | T!['['] | T!['{'] => items::token_tree(p),\n+            _ => {}\n+        }\n+\n+        if !p.eat(T![']']) {\n+            p.error(\"expected `]`\");\n+        }\n     } else {\n         p.error(\"expected `[`\");\n     }"}, {"sha": "d55534ede861728842bebffa92d64ddb64c66388", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -5,6 +5,7 @@ pub mod visit;\n use std::ops::RangeInclusive;\n \n use itertools::Itertools;\n+use ra_text_edit::TextEditBuilder;\n use rustc_hash::FxHashMap;\n \n use crate::{\n@@ -65,19 +66,31 @@ pub enum InsertPosition<T> {\n     After(T),\n }\n \n+pub struct TreeDiff {\n+    replacements: FxHashMap<SyntaxElement, SyntaxElement>,\n+}\n+\n+impl TreeDiff {\n+    pub fn into_text_edit(&self, builder: &mut TextEditBuilder) {\n+        for (from, to) in self.replacements.iter() {\n+            builder.replace(from.text_range(), to.to_string())\n+        }\n+    }\n+}\n+\n /// Finds minimal the diff, which, applied to `from`, will result in `to`.\n ///\n /// Specifically, returns a map whose keys are descendants of `from` and values\n /// are descendants of `to`, such that  `replace_descendants(from, map) == to`.\n ///\n /// A trivial solution is a singletom map `{ from: to }`, but this function\n /// tries to find a more fine-grained diff.\n-pub fn diff(from: &SyntaxNode, to: &SyntaxNode) -> FxHashMap<SyntaxElement, SyntaxElement> {\n+pub fn diff(from: &SyntaxNode, to: &SyntaxNode) -> TreeDiff {\n     let mut buf = FxHashMap::default();\n     // FIXME: this is both horrible inefficient and gives larger than\n     // necessary diff. I bet there's a cool algorithm to diff trees properly.\n     go(&mut buf, from.clone().into(), to.clone().into());\n-    return buf;\n+    return TreeDiff { replacements: buf };\n \n     fn go(\n         buf: &mut FxHashMap<SyntaxElement, SyntaxElement>,"}, {"sha": "1b2ce921a51c8d128066b11b06305954095d2966", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -5,7 +5,7 @@ mod traits;\n mod tokens;\n mod extensions;\n mod expr_extensions;\n-mod edit;\n+pub mod edit;\n pub mod make;\n \n use std::marker::PhantomData;"}, {"sha": "03f3b5fbb00045768f440669c5eb65b7f48ce728", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 222, "deletions": 3, "changes": 225, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -1,14 +1,21 @@\n //! This module contains functions for editing syntax trees. As the trees are\n //! immutable, all function here return a fresh copy of the tree, instead of\n //! doing an in-place modification.\n+use std::{iter, ops::RangeInclusive};\n \n use arrayvec::ArrayVec;\n-use std::ops::RangeInclusive;\n+use rustc_hash::FxHashMap;\n \n use crate::{\n     algo,\n-    ast::{self, make, AstNode},\n-    InsertPosition, SyntaxElement,\n+    ast::{\n+        self,\n+        make::{self, tokens},\n+        AstNode, TypeBoundsOwner,\n+    },\n+    AstToken, Direction, InsertPosition, SmolStr, SyntaxElement,\n+    SyntaxKind::{ATTR, COMMENT, WHITESPACE},\n+    SyntaxNode, T,\n };\n \n impl ast::FnDef {\n@@ -31,6 +38,218 @@ impl ast::FnDef {\n     }\n }\n \n+impl ast::ItemList {\n+    #[must_use]\n+    pub fn append_items(&self, items: impl Iterator<Item = ast::ImplItem>) -> ast::ItemList {\n+        let mut res = self.clone();\n+        if !self.syntax().text().contains_char('\\n') {\n+            res = res.make_multiline();\n+        }\n+        items.for_each(|it| res = res.append_item(it));\n+        res\n+    }\n+\n+    #[must_use]\n+    pub fn append_item(&self, item: ast::ImplItem) -> ast::ItemList {\n+        let (indent, position) = match self.impl_items().last() {\n+            Some(it) => (\n+                leading_indent(it.syntax()).unwrap_or_default().to_string(),\n+                InsertPosition::After(it.syntax().clone().into()),\n+            ),\n+            None => match self.l_curly() {\n+                Some(it) => (\n+                    \"    \".to_string() + &leading_indent(self.syntax()).unwrap_or_default(),\n+                    InsertPosition::After(it),\n+                ),\n+                None => return self.clone(),\n+            },\n+        };\n+        let ws = tokens::WsBuilder::new(&format!(\"\\n{}\", indent));\n+        let to_insert: ArrayVec<[SyntaxElement; 2]> =\n+            [ws.ws().into(), item.syntax().clone().into()].into();\n+        insert_children(self, position, to_insert.into_iter())\n+    }\n+\n+    fn l_curly(&self) -> Option<SyntaxElement> {\n+        self.syntax().children_with_tokens().find(|it| it.kind() == T!['{'])\n+    }\n+\n+    fn make_multiline(&self) -> ast::ItemList {\n+        let l_curly = match self.syntax().children_with_tokens().find(|it| it.kind() == T!['{']) {\n+            Some(it) => it,\n+            None => return self.clone(),\n+        };\n+        let sibling = match l_curly.next_sibling_or_token() {\n+            Some(it) => it,\n+            None => return self.clone(),\n+        };\n+        let existing_ws = match sibling.as_token() {\n+            None => None,\n+            Some(tok) if tok.kind() != WHITESPACE => None,\n+            Some(ws) => {\n+                if ws.text().contains('\\n') {\n+                    return self.clone();\n+                }\n+                Some(ws.clone())\n+            }\n+        };\n+\n+        let indent = leading_indent(self.syntax()).unwrap_or(\"\".into());\n+        let ws = tokens::WsBuilder::new(&format!(\"\\n{}\", indent));\n+        let to_insert = iter::once(ws.ws().into());\n+        match existing_ws {\n+            None => insert_children(self, InsertPosition::After(l_curly), to_insert),\n+            Some(ws) => {\n+                replace_children(self, RangeInclusive::new(ws.clone().into(), ws.into()), to_insert)\n+            }\n+        }\n+    }\n+}\n+\n+impl ast::RecordFieldList {\n+    #[must_use]\n+    pub fn append_field(&self, field: &ast::RecordField) -> ast::RecordFieldList {\n+        self.insert_field(InsertPosition::Last, field)\n+    }\n+\n+    #[must_use]\n+    pub fn insert_field(\n+        &self,\n+        position: InsertPosition<&'_ ast::RecordField>,\n+        field: &ast::RecordField,\n+    ) -> ast::RecordFieldList {\n+        let is_multiline = self.syntax().text().contains_char('\\n');\n+        let ws;\n+        let space = if is_multiline {\n+            ws = tokens::WsBuilder::new(&format!(\n+                \"\\n{}    \",\n+                leading_indent(self.syntax()).unwrap_or(\"\".into())\n+            ));\n+            ws.ws()\n+        } else {\n+            tokens::single_space()\n+        };\n+\n+        let mut to_insert: ArrayVec<[SyntaxElement; 4]> = ArrayVec::new();\n+        to_insert.push(space.into());\n+        to_insert.push(field.syntax().clone().into());\n+        to_insert.push(tokens::comma().into());\n+\n+        macro_rules! after_l_curly {\n+            () => {{\n+                let anchor = match self.l_curly() {\n+                    Some(it) => it,\n+                    None => return self.clone(),\n+                };\n+                InsertPosition::After(anchor)\n+            }};\n+        }\n+\n+        macro_rules! after_field {\n+            ($anchor:expr) => {\n+                if let Some(comma) = $anchor\n+                    .syntax()\n+                    .siblings_with_tokens(Direction::Next)\n+                    .find(|it| it.kind() == T![,])\n+                {\n+                    InsertPosition::After(comma)\n+                } else {\n+                    to_insert.insert(0, tokens::comma().into());\n+                    InsertPosition::After($anchor.syntax().clone().into())\n+                }\n+            };\n+        };\n+\n+        let position = match position {\n+            InsertPosition::First => after_l_curly!(),\n+            InsertPosition::Last => {\n+                if !is_multiline {\n+                    // don't insert comma before curly\n+                    to_insert.pop();\n+                }\n+                match self.fields().last() {\n+                    Some(it) => after_field!(it),\n+                    None => after_l_curly!(),\n+                }\n+            }\n+            InsertPosition::Before(anchor) => {\n+                InsertPosition::Before(anchor.syntax().clone().into())\n+            }\n+            InsertPosition::After(anchor) => after_field!(anchor),\n+        };\n+\n+        insert_children(self, position, to_insert.iter().cloned())\n+    }\n+\n+    fn l_curly(&self) -> Option<SyntaxElement> {\n+        self.syntax().children_with_tokens().find(|it| it.kind() == T!['{'])\n+    }\n+}\n+\n+impl ast::TypeParam {\n+    #[must_use]\n+    pub fn remove_bounds(&self) -> ast::TypeParam {\n+        let colon = match self.colon_token() {\n+            Some(it) => it,\n+            None => return self.clone(),\n+        };\n+        let end = match self.type_bound_list() {\n+            Some(it) => it.syntax().clone().into(),\n+            None => colon.clone().into(),\n+        };\n+        replace_children(self, RangeInclusive::new(colon.into(), end), iter::empty())\n+    }\n+}\n+\n+#[must_use]\n+pub fn strip_attrs_and_docs<N: ast::AttrsOwner>(node: &N) -> N {\n+    N::cast(strip_attrs_and_docs_inner(node.syntax().clone())).unwrap()\n+}\n+\n+fn strip_attrs_and_docs_inner(mut node: SyntaxNode) -> SyntaxNode {\n+    while let Some(start) =\n+        node.children_with_tokens().find(|it| it.kind() == ATTR || it.kind() == COMMENT)\n+    {\n+        let end = match &start.next_sibling_or_token() {\n+            Some(el) if el.kind() == WHITESPACE => el.clone(),\n+            Some(_) | None => start.clone(),\n+        };\n+        node = algo::replace_children(&node, RangeInclusive::new(start, end), &mut iter::empty());\n+    }\n+    node\n+}\n+\n+#[must_use]\n+pub fn replace_descendants<N: AstNode, D: AstNode>(\n+    parent: &N,\n+    replacement_map: impl Iterator<Item = (D, D)>,\n+) -> N {\n+    let map = replacement_map\n+        .map(|(from, to)| (from.syntax().clone().into(), to.syntax().clone().into()))\n+        .collect::<FxHashMap<_, _>>();\n+    let new_syntax = algo::replace_descendants(parent.syntax(), &map);\n+    N::cast(new_syntax).unwrap()\n+}\n+\n+// Note this is copy-pasted from fmt. It seems like fmt should be a separate\n+// crate, but basic tree building should be this crate. However, tree building\n+// might want to call into fmt...\n+fn leading_indent(node: &SyntaxNode) -> Option<SmolStr> {\n+    let prev_tokens = std::iter::successors(node.first_token(), |token| token.prev_token());\n+    for token in prev_tokens {\n+        if let Some(ws) = ast::Whitespace::cast(token.clone()) {\n+            let ws_text = ws.text();\n+            if let Some(pos) = ws_text.rfind('\\n') {\n+                return Some(ws_text[pos + 1..].into());\n+            }\n+        }\n+        if token.text().contains('\\n') {\n+            break;\n+        }\n+    }\n+    None\n+}\n+\n #[must_use]\n fn insert_children<N: AstNode>(\n     parent: &N,"}, {"sha": "cefc00402701cc2843cb6f9d5324dad85a44ab7c", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 33, "deletions": 50, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -1,10 +1,8 @@\n //! Various extension methods to ast Nodes, which are hard to code-generate.\n //! Extensions for various expressions live in a sibling `expr_extensions` module.\n \n-use itertools::Itertools;\n-\n use crate::{\n-    ast::{self, child_opt, children, AstNode, SyntaxNode},\n+    ast::{self, child_opt, children, AstChildren, AstNode, AttrInput, SyntaxNode},\n     SmolStr, SyntaxElement,\n     SyntaxKind::*,\n     SyntaxToken, T,\n@@ -38,62 +36,37 @@ fn text_of_first_token(node: &SyntaxNode) -> &SmolStr {\n }\n \n impl ast::Attr {\n-    pub fn is_inner(&self) -> bool {\n-        let tt = match self.value() {\n-            None => return false,\n-            Some(tt) => tt,\n-        };\n-\n-        let prev = match tt.syntax().prev_sibling() {\n-            None => return false,\n-            Some(prev) => prev,\n-        };\n-\n-        prev.kind() == T![!]\n-    }\n-\n-    pub fn as_atom(&self) -> Option<SmolStr> {\n-        let tt = self.value()?;\n-        let (_bra, attr, _ket) = tt.syntax().children_with_tokens().collect_tuple()?;\n-        if attr.kind() == IDENT {\n-            Some(attr.as_token()?.text().clone())\n-        } else {\n-            None\n+    pub fn as_simple_atom(&self) -> Option<SmolStr> {\n+        match self.input() {\n+            None => self.simple_name(),\n+            Some(_) => None,\n         }\n     }\n \n-    pub fn as_call(&self) -> Option<(SmolStr, ast::TokenTree)> {\n-        let tt = self.value()?;\n-        let (_bra, attr, args, _ket) = tt.syntax().children_with_tokens().collect_tuple()?;\n-        let args = ast::TokenTree::cast(args.as_node()?.clone())?;\n-        if attr.kind() == IDENT {\n-            Some((attr.as_token()?.text().clone(), args))\n-        } else {\n-            None\n+    pub fn as_simple_call(&self) -> Option<(SmolStr, ast::TokenTree)> {\n+        match self.input() {\n+            Some(AttrInput::TokenTree(tt)) => Some((self.simple_name()?, tt)),\n+            _ => None,\n         }\n     }\n \n-    pub fn as_named(&self) -> Option<SmolStr> {\n-        let tt = self.value()?;\n-        let attr = tt.syntax().children_with_tokens().nth(1)?;\n-        if attr.kind() == IDENT {\n-            Some(attr.as_token()?.text().clone())\n-        } else {\n-            None\n+    pub fn as_simple_key_value(&self) -> Option<(SmolStr, SmolStr)> {\n+        match self.input() {\n+            Some(AttrInput::Literal(lit)) => {\n+                let key = self.simple_name()?;\n+                // FIXME: escape? raw string?\n+                let value = lit.syntax().first_token()?.text().trim_matches('\"').into();\n+                Some((key, value))\n+            }\n+            _ => None,\n         }\n     }\n \n-    pub fn as_key_value(&self) -> Option<(SmolStr, SmolStr)> {\n-        let tt = self.value()?;\n-        let tt_node = tt.syntax();\n-        let attr = tt_node.children_with_tokens().nth(1)?;\n-        if attr.kind() == IDENT {\n-            let key = attr.as_token()?.text().clone();\n-            let val_node = tt_node.children_with_tokens().find(|t| t.kind() == STRING)?;\n-            let val = val_node.as_token()?.text().trim_start_matches('\"').trim_end_matches('\"');\n-            Some((key, SmolStr::new(val)))\n-        } else {\n-            None\n+    pub fn simple_name(&self) -> Option<SmolStr> {\n+        let path = self.path()?;\n+        match (path.segment(), path.qualifier()) {\n+            (Some(segment), None) => Some(segment.syntax().first_token()?.text().clone()),\n+            _ => None,\n         }\n     }\n }\n@@ -203,6 +176,16 @@ impl ast::ImplBlock {\n     }\n }\n \n+impl ast::AttrsOwner for ast::ImplItem {\n+    fn attrs(&self) -> AstChildren<ast::Attr> {\n+        match self {\n+            ast::ImplItem::FnDef(it) => it.attrs(),\n+            ast::ImplItem::TypeAliasDef(it) => it.attrs(),\n+            ast::ImplItem::ConstDef(it) => it.attrs(),\n+        }\n+    }\n+}\n+\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum StructKind {\n     Tuple(ast::TupleFieldDefList),"}, {"sha": "3bb5571ee61ae336d3f438b3f3742f30931e986f", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -166,11 +166,52 @@ impl AstNode for Attr {\n     }\n }\n impl Attr {\n-    pub fn value(&self) -> Option<TokenTree> {\n+    pub fn path(&self) -> Option<Path> {\n+        AstChildren::new(&self.syntax).next()\n+    }\n+    pub fn input(&self) -> Option<AttrInput> {\n         AstChildren::new(&self.syntax).next()\n     }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub enum AttrInput {\n+    Literal(Literal),\n+    TokenTree(TokenTree),\n+}\n+impl From<Literal> for AttrInput {\n+    fn from(node: Literal) -> AttrInput {\n+        AttrInput::Literal(node)\n+    }\n+}\n+impl From<TokenTree> for AttrInput {\n+    fn from(node: TokenTree) -> AttrInput {\n+        AttrInput::TokenTree(node)\n+    }\n+}\n+impl AstNode for AttrInput {\n+    fn can_cast(kind: SyntaxKind) -> bool {\n+        match kind {\n+            LITERAL | TOKEN_TREE => true,\n+            _ => false,\n+        }\n+    }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        let res = match syntax.kind() {\n+            LITERAL => AttrInput::Literal(Literal { syntax }),\n+            TOKEN_TREE => AttrInput::TokenTree(TokenTree { syntax }),\n+            _ => return None,\n+        };\n+        Some(res)\n+    }\n+    fn syntax(&self) -> &SyntaxNode {\n+        match self {\n+            AttrInput::Literal(it) => &it.syntax,\n+            AttrInput::TokenTree(it) => &it.syntax,\n+        }\n+    }\n+}\n+impl AttrInput {}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct AwaitExpr {\n     pub(crate) syntax: SyntaxNode,\n }"}, {"sha": "f275a49558d7ad2c264532046e8d4048b02f1258", "filename": "crates/ra_syntax/src/ast/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -99,7 +99,7 @@ pub trait AttrsOwner: AstNode {\n         children(self)\n     }\n     fn has_atom_attr(&self, atom: &str) -> bool {\n-        self.attrs().filter_map(|x| x.as_atom()).any(|x| x == atom)\n+        self.attrs().filter_map(|x| x.as_simple_atom()).any(|x| x == atom)\n     }\n }\n "}, {"sha": "30328f59faf2b4e635ea009113c74c44b213f13c", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -576,7 +576,8 @@ Grammar(\n             traits: [ \"NameOwner\", \"AttrsOwner\",\"DocCommentsOwner\" ],\n             options: [ \"TokenTree\", \"Path\" ],\n         ),\n-        \"Attr\": ( options: [ [\"value\", \"TokenTree\"] ] ),\n+        \"AttrInput\": ( enum: [ \"Literal\", \"TokenTree\" ] ),\n+        \"Attr\": ( options: [ \"Path\", [ \"input\", \"AttrInput\" ] ] ),\n         \"TokenTree\": (),\n         \"TypeParamList\": (\n             collections: ["}, {"sha": "7c1a23170189eb1249e50e373bee87ed65e04071", "filename": "crates/ra_syntax/test_data/parser/err/0005_attribute_recover.txt", "status": "modified", "additions": 36, "deletions": 32, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -2,20 +2,22 @@ SOURCE_FILE@[0; 54)\n   FN_DEF@[0; 31)\n     ATTR@[0; 18)\n       POUND@[0; 1) \"#\"\n-      TOKEN_TREE@[1; 18)\n-        L_BRACK@[1; 2) \"[\"\n-        IDENT@[2; 5) \"foo\"\n-        TOKEN_TREE@[5; 17)\n-          L_PAREN@[5; 6) \"(\"\n-          IDENT@[6; 9) \"foo\"\n-          COMMA@[9; 10) \",\"\n-          WHITESPACE@[10; 11) \" \"\n-          PLUS@[11; 12) \"+\"\n-          COMMA@[12; 13) \",\"\n-          WHITESPACE@[13; 14) \" \"\n-          INT_NUMBER@[14; 16) \"92\"\n-          R_PAREN@[16; 17) \")\"\n-        R_BRACK@[17; 18) \"]\"\n+      L_BRACK@[1; 2) \"[\"\n+      PATH@[2; 5)\n+        PATH_SEGMENT@[2; 5)\n+          NAME_REF@[2; 5)\n+            IDENT@[2; 5) \"foo\"\n+      TOKEN_TREE@[5; 17)\n+        L_PAREN@[5; 6) \"(\"\n+        IDENT@[6; 9) \"foo\"\n+        COMMA@[9; 10) \",\"\n+        WHITESPACE@[10; 11) \" \"\n+        PLUS@[11; 12) \"+\"\n+        COMMA@[12; 13) \",\"\n+        WHITESPACE@[13; 14) \" \"\n+        INT_NUMBER@[14; 16) \"92\"\n+        R_PAREN@[16; 17) \")\"\n+      R_BRACK@[17; 18) \"]\"\n     WHITESPACE@[18; 19) \"\\n\"\n     FN_KW@[19; 21) \"fn\"\n     WHITESPACE@[21; 22) \" \"\n@@ -33,24 +35,26 @@ SOURCE_FILE@[0; 54)\n   WHITESPACE@[31; 34) \"\\n\\n\\n\"\n   ATTR@[34; 53)\n     POUND@[34; 35) \"#\"\n-    TOKEN_TREE@[35; 53)\n-      L_BRACK@[35; 36) \"[\"\n-      IDENT@[36; 39) \"foo\"\n-      TOKEN_TREE@[39; 53)\n-        L_PAREN@[39; 40) \"(\"\n-        WHITESPACE@[40; 41) \"\\n\"\n-        FN_KW@[41; 43) \"fn\"\n-        WHITESPACE@[43; 44) \" \"\n-        IDENT@[44; 47) \"foo\"\n-        TOKEN_TREE@[47; 49)\n-          L_PAREN@[47; 48) \"(\"\n-          R_PAREN@[48; 49) \")\"\n-        WHITESPACE@[49; 50) \" \"\n-        TOKEN_TREE@[50; 53)\n-          L_CURLY@[50; 51) \"{\"\n-          WHITESPACE@[51; 52) \"\\n\"\n-          R_CURLY@[52; 53) \"}\"\n+    L_BRACK@[35; 36) \"[\"\n+    PATH@[36; 39)\n+      PATH_SEGMENT@[36; 39)\n+        NAME_REF@[36; 39)\n+          IDENT@[36; 39) \"foo\"\n+    TOKEN_TREE@[39; 53)\n+      L_PAREN@[39; 40) \"(\"\n+      WHITESPACE@[40; 41) \"\\n\"\n+      FN_KW@[41; 43) \"fn\"\n+      WHITESPACE@[43; 44) \" \"\n+      IDENT@[44; 47) \"foo\"\n+      TOKEN_TREE@[47; 49)\n+        L_PAREN@[47; 48) \"(\"\n+        R_PAREN@[48; 49) \")\"\n+      WHITESPACE@[49; 50) \" \"\n+      TOKEN_TREE@[50; 53)\n+        L_CURLY@[50; 51) \"{\"\n+        WHITESPACE@[51; 52) \"\\n\"\n+        R_CURLY@[52; 53) \"}\"\n   WHITESPACE@[53; 54) \"\\n\"\n error 53: expected R_PAREN\n-error 53: expected R_BRACK\n+error 53: expected `]`\n error 53: expected an item"}, {"sha": "c5be73a5a08e8108a749fa7a33dde038e6725933", "filename": "crates/ra_syntax/test_data/parser/err/0028_macro_2.0.txt", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0028_macro_2.0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0028_macro_2.0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0028_macro_2.0.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -60,10 +60,12 @@ SOURCE_FILE@[0; 349)\n   FN_DEF@[95; 348)\n     ATTR@[95; 102)\n       POUND@[95; 96) \"#\"\n-      TOKEN_TREE@[96; 102)\n-        L_BRACK@[96; 97) \"[\"\n-        IDENT@[97; 101) \"test\"\n-        R_BRACK@[101; 102) \"]\"\n+      L_BRACK@[96; 97) \"[\"\n+      PATH@[97; 101)\n+        PATH_SEGMENT@[97; 101)\n+          NAME_REF@[97; 101)\n+            IDENT@[97; 101) \"test\"\n+      R_BRACK@[101; 102) \"]\"\n     WHITESPACE@[102; 103) \"\\n\"\n     FN_KW@[103; 105) \"fn\"\n     WHITESPACE@[105; 106) \" \""}, {"sha": "522a0d0e0c93d84f2299d539272006320c41ea25", "filename": "crates/ra_syntax/test_data/parser/err/0031_block_inner_attrs.txt", "status": "modified", "additions": 40, "deletions": 32, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -28,14 +28,16 @@ SOURCE_FILE@[0; 350)\n               ATTR@[39; 83)\n                 POUND@[39; 40) \"#\"\n                 EXCL@[40; 41) \"!\"\n-                TOKEN_TREE@[41; 83)\n-                  L_BRACK@[41; 42) \"[\"\n-                  IDENT@[42; 45) \"doc\"\n-                  TOKEN_TREE@[45; 82)\n-                    L_PAREN@[45; 46) \"(\"\n-                    STRING@[46; 81) \"\\\"Inner attributes not ...\"\n-                    R_PAREN@[81; 82) \")\"\n-                  R_BRACK@[82; 83) \"]\"\n+                L_BRACK@[41; 42) \"[\"\n+                PATH@[42; 45)\n+                  PATH_SEGMENT@[42; 45)\n+                    NAME_REF@[42; 45)\n+                      IDENT@[42; 45) \"doc\"\n+                TOKEN_TREE@[45; 82)\n+                  L_PAREN@[45; 46) \"(\"\n+                  STRING@[46; 81) \"\\\"Inner attributes not ...\"\n+                  R_PAREN@[81; 82) \")\"\n+                R_BRACK@[82; 83) \"]\"\n               WHITESPACE@[83; 92) \"\\n        \"\n               COMMENT@[92; 122) \"//! Nor are ModuleDoc ...\"\n               WHITESPACE@[122; 127) \"\\n    \"\n@@ -57,26 +59,30 @@ SOURCE_FILE@[0; 350)\n                 ATTR@[152; 171)\n                   POUND@[152; 153) \"#\"\n                   EXCL@[153; 154) \"!\"\n-                  TOKEN_TREE@[154; 171)\n-                    L_BRACK@[154; 155) \"[\"\n-                    IDENT@[155; 158) \"doc\"\n-                    TOKEN_TREE@[158; 170)\n-                      L_PAREN@[158; 159) \"(\"\n-                      STRING@[159; 169) \"\\\"Nor here\\\"\"\n-                      R_PAREN@[169; 170) \")\"\n-                    R_BRACK@[170; 171) \"]\"\n+                  L_BRACK@[154; 155) \"[\"\n+                  PATH@[155; 158)\n+                    PATH_SEGMENT@[155; 158)\n+                      NAME_REF@[155; 158)\n+                        IDENT@[155; 158) \"doc\"\n+                  TOKEN_TREE@[158; 170)\n+                    L_PAREN@[158; 159) \"(\"\n+                    STRING@[159; 169) \"\\\"Nor here\\\"\"\n+                    R_PAREN@[169; 170) \")\"\n+                  R_BRACK@[170; 171) \"]\"\n                 WHITESPACE@[171; 180) \"\\n        \"\n                 ATTR@[180; 212)\n                   POUND@[180; 181) \"#\"\n                   EXCL@[181; 182) \"!\"\n-                  TOKEN_TREE@[182; 212)\n-                    L_BRACK@[182; 183) \"[\"\n-                    IDENT@[183; 186) \"doc\"\n-                    TOKEN_TREE@[186; 211)\n-                      L_PAREN@[186; 187) \"(\"\n-                      STRING@[187; 210) \"\\\"We error on each attr\\\"\"\n-                      R_PAREN@[210; 211) \")\"\n-                    R_BRACK@[211; 212) \"]\"\n+                  L_BRACK@[182; 183) \"[\"\n+                  PATH@[183; 186)\n+                    PATH_SEGMENT@[183; 186)\n+                      NAME_REF@[183; 186)\n+                        IDENT@[183; 186) \"doc\"\n+                  TOKEN_TREE@[186; 211)\n+                    L_PAREN@[186; 187) \"(\"\n+                    STRING@[187; 210) \"\\\"We error on each attr\\\"\"\n+                    R_PAREN@[210; 211) \")\"\n+                  R_BRACK@[211; 212) \"]\"\n                 WHITESPACE@[212; 221) \"\\n        \"\n                 COMMENT@[221; 251) \"//! Nor are ModuleDoc ...\"\n                 WHITESPACE@[251; 256) \"\\n    \"\n@@ -96,14 +102,16 @@ SOURCE_FILE@[0; 350)\n               ATTR@[283; 302)\n                 POUND@[283; 284) \"#\"\n                 EXCL@[284; 285) \"!\"\n-                TOKEN_TREE@[285; 302)\n-                  L_BRACK@[285; 286) \"[\"\n-                  IDENT@[286; 289) \"doc\"\n-                  TOKEN_TREE@[289; 301)\n-                    L_PAREN@[289; 290) \"(\"\n-                    STRING@[290; 300) \"\\\"Nor here\\\"\"\n-                    R_PAREN@[300; 301) \")\"\n-                  R_BRACK@[301; 302) \"]\"\n+                L_BRACK@[285; 286) \"[\"\n+                PATH@[286; 289)\n+                  PATH_SEGMENT@[286; 289)\n+                    NAME_REF@[286; 289)\n+                      IDENT@[286; 289) \"doc\"\n+                TOKEN_TREE@[289; 301)\n+                  L_PAREN@[289; 290) \"(\"\n+                  STRING@[290; 300) \"\\\"Nor here\\\"\"\n+                  R_PAREN@[300; 301) \")\"\n+                R_BRACK@[301; 302) \"]\"\n               WHITESPACE@[302; 311) \"\\n        \"\n               COMMENT@[311; 341) \"//! Nor are ModuleDoc ...\"\n               WHITESPACE@[341; 346) \"\\n    \""}, {"sha": "dbc0081ac50ef5884e27a472727dbebda807ba93", "filename": "crates/ra_syntax/test_data/parser/err/0032_match_arms_inner_attrs.txt", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -135,14 +135,16 @@ SOURCE_FILE@[0; 293)\n             MATCH_ARM@[210; 250)\n               ATTR@[210; 222)\n                 POUND@[210; 211) \"#\"\n-                TOKEN_TREE@[211; 222)\n-                  L_BRACK@[211; 212) \"[\"\n-                  IDENT@[212; 215) \"cfg\"\n-                  TOKEN_TREE@[215; 221)\n-                    L_PAREN@[215; 216) \"(\"\n-                    IDENT@[216; 220) \"test\"\n-                    R_PAREN@[220; 221) \")\"\n-                  R_BRACK@[221; 222) \"]\"\n+                L_BRACK@[211; 212) \"[\"\n+                PATH@[212; 215)\n+                  PATH_SEGMENT@[212; 215)\n+                    NAME_REF@[212; 215)\n+                      IDENT@[212; 215) \"cfg\"\n+                TOKEN_TREE@[215; 221)\n+                  L_PAREN@[215; 216) \"(\"\n+                  IDENT@[216; 220) \"test\"\n+                  R_PAREN@[220; 221) \")\"\n+                R_BRACK@[221; 222) \"]\"\n               WHITESPACE@[222; 231) \"\\n        \"\n               ATTR@[231; 232)\n                 POUND@[231; 232) \"#\""}, {"sha": "fd5ccc3f250998aa3a1941d031ee66ff45132e6e", "filename": "crates/ra_syntax/test_data/parser/err/0033_match_arms_outer_attrs.txt", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -47,14 +47,16 @@ SOURCE_FILE@[0; 89)\n             MATCH_ARM@[68; 80)\n               ATTR@[68; 80)\n                 POUND@[68; 69) \"#\"\n-                TOKEN_TREE@[69; 80)\n-                  L_BRACK@[69; 70) \"[\"\n-                  IDENT@[70; 73) \"cfg\"\n-                  TOKEN_TREE@[73; 79)\n-                    L_PAREN@[73; 74) \"(\"\n-                    IDENT@[74; 78) \"test\"\n-                    R_PAREN@[78; 79) \")\"\n-                  R_BRACK@[79; 80) \"]\"\n+                L_BRACK@[69; 70) \"[\"\n+                PATH@[70; 73)\n+                  PATH_SEGMENT@[70; 73)\n+                    NAME_REF@[70; 73)\n+                      IDENT@[70; 73) \"cfg\"\n+                TOKEN_TREE@[73; 79)\n+                  L_PAREN@[73; 74) \"(\"\n+                  IDENT@[74; 78) \"test\"\n+                  R_PAREN@[78; 79) \")\"\n+                R_BRACK@[79; 80) \"]\"\n             WHITESPACE@[80; 85) \"\\n    \"\n             R_CURLY@[85; 86) \"}\"\n         WHITESPACE@[86; 87) \"\\n\""}, {"sha": "2ca5b8f32ff667efc7a9e6787bd8c0c0480524da", "filename": "crates/ra_syntax/test_data/parser/inline/err/0009_attr_on_expr_not_allowed.txt", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -15,10 +15,12 @@ SOURCE_FILE@[0; 48)\n         EXPR_STMT@[14; 25)\n           ATTR@[14; 18)\n             POUND@[14; 15) \"#\"\n-            TOKEN_TREE@[15; 18)\n-              L_BRACK@[15; 16) \"[\"\n-              IDENT@[16; 17) \"A\"\n-              R_BRACK@[17; 18) \"]\"\n+            L_BRACK@[15; 16) \"[\"\n+            PATH@[16; 17)\n+              PATH_SEGMENT@[16; 17)\n+                NAME_REF@[16; 17)\n+                  IDENT@[16; 17) \"A\"\n+            R_BRACK@[17; 18) \"]\"\n           WHITESPACE@[18; 19) \" \"\n           BIN_EXPR@[19; 24)\n             LITERAL@[19; 20)\n@@ -33,10 +35,12 @@ SOURCE_FILE@[0; 48)\n         EXPR_STMT@[29; 45)\n           ATTR@[29; 33)\n             POUND@[29; 30) \"#\"\n-            TOKEN_TREE@[30; 33)\n-              L_BRACK@[30; 31) \"[\"\n-              IDENT@[31; 32) \"B\"\n-              R_BRACK@[32; 33) \"]\"\n+            L_BRACK@[30; 31) \"[\"\n+            PATH@[31; 32)\n+              PATH_SEGMENT@[31; 32)\n+                NAME_REF@[31; 32)\n+                  IDENT@[31; 32) \"B\"\n+            R_BRACK@[32; 33) \"]\"\n           WHITESPACE@[33; 34) \" \"\n           IF_EXPR@[34; 44)\n             IF_KW@[34; 36) \"if\""}, {"sha": "731c31f7639372798a0eedce43ec421afc15cc65", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0054_record_field_attrs.txt", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -11,18 +11,20 @@ SOURCE_FILE@[0; 64)\n       RECORD_FIELD_DEF@[15; 60)\n         ATTR@[15; 43)\n           POUND@[15; 16) \"#\"\n-          TOKEN_TREE@[16; 43)\n-            L_BRACK@[16; 17) \"[\"\n-            IDENT@[17; 22) \"serde\"\n-            TOKEN_TREE@[22; 42)\n-              L_PAREN@[22; 23) \"(\"\n-              IDENT@[23; 27) \"with\"\n-              WHITESPACE@[27; 28) \" \"\n-              EQ@[28; 29) \"=\"\n-              WHITESPACE@[29; 30) \" \"\n-              STRING@[30; 41) \"\\\"url_serde\\\"\"\n-              R_PAREN@[41; 42) \")\"\n-            R_BRACK@[42; 43) \"]\"\n+          L_BRACK@[16; 17) \"[\"\n+          PATH@[17; 22)\n+            PATH_SEGMENT@[17; 22)\n+              NAME_REF@[17; 22)\n+                IDENT@[17; 22) \"serde\"\n+          TOKEN_TREE@[22; 42)\n+            L_PAREN@[22; 23) \"(\"\n+            IDENT@[23; 27) \"with\"\n+            WHITESPACE@[27; 28) \" \"\n+            EQ@[28; 29) \"=\"\n+            WHITESPACE@[29; 30) \" \"\n+            STRING@[30; 41) \"\\\"url_serde\\\"\"\n+            R_PAREN@[41; 42) \")\"\n+          R_BRACK@[42; 43) \"]\"\n         WHITESPACE@[43; 48) \"\\n    \"\n         VISIBILITY@[48; 51)\n           PUB_KW@[48; 51) \"pub\""}, {"sha": "8fe15d8e23c20d949ede1935e6b58de8f33bcbda", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0115_tuple_field_attrs.txt", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -11,18 +11,20 @@ SOURCE_FILE@[0; 60)\n       TUPLE_FIELD_DEF@[15; 55)\n         ATTR@[15; 43)\n           POUND@[15; 16) \"#\"\n-          TOKEN_TREE@[16; 43)\n-            L_BRACK@[16; 17) \"[\"\n-            IDENT@[17; 22) \"serde\"\n-            TOKEN_TREE@[22; 42)\n-              L_PAREN@[22; 23) \"(\"\n-              IDENT@[23; 27) \"with\"\n-              WHITESPACE@[27; 28) \" \"\n-              EQ@[28; 29) \"=\"\n-              WHITESPACE@[29; 30) \" \"\n-              STRING@[30; 41) \"\\\"url_serde\\\"\"\n-              R_PAREN@[41; 42) \")\"\n-            R_BRACK@[42; 43) \"]\"\n+          L_BRACK@[16; 17) \"[\"\n+          PATH@[17; 22)\n+            PATH_SEGMENT@[17; 22)\n+              NAME_REF@[17; 22)\n+                IDENT@[17; 22) \"serde\"\n+          TOKEN_TREE@[22; 42)\n+            L_PAREN@[22; 23) \"(\"\n+            IDENT@[23; 27) \"with\"\n+            WHITESPACE@[27; 28) \" \"\n+            EQ@[28; 29) \"=\"\n+            WHITESPACE@[29; 30) \" \"\n+            STRING@[30; 41) \"\\\"url_serde\\\"\"\n+            R_PAREN@[41; 42) \")\"\n+          R_BRACK@[42; 43) \"]\"\n         WHITESPACE@[43; 48) \"\\n    \"\n         VISIBILITY@[48; 51)\n           PUB_KW@[48; 51) \"pub\""}, {"sha": "0e9e9b95b09c42a38afaf4f7b580d5f5f1c96e86", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0118_impl_inner_attributes.txt", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -25,14 +25,16 @@ SOURCE_FILE@[0; 94)\n       ATTR@[54; 91)\n         POUND@[54; 55) \"#\"\n         EXCL@[55; 56) \"!\"\n-        TOKEN_TREE@[56; 91)\n-          L_BRACK@[56; 57) \"[\"\n-          IDENT@[57; 60) \"doc\"\n-          TOKEN_TREE@[60; 90)\n-            L_PAREN@[60; 61) \"(\"\n-            STRING@[61; 89) \"\\\"This is also a doc c ...\"\n-            R_PAREN@[89; 90) \")\"\n-          R_BRACK@[90; 91) \"]\"\n+        L_BRACK@[56; 57) \"[\"\n+        PATH@[57; 60)\n+          PATH_SEGMENT@[57; 60)\n+            NAME_REF@[57; 60)\n+              IDENT@[57; 60) \"doc\"\n+        TOKEN_TREE@[60; 90)\n+          L_PAREN@[60; 61) \"(\"\n+          STRING@[61; 89) \"\\\"This is also a doc c ...\"\n+          R_PAREN@[89; 90) \")\"\n+        R_BRACK@[90; 91) \"]\"\n       WHITESPACE@[91; 92) \"\\n\"\n       R_CURLY@[92; 93) \"}\"\n   WHITESPACE@[93; 94) \"\\n\""}, {"sha": "640e0640f47e45b31fe84f8d0f7ff8556d74c1f4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0120_match_arms_inner_attribute.txt", "status": "modified", "additions": 30, "deletions": 24, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -25,38 +25,44 @@ SOURCE_FILE@[0; 139)\n             ATTR@[34; 60)\n               POUND@[34; 35) \"#\"\n               EXCL@[35; 36) \"!\"\n-              TOKEN_TREE@[36; 60)\n-                L_BRACK@[36; 37) \"[\"\n-                IDENT@[37; 40) \"doc\"\n-                TOKEN_TREE@[40; 59)\n-                  L_PAREN@[40; 41) \"(\"\n-                  STRING@[41; 58) \"\\\"Inner attribute\\\"\"\n-                  R_PAREN@[58; 59) \")\"\n-                R_BRACK@[59; 60) \"]\"\n+              L_BRACK@[36; 37) \"[\"\n+              PATH@[37; 40)\n+                PATH_SEGMENT@[37; 40)\n+                  NAME_REF@[37; 40)\n+                    IDENT@[37; 40) \"doc\"\n+              TOKEN_TREE@[40; 59)\n+                L_PAREN@[40; 41) \"(\"\n+                STRING@[41; 58) \"\\\"Inner attribute\\\"\"\n+                R_PAREN@[58; 59) \")\"\n+              R_BRACK@[59; 60) \"]\"\n             WHITESPACE@[60; 69) \"\\n        \"\n             ATTR@[69; 86)\n               POUND@[69; 70) \"#\"\n               EXCL@[70; 71) \"!\"\n-              TOKEN_TREE@[71; 86)\n-                L_BRACK@[71; 72) \"[\"\n-                IDENT@[72; 75) \"doc\"\n-                TOKEN_TREE@[75; 85)\n-                  L_PAREN@[75; 76) \"(\"\n-                  STRING@[76; 84) \"\\\"Can be\\\"\"\n-                  R_PAREN@[84; 85) \")\"\n-                R_BRACK@[85; 86) \"]\"\n+              L_BRACK@[71; 72) \"[\"\n+              PATH@[72; 75)\n+                PATH_SEGMENT@[72; 75)\n+                  NAME_REF@[72; 75)\n+                    IDENT@[72; 75) \"doc\"\n+              TOKEN_TREE@[75; 85)\n+                L_PAREN@[75; 76) \"(\"\n+                STRING@[76; 84) \"\\\"Can be\\\"\"\n+                R_PAREN@[84; 85) \")\"\n+              R_BRACK@[85; 86) \"]\"\n             WHITESPACE@[86; 95) \"\\n        \"\n             ATTR@[95; 113)\n               POUND@[95; 96) \"#\"\n               EXCL@[96; 97) \"!\"\n-              TOKEN_TREE@[97; 113)\n-                L_BRACK@[97; 98) \"[\"\n-                IDENT@[98; 101) \"doc\"\n-                TOKEN_TREE@[101; 112)\n-                  L_PAREN@[101; 102) \"(\"\n-                  STRING@[102; 111) \"\\\"Stacked\\\"\"\n-                  R_PAREN@[111; 112) \")\"\n-                R_BRACK@[112; 113) \"]\"\n+              L_BRACK@[97; 98) \"[\"\n+              PATH@[98; 101)\n+                PATH_SEGMENT@[98; 101)\n+                  NAME_REF@[98; 101)\n+                    IDENT@[98; 101) \"doc\"\n+              TOKEN_TREE@[101; 112)\n+                L_PAREN@[101; 102) \"(\"\n+                STRING@[102; 111) \"\\\"Stacked\\\"\"\n+                R_PAREN@[111; 112) \")\"\n+              R_BRACK@[112; 113) \"]\"\n             WHITESPACE@[113; 122) \"\\n        \"\n             MATCH_ARM@[122; 129)\n               PLACEHOLDER_PAT@[122; 123)"}, {"sha": "ff380b448608f24ac692806e0cb9f262bfe973ba", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0121_match_arms_outer_attributes.txt", "status": "modified", "additions": 70, "deletions": 60, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -25,18 +25,20 @@ SOURCE_FILE@[0; 259)\n             MATCH_ARM@[34; 74)\n               ATTR@[34; 58)\n                 POUND@[34; 35) \"#\"\n-                TOKEN_TREE@[35; 58)\n-                  L_BRACK@[35; 36) \"[\"\n-                  IDENT@[36; 39) \"cfg\"\n-                  TOKEN_TREE@[39; 57)\n-                    L_PAREN@[39; 40) \"(\"\n-                    IDENT@[40; 47) \"feature\"\n-                    WHITESPACE@[47; 48) \" \"\n-                    EQ@[48; 49) \"=\"\n-                    WHITESPACE@[49; 50) \" \"\n-                    STRING@[50; 56) \"\\\"some\\\"\"\n-                    R_PAREN@[56; 57) \")\"\n-                  R_BRACK@[57; 58) \"]\"\n+                L_BRACK@[35; 36) \"[\"\n+                PATH@[36; 39)\n+                  PATH_SEGMENT@[36; 39)\n+                    NAME_REF@[36; 39)\n+                      IDENT@[36; 39) \"cfg\"\n+                TOKEN_TREE@[39; 57)\n+                  L_PAREN@[39; 40) \"(\"\n+                  IDENT@[40; 47) \"feature\"\n+                  WHITESPACE@[47; 48) \" \"\n+                  EQ@[48; 49) \"=\"\n+                  WHITESPACE@[49; 50) \" \"\n+                  STRING@[50; 56) \"\\\"some\\\"\"\n+                  R_PAREN@[56; 57) \")\"\n+                R_BRACK@[57; 58) \"]\"\n               WHITESPACE@[58; 67) \"\\n        \"\n               PLACEHOLDER_PAT@[67; 68)\n                 UNDERSCORE@[67; 68) \"_\"\n@@ -51,18 +53,20 @@ SOURCE_FILE@[0; 259)\n             MATCH_ARM@[84; 125)\n               ATTR@[84; 109)\n                 POUND@[84; 85) \"#\"\n-                TOKEN_TREE@[85; 109)\n-                  L_BRACK@[85; 86) \"[\"\n-                  IDENT@[86; 89) \"cfg\"\n-                  TOKEN_TREE@[89; 108)\n-                    L_PAREN@[89; 90) \"(\"\n-                    IDENT@[90; 97) \"feature\"\n-                    WHITESPACE@[97; 98) \" \"\n-                    EQ@[98; 99) \"=\"\n-                    WHITESPACE@[99; 100) \" \"\n-                    STRING@[100; 107) \"\\\"other\\\"\"\n-                    R_PAREN@[107; 108) \")\"\n-                  R_BRACK@[108; 109) \"]\"\n+                L_BRACK@[85; 86) \"[\"\n+                PATH@[86; 89)\n+                  PATH_SEGMENT@[86; 89)\n+                    NAME_REF@[86; 89)\n+                      IDENT@[86; 89) \"cfg\"\n+                TOKEN_TREE@[89; 108)\n+                  L_PAREN@[89; 90) \"(\"\n+                  IDENT@[90; 97) \"feature\"\n+                  WHITESPACE@[97; 98) \" \"\n+                  EQ@[98; 99) \"=\"\n+                  WHITESPACE@[99; 100) \" \"\n+                  STRING@[100; 107) \"\\\"other\\\"\"\n+                  R_PAREN@[107; 108) \")\"\n+                R_BRACK@[108; 109) \"]\"\n               WHITESPACE@[109; 118) \"\\n        \"\n               PLACEHOLDER_PAT@[118; 119)\n                 UNDERSCORE@[118; 119) \"_\"\n@@ -77,48 +81,54 @@ SOURCE_FILE@[0; 259)\n             MATCH_ARM@[135; 249)\n               ATTR@[135; 159)\n                 POUND@[135; 136) \"#\"\n-                TOKEN_TREE@[136; 159)\n-                  L_BRACK@[136; 137) \"[\"\n-                  IDENT@[137; 140) \"cfg\"\n-                  TOKEN_TREE@[140; 158)\n-                    L_PAREN@[140; 141) \"(\"\n-                    IDENT@[141; 148) \"feature\"\n-                    WHITESPACE@[148; 149) \" \"\n-                    EQ@[149; 150) \"=\"\n-                    WHITESPACE@[150; 151) \" \"\n-                    STRING@[151; 157) \"\\\"many\\\"\"\n-                    R_PAREN@[157; 158) \")\"\n-                  R_BRACK@[158; 159) \"]\"\n+                L_BRACK@[136; 137) \"[\"\n+                PATH@[137; 140)\n+                  PATH_SEGMENT@[137; 140)\n+                    NAME_REF@[137; 140)\n+                      IDENT@[137; 140) \"cfg\"\n+                TOKEN_TREE@[140; 158)\n+                  L_PAREN@[140; 141) \"(\"\n+                  IDENT@[141; 148) \"feature\"\n+                  WHITESPACE@[148; 149) \" \"\n+                  EQ@[149; 150) \"=\"\n+                  WHITESPACE@[150; 151) \" \"\n+                  STRING@[151; 157) \"\\\"many\\\"\"\n+                  R_PAREN@[157; 158) \")\"\n+                R_BRACK@[158; 159) \"]\"\n               WHITESPACE@[159; 168) \"\\n        \"\n               ATTR@[168; 198)\n                 POUND@[168; 169) \"#\"\n-                TOKEN_TREE@[169; 198)\n-                  L_BRACK@[169; 170) \"[\"\n-                  IDENT@[170; 173) \"cfg\"\n-                  TOKEN_TREE@[173; 197)\n-                    L_PAREN@[173; 174) \"(\"\n-                    IDENT@[174; 181) \"feature\"\n-                    WHITESPACE@[181; 182) \" \"\n-                    EQ@[182; 183) \"=\"\n-                    WHITESPACE@[183; 184) \" \"\n-                    STRING@[184; 196) \"\\\"attributes\\\"\"\n-                    R_PAREN@[196; 197) \")\"\n-                  R_BRACK@[197; 198) \"]\"\n+                L_BRACK@[169; 170) \"[\"\n+                PATH@[170; 173)\n+                  PATH_SEGMENT@[170; 173)\n+                    NAME_REF@[170; 173)\n+                      IDENT@[170; 173) \"cfg\"\n+                TOKEN_TREE@[173; 197)\n+                  L_PAREN@[173; 174) \"(\"\n+                  IDENT@[174; 181) \"feature\"\n+                  WHITESPACE@[181; 182) \" \"\n+                  EQ@[182; 183) \"=\"\n+                  WHITESPACE@[183; 184) \" \"\n+                  STRING@[184; 196) \"\\\"attributes\\\"\"\n+                  R_PAREN@[196; 197) \")\"\n+                R_BRACK@[197; 198) \"]\"\n               WHITESPACE@[198; 207) \"\\n        \"\n               ATTR@[207; 233)\n                 POUND@[207; 208) \"#\"\n-                TOKEN_TREE@[208; 233)\n-                  L_BRACK@[208; 209) \"[\"\n-                  IDENT@[209; 212) \"cfg\"\n-                  TOKEN_TREE@[212; 232)\n-                    L_PAREN@[212; 213) \"(\"\n-                    IDENT@[213; 220) \"feature\"\n-                    WHITESPACE@[220; 221) \" \"\n-                    EQ@[221; 222) \"=\"\n-                    WHITESPACE@[222; 223) \" \"\n-                    STRING@[223; 231) \"\\\"before\\\"\"\n-                    R_PAREN@[231; 232) \")\"\n-                  R_BRACK@[232; 233) \"]\"\n+                L_BRACK@[208; 209) \"[\"\n+                PATH@[209; 212)\n+                  PATH_SEGMENT@[209; 212)\n+                    NAME_REF@[209; 212)\n+                      IDENT@[209; 212) \"cfg\"\n+                TOKEN_TREE@[212; 232)\n+                  L_PAREN@[212; 213) \"(\"\n+                  IDENT@[213; 220) \"feature\"\n+                  WHITESPACE@[220; 221) \" \"\n+                  EQ@[221; 222) \"=\"\n+                  WHITESPACE@[222; 223) \" \"\n+                  STRING@[223; 231) \"\\\"before\\\"\"\n+                  R_PAREN@[231; 232) \")\"\n+                R_BRACK@[232; 233) \"]\"\n               WHITESPACE@[233; 242) \"\\n        \"\n               PLACEHOLDER_PAT@[242; 243)\n                 UNDERSCORE@[242; 243) \"_\""}, {"sha": "a73ff9c904bec214ed616e4866c38237071d1ad4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0122_generic_lifetime_type_attribute.txt", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -9,29 +9,33 @@ SOURCE_FILE@[0; 64)\n       LIFETIME_PARAM@[7; 29)\n         ATTR@[7; 26)\n           POUND@[7; 8) \"#\"\n-          TOKEN_TREE@[8; 26)\n-            L_BRACK@[8; 9) \"[\"\n-            IDENT@[9; 15) \"derive\"\n-            TOKEN_TREE@[15; 25)\n-              L_PAREN@[15; 16) \"(\"\n-              IDENT@[16; 24) \"Lifetime\"\n-              R_PAREN@[24; 25) \")\"\n-            R_BRACK@[25; 26) \"]\"\n+          L_BRACK@[8; 9) \"[\"\n+          PATH@[9; 15)\n+            PATH_SEGMENT@[9; 15)\n+              NAME_REF@[9; 15)\n+                IDENT@[9; 15) \"derive\"\n+          TOKEN_TREE@[15; 25)\n+            L_PAREN@[15; 16) \"(\"\n+            IDENT@[16; 24) \"Lifetime\"\n+            R_PAREN@[24; 25) \")\"\n+          R_BRACK@[25; 26) \"]\"\n         WHITESPACE@[26; 27) \" \"\n         LIFETIME@[27; 29) \"\\'a\"\n       COMMA@[29; 30) \",\"\n       WHITESPACE@[30; 31) \" \"\n       TYPE_PARAM@[31; 48)\n         ATTR@[31; 46)\n           POUND@[31; 32) \"#\"\n-          TOKEN_TREE@[32; 46)\n-            L_BRACK@[32; 33) \"[\"\n-            IDENT@[33; 39) \"derive\"\n-            TOKEN_TREE@[39; 45)\n-              L_PAREN@[39; 40) \"(\"\n-              IDENT@[40; 44) \"Type\"\n-              R_PAREN@[44; 45) \")\"\n-            R_BRACK@[45; 46) \"]\"\n+          L_BRACK@[32; 33) \"[\"\n+          PATH@[33; 39)\n+            PATH_SEGMENT@[33; 39)\n+              NAME_REF@[33; 39)\n+                IDENT@[33; 39) \"derive\"\n+          TOKEN_TREE@[39; 45)\n+            L_PAREN@[39; 40) \"(\"\n+            IDENT@[40; 44) \"Type\"\n+            R_PAREN@[44; 45) \")\"\n+          R_BRACK@[45; 46) \"]\"\n         WHITESPACE@[46; 47) \" \"\n         NAME@[47; 48)\n           IDENT@[47; 48) \"T\""}, {"sha": "a36c3df0efa4195b640a248af311b317364934f7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0125_record_literal_field_with_attr.txt", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -24,14 +24,16 @@ SOURCE_FILE@[0; 46)\n             RECORD_FIELD@[20; 41)\n               ATTR@[20; 32)\n                 POUND@[20; 21) \"#\"\n-                TOKEN_TREE@[21; 32)\n-                  L_BRACK@[21; 22) \"[\"\n-                  IDENT@[22; 25) \"cfg\"\n-                  TOKEN_TREE@[25; 31)\n-                    L_PAREN@[25; 26) \"(\"\n-                    IDENT@[26; 30) \"test\"\n-                    R_PAREN@[30; 31) \")\"\n-                  R_BRACK@[31; 32) \"]\"\n+                L_BRACK@[21; 22) \"[\"\n+                PATH@[22; 25)\n+                  PATH_SEGMENT@[22; 25)\n+                    NAME_REF@[22; 25)\n+                      IDENT@[22; 25) \"cfg\"\n+                TOKEN_TREE@[25; 31)\n+                  L_PAREN@[25; 26) \"(\"\n+                  IDENT@[26; 30) \"test\"\n+                  R_PAREN@[30; 31) \")\"\n+                R_BRACK@[31; 32) \"]\"\n               WHITESPACE@[32; 33) \" \"\n               NAME_REF@[33; 38)\n                 IDENT@[33; 38) \"field\""}, {"sha": "5c311d18a4c7d75f9d3316f82c8b23d790d5336f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0126_attr_on_expr_stmt.txt", "status": "modified", "additions": 30, "deletions": 20, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -15,10 +15,12 @@ SOURCE_FILE@[0; 82)\n         EXPR_STMT@[15; 26)\n           ATTR@[15; 19)\n             POUND@[15; 16) \"#\"\n-            TOKEN_TREE@[16; 19)\n-              L_BRACK@[16; 17) \"[\"\n-              IDENT@[17; 18) \"A\"\n-              R_BRACK@[18; 19) \"]\"\n+            L_BRACK@[16; 17) \"[\"\n+            PATH@[17; 18)\n+              PATH_SEGMENT@[17; 18)\n+                NAME_REF@[17; 18)\n+                  IDENT@[17; 18) \"A\"\n+            R_BRACK@[18; 19) \"]\"\n           WHITESPACE@[19; 20) \" \"\n           CALL_EXPR@[20; 25)\n             PATH_EXPR@[20; 23)\n@@ -34,10 +36,12 @@ SOURCE_FILE@[0; 82)\n         EXPR_STMT@[31; 42)\n           ATTR@[31; 35)\n             POUND@[31; 32) \"#\"\n-            TOKEN_TREE@[32; 35)\n-              L_BRACK@[32; 33) \"[\"\n-              IDENT@[33; 34) \"B\"\n-              R_BRACK@[34; 35) \"]\"\n+            L_BRACK@[32; 33) \"[\"\n+            PATH@[33; 34)\n+              PATH_SEGMENT@[33; 34)\n+                NAME_REF@[33; 34)\n+                  IDENT@[33; 34) \"B\"\n+            R_BRACK@[34; 35) \"]\"\n           WHITESPACE@[35; 36) \" \"\n           MACRO_CALL@[36; 42)\n             PATH@[36; 39)\n@@ -52,17 +56,21 @@ SOURCE_FILE@[0; 82)\n         EXPR_STMT@[47; 59)\n           ATTR@[47; 51)\n             POUND@[47; 48) \"#\"\n-            TOKEN_TREE@[48; 51)\n-              L_BRACK@[48; 49) \"[\"\n-              IDENT@[49; 50) \"C\"\n-              R_BRACK@[50; 51) \"]\"\n+            L_BRACK@[48; 49) \"[\"\n+            PATH@[49; 50)\n+              PATH_SEGMENT@[49; 50)\n+                NAME_REF@[49; 50)\n+                  IDENT@[49; 50) \"C\"\n+            R_BRACK@[50; 51) \"]\"\n           WHITESPACE@[51; 52) \" \"\n           ATTR@[52; 56)\n             POUND@[52; 53) \"#\"\n-            TOKEN_TREE@[53; 56)\n-              L_BRACK@[53; 54) \"[\"\n-              IDENT@[54; 55) \"D\"\n-              R_BRACK@[55; 56) \"]\"\n+            L_BRACK@[53; 54) \"[\"\n+            PATH@[54; 55)\n+              PATH_SEGMENT@[54; 55)\n+                NAME_REF@[54; 55)\n+                  IDENT@[54; 55) \"D\"\n+            R_BRACK@[55; 56) \"]\"\n           WHITESPACE@[56; 57) \" \"\n           BLOCK_EXPR@[57; 59)\n             BLOCK@[57; 59)\n@@ -72,10 +80,12 @@ SOURCE_FILE@[0; 82)\n         EXPR_STMT@[64; 79)\n           ATTR@[64; 68)\n             POUND@[64; 65) \"#\"\n-            TOKEN_TREE@[65; 68)\n-              L_BRACK@[65; 66) \"[\"\n-              IDENT@[66; 67) \"D\"\n-              R_BRACK@[67; 68) \"]\"\n+            L_BRACK@[65; 66) \"[\"\n+            PATH@[66; 67)\n+              PATH_SEGMENT@[66; 67)\n+                NAME_REF@[66; 67)\n+                  IDENT@[66; 67) \"D\"\n+            R_BRACK@[67; 68) \"]\"\n           WHITESPACE@[68; 69) \" \"\n           RETURN_EXPR@[69; 78)\n             RETURN_KW@[69; 75) \"return\""}, {"sha": "21f49690a2e816f1aed23ffe2958c085b59995f7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0127_attr_on_last_expr_in_block.txt", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -20,10 +20,12 @@ SOURCE_FILE@[0; 47)\n               TRY_EXPR@[17; 29)\n                 ATTR@[17; 21)\n                   POUND@[17; 18) \"#\"\n-                  TOKEN_TREE@[18; 21)\n-                    L_BRACK@[18; 19) \"[\"\n-                    IDENT@[19; 20) \"A\"\n-                    R_BRACK@[20; 21) \"]\"\n+                  L_BRACK@[18; 19) \"[\"\n+                  PATH@[19; 20)\n+                    PATH_SEGMENT@[19; 20)\n+                      NAME_REF@[19; 20)\n+                        IDENT@[19; 20) \"A\"\n+                  R_BRACK@[20; 21) \"]\"\n                 WHITESPACE@[21; 22) \" \"\n                 MACRO_CALL@[22; 28)\n                   PATH@[22; 25)\n@@ -41,10 +43,12 @@ SOURCE_FILE@[0; 47)\n         REF_EXPR@[36; 44)\n           ATTR@[36; 40)\n             POUND@[36; 37) \"#\"\n-            TOKEN_TREE@[37; 40)\n-              L_BRACK@[37; 38) \"[\"\n-              IDENT@[38; 39) \"B\"\n-              R_BRACK@[39; 40) \"]\"\n+            L_BRACK@[37; 38) \"[\"\n+            PATH@[38; 39)\n+              PATH_SEGMENT@[38; 39)\n+                NAME_REF@[38; 39)\n+                  IDENT@[38; 39) \"B\"\n+            R_BRACK@[39; 40) \"]\"\n           WHITESPACE@[40; 41) \" \"\n           AMP@[41; 42) \"&\"\n           TUPLE_EXPR@[42; 44)"}, {"sha": "8f2e91bdfeb81c184ae88f85cc8e96515f7496e3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0135_first_array_member_attributes.txt", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -29,14 +29,16 @@ SOURCE_FILE@[0; 56)\n         WHITESPACE@[24; 28) \"\\n   \"\n         ATTR@[28; 40)\n           POUND@[28; 29) \"#\"\n-          TOKEN_TREE@[29; 40)\n-            L_BRACK@[29; 30) \"[\"\n-            IDENT@[30; 33) \"cfg\"\n-            TOKEN_TREE@[33; 39)\n-              L_PAREN@[33; 34) \"(\"\n-              IDENT@[34; 38) \"test\"\n-              R_PAREN@[38; 39) \")\"\n-            R_BRACK@[39; 40) \"]\"\n+          L_BRACK@[29; 30) \"[\"\n+          PATH@[30; 33)\n+            PATH_SEGMENT@[30; 33)\n+              NAME_REF@[30; 33)\n+                IDENT@[30; 33) \"cfg\"\n+          TOKEN_TREE@[33; 39)\n+            L_PAREN@[33; 34) \"(\"\n+            IDENT@[34; 38) \"test\"\n+            R_PAREN@[38; 39) \")\"\n+          R_BRACK@[39; 40) \"]\"\n         WHITESPACE@[40; 44) \"\\n   \"\n         LITERAL@[44; 45)\n           INT_NUMBER@[44; 45) \"1\""}, {"sha": "41914eb8e9a84be636c52ea628432150ee6dce40", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0136_subsequent_array_member_attributes.txt", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -33,14 +33,16 @@ SOURCE_FILE@[0; 56)\n         WHITESPACE@[30; 34) \"\\n   \"\n         ATTR@[34; 46)\n           POUND@[34; 35) \"#\"\n-          TOKEN_TREE@[35; 46)\n-            L_BRACK@[35; 36) \"[\"\n-            IDENT@[36; 39) \"cfg\"\n-            TOKEN_TREE@[39; 45)\n-              L_PAREN@[39; 40) \"(\"\n-              IDENT@[40; 44) \"test\"\n-              R_PAREN@[44; 45) \")\"\n-            R_BRACK@[45; 46) \"]\"\n+          L_BRACK@[35; 36) \"[\"\n+          PATH@[36; 39)\n+            PATH_SEGMENT@[36; 39)\n+              NAME_REF@[36; 39)\n+                IDENT@[36; 39) \"cfg\"\n+          TOKEN_TREE@[39; 45)\n+            L_PAREN@[39; 40) \"(\"\n+            IDENT@[40; 44) \"test\"\n+            R_PAREN@[44; 45) \")\"\n+          R_BRACK@[45; 46) \"]\"\n         WHITESPACE@[46; 50) \"\\n   \"\n         LITERAL@[50; 51)\n           INT_NUMBER@[50; 51) \"2\""}, {"sha": "e627b9746ebfbf7b0d2ae98d8e5bc7d578fbcb92", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_self_param_outer_attr.txt", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -8,10 +8,12 @@ SOURCE_FILE@[0; 26)\n       L_PAREN@[4; 5) \"(\"\n       ATTR@[5; 16)\n         POUND@[5; 6) \"#\"\n-        TOKEN_TREE@[6; 16)\n-          L_BRACK@[6; 7) \"[\"\n-          IDENT@[7; 15) \"must_use\"\n-          R_BRACK@[15; 16) \"]\"\n+        L_BRACK@[6; 7) \"[\"\n+        PATH@[7; 15)\n+          PATH_SEGMENT@[7; 15)\n+            NAME_REF@[7; 15)\n+              IDENT@[7; 15) \"must_use\"\n+        R_BRACK@[15; 16) \"]\"\n       WHITESPACE@[16; 17) \" \"\n       SELF_PARAM@[17; 21)\n         SELF_KW@[17; 21) \"self\""}, {"sha": "cf202c94b78c2704e22c2e2808df3b37ba9ce328", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0139_param_outer_arg.txt", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -8,10 +8,12 @@ SOURCE_FILE@[0; 28)\n       L_PAREN@[4; 5) \"(\"\n       ATTR@[5; 13)\n         POUND@[5; 6) \"#\"\n-        TOKEN_TREE@[6; 13)\n-          L_BRACK@[6; 7) \"[\"\n-          IDENT@[7; 12) \"attr1\"\n-          R_BRACK@[12; 13) \"]\"\n+        L_BRACK@[6; 7) \"[\"\n+        PATH@[7; 12)\n+          PATH_SEGMENT@[7; 12)\n+            NAME_REF@[7; 12)\n+              IDENT@[7; 12) \"attr1\"\n+        R_BRACK@[12; 13) \"]\"\n       WHITESPACE@[13; 14) \" \"\n       PARAM@[14; 23)\n         BIND_PAT@[14; 17)"}, {"sha": "d72b725610891ae0a591ae368672433365dbacc0", "filename": "crates/ra_syntax/test_data/parser/ok/0006_inner_attributes.txt", "status": "modified", "additions": 144, "deletions": 124, "changes": 268, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0006_inner_attributes.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -2,163 +2,183 @@ SOURCE_FILE@[0; 236)\n   ATTR@[0; 8)\n     POUND@[0; 1) \"#\"\n     EXCL@[1; 2) \"!\"\n-    TOKEN_TREE@[2; 8)\n-      L_BRACK@[2; 3) \"[\"\n-      IDENT@[3; 7) \"attr\"\n-      R_BRACK@[7; 8) \"]\"\n+    L_BRACK@[2; 3) \"[\"\n+    PATH@[3; 7)\n+      PATH_SEGMENT@[3; 7)\n+        NAME_REF@[3; 7)\n+          IDENT@[3; 7) \"attr\"\n+    R_BRACK@[7; 8) \"]\"\n   WHITESPACE@[8; 9) \"\\n\"\n   ATTR@[9; 23)\n     POUND@[9; 10) \"#\"\n     EXCL@[10; 11) \"!\"\n-    TOKEN_TREE@[11; 23)\n-      L_BRACK@[11; 12) \"[\"\n-      IDENT@[12; 16) \"attr\"\n-      TOKEN_TREE@[16; 22)\n-        L_PAREN@[16; 17) \"(\"\n-        TRUE_KW@[17; 21) \"true\"\n-        R_PAREN@[21; 22) \")\"\n-      R_BRACK@[22; 23) \"]\"\n+    L_BRACK@[11; 12) \"[\"\n+    PATH@[12; 16)\n+      PATH_SEGMENT@[12; 16)\n+        NAME_REF@[12; 16)\n+          IDENT@[12; 16) \"attr\"\n+    TOKEN_TREE@[16; 22)\n+      L_PAREN@[16; 17) \"(\"\n+      TRUE_KW@[17; 21) \"true\"\n+      R_PAREN@[21; 22) \")\"\n+    R_BRACK@[22; 23) \"]\"\n   WHITESPACE@[23; 24) \"\\n\"\n   ATTR@[24; 39)\n     POUND@[24; 25) \"#\"\n     EXCL@[25; 26) \"!\"\n-    TOKEN_TREE@[26; 39)\n-      L_BRACK@[26; 27) \"[\"\n-      IDENT@[27; 31) \"attr\"\n-      TOKEN_TREE@[31; 38)\n-        L_PAREN@[31; 32) \"(\"\n-        IDENT@[32; 37) \"ident\"\n-        R_PAREN@[37; 38) \")\"\n-      R_BRACK@[38; 39) \"]\"\n+    L_BRACK@[26; 27) \"[\"\n+    PATH@[27; 31)\n+      PATH_SEGMENT@[27; 31)\n+        NAME_REF@[27; 31)\n+          IDENT@[27; 31) \"attr\"\n+    TOKEN_TREE@[31; 38)\n+      L_PAREN@[31; 32) \"(\"\n+      IDENT@[32; 37) \"ident\"\n+      R_PAREN@[37; 38) \")\"\n+    R_BRACK@[38; 39) \"]\"\n   WHITESPACE@[39; 40) \"\\n\"\n   ATTR@[40; 116)\n     POUND@[40; 41) \"#\"\n     EXCL@[41; 42) \"!\"\n-    TOKEN_TREE@[42; 116)\n-      L_BRACK@[42; 43) \"[\"\n-      IDENT@[43; 47) \"attr\"\n-      TOKEN_TREE@[47; 115)\n-        L_PAREN@[47; 48) \"(\"\n-        IDENT@[48; 53) \"ident\"\n-        COMMA@[53; 54) \",\"\n-        WHITESPACE@[54; 55) \" \"\n-        INT_NUMBER@[55; 58) \"100\"\n-        COMMA@[58; 59) \",\"\n-        WHITESPACE@[59; 60) \" \"\n-        TRUE_KW@[60; 64) \"true\"\n-        COMMA@[64; 65) \",\"\n-        WHITESPACE@[65; 66) \" \"\n-        STRING@[66; 72) \"\\\"true\\\"\"\n-        COMMA@[72; 73) \",\"\n-        WHITESPACE@[73; 74) \" \"\n-        IDENT@[74; 79) \"ident\"\n-        WHITESPACE@[79; 80) \" \"\n-        EQ@[80; 81) \"=\"\n-        WHITESPACE@[81; 82) \" \"\n-        INT_NUMBER@[82; 85) \"100\"\n-        COMMA@[85; 86) \",\"\n-        WHITESPACE@[86; 87) \" \"\n-        IDENT@[87; 92) \"ident\"\n-        WHITESPACE@[92; 93) \" \"\n-        EQ@[93; 94) \"=\"\n-        WHITESPACE@[94; 95) \" \"\n-        STRING@[95; 102) \"\\\"hello\\\"\"\n-        COMMA@[102; 103) \",\"\n-        WHITESPACE@[103; 104) \" \"\n-        IDENT@[104; 109) \"ident\"\n-        TOKEN_TREE@[109; 114)\n-          L_PAREN@[109; 110) \"(\"\n-          INT_NUMBER@[110; 113) \"100\"\n-          R_PAREN@[113; 114) \")\"\n-        R_PAREN@[114; 115) \")\"\n-      R_BRACK@[115; 116) \"]\"\n+    L_BRACK@[42; 43) \"[\"\n+    PATH@[43; 47)\n+      PATH_SEGMENT@[43; 47)\n+        NAME_REF@[43; 47)\n+          IDENT@[43; 47) \"attr\"\n+    TOKEN_TREE@[47; 115)\n+      L_PAREN@[47; 48) \"(\"\n+      IDENT@[48; 53) \"ident\"\n+      COMMA@[53; 54) \",\"\n+      WHITESPACE@[54; 55) \" \"\n+      INT_NUMBER@[55; 58) \"100\"\n+      COMMA@[58; 59) \",\"\n+      WHITESPACE@[59; 60) \" \"\n+      TRUE_KW@[60; 64) \"true\"\n+      COMMA@[64; 65) \",\"\n+      WHITESPACE@[65; 66) \" \"\n+      STRING@[66; 72) \"\\\"true\\\"\"\n+      COMMA@[72; 73) \",\"\n+      WHITESPACE@[73; 74) \" \"\n+      IDENT@[74; 79) \"ident\"\n+      WHITESPACE@[79; 80) \" \"\n+      EQ@[80; 81) \"=\"\n+      WHITESPACE@[81; 82) \" \"\n+      INT_NUMBER@[82; 85) \"100\"\n+      COMMA@[85; 86) \",\"\n+      WHITESPACE@[86; 87) \" \"\n+      IDENT@[87; 92) \"ident\"\n+      WHITESPACE@[92; 93) \" \"\n+      EQ@[93; 94) \"=\"\n+      WHITESPACE@[94; 95) \" \"\n+      STRING@[95; 102) \"\\\"hello\\\"\"\n+      COMMA@[102; 103) \",\"\n+      WHITESPACE@[103; 104) \" \"\n+      IDENT@[104; 109) \"ident\"\n+      TOKEN_TREE@[109; 114)\n+        L_PAREN@[109; 110) \"(\"\n+        INT_NUMBER@[110; 113) \"100\"\n+        R_PAREN@[113; 114) \")\"\n+      R_PAREN@[114; 115) \")\"\n+    R_BRACK@[115; 116) \"]\"\n   WHITESPACE@[116; 117) \"\\n\"\n   ATTR@[117; 130)\n     POUND@[117; 118) \"#\"\n     EXCL@[118; 119) \"!\"\n-    TOKEN_TREE@[119; 130)\n-      L_BRACK@[119; 120) \"[\"\n-      IDENT@[120; 124) \"attr\"\n-      TOKEN_TREE@[124; 129)\n-        L_PAREN@[124; 125) \"(\"\n-        INT_NUMBER@[125; 128) \"100\"\n-        R_PAREN@[128; 129) \")\"\n-      R_BRACK@[129; 130) \"]\"\n+    L_BRACK@[119; 120) \"[\"\n+    PATH@[120; 124)\n+      PATH_SEGMENT@[120; 124)\n+        NAME_REF@[120; 124)\n+          IDENT@[120; 124) \"attr\"\n+    TOKEN_TREE@[124; 129)\n+      L_PAREN@[124; 125) \"(\"\n+      INT_NUMBER@[125; 128) \"100\"\n+      R_PAREN@[128; 129) \")\"\n+    R_BRACK@[129; 130) \"]\"\n   WHITESPACE@[130; 131) \"\\n\"\n   ATTR@[131; 155)\n     POUND@[131; 132) \"#\"\n     EXCL@[132; 133) \"!\"\n-    TOKEN_TREE@[133; 155)\n-      L_BRACK@[133; 134) \"[\"\n-      IDENT@[134; 138) \"attr\"\n-      TOKEN_TREE@[138; 154)\n-        L_PAREN@[138; 139) \"(\"\n-        IDENT@[139; 146) \"enabled\"\n-        WHITESPACE@[146; 147) \" \"\n-        EQ@[147; 148) \"=\"\n-        WHITESPACE@[148; 149) \" \"\n-        TRUE_KW@[149; 153) \"true\"\n-        R_PAREN@[153; 154) \")\"\n-      R_BRACK@[154; 155) \"]\"\n+    L_BRACK@[133; 134) \"[\"\n+    PATH@[134; 138)\n+      PATH_SEGMENT@[134; 138)\n+        NAME_REF@[134; 138)\n+          IDENT@[134; 138) \"attr\"\n+    TOKEN_TREE@[138; 154)\n+      L_PAREN@[138; 139) \"(\"\n+      IDENT@[139; 146) \"enabled\"\n+      WHITESPACE@[146; 147) \" \"\n+      EQ@[147; 148) \"=\"\n+      WHITESPACE@[148; 149) \" \"\n+      TRUE_KW@[149; 153) \"true\"\n+      R_PAREN@[153; 154) \")\"\n+    R_BRACK@[154; 155) \"]\"\n   WHITESPACE@[155; 156) \"\\n\"\n   ATTR@[156; 173)\n     POUND@[156; 157) \"#\"\n     EXCL@[157; 158) \"!\"\n-    TOKEN_TREE@[158; 173)\n-      L_BRACK@[158; 159) \"[\"\n-      IDENT@[159; 166) \"enabled\"\n-      TOKEN_TREE@[166; 172)\n-        L_PAREN@[166; 167) \"(\"\n-        TRUE_KW@[167; 171) \"true\"\n-        R_PAREN@[171; 172) \")\"\n-      R_BRACK@[172; 173) \"]\"\n+    L_BRACK@[158; 159) \"[\"\n+    PATH@[159; 166)\n+      PATH_SEGMENT@[159; 166)\n+        NAME_REF@[159; 166)\n+          IDENT@[159; 166) \"enabled\"\n+    TOKEN_TREE@[166; 172)\n+      L_PAREN@[166; 167) \"(\"\n+      TRUE_KW@[167; 171) \"true\"\n+      R_PAREN@[171; 172) \")\"\n+    R_BRACK@[172; 173) \"]\"\n   WHITESPACE@[173; 174) \"\\n\"\n   ATTR@[174; 191)\n     POUND@[174; 175) \"#\"\n     EXCL@[175; 176) \"!\"\n-    TOKEN_TREE@[176; 191)\n-      L_BRACK@[176; 177) \"[\"\n-      IDENT@[177; 181) \"attr\"\n-      TOKEN_TREE@[181; 190)\n-        L_PAREN@[181; 182) \"(\"\n-        STRING@[182; 189) \"\\\"hello\\\"\"\n-        R_PAREN@[189; 190) \")\"\n-      R_BRACK@[190; 191) \"]\"\n+    L_BRACK@[176; 177) \"[\"\n+    PATH@[177; 181)\n+      PATH_SEGMENT@[177; 181)\n+        NAME_REF@[177; 181)\n+          IDENT@[177; 181) \"attr\"\n+    TOKEN_TREE@[181; 190)\n+      L_PAREN@[181; 182) \"(\"\n+      STRING@[182; 189) \"\\\"hello\\\"\"\n+      R_PAREN@[189; 190) \")\"\n+    R_BRACK@[190; 191) \"]\"\n   WHITESPACE@[191; 192) \"\\n\"\n   ATTR@[192; 214)\n     POUND@[192; 193) \"#\"\n     EXCL@[193; 194) \"!\"\n-    TOKEN_TREE@[194; 214)\n-      L_BRACK@[194; 195) \"[\"\n-      IDENT@[195; 199) \"repr\"\n-      TOKEN_TREE@[199; 213)\n-        L_PAREN@[199; 200) \"(\"\n-        IDENT@[200; 201) \"C\"\n-        COMMA@[201; 202) \",\"\n-        WHITESPACE@[202; 203) \" \"\n-        IDENT@[203; 208) \"align\"\n-        WHITESPACE@[208; 209) \" \"\n-        EQ@[209; 210) \"=\"\n-        WHITESPACE@[210; 211) \" \"\n-        INT_NUMBER@[211; 212) \"4\"\n-        R_PAREN@[212; 213) \")\"\n-      R_BRACK@[213; 214) \"]\"\n+    L_BRACK@[194; 195) \"[\"\n+    PATH@[195; 199)\n+      PATH_SEGMENT@[195; 199)\n+        NAME_REF@[195; 199)\n+          IDENT@[195; 199) \"repr\"\n+    TOKEN_TREE@[199; 213)\n+      L_PAREN@[199; 200) \"(\"\n+      IDENT@[200; 201) \"C\"\n+      COMMA@[201; 202) \",\"\n+      WHITESPACE@[202; 203) \" \"\n+      IDENT@[203; 208) \"align\"\n+      WHITESPACE@[208; 209) \" \"\n+      EQ@[209; 210) \"=\"\n+      WHITESPACE@[210; 211) \" \"\n+      INT_NUMBER@[211; 212) \"4\"\n+      R_PAREN@[212; 213) \")\"\n+    R_BRACK@[213; 214) \"]\"\n   WHITESPACE@[214; 215) \"\\n\"\n   ATTR@[215; 236)\n     POUND@[215; 216) \"#\"\n     EXCL@[216; 217) \"!\"\n-    TOKEN_TREE@[217; 236)\n-      L_BRACK@[217; 218) \"[\"\n-      IDENT@[218; 222) \"repr\"\n-      TOKEN_TREE@[222; 235)\n-        L_PAREN@[222; 223) \"(\"\n-        IDENT@[223; 224) \"C\"\n-        COMMA@[224; 225) \",\"\n-        WHITESPACE@[225; 226) \" \"\n-        IDENT@[226; 231) \"align\"\n-        TOKEN_TREE@[231; 234)\n-          L_PAREN@[231; 232) \"(\"\n-          INT_NUMBER@[232; 233) \"4\"\n-          R_PAREN@[233; 234) \")\"\n-        R_PAREN@[234; 235) \")\"\n-      R_BRACK@[235; 236) \"]\"\n+    L_BRACK@[217; 218) \"[\"\n+    PATH@[218; 222)\n+      PATH_SEGMENT@[218; 222)\n+        NAME_REF@[218; 222)\n+          IDENT@[218; 222) \"repr\"\n+    TOKEN_TREE@[222; 235)\n+      L_PAREN@[222; 223) \"(\"\n+      IDENT@[223; 224) \"C\"\n+      COMMA@[224; 225) \",\"\n+      WHITESPACE@[225; 226) \" \"\n+      IDENT@[226; 231) \"align\"\n+      TOKEN_TREE@[231; 234)\n+        L_PAREN@[231; 232) \"(\"\n+        INT_NUMBER@[232; 233) \"4\"\n+        R_PAREN@[233; 234) \")\"\n+      R_PAREN@[234; 235) \")\"\n+    R_BRACK@[235; 236) \"]\""}, {"sha": "061019a733cb88599665a3a99b948bd2a591834e", "filename": "crates/ra_syntax/test_data/parser/ok/0008_mod_item.txt", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -65,10 +65,12 @@ SOURCE_FILE@[0; 118)\n       ATTR@[79; 87)\n         POUND@[79; 80) \"#\"\n         EXCL@[80; 81) \"!\"\n-        TOKEN_TREE@[81; 87)\n-          L_BRACK@[81; 82) \"[\"\n-          IDENT@[82; 86) \"attr\"\n-          R_BRACK@[86; 87) \"]\"\n+        L_BRACK@[81; 82) \"[\"\n+        PATH@[82; 86)\n+          PATH_SEGMENT@[82; 86)\n+            NAME_REF@[82; 86)\n+              IDENT@[82; 86) \"attr\"\n+        R_BRACK@[86; 87) \"]\"\n       WHITESPACE@[87; 92) \"\\n    \"\n       MODULE@[92; 98)\n         MOD_KW@[92; 95) \"mod\""}, {"sha": "3d2e01d5c6fcfaa135de27c666b8dbf5361b5ce9", "filename": "crates/ra_syntax/test_data/parser/ok/0011_outer_attribute.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rs?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -1,3 +1,6 @@\n #[cfg(test)]\n #[ignore]\n fn foo() {}\n+\n+#[path = \"a.rs\"]\n+mod b;"}, {"sha": "f7aa8afe4f89d86f1ba74e79273a97ef219f5d15", "filename": "crates/ra_syntax/test_data/parser/ok/0011_outer_attribute.txt", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -1,22 +1,26 @@\n-SOURCE_FILE@[0; 35)\n+SOURCE_FILE@[0; 60)\n   FN_DEF@[0; 34)\n     ATTR@[0; 12)\n       POUND@[0; 1) \"#\"\n-      TOKEN_TREE@[1; 12)\n-        L_BRACK@[1; 2) \"[\"\n-        IDENT@[2; 5) \"cfg\"\n-        TOKEN_TREE@[5; 11)\n-          L_PAREN@[5; 6) \"(\"\n-          IDENT@[6; 10) \"test\"\n-          R_PAREN@[10; 11) \")\"\n-        R_BRACK@[11; 12) \"]\"\n+      L_BRACK@[1; 2) \"[\"\n+      PATH@[2; 5)\n+        PATH_SEGMENT@[2; 5)\n+          NAME_REF@[2; 5)\n+            IDENT@[2; 5) \"cfg\"\n+      TOKEN_TREE@[5; 11)\n+        L_PAREN@[5; 6) \"(\"\n+        IDENT@[6; 10) \"test\"\n+        R_PAREN@[10; 11) \")\"\n+      R_BRACK@[11; 12) \"]\"\n     WHITESPACE@[12; 13) \"\\n\"\n     ATTR@[13; 22)\n       POUND@[13; 14) \"#\"\n-      TOKEN_TREE@[14; 22)\n-        L_BRACK@[14; 15) \"[\"\n-        IDENT@[15; 21) \"ignore\"\n-        R_BRACK@[21; 22) \"]\"\n+      L_BRACK@[14; 15) \"[\"\n+      PATH@[15; 21)\n+        PATH_SEGMENT@[15; 21)\n+          NAME_REF@[15; 21)\n+            IDENT@[15; 21) \"ignore\"\n+      R_BRACK@[21; 22) \"]\"\n     WHITESPACE@[22; 23) \"\\n\"\n     FN_KW@[23; 25) \"fn\"\n     WHITESPACE@[25; 26) \" \"\n@@ -30,4 +34,25 @@ SOURCE_FILE@[0; 35)\n       BLOCK@[32; 34)\n         L_CURLY@[32; 33) \"{\"\n         R_CURLY@[33; 34) \"}\"\n-  WHITESPACE@[34; 35) \"\\n\"\n+  WHITESPACE@[34; 36) \"\\n\\n\"\n+  MODULE@[36; 59)\n+    ATTR@[36; 52)\n+      POUND@[36; 37) \"#\"\n+      L_BRACK@[37; 38) \"[\"\n+      PATH@[38; 42)\n+        PATH_SEGMENT@[38; 42)\n+          NAME_REF@[38; 42)\n+            IDENT@[38; 42) \"path\"\n+      WHITESPACE@[42; 43) \" \"\n+      EQ@[43; 44) \"=\"\n+      WHITESPACE@[44; 45) \" \"\n+      LITERAL@[45; 51)\n+        STRING@[45; 51) \"\\\"a.rs\\\"\"\n+      R_BRACK@[51; 52) \"]\"\n+    WHITESPACE@[52; 53) \"\\n\"\n+    MOD_KW@[53; 56) \"mod\"\n+    WHITESPACE@[56; 57) \" \"\n+    NAME@[57; 58)\n+      IDENT@[57; 58) \"b\"\n+    SEMI@[58; 59) \";\"\n+  WHITESPACE@[59; 60) \"\\n\""}, {"sha": "1d65b0d6e08ed933d75dc02d3924a3241bcfd288", "filename": "crates/ra_syntax/test_data/parser/ok/0017_attr_trailing_comma.txt", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -2,15 +2,17 @@ SOURCE_FILE@[0; 23)\n   FN_DEF@[0; 22)\n     ATTR@[0; 10)\n       POUND@[0; 1) \"#\"\n-      TOKEN_TREE@[1; 10)\n-        L_BRACK@[1; 2) \"[\"\n-        IDENT@[2; 5) \"foo\"\n-        TOKEN_TREE@[5; 9)\n-          L_PAREN@[5; 6) \"(\"\n-          IDENT@[6; 7) \"a\"\n-          COMMA@[7; 8) \",\"\n-          R_PAREN@[8; 9) \")\"\n-        R_BRACK@[9; 10) \"]\"\n+      L_BRACK@[1; 2) \"[\"\n+      PATH@[2; 5)\n+        PATH_SEGMENT@[2; 5)\n+          NAME_REF@[2; 5)\n+            IDENT@[2; 5) \"foo\"\n+      TOKEN_TREE@[5; 9)\n+        L_PAREN@[5; 6) \"(\"\n+        IDENT@[6; 7) \"a\"\n+        COMMA@[7; 8) \",\"\n+        R_PAREN@[8; 9) \")\"\n+      R_BRACK@[9; 10) \"]\"\n     WHITESPACE@[10; 11) \"\\n\"\n     FN_KW@[11; 13) \"fn\"\n     WHITESPACE@[13; 14) \" \""}, {"sha": "3260cc58964400295b8497d65bb8bcc95c31cb9a", "filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.txt", "status": "modified", "additions": 50, "deletions": 39, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -10,62 +10,73 @@ SOURCE_FILE@[0; 3813)\n   ATTR@[271; 302)\n     POUND@[271; 272) \"#\"\n     EXCL@[272; 273) \"!\"\n-    TOKEN_TREE@[273; 302)\n-      L_BRACK@[273; 274) \"[\"\n-      IDENT@[274; 279) \"allow\"\n-      TOKEN_TREE@[279; 301)\n-        L_PAREN@[279; 280) \"(\"\n-        IDENT@[280; 300) \"non_camel_case_types\"\n-        R_PAREN@[300; 301) \")\"\n-      R_BRACK@[301; 302) \"]\"\n+    L_BRACK@[273; 274) \"[\"\n+    PATH@[274; 279)\n+      PATH_SEGMENT@[274; 279)\n+        NAME_REF@[274; 279)\n+          IDENT@[274; 279) \"allow\"\n+    TOKEN_TREE@[279; 301)\n+      L_PAREN@[279; 280) \"(\"\n+      IDENT@[280; 300) \"non_camel_case_types\"\n+      R_PAREN@[300; 301) \")\"\n+    R_BRACK@[301; 302) \"]\"\n   WHITESPACE@[302; 303) \"\\n\"\n   ATTR@[303; 323)\n     POUND@[303; 304) \"#\"\n     EXCL@[304; 305) \"!\"\n-    TOKEN_TREE@[305; 323)\n-      L_BRACK@[305; 306) \"[\"\n-      IDENT@[306; 311) \"allow\"\n-      TOKEN_TREE@[311; 322)\n-        L_PAREN@[311; 312) \"(\"\n-        IDENT@[312; 321) \"dead_code\"\n-        R_PAREN@[321; 322) \")\"\n-      R_BRACK@[322; 323) \"]\"\n+    L_BRACK@[305; 306) \"[\"\n+    PATH@[306; 311)\n+      PATH_SEGMENT@[306; 311)\n+        NAME_REF@[306; 311)\n+          IDENT@[306; 311) \"allow\"\n+    TOKEN_TREE@[311; 322)\n+      L_PAREN@[311; 312) \"(\"\n+      IDENT@[312; 321) \"dead_code\"\n+      R_PAREN@[321; 322) \")\"\n+    R_BRACK@[322; 323) \"]\"\n   WHITESPACE@[323; 324) \"\\n\"\n   ATTR@[324; 351)\n     POUND@[324; 325) \"#\"\n     EXCL@[325; 326) \"!\"\n-    TOKEN_TREE@[326; 351)\n-      L_BRACK@[326; 327) \"[\"\n-      IDENT@[327; 332) \"allow\"\n-      TOKEN_TREE@[332; 350)\n-        L_PAREN@[332; 333) \"(\"\n-        IDENT@[333; 349) \"unreachable_code\"\n-        R_PAREN@[349; 350) \")\"\n-      R_BRACK@[350; 351) \"]\"\n+    L_BRACK@[326; 327) \"[\"\n+    PATH@[327; 332)\n+      PATH_SEGMENT@[327; 332)\n+        NAME_REF@[327; 332)\n+          IDENT@[327; 332) \"allow\"\n+    TOKEN_TREE@[332; 350)\n+      L_PAREN@[332; 333) \"(\"\n+      IDENT@[333; 349) \"unreachable_code\"\n+      R_PAREN@[349; 350) \")\"\n+    R_BRACK@[350; 351) \"]\"\n   WHITESPACE@[351; 352) \"\\n\"\n   ATTR@[352; 376)\n     POUND@[352; 353) \"#\"\n     EXCL@[353; 354) \"!\"\n-    TOKEN_TREE@[354; 376)\n-      L_BRACK@[354; 355) \"[\"\n-      IDENT@[355; 360) \"allow\"\n-      TOKEN_TREE@[360; 375)\n-        L_PAREN@[360; 361) \"(\"\n-        IDENT@[361; 374) \"unused_parens\"\n-        R_PAREN@[374; 375) \")\"\n-      R_BRACK@[375; 376) \"]\"\n+    L_BRACK@[354; 355) \"[\"\n+    PATH@[355; 360)\n+      PATH_SEGMENT@[355; 360)\n+        NAME_REF@[355; 360)\n+          IDENT@[355; 360) \"allow\"\n+    TOKEN_TREE@[360; 375)\n+      L_PAREN@[360; 361) \"(\"\n+      IDENT@[361; 374) \"unused_parens\"\n+      R_PAREN@[374; 375) \")\"\n+    R_BRACK@[375; 376) \"]\"\n   WHITESPACE@[376; 378) \"\\n\\n\"\n   ATTR@[378; 405)\n     POUND@[378; 379) \"#\"\n     EXCL@[379; 380) \"!\"\n-    TOKEN_TREE@[380; 405)\n-      L_BRACK@[380; 381) \"[\"\n-      IDENT@[381; 396) \"recursion_limit\"\n-      WHITESPACE@[396; 397) \" \"\n-      EQ@[397; 398) \"=\"\n-      WHITESPACE@[398; 399) \" \"\n+    L_BRACK@[380; 381) \"[\"\n+    PATH@[381; 396)\n+      PATH_SEGMENT@[381; 396)\n+        NAME_REF@[381; 396)\n+          IDENT@[381; 396) \"recursion_limit\"\n+    WHITESPACE@[396; 397) \" \"\n+    EQ@[397; 398) \"=\"\n+    WHITESPACE@[398; 399) \" \"\n+    LITERAL@[399; 404)\n       STRING@[399; 404) \"\\\"128\\\"\"\n-      R_BRACK@[404; 405) \"]\"\n+    R_BRACK@[404; 405) \"]\"\n   WHITESPACE@[405; 407) \"\\n\\n\"\n   USE_ITEM@[407; 427)\n     USE_KW@[407; 410) \"use\""}, {"sha": "bfc793dc15a6d18f3fc35fce2b1f2aad0c4417b5", "filename": "crates/ra_syntax/test_data/parser/ok/0044_let_attrs.txt", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -17,18 +17,20 @@ SOURCE_FILE@[0; 166)\n         LET_STMT@[77; 163)\n           ATTR@[77; 106)\n             POUND@[77; 78) \"#\"\n-            TOKEN_TREE@[78; 106)\n-              L_BRACK@[78; 79) \"[\"\n-              IDENT@[79; 82) \"cfg\"\n-              TOKEN_TREE@[82; 105)\n-                L_PAREN@[82; 83) \"(\"\n-                IDENT@[83; 90) \"feature\"\n-                WHITESPACE@[90; 91) \" \"\n-                EQ@[91; 92) \"=\"\n-                WHITESPACE@[92; 93) \" \"\n-                STRING@[93; 104) \"\\\"backtrace\\\"\"\n-                R_PAREN@[104; 105) \")\"\n-              R_BRACK@[105; 106) \"]\"\n+            L_BRACK@[78; 79) \"[\"\n+            PATH@[79; 82)\n+              PATH_SEGMENT@[79; 82)\n+                NAME_REF@[79; 82)\n+                  IDENT@[79; 82) \"cfg\"\n+            TOKEN_TREE@[82; 105)\n+              L_PAREN@[82; 83) \"(\"\n+              IDENT@[83; 90) \"feature\"\n+              WHITESPACE@[90; 91) \" \"\n+              EQ@[91; 92) \"=\"\n+              WHITESPACE@[92; 93) \" \"\n+              STRING@[93; 104) \"\\\"backtrace\\\"\"\n+              R_PAREN@[104; 105) \")\"\n+            R_BRACK@[105; 106) \"]\"\n           WHITESPACE@[106; 111) \"\\n    \"\n           LET_KW@[111; 114) \"let\"\n           WHITESPACE@[114; 115) \" \""}, {"sha": "3d9aab500445d827d386a915ef005a97b96cc05e", "filename": "crates/ra_syntax/test_data/parser/ok/0045_block_inner_attrs.txt", "status": "modified", "additions": 50, "deletions": 40, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -15,14 +15,16 @@ SOURCE_FILE@[0; 686)\n         ATTR@[17; 57)\n           POUND@[17; 18) \"#\"\n           EXCL@[18; 19) \"!\"\n-          TOKEN_TREE@[19; 57)\n-            L_BRACK@[19; 20) \"[\"\n-            IDENT@[20; 23) \"doc\"\n-            TOKEN_TREE@[23; 56)\n-              L_PAREN@[23; 24) \"(\"\n-              STRING@[24; 55) \"\\\"Inner attributes all ...\"\n-              R_PAREN@[55; 56) \")\"\n-            R_BRACK@[56; 57) \"]\"\n+          L_BRACK@[19; 20) \"[\"\n+          PATH@[20; 23)\n+            PATH_SEGMENT@[20; 23)\n+              NAME_REF@[20; 23)\n+                IDENT@[20; 23) \"doc\"\n+          TOKEN_TREE@[23; 56)\n+            L_PAREN@[23; 24) \"(\"\n+            STRING@[24; 55) \"\\\"Inner attributes all ...\"\n+            R_PAREN@[55; 56) \")\"\n+          R_BRACK@[56; 57) \"]\"\n         WHITESPACE@[57; 62) \"\\n    \"\n         COMMENT@[62; 97) \"//! As are ModuleDoc  ...\"\n         WHITESPACE@[97; 102) \"\\n    \"\n@@ -34,26 +36,30 @@ SOURCE_FILE@[0; 686)\n               ATTR@[112; 180)\n                 POUND@[112; 113) \"#\"\n                 EXCL@[113; 114) \"!\"\n-                TOKEN_TREE@[114; 180)\n-                  L_BRACK@[114; 115) \"[\"\n-                  IDENT@[115; 118) \"doc\"\n-                  TOKEN_TREE@[118; 179)\n-                    L_PAREN@[118; 119) \"(\"\n-                    STRING@[119; 178) \"\\\"Inner attributes are ...\"\n-                    R_PAREN@[178; 179) \")\"\n-                  R_BRACK@[179; 180) \"]\"\n+                L_BRACK@[114; 115) \"[\"\n+                PATH@[115; 118)\n+                  PATH_SEGMENT@[115; 118)\n+                    NAME_REF@[115; 118)\n+                      IDENT@[115; 118) \"doc\"\n+                TOKEN_TREE@[118; 179)\n+                  L_PAREN@[118; 119) \"(\"\n+                  STRING@[119; 178) \"\\\"Inner attributes are ...\"\n+                  R_PAREN@[178; 179) \")\"\n+                R_BRACK@[179; 180) \"]\"\n               WHITESPACE@[180; 189) \"\\n        \"\n               ATTR@[189; 244)\n                 POUND@[189; 190) \"#\"\n                 EXCL@[190; 191) \"!\"\n-                TOKEN_TREE@[191; 244)\n-                  L_BRACK@[191; 192) \"[\"\n-                  IDENT@[192; 195) \"doc\"\n-                  TOKEN_TREE@[195; 243)\n-                    L_PAREN@[195; 196) \"(\"\n-                    STRING@[196; 242) \"\\\"Being validated is n ...\"\n-                    R_PAREN@[242; 243) \")\"\n-                  R_BRACK@[243; 244) \"]\"\n+                L_BRACK@[191; 192) \"[\"\n+                PATH@[192; 195)\n+                  PATH_SEGMENT@[192; 195)\n+                    NAME_REF@[192; 195)\n+                      IDENT@[192; 195) \"doc\"\n+                TOKEN_TREE@[195; 243)\n+                  L_PAREN@[195; 196) \"(\"\n+                  STRING@[196; 242) \"\\\"Being validated is n ...\"\n+                  R_PAREN@[242; 243) \")\"\n+                R_BRACK@[243; 244) \"]\"\n               WHITESPACE@[244; 253) \"\\n        \"\n               COMMENT@[253; 288) \"//! As are ModuleDoc  ...\"\n               WHITESPACE@[288; 293) \"\\n    \"\n@@ -67,14 +73,16 @@ SOURCE_FILE@[0; 686)\n             ATTR@[310; 409)\n               POUND@[310; 311) \"#\"\n               EXCL@[311; 312) \"!\"\n-              TOKEN_TREE@[312; 409)\n-                L_BRACK@[312; 313) \"[\"\n-                IDENT@[313; 316) \"doc\"\n-                TOKEN_TREE@[316; 408)\n-                  L_PAREN@[316; 317) \"(\"\n-                  STRING@[317; 407) \"\\\"Inner attributes are ...\"\n-                  R_PAREN@[407; 408) \")\"\n-                R_BRACK@[408; 409) \"]\"\n+              L_BRACK@[312; 313) \"[\"\n+              PATH@[313; 316)\n+                PATH_SEGMENT@[313; 316)\n+                  NAME_REF@[313; 316)\n+                    IDENT@[313; 316) \"doc\"\n+              TOKEN_TREE@[316; 408)\n+                L_PAREN@[316; 317) \"(\"\n+                STRING@[317; 407) \"\\\"Inner attributes are ...\"\n+                R_PAREN@[407; 408) \")\"\n+              R_BRACK@[408; 409) \"]\"\n             WHITESPACE@[409; 418) \"\\n        \"\n             COMMENT@[418; 453) \"//! As are ModuleDoc  ...\"\n             WHITESPACE@[453; 458) \"\\n    \"\n@@ -154,14 +162,16 @@ SOURCE_FILE@[0; 686)\n             ATTR@[612; 639)\n               POUND@[612; 613) \"#\"\n               EXCL@[613; 614) \"!\"\n-              TOKEN_TREE@[614; 639)\n-                L_BRACK@[614; 615) \"[\"\n-                IDENT@[615; 620) \"allow\"\n-                TOKEN_TREE@[620; 638)\n-                  L_PAREN@[620; 621) \"(\"\n-                  IDENT@[621; 637) \"unused_variables\"\n-                  R_PAREN@[637; 638) \")\"\n-                R_BRACK@[638; 639) \"]\"\n+              L_BRACK@[614; 615) \"[\"\n+              PATH@[615; 620)\n+                PATH_SEGMENT@[615; 620)\n+                  NAME_REF@[615; 620)\n+                    IDENT@[615; 620) \"allow\"\n+              TOKEN_TREE@[620; 638)\n+                L_PAREN@[620; 621) \"(\"\n+                IDENT@[621; 637) \"unused_variables\"\n+                R_PAREN@[637; 638) \")\"\n+              R_BRACK@[638; 639) \"]\"\n             WHITESPACE@[639; 640) \" \"\n             COMMENT@[640; 677) \"// this is  `inner_at ...\"\n             WHITESPACE@[677; 682) \"\\n    \""}, {"sha": "8f192124b3ec0eb1e128a9ce9b1842f1f5827a40", "filename": "crates/ra_syntax/test_data/parser/ok/0046_extern_inner_attributes.txt", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0046_extern_inner_attributes.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -13,14 +13,16 @@ SOURCE_FILE@[0; 87)\n       ATTR@[47; 84)\n         POUND@[47; 48) \"#\"\n         EXCL@[48; 49) \"!\"\n-        TOKEN_TREE@[49; 84)\n-          L_BRACK@[49; 50) \"[\"\n-          IDENT@[50; 53) \"doc\"\n-          TOKEN_TREE@[53; 83)\n-            L_PAREN@[53; 54) \"(\"\n-            STRING@[54; 82) \"\\\"This is also a doc c ...\"\n-            R_PAREN@[82; 83) \")\"\n-          R_BRACK@[83; 84) \"]\"\n+        L_BRACK@[49; 50) \"[\"\n+        PATH@[50; 53)\n+          PATH_SEGMENT@[50; 53)\n+            NAME_REF@[50; 53)\n+              IDENT@[50; 53) \"doc\"\n+        TOKEN_TREE@[53; 83)\n+          L_PAREN@[53; 54) \"(\"\n+          STRING@[54; 82) \"\\\"This is also a doc c ...\"\n+          R_PAREN@[82; 83) \")\"\n+        R_BRACK@[83; 84) \"]\"\n       WHITESPACE@[84; 85) \"\\n\"\n       R_CURLY@[85; 86) \"}\"\n   WHITESPACE@[86; 87) \"\\n\""}, {"sha": "bfd47d2e18850a18b2bc2c46313389e4549784ae", "filename": "crates/ra_syntax/test_data/parser/ok/0051_parameter_attrs.txt", "status": "modified", "additions": 90, "deletions": 60, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -8,17 +8,21 @@ SOURCE_FILE@[0; 519)\n       L_PAREN@[5; 6) \"(\"\n       ATTR@[6; 14)\n         POUND@[6; 7) \"#\"\n-        TOKEN_TREE@[7; 14)\n-          L_BRACK@[7; 8) \"[\"\n-          IDENT@[8; 13) \"attr1\"\n-          R_BRACK@[13; 14) \"]\"\n+        L_BRACK@[7; 8) \"[\"\n+        PATH@[8; 13)\n+          PATH_SEGMENT@[8; 13)\n+            NAME_REF@[8; 13)\n+              IDENT@[8; 13) \"attr1\"\n+        R_BRACK@[13; 14) \"]\"\n       WHITESPACE@[14; 15) \" \"\n       ATTR@[15; 23)\n         POUND@[15; 16) \"#\"\n-        TOKEN_TREE@[16; 23)\n-          L_BRACK@[16; 17) \"[\"\n-          IDENT@[17; 22) \"attr2\"\n-          R_BRACK@[22; 23) \"]\"\n+        L_BRACK@[16; 17) \"[\"\n+        PATH@[17; 22)\n+          PATH_SEGMENT@[17; 22)\n+            NAME_REF@[17; 22)\n+              IDENT@[17; 22) \"attr2\"\n+        R_BRACK@[22; 23) \"]\"\n       WHITESPACE@[23; 24) \" \"\n       PARAM@[24; 33)\n         BIND_PAT@[24; 27)\n@@ -47,10 +51,12 @@ SOURCE_FILE@[0; 519)\n       L_PAREN@[43; 44) \"(\"\n       ATTR@[44; 52)\n         POUND@[44; 45) \"#\"\n-        TOKEN_TREE@[45; 52)\n-          L_BRACK@[45; 46) \"[\"\n-          IDENT@[46; 51) \"attr1\"\n-          R_BRACK@[51; 52) \"]\"\n+        L_BRACK@[45; 46) \"[\"\n+        PATH@[46; 51)\n+          PATH_SEGMENT@[46; 51)\n+            NAME_REF@[46; 51)\n+              IDENT@[46; 51) \"attr1\"\n+        R_BRACK@[51; 52) \"]\"\n       WHITESPACE@[52; 53) \" \"\n       PARAM@[53; 58)\n         BIND_PAT@[53; 54)\n@@ -105,10 +111,12 @@ SOURCE_FILE@[0; 519)\n           WHITESPACE@[105; 106) \" \"\n           ATTR@[106; 113)\n             POUND@[106; 107) \"#\"\n-            TOKEN_TREE@[107; 113)\n-              L_BRACK@[107; 108) \"[\"\n-              IDENT@[108; 112) \"attr\"\n-              R_BRACK@[112; 113) \"]\"\n+            L_BRACK@[107; 108) \"[\"\n+            PATH@[108; 112)\n+              PATH_SEGMENT@[108; 112)\n+                NAME_REF@[108; 112)\n+                  IDENT@[108; 112) \"attr\"\n+            R_BRACK@[112; 113) \"]\"\n           WHITESPACE@[113; 114) \" \"\n           DOTDOTDOT@[114; 117) \"...\"\n           R_PAREN@[117; 118) \")\"\n@@ -148,10 +156,12 @@ SOURCE_FILE@[0; 519)\n                     L_PAREN@[145; 146) \"(\"\n                     ATTR@[146; 153)\n                       POUND@[146; 147) \"#\"\n-                      TOKEN_TREE@[147; 153)\n-                        L_BRACK@[147; 148) \"[\"\n-                        IDENT@[148; 152) \"attr\"\n-                        R_BRACK@[152; 153) \"]\"\n+                      L_BRACK@[147; 148) \"[\"\n+                      PATH@[148; 152)\n+                        PATH_SEGMENT@[148; 152)\n+                          NAME_REF@[148; 152)\n+                            IDENT@[148; 152) \"attr\"\n+                      R_BRACK@[152; 153) \"]\"\n                     WHITESPACE@[153; 154) \" \"\n                     PARAM@[154; 166)\n                       REFERENCE_TYPE@[154; 166)\n@@ -196,10 +206,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[196; 197) \"(\"\n           ATTR@[197; 204)\n             POUND@[197; 198) \"#\"\n-            TOKEN_TREE@[198; 204)\n-              L_BRACK@[198; 199) \"[\"\n-              IDENT@[199; 203) \"attr\"\n-              R_BRACK@[203; 204) \"]\"\n+            L_BRACK@[198; 199) \"[\"\n+            PATH@[199; 203)\n+              PATH_SEGMENT@[199; 203)\n+                NAME_REF@[199; 203)\n+                  IDENT@[199; 203) \"attr\"\n+            R_BRACK@[203; 204) \"]\"\n           WHITESPACE@[204; 205) \" \"\n           PARAM@[205; 211)\n             PLACEHOLDER_PAT@[205; 206)\n@@ -216,10 +228,12 @@ SOURCE_FILE@[0; 519)\n           ATTR@[213; 221)\n             POUND@[213; 214) \"#\"\n             WHITESPACE@[214; 215) \" \"\n-            TOKEN_TREE@[215; 221)\n-              L_BRACK@[215; 216) \"[\"\n-              IDENT@[216; 220) \"attr\"\n-              R_BRACK@[220; 221) \"]\"\n+            L_BRACK@[215; 216) \"[\"\n+            PATH@[216; 220)\n+              PATH_SEGMENT@[216; 220)\n+                NAME_REF@[216; 220)\n+                  IDENT@[216; 220) \"attr\"\n+            R_BRACK@[220; 221) \"]\"\n           WHITESPACE@[221; 222) \" \"\n           PARAM@[222; 232)\n             BIND_PAT@[222; 227)\n@@ -260,10 +274,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[256; 257) \"(\"\n           ATTR@[257; 268)\n             POUND@[257; 258) \"#\"\n-            TOKEN_TREE@[258; 268)\n-              L_BRACK@[258; 259) \"[\"\n-              IDENT@[259; 267) \"must_use\"\n-              R_BRACK@[267; 268) \"]\"\n+            L_BRACK@[258; 259) \"[\"\n+            PATH@[259; 267)\n+              PATH_SEGMENT@[259; 267)\n+                NAME_REF@[259; 267)\n+                  IDENT@[259; 267) \"must_use\"\n+            R_BRACK@[267; 268) \"]\"\n           WHITESPACE@[268; 269) \" \"\n           SELF_PARAM@[269; 273)\n             SELF_KW@[269; 273) \"self\"\n@@ -283,10 +299,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[288; 289) \"(\"\n           ATTR@[289; 296)\n             POUND@[289; 290) \"#\"\n-            TOKEN_TREE@[290; 296)\n-              L_BRACK@[290; 291) \"[\"\n-              IDENT@[291; 295) \"attr\"\n-              R_BRACK@[295; 296) \"]\"\n+            L_BRACK@[290; 291) \"[\"\n+            PATH@[291; 295)\n+              PATH_SEGMENT@[291; 295)\n+                NAME_REF@[291; 295)\n+                  IDENT@[291; 295) \"attr\"\n+            R_BRACK@[295; 296) \"]\"\n           WHITESPACE@[296; 297) \" \"\n           SELF_PARAM@[297; 301)\n             SELF_KW@[297; 301) \"self\"\n@@ -306,10 +324,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[316; 317) \"(\"\n           ATTR@[317; 324)\n             POUND@[317; 318) \"#\"\n-            TOKEN_TREE@[318; 324)\n-              L_BRACK@[318; 319) \"[\"\n-              IDENT@[319; 323) \"attr\"\n-              R_BRACK@[323; 324) \"]\"\n+            L_BRACK@[318; 319) \"[\"\n+            PATH@[319; 323)\n+              PATH_SEGMENT@[319; 323)\n+                NAME_REF@[319; 323)\n+                  IDENT@[319; 323) \"attr\"\n+            R_BRACK@[323; 324) \"]\"\n           WHITESPACE@[324; 325) \" \"\n           SELF_PARAM@[325; 330)\n             AMP@[325; 326) \"&\"\n@@ -335,10 +355,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[349; 350) \"(\"\n           ATTR@[350; 357)\n             POUND@[350; 351) \"#\"\n-            TOKEN_TREE@[351; 357)\n-              L_BRACK@[351; 352) \"[\"\n-              IDENT@[352; 356) \"attr\"\n-              R_BRACK@[356; 357) \"]\"\n+            L_BRACK@[351; 352) \"[\"\n+            PATH@[352; 356)\n+              PATH_SEGMENT@[352; 356)\n+                NAME_REF@[352; 356)\n+                  IDENT@[352; 356) \"attr\"\n+            R_BRACK@[356; 357) \"]\"\n           WHITESPACE@[357; 358) \" \"\n           SELF_PARAM@[358; 367)\n             AMP@[358; 359) \"&\"\n@@ -366,10 +388,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[386; 387) \"(\"\n           ATTR@[387; 394)\n             POUND@[387; 388) \"#\"\n-            TOKEN_TREE@[388; 394)\n-              L_BRACK@[388; 389) \"[\"\n-              IDENT@[389; 393) \"attr\"\n-              R_BRACK@[393; 394) \"]\"\n+            L_BRACK@[388; 389) \"[\"\n+            PATH@[389; 393)\n+              PATH_SEGMENT@[389; 393)\n+                NAME_REF@[389; 393)\n+                  IDENT@[389; 393) \"attr\"\n+            R_BRACK@[393; 394) \"]\"\n           WHITESPACE@[394; 395) \" \"\n           SELF_PARAM@[395; 403)\n             AMP@[395; 396) \"&\"\n@@ -397,10 +421,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[422; 423) \"(\"\n           ATTR@[423; 430)\n             POUND@[423; 424) \"#\"\n-            TOKEN_TREE@[424; 430)\n-              L_BRACK@[424; 425) \"[\"\n-              IDENT@[425; 429) \"attr\"\n-              R_BRACK@[429; 430) \"]\"\n+            L_BRACK@[424; 425) \"[\"\n+            PATH@[425; 429)\n+              PATH_SEGMENT@[425; 429)\n+                NAME_REF@[425; 429)\n+                  IDENT@[425; 429) \"attr\"\n+            R_BRACK@[429; 430) \"]\"\n           WHITESPACE@[430; 431) \" \"\n           SELF_PARAM@[431; 443)\n             AMP@[431; 432) \"&\"\n@@ -425,10 +451,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[457; 458) \"(\"\n           ATTR@[458; 465)\n             POUND@[458; 459) \"#\"\n-            TOKEN_TREE@[459; 465)\n-              L_BRACK@[459; 460) \"[\"\n-              IDENT@[460; 464) \"attr\"\n-              R_BRACK@[464; 465) \"]\"\n+            L_BRACK@[459; 460) \"[\"\n+            PATH@[460; 464)\n+              PATH_SEGMENT@[460; 464)\n+                NAME_REF@[460; 464)\n+                  IDENT@[460; 464) \"attr\"\n+            R_BRACK@[464; 465) \"]\"\n           WHITESPACE@[465; 466) \" \"\n           SELF_PARAM@[466; 476)\n             SELF_KW@[466; 470) \"self\"\n@@ -455,10 +483,12 @@ SOURCE_FILE@[0; 519)\n           L_PAREN@[490; 491) \"(\"\n           ATTR@[491; 498)\n             POUND@[491; 492) \"#\"\n-            TOKEN_TREE@[492; 498)\n-              L_BRACK@[492; 493) \"[\"\n-              IDENT@[493; 497) \"attr\"\n-              R_BRACK@[497; 498) \"]\"\n+            L_BRACK@[492; 493) \"[\"\n+            PATH@[493; 497)\n+              PATH_SEGMENT@[493; 497)\n+                NAME_REF@[493; 497)\n+                  IDENT@[493; 497) \"attr\"\n+            R_BRACK@[497; 498) \"]\"\n           WHITESPACE@[498; 499) \" \"\n           SELF_PARAM@[499; 513)\n             SELF_KW@[499; 503) \"self\""}, {"sha": "04ff0e2ff7062fb1f75461e1f45a21e2844c55e9", "filename": "crates/ra_syntax/test_data/parser/ok/0053_outer_attribute_on_macro_rules.txt", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.txt", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0053_outer_attribute_on_macro_rules.txt?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -4,10 +4,12 @@ SOURCE_FILE@[0; 65)\n     WHITESPACE@[13; 14) \"\\n\"\n     ATTR@[14; 29)\n       POUND@[14; 15) \"#\"\n-      TOKEN_TREE@[15; 29)\n-        L_BRACK@[15; 16) \"[\"\n-        IDENT@[16; 28) \"macro_export\"\n-        R_BRACK@[28; 29) \"]\"\n+      L_BRACK@[15; 16) \"[\"\n+      PATH@[16; 28)\n+        PATH_SEGMENT@[16; 28)\n+          NAME_REF@[16; 28)\n+            IDENT@[16; 28) \"macro_export\"\n+      R_BRACK@[28; 29) \"]\"\n     WHITESPACE@[29; 30) \"\\n\"\n     PATH@[30; 41)\n       PATH_SEGMENT@[30; 41)"}, {"sha": "327d15046f52ad532d6c73208f0b1b716b8cc00f", "filename": "editors/code/src/test/utils/diagnotics/rust.test.ts", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2Frust.test.ts", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2Frust.test.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftest%2Futils%2Fdiagnotics%2Frust.test.ts?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -50,7 +50,7 @@ describe('mapRustDiagnosticToVsCode', () => {\n             ].join('\\n')\n         );\n         assert.strictEqual(diagnostic.code, 'E0053');\n-        assert.strictEqual(diagnostic.tags, undefined);\n+        assert.deepStrictEqual(diagnostic.tags, []);\n \n         // No related information\n         assert.deepStrictEqual(diagnostic.relatedInformation, []);\n@@ -115,7 +115,7 @@ describe('mapRustDiagnosticToVsCode', () => {\n         );\n         assert.strictEqual(diagnostic.code, 'E0061');\n         assert.strictEqual(diagnostic.source, 'rustc');\n-        assert.strictEqual(diagnostic.tags, undefined);\n+        assert.deepStrictEqual(diagnostic.tags, []);\n \n         // One related information for the original definition\n         const relatedInformation = diagnostic.relatedInformation;\n@@ -149,7 +149,7 @@ describe('mapRustDiagnosticToVsCode', () => {\n             ].join('\\n')\n         );\n         assert.strictEqual(diagnostic.code, 'trivially_copy_pass_by_ref');\n-        assert.strictEqual(diagnostic.tags, undefined);\n+        assert.deepStrictEqual(diagnostic.tags, []);\n \n         // One related information for the lint definition\n         const relatedInformation = diagnostic.relatedInformation;\n@@ -189,7 +189,7 @@ describe('mapRustDiagnosticToVsCode', () => {\n         );\n         assert.strictEqual(diagnostic.code, 'E0308');\n         assert.strictEqual(diagnostic.source, 'rustc');\n-        assert.strictEqual(diagnostic.tags, undefined);\n+        assert.deepStrictEqual(diagnostic.tags, []);\n \n         // No related information\n         assert.deepStrictEqual(diagnostic.relatedInformation, []);"}, {"sha": "0550d03724799575213231055b32bbeadb02a170", "filename": "editors/code/src/utils/diagnostics/rust.ts", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/81efd696ccb369d6c4813bad1107bfd9e270385b/editors%2Fcode%2Fsrc%2Futils%2Fdiagnostics%2Frust.ts", "raw_url": "https://github.com/rust-lang/rust/raw/81efd696ccb369d6c4813bad1107bfd9e270385b/editors%2Fcode%2Fsrc%2Futils%2Fdiagnostics%2Frust.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futils%2Fdiagnostics%2Frust.ts?ref=81efd696ccb369d6c4813bad1107bfd9e270385b", "patch": "@@ -111,6 +111,17 @@ function isUnusedOrUnnecessary(rd: RustDiagnostic): boolean {\n     ].includes(rd.code.code);\n }\n \n+/**\n+ * Determines if diagnostic is related to deprecated code\n+ */\n+function isDeprecated(rd: RustDiagnostic): boolean {\n+    if (!rd.code) {\n+        return false;\n+    }\n+\n+    return ['deprecated'].includes(rd.code.code);\n+}\n+\n /**\n  * Converts a Rust child diagnostic to a VsCode related information\n  *\n@@ -200,6 +211,7 @@ export function mapRustDiagnosticToVsCode(\n     vd.source = source;\n     vd.code = code;\n     vd.relatedInformation = [];\n+    vd.tags = [];\n \n     for (const secondarySpan of secondarySpans) {\n         const related = mapSecondarySpanToRelated(secondarySpan);\n@@ -234,7 +246,11 @@ export function mapRustDiagnosticToVsCode(\n     }\n \n     if (isUnusedOrUnnecessary(rd)) {\n-        vd.tags = [vscode.DiagnosticTag.Unnecessary];\n+        vd.tags.push(vscode.DiagnosticTag.Unnecessary);\n+    }\n+\n+    if (isDeprecated(rd)) {\n+        vd.tags.push(vscode.DiagnosticTag.Deprecated);\n     }\n \n     return {"}]}