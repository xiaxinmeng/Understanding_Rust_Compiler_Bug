{"sha": "98c5f37ad2f0b40721805b3af21d26109297ce95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YzVmMzdhZDJmMGI0MDcyMTgwNWIzYWYyMWQyNjEwOTI5N2NlOTU=", "commit": {"author": {"name": "A.A.Abroskin", "email": "arkweid@evilmartians.com", "date": "2018-12-25T22:29:03Z"}, "committer": {"name": "Arkweid", "email": "arkweid@evilmartians.com", "date": "2019-01-07T10:30:17Z"}, "message": "Add assert(true) and assert(false) lints", "tree": {"sha": "d746b04efbb17b242b5f7d71ddfe2ccf4cb75a05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d746b04efbb17b242b5f7d71ddfe2ccf4cb75a05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98c5f37ad2f0b40721805b3af21d26109297ce95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98c5f37ad2f0b40721805b3af21d26109297ce95", "html_url": "https://github.com/rust-lang/rust/commit/98c5f37ad2f0b40721805b3af21d26109297ce95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98c5f37ad2f0b40721805b3af21d26109297ce95/comments", "author": null, "committer": null, "parents": [{"sha": "81fa26631cced133c7f554db64815725dd5953b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/81fa26631cced133c7f554db64815725dd5953b0", "html_url": "https://github.com/rust-lang/rust/commit/81fa26631cced133c7f554db64815725dd5953b0"}], "stats": {"total": 121, "additions": 118, "deletions": 3}, "files": [{"sha": "ecd71952b93ca2235d79f82253c4d9273ac67e73", "filename": "clippy_lints/src/assert_checks.rs", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/98c5f37ad2f0b40721805b3af21d26109297ce95/clippy_lints%2Fsrc%2Fassert_checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98c5f37ad2f0b40721805b3af21d26109297ce95/clippy_lints%2Fsrc%2Fassert_checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassert_checks.rs?ref=98c5f37ad2f0b40721805b3af21d26109297ce95", "patch": "@@ -0,0 +1,78 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use crate::rustc::hir::{Expr, ExprKind};\n+use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use crate::rustc::{declare_tool_lint, lint_array};\n+use crate::syntax::ast::LitKind;\n+use crate::utils::{is_direct_expn_of, span_lint};\n+use if_chain::if_chain;\n+\n+/// **What it does:** Check explicit call assert!(true)\n+///\n+/// **Why is this bad?** Will be optimized out by the compiler\n+///\n+/// **Known problems:** None\n+///\n+/// **Example:**\n+/// ```rust\n+/// assert!(true)\n+/// ```\n+declare_clippy_lint! {\n+    pub EXPLICIT_TRUE,\n+    correctness,\n+    \"assert!(true) will be optimized out by the compiler\"\n+}\n+\n+/// **What it does:** Check explicit call assert!(false)\n+///\n+/// **Why is this bad?** Should probably be replaced by a panic!()\n+///\n+/// **Known problems:** None\n+///\n+/// **Example:**\n+/// ```rust\n+/// assert!(false)\n+/// ```\n+declare_clippy_lint! {\n+    pub EXPLICIT_FALSE,\n+    correctness,\n+    \"assert!(false) should probably be replaced by a panic!()r\"\n+}\n+\n+pub struct AssertChecks;\n+\n+impl LintPass for AssertChecks {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array![EXPLICIT_TRUE, EXPLICIT_FALSE]\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertChecks {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n+        if_chain! {\n+            if is_direct_expn_of(e.span, \"assert\").is_some();\n+            if let ExprKind::Unary(_, ref lit) = e.node;\n+            if let ExprKind::Lit(ref inner) = lit.node;\n+            then {\n+                match inner.node {\n+                    LitKind::Bool(true) => {\n+                        span_lint(cx, EXPLICIT_TRUE, e.span,\n+                            \"assert!(true) will be optimized out by the compiler\");\n+                    },\n+                    LitKind::Bool(false) => {\n+                        span_lint(cx, EXPLICIT_FALSE, e.span,\n+                            \"assert!(false) should probably be replaced by a panic!()\");\n+                    },\n+                    _ => (),\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "1f4cb27891b96071c03fc67cef73d7af8dc26656", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98c5f37ad2f0b40721805b3af21d26109297ce95/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98c5f37ad2f0b40721805b3af21d26109297ce95/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=98c5f37ad2f0b40721805b3af21d26109297ce95", "patch": "@@ -88,6 +88,7 @@ mod utils;\n // begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n pub mod approx_const;\n pub mod arithmetic;\n+pub mod assert_checks;\n pub mod assign_ops;\n pub mod attrs;\n pub mod bit_mask;\n@@ -486,6 +487,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box ptr_offset_with_cast::Pass);\n     reg.register_late_lint_pass(box redundant_clone::RedundantClone);\n     reg.register_late_lint_pass(box slow_vector_initialization::Pass);\n+    reg.register_late_lint_pass(box assert_checks::AssertChecks);\n \n     reg.register_lint_group(\"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -563,6 +565,8 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::all\", Some(\"clippy\"), vec![\n         approx_const::APPROX_CONSTANT,\n+        assert_checks::EXPLICIT_TRUE,\n+        assert_checks::EXPLICIT_FALSE,\n         assign_ops::ASSIGN_OP_PATTERN,\n         assign_ops::MISREFACTORED_ASSIGN_OP,\n         attrs::DEPRECATED_CFG_ATTR,\n@@ -940,6 +944,8 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n \n     reg.register_lint_group(\"clippy::correctness\", Some(\"clippy_correctness\"), vec![\n         approx_const::APPROX_CONSTANT,\n+        assert_checks::EXPLICIT_TRUE,\n+        assert_checks::EXPLICIT_FALSE,\n         attrs::DEPRECATED_SEMVER,\n         attrs::USELESS_ATTRIBUTE,\n         bit_mask::BAD_BIT_MASK,"}, {"sha": "811046d060a25fc5169f2f7d05a99cd701678a17", "filename": "tests/ui/assert_checks.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fassert_checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fassert_checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassert_checks.rs?ref=98c5f37ad2f0b40721805b3af21d26109297ce95", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    assert!(true);\n+    assert!(false);\n+}"}, {"sha": "fd7e4e014201dfeff8e408f2ac8b9d5f320913a3", "filename": "tests/ui/assert_checks.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fassert_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fassert_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassert_checks.stderr?ref=98c5f37ad2f0b40721805b3af21d26109297ce95", "patch": "@@ -0,0 +1,18 @@\n+error: assert!(true) will be optimized out by the compiler\n+  --> $DIR/assert_checks.rs:11:5\n+   |\n+11 |     assert!(true);\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = note: #[deny(clippy::explicit_true)] on by default\n+\n+error: assert!(false) should probably be replaced by a panic!()\n+  --> $DIR/assert_checks.rs:12:5\n+   |\n+12 |     assert!(false);\n+   |     ^^^^^^^^^^^^^^^\n+   |\n+   = note: #[deny(clippy::explicit_false)] on by default\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "c0ea7329718109afdb588ad0ca8fce57ed8f1c19", "filename": "tests/ui/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.rs?ref=98c5f37ad2f0b40721805b3af21d26109297ce95", "patch": "@@ -8,7 +8,7 @@\n // except according to those terms.\n \n #![warn(clippy::inline_always, clippy::deprecated_semver)]\n-\n+#![allow(clippy::assert_checks::explicit_true)]\n #[inline(always)]\n fn test_attr_lint() {\n     assert!(true)"}, {"sha": "a6e6adcac5c1b9035a53757fc165ff84865b7fd6", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=98c5f37ad2f0b40721805b3af21d26109297ce95", "patch": "@@ -8,7 +8,7 @@\n // except according to those terms.\n \n #![warn(clippy::empty_line_after_outer_attr)]\n-\n+#![allow(clippy::assert_checks::explicit_true)]\n // This should produce a warning\n #[crate_type = \"lib\"]\n "}, {"sha": "3c568658a6cf45dd4a0ed6e0460d487eb2022841", "filename": "tests/ui/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98c5f37ad2f0b40721805b3af21d26109297ce95/tests%2Fui%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic_unimplemented.rs?ref=98c5f37ad2f0b40721805b3af21d26109297ce95", "patch": "@@ -8,7 +8,7 @@\n // except according to those terms.\n \n #![warn(clippy::panic_params, clippy::unimplemented)]\n-\n+#![allow(clippy::assert_checks::explicit_true)]\n fn missing() {\n     if true {\n         panic!(\"{}\");"}]}