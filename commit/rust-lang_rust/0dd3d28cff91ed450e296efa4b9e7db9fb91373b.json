{"sha": "0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "node_id": "C_kwDOAAsO6NoAKDBkZDNkMjhjZmY5MWVkNDUwZTI5NmVmYTRiOWU3ZGI5ZmI5MTM3M2I", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-30T10:35:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-30T10:39:30Z"}, "message": "Rename cargo executable to cargo-clif\n\nThis allows executing it like cargo clif build if you add it to your\nPATH. It also fixes infinite recursion on Windows when invoking it as\nWindows includes the current directory in PATH by default.\n\nFixes #971", "tree": {"sha": "c413435b3660b8143d7febed15a1e5bbbb95c207", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c413435b3660b8143d7febed15a1e5bbbb95c207"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "html_url": "https://github.com/rust-lang/rust/commit/0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0467c6a307f843b9cdd18f44bfb45338071ab1f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0467c6a307f843b9cdd18f44bfb45338071ab1f1", "html_url": "https://github.com/rust-lang/rust/commit/0467c6a307f843b9cdd18f44bfb45338071ab1f1"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "8a2db5a43ecbf60488434ae6738677b8baad2d5b", "filename": "Readme.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "patch": "@@ -37,7 +37,7 @@ Assuming `$cg_clif_dir` is the directory you cloned this repo into and you follo\n In the directory with your project (where you can do the usual `cargo build`), run:\n \n ```bash\n-$ $cg_clif_dir/build/cargo build\n+$ $cg_clif_dir/build/cargo-clif build\n ```\n \n This will build your project with rustc_codegen_cranelift instead of the usual LLVM backend."}, {"sha": "2956fb698e17545307ac38dcfb701100e824da79", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "patch": "@@ -46,9 +46,9 @@ pub(crate) fn build_sysroot(\n     // Build and copy cargo wrapper\n     let mut build_cargo_wrapper_cmd = Command::new(\"rustc\");\n     build_cargo_wrapper_cmd\n-        .arg(\"scripts/cargo.rs\")\n+        .arg(\"scripts/cargo-clif.rs\")\n         .arg(\"-o\")\n-        .arg(target_dir.join(\"cargo\"))\n+        .arg(target_dir.join(\"cargo-clif\"))\n         .arg(\"-g\");\n     spawn_and_wait(build_cargo_wrapper_cmd);\n "}, {"sha": "785c7383783741701feea05580f26d527cfd0757", "filename": "docs/usage.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/docs%2Fusage.md", "raw_url": "https://github.com/rust-lang/rust/raw/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/docs%2Fusage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fusage.md?ref=0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "patch": "@@ -9,7 +9,7 @@ Assuming `$cg_clif_dir` is the directory you cloned this repo into and you follo\n In the directory with your project (where you can do the usual `cargo build`), run:\n \n ```bash\n-$ $cg_clif_dir/build/cargo build\n+$ $cg_clif_dir/build/cargo-clif build\n ```\n \n This will build your project with rustc_codegen_cranelift instead of the usual LLVM backend.\n@@ -32,7 +32,7 @@ In jit mode cg_clif will immediately execute your code without creating an execu\n > The jit mode will probably need cargo integration to make this possible.\n \n ```bash\n-$ $cg_clif_dir/build/cargo jit\n+$ $cg_clif_dir/build/cargo-clif jit\n ```\n \n or\n@@ -45,7 +45,7 @@ There is also an experimental lazy jit mode. In this mode functions are only com\n first called.\n \n ```bash\n-$ $cg_clif_dir/build/cargo lazy-jit\n+$ $cg_clif_dir/build/cargo-clif lazy-jit\n ```\n \n ## Shell"}, {"sha": "41d82b581cd8cc07111c7f5b6a6f491a178dc801", "filename": "scripts/cargo-clif.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/scripts%2Fcargo-clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/scripts%2Fcargo-clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fcargo-clif.rs?ref=0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "previous_filename": "scripts/cargo.rs"}, {"sha": "bdb3de0936dc90dc1f7b10543170b9e599e6a972", "filename": "scripts/tests.sh", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/scripts%2Ftests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0dd3d28cff91ed450e296efa4b9e7db9fb91373b/scripts%2Ftests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftests.sh?ref=0dd3d28cff91ed450e296efa4b9e7db9fb91373b", "patch": "@@ -80,73 +80,73 @@ function base_sysroot_tests() {\n \n function extended_sysroot_tests() {\n     pushd rand\n-    ../build/cargo clean\n+    ../build/cargo-clif clean\n     if [[ \"$HOST_TRIPLE\" = \"$TARGET_TRIPLE\" ]]; then\n         echo \"[TEST] rust-random/rand\"\n-        ../build/cargo test --workspace\n+        ../build/cargo-clif test --workspace\n     else\n         echo \"[AOT] rust-random/rand\"\n-        ../build/cargo build --workspace --target $TARGET_TRIPLE --tests\n+        ../build/cargo-clif build --workspace --target $TARGET_TRIPLE --tests\n     fi\n     popd\n \n     pushd simple-raytracer\n     if [[ \"$HOST_TRIPLE\" = \"$TARGET_TRIPLE\" ]]; then\n         echo \"[BENCH COMPILE] ebobby/simple-raytracer\"\n-        hyperfine --runs \"${RUN_RUNS:-10}\" --warmup 1 --prepare \"../build/cargo clean\" \\\n+        hyperfine --runs \"${RUN_RUNS:-10}\" --warmup 1 --prepare \"../build/cargo-clif clean\" \\\n         \"RUSTC=rustc RUSTFLAGS='' cargo build\" \\\n-        \"../build/cargo build\"\n+        \"../build/cargo-clif build\"\n \n         echo \"[BENCH RUN] ebobby/simple-raytracer\"\n         cp ./target/debug/main ./raytracer_cg_clif\n         hyperfine --runs \"${RUN_RUNS:-10}\" ./raytracer_cg_llvm ./raytracer_cg_clif\n     else\n-        ../build/cargo clean\n+        ../build/cargo-clif clean\n         echo \"[BENCH COMPILE] ebobby/simple-raytracer (skipped)\"\n         echo \"[COMPILE] ebobby/simple-raytracer\"\n-        ../build/cargo build --target $TARGET_TRIPLE\n+        ../build/cargo-clif build --target $TARGET_TRIPLE\n         echo \"[BENCH RUN] ebobby/simple-raytracer (skipped)\"\n     fi\n     popd\n \n     pushd build_sysroot/sysroot_src/library/core/tests\n     echo \"[TEST] libcore\"\n-    ../../../../../build/cargo clean\n+    ../../../../../build/cargo-clif clean\n     if [[ \"$HOST_TRIPLE\" = \"$TARGET_TRIPLE\" ]]; then\n-        ../../../../../build/cargo test\n+        ../../../../../build/cargo-clif test\n     else\n-        ../../../../../build/cargo build --target $TARGET_TRIPLE --tests\n+        ../../../../../build/cargo-clif build --target $TARGET_TRIPLE --tests\n     fi\n     popd\n \n     pushd regex\n     echo \"[TEST] rust-lang/regex example shootout-regex-dna\"\n-    ../build/cargo clean\n+    ../build/cargo-clif clean\n     export RUSTFLAGS=\"$RUSTFLAGS --cap-lints warn\" # newer aho_corasick versions throw a deprecation warning\n     # Make sure `[codegen mono items] start` doesn't poison the diff\n-    ../build/cargo build --example shootout-regex-dna --target $TARGET_TRIPLE\n+    ../build/cargo-clif build --example shootout-regex-dna --target $TARGET_TRIPLE\n     if [[ \"$HOST_TRIPLE\" = \"$TARGET_TRIPLE\" ]]; then\n         cat examples/regexdna-input.txt \\\n-            | ../build/cargo run --example shootout-regex-dna --target $TARGET_TRIPLE \\\n+            | ../build/cargo-clif run --example shootout-regex-dna --target $TARGET_TRIPLE \\\n             | grep -v \"Spawned thread\" > res.txt\n         diff -u res.txt examples/regexdna-output.txt\n     fi\n \n     if [[ \"$HOST_TRIPLE\" = \"$TARGET_TRIPLE\" ]]; then\n         echo \"[TEST] rust-lang/regex tests\"\n-        ../build/cargo test --tests -- --exclude-should-panic --test-threads 1 -Zunstable-options -q\n+        ../build/cargo-clif test --tests -- --exclude-should-panic --test-threads 1 -Zunstable-options -q\n     else\n         echo \"[AOT] rust-lang/regex tests\"\n-        ../build/cargo build --tests --target $TARGET_TRIPLE\n+        ../build/cargo-clif build --tests --target $TARGET_TRIPLE\n     fi\n     popd\n \n     pushd portable-simd\n     echo \"[TEST] rust-lang/portable-simd\"\n-    ../build/cargo clean\n-    ../build/cargo build --all-targets --target $TARGET_TRIPLE\n+    ../build/cargo-clif clean\n+    ../build/cargo-clif build --all-targets --target $TARGET_TRIPLE\n     if [[ \"$HOST_TRIPLE\" = \"$TARGET_TRIPLE\" ]]; then\n-        ../build/cargo test -q\n+        ../build/cargo-clif test -q\n     fi\n     popd\n }"}]}