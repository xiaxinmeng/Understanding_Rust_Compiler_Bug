{"sha": "e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4", "node_id": "C_kwDOAAsO6NoAKGUwYzgzNTljY2YwYWVlMmI0ZjQ3MDFkMmU1NjgxY2VkYTc4ZjIyZTQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-28T10:11:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-28T10:11:08Z"}, "message": "Rollup merge of #107384 - Nilstrieb:bool-for-deletion, r=oli-obk\n\nRemove `BOOL_TY_FOR_UNIT_TESTING`\n\nIt is not used anymore for unit testing.", "tree": {"sha": "74af1274c945a35c408c23086e7470493825b071", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74af1274c945a35c408c23086e7470493825b071"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj1PS8CRBK7hj4Ov3rIwAAYGYIAGxgyTXCiJhVRD7LBeDswM8q\nlrsK3l5z/48G0nfh8oc83LaF6pYVUrJHnbio2Z6ylXqskIOa44JkMDmzVEqqTCYG\nEgaBuRdK41Cl3Xe8R+sRLs6K9cWcS/kKVfGXKuzSP5eTlAaTIccXdL/RxVBEJycp\nIeoOW6vnJ6uDNmVkT0K8124lHeDEqKG4VnvlUIZ0sdyTZBvk+/kRbOd9bkfNyZqb\nuIZw0F7ZYtfZqCELy1FdA3fSXOq4b2ui1ff8h0ofi4Yb/I7qrNc+h2nuYaByrdEk\nj7cmLU3QUOoKLIBs9Ka0knBv3s7mAyd/MduKRCO1Xtp5nrRTD062k1I2pWSrWjA=\n=Chvi\n-----END PGP SIGNATURE-----\n", "payload": "tree 74af1274c945a35c408c23086e7470493825b071\nparent b64a75f20bc9f2895e70eb577bb4fa249d8cefdc\nparent 5152e84024cd9bbeeebd7bf27d048628cfc0cd95\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1674900668 +0100\ncommitter GitHub <noreply@github.com> 1674900668 +0100\n\nRollup merge of #107384 - Nilstrieb:bool-for-deletion, r=oli-obk\n\nRemove `BOOL_TY_FOR_UNIT_TESTING`\n\nIt is not used anymore for unit testing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4", "html_url": "https://github.com/rust-lang/rust/commit/e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b64a75f20bc9f2895e70eb577bb4fa249d8cefdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b64a75f20bc9f2895e70eb577bb4fa249d8cefdc", "html_url": "https://github.com/rust-lang/rust/commit/b64a75f20bc9f2895e70eb577bb4fa249d8cefdc"}, {"sha": "5152e84024cd9bbeeebd7bf27d048628cfc0cd95", "url": "https://api.github.com/repos/rust-lang/rust/commits/5152e84024cd9bbeeebd7bf27d048628cfc0cd95", "html_url": "https://github.com/rust-lang/rust/commit/5152e84024cd9bbeeebd7bf27d048628cfc0cd95"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "7001f81aa77502fea419f94595502fadbedd26b0", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=e0c8359ccf0aee2b4f4701d2e5681ceda78f22e4", "patch": "@@ -31,7 +31,6 @@ pub use generics::*;\n use rustc_ast as ast;\n use rustc_ast::node_id::NodeMap;\n use rustc_attr as attr;\n-use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap, FxIndexSet};\n use rustc_data_structures::intern::Interned;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n@@ -453,18 +452,6 @@ pub struct CReaderCacheKey {\n #[rustc_pass_by_value]\n pub struct Ty<'tcx>(Interned<'tcx, WithCachedTypeInfo<TyKind<'tcx>>>);\n \n-impl<'tcx> TyCtxt<'tcx> {\n-    /// A \"bool\" type used in rustc_mir_transform unit tests when we\n-    /// have not spun up a TyCtxt.\n-    pub const BOOL_TY_FOR_UNIT_TESTING: Ty<'tcx> =\n-        Ty(Interned::new_unchecked(&WithCachedTypeInfo {\n-            internee: ty::Bool,\n-            stable_hash: Fingerprint::ZERO,\n-            flags: TypeFlags::empty(),\n-            outer_exclusive_binder: DebruijnIndex::from_usize(0),\n-        }));\n-}\n-\n impl ty::EarlyBoundRegion {\n     /// Does this early bound region have a name? Early bound regions normally\n     /// always have names except when using anonymous lifetimes (`'_`)."}]}