{"sha": "1f709d54463972b189a3120be4073c507f2fbc00", "node_id": "C_kwDOAAsO6NoAKDFmNzA5ZDU0NDYzOTcyYjE4OWEzMTIwYmU0MDczYzUwN2YyZmJjMDA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-04T09:32:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-04T09:32:17Z"}, "message": "Auto merge of #12143 - bnjjj:master, r=Veykril\n\nimprove the default constructor mode when filling fields\n\nInstead of filling a boolean field with `bool::default()` it's not `false` and same for `Option` instead of using `Option::default()` it will be `None`", "tree": {"sha": "e3a76288b05d79d52e605ea7e5a70e1992382f7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3a76288b05d79d52e605ea7e5a70e1992382f7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f709d54463972b189a3120be4073c507f2fbc00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f709d54463972b189a3120be4073c507f2fbc00", "html_url": "https://github.com/rust-lang/rust/commit/1f709d54463972b189a3120be4073c507f2fbc00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f709d54463972b189a3120be4073c507f2fbc00/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ed4af89672a17306a87edf17c164a4e2c6786d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed4af89672a17306a87edf17c164a4e2c6786d9", "html_url": "https://github.com/rust-lang/rust/commit/9ed4af89672a17306a87edf17c164a4e2c6786d9"}, {"sha": "6344eea242fc287df733ffc76aea5e85f8a77022", "url": "https://api.github.com/repos/rust-lang/rust/commits/6344eea242fc287df733ffc76aea5e85f8a77022", "html_url": "https://github.com/rust-lang/rust/commit/6344eea242fc287df733ffc76aea5e85f8a77022"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "ac81b8140ba91ad79b398587cec3a517f1c310bd", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f709d54463972b189a3120be4073c507f2fbc00/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f709d54463972b189a3120be4073c507f2fbc00/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=1f709d54463972b189a3120be4073c507f2fbc00", "patch": "@@ -1780,6 +1780,10 @@ impl BuiltinType {\n         matches!(self.inner, hir_def::builtin_type::BuiltinType::Char)\n     }\n \n+    pub fn is_bool(&self) -> bool {\n+        matches!(self.inner, hir_def::builtin_type::BuiltinType::Bool)\n+    }\n+\n     pub fn is_str(&self) -> bool {\n         matches!(self.inner, hir_def::builtin_type::BuiltinType::Str)\n     }"}, {"sha": "891547aaef5e53e1937d7cdce482c4e6bf8a8335", "filename": "crates/ide-diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1f709d54463972b189a3120be4073c507f2fbc00/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f709d54463972b189a3120be4073c507f2fbc00/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=1f709d54463972b189a3120be4073c507f2fbc00", "patch": "@@ -172,6 +172,9 @@ fn get_default_constructor(\n         if builtin_ty.is_str() {\n             return Some(make::ext::empty_str());\n         }\n+        if builtin_ty.is_bool() {\n+            return Some(make::ext::default_bool());\n+        }\n     }\n \n     let krate = ctx.sema.to_module_def(d.file.original_file(ctx.sema.db))?.krate();\n@@ -192,10 +195,13 @@ fn get_default_constructor(\n         })\n         .is_some();\n \n+    let famous_defs = FamousDefs(&ctx.sema, krate);\n     if has_new_func {\n         Some(make::ext::expr_ty_new(&make_ty(ty, ctx.sema.db, module)))\n+    } else if ty.as_adt() == famous_defs.core_option_Option()?.ty(ctx.sema.db).as_adt() {\n+        Some(make::ext::option_none())\n     } else if !ty.is_array()\n-        && ty.impls_trait(ctx.sema.db, FamousDefs(&ctx.sema, krate).core_default_Default()?, &[])\n+        && ty.impls_trait(ctx.sema.db, famous_defs.core_default_Default()?, &[])\n     {\n         Some(make::ext::expr_ty_default(&make_ty(ty, ctx.sema.db, module)))\n     } else {\n@@ -295,17 +301,18 @@ pub struct Foo { pub a: i32, pub b: i32 }\n     fn test_fill_struct_fields_empty() {\n         check_fix(\n             r#\"\n-struct TestStruct { one: i32, two: i64 }\n+//- minicore: option\n+struct TestStruct { one: i32, two: i64, three: Option<i32>, four: bool }\n \n fn test_fn() {\n     let s = TestStruct {$0};\n }\n \"#,\n             r#\"\n-struct TestStruct { one: i32, two: i64 }\n+struct TestStruct { one: i32, two: i64, three: Option<i32>, four: bool }\n \n fn test_fn() {\n-    let s = TestStruct { one: 0, two: 0 };\n+    let s = TestStruct { one: 0, two: 0, three: None, four: false };\n }\n \"#,\n         );\n@@ -415,7 +422,7 @@ fn test_fn() {\n     fn test_fill_struct_fields_default() {\n         check_fix(\n             r#\"\n-//- minicore: default\n+//- minicore: default, option\n struct TestWithDefault(usize);\n impl Default for TestWithDefault {\n     pub fn default() -> Self {"}, {"sha": "5908dda8e6383d76cc5ca30dff4f0dc038af7de9", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f709d54463972b189a3120be4073c507f2fbc00/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f709d54463972b189a3120be4073c507f2fbc00/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=1f709d54463972b189a3120be4073c507f2fbc00", "patch": "@@ -81,6 +81,9 @@ pub mod ext {\n     pub fn default_bool() -> ast::Expr {\n         expr_from_text(\"false\")\n     }\n+    pub fn option_none() -> ast::Expr {\n+        expr_from_text(\"None\")\n+    }\n     pub fn empty_block_expr() -> ast::BlockExpr {\n         block_expr(None, None)\n     }"}]}