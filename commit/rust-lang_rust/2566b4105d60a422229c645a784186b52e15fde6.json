{"sha": "2566b4105d60a422229c645a784186b52e15fde6", "node_id": "C_kwDOAAsO6NoAKDI1NjZiNDEwNWQ2MGE0MjIyMjljNjQ1YTc4NDE4NmI1MmUxNWZkZTY", "commit": {"author": {"name": "Nathan Fenner", "email": "nfenneremail@gmail.com", "date": "2023-02-28T07:58:35Z"}, "committer": {"name": "Nathan Fenner", "email": "nfenneremail@gmail.com", "date": "2023-02-28T07:58:35Z"}, "message": "Point error span at Some constructor argument when trait resolution fails", "tree": {"sha": "7d34efc7860f78dced8c5867aba5b0dae20a1670", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d34efc7860f78dced8c5867aba5b0dae20a1670"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2566b4105d60a422229c645a784186b52e15fde6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2566b4105d60a422229c645a784186b52e15fde6", "html_url": "https://github.com/rust-lang/rust/commit/2566b4105d60a422229c645a784186b52e15fde6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2566b4105d60a422229c645a784186b52e15fde6/comments", "author": {"login": "Nathan-Fenner", "id": 6179181, "node_id": "MDQ6VXNlcjYxNzkxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6179181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nathan-Fenner", "html_url": "https://github.com/Nathan-Fenner", "followers_url": "https://api.github.com/users/Nathan-Fenner/followers", "following_url": "https://api.github.com/users/Nathan-Fenner/following{/other_user}", "gists_url": "https://api.github.com/users/Nathan-Fenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nathan-Fenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nathan-Fenner/subscriptions", "organizations_url": "https://api.github.com/users/Nathan-Fenner/orgs", "repos_url": "https://api.github.com/users/Nathan-Fenner/repos", "events_url": "https://api.github.com/users/Nathan-Fenner/events{/privacy}", "received_events_url": "https://api.github.com/users/Nathan-Fenner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nathan-Fenner", "id": 6179181, "node_id": "MDQ6VXNlcjYxNzkxODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6179181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nathan-Fenner", "html_url": "https://github.com/Nathan-Fenner", "followers_url": "https://api.github.com/users/Nathan-Fenner/followers", "following_url": "https://api.github.com/users/Nathan-Fenner/following{/other_user}", "gists_url": "https://api.github.com/users/Nathan-Fenner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nathan-Fenner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nathan-Fenner/subscriptions", "organizations_url": "https://api.github.com/users/Nathan-Fenner/orgs", "repos_url": "https://api.github.com/users/Nathan-Fenner/repos", "events_url": "https://api.github.com/users/Nathan-Fenner/events{/privacy}", "received_events_url": "https://api.github.com/users/Nathan-Fenner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7281249a19a9755e9d889ee251ec323629caadab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7281249a19a9755e9d889ee251ec323629caadab", "html_url": "https://github.com/rust-lang/rust/commit/7281249a19a9755e9d889ee251ec323629caadab"}], "stats": {"total": 112, "additions": 103, "deletions": 9}, "files": [{"sha": "3b72326be7c958ba03d05fd3d541a66c3bbd6361", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/adjust_fulfillment_errors.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2566b4105d60a422229c645a784186b52e15fde6/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2566b4105d60a422229c645a784186b52e15fde6/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fadjust_fulfillment_errors.rs?ref=2566b4105d60a422229c645a784186b52e15fde6", "patch": "@@ -714,12 +714,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     self.tcx.parent(expr_ctor_def_id)\n                 }\n                 hir::def::DefKind::Ctor(hir::def::CtorOf::Variant, hir::def::CtorKind::Fn) => {\n-                    // If this is a variant, its parent is the type definition.\n-                    if in_ty_adt.did() != self.tcx.parent(expr_ctor_def_id) {\n-                        // FIXME: Deal with type aliases?\n+                    if in_ty_adt.did() == self.tcx.parent(expr_ctor_def_id) {\n+                        // The constructor definition refers to the variant:\n+                        // For example, for a local type `MyEnum::MyVariant` triggers this case.\n+                        expr_ctor_def_id\n+                    } else if in_ty_adt.did() == self.tcx.parent(self.tcx.parent(expr_ctor_def_id))\n+                    {\n+                        // The constructor definition refers to the \"constructor\" of the variant:\n+                        // For example, `Some(5)` triggers this case.\n+                        self.tcx.parent(expr_ctor_def_id)\n+                    } else {\n                         return Err(expr);\n                     }\n-                    expr_ctor_def_id\n                 }\n                 _ => {\n                     return Err(expr);"}, {"sha": "5e939b71b13ead69b2aa3e675bf5a30624e01398", "filename": "tests/ui/errors/trait-bound-error-spans/blame-trait-error.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2566b4105d60a422229c645a784186b52e15fde6/tests%2Fui%2Ferrors%2Ftrait-bound-error-spans%2Fblame-trait-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2566b4105d60a422229c645a784186b52e15fde6/tests%2Fui%2Ferrors%2Ftrait-bound-error-spans%2Fblame-trait-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferrors%2Ftrait-bound-error-spans%2Fblame-trait-error.rs?ref=2566b4105d60a422229c645a784186b52e15fde6", "patch": "@@ -18,11 +18,24 @@ struct Burrito<F> {\n     filling: F,\n }\n \n+impl<It: Iterator> T1 for Option<It> {}\n+\n+impl<'a, A: T1> T1 for &'a A {}\n+\n fn want<V: T1>(_x: V) {}\n \n fn example<Q>(q: Q) {\n     want(Wrapper { value: Burrito { filling: q } });\n     //~^ ERROR the trait bound `Q: T3` is not satisfied [E0277]\n+\n+    want(Some(()));\n+    //~^ ERROR `()` is not an iterator [E0277]\n+\n+    want(Some(q));\n+    //~^ ERROR `Q` is not an iterator [E0277]\n+\n+    want(&Some(q));\n+    //~^ ERROR `Q` is not an iterator [E0277]\n }\n \n fn main() {}"}, {"sha": "e95c73f36dcee9a6e164e64feeff3686e854e2c9", "filename": "tests/ui/errors/trait-bound-error-spans/blame-trait-error.stderr", "status": "modified", "additions": 78, "deletions": 3, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/2566b4105d60a422229c645a784186b52e15fde6/tests%2Fui%2Ferrors%2Ftrait-bound-error-spans%2Fblame-trait-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2566b4105d60a422229c645a784186b52e15fde6/tests%2Fui%2Ferrors%2Ftrait-bound-error-spans%2Fblame-trait-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferrors%2Ftrait-bound-error-spans%2Fblame-trait-error.stderr?ref=2566b4105d60a422229c645a784186b52e15fde6", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error.rs:24:46\n+  --> $DIR/blame-trait-error.rs:28:46\n    |\n LL |     want(Wrapper { value: Burrito { filling: q } });\n    |     ----                                     ^ the trait `T3` is not implemented for `Q`\n@@ -21,7 +21,7 @@ LL | impl<B: T2> T1 for Wrapper<B> {}\n    |         |\n    |         unsatisfied trait bound introduced here\n note: required by a bound in `want`\n-  --> $DIR/blame-trait-error.rs:21:12\n+  --> $DIR/blame-trait-error.rs:25:12\n    |\n LL | fn want<V: T1>(_x: V) {}\n    |            ^^ required by this bound in `want`\n@@ -30,6 +30,81 @@ help: consider restricting type parameter `Q`\n LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n-error: aborting due to previous error\n+error[E0277]: `()` is not an iterator\n+  --> $DIR/blame-trait-error.rs:31:15\n+   |\n+LL |     want(Some(()));\n+   |     ----      ^^ `()` is not an iterator\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+   = help: the trait `Iterator` is not implemented for `()`\n+   = help: the trait `T1` is implemented for `Option<It>`\n+note: required for `Option<()>` to implement `T1`\n+  --> $DIR/blame-trait-error.rs:21:20\n+   |\n+LL | impl<It: Iterator> T1 for Option<It> {}\n+   |          --------  ^^     ^^^^^^^^^^\n+   |          |\n+   |          unsatisfied trait bound introduced here\n+note: required by a bound in `want`\n+  --> $DIR/blame-trait-error.rs:25:12\n+   |\n+LL | fn want<V: T1>(_x: V) {}\n+   |            ^^ required by this bound in `want`\n+\n+error[E0277]: `Q` is not an iterator\n+  --> $DIR/blame-trait-error.rs:34:15\n+   |\n+LL |     want(Some(q));\n+   |     ----      ^ `Q` is not an iterator\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required for `Option<Q>` to implement `T1`\n+  --> $DIR/blame-trait-error.rs:21:20\n+   |\n+LL | impl<It: Iterator> T1 for Option<It> {}\n+   |          --------  ^^     ^^^^^^^^^^\n+   |          |\n+   |          unsatisfied trait bound introduced here\n+note: required by a bound in `want`\n+  --> $DIR/blame-trait-error.rs:25:12\n+   |\n+LL | fn want<V: T1>(_x: V) {}\n+   |            ^^ required by this bound in `want`\n+help: consider restricting type parameter `Q`\n+   |\n+LL | fn example<Q: std::iter::Iterator>(q: Q) {\n+   |             +++++++++++++++++++++\n+\n+error[E0277]: `Q` is not an iterator\n+  --> $DIR/blame-trait-error.rs:37:16\n+   |\n+LL |     want(&Some(q));\n+   |     ----       ^ `Q` is not an iterator\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+note: required for `Option<Q>` to implement `T1`\n+  --> $DIR/blame-trait-error.rs:21:20\n+   |\n+LL | impl<It: Iterator> T1 for Option<It> {}\n+   |          --------  ^^     ^^^^^^^^^^\n+   |          |\n+   |          unsatisfied trait bound introduced here\n+   = note: 1 redundant requirement hidden\n+   = note: required for `&Option<Q>` to implement `T1`\n+note: required by a bound in `want`\n+  --> $DIR/blame-trait-error.rs:25:12\n+   |\n+LL | fn want<V: T1>(_x: V) {}\n+   |            ^^ required by this bound in `want`\n+help: consider restricting type parameter `Q`\n+   |\n+LL | fn example<Q: std::iter::Iterator>(q: Q) {\n+   |             +++++++++++++++++++++\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "b6a24e12bcc76819f531e74644e226a341d2474b", "filename": "tests/ui/errors/traits/blame-trait-error-spans-on-exprs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2566b4105d60a422229c645a784186b52e15fde6/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2566b4105d60a422229c645a784186b52e15fde6/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferrors%2Ftraits%2Fblame-trait-error-spans-on-exprs.stderr?ref=2566b4105d60a422229c645a784186b52e15fde6", "patch": "@@ -91,10 +91,10 @@ LL | fn example<Q: T3>(q: Q) {\n    |             ++++\n \n error[E0277]: the trait bound `Q: T3` is not satisfied\n-  --> $DIR/blame-trait-error-spans-on-exprs.rs:93:27\n+  --> $DIR/blame-trait-error-spans-on-exprs.rs:93:53\n    |\n LL |     want(Wrapper { value: TacoKinds::OneTaco(false, q) });\n-   |     ----                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `T3` is not implemented for `Q`\n+   |     ----                                            ^ the trait `T3` is not implemented for `Q`\n    |     |\n    |     required by a bound introduced by this call\n    |"}]}