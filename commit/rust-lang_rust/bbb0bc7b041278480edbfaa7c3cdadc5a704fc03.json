{"sha": "bbb0bc7b041278480edbfaa7c3cdadc5a704fc03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYjBiYzdiMDQxMjc4NDgwZWRiZmFhN2MzY2RhZGM1YTcwNGZjMDM=", "commit": {"author": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2020-12-10T16:10:39Z"}, "committer": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2020-12-10T16:10:39Z"}, "message": "Cast to ExprStmt, style fixes", "tree": {"sha": "ba9a6ca1097cdce52d4d701effaabf8e1e2868fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba9a6ca1097cdce52d4d701effaabf8e1e2868fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEcPkYW+t8+2SKgl5T2MS9WuTZzE0FAl/SSH8ACgkQ2MS9WuTZ\nzE2KAwf+NLiPO7gCXVsUYnckdnGm4Q4RBMaRLD2owbpkq/1ZapgcUYQHNEyu2iKC\nM7k5RHdmlH5XibVJSySwVUlunamojyFyOkE6gXkTCpyuMDvwNHfSSYa13wXxWsMk\nBetGdByoUdHfCGUE+jocYhGU3NfUjeCh77kVkyziWsqLQpKX4gBy7FIu1aAo+bxa\ncJqgd6O4yFac6Gq6zhdvIhtWfbPd+XfricbAHqF9l9EeU+ps5uscyyCWBZp5GQUq\nVPSNzMKkxT3JdBheO86EguXbfXpvKpUJDvDna5FOcaNxFe3m5MHMsW9PdgxUgxVY\nkZ7OY3bO+e9fIAoURW1j42tAsCgvwQ==\n=ZjJs\n-----END PGP SIGNATURE-----", "payload": "tree ba9a6ca1097cdce52d4d701effaabf8e1e2868fd\nparent 35006eba79b9a445c4ebec66f1a93b3170398e0e\nauthor ivan770 <leshenko.ivan770@gmail.com> 1607616639 +0200\ncommitter ivan770 <leshenko.ivan770@gmail.com> 1607616639 +0200\n\nCast to ExprStmt, style fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03", "html_url": "https://github.com/rust-lang/rust/commit/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03/comments", "author": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35006eba79b9a445c4ebec66f1a93b3170398e0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/35006eba79b9a445c4ebec66f1a93b3170398e0e", "html_url": "https://github.com/rust-lang/rust/commit/35006eba79b9a445c4ebec66f1a93b3170398e0e"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "84941570630edc83b5338f0a3f58406596961ef4", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=bbb0bc7b041278480edbfaa7c3cdadc5a704fc03", "patch": "@@ -334,18 +334,17 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n             None => return,\n         };\n \n-        let possible_tail_ty =\n-            if let Some(possible_tail_ty) = self.infer.type_of_expr.get(possible_tail_id) {\n-                possible_tail_ty\n-            } else {\n-                return;\n-            };\n+        let possible_tail_ty = match self.infer.type_of_expr.get(possible_tail_id) {\n+            Some(ty) => ty,\n+            None => return,\n+        };\n \n         if mismatch.actual != Ty::unit() || mismatch.expected != *possible_tail_ty {\n             return;\n         }\n \n         let (_, source_map) = db.body_with_source_map(self.owner.into());\n+\n         if let Ok(source_ptr) = source_map.expr_syntax(possible_tail_id) {\n             self.sink\n                 .push(RemoveThisSemicolon { file: source_ptr.file_id, expr: source_ptr.value });"}, {"sha": "ba046232aa0ff74458deab68e827e3df7dc0a049", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb0bc7b041278480edbfaa7c3cdadc5a704fc03/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=bbb0bc7b041278480edbfaa7c3cdadc5a704fc03", "patch": "@@ -16,7 +16,7 @@ use ide_db::{\n use syntax::{\n     algo,\n     ast::{self, edit::IndentLevel, make},\n-    AstNode, Direction, T,\n+    AstNode,\n };\n use text_edit::TextEdit;\n \n@@ -110,9 +110,9 @@ impl DiagnosticWithFix for RemoveThisSemicolon {\n             .expr\n             .to_node(&root)\n             .syntax()\n-            .siblings_with_tokens(Direction::Next)\n-            .filter_map(|it| it.into_token())\n-            .find(|it| it.kind() == T![;])?\n+            .parent()\n+            .and_then(ast::ExprStmt::cast)\n+            .and_then(|expr| expr.semicolon_token())?\n             .text_range();\n \n         let edit = TextEdit::delete(semicolon);"}]}