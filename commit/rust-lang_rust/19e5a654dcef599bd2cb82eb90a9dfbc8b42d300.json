{"sha": "19e5a654dcef599bd2cb82eb90a9dfbc8b42d300", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZTVhNjU0ZGNlZjU5OWJkMmNiODJlYjkwYTlkZmJjOGI0MmQzMDA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-04-20T14:33:27Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-04-20T14:33:27Z"}, "message": "Expand comment to justify not checking if all the exports are green.", "tree": {"sha": "239f5e76fd52d8421f9a2774d7c6216358300010", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/239f5e76fd52d8421f9a2774d7c6216358300010"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19e5a654dcef599bd2cb82eb90a9dfbc8b42d300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19e5a654dcef599bd2cb82eb90a9dfbc8b42d300", "html_url": "https://github.com/rust-lang/rust/commit/19e5a654dcef599bd2cb82eb90a9dfbc8b42d300", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19e5a654dcef599bd2cb82eb90a9dfbc8b42d300/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1abfd4ab2358a3bbaf4bd420fc75eb1cf348d067", "url": "https://api.github.com/repos/rust-lang/rust/commits/1abfd4ab2358a3bbaf4bd420fc75eb1cf348d067", "html_url": "https://github.com/rust-lang/rust/commit/1abfd4ab2358a3bbaf4bd420fc75eb1cf348d067"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "7292492a0c02fe5d8bf6bcd9c2d9f49d789815c5", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/19e5a654dcef599bd2cb82eb90a9dfbc8b42d300/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e5a654dcef599bd2cb82eb90a9dfbc8b42d300/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=19e5a654dcef599bd2cb82eb90a9dfbc8b42d300", "patch": "@@ -509,6 +509,23 @@ fn thin_lto(\n             // (Note that globally, the export set is just the inverse of the\n             // import set.)\n             //\n+            // For further justification of why the above is necessary and sufficient,\n+            // see the LLVM blog post on ThinLTO:\n+            //\n+            // http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html\n+            //\n+            // which states the following:\n+            //\n+            // ```quote\n+            // any particular ThinLTO backend must be redone iff:\n+            //\n+            // 1. The corresponding (primary) module\u2019s bitcode changed\n+            // 2. The list of imports into or exports from the module changed\n+            // 3. The bitcode for any module being imported from has changed\n+            // 4. Any global analysis result affecting either the primary module\n+            //    or anything it imports has changed.\n+            // ```\n+            //\n             // This strategy means we can always save the computed imports as\n             // canon: when we reuse the post-ThinLTO version, condition (3.)\n             // ensures that the current import set is the same as the previous"}]}