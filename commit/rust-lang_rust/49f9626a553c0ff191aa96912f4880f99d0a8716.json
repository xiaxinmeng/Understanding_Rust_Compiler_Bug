{"sha": "49f9626a553c0ff191aa96912f4880f99d0a8716", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5Zjk2MjZhNTUzYzBmZjE5MWFhOTY5MTJmNDg4MGY5OWQwYTg3MTY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-30T16:55:17Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-30T16:55:17Z"}, "message": "caller_location: use in core::panic!.", "tree": {"sha": "76f612230c46613bdf13dedfa0a142729847301e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76f612230c46613bdf13dedfa0a142729847301e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49f9626a553c0ff191aa96912f4880f99d0a8716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49f9626a553c0ff191aa96912f4880f99d0a8716", "html_url": "https://github.com/rust-lang/rust/commit/49f9626a553c0ff191aa96912f4880f99d0a8716", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49f9626a553c0ff191aa96912f4880f99d0a8716/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c17f89d6ede71cb0f8f0286307b1b83a642aff91", "url": "https://api.github.com/repos/rust-lang/rust/commits/c17f89d6ede71cb0f8f0286307b1b83a642aff91", "html_url": "https://github.com/rust-lang/rust/commit/c17f89d6ede71cb0f8f0286307b1b83a642aff91"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "131fb52e2d22b535873cc49bdcc55ea38baf63be", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/49f9626a553c0ff191aa96912f4880f99d0a8716/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f9626a553c0ff191aa96912f4880f99d0a8716/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=49f9626a553c0ff191aa96912f4880f99d0a8716", "patch": "@@ -26,31 +26,29 @@ macro_rules! panic {\n /// For details, see `std::macros`.\n #[cfg(not(bootstrap))]\n #[macro_export]\n-#[allow_internal_unstable(core_panic, panic_internals)]\n+#[allow_internal_unstable(core_panic,\n+    // FIXME(anp, eddyb) `core_intrinsics` is used here to allow calling\n+    // the `caller_location` intrinsic, but once  `#[track_caller]` is implemented,\n+    // `panicking::{panic, panic_fmt}` can use that instead of a `Location` argument.\n+    core_intrinsics,\n+)]\n #[stable(feature = \"core\", since = \"1.6.0\")]\n macro_rules! panic {\n     () => (\n         $crate::panic!(\"explicit panic\")\n     );\n-    ($msg:expr) => ({\n-        const LOC: &$crate::panic::Location<'_> = &$crate::panic::Location::internal_constructor(\n-            $crate::file!(),\n-            $crate::line!(),\n-            $crate::column!(),\n-        );\n-        $crate::panicking::panic($msg, LOC)\n-    });\n+    ($msg:expr) => (\n+        $crate::panicking::panic($msg, $crate::intrinsics::caller_location())\n+    );\n     ($msg:expr,) => (\n         $crate::panic!($msg)\n     );\n-    ($fmt:expr, $($arg:tt)+) => ({\n-        const LOC: &$crate::panic::Location<'_> = &$crate::panic::Location::internal_constructor(\n-            $crate::file!(),\n-            $crate::line!(),\n-            $crate::column!(),\n-        );\n-        $crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+), LOC)\n-    });\n+    ($fmt:expr, $($arg:tt)+) => (\n+        $crate::panicking::panic_fmt(\n+            $crate::format_args!($fmt, $($arg)+),\n+            $crate::intrinsics::caller_location(),\n+        )\n+    );\n }\n \n /// Asserts that two expressions are equal to each other (using [`PartialEq`])."}]}