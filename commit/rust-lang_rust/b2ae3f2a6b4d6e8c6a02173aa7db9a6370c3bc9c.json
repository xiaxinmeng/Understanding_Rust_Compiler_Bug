{"sha": "b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYWUzZjJhNmI0ZDZlOGM2YTAyMTczYWE3ZGI5YTYzNzBjM2JjOWM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-01T06:07:57Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-01T06:07:57Z"}, "message": "Remove the `$lt_tcx` parameter from `direct_interners!`.\n\nIt's not necessary.", "tree": {"sha": "1f622eccd3b1b5860461e4a526d0314fe979ec22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f622eccd3b1b5860461e4a526d0314fe979ec22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c", "html_url": "https://github.com/rust-lang/rust/commit/b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "475e131b3e877d3926b5869cde5b548825f0ceb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/475e131b3e877d3926b5869cde5b548825f0ceb1", "html_url": "https://github.com/rust-lang/rust/commit/475e131b3e877d3926b5869cde5b548825f0ceb1"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "740e916dd5cc13d3f97cd8b6e0ded2cf07c50350", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=b2ae3f2a6b4d6e8c6a02173aa7db9a6370c3bc9c", "patch": "@@ -2155,23 +2155,23 @@ impl<'tcx> Borrow<[Goal<'tcx>]> for Interned<'tcx, List<Goal<'tcx>>> {\n }\n \n macro_rules! direct_interners {\n-    ($lt_tcx:tt, $($name:ident: $method:ident($ty:ty)),+) => {\n-        $(impl<$lt_tcx> PartialEq for Interned<$lt_tcx, $ty> {\n+    ($($name:ident: $method:ident($ty:ty)),+) => {\n+        $(impl<'tcx> PartialEq for Interned<'tcx, $ty> {\n             fn eq(&self, other: &Self) -> bool {\n                 self.0 == other.0\n             }\n         }\n \n-        impl<$lt_tcx> Eq for Interned<$lt_tcx, $ty> {}\n+        impl<'tcx> Eq for Interned<'tcx, $ty> {}\n \n-        impl<$lt_tcx> Hash for Interned<$lt_tcx, $ty> {\n+        impl<'tcx> Hash for Interned<'tcx, $ty> {\n             fn hash<H: Hasher>(&self, s: &mut H) {\n                 self.0.hash(s)\n             }\n         }\n \n-        impl<$lt_tcx> TyCtxt<$lt_tcx> {\n-            pub fn $method(self, v: $ty) -> &$lt_tcx $ty {\n+        impl<'tcx> TyCtxt<'tcx> {\n+            pub fn $method(self, v: $ty) -> &'tcx $ty {\n                 self.interners.$name.intern_ref(&v, || {\n                     Interned(self.interners.arena.alloc(v))\n                 }).0\n@@ -2184,7 +2184,7 @@ pub fn keep_local<'tcx, T: ty::TypeFoldable<'tcx>>(x: &T) -> bool {\n     x.has_type_flags(ty::TypeFlags::KEEP_IN_LOCAL_TCX)\n }\n \n-direct_interners!('tcx,\n+direct_interners!(\n     region: mk_region(RegionKind),\n     goal: mk_goal(GoalKind<'tcx>),\n     const_: mk_const(Const<'tcx>)"}]}