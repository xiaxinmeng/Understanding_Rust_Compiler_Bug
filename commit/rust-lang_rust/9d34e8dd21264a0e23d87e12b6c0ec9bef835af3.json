{"sha": "9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMzRlOGRkMjEyNjRhMGUyM2Q4N2UxMmI2YzBlYzliZWY4MzVhZjM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-05-04T18:37:27Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-05-04T20:51:12Z"}, "message": "Make extern_absolute_paths only work on the new edition", "tree": {"sha": "3a64e3a155daa1cbded55f7d0cd2d15d2a27dd2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a64e3a155daa1cbded55f7d0cd2d15d2a27dd2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "html_url": "https://github.com/rust-lang/rust/commit/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1951f450ae5ed34c3a14cda74036fe63a3abe91", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1951f450ae5ed34c3a14cda74036fe63a3abe91", "html_url": "https://github.com/rust-lang/rust/commit/b1951f450ae5ed34c3a14cda74036fe63a3abe91"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "0f931d4374e59337a7e43c78ff7f1cc6f579b030", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -3277,9 +3277,8 @@ impl<'a> Resolver<'a> {\n                     let prev_name = path[0].name;\n                     if prev_name == keywords::Extern.name() ||\n                        prev_name == keywords::CrateRoot.name() &&\n-                       // Note: When this feature stabilizes, this should\n-                       // be gated on sess.rust_2018()\n-                       self.session.features_untracked().extern_absolute_paths {\n+                       self.session.features_untracked().extern_absolute_paths &&\n+                       self.session.rust_2018() {\n                         // `::extern_crate::a::b`\n                         let crate_id = self.crate_loader.process_path_extern(name, ident.span);\n                         let crate_root ="}, {"sha": "6a5a31a885fb9855c880239da9df6a23358da1cc", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -646,7 +646,8 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n         if module_path.len() == 1 && (module_path[0].name == keywords::CrateRoot.name() ||\n                                       module_path[0].name == keywords::Extern.name()) {\n             let is_extern = module_path[0].name == keywords::Extern.name() ||\n-                            self.session.features_untracked().extern_absolute_paths;\n+                            (self.session.features_untracked().extern_absolute_paths &&\n+                             self.session.rust_2018());\n             match directive.subclass {\n                 GlobImport { .. } if is_extern => {\n                     return Some((directive.span,"}, {"sha": "5155408ba63f3143372f4a1db5ea19b312dca792", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -1849,8 +1849,10 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n     let mut feature_checker = FeatureChecker::default();\n \n     for &(.., f_edition, set) in ACTIVE_FEATURES.iter() {\n-        if f_edition <= crate_edition {\n-            set(&mut features, DUMMY_SP);\n+        if let Some(f_edition) = f_edition {\n+            if f_edition <= crate_edition {\n+                set(&mut features, DUMMY_SP);\n+            }\n         }\n     }\n "}, {"sha": "fcf4714ba9695ff3c4a40a67290072ee34d57a16", "filename": "src/test/compile-fail/rfc-2126-extern-absolute-paths/non-existent-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-1.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// compile-flags: --edition=2018 -Zunstable-options\n+\n #![feature(extern_absolute_paths)]\n \n use xcrate::S; //~ ERROR can't find crate for `xcrate`"}, {"sha": "c256c5592c2695a1d95975db26f189cee04d9ab7", "filename": "src/test/compile-fail/rfc-2126-extern-absolute-paths/non-existent-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// compile-flags: --edition=2018 -Zunstable-options\n+\n #![feature(extern_absolute_paths)]\n \n fn main() {"}, {"sha": "837dc617b3ad056cb539711b3659ddb0f6ffd3bf", "filename": "src/test/compile-fail/rfc-2126-extern-absolute-paths/non-existent-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fnon-existent-3.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// compile-flags: --edition=2018 -Zunstable-options\n+\n #![feature(extern_absolute_paths)]\n \n use ycrate; //~ ERROR can't find crate for `ycrate`"}, {"sha": "9b7baa0016344221d9de93fc676af7d0e3a727f2", "filename": "src/test/compile-fail/rfc-2126-extern-absolute-paths/single-segment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fsingle-segment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fsingle-segment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2126-extern-absolute-paths%2Fsingle-segment.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:xcrate.rs\n+// compile-flags: --edition=2018 -Zunstable-options\n \n #![feature(crate_in_paths)]\n #![feature(extern_absolute_paths)]"}, {"sha": "6a67b5862a815526ed7fb103d30d77333bdfcc0b", "filename": "src/test/run-make-fulldeps/save-analysis-rfc2126/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-rfc2126%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-rfc2126%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis-rfc2126%2FMakefile?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -1,9 +1,9 @@\n -include ../tools.mk\n \n all: extern_absolute_paths.rs extern_in_paths.rs krate2\n-\t$(RUSTC) extern_absolute_paths.rs -Zsave-analysis\n+\t$(RUSTC) extern_absolute_paths.rs -Zsave-analysis --edition=2018\n \tcat $(TMPDIR)/save-analysis/extern_absolute_paths.json | \"$(PYTHON)\" validate_json.py\n-\t$(RUSTC) extern_in_paths.rs -Zsave-analysis\n+\t$(RUSTC) extern_in_paths.rs -Zsave-analysis --edition=2018\n \tcat $(TMPDIR)/save-analysis/extern_in_paths.json | \"$(PYTHON)\" validate_json.py\n \n krate2: krate2.rs"}, {"sha": "bbe066481a8b15d313c807e0a691b334a2fcdbf7", "filename": "src/test/run-pass/rfc-2126-extern-absolute-paths/basic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Fbasic.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // aux-build:xcrate.rs\n+// compile-flags: --edition=2018 -Zunstable-options\n \n #![feature(extern_absolute_paths)]\n "}, {"sha": "ead462cf0d2cacc09754c6718616cbaffd30e185", "filename": "src/test/run-pass/rfc-2126-extern-absolute-paths/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d34e8dd21264a0e23d87e12b6c0ec9bef835af3/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2126-extern-absolute-paths%2Ftest.rs?ref=9d34e8dd21264a0e23d87e12b6c0ec9bef835af3", "patch": "@@ -12,7 +12,7 @@\n //\n // Regression test for #47075.\n \n-// compile-flags: --test\n+// compile-flags: --test --edition=2018 -Zunstable-options\n \n #![feature(extern_absolute_paths)]\n "}]}