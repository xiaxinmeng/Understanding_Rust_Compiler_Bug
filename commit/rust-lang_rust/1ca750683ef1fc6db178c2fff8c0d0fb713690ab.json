{"sha": "1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYTc1MDY4M2VmMWZjNmRiMTc4YzJmZmY4YzBkMGZiNzEzNjkwYWI=", "commit": {"author": {"name": "Denis Merigoux", "email": "denis.merigoux@gmail.com", "date": "2018-08-21T16:22:29Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-16T12:11:09Z"}, "message": "Generalized AsmDialect for BuilderMethods", "tree": {"sha": "b19ff11817d9c73fe0863d799ea8bc42d7205e07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b19ff11817d9c73fe0863d799ea8bc42d7205e07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "html_url": "https://github.com/rust-lang/rust/commit/1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/comments", "author": {"login": "denismerigoux", "id": 1766128, "node_id": "MDQ6VXNlcjE3NjYxMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1766128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denismerigoux", "html_url": "https://github.com/denismerigoux", "followers_url": "https://api.github.com/users/denismerigoux/followers", "following_url": "https://api.github.com/users/denismerigoux/following{/other_user}", "gists_url": "https://api.github.com/users/denismerigoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/denismerigoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denismerigoux/subscriptions", "organizations_url": "https://api.github.com/users/denismerigoux/orgs", "repos_url": "https://api.github.com/users/denismerigoux/repos", "events_url": "https://api.github.com/users/denismerigoux/events{/privacy}", "received_events_url": "https://api.github.com/users/denismerigoux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7615389978eae2ae9f3cba9a776fd8da3f743ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7615389978eae2ae9f3cba9a776fd8da3f743ca", "html_url": "https://github.com/rust-lang/rust/commit/b7615389978eae2ae9f3cba9a776fd8da3f743ca"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "6eedc6d1c2a7256c28cb4894b82c4ec4cc0985d1", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "patch": "@@ -22,7 +22,6 @@ use mir::place::PlaceRef;\n use mir::operand::OperandValue;\n \n use std::ffi::CString;\n-use syntax::ast::AsmDialect;\n use libc::{c_uint, c_char};\n \n // Take an inline assembly expression and splat it out via LLVM\n@@ -82,11 +81,6 @@ pub fn codegen_inline_asm(\n         _ => Type::struct_(bx.cx, &output_types, false)\n     };\n \n-    let dialect = match ia.dialect {\n-        AsmDialect::Att   => llvm::AsmDialect::Att,\n-        AsmDialect::Intel => llvm::AsmDialect::Intel,\n-    };\n-\n     let asm = CString::new(ia.asm.as_str().as_bytes()).unwrap();\n     let constraint_cstr = CString::new(all_constraints).unwrap();\n     let r = bx.inline_asm_call(\n@@ -96,7 +90,7 @@ pub fn codegen_inline_asm(\n         output_type,\n         ia.volatile,\n         ia.alignstack,\n-        dialect\n+        ia.dialect\n     );\n     if r.is_none() {\n         return false;"}, {"sha": "711d263608b322c5eca03472e59fbaa0406b0ce6", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "patch": "@@ -20,6 +20,7 @@ use rustc::ty::layout::{Align, Size};\n use rustc::session::{config, Session};\n use rustc_data_structures::small_c_str::SmallCStr;\n use traits::{self, BuilderMethods};\n+use syntax;\n \n use std::borrow::Cow;\n use std::ops::Range;\n@@ -742,7 +743,7 @@ impl BuilderMethods<'a, 'll, 'tcx, Value, BasicBlock>\n     fn inline_asm_call(&self, asm: *const c_char, cons: *const c_char,\n                        inputs: &[&'ll Value], output: &'ll Type,\n                        volatile: bool, alignstack: bool,\n-                       dia: AsmDialect) -> Option<&'ll Value> {\n+                       dia: syntax::ast::AsmDialect) -> Option<&'ll Value> {\n         self.count_insn(\"inlineasm\");\n \n         let volatile = if volatile { llvm::True }\n@@ -763,7 +764,7 @@ impl BuilderMethods<'a, 'll, 'tcx, Value, BasicBlock>\n             debug!(\"Constraint verification result: {:?}\", constraints_ok);\n             if constraints_ok {\n                 let v = llvm::LLVMRustInlineAsm(\n-                    fty, asm, cons, volatile, alignstack, dia);\n+                    fty, asm, cons, volatile, alignstack, AsmDialect::from_generic(dia));\n                 Some(self.call(v, inputs, None))\n             } else {\n                 // LLVM has detected an issue with our constraints, bail out"}, {"sha": "827948a02a7825618f590362c492786f92fad8d7", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "patch": "@@ -20,6 +20,7 @@ use libc::{c_ulonglong, c_void};\n \n use std::marker::PhantomData;\n use traits;\n+use syntax;\n \n use super::RustString;\n \n@@ -354,6 +355,15 @@ pub enum AsmDialect {\n     Intel,\n }\n \n+impl AsmDialect {\n+    pub fn from_generic(asm : syntax::ast::AsmDialect) -> Self {\n+        match asm {\n+            syntax::ast::AsmDialect::Att => AsmDialect::Att,\n+            syntax::ast::AsmDialect::Intel => AsmDialect::Intel\n+        }\n+    }\n+}\n+\n /// LLVMRustCodeGenOptLevel\n #[derive(Copy, Clone, PartialEq)]\n #[repr(C)]"}, {"sha": "57e9a30b90dfc8a2292d38924121459479ce0587", "filename": "src/librustc_codegen_llvm/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca750683ef1fc6db178c2fff8c0d0fb713690ab/src%2Flibrustc_codegen_llvm%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftraits.rs?ref=1ca750683ef1fc6db178c2fff8c0d0fb713690ab", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use llvm::AsmDialect;\n use common::*;\n use type_::Type;\n use libc::c_char;\n@@ -20,6 +19,7 @@ use value::Value;\n \n use std::borrow::Cow;\n use std::ops::Range;\n+use syntax::ast::AsmDialect;\n \n pub struct OperandBundleDef<'a, Value : 'a> {\n     pub name: &'a str,"}]}