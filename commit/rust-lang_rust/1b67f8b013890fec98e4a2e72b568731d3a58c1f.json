{"sha": "1b67f8b013890fec98e4a2e72b568731d3a58c1f", "node_id": "C_kwDOAAsO6NoAKDFiNjdmOGIwMTM4OTBmZWM5OGU0YTJlNzJiNTY4NzMxZDNhNThjMWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-21T01:12:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-21T01:12:45Z"}, "message": "Auto merge of #111675 - Urgau:fix-local-libs-for-native-static-libs, r=bjorn3\n\nFix local libs not included when printing native static libs\n\nThis PR fixes https://github.com/rust-lang/rust/issues/111643 by adding the local used libs to the printed `--print=native-static-libs` output.\n\nIt seems that `--print=native-static-libs` doesn't have any test, so I added one. It's very simple and doesn't even tries to compile the result to a binary as I don't know how to handle external library linking in CI. (Note that https://github.com/rust-lang/rust/blob/master/tests/run-make/staticlib-dylib-linkage/Makefile does compile to a binary)\n\nr? `@bjorn3`", "tree": {"sha": "9083a628d8ca7eda90b898a8c17dce229b78501d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9083a628d8ca7eda90b898a8c17dce229b78501d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b67f8b013890fec98e4a2e72b568731d3a58c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b67f8b013890fec98e4a2e72b568731d3a58c1f", "html_url": "https://github.com/rust-lang/rust/commit/1b67f8b013890fec98e4a2e72b568731d3a58c1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b67f8b013890fec98e4a2e72b568731d3a58c1f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe76e14955329df4bc54aab78c297e58fe58c115", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe76e14955329df4bc54aab78c297e58fe58c115", "html_url": "https://github.com/rust-lang/rust/commit/fe76e14955329df4bc54aab78c297e58fe58c115"}, {"sha": "3281060607412c5863703eaae1f4bf29a23664dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3281060607412c5863703eaae1f4bf29a23664dd", "html_url": "https://github.com/rust-lang/rust/commit/3281060607412c5863703eaae1f4bf29a23664dd"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "8a00c42a0e8bd9fd149d7cc84e4b85df4614c22d", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b67f8b013890fec98e4a2e72b568731d3a58c1f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b67f8b013890fec98e4a2e72b568731d3a58c1f/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=1b67f8b013890fec98e4a2e72b568731d3a58c1f", "patch": "@@ -574,6 +574,8 @@ fn link_staticlib<'a>(\n         }\n     }\n \n+    all_native_libs.extend_from_slice(&codegen_results.crate_info.used_libraries);\n+\n     if sess.opts.prints.contains(&PrintRequest::NativeStaticLibs) {\n         print_native_static_libs(sess, &all_native_libs, &all_rust_dylibs);\n     }"}, {"sha": "98e72d7696f79033a6eb5f628a4d32a80531fc39", "filename": "tests/run-make/print-native-static-libs/Makefile", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1b67f8b013890fec98e4a2e72b568731d3a58c1f/tests%2Frun-make%2Fprint-native-static-libs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/1b67f8b013890fec98e4a2e72b568731d3a58c1f/tests%2Frun-make%2Fprint-native-static-libs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fprint-native-static-libs%2FMakefile?ref=1b67f8b013890fec98e4a2e72b568731d3a58c1f", "patch": "@@ -0,0 +1,15 @@\n+include ../tools.mk\n+\n+# ignore-cross-compile\n+# ignore-wasm\n+\n+all:\n+\t$(RUSTC) --crate-type rlib -lbar_cli bar.rs\n+\t$(RUSTC) foo.rs -lfoo_cli --crate-type staticlib --print native-static-libs 2>&1 \\\n+\t\t| grep 'note: native-static-libs: ' \\\n+\t\t| sed 's/note: native-static-libs: \\(.*\\)/\\1/' > $(TMPDIR)/libs.txt\n+\n+\tcat $(TMPDIR)/libs.txt | grep -F \"glib-2.0\" # in bar.rs\n+\tcat $(TMPDIR)/libs.txt | grep -F \"systemd\" # in foo.rs\n+\tcat $(TMPDIR)/libs.txt | grep -F \"bar_cli\"\n+\tcat $(TMPDIR)/libs.txt | grep -F \"foo_cli\""}, {"sha": "a563bbc2a2239fb2ca26f2e2998c3ce3b319eae0", "filename": "tests/run-make/print-native-static-libs/bar.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1b67f8b013890fec98e4a2e72b568731d3a58c1f/tests%2Frun-make%2Fprint-native-static-libs%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b67f8b013890fec98e4a2e72b568731d3a58c1f/tests%2Frun-make%2Fprint-native-static-libs%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fprint-native-static-libs%2Fbar.rs?ref=1b67f8b013890fec98e4a2e72b568731d3a58c1f", "patch": "@@ -0,0 +1,13 @@\n+#[no_mangle]\n+pub extern \"C\" fn my_bar_add(left: i32, right: i32) -> i32 {\n+    // Obviously makes no sense but...\n+    unsafe {\n+        g_free(std::ptr::null_mut());\n+    }\n+    left + right\n+}\n+\n+#[link(name = \"glib-2.0\")]\n+extern \"C\" {\n+    fn g_free(p: *mut ());\n+}"}, {"sha": "6acaee20ed4d7e3471ffa0db444c10f92d60d117", "filename": "tests/run-make/print-native-static-libs/foo.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1b67f8b013890fec98e4a2e72b568731d3a58c1f/tests%2Frun-make%2Fprint-native-static-libs%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b67f8b013890fec98e4a2e72b568731d3a58c1f/tests%2Frun-make%2Fprint-native-static-libs%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Fprint-native-static-libs%2Ffoo.rs?ref=1b67f8b013890fec98e4a2e72b568731d3a58c1f", "patch": "@@ -0,0 +1,15 @@\n+extern crate bar;\n+\n+#[no_mangle]\n+pub extern \"C\" fn my_foo_add(left: i32, right: i32) -> i32 {\n+    // Obviously makes no sense but...\n+    unsafe {\n+        init(std::ptr::null_mut());\n+    }\n+    bar::my_bar_add(left, right)\n+}\n+\n+#[link(name = \"systemd\")]\n+extern \"C\" {\n+    fn init(p: *mut ());\n+}"}]}