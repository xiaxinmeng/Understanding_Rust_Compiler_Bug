{"sha": "b82d967182d29f1302187fa0e3a56661d0c4082a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MmQ5NjcxODJkMjlmMTMwMjE4N2ZhMGUzYTU2NjYxZDBjNDA4MmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-17T13:49:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-17T13:49:46Z"}, "message": "Mention that generated .adocs are generaterd", "tree": {"sha": "75688579e050261973baea316f286b5916b5b761", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75688579e050261973baea316f286b5916b5b761"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b82d967182d29f1302187fa0e3a56661d0c4082a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b82d967182d29f1302187fa0e3a56661d0c4082a", "html_url": "https://github.com/rust-lang/rust/commit/b82d967182d29f1302187fa0e3a56661d0c4082a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b82d967182d29f1302187fa0e3a56661d0c4082a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b2b9a5508186c16a2e782f47ce7e0e1c5fb8d33", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b2b9a5508186c16a2e782f47ce7e0e1c5fb8d33", "html_url": "https://github.com/rust-lang/rust/commit/0b2b9a5508186c16a2e782f47ce7e0e1c5fb8d33"}], "stats": {"total": 47, "additions": 26, "deletions": 21}, "files": [{"sha": "98acd7fa674a6d34b5e79e2e902b86388caa574d", "filename": "xtask/src/codegen.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen.rs?ref=b82d967182d29f1302187fa0e3a56661d0c4082a", "patch": "@@ -15,7 +15,11 @@ use std::{\n     path::{Path, PathBuf},\n };\n \n-use crate::{not_bash::fs2, project_root, Result};\n+use crate::{\n+    ensure_rustfmt,\n+    not_bash::{fs2, pushenv, run},\n+    project_root, Result,\n+};\n \n pub use self::{\n     gen_assists_docs::{generate_assists_docs, generate_assists_tests},\n@@ -62,6 +66,18 @@ fn update(path: &Path, contents: &str, mode: Mode) -> Result<()> {\n     }\n }\n \n+const PREAMBLE: &str = \"Generated file, do not edit by hand, see `xtask/src/codegen`\";\n+\n+fn reformat(text: impl std::fmt::Display) -> Result<String> {\n+    let _e = pushenv(\"RUSTUP_TOOLCHAIN\", \"stable\");\n+    ensure_rustfmt()?;\n+    let stdout = run!(\n+        \"rustfmt --config-path {} --config fn_single_line=true\", project_root().join(\"rustfmt.toml\").display();\n+        <text.to_string().as_bytes()\n+    )?;\n+    Ok(format!(\"//! {}\\n\\n{}\\n\", PREAMBLE, stdout))\n+}\n+\n fn extract_comment_blocks(text: &str) -> Vec<Vec<String>> {\n     do_extract_comment_blocks(text, false).into_iter().map(|(_line, block)| block).collect()\n }"}, {"sha": "4f49685944fba0235f51ccc068317056298bd32c", "filename": "xtask/src/codegen/gen_assists_docs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs?ref=b82d967182d29f1302187fa0e3a56661d0c4082a", "patch": "@@ -3,7 +3,7 @@\n use std::{fmt, fs, path::Path};\n \n use crate::{\n-    codegen::{self, extract_comment_blocks_with_empty_lines, Location, Mode},\n+    codegen::{self, extract_comment_blocks_with_empty_lines, reformat, Location, Mode, PREAMBLE},\n     project_root, rust_files, Result,\n };\n \n@@ -15,7 +15,7 @@ pub fn generate_assists_tests(mode: Mode) -> Result<()> {\n pub fn generate_assists_docs(mode: Mode) -> Result<()> {\n     let assists = Assist::collect()?;\n     let contents = assists.into_iter().map(|it| it.to_string()).collect::<Vec<_>>().join(\"\\n\\n\");\n-    let contents = contents.trim().to_string() + \"\\n\";\n+    let contents = format!(\"//{}\\n{}\\n\", PREAMBLE, contents.trim());\n     let dst = project_root().join(\"docs/user/generated_assists.adoc\");\n     codegen::update(&dst, &contents, mode)\n }\n@@ -134,7 +134,7 @@ r#####\"\n \n         buf.push_str(&test)\n     }\n-    let buf = crate::reformat(buf)?;\n+    let buf = reformat(buf)?;\n     codegen::update(&project_root().join(codegen::ASSISTS_TESTS), &buf, mode)\n }\n "}, {"sha": "3f0013e82ab1556feaaf2d2e7c01df1649f46131", "filename": "xtask/src/codegen/gen_feature_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_feature_docs.rs?ref=b82d967182d29f1302187fa0e3a56661d0c4082a", "patch": "@@ -3,14 +3,14 @@\n use std::{fmt, fs, path::PathBuf};\n \n use crate::{\n-    codegen::{self, extract_comment_blocks_with_empty_lines, Location, Mode},\n+    codegen::{self, extract_comment_blocks_with_empty_lines, Location, Mode, PREAMBLE},\n     project_root, rust_files, Result,\n };\n \n pub fn generate_feature_docs(mode: Mode) -> Result<()> {\n     let features = Feature::collect()?;\n     let contents = features.into_iter().map(|it| it.to_string()).collect::<Vec<_>>().join(\"\\n\\n\");\n-    let contents = contents.trim().to_string() + \"\\n\";\n+    let contents = format!(\"//{}\\n{}\\n\", PREAMBLE, contents.trim());\n     let dst = project_root().join(\"docs/user/generated_features.adoc\");\n     codegen::update(&dst, &contents, mode)?;\n     Ok(())"}, {"sha": "df3ec22c8d4c9170c765dc533a8b5cccda329372", "filename": "xtask/src/codegen/gen_syntax.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs?ref=b82d967182d29f1302187fa0e3a56661d0c4082a", "patch": "@@ -14,7 +14,7 @@ use ungrammar::{rust_grammar, Grammar, Rule};\n \n use crate::{\n     ast_src::{AstEnumSrc, AstNodeSrc, AstSrc, Cardinality, Field, KindsSrc, KINDS_SRC},\n-    codegen::{self, update, Mode},\n+    codegen::{self, reformat, update, Mode},\n     project_root, Result,\n };\n \n@@ -61,7 +61,7 @@ fn generate_tokens(grammar: &AstSrc) -> Result<String> {\n         }\n     });\n \n-    let pretty = crate::reformat(quote! {\n+    let pretty = reformat(quote! {\n         use crate::{SyntaxKind::{self, *}, SyntaxToken, ast::AstToken};\n         #(#tokens)*\n     })?\n@@ -261,7 +261,7 @@ fn generate_nodes(kinds: KindsSrc<'_>, grammar: &AstSrc) -> Result<String> {\n         }\n     }\n \n-    let pretty = crate::reformat(res)?;\n+    let pretty = reformat(res)?;\n     Ok(pretty)\n }\n \n@@ -383,7 +383,7 @@ fn generate_syntax_kinds(grammar: KindsSrc<'_>) -> Result<String> {\n         }\n     };\n \n-    crate::reformat(ast)\n+    reformat(ast)\n }\n \n fn to_upper_snake_case(s: &str) -> String {"}, {"sha": "f3ad81ba725d9327e47af9a297f04c3fc499a801", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82d967182d29f1302187fa0e3a56661d0c4082a/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=b82d967182d29f1302187fa0e3a56661d0c4082a", "patch": "@@ -62,17 +62,6 @@ pub fn run_rustfmt(mode: Mode) -> Result<()> {\n     Ok(())\n }\n \n-fn reformat(text: impl std::fmt::Display) -> Result<String> {\n-    let _e = pushenv(\"RUSTUP_TOOLCHAIN\", \"stable\");\n-    ensure_rustfmt()?;\n-    let stdout = run!(\n-        \"rustfmt --config-path {} --config fn_single_line=true\", project_root().join(\"rustfmt.toml\").display();\n-        <text.to_string().as_bytes()\n-    )?;\n-    let preamble = \"Generated file, do not edit by hand, see `xtask/src/codegen`\";\n-    Ok(format!(\"//! {}\\n\\n{}\\n\", preamble, stdout))\n-}\n-\n fn ensure_rustfmt() -> Result<()> {\n     let out = run!(\"rustfmt --version\")?;\n     if !out.contains(\"stable\") {"}]}