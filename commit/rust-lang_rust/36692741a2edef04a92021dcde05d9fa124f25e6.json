{"sha": "36692741a2edef04a92021dcde05d9fa124f25e6", "node_id": "C_kwDOAAsO6NoAKDM2NjkyNzQxYTJlZGVmMDRhOTIwMjFkY2RlMDVkOWZhMTI0ZjI1ZTY", "commit": {"author": {"name": "Jon Gjengset", "email": "jongje@amazon.com", "date": "2022-02-11T20:03:51Z"}, "committer": {"name": "Jon Gjengset", "email": "jongje@amazon.com", "date": "2022-02-12T00:09:57Z"}, "message": "bootstrap: -static-libstdc++ is a linker flag\n\nFixes #70468. Closes #89983.", "tree": {"sha": "efb528ee33c39d63db342af8ce61c67433111f14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efb528ee33c39d63db342af8ce61c67433111f14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36692741a2edef04a92021dcde05d9fa124f25e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36692741a2edef04a92021dcde05d9fa124f25e6", "html_url": "https://github.com/rust-lang/rust/commit/36692741a2edef04a92021dcde05d9fa124f25e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36692741a2edef04a92021dcde05d9fa124f25e6/comments", "author": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07dae5a97b64100f5abd511f1e2d5a6263a54006", "url": "https://api.github.com/repos/rust-lang/rust/commits/07dae5a97b64100f5abd511f1e2d5a6263a54006", "html_url": "https://github.com/rust-lang/rust/commit/07dae5a97b64100f5abd511f1e2d5a6263a54006"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "f00875239040db8b67d298b0019bcf4939952c11", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/36692741a2edef04a92021dcde05d9fa124f25e6/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36692741a2edef04a92021dcde05d9fa124f25e6/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=36692741a2edef04a92021dcde05d9fa124f25e6", "patch": "@@ -262,30 +262,27 @@ impl Step for Llvm {\n             cfg.define(\"LLVM_LINK_LLVM_DYLIB\", \"ON\");\n         }\n \n-        // For distribution we want the LLVM tools to be *statically* linked to libstdc++\n-        if builder.config.llvm_tools_enabled {\n-            if !target.contains(\"msvc\") {\n+        // For distribution we want the LLVM tools to be *statically* linked to libstdc++.\n+        // We also do this if the user explicitly requested static libstdc++.\n+        if builder.config.llvm_tools_enabled || builder.config.llvm_static_stdcpp {\n+            if !target.contains(\"msvc\") && !target.contains(\"netbsd\") {\n                 if target.contains(\"apple\") {\n-                    ldflags.exe.push(\" -static-libstdc++\");\n+                    ldflags.push_all(\"-static-libstdc++\");\n                 } else {\n-                    ldflags.exe.push(\" -Wl,-Bsymbolic -static-libstdc++\");\n+                    ldflags.push_all(\"-Wl,-Bsymbolic -static-libstdc++\");\n                 }\n             }\n         }\n \n-        if !target.contains(\"freebsd\") && target.starts_with(\"riscv\") {\n+        if target.starts_with(\"riscv\") && !target.contains(\"freebsd\") {\n             // RISC-V GCC erroneously requires linking against\n             // `libatomic` when using 1-byte and 2-byte C++\n             // atomics but the LLVM build system check cannot\n             // detect this. Therefore it is set manually here.\n             // FreeBSD uses Clang as its system compiler and\n             // provides no libatomic in its base system so does\n             // not want this.\n-            if !builder.config.llvm_tools_enabled {\n-                ldflags.exe.push(\" -latomic\");\n-            } else {\n-                ldflags.exe.push(\" -latomic -static-libstdc++\");\n-            }\n+            ldflags.exe.push(\" -latomic\");\n             ldflags.shared.push(\" -latomic\");\n         }\n \n@@ -554,9 +551,6 @@ fn configure_cmake(\n     }\n     cfg.define(\"CMAKE_C_FLAGS\", cflags);\n     let mut cxxflags: OsString = builder.cflags(target, GitRepo::Llvm).join(\" \").into();\n-    if builder.config.llvm_static_stdcpp && !target.contains(\"msvc\") && !target.contains(\"netbsd\") {\n-        cxxflags.push(\" -static-libstdc++\");\n-    }\n     if let Some(ref s) = builder.config.llvm_cxxflags {\n         cxxflags.push(\" \");\n         cxxflags.push(s);"}]}