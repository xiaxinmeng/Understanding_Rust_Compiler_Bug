{"sha": "27ed143ba9bb96e907f56c9f294c904a2cb26123", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZWQxNDNiYTliYjk2ZTkwN2Y1NmM5ZjI5NGM5MDRhMmNiMjYxMjM=", "commit": {"author": {"name": "Chris Simpkins", "email": "git.simpkins@gmail.com", "date": "2020-05-29T20:03:46Z"}, "committer": {"name": "Chris Simpkins", "email": "git.simpkins@gmail.com", "date": "2020-05-29T20:03:46Z"}, "message": "fix diagnostics for `@ ..` binding pattern in tuples and tuple structs\n\n\nfix comment\n\n\nadd newline for tidy fmt error...\n\n\nedit suggestion message\n\n\nchange the suggestion message to better handle cases with binding modes\n\n\nApply suggestions from estebank code review\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>\nedits to address source review\n\n\nApply suggestions from estebank code review #2\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>\nupdate test files", "tree": {"sha": "327245c07af5148d64002d77e934959b95215a4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/327245c07af5148d64002d77e934959b95215a4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27ed143ba9bb96e907f56c9f294c904a2cb26123", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/wEuS8EQZ2kAreNcDQIYpxyd6wkFAl7RaqIACgkQDQIYpxyd\n6wnPqxAAhVAv10lTTaeUkaU3mn2aVm2AsiHlQWjjAZ7J2D39Ijy1Ca7nDyDRVVcb\nZfX4TnPlw9CRDLgjyomF8kUU2kmqumBWljE2hb54T9JKojbJjJQFf6N31p8LN3JJ\n8CXO/We1yPVpvVmDrHuXDUT7eNDJe8lGoj6cyqZvfKSiJEdvd7seinKYR+tmwiGC\nlKsUNMC5yTu6C38hZWwtMK9u5FcszW7nbjR0qEVAIzzrBQhRuAwBZmtSTaRzLcOy\n8O+sWKyfc6MGl9+F8MFJbmX4RwU4avGvyOAGkzlw7mkz3PUac8R5Dim46SiguXit\nWqODGQd82jaHx0kOw7oFnYBUQZYPd4e5+0znByRpFTk54Yfzt7DhoXBX3bxVjVpb\nx2CCBwpJ2VQB4zLS1jUU5U1Xeq/L7GX1Q0sI/2fQFuwDnmEGxHawxVKS/DYZQV6S\ni1qK/PJ3eIoDCJbbKWZabx2KT6n+4cYuPF9qpaub42Jzt2kQIBzmIKV24+eLzTOF\n7PwPFZ351n/alg1dX3XmnZ6i1MqE08ziHIrA6gEP5XZpSe0ByOIceuWfVW9MEKAp\neEHYArQFmzqimJcRTFPKnsbc4ZyQM9uu7TpqNZWzDVeM24Q1lEYQtOdHqQ0pmJoc\nBBLp/y5zEzZ6jX/+A+zRPG+/c6W/wgCv8JhRhwaDz3W5V5WVhW0=\n=9udi\n-----END PGP SIGNATURE-----", "payload": "tree 327245c07af5148d64002d77e934959b95215a4c\nparent 2873165725c15e96dae521a412065c144d9c7a25\nauthor Chris Simpkins <git.simpkins@gmail.com> 1590782626 -0400\ncommitter Chris Simpkins <git.simpkins@gmail.com> 1590782626 -0400\n\nfix diagnostics for `@ ..` binding pattern in tuples and tuple structs\n\n\nfix comment\n\n\nadd newline for tidy fmt error...\n\n\nedit suggestion message\n\n\nchange the suggestion message to better handle cases with binding modes\n\n\nApply suggestions from estebank code review\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>\nedits to address source review\n\n\nApply suggestions from estebank code review #2\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>\nupdate test files\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27ed143ba9bb96e907f56c9f294c904a2cb26123", "html_url": "https://github.com/rust-lang/rust/commit/27ed143ba9bb96e907f56c9f294c904a2cb26123", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27ed143ba9bb96e907f56c9f294c904a2cb26123/comments", "author": {"login": "chrissimpkins", "id": 4249591, "node_id": "MDQ6VXNlcjQyNDk1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4249591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrissimpkins", "html_url": "https://github.com/chrissimpkins", "followers_url": "https://api.github.com/users/chrissimpkins/followers", "following_url": "https://api.github.com/users/chrissimpkins/following{/other_user}", "gists_url": "https://api.github.com/users/chrissimpkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrissimpkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrissimpkins/subscriptions", "organizations_url": "https://api.github.com/users/chrissimpkins/orgs", "repos_url": "https://api.github.com/users/chrissimpkins/repos", "events_url": "https://api.github.com/users/chrissimpkins/events{/privacy}", "received_events_url": "https://api.github.com/users/chrissimpkins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrissimpkins", "id": 4249591, "node_id": "MDQ6VXNlcjQyNDk1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4249591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrissimpkins", "html_url": "https://github.com/chrissimpkins", "followers_url": "https://api.github.com/users/chrissimpkins/followers", "following_url": "https://api.github.com/users/chrissimpkins/following{/other_user}", "gists_url": "https://api.github.com/users/chrissimpkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrissimpkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrissimpkins/subscriptions", "organizations_url": "https://api.github.com/users/chrissimpkins/orgs", "repos_url": "https://api.github.com/users/chrissimpkins/repos", "events_url": "https://api.github.com/users/chrissimpkins/events{/privacy}", "received_events_url": "https://api.github.com/users/chrissimpkins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2873165725c15e96dae521a412065c144d9c7a25", "url": "https://api.github.com/repos/rust-lang/rust/commits/2873165725c15e96dae521a412065c144d9c7a25", "html_url": "https://github.com/rust-lang/rust/commit/2873165725c15e96dae521a412065c144d9c7a25"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "55c1f8026633702acdff8688200a5d4793cf0c7d", "filename": "src/librustc_ast_lowering/pat.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Flibrustc_ast_lowering%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Flibrustc_ast_lowering%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpat.rs?ref=27ed143ba9bb96e907f56c9f294c904a2cb26123", "patch": "@@ -3,6 +3,7 @@ use super::{ImplTraitContext, LoweringContext, ParamMode};\n use rustc_ast::ast::*;\n use rustc_ast::ptr::P;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n+use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_span::symbol::Ident;\n@@ -102,10 +103,36 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             // Note that unlike for slice patterns,\n             // where `xs @ ..` is a legal sub-slice pattern,\n             // it is not a legal sub-tuple pattern.\n-            if pat.is_rest() {\n-                rest = Some((idx, pat.span));\n-                break;\n+            match pat.kind {\n+                // Found a sub-tuple rest pattern\n+                PatKind::Rest => {\n+                    rest = Some((idx, pat.span));\n+                    break;\n+                }\n+                // Found a sub-tuple pattern `$binding_mode $ident @ ..`.\n+                // This is not allowed as a sub-tuple pattern\n+                PatKind::Ident(ref _bm, ident, Some(ref sub)) if sub.is_rest() => {\n+                    rest = Some((idx, pat.span));\n+                    let sp = pat.span;\n+                    self.diagnostic()\n+                        .struct_span_err(\n+                            sp,\n+                            &format!(\"`{} @` is not allowed in a {}\", ident.name, ctx),\n+                        )\n+                        .span_label(sp, \"this is only allowed in slice patterns\")\n+                        .help(\"remove this and bind each tuple field independently\")\n+                        .span_suggestion_verbose(\n+                            sp,\n+                            &format!(\"if you don't need to use the contents of {}, discard the tuple's remaining fields\", ident),\n+                            \"..\".to_string(),\n+                            Applicability::MaybeIncorrect,\n+                        )\n+                        .emit();\n+                    break;\n+                }\n+                _ => {}\n             }\n+\n             // It was not a sub-tuple pattern so lower it normally.\n             elems.push(self.lower_pat(pat));\n         }"}, {"sha": "efbb0bfb1508f4c8c8355490bb28fe43e1fb7ed1", "filename": "src/test/ui/issues/issue-72574-1.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.rs?ref=27ed143ba9bb96e907f56c9f294c904a2cb26123", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let x = (1, 2, 3);\n+    match x {\n+        (_a, _x @ ..) => {}\n+        _ => {}\n+    }\n+}\n+//~^^^^ ERROR `_x @` is not allowed in a tuple"}, {"sha": "329f7d008d498e57a5e366f28fa6fb825f9b0c05", "filename": "src/test/ui/issues/issue-72574-1.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-1.stderr?ref=27ed143ba9bb96e907f56c9f294c904a2cb26123", "patch": "@@ -0,0 +1,14 @@\n+error: `_x @` is not allowed in a tuple\n+  --> $DIR/issue-72574-1.rs:4:14\n+   |\n+LL |         (_a, _x @ ..) => {}\n+   |              ^^^^^^^ this is only allowed in slice patterns\n+   |\n+   = help: remove this and bind each tuple field independently\n+help: if you don't need to use the contents of _x, discard the tuple's remaining fields\n+   |\n+LL |         (_a, ..) => {}\n+   |              ^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "0c8f6fcc5088909d3abaac72068f942d23597ef9", "filename": "src/test/ui/issues/issue-72574-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.rs?ref=27ed143ba9bb96e907f56c9f294c904a2cb26123", "patch": "@@ -0,0 +1,10 @@\n+struct Binder(i32, i32, i32);\n+\n+fn main() {\n+    let x = Binder(1, 2, 3);\n+    match x {\n+        Binder(_a, _x @ ..) => {}\n+        _ => {}\n+    }\n+}\n+//~^^^^ ERROR `_x @` is not allowed in a tuple struct"}, {"sha": "6faa57bcca6b191b526b40196833b669c44d4930", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27ed143ba9bb96e907f56c9f294c904a2cb26123/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=27ed143ba9bb96e907f56c9f294c904a2cb26123", "patch": "@@ -0,0 +1,14 @@\n+error: `_x @` is not allowed in a tuple struct\n+  --> $DIR/issue-72574-2.rs:6:20\n+   |\n+LL |         Binder(_a, _x @ ..) => {}\n+   |                    ^^^^^^^ this is only allowed in slice patterns\n+   |\n+   = help: remove this and bind each tuple field independently\n+help: if you don't need to use the contents of _x, discard the tuple's remaining fields\n+   |\n+LL |         Binder(_a, ..) => {}\n+   |                    ^^\n+\n+error: aborting due to previous error\n+"}]}