{"sha": "ae09d95160919f8801caa22e2867e9680e6cb05b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMDlkOTUxNjA5MTlmODgwMWNhYTIyZTI4NjdlOTY4MGU2Y2IwNWI=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-30T00:48:40Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-30T00:48:40Z"}, "message": "extra: Add .rev_iter() for bitv", "tree": {"sha": "9ec2977dad51b97ebfe63890e3539f00b250b8be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ec2977dad51b97ebfe63890e3539f00b250b8be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae09d95160919f8801caa22e2867e9680e6cb05b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae09d95160919f8801caa22e2867e9680e6cb05b", "html_url": "https://github.com/rust-lang/rust/commit/ae09d95160919f8801caa22e2867e9680e6cb05b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae09d95160919f8801caa22e2867e9680e6cb05b/comments", "author": null, "committer": null, "parents": [{"sha": "5307d3674e2df2baef0e37125a98227590fc43d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5307d3674e2df2baef0e37125a98227590fc43d2", "html_url": "https://github.com/rust-lang/rust/commit/5307d3674e2df2baef0e37125a98227590fc43d2"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "90824a653faad2d82315554d7d3c48f8a94491e9", "filename": "src/libextra/bitv.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ae09d95160919f8801caa22e2867e9680e6cb05b/src%2Flibextra%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae09d95160919f8801caa22e2867e9680e6cb05b/src%2Flibextra%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbitv.rs?ref=ae09d95160919f8801caa22e2867e9680e6cb05b", "patch": "@@ -409,6 +409,11 @@ impl Bitv {\n         BitvIterator {bitv: self, next_idx: 0, end_idx: self.nbits}\n     }\n \n+    #[inline]\n+    pub fn rev_liter<'a>(&'a self) -> Invert<BitvIterator<'a>> {\n+        self.iter().invert()\n+    }\n+\n     /// Returns true if all bits are 0\n     pub fn is_false(&self) -> bool {\n       match self.rep {"}]}