{"sha": "bab29e65eb87f4765fb22d58bff723780980eeb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYjI5ZTY1ZWI4N2Y0NzY1ZmIyMmQ1OGJmZjcyMzc4MDk4MGVlYjY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-14T20:21:58Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-14T20:50:26Z"}, "message": "Default::default the highlighters", "tree": {"sha": "de74eb9ddc59fd542c6aa5c14e778e1f3560cccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de74eb9ddc59fd542c6aa5c14e778e1f3560cccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bab29e65eb87f4765fb22d58bff723780980eeb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bab29e65eb87f4765fb22d58bff723780980eeb6", "html_url": "https://github.com/rust-lang/rust/commit/bab29e65eb87f4765fb22d58bff723780980eeb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bab29e65eb87f4765fb22d58bff723780980eeb6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6dc5f28a5550acffbbb063335833304dac266d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6dc5f28a5550acffbbb063335833304dac266d", "html_url": "https://github.com/rust-lang/rust/commit/8c6dc5f28a5550acffbbb063335833304dac266d"}], "stats": {"total": 25, "additions": 7, "deletions": 18}, "files": [{"sha": "527888306be884423ba3307bcc54d491e84aee04", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bab29e65eb87f4765fb22d58bff723780980eeb6/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab29e65eb87f4765fb22d58bff723780980eeb6/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=bab29e65eb87f4765fb22d58bff723780980eeb6", "patch": "@@ -74,7 +74,7 @@ pub(crate) fn highlight(\n \n     let mut current_macro_call: Option<ast::MacroCall> = None;\n     let mut format_string_highlighter = FormatStringHighlighter::default();\n-    let mut macro_rules_highlighter = MacroRulesHighlighter::new();\n+    let mut macro_rules_highlighter = MacroRulesHighlighter::default();\n \n     // Walk all nodes, keeping track of whether we are inside a macro or not.\n     // If in macro, expand it first and highlight the expanded code.\n@@ -125,8 +125,8 @@ pub(crate) fn highlight(\n             WalkEvent::Leave(Some(mc)) => {\n                 assert!(current_macro_call == Some(mc));\n                 current_macro_call = None;\n-                format_string_highlighter.reset();\n-                macro_rules_highlighter.reset();\n+                format_string_highlighter = FormatStringHighlighter::default();\n+                macro_rules_highlighter = MacroRulesHighlighter::default();\n             }\n             _ => (),\n         }"}, {"sha": "71bde24f08929c04f4603acf6c920e0cb5167946", "filename": "crates/ide/src/syntax_highlighting/format.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bab29e65eb87f4765fb22d58bff723780980eeb6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab29e65eb87f4765fb22d58bff723780980eeb6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fformat.rs?ref=bab29e65eb87f4765fb22d58bff723780980eeb6", "patch": "@@ -12,10 +12,6 @@ pub(super) struct FormatStringHighlighter {\n }\n \n impl FormatStringHighlighter {\n-    pub(super) fn reset(&mut self) {\n-        self.format_string = None;\n-    }\n-\n     pub(super) fn check_for_format_string(&mut self, parent: &SyntaxNode) {\n         // Check if macro takes a format string and remember it for highlighting later.\n         // The macros that accept a format string expand to a compiler builtin macros"}, {"sha": "4462af47ed7df3f172401b65495f58be2fc3ebe4", "filename": "crates/ide/src/syntax_highlighting/macro_rules.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bab29e65eb87f4765fb22d58bff723780980eeb6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab29e65eb87f4765fb22d58bff723780980eeb6/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fmacro_rules.rs?ref=bab29e65eb87f4765fb22d58bff723780980eeb6", "patch": "@@ -3,21 +3,14 @@ use syntax::{SyntaxElement, SyntaxKind, SyntaxToken, TextRange, T};\n \n use crate::{HighlightTag, HighlightedRange};\n \n+#[derive(Default)]\n pub(super) struct MacroRulesHighlighter {\n     state: Option<MacroMatcherParseState>,\n }\n \n impl MacroRulesHighlighter {\n-    pub(super) fn new() -> Self {\n-        MacroRulesHighlighter { state: None }\n-    }\n-\n     pub(super) fn init(&mut self) {\n-        self.state = Some(MacroMatcherParseState::new());\n-    }\n-\n-    pub(super) fn reset(&mut self) {\n-        self.state = None;\n+        self.state = Some(MacroMatcherParseState::default());\n     }\n \n     pub(super) fn advance(&mut self, token: &SyntaxToken) {\n@@ -51,8 +44,8 @@ struct MacroMatcherParseState {\n     in_invoc_body: bool,\n }\n \n-impl MacroMatcherParseState {\n-    fn new() -> Self {\n+impl Default for MacroMatcherParseState {\n+    fn default() -> Self {\n         MacroMatcherParseState {\n             paren_ty: None,\n             paren_level: 0,"}]}