{"sha": "19fbd919986e99287168f40aa11003a11aa43d3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZmJkOTE5OTg2ZTk5Mjg3MTY4ZjQwYWExMTAwM2ExMWFhNDNkM2E=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-04T16:41:48Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-04T16:41:48Z"}, "message": "Simplify subst / subst_bound_vars a bit", "tree": {"sha": "4e7f3e102fe9a956f715d7083c8db939131b3a51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e7f3e102fe9a956f715d7083c8db939131b3a51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19fbd919986e99287168f40aa11003a11aa43d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19fbd919986e99287168f40aa11003a11aa43d3a", "html_url": "https://github.com/rust-lang/rust/commit/19fbd919986e99287168f40aa11003a11aa43d3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19fbd919986e99287168f40aa11003a11aa43d3a/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f43e69a64eea0caf8b9f5ced31e7f77dc0d33d65", "url": "https://api.github.com/repos/rust-lang/rust/commits/f43e69a64eea0caf8b9f5ced31e7f77dc0d33d65", "html_url": "https://github.com/rust-lang/rust/commit/f43e69a64eea0caf8b9f5ced31e7f77dc0d33d65"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "f2b37b20829f272fea4b5014059c94ecd08283da", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/19fbd919986e99287168f40aa11003a11aa43d3a/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19fbd919986e99287168f40aa11003a11aa43d3a/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=19fbd919986e99287168f40aa11003a11aa43d3a", "patch": "@@ -411,11 +411,7 @@ impl Ty {\n     pub fn subst(self, substs: &Substs) -> Ty {\n         self.fold(&mut |ty| match ty {\n             Ty::Param { idx, name } => {\n-                if (idx as usize) < substs.len() {\n-                    substs[idx as usize].clone()\n-                } else {\n-                    Ty::Param { idx, name }\n-                }\n+                substs.get(idx as usize).cloned().unwrap_or(Ty::Param { idx, name })\n             }\n             ty => ty,\n         })\n@@ -424,13 +420,7 @@ impl Ty {\n     /// Substitutes `Ty::Bound` vars (as opposed to type parameters).\n     pub fn subst_bound_vars(self, substs: &Substs) -> Ty {\n         self.fold(&mut |ty| match ty {\n-            Ty::Bound(idx) => {\n-                if (idx as usize) < substs.len() {\n-                    substs[idx as usize].clone()\n-                } else {\n-                    Ty::Bound(idx)\n-                }\n-            }\n+            Ty::Bound(idx) => substs.get(idx as usize).cloned().unwrap_or(Ty::Bound(idx)),\n             ty => ty,\n         })\n     }"}]}