{"sha": "8cac16b62e73a9be5c3350a2bddadd8902454797", "node_id": "C_kwDOAAsO6NoAKDhjYWMxNmI2MmU3M2E5YmU1YzMzNTBhMmJkZGFkZDg5MDI0NTQ3OTc", "commit": {"author": {"name": "soruh", "email": "mail@soruh.de", "date": "2022-06-15T00:59:32Z"}, "committer": {"name": "soruh", "email": "mail@soruh.de", "date": "2022-06-15T00:59:32Z"}, "message": "cleanup", "tree": {"sha": "9a3ba4e9fd434cbeaf4b94910407243e039a4776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a3ba4e9fd434cbeaf4b94910407243e039a4776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cac16b62e73a9be5c3350a2bddadd8902454797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cac16b62e73a9be5c3350a2bddadd8902454797", "html_url": "https://github.com/rust-lang/rust/commit/8cac16b62e73a9be5c3350a2bddadd8902454797", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cac16b62e73a9be5c3350a2bddadd8902454797/comments", "author": {"login": "soruh", "id": 33131839, "node_id": "MDQ6VXNlcjMzMTMxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/33131839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soruh", "html_url": "https://github.com/soruh", "followers_url": "https://api.github.com/users/soruh/followers", "following_url": "https://api.github.com/users/soruh/following{/other_user}", "gists_url": "https://api.github.com/users/soruh/gists{/gist_id}", "starred_url": "https://api.github.com/users/soruh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soruh/subscriptions", "organizations_url": "https://api.github.com/users/soruh/orgs", "repos_url": "https://api.github.com/users/soruh/repos", "events_url": "https://api.github.com/users/soruh/events{/privacy}", "received_events_url": "https://api.github.com/users/soruh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "soruh", "id": 33131839, "node_id": "MDQ6VXNlcjMzMTMxODM5", "avatar_url": "https://avatars.githubusercontent.com/u/33131839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soruh", "html_url": "https://github.com/soruh", "followers_url": "https://api.github.com/users/soruh/followers", "following_url": "https://api.github.com/users/soruh/following{/other_user}", "gists_url": "https://api.github.com/users/soruh/gists{/gist_id}", "starred_url": "https://api.github.com/users/soruh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soruh/subscriptions", "organizations_url": "https://api.github.com/users/soruh/orgs", "repos_url": "https://api.github.com/users/soruh/repos", "events_url": "https://api.github.com/users/soruh/events{/privacy}", "received_events_url": "https://api.github.com/users/soruh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e3bbaa57b12904b88ff17ffca3bc3e44ebf772c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e3bbaa57b12904b88ff17ffca3bc3e44ebf772c", "html_url": "https://github.com/rust-lang/rust/commit/8e3bbaa57b12904b88ff17ffca3bc3e44ebf772c"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "31e36a51e8d8b057baf77953d26efaec18bf5e86", "filename": "crates/ide-assists/src/handlers/generate_new.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8cac16b62e73a9be5c3350a2bddadd8902454797/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cac16b62e73a9be5c3350a2bddadd8902454797/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs?ref=8cac16b62e73a9be5c3350a2bddadd8902454797", "patch": "@@ -29,12 +29,7 @@ pub fn use_trivial_constructor(\n                         )),\n                     );\n \n-                    use hir::StructKind::*;\n-                    let is_record = match variant.kind(db) {\n-                        Record => true,\n-                        Tuple => false,\n-                        Unit => false,\n-                    };\n+                    let is_record = variant.kind(db) == hir::StructKind::Record;\n \n                     return Some(if is_record {\n                         ast::Expr::RecordExpr(syntax::ast::make::record_expr(\n@@ -48,9 +43,7 @@ pub fn use_trivial_constructor(\n             }\n         }\n         Some(hir::Adt::Struct(x)) => {\n-            let fields = x.fields(db);\n-\n-            if fields.is_empty() {\n+            if x.fields(db).is_empty() {\n                 return Some(syntax::ast::make::expr_path(path));\n             }\n         }"}, {"sha": "5739a8785382ed4c126986c654131b07c031dbce", "filename": "crates/ide-diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8cac16b62e73a9be5c3350a2bddadd8902454797/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cac16b62e73a9be5c3350a2bddadd8902454797/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=8cac16b62e73a9be5c3350a2bddadd8902454797", "patch": "@@ -38,12 +38,7 @@ pub fn use_trivial_constructor(\n                         )),\n                     );\n \n-                    use hir::StructKind::*;\n-                    let is_record = match variant.kind(db) {\n-                        Record => true,\n-                        Tuple => false,\n-                        Unit => false,\n-                    };\n+                    let is_record = variant.kind(db) == hir::StructKind::Record;\n \n                     return Some(if is_record {\n                         ast::Expr::RecordExpr(syntax::ast::make::record_expr(\n@@ -57,9 +52,7 @@ pub fn use_trivial_constructor(\n             }\n         }\n         Some(hir::Adt::Struct(x)) => {\n-            let fields = x.fields(db);\n-\n-            if fields.is_empty() {\n+            if x.fields(db).is_empty() {\n                 return Some(syntax::ast::make::expr_path(path));\n             }\n         }"}]}