{"sha": "463e2416e98238e294d332397048b106d85fd474", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2M2UyNDE2ZTk4MjM4ZTI5NGQzMzIzOTcwNDhiMTA2ZDg1ZmQ0NzQ=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-08-04T20:09:04Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2013-08-06T16:58:36Z"}, "message": "Some minor hex changes", "tree": {"sha": "141436fb8ec892cf753ec7611308d439d06b84bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/141436fb8ec892cf753ec7611308d439d06b84bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/463e2416e98238e294d332397048b106d85fd474", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/463e2416e98238e294d332397048b106d85fd474", "html_url": "https://github.com/rust-lang/rust/commit/463e2416e98238e294d332397048b106d85fd474", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/463e2416e98238e294d332397048b106d85fd474/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2266df51aa07eabd2f7745d410d3ddc4572ade21", "url": "https://api.github.com/repos/rust-lang/rust/commits/2266df51aa07eabd2f7745d410d3ddc4572ade21", "html_url": "https://github.com/rust-lang/rust/commit/2266df51aa07eabd2f7745d410d3ddc4572ade21"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "5609c566d927315cf598da9d64c21aa2b9c19dd3", "filename": "src/libextra/hex.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/463e2416e98238e294d332397048b106d85fd474/src%2Flibextra%2Fhex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/463e2416e98238e294d332397048b106d85fd474/src%2Flibextra%2Fhex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fhex.rs?ref=463e2416e98238e294d332397048b106d85fd474", "patch": "@@ -57,7 +57,7 @@ impl<'self> ToHex for &'self str {\n      * # Example\n      *\n      * ~~~ {.rust}\n-         * extern mod extra;\n+     * extern mod extra;\n      * use extra::ToHex;\n      *\n      * fn main () {\n@@ -74,15 +74,16 @@ impl<'self> ToHex for &'self str {\n \n /// A trait for converting hexadecimal encoded values\n pub trait FromHex {\n-    /// Converts the value of `self`, interpreted as base64 encoded data, into\n-    /// an owned vector of bytes, returning the vector.\n+    /// Converts the value of `self`, interpreted as hexadecimal encoded data,\n+    /// into an owned vector of bytes, returning the vector.\n     fn from_hex(&self) -> Result<~[u8], ~str>;\n }\n \n impl<'self> FromHex for &'self [u8] {\n     /**\n      * Convert hexadecimal `u8` vector into u8 byte values.\n      * Every 2 encoded characters is converted into 1 octet.\n+     * Whitespace is ignored.\n      *\n      * # Example\n      *\n@@ -104,18 +105,19 @@ impl<'self> FromHex for &'self [u8] {\n         let mut modulus = 0;\n         let mut buf = 0u8;\n \n-        for &byte in self.iter() {\n+        for (idx, &byte) in self.iter().enumerate() {\n             buf <<= 4;\n \n             match byte as char {\n                 'A'..'F' => buf |= byte - ('A' as u8) + 10,\n                 'a'..'f' => buf |= byte - ('a' as u8) + 10,\n                 '0'..'9' => buf |= byte - ('0' as u8),\n-                ' '|'\\r'|'\\n' => {\n+                ' '|'\\r'|'\\n'|'\\t' => {\n                     buf >>= 4;\n                     loop\n                 }\n-                _ => return Err(~\"Invalid hex char\")\n+                _ => return Err(fmt!(\"Invalid byte '%c' found at position %u\",\n+                                     byte as char, idx))\n             }\n \n             modulus += 1;"}]}