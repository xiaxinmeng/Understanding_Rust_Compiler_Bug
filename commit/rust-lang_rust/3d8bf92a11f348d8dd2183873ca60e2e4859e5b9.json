{"sha": "3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkOGJmOTJhMTFmMzQ4ZDhkZDIxODM4NzNjYTYwZTJlNDg1OWU1Yjk=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-01-26T18:50:26Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-01-29T03:10:33Z"}, "message": "Rename `Alloc` to `AllocRef`\n\nRequired to land https://github.com/rust-lang/rust/pull/68529. Please see that PR for details. The CI is expected to fail until the PR is landed.", "tree": {"sha": "de7fa3fb09644b88392aee20f7054d3d01afcaf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de7fa3fb09644b88392aee20f7054d3d01afcaf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEaCReL1/sdAkHzLEW05N2C/gUW0IFAl4w96kACgkQ05N2C/gU\nW0IrkQf6A7lmxjthxm4rIsq+oiXz3NQfpuRv8zTcoCRj38NRznoI9OLtM3A3F624\nKe+342v2xqKhHzytfmQzkh4d/3+/OjRcZ4te47QFTzwmA2vvEJZNanFYxdzvRFy+\nSAometCN5toU8plIM0islLlOORlHxAu2w/SaGVt+6kXksQP30bY7w1mUlGovCnbD\n/W7LsUUZ3+Zyyih74yR1xfCJEKJ6c0tu6NVlQEaAMPUDQyBJQaBvDrlqqhOslHR6\nR9nhV6sPjw7tZXUyp/Pj3uTNu/1qCXqKapJ3d2I3EZ+gmB6RwyxqDKbieU5J6DbR\nWSOXHOHRqsWLjJp3I+LiqfswV8dGsA==\n=pj5I\n-----END PGP SIGNATURE-----", "payload": "tree de7fa3fb09644b88392aee20f7054d3d01afcaf9\nparent 83403581bb7a2156f4752fc2d0ceef4b3ec75554\nauthor Tim Diekmann <tim.diekmann@3dvision.de> 1580064626 +0100\ncommitter Tim Diekmann <tim.diekmann@3dvision.de> 1580267433 +0100\n\nRename `Alloc` to `AllocRef`\n\nRequired to land https://github.com/rust-lang/rust/pull/68529. Please see that PR for details. The CI is expected to fail until the PR is landed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "html_url": "https://github.com/rust-lang/rust/commit/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83403581bb7a2156f4752fc2d0ceef4b3ec75554", "url": "https://api.github.com/repos/rust-lang/rust/commits/83403581bb7a2156f4752fc2d0ceef4b3ec75554", "html_url": "https://github.com/rust-lang/rust/commit/83403581bb7a2156f4752fc2d0ceef4b3ec75554"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "2ac35a450cf196f07cd7fb29c32e667798fcdf65", "filename": "tests/compile-fail/deallocate-bad-alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs?ref=3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "patch": "@@ -3,7 +3,7 @@\n extern crate alloc;\n \n use alloc::alloc::Global;\n-use std::alloc::*;\n+use std::alloc::{AllocRef, Layout};\n \n // error-pattern: incorrect alloc info: expected size 1 and align 2, got size 1 and align 1\n "}, {"sha": "c5b48f5ddf59005748010daa12a7573a2bde3878", "filename": "tests/compile-fail/deallocate-bad-size.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs?ref=3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "patch": "@@ -3,7 +3,7 @@\n extern crate alloc;\n \n use alloc::alloc::Global;\n-use std::alloc::*;\n+use std::alloc::{AllocRef, Layout};\n \n // error-pattern: incorrect alloc info: expected size 2 and align 1, got size 1 and align 1\n "}, {"sha": "02c442f0ab85f068769e3081e98bbb5302ff7dd9", "filename": "tests/compile-fail/deallocate-twice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Fdeallocate-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Fdeallocate-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-twice.rs?ref=3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "patch": "@@ -3,7 +3,7 @@\n extern crate alloc;\n \n use alloc::alloc::Global;\n-use std::alloc::*;\n+use std::alloc::{AllocRef, Layout};\n \n // error-pattern: tried to deallocate dangling pointer\n "}, {"sha": "905e8e061721274758c5e2077905c05366a00eab", "filename": "tests/compile-fail/reallocate-bad-size.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Freallocate-bad-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Freallocate-bad-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-bad-size.rs?ref=3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "patch": "@@ -3,7 +3,7 @@\n extern crate alloc;\n \n use alloc::alloc::Global;\n-use std::alloc::*;\n+use std::alloc::{AllocRef, Layout};\n \n // error-pattern: incorrect alloc info: expected size 2 and align 1, got size 1 and align 1\n "}, {"sha": "21468739b31c0b364d8e781601a26f1ba75260c1", "filename": "tests/compile-fail/reallocate-change-alloc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Freallocate-change-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Freallocate-change-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-change-alloc.rs?ref=3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "patch": "@@ -3,7 +3,7 @@\n extern crate alloc;\n \n use alloc::alloc::Global;\n-use std::alloc::*;\n+use std::alloc::{AllocRef, Layout};\n \n fn main() {\n     unsafe {"}, {"sha": "ee73cfce8634be4dc68d5a728f42b254a3b66ba8", "filename": "tests/compile-fail/reallocate-dangling.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Freallocate-dangling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Fcompile-fail%2Freallocate-dangling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-dangling.rs?ref=3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "patch": "@@ -3,7 +3,7 @@\n extern crate alloc;\n \n use alloc::alloc::Global;\n-use std::alloc::*;\n+use std::alloc::{AllocRef, Layout};\n \n // error-pattern: dangling pointer was dereferenced\n "}, {"sha": "907fbf962df02ebdf687586edb966d8a71b8abd6", "filename": "tests/run-pass/heap_allocator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Frun-pass%2Fheap_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8bf92a11f348d8dd2183873ca60e2e4859e5b9/tests%2Frun-pass%2Fheap_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fheap_allocator.rs?ref=3d8bf92a11f348d8dd2183873ca60e2e4859e5b9", "patch": "@@ -1,10 +1,10 @@\n #![feature(allocator_api)]\n \n use std::ptr::NonNull;\n-use std::alloc::{Global, Alloc, Layout, System};\n+use std::alloc::{Global, AllocRef, Layout, System};\n use std::slice;\n \n-fn check_alloc<T: Alloc>(mut allocator: T) { unsafe {\n+fn check_alloc<T: AllocRef>(mut allocator: T) { unsafe {\n     for &align in &[4, 8, 16, 32] {\n         let layout = Layout::from_size_align(20, align).unwrap();\n \n@@ -40,7 +40,7 @@ fn check_alloc<T: Alloc>(mut allocator: T) { unsafe {\n     }\n } }\n \n-fn check_align_requests<T: Alloc>(mut allocator: T) {\n+fn check_align_requests<T: AllocRef>(mut allocator: T) {\n     for &size in &[2, 8, 64] { // size less than and bigger than alignment\n         for &align in &[4, 8, 16, 32] { // Be sure to cover less than and bigger than `MIN_ALIGN` for all architectures\n             let iterations = 32;"}]}