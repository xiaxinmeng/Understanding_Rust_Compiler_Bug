{"sha": "5faba281ad08e6d57dc015f9547e18256eb8247f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYWJhMjgxYWQwOGU2ZDU3ZGMwMTVmOTU0N2UxODI1NmViODI0N2Y=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-01-24T12:13:39Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-01-24T12:13:39Z"}, "message": "Fix ICE when use trees have multiple empty nested groups", "tree": {"sha": "b422740332a641dc0e7f0e890b3b008c4e165709", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b422740332a641dc0e7f0e890b3b008c4e165709"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5faba281ad08e6d57dc015f9547e18256eb8247f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJaaHimAAoJEOjBBC3RYkUZfSsH/17ECDNWcb8IYhuee8PLURSV\nbohKqA4aRZKgBv6HCIDmut+qewribfFnBWSDGWFx9eIkeZidohIRva0BLlM+kLeI\nn3bwLSwm4r9SBbQlIS7V4eXZwNeOVFKHhX4uFH8PhqpYYFekf5hIrwUUoC5Spu4g\nDe8nVcxZhEOUGk99pFI8xWe+fLKT5hKMeNlmDt7TUwX+hDriw89Gofcr7Tb2V7px\n1xQNKqhczoNSSXRcvBKyfsyoFTAwft4hE1VDyKBu7/84csNFYxuDhi+Mxw7YR+xH\n73ramyFOGCk8hcw8Fkgb5QD7iUYrugLm1R/9iZZH0pVfVicX9u5tpxeVpkirUd4=\n=iFEt\n-----END PGP SIGNATURE-----", "payload": "tree b422740332a641dc0e7f0e890b3b008c4e165709\nparent 3a39b2aa5a68dd07aacab2106db3927f666a485a\nauthor Pietro Albini <pietro@pietroalbini.org> 1516796019 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1516796019 +0100\n\nFix ICE when use trees have multiple empty nested groups\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5faba281ad08e6d57dc015f9547e18256eb8247f", "html_url": "https://github.com/rust-lang/rust/commit/5faba281ad08e6d57dc015f9547e18256eb8247f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5faba281ad08e6d57dc015f9547e18256eb8247f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a39b2aa5a68dd07aacab2106db3927f666a485a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a39b2aa5a68dd07aacab2106db3927f666a485a", "html_url": "https://github.com/rust-lang/rust/commit/3a39b2aa5a68dd07aacab2106db3927f666a485a"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "42fc4143d9090e0855040ea6f6f7053a819be0e5", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5faba281ad08e6d57dc015f9547e18256eb8247f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5faba281ad08e6d57dc015f9547e18256eb8247f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=5faba281ad08e6d57dc015f9547e18256eb8247f", "patch": "@@ -2045,7 +2045,7 @@ impl<'a> Resolver<'a> {\n                     segments: vec![],\n                     span: use_tree.span,\n                 };\n-                self.resolve_use_tree(item, use_tree, &path);\n+                self.resolve_use_tree(item.id, use_tree, &path);\n             }\n \n             ItemKind::ExternCrate(_) | ItemKind::MacroDef(..) | ItemKind::GlobalAsm(_) => {\n@@ -2056,7 +2056,7 @@ impl<'a> Resolver<'a> {\n         }\n     }\n \n-    fn resolve_use_tree(&mut self, item: &Item, use_tree: &ast::UseTree, prefix: &Path) {\n+    fn resolve_use_tree(&mut self, id: NodeId, use_tree: &ast::UseTree, prefix: &Path) {\n         match use_tree.kind {\n             ast::UseTreeKind::Nested(ref items) => {\n                 let path = Path {\n@@ -2070,10 +2070,10 @@ impl<'a> Resolver<'a> {\n \n                 if items.len() == 0 {\n                     // Resolve prefix of an import with empty braces (issue #28388).\n-                    self.smart_resolve_path(item.id, None, &path, PathSource::ImportPrefix);\n+                    self.smart_resolve_path(id, None, &path, PathSource::ImportPrefix);\n                 } else {\n-                    for &(ref tree, _) in items {\n-                        self.resolve_use_tree(item, tree, &path);\n+                    for &(ref tree, nested_id) in items {\n+                        self.resolve_use_tree(nested_id, tree, &path);\n                     }\n                 }\n             }"}, {"sha": "92f54a44f63c94ae0af9c11fbba66de1f0e2b1ef", "filename": "src/test/run-pass/issue-47673.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5faba281ad08e6d57dc015f9547e18256eb8247f/src%2Ftest%2Frun-pass%2Fissue-47673.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5faba281ad08e6d57dc015f9547e18256eb8247f/src%2Ftest%2Frun-pass%2Fissue-47673.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-47673.rs?ref=5faba281ad08e6d57dc015f9547e18256eb8247f", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(use_nested_groups)]\n+#![allow(unused_import)]\n+\n+use {{}, {}};\n+\n+fn main() {}"}]}