{"sha": "ea24395617745dd0483a7c4114da04b114a7d3d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMjQzOTU2MTc3NDVkZDA0ODNhN2M0MTE0ZGEwNGIxMTRhN2QzZDg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-20T18:20:06Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-20T18:20:06Z"}, "message": "Add debug_asserts for the unsafe indexing in fmt::write.", "tree": {"sha": "c8ab6cd3514527b74f754503822267f3d499a8ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8ab6cd3514527b74f754503822267f3d499a8ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea24395617745dd0483a7c4114da04b114a7d3d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea24395617745dd0483a7c4114da04b114a7d3d8", "html_url": "https://github.com/rust-lang/rust/commit/ea24395617745dd0483a7c4114da04b114a7d3d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea24395617745dd0483a7c4114da04b114a7d3d8/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d80f127a75017dcdc91f4535b26a668976e2cfc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d80f127a75017dcdc91f4535b26a668976e2cfc7", "html_url": "https://github.com/rust-lang/rust/commit/d80f127a75017dcdc91f4535b26a668976e2cfc7"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "cc84bf14a33a52dd463848f94fd314c429b5b331", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea24395617745dd0483a7c4114da04b114a7d3d8/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea24395617745dd0483a7c4114da04b114a7d3d8/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=ea24395617745dd0483a7c4114da04b114a7d3d8", "patch": "@@ -1110,7 +1110,7 @@ unsafe fn run(fmt: &mut Formatter<'_>, arg: &rt::v1::Argument, args: &[ArgumentV\n     }\n \n     // Extract the correct argument\n-\n+    debug_assert!(arg.position < args.len());\n     // SAFETY: arg and args come from the same Arguments,\n     // which guarantees its index is always within bounds.\n     let value = unsafe { args.get_unchecked(arg.position) };\n@@ -1124,6 +1124,7 @@ unsafe fn getcount(args: &[ArgumentV1<'_>], cnt: &rt::v1::Count) -> Option<usize\n         rt::v1::Count::Is(n) => Some(n),\n         rt::v1::Count::Implied => None,\n         rt::v1::Count::Param(i) => {\n+            debug_assert!(i < args.len());\n             // SAFETY: cnt and args come from the same Arguments,\n             // which guarantees this index is always within bounds.\n             unsafe { args.get_unchecked(i).as_usize() }"}]}