{"sha": "c504f01abeba606a5fa7d081ed8aec25d118a486", "node_id": "C_kwDOAAsO6NoAKGM1MDRmMDFhYmViYTYwNmE1ZmE3ZDA4MWVkOGFlYzI1ZDExOGE0ODY", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2023-04-26T01:37:04Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2023-04-26T01:37:04Z"}, "message": "Use cast and improve comments", "tree": {"sha": "694064e5de122534b90c7a261e34cca97c1a6566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/694064e5de122534b90c7a261e34cca97c1a6566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c504f01abeba606a5fa7d081ed8aec25d118a486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c504f01abeba606a5fa7d081ed8aec25d118a486", "html_url": "https://github.com/rust-lang/rust/commit/c504f01abeba606a5fa7d081ed8aec25d118a486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c504f01abeba606a5fa7d081ed8aec25d118a486/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "394a8845c699b5c6b47c6a17e2926a549f8801be", "url": "https://api.github.com/repos/rust-lang/rust/commits/394a8845c699b5c6b47c6a17e2926a549f8801be", "html_url": "https://github.com/rust-lang/rust/commit/394a8845c699b5c6b47c6a17e2926a549f8801be"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "92984f55e45a552fe0f8f05136ab2623b7e5b1d3", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c504f01abeba606a5fa7d081ed8aec25d118a486/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c504f01abeba606a5fa7d081ed8aec25d118a486/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=c504f01abeba606a5fa7d081ed8aec25d118a486", "patch": "@@ -184,12 +184,15 @@ where\n     /// # Safety\n     /// Reading `ptr` must be safe, as if by `<*const [T; N]>::read_unaligned`.\n     const unsafe fn load(ptr: *const [T; N]) -> Self {\n-        let mut tmp = core::mem::MaybeUninit::uninit();\n+        // There are potentially simpler ways to write this function, but this should result in\n+        // LLVM `load <N x T>`\n+\n+        let mut tmp = core::mem::MaybeUninit::<Self>::uninit();\n         // SAFETY: `Simd<T, N>` always contains `N` elements of type `T`.  It may have padding\n         // which does not need to be initialized.  The safety of reading `ptr` is ensured by the\n         // caller.\n         unsafe {\n-            core::ptr::copy_nonoverlapping(ptr, tmp.as_mut_ptr() as *mut _, 1);\n+            core::ptr::copy_nonoverlapping(ptr, tmp.as_mut_ptr().cast(), 1);\n             tmp.assume_init()\n         }\n     }\n@@ -201,9 +204,14 @@ where\n     /// # Safety\n     /// Writing to `ptr` must be safe, as if by `<*mut [T; N]>::write_unaligned`.\n     const unsafe fn store(self, ptr: *mut [T; N]) {\n+        // There are potentially simpler ways to write this function, but this should result in\n+        // LLVM `store <N x T>`\n+\n+        // Creating a temporary helps LLVM turn the memcpy into a store.\n+        let tmp = self;\n         // SAFETY: `Simd<T, N>` always contains `N` elements of type `T`.  The safety of writing\n         // `ptr` is ensured by the caller.\n-        unsafe { core::ptr::copy_nonoverlapping(self.as_array(), ptr, 1) }\n+        unsafe { core::ptr::copy_nonoverlapping(tmp.as_array(), ptr, 1) }\n     }\n \n     /// Converts an array to a SIMD vector."}]}