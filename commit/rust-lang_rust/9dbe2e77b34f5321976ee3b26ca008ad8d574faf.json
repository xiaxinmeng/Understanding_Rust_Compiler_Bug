{"sha": "9dbe2e77b34f5321976ee3b26ca008ad8d574faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYmUyZTc3YjM0ZjUzMjE5NzZlZTNiMjZjYTAwOGFkOGQ1NzRmYWY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-07-19T17:59:02Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-07-19T18:36:55Z"}, "message": "review comments", "tree": {"sha": "b97b3516c9c17ee2ee80fe8e7dd0087ccfe97dbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b97b3516c9c17ee2ee80fe8e7dd0087ccfe97dbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dbe2e77b34f5321976ee3b26ca008ad8d574faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dbe2e77b34f5321976ee3b26ca008ad8d574faf", "html_url": "https://github.com/rust-lang/rust/commit/9dbe2e77b34f5321976ee3b26ca008ad8d574faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dbe2e77b34f5321976ee3b26ca008ad8d574faf/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5b285906e45d0fd031a1433cdb7ab3c7be92650", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5b285906e45d0fd031a1433cdb7ab3c7be92650", "html_url": "https://github.com/rust-lang/rust/commit/f5b285906e45d0fd031a1433cdb7ab3c7be92650"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "f4fc87506f357247666cca64a661a88d750cc84d", "filename": "src/libsyntax/parse/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9dbe2e77b34f5321976ee3b26ca008ad8d574faf/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dbe2e77b34f5321976ee3b26ca008ad8d574faf/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs?ref=9dbe2e77b34f5321976ee3b26ca008ad8d574faf", "patch": "@@ -327,8 +327,8 @@ impl<'a> Parser<'a> {\n             self.token.is_keyword(kw::Return) ||\n             self.token.is_keyword(kw::While)\n         );\n-        let cm = self.sess.source_map();\n-        match (cm.lookup_line(self.token.span.lo()), cm.lookup_line(sp.lo())) {\n+        let sm = self.sess.source_map();\n+        match (sm.lookup_line(self.token.span.lo()), sm.lookup_line(sp.lo())) {\n             (Ok(ref a), Ok(ref b)) if a.line != b.line && is_semi_suggestable => {\n                 // The spans are in different lines, expected `;` and found `let` or `return`.\n                 // High likelihood that it is only a missing `;`.\n@@ -376,9 +376,9 @@ impl<'a> Parser<'a> {\n         maybe_expected_semicolon: bool,\n     ) {\n         if let Some((sp, likely_path)) = self.last_type_ascription {\n-            let cm = self.sess.source_map();\n-            let next_pos = cm.lookup_char_pos(self.token.span.lo());\n-            let op_pos = cm.lookup_char_pos(sp.hi());\n+            let sm = self.sess.source_map();\n+            let next_pos = sm.lookup_char_pos(self.token.span.lo());\n+            let op_pos = sm.lookup_char_pos(sp.hi());\n \n             if likely_path {\n                 err.span_suggestion(\n@@ -814,8 +814,8 @@ impl<'a> Parser<'a> {\n                 return Ok(recovered);\n             }\n         }\n-        let cm = self.sess.source_map();\n-        match (cm.lookup_line(prev_sp.lo()), cm.lookup_line(sp.lo())) {\n+        let sm = self.sess.source_map();\n+        match (sm.lookup_line(prev_sp.lo()), sm.lookup_line(sp.lo())) {\n             (Ok(ref a), Ok(ref b)) if a.line == b.line => {\n                 // When the spans are in the same line, it means that the only content\n                 // between them is whitespace, point only at the found token."}, {"sha": "da38869463737d5d09873a5c3ebf23849baa2c7f", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9dbe2e77b34f5321976ee3b26ca008ad8d574faf/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dbe2e77b34f5321976ee3b26ca008ad8d574faf/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=9dbe2e77b34f5321976ee3b26ca008ad8d574faf", "patch": "@@ -2850,9 +2850,7 @@ impl<'a> Parser<'a> {\n \n         match (self.expr_is_complete(&lhs), AssocOp::from_token(&self.token)) {\n             (true, None) => {\n-                if last_type_ascription_set {\n-                    self.last_type_ascription = None;\n-                }\n+                self.last_type_ascription = None;\n                 // Semi-statement forms are odd. See https://github.com/rust-lang/rust/issues/29071\n                 return Ok(lhs);\n             }\n@@ -2867,18 +2865,14 @@ impl<'a> Parser<'a> {\n             // If the next token is a keyword, then the tokens above *are* unambiguously incorrect:\n             // `if x { a } else { b } && if y { c } else { d }`\n             if !self.look_ahead(1, |t| t.is_reserved_ident()) => {\n-                if last_type_ascription_set {\n-                    self.last_type_ascription = None;\n-                }\n+                self.last_type_ascription = None;\n                 // These cases are ambiguous and can't be identified in the parser alone\n                 let sp = self.sess.source_map().start_point(self.token.span);\n                 self.sess.ambiguous_block_expr_parse.borrow_mut().insert(sp, lhs.span);\n                 return Ok(lhs);\n             }\n             (true, Some(ref op)) if !op.can_continue_expr_unambiguously() => {\n-                if last_type_ascription_set {\n-                    self.last_type_ascription = None;\n-                }\n+                self.last_type_ascription = None;\n                 return Ok(lhs);\n             }\n             (true, Some(_)) => {"}]}