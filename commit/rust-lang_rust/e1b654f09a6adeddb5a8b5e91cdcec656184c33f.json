{"sha": "e1b654f09a6adeddb5a8b5e91cdcec656184c33f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYjY1NGYwOWE2YWRlZGRiNWE4YjVlOTFjZGNlYzY1NjE4NGMzM2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-22T07:55:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-22T07:55:53Z"}, "message": "mention cross-running in docs", "tree": {"sha": "027cfff0b9cd694f005ab7145c26de9ba009e118", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/027cfff0b9cd694f005ab7145c26de9ba009e118"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1b654f09a6adeddb5a8b5e91cdcec656184c33f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b654f09a6adeddb5a8b5e91cdcec656184c33f", "html_url": "https://github.com/rust-lang/rust/commit/e1b654f09a6adeddb5a8b5e91cdcec656184c33f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1b654f09a6adeddb5a8b5e91cdcec656184c33f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d85f09c4e4bdee1d9698dce9a2163f46f1e1697d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d85f09c4e4bdee1d9698dce9a2163f46f1e1697d", "html_url": "https://github.com/rust-lang/rust/commit/d85f09c4e4bdee1d9698dce9a2163f46f1e1697d"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "573f9f6ef6e41d6507b6df0fe30a8fdc4b81fbc7", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e1b654f09a6adeddb5a8b5e91cdcec656184c33f/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/e1b654f09a6adeddb5a8b5e91cdcec656184c33f/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=e1b654f09a6adeddb5a8b5e91cdcec656184c33f", "patch": "@@ -52,18 +52,19 @@ all the same flags as `rustc` (though the ones only affecting code generation\n and linking obviously will have no effect) [and more][miri-flags].\n \n Running the Miri driver requires some fiddling with environment variables, so\n-the `miri` script helps you do that.  For example, you can run the driver on a\n-particular file by doing\n+the `miri` script helps you do that.  For example, you can (cross-)run the\n+driver on a particular file by doing\n \n ```sh\n ./miri run tests/run-pass/format.rs\n ./miri run tests/run-pass/hello.rs --target i686-unknown-linux-gnu\n ```\n \n-and you can run the test suite using:\n+and you can (cross-)run the test suite using:\n \n ```\n ./miri test\n+MIRI_TEST_TARGET=i686-unknown-linux-gnu ./miri test\n ```\n \n `./miri test FILTER` only runs those tests that contain `FILTER` in their\n@@ -104,7 +105,8 @@ and then you can use it as if it was installed by `rustup`.  Make sure you use\n the same toolchain when calling `cargo miri` that you used when installing Miri!\n \n There's a test for the cargo wrapper in the `test-cargo-miri` directory; run\n-`./run-test.py` in there to execute it.\n+`./run-test.py` in there to execute it. Like `./miri test`, this respects the\n+`MIRI_TEST_TARGET` environment variable to execute the test for another target.\n \n ## Building Miri with a locally built rustc\n "}, {"sha": "59394830d79bc9be87261ac4398f4e1949dc1338", "filename": "README.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1b654f09a6adeddb5a8b5e91cdcec656184c33f/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/e1b654f09a6adeddb5a8b5e91cdcec656184c33f/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=e1b654f09a6adeddb5a8b5e91cdcec656184c33f", "patch": "@@ -76,6 +76,11 @@ Now you can run your project in Miri:\n The first time you run Miri, it will perform some extra setup and install some\n dependencies.  It will ask you for confirmation before installing anything.\n \n+Miri supports cross-execution: if you want to run the program as if it was a\n+Linux program, you can do `cargo miri run --target x86_64-unknown-linux-gnu`.\n+This is particularly useful if you are using Windows, as the Linux target is\n+much better supported than Windows targets.\n+\n You can pass arguments to Miri after the first `--`, and pass arguments to the\n interpreted program or test suite after the second `--`.  For example, `cargo\n miri run -- -Zmiri-disable-validation` runs the program without validation of"}]}