{"sha": "5ae4a0f2a9175bbd339795623214aaa89db1f5a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhZTRhMGYyYTkxNzViYmQzMzk3OTU2MjMyMTRhYWE4OWRiMWY1YTU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T01:48:45Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T01:48:45Z"}, "message": "Only indent trace logs.", "tree": {"sha": "2297a1bf95b88dc64cdb00b52869f19ef343e9de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2297a1bf95b88dc64cdb00b52869f19ef343e9de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ae4a0f2a9175bbd339795623214aaa89db1f5a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae4a0f2a9175bbd339795623214aaa89db1f5a5", "html_url": "https://github.com/rust-lang/rust/commit/5ae4a0f2a9175bbd339795623214aaa89db1f5a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ae4a0f2a9175bbd339795623214aaa89db1f5a5/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8db0bc0ce9d158ac016d8bec1422d1f01835266f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8db0bc0ce9d158ac016d8bec1422d1f01835266f", "html_url": "https://github.com/rust-lang/rust/commit/8db0bc0ce9d158ac016d8bec1422d1f01835266f"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "f2b04b19c9dd95cf2b6f53da512d89bad8ca2ae7", "filename": "src/bin/miri.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5ae4a0f2a9175bbd339795623214aaa89db1f5a5/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ae4a0f2a9175bbd339795623214aaa89db1f5a5/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=5ae4a0f2a9175bbd339795623214aaa89db1f5a5", "patch": "@@ -106,15 +106,22 @@ fn report(tcx: TyCtxt, ecx: &EvalContext, e: EvalError) {\n fn init_logger() {\n     const NSPACES: usize = 40;\n     let format = |record: &log::LogRecord| {\n-        // prepend spaces to indent the final string\n-        let indentation = log_settings::settings().indentation;\n-        format!(\"{lvl}:{module}{depth:2}{indent:<indentation$} {text}\",\n-            lvl = record.level(),\n-            module = record.location().module_path(),\n-            depth = indentation / NSPACES,\n-            indentation = indentation % NSPACES,\n-            indent = \"\",\n-            text = record.args())\n+        if record.level() == log::LogLevel::Trace {\n+            // prepend spaces to indent the final string\n+            let indentation = log_settings::settings().indentation;\n+            format!(\"{lvl}:{module}{depth:2}{indent:<indentation$} {text}\",\n+                lvl = record.level(),\n+                module = record.location().module_path(),\n+                depth = indentation / NSPACES,\n+                indentation = indentation % NSPACES,\n+                indent = \"\",\n+                text = record.args())\n+        } else {\n+            format!(\"{lvl}:{module}: {text}\",\n+                lvl = record.level(),\n+                module = record.location().module_path(),\n+                text = record.args())\n+        }\n     };\n \n     let mut builder = env_logger::LogBuilder::new();"}]}