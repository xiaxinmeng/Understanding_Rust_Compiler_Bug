{"sha": "7724a04b0f69ac298b308e09402042410e8a928c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MjRhMDRiMGY2OWFjMjk4YjMwOGUwOTQwMjA0MjQxMGU4YTkyOGM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-09-30T02:10:29Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-09-30T17:49:30Z"}, "message": "rustdoc: Fix documenting rustc-macro crates\n\nThis commit adds a \"hack\" to the session to track whether we're a rustdoc\nsession or not. If we're rustdoc then we skip the expansion to add the\nrustc-macro infrastructure.\n\nCloses #36820", "tree": {"sha": "c41f65a7826d3b998383d58264244edd7c2c1e2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c41f65a7826d3b998383d58264244edd7c2c1e2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7724a04b0f69ac298b308e09402042410e8a928c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7724a04b0f69ac298b308e09402042410e8a928c", "html_url": "https://github.com/rust-lang/rust/commit/7724a04b0f69ac298b308e09402042410e8a928c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7724a04b0f69ac298b308e09402042410e8a928c/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86affcdf6c622278a89b73bb7f1b8ac00e970888", "url": "https://api.github.com/repos/rust-lang/rust/commits/86affcdf6c622278a89b73bb7f1b8ac00e970888", "html_url": "https://github.com/rust-lang/rust/commit/86affcdf6c622278a89b73bb7f1b8ac00e970888"}], "stats": {"total": 63, "additions": 50, "deletions": 13}, "files": [{"sha": "5b48bcb9ab3778aba90dc8c1f32c00adec302033", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7724a04b0f69ac298b308e09402042410e8a928c/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7724a04b0f69ac298b308e09402042410e8a928c/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=7724a04b0f69ac298b308e09402042410e8a928c", "patch": "@@ -486,7 +486,6 @@ impl<'a> Step<'a> {\n             Source::CheckCodegenUnits { compiler } |\n             Source::CheckIncremental { compiler } |\n             Source::CheckUi { compiler } |\n-            Source::CheckRustdoc { compiler } |\n             Source::CheckPretty { compiler } |\n             Source::CheckCFail { compiler } |\n             Source::CheckRPassValgrind { compiler } |\n@@ -509,6 +508,7 @@ impl<'a> Step<'a> {\n                     self.debugger_scripts(compiler.stage),\n                 ]\n             }\n+            Source::CheckRustdoc { compiler } |\n             Source::CheckRPassFull { compiler } |\n             Source::CheckRFailFull { compiler } |\n             Source::CheckCFailFull { compiler } |"}, {"sha": "1d8fa6e07775ccedf5a0de8e47dbe93700107ec5", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7724a04b0f69ac298b308e09402042410e8a928c/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7724a04b0f69ac298b308e09402042410e8a928c/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=7724a04b0f69ac298b308e09402042410e8a928c", "patch": "@@ -287,6 +287,11 @@ top_level_options!(\n         alt_std_name: Option<String> [TRACKED],\n         // Indicates how the compiler should treat unstable features\n         unstable_features: UnstableFeatures [TRACKED],\n+\n+        // Indicates whether this run of the compiler is actually rustdoc. This\n+        // is currently just a hack and will be removed eventually, so please\n+        // try to not rely on this too much.\n+        actually_rustdoc: bool [TRACKED],\n     }\n );\n \n@@ -439,6 +444,7 @@ pub fn basic_options() -> Options {\n         libs: Vec::new(),\n         unstable_features: UnstableFeatures::Disallow,\n         debug_assertions: true,\n+        actually_rustdoc: false,\n     }\n }\n \n@@ -1536,6 +1542,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n         libs: libs,\n         unstable_features: UnstableFeatures::from_environment(),\n         debug_assertions: debug_assertions,\n+        actually_rustdoc: false,\n     },\n     cfg)\n }"}, {"sha": "8059ef61eab83c2983f7abece43aa696c7b8d2d7", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7724a04b0f69ac298b308e09402042410e8a928c/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7724a04b0f69ac298b308e09402042410e8a928c/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=7724a04b0f69ac298b308e09402042410e8a928c", "patch": "@@ -703,18 +703,23 @@ pub fn phase_2_configure_and_expand<'a, F>(sess: &Session,\n                                          sess.diagnostic())\n     });\n \n-    krate = time(time_passes, \"maybe creating a macro crate\", || {\n-        let crate_types = sess.crate_types.borrow();\n-        let is_rustc_macro_crate = crate_types.contains(&config::CrateTypeRustcMacro);\n-        let num_crate_types = crate_types.len();\n-        syntax_ext::rustc_macro_registrar::modify(&sess.parse_sess,\n-                                                  &mut resolver,\n-                                                  krate,\n-                                                  is_rustc_macro_crate,\n-                                                  num_crate_types,\n-                                                  sess.diagnostic(),\n-                                                  &sess.features.borrow())\n-    });\n+    // If we're in rustdoc we're always compiling as an rlib, but that'll trip a\n+    // bunch of checks in the `modify` function below. For now just skip this\n+    // step entirely if we're rustdoc as it's not too useful anyway.\n+    if !sess.opts.actually_rustdoc {\n+        krate = time(time_passes, \"maybe creating a macro crate\", || {\n+            let crate_types = sess.crate_types.borrow();\n+            let num_crate_types = crate_types.len();\n+            let is_rustc_macro_crate = crate_types.contains(&config::CrateTypeRustcMacro);\n+            syntax_ext::rustc_macro_registrar::modify(&sess.parse_sess,\n+                                                      &mut resolver,\n+                                                      krate,\n+                                                      is_rustc_macro_crate,\n+                                                      num_crate_types,\n+                                                      sess.diagnostic(),\n+                                                      &sess.features.borrow())\n+        });\n+    }\n \n     if sess.opts.debugging_opts.input_stats {\n         println!(\"Post-expansion node count: {}\", count_nodes(&krate));"}, {"sha": "208819a4a0b0697d9f7326c4a0d02fe569edf4c8", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7724a04b0f69ac298b308e09402042410e8a928c/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7724a04b0f69ac298b308e09402042410e8a928c/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=7724a04b0f69ac298b308e09402042410e8a928c", "patch": "@@ -150,6 +150,7 @@ pub fn run_core(search_paths: SearchPaths,\n         target_triple: triple.unwrap_or(config::host_triple().to_string()),\n         // Ensure that rustdoc works even if rustc is feature-staged\n         unstable_features: UnstableFeatures::Allow,\n+        actually_rustdoc: true,\n         ..config::basic_options().clone()\n     };\n "}, {"sha": "c8bf5b2b9121231283229a7727f6c4c67870c85f", "filename": "src/test/rustdoc/rustc-macro-crate.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7724a04b0f69ac298b308e09402042410e8a928c/src%2Ftest%2Frustdoc%2Frustc-macro-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7724a04b0f69ac298b308e09402042410e8a928c/src%2Ftest%2Frustdoc%2Frustc-macro-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frustc-macro-crate.rs?ref=7724a04b0f69ac298b308e09402042410e8a928c", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(rustc_macro)]\n+#![feature(rustc_macro_lib)]\n+#![crate_type = \"rustc-macro\"]\n+\n+extern crate rustc_macro;\n+\n+use rustc_macro::TokenStream;\n+\n+#[rustc_macro_derive(Foo)]\n+pub fn foo(input: TokenStream) -> TokenStream {\n+    input\n+}"}]}