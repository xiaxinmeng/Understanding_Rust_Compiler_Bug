{"sha": "65a3279f4a221e97c97ca1c49d89626c8700d017", "node_id": "C_kwDOAAsO6NoAKDY1YTMyNzlmNGEyMjFlOTdjOTdjYTFjNDlkODk2MjZjODcwMGQwMTc", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2021-12-18T19:41:58Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2022-01-04T18:12:10Z"}, "message": "Do not hash zero bytes of i64 and u32 in Sip128 hasher", "tree": {"sha": "65001aee1a9dfd9850261c8e060b4ef950e1efaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65001aee1a9dfd9850261c8e060b4ef950e1efaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65a3279f4a221e97c97ca1c49d89626c8700d017", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEg8FrwI85f934CWFa28VT5UDC9hkFAmHUjfoACgkQ28VT5UDC\n9hkQZAwAhsYSFYPv+tCSnDPJ3iCTV0IpG+IGg8lh5A2hx8tP14ilf+9Hyhq9VLdh\njjVl9Dp9lVlmGHu0x/47WM+ed84VONlL5M9zNqgikjEkkSLTgS3+U1gwNN9KpBPe\n6GSR+MYVVo8UMYx0jild6twWe6Httdpq3nE6vNQdagoxp93ItH7fOnbVtCTu+e9e\nrAawgzw3FkHk1sGkw4GdeqjKIHMRRuMiq30SNXiwyzaVPv8LO4Ft2cr22NdI3H2J\nMXDiR3EWcW39K/Tv6Gr98Ol9IGrF1yBiXNxtVQhzViyXgF+JVcKrGFAlyI/tFjKJ\nC+Bf6+LjDerUvuuHql5WAom3Smhw9ma0Dd55Hp++bw+KFqqSi5JzEKU36rMPvTsS\nnqzuHF+J7WDMFCOMy6RGfTMSkWCjZXlHyAiVuZAx5wvErAzgTtSOp28hXz94j3Nv\ncLZhPX2qccUKQlw3rOoBT9fdgVOARMEmoG+jyMwj0hGtS0ElH0zMH70aTWDjb5IU\n3bBkOLeQ\n=NYHX\n-----END PGP SIGNATURE-----", "payload": "tree 65001aee1a9dfd9850261c8e060b4ef950e1efaa\nparent b5da80871d5e22401e03ce5ed73200ece8bdc7a6\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1639856518 +0100\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1641319930 +0100\n\nDo not hash zero bytes of i64 and u32 in Sip128 hasher\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65a3279f4a221e97c97ca1c49d89626c8700d017", "html_url": "https://github.com/rust-lang/rust/commit/65a3279f4a221e97c97ca1c49d89626c8700d017", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65a3279f4a221e97c97ca1c49d89626c8700d017/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5da80871d5e22401e03ce5ed73200ece8bdc7a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5da80871d5e22401e03ce5ed73200ece8bdc7a6", "html_url": "https://github.com/rust-lang/rust/commit/b5da80871d5e22401e03ce5ed73200ece8bdc7a6"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "872b0eb7854ae4c2face1527a766ff89bec0594f", "filename": "compiler/rustc_data_structures/src/sip128.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/65a3279f4a221e97c97ca1c49d89626c8700d017/compiler%2Frustc_data_structures%2Fsrc%2Fsip128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a3279f4a221e97c97ca1c49d89626c8700d017/compiler%2Frustc_data_structures%2Fsrc%2Fsip128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsip128.rs?ref=65a3279f4a221e97c97ca1c49d89626c8700d017", "patch": "@@ -409,6 +409,20 @@ impl SipHasher128 {\n     }\n }\n \n+macro_rules! dispatch_value {\n+    ($target: expr, $value:expr) => {\n+        let value = $value;\n+        #[allow(unreachable_patterns)]\n+        #[allow(overflowing_literals)]\n+        match value {\n+            0..=0xFF => $target.short_write(value as u8),\n+            0x100..=0xFFFF => $target.short_write(value as u16),\n+            0x10000..=0xFFFFFFFF => $target.short_write(value as u32),\n+            _ => $target.short_write(value as u64),\n+        }\n+    };\n+}\n+\n impl Hasher for SipHasher128 {\n     #[inline]\n     fn write_u8(&mut self, i: u8) {\n@@ -422,7 +436,7 @@ impl Hasher for SipHasher128 {\n \n     #[inline]\n     fn write_u32(&mut self, i: u32) {\n-        self.short_write(i);\n+        dispatch_value!(self, i);\n     }\n \n     #[inline]\n@@ -452,7 +466,7 @@ impl Hasher for SipHasher128 {\n \n     #[inline]\n     fn write_i64(&mut self, i: i64) {\n-        self.short_write(i as u64);\n+        dispatch_value!(self, i as u64);\n     }\n \n     #[inline]"}, {"sha": "ac9a02cce048127d459d8716b3aa0be29a4808f9", "filename": "src/test/debuginfo/function-names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65a3279f4a221e97c97ca1c49d89626c8700d017/src%2Ftest%2Fdebuginfo%2Ffunction-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a3279f4a221e97c97ca1c49d89626c8700d017/src%2Ftest%2Fdebuginfo%2Ffunction-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-names.rs?ref=65a3279f4a221e97c97ca1c49d89626c8700d017", "patch": "@@ -37,7 +37,7 @@\n // Const generic parameter\n // gdb-command:info functions -q function_names::const_generic_fn.*\n // gdb-check:[...]static fn function_names::const_generic_fn_bool<false>();\n-// gdb-check:[...]static fn function_names::const_generic_fn_non_int<{CONST#fe3cfa0214ac55c7}>();\n+// gdb-check:[...]static fn function_names::const_generic_fn_non_int<{CONST#3fcd7c34c1555be6}>();\n // gdb-check:[...]static fn function_names::const_generic_fn_signed_int<-7>();\n // gdb-check:[...]static fn function_names::const_generic_fn_unsigned_int<14>();\n \n@@ -76,7 +76,7 @@\n // Const generic parameter\n // cdb-command:x a!function_names::const_generic_fn*\n // cdb-check:[...] a!function_names::const_generic_fn_bool<false> (void)\n-// cdb-check:[...] a!function_names::const_generic_fn_non_int<CONST$fe3cfa0214ac55c7> (void)\n+// cdb-check:[...] a!function_names::const_generic_fn_non_int<CONST$3fcd7c34c1555be6> (void)\n // cdb-check:[...] a!function_names::const_generic_fn_unsigned_int<14> (void)\n // cdb-check:[...] a!function_names::const_generic_fn_signed_int<-7> (void)\n "}]}