{"sha": "71321ff33fa3fe71cc1df541b3d0547b4e208923", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMzIxZmYzM2ZhM2ZlNzFjYzFkZjU0MWIzZDA1NDdiNGUyMDg5MjM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-03-19T22:38:16Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-20T00:06:07Z"}, "message": "Remove rt::default_sched_threads and RUST_THREADS.\n\nAs @alexcrichton says, this was really a libgreen thing, and isn't\nrelevant now.\n\nAs this removes a technically-public function, this is a\n\n[breaking-change]\n\nConflicts:\n\tsrc/libtest/lib.rs", "tree": {"sha": "fd701f6e9e786cffe42a7a84bbb949b2e60697fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd701f6e9e786cffe42a7a84bbb949b2e60697fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71321ff33fa3fe71cc1df541b3d0547b4e208923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71321ff33fa3fe71cc1df541b3d0547b4e208923", "html_url": "https://github.com/rust-lang/rust/commit/71321ff33fa3fe71cc1df541b3d0547b4e208923", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71321ff33fa3fe71cc1df541b3d0547b4e208923/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cbc42849f7586d3c567d7ac8f202839f9b968e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cbc42849f7586d3c567d7ac8f202839f9b968e8", "html_url": "https://github.com/rust-lang/rust/commit/7cbc42849f7586d3c567d7ac8f202839f9b968e8"}], "stats": {"total": 34, "additions": 8, "deletions": 26}, "files": [{"sha": "5e8abfd0a3f8988a9f4a128e0bc233dd90b6aec8", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71321ff33fa3fe71cc1df541b3d0547b4e208923/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71321ff33fa3fe71cc1df541b3d0547b4e208923/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=71321ff33fa3fe71cc1df541b3d0547b4e208923", "patch": "@@ -30,7 +30,7 @@ use thunk::Thunk;\n use usize;\n \n // Reexport some of our utilities which are expected by other crates.\n-pub use self::util::{default_sched_threads, min_stack, running_on_valgrind};\n+pub use self::util::{min_stack, running_on_valgrind};\n pub use self::unwind::{begin_unwind, begin_unwind_fmt};\n \n // Reexport some functionality from liballoc."}, {"sha": "f1c43a07e6e3895ef35cc52369876cc8f0cc7350", "filename": "src/libstd/rt/util.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/71321ff33fa3fe71cc1df541b3d0547b4e208923/src%2Flibstd%2Frt%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71321ff33fa3fe71cc1df541b3d0547b4e208923/src%2Flibstd%2Frt%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Futil.rs?ref=71321ff33fa3fe71cc1df541b3d0547b4e208923", "patch": "@@ -58,29 +58,6 @@ pub fn min_stack() -> uint {\n     return amt;\n }\n \n-/// Get's the number of scheduler threads requested by the environment\n-/// either `RUST_THREADS` or `num_cpus`.\n-#[allow(deprecated)]\n-pub fn default_sched_threads() -> uint {\n-    use os;\n-    match env::var(\"RUST_THREADS\") {\n-        Ok(nstr) => {\n-            let opt_n: Option<uint> = nstr.parse().ok();\n-            match opt_n {\n-                Some(n) if n > 0 => n,\n-                _ => panic!(\"`RUST_THREADS` is `{}`, should be a positive integer\", nstr)\n-            }\n-        }\n-        Err(..) => {\n-            if limit_thread_creation_due_to_osx_and_valgrind() {\n-                1\n-            } else {\n-                os::num_cpus()\n-            }\n-        }\n-    }\n-}\n-\n // Indicates whether we should perform expensive sanity checks, including rtassert!\n //\n // FIXME: Once the runtime matures remove the `true` below to turn off rtassert,"}, {"sha": "51decbab8587d1e516279ff98e05dccd3dd6ce91", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/71321ff33fa3fe71cc1df541b3d0547b4e208923/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71321ff33fa3fe71cc1df541b3d0547b4e208923/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=71321ff33fa3fe71cc1df541b3d0547b4e208923", "patch": "@@ -44,6 +44,7 @@\n #![feature(std_misc)]\n #![feature(libc)]\n #![feature(set_stdio)]\n+#![feature(os)]\n \n extern crate getopts;\n extern crate serialize;\n@@ -841,8 +842,8 @@ fn run_tests<F>(opts: &TestOpts,\n     Ok(())\n }\n \n+#[allow(deprecated)]\n fn get_concurrency() -> uint {\n-    use std::rt;\n     match env::var(\"RUST_TEST_THREADS\") {\n         Ok(s) => {\n             let opt_n: Option<uint> = s.parse().ok();\n@@ -852,7 +853,11 @@ fn get_concurrency() -> uint {\n             }\n         }\n         Err(..) => {\n-            rt::default_sched_threads()\n+            if std::rt::util::limit_thread_creation_due_to_osx_and_valgrind() {\n+                1\n+            } else {\n+                std::os::num_cpus()\n+            }\n         }\n     }\n }"}]}