{"sha": "48291cf1d73c72523c70df009422cadc6d9e07af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MjkxY2YxZDczYzcyNTIzYzcwZGYwMDk0MjJjYWRjNmQ5ZTA3YWY=", "commit": {"author": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-10-11T22:59:41Z"}, "committer": {"name": "Nicholas-Baron", "email": "nicholas.baron.ten@gmail.com", "date": "2020-10-11T23:10:42Z"}, "message": "Moved some short functions back into fn_ctxt.rs", "tree": {"sha": "d939deb6f7f4e820ae73a9bddb5539e1b883d6a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d939deb6f7f4e820ae73a9bddb5539e1b883d6a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48291cf1d73c72523c70df009422cadc6d9e07af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48291cf1d73c72523c70df009422cadc6d9e07af", "html_url": "https://github.com/rust-lang/rust/commit/48291cf1d73c72523c70df009422cadc6d9e07af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48291cf1d73c72523c70df009422cadc6d9e07af/comments", "author": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nicholas-Baron", "id": 35079404, "node_id": "MDQ6VXNlcjM1MDc5NDA0", "avatar_url": "https://avatars.githubusercontent.com/u/35079404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nicholas-Baron", "html_url": "https://github.com/Nicholas-Baron", "followers_url": "https://api.github.com/users/Nicholas-Baron/followers", "following_url": "https://api.github.com/users/Nicholas-Baron/following{/other_user}", "gists_url": "https://api.github.com/users/Nicholas-Baron/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nicholas-Baron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nicholas-Baron/subscriptions", "organizations_url": "https://api.github.com/users/Nicholas-Baron/orgs", "repos_url": "https://api.github.com/users/Nicholas-Baron/repos", "events_url": "https://api.github.com/users/Nicholas-Baron/events{/privacy}", "received_events_url": "https://api.github.com/users/Nicholas-Baron/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21751fa93bebac07d348a77c32087dc55e0ec198", "url": "https://api.github.com/repos/rust-lang/rust/commits/21751fa93bebac07d348a77c32087dc55e0ec198", "html_url": "https://github.com/rust-lang/rust/commit/21751fa93bebac07d348a77c32087dc55e0ec198"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "dff54cae4df95c7323cf01f6f02ea90a557ed736", "filename": "compiler/rustc_typeck/src/check/fn_ctxt.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/48291cf1d73c72523c70df009422cadc6d9e07af/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48291cf1d73c72523c70df009422cadc6d9e07af/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt.rs?ref=48291cf1d73c72523c70df009422cadc6d9e07af", "patch": "@@ -11,7 +11,9 @@ use rustc_middle::hir::map::blocks::FnLikeNode;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::{self, Const, Ty, TyCtxt};\n+use rustc_session::Session;\n use rustc_span::{self, Span};\n+use rustc_trait_selection::traits::{ObligationCause, ObligationCauseCode};\n \n use std::cell::{Cell, RefCell};\n use std::ops::Deref;\n@@ -104,8 +106,6 @@ pub struct FnCtxt<'a, 'tcx> {\n     pub(super) inh: &'a Inherited<'a, 'tcx>,\n }\n \n-// FIXME: This impl is for functions which access the (private) `err_count_on_creation` field.\n-// It looks like that field will be changed soon and so this solution may end up being temporary.\n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     pub fn new(\n         inh: &'a Inherited<'a, 'tcx>,\n@@ -132,6 +132,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             inh,\n         }\n     }\n+\n+    pub fn cause(&self, span: Span, code: ObligationCauseCode<'tcx>) -> ObligationCause<'tcx> {\n+        ObligationCause::new(span, self.body_id, code)\n+    }\n+\n+    pub fn misc(&self, span: Span) -> ObligationCause<'tcx> {\n+        self.cause(span, ObligationCauseCode::MiscObligation)\n+    }\n+\n+    pub fn sess(&self) -> &Session {\n+        &self.tcx.sess\n+    }\n+\n     pub fn errors_reported_since_creation(&self) -> bool {\n         self.tcx.sess.err_count() > self.err_count_on_creation\n     }"}, {"sha": "17ced624e4b7254a8029d0464e60ad393beb4c6f", "filename": "compiler/rustc_typeck/src/check/fn_ctxt_impl.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/48291cf1d73c72523c70df009422cadc6d9e07af/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48291cf1d73c72523c70df009422cadc6d9e07af/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt_impl.rs?ref=48291cf1d73c72523c70df009422cadc6d9e07af", "patch": "@@ -54,9 +54,6 @@ use std::mem::replace;\n use std::slice;\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n-    pub fn sess(&self) -> &Session {\n-        &self.tcx.sess\n-    }\n \n     /// Produces warning on the given node, if the current point in the\n     /// function is unreachable, and there hasn't been another warning.\n@@ -90,14 +87,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n-    pub fn cause(&self, span: Span, code: ObligationCauseCode<'tcx>) -> ObligationCause<'tcx> {\n-        ObligationCause::new(span, self.body_id, code)\n-    }\n-\n-    pub fn misc(&self, span: Span) -> ObligationCause<'tcx> {\n-        self.cause(span, ObligationCauseCode::MiscObligation)\n-    }\n-\n     /// Resolves type and const variables in `ty` if possible. Unlike the infcx\n     /// version (resolve_vars_if_possible), this version will\n     /// also select obligations if it seems useful, in an effort"}]}