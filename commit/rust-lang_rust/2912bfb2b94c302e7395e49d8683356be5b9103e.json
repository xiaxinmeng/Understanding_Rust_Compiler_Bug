{"sha": "2912bfb2b94c302e7395e49d8683356be5b9103e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MTJiZmIyYjk0YzMwMmU3Mzk1ZTQ5ZDg2ODMzNTZiZTViOTEwM2U=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-05-05T18:20:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-05-05T18:23:52Z"}, "message": "doc: Update reference with better description of target_env\n\nThe definition of this value recently changed slightly. It no\nlonger corresponds directly to the target triple.\n\nAlso shuffled things around to make the order of cfg descriptions more\nlogical and added text related them to the target triple.\n\ncc #33403", "tree": {"sha": "2a8f92ecbcd4b97b9d433f0f64488eb796ec6f44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a8f92ecbcd4b97b9d433f0f64488eb796ec6f44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2912bfb2b94c302e7395e49d8683356be5b9103e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2912bfb2b94c302e7395e49d8683356be5b9103e", "html_url": "https://github.com/rust-lang/rust/commit/2912bfb2b94c302e7395e49d8683356be5b9103e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2912bfb2b94c302e7395e49d8683356be5b9103e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f65afa6946ee4a6b1d619aee69e1f638edfb662", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f65afa6946ee4a6b1d619aee69e1f638edfb662", "html_url": "https://github.com/rust-lang/rust/commit/3f65afa6946ee4a6b1d619aee69e1f638edfb662"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "397abfe563c1f7ff18466bf9ed254fc1729d0378", "filename": "src/doc/reference.md", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2912bfb2b94c302e7395e49d8683356be5b9103e/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/2912bfb2b94c302e7395e49d8683356be5b9103e/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=2912bfb2b94c302e7395e49d8683356be5b9103e", "patch": "@@ -2063,33 +2063,41 @@ arbitrarily complex configurations through nesting.\n \n The following configurations must be defined by the implementation:\n \n-* `debug_assertions` - Enabled by default when compiling without optimizations.\n-  This can be used to enable extra debugging code in development but not in\n-  production.  For example, it controls the behavior of the standard library's\n-  `debug_assert!` macro.\n-* `target_arch = \"...\"` - Target CPU architecture, such as `\"x86\"`, `\"x86_64\"`\n-  `\"mips\"`, `\"powerpc\"`, `\"powerpc64\"`, `\"arm\"`, or `\"aarch64\"`.\n-* `target_endian = \"...\"` - Endianness of the target CPU, either `\"little\"` or\n-  `\"big\"`.\n-* `target_env = \"..\"` - An option provided by the compiler by default\n-  describing the runtime environment of the target platform. Some examples of\n-  this are `musl` for builds targeting the MUSL libc implementation, `msvc` for\n-  Windows builds targeting MSVC, and `gnu` frequently the rest of the time. This\n-  option may also be blank on some platforms.\n+* `target_arch = \"...\"` - Target CPU architecture, such as `\"x86\"`,\n+  `\"x86_64\"` `\"mips\"`, `\"powerpc\"`, `\"powerpc64\"`, `\"arm\"`, or\n+  `\"aarch64\"`. This value is closely related to the first element of\n+  the platform target triple, though it is not identical.\n+* `target_os = \"...\"` - Operating system of the target, examples\n+  include `\"windows\"`, `\"macos\"`, `\"ios\"`, `\"linux\"`, `\"android\"`,\n+  `\"freebsd\"`, `\"dragonfly\"`, `\"bitrig\"` , `\"openbsd\"` or\n+  `\"netbsd\"`. This value is closely related to the second and third\n+  element of the platform target triple, though it is not identical.\n * `target_family = \"...\"` - Operating system family of the target, e. g.\n   `\"unix\"` or `\"windows\"`. The value of this configuration option is defined\n   as a configuration itself, like `unix` or `windows`.\n-* `target_os = \"...\"` - Operating system of the target, examples include\n-  `\"windows\"`, `\"macos\"`, `\"ios\"`, `\"linux\"`, `\"android\"`, `\"freebsd\"`, `\"dragonfly\"`,\n-  `\"bitrig\"` , `\"openbsd\"` or `\"netbsd\"`.\n+* `unix` - See `target_family`.\n+* `windows` - See `target_family`.\n+* `target_env = \"..\"` - Further disambiguates the target platform with\n+  information about the ABI/libc. Presently this value is either\n+  `\"gnu\"`, `\"msvc\"`, `\"musl\"`, or the empty string. For historical\n+  reasons this value has only been defined as non-empty when needed\n+  for disambiguation. Thus on many GNU platforms this value will be\n+  empty. This value is closely related to the fourth element of the\n+  platform target triple, though it is not identical. For example,\n+  embedded ABIs such as `gnueabihf` will simply define `target_env` as\n+  `\"gnu\"`.\n+* `target_endian = \"...\"` - Endianness of the target CPU, either `\"little\"` or\n+  `\"big\"`.\n * `target_pointer_width = \"...\"` - Target pointer width in bits. This is set\n   to `\"32\"` for targets with 32-bit pointers, and likewise set to `\"64\"` for\n   64-bit pointers.\n * `target_vendor = \"...\"` - Vendor of the target, for example `apple`, `pc`, or\n   simply `\"unknown\"`.\n * `test` - Enabled when compiling the test harness (using the `--test` flag).\n-* `unix` - See `target_family`.\n-* `windows` - See `target_family`.\n+* `debug_assertions` - Enabled by default when compiling without optimizations.\n+  This can be used to enable extra debugging code in development but not in\n+  production.  For example, it controls the behavior of the standard library's\n+  `debug_assert!` macro.\n \n You can also set another attribute based on a `cfg` variable with `cfg_attr`:\n "}]}