{"sha": "478cbb0095a50a94118c8165a52c1f42f19982d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3OGNiYjAwOTVhNTBhOTQxMThjODE2NWE1MmMxZjQyZjE5OTgyZDU=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-26T00:37:09Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-26T00:37:09Z"}, "message": "Extract local variable", "tree": {"sha": "2d247c4527a1807a806077640cc7bb6d007dc48d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d247c4527a1807a806077640cc7bb6d007dc48d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/478cbb0095a50a94118c8165a52c1f42f19982d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/478cbb0095a50a94118c8165a52c1f42f19982d5", "html_url": "https://github.com/rust-lang/rust/commit/478cbb0095a50a94118c8165a52c1f42f19982d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/478cbb0095a50a94118c8165a52c1f42f19982d5/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaf851288ed31090afd924eeb22f5e0f202151d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf851288ed31090afd924eeb22f5e0f202151d4", "html_url": "https://github.com/rust-lang/rust/commit/eaf851288ed31090afd924eeb22f5e0f202151d4"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "666d418cc0e2f5bc65e107e22e1416de19f0d179", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/478cbb0095a50a94118c8165a52c1f42f19982d5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/478cbb0095a50a94118c8165a52c1f42f19982d5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=478cbb0095a50a94118c8165a52c1f42f19982d5", "patch": "@@ -2295,24 +2295,20 @@ impl Clean<Item> for (&hir::MacroDef<'_>, Option<Symbol>) {\n             )\n         } else {\n             let vis = item.vis.clean(cx);\n+            let vis_printed_with_space =\n+                vis.print_with_space(cx.tcx, cx.tcx.hir().local_def_id(item.hir_id).to_def_id());\n \n             if matchers.len() <= 1 {\n                 format!(\n                     \"{}macro {}{} {{\\n    ...\\n}}\",\n-                    vis.print_with_space(\n-                        cx.tcx,\n-                        cx.tcx.hir().local_def_id(item.hir_id).to_def_id()\n-                    ),\n+                    vis_printed_with_space,\n                     name,\n                     matchers.iter().map(|span| span.to_src(cx)).collect::<String>(),\n                 )\n             } else {\n                 format!(\n                     \"{}macro {} {{\\n{}}}\",\n-                    vis.print_with_space(\n-                        cx.tcx,\n-                        cx.tcx.hir().local_def_id(item.hir_id).to_def_id()\n-                    ),\n+                    vis_printed_with_space,\n                     name,\n                     matchers\n                         .iter()"}]}