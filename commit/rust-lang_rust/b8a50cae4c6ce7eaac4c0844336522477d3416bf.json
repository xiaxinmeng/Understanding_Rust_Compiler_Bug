{"sha": "b8a50cae4c6ce7eaac4c0844336522477d3416bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4YTUwY2FlNGM2Y2U3ZWFhYzRjMDg0NDMzNjUyMjQ3N2QzNDE2YmY=", "commit": {"author": {"name": "Zachery Gyurkovitz", "email": "zgyurkovitz@gmail.com", "date": "2019-08-01T05:24:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-01T05:24:57Z"}, "message": "Fix `for on` typo", "tree": {"sha": "7a35b3662dfd6532276edad0597ad6eca07b5303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a35b3662dfd6532276edad0597ad6eca07b5303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8a50cae4c6ce7eaac4c0844336522477d3416bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdQnepCRBK7hj4Ov3rIwAAdHIIADTEPpRz7qGWkwWF4LLzcaIV\nodKkEL+u8iDwbDusFahpxEOyuuUPNhKPERXxgTXLXV3CGQ8FFKHwrvLvW7tJD6b+\ngepaLTvldHBmyAdPgzuunRf2LYMHfjgK6R8evaQu25D9nmQ6r4SRh4/w2r52bM6h\nNnjaVpjp091jISq5NOdYFbtZT6KU1O9kzHQ5KpL27tBKcxe41pMyIgT85CEFeRdV\nMLKJTcCcyLBhM2ZbcTI9ZDcMHbk1mmvtcS9defbH591Eo/8ve5GnJg8oIvtkBtyY\nqBRVnSXjpYmroIAm+W0LrFXczoJ5v5x1k3LOUgo/TYKsb6bY6oXJvDSztmNftg4=\n=qfil\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a35b3662dfd6532276edad0597ad6eca07b5303\nparent d1b4fc9853d80b3953dd5f2bae9d5d70ef7665ab\nauthor Zachery Gyurkovitz <zgyurkovitz@gmail.com> 1564637097 -0700\ncommitter GitHub <noreply@github.com> 1564637097 -0700\n\nFix `for on` typo"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a50cae4c6ce7eaac4c0844336522477d3416bf", "html_url": "https://github.com/rust-lang/rust/commit/b8a50cae4c6ce7eaac4c0844336522477d3416bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8a50cae4c6ce7eaac4c0844336522477d3416bf/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1b4fc9853d80b3953dd5f2bae9d5d70ef7665ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b4fc9853d80b3953dd5f2bae9d5d70ef7665ab", "html_url": "https://github.com/rust-lang/rust/commit/d1b4fc9853d80b3953dd5f2bae9d5d70ef7665ab"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e45688309912defecd46c5bcdabe1b51df8d5640", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b8a50cae4c6ce7eaac4c0844336522477d3416bf/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8a50cae4c6ce7eaac4c0844336522477d3416bf/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=b8a50cae4c6ce7eaac4c0844336522477d3416bf", "patch": "@@ -690,7 +690,7 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for on casts between numerical types that may\n+    /// **What it does:** Checks for casts between numerical types that may\n     /// truncate large values. This is expected behavior, so the cast is `Allow` by\n     /// default.\n     ///\n@@ -735,7 +735,7 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for on casts between numerical types that may\n+    /// **What it does:** Checks for casts between numerical types that may\n     /// be replaced by safe conversion functions.\n     ///\n     /// **Why is this bad?** Rust's `as` keyword will perform many kinds of"}]}