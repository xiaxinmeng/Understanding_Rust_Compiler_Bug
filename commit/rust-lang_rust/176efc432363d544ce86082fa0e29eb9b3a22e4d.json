{"sha": "176efc432363d544ce86082fa0e29eb9b3a22e4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NmVmYzQzMjM2M2Q1NDRjZTg2MDgyZmEwZTI5ZWI5YjNhMjJlNGQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-12-29T10:16:22Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-12-30T10:45:59Z"}, "message": "Inert doc comments.", "tree": {"sha": "49b9cf3ab2879e3a2933bef4bffc5a9e5e39bb20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49b9cf3ab2879e3a2933bef4bffc5a9e5e39bb20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/176efc432363d544ce86082fa0e29eb9b3a22e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/176efc432363d544ce86082fa0e29eb9b3a22e4d", "html_url": "https://github.com/rust-lang/rust/commit/176efc432363d544ce86082fa0e29eb9b3a22e4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/176efc432363d544ce86082fa0e29eb9b3a22e4d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afcd5c16b7d268ca64ca274366276568d0844cc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/afcd5c16b7d268ca64ca274366276568d0844cc3", "html_url": "https://github.com/rust-lang/rust/commit/afcd5c16b7d268ca64ca274366276568d0844cc3"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "7630e3e8950c17268d2e0db178f9c3a2755f0a6f", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/176efc432363d544ce86082fa0e29eb9b3a22e4d/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/176efc432363d544ce86082fa0e29eb9b3a22e4d/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=176efc432363d544ce86082fa0e29eb9b3a22e4d", "patch": "@@ -512,13 +512,15 @@ fn resolve_local<'tcx>(\n \n     /// Returns `true` if `pat` match the `P&` non-terminal.\n     ///\n+    /// ```text\n     ///     P& = ref X\n     ///        | StructName { ..., P&, ... }\n     ///        | VariantName(..., P&, ...)\n     ///        | [ ..., P&, ... ]\n     ///        | ( ..., P&, ... )\n     ///        | ... \"|\" P& \"|\" ...\n     ///        | box P&\n+    /// ```\n     fn is_binding_pat(pat: &hir::Pat<'_>) -> bool {\n         // Note that the code below looks for *explicit* refs only, that is, it won't\n         // know about *implicit* refs as introduced in #42640.\n@@ -575,6 +577,7 @@ fn resolve_local<'tcx>(\n \n     /// If `expr` matches the `E&` grammar, then records an extended rvalue scope as appropriate:\n     ///\n+    /// ```text\n     ///     E& = & ET\n     ///        | StructName { ..., f: E&, ... }\n     ///        | [ ..., E&, ... ]\n@@ -583,6 +586,7 @@ fn resolve_local<'tcx>(\n     ///        | box E&\n     ///        | E& as ...\n     ///        | ( E& )\n+    /// ```\n     fn record_rvalue_scope_if_borrow_expr<'tcx>(\n         visitor: &mut RegionResolutionVisitor<'tcx>,\n         expr: &hir::Expr<'_>,\n@@ -623,11 +627,13 @@ fn resolve_local<'tcx>(\n     /// More formally, if `expr` matches the grammar `ET`, record the rvalue scope of the matching\n     /// `<rvalue>` as `blk_id`:\n     ///\n+    /// ```text\n     ///     ET = *ET\n     ///        | ET[...]\n     ///        | ET.f\n     ///        | (ET)\n     ///        | <rvalue>\n+    /// ```\n     ///\n     /// Note: ET is intended to match \"rvalues or places based on rvalues\".\n     fn record_rvalue_scope<'tcx>("}]}