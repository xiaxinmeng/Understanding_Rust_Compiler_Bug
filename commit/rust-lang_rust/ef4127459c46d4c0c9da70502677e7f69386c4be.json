{"sha": "ef4127459c46d4c0c9da70502677e7f69386c4be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNDEyNzQ1OWM0NmQ0YzBjOWRhNzA1MDI2NzdlN2Y2OTM4NmM0YmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-24T23:03:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-24T23:03:47Z"}, "message": "Auto merge of #1599 - camelid:default-args-const, r=RalfJung\n\nMake `miri_default_args()` a constant\n\nFeel free to close this if this is intentionally not a constant.", "tree": {"sha": "ef96120df1b6f507bd9b1171dfbddbdca5c261ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef96120df1b6f507bd9b1171dfbddbdca5c261ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef4127459c46d4c0c9da70502677e7f69386c4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef4127459c46d4c0c9da70502677e7f69386c4be", "html_url": "https://github.com/rust-lang/rust/commit/ef4127459c46d4c0c9da70502677e7f69386c4be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef4127459c46d4c0c9da70502677e7f69386c4be/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b1f8a00fd594480940fc0104388a41883d27794", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b1f8a00fd594480940fc0104388a41883d27794", "html_url": "https://github.com/rust-lang/rust/commit/1b1f8a00fd594480940fc0104388a41883d27794"}, {"sha": "05e9ae042c83345d00d6abba2e4f567b163a90f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/05e9ae042c83345d00d6abba2e4f567b163a90f7", "html_url": "https://github.com/rust-lang/rust/commit/05e9ae042c83345d00d6abba2e4f567b163a90f7"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "cef71a9889f128cebeb6674e2001467e34d0b145", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef4127459c46d4c0c9da70502677e7f69386c4be/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4127459c46d4c0c9da70502677e7f69386c4be/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=ef4127459c46d4c0c9da70502677e7f69386c4be", "patch": "@@ -109,7 +109,7 @@ fn main() {\n                 }\n             })\n             .collect();\n-        args.splice(1..1, miri::miri_default_args().iter().map(ToString::to_string));\n+        args.splice(1..1, miri::MIRI_DEFAULT_ARGS.iter().map(ToString::to_string));\n         // file to process\n         args.push(path.display().to_string());\n "}, {"sha": "5769590ad094e299c43328a07d33575d502b9778", "filename": "src/bin/miri.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef4127459c46d4c0c9da70502677e7f69386c4be/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4127459c46d4c0c9da70502677e7f69386c4be/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=ef4127459c46d4c0c9da70502677e7f69386c4be", "patch": "@@ -153,7 +153,7 @@ fn run_compiler(mut args: Vec<String>, callbacks: &mut (dyn rustc_driver::Callba\n \n     // Some options have different defaults in Miri than in plain rustc; apply those by making\n     // them the first arguments after the binary name (but later arguments can overwrite them).\n-    args.splice(1..1, miri::miri_default_args().iter().map(ToString::to_string));\n+    args.splice(1..1, miri::MIRI_DEFAULT_ARGS.iter().map(ToString::to_string));\n \n     // Invoke compiler, and handle return code.\n     let exit_code = rustc_driver::catch_with_exit_code(move || {"}, {"sha": "d4802f3b11fa48076e0eab8be9cbeb688b8ce647", "filename": "src/lib.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ef4127459c46d4c0c9da70502677e7f69386c4be/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef4127459c46d4c0c9da70502677e7f69386c4be/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ef4127459c46d4c0c9da70502677e7f69386c4be", "patch": "@@ -77,12 +77,10 @@ pub use crate::sync::{\n \n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power.\n-pub fn miri_default_args() -> &'static [&'static str] {\n-    &[\n-        \"-Zalways-encode-mir\",\n-        \"-Zmir-emit-retag\",\n-        \"-Zmir-opt-level=0\",\n-        \"--cfg=miri\",\n-        \"-Cdebug-assertions=on\",\n-    ]\n-}\n+pub const MIRI_DEFAULT_ARGS: &[&str] = &[\n+    \"-Zalways-encode-mir\",\n+    \"-Zmir-emit-retag\",\n+    \"-Zmir-opt-level=0\",\n+    \"--cfg=miri\",\n+    \"-Cdebug-assertions=on\",\n+];"}]}