{"sha": "bd08889d689218d8c2e31aed6b064648e6e97f16", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMDg4ODlkNjg5MjE4ZDhjMmUzMWFlZDZiMDY0NjQ4ZTZlOTdmMTY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T21:44:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:31Z"}, "message": "librustc: De-`@mut` `IrMaps::capture_info_map`", "tree": {"sha": "fa6bff3e21d62651b251ca5e739b9909670f5653", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa6bff3e21d62651b251ca5e739b9909670f5653"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd08889d689218d8c2e31aed6b064648e6e97f16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd08889d689218d8c2e31aed6b064648e6e97f16", "html_url": "https://github.com/rust-lang/rust/commit/bd08889d689218d8c2e31aed6b064648e6e97f16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd08889d689218d8c2e31aed6b064648e6e97f16/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30b8f8b913710ce867c6292ea9599d686a8325e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/30b8f8b913710ce867c6292ea9599d686a8325e7", "html_url": "https://github.com/rust-lang/rust/commit/30b8f8b913710ce867c6292ea9599d686a8325e7"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f754842c9f7dfbae069b8e745292b5f1e63b0f6f", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd08889d689218d8c2e31aed6b064648e6e97f16/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd08889d689218d8c2e31aed6b064648e6e97f16/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=bd08889d689218d8c2e31aed6b064648e6e97f16", "patch": "@@ -249,7 +249,7 @@ struct IrMaps {\n     num_vars: Cell<uint>,\n     live_node_map: RefCell<HashMap<NodeId, LiveNode>>,\n     variable_map: RefCell<HashMap<NodeId, Variable>>,\n-    capture_info_map: HashMap<NodeId, @~[CaptureInfo]>,\n+    capture_info_map: RefCell<HashMap<NodeId, @~[CaptureInfo]>>,\n     var_kinds: ~[VarKind],\n     lnks: ~[LiveNodeKind],\n }\n@@ -266,7 +266,7 @@ fn IrMaps(tcx: ty::ctxt,\n         num_vars: Cell::new(0),\n         live_node_map: RefCell::new(HashMap::new()),\n         variable_map: RefCell::new(HashMap::new()),\n-        capture_info_map: HashMap::new(),\n+        capture_info_map: RefCell::new(HashMap::new()),\n         var_kinds: ~[],\n         lnks: ~[],\n     }\n@@ -334,11 +334,13 @@ impl IrMaps {\n     }\n \n     pub fn set_captures(&mut self, node_id: NodeId, cs: ~[CaptureInfo]) {\n-        self.capture_info_map.insert(node_id, @cs);\n+        let mut capture_info_map = self.capture_info_map.borrow_mut();\n+        capture_info_map.get().insert(node_id, @cs);\n     }\n \n     pub fn captures(&mut self, expr: &Expr) -> @~[CaptureInfo] {\n-        match self.capture_info_map.find(&expr.id) {\n+        let capture_info_map = self.capture_info_map.borrow();\n+        match capture_info_map.get().find(&expr.id) {\n           Some(&caps) => caps,\n           None => {\n             self.tcx.sess.span_bug(expr.span, \"no registered caps\");"}]}