{"sha": "254fc50bc14d83c54283220ed39e33ce06241eef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NGZjNTBiYzE0ZDgzYzU0MjgzMjIwZWQzOWUzM2NlMDYyNDFlZWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-21T09:32:12Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-28T06:53:44Z"}, "message": "fmt", "tree": {"sha": "bb7b1e3c34e0c6a943eb65ab66d306f596d4bf53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb7b1e3c34e0c6a943eb65ab66d306f596d4bf53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/254fc50bc14d83c54283220ed39e33ce06241eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/254fc50bc14d83c54283220ed39e33ce06241eef", "html_url": "https://github.com/rust-lang/rust/commit/254fc50bc14d83c54283220ed39e33ce06241eef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/254fc50bc14d83c54283220ed39e33ce06241eef/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c7463aa5af77915041baf0acce4bd29f88029c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c7463aa5af77915041baf0acce4bd29f88029c", "html_url": "https://github.com/rust-lang/rust/commit/c4c7463aa5af77915041baf0acce4bd29f88029c"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "4974ef63f5db6b408117611925fc59600f4a8557", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/254fc50bc14d83c54283220ed39e33ce06241eef/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/254fc50bc14d83c54283220ed39e33ce06241eef/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=254fc50bc14d83c54283220ed39e33ce06241eef", "patch": "@@ -1,12 +1,12 @@\n #![feature(inner_deref)]\n \n use std::env;\n+use std::ffi::OsString;\n use std::fs::{self, File};\n use std::io::{self, BufRead, Write};\n use std::ops::Not;\n use std::path::{Path, PathBuf};\n use std::process::Command;\n-use std::ffi::OsString;\n \n use rustc_version::VersionMeta;\n \n@@ -265,7 +265,8 @@ fn setup(subcommand: MiriCommand) {\n             let sysroot = std::str::from_utf8(&sysroot).unwrap();\n             let sysroot = Path::new(sysroot.trim_end_matches('\\n'));\n             // Check for `$SYSROOT/lib/rustlib/src/rust/src`; test if that contains `libstd/lib.rs`.\n-            let rustup_src = sysroot.join(\"lib\").join(\"rustlib\").join(\"src\").join(\"rust\").join(\"src\");\n+            let rustup_src =\n+                sysroot.join(\"lib\").join(\"rustlib\").join(\"src\").join(\"rust\").join(\"src\");\n             if !rustup_src.join(\"libstd\").join(\"lib.rs\").exists() {\n                 // Ask the user to install the `rust-src` component, and use that.\n                 let mut cmd = Command::new(\"rustup\");\n@@ -363,8 +364,7 @@ path = \"lib.rs\"\n     let sysroot = if target == &host { dir.join(\"HOST\") } else { PathBuf::from(dir) };\n     std::env::set_var(\"MIRI_SYSROOT\", &sysroot); // pass the env var to the processes we spawn, which will turn it into \"--sysroot\" flags\n     // Figure out what to print.\n-    let print_sysroot = subcommand == MiriCommand::Setup\n-        && has_arg_flag(\"--print-sysroot\"); // whether we just print the sysroot path\n+    let print_sysroot = subcommand == MiriCommand::Setup && has_arg_flag(\"--print-sysroot\"); // whether we just print the sysroot path\n     if print_sysroot {\n         // Print just the sysroot and nothing else; this way we do not need any escaping.\n         println!(\"{}\", sysroot.display());\n@@ -564,6 +564,8 @@ fn main() {\n         // dependencies get dispatched to `rustc`, the final test/binary to `miri`.\n         inside_cargo_rustc();\n     } else {\n-        show_error(format!(\"`cargo-miri` must be called with either `miri` or `rustc` as first argument.\"))\n+        show_error(format!(\n+            \"`cargo-miri` must be called with either `miri` or `rustc` as first argument.\"\n+        ))\n     }\n }"}]}