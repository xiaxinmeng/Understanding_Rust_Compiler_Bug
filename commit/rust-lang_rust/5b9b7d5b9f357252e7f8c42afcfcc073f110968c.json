{"sha": "5b9b7d5b9f357252e7f8c42afcfcc073f110968c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViOWI3ZDViOWYzNTcyNTJlN2Y4YzQyYWZjZmNjMDczZjExMDk2OGM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-21T13:20:03Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-21T13:21:08Z"}, "message": "Do not collapse block around expr with condition on match arm\n\nCloses #2376.", "tree": {"sha": "c395dc937297b7d549933e2c1af0a55f3b7b1c2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c395dc937297b7d549933e2c1af0a55f3b7b1c2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b9b7d5b9f357252e7f8c42afcfcc073f110968c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9b7d5b9f357252e7f8c42afcfcc073f110968c", "html_url": "https://github.com/rust-lang/rust/commit/5b9b7d5b9f357252e7f8c42afcfcc073f110968c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b9b7d5b9f357252e7f8c42afcfcc073f110968c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88589f2ad891f115e44cab2f37993885c82c40d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/88589f2ad891f115e44cab2f37993885c82c40d8", "html_url": "https://github.com/rust-lang/rust/commit/88589f2ad891f115e44cab2f37993885c82c40d8"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "83ff70ea196887232d334701796c50e656c3ec62", "filename": "src/matches.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5b9b7d5b9f357252e7f8c42afcfcc073f110968c/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b9b7d5b9f357252e7f8c42afcfcc073f110968c/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=5b9b7d5b9f357252e7f8c42afcfcc073f110968c", "patch": "@@ -309,7 +309,7 @@ fn flatten_arm_body<'a>(context: &'a RewriteContext, body: &'a ast::Expr) -> (bo\n         {\n             if let ast::StmtKind::Expr(ref expr) = block.stmts[0].node {\n                 (\n-                    !context.config.force_multiline_blocks() && can_extend_match_arm_body(expr),\n+                    !context.config.force_multiline_blocks() && can_flatten_block_around_this(expr),\n                     &*expr,\n                 )\n             } else {\n@@ -503,15 +503,17 @@ fn nop_block_collapse(block_str: Option<String>, budget: usize) -> Option<String\n     })\n }\n \n-fn can_extend_match_arm_body(body: &ast::Expr) -> bool {\n+fn can_flatten_block_around_this(body: &ast::Expr) -> bool {\n     match body.node {\n         // We do not allow `if` to stay on the same line, since we could easily mistake\n         // `pat => if cond { ... }` and `pat if cond => { ... }`.\n         ast::ExprKind::If(..) | ast::ExprKind::IfLet(..) => false,\n-        ast::ExprKind::ForLoop(..)\n-        | ast::ExprKind::Loop(..)\n-        | ast::ExprKind::While(..)\n-        | ast::ExprKind::WhileLet(..)\n+        // We do not allow collapsing a block around expression with condition\n+        // to avoid it being cluttered with match arm.\n+        ast::ExprKind::ForLoop(..) | ast::ExprKind::While(..) | ast::ExprKind::WhileLet(..) => {\n+            false\n+        }\n+        ast::ExprKind::Loop(..)\n         | ast::ExprKind::Match(..)\n         | ast::ExprKind::Block(..)\n         | ast::ExprKind::Closure(..)\n@@ -525,7 +527,7 @@ fn can_extend_match_arm_body(body: &ast::Expr) -> bool {\n         | ast::ExprKind::Box(ref expr)\n         | ast::ExprKind::Try(ref expr)\n         | ast::ExprKind::Unary(_, ref expr)\n-        | ast::ExprKind::Cast(ref expr, _) => can_extend_match_arm_body(expr),\n+        | ast::ExprKind::Cast(ref expr, _) => can_flatten_block_around_this(expr),\n         _ => false,\n     }\n }"}, {"sha": "31034f4940226e50245b256dba11c21f777c2510", "filename": "tests/source/match.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5b9b7d5b9f357252e7f8c42afcfcc073f110968c/tests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b9b7d5b9f357252e7f8c42afcfcc073f110968c/tests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch.rs?ref=5b9b7d5b9f357252e7f8c42afcfcc073f110968c", "patch": "@@ -462,3 +462,26 @@ fn match_with_beginning_vert() {\n         | Foo::C => println!(\"C\"),\n     }\n }\n+\n+// #2376\n+// Preserve block around expressions with condition.\n+fn issue_2376() {\n+    let mut x = None;\n+    match x {\n+        Some(0) => {\n+            for i in 1..11 {\n+                x = Some(i);\n+            }\n+        }\n+        Some(ref mut y) => {\n+            while *y < 10 {\n+                *y += 1;\n+            }\n+        }\n+        None => {\n+            while let None = x {\n+                x = Some(10);\n+            }\n+        }\n+    }\n+}"}, {"sha": "087fb80ef09266cfc4625ae281867dca8c1811e4", "filename": "tests/target/match.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5b9b7d5b9f357252e7f8c42afcfcc073f110968c/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b9b7d5b9f357252e7f8c42afcfcc073f110968c/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=5b9b7d5b9f357252e7f8c42afcfcc073f110968c", "patch": "@@ -493,3 +493,26 @@ fn match_with_beginning_vert() {\n         | Foo::C => println!(\"C\"),\n     }\n }\n+\n+// #2376\n+// Preserve block around expressions with condition.\n+fn issue_2376() {\n+    let mut x = None;\n+    match x {\n+        Some(0) => {\n+            for i in 1..11 {\n+                x = Some(i);\n+            }\n+        }\n+        Some(ref mut y) => {\n+            while *y < 10 {\n+                *y += 1;\n+            }\n+        }\n+        None => {\n+            while let None = x {\n+                x = Some(10);\n+            }\n+        }\n+    }\n+}"}]}