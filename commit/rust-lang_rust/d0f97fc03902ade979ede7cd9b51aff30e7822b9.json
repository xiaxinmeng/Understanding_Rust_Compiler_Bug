{"sha": "d0f97fc03902ade979ede7cd9b51aff30e7822b9", "node_id": "C_kwDOAAsO6NoAKGQwZjk3ZmMwMzkwMmFkZTk3OWVkZTdjZDliNTFhZmYzMGU3ODIyYjk", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-16T13:10:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-12-16T13:11:04Z"}, "message": "Rustup to rustc 1.59.0-nightly (c5ecc1570 2021-12-15)", "tree": {"sha": "24dab3c012bebf403751f1f3a57aea5d236bd4ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24dab3c012bebf403751f1f3a57aea5d236bd4ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0f97fc03902ade979ede7cd9b51aff30e7822b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f97fc03902ade979ede7cd9b51aff30e7822b9", "html_url": "https://github.com/rust-lang/rust/commit/d0f97fc03902ade979ede7cd9b51aff30e7822b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0f97fc03902ade979ede7cd9b51aff30e7822b9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d084fca557bb824dc0f31a8a5b056c4a43d5a487", "url": "https://api.github.com/repos/rust-lang/rust/commits/d084fca557bb824dc0f31a8a5b056c4a43d5a487", "html_url": "https://github.com/rust-lang/rust/commit/d084fca557bb824dc0f31a8a5b056c4a43d5a487"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "dd09656248022bf40e868c4f9c8800776bb460b6", "filename": "build_sysroot/Cargo.lock", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0f97fc03902ade979ede7cd9b51aff30e7822b9/build_sysroot%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d0f97fc03902ade979ede7cd9b51aff30e7822b9/build_sysroot%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.lock?ref=d0f97fc03902ade979ede7cd9b51aff30e7822b9", "patch": "@@ -56,7 +56,7 @@ dependencies = [\n \n [[package]]\n name = \"compiler_builtins\"\n-version = \"0.1.55\"\n+version = \"0.1.66\"\n dependencies = [\n  \"rustc-std-workspace-core\",\n ]\n@@ -132,9 +132,9 @@ dependencies = [\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.109\"\n+version = \"0.2.112\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f98a04dce437184842841303488f70d0188c5f51437d2a834dc097eafa909a01\"\n+checksum = \"1b03d17f364a3a042d5e5d46b053bbbf82c92c9430c592dd4c064dc6ee997125\"\n dependencies = [\n  \"rustc-std-workspace-core\",\n ]"}, {"sha": "561e2ed7b001732fa634f03b4f45d52f5922353c", "filename": "build_system/prepare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0f97fc03902ade979ede7cd9b51aff30e7822b9/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f97fc03902ade979ede7cd9b51aff30e7822b9/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=d0f97fc03902ade979ede7cd9b51aff30e7822b9", "patch": "@@ -92,7 +92,7 @@ fn prepare_sysroot() {\n     clone_repo(\n         \"build_sysroot/compiler-builtins\",\n         \"https://github.com/rust-lang/compiler-builtins.git\",\n-        \"0.1.55\",\n+        \"0.1.66\",\n     );\n     apply_patches(\"compiler-builtins\", Path::new(\"build_sysroot/compiler-builtins\"));\n }"}, {"sha": "c1d856702a9c335c6bf906e2a517ba4699f229fc", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0f97fc03902ade979ede7cd9b51aff30e7822b9/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/d0f97fc03902ade979ede7cd9b51aff30e7822b9/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=d0f97fc03902ade979ede7cd9b51aff30e7822b9", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2021-12-09\"\n+channel = \"nightly-2021-12-16\"\n components = [\"rust-src\", \"rustc-dev\", \"llvm-tools-preview\"]"}, {"sha": "46c3b5b7f11adf890e5b4b27e321762ca792a096", "filename": "scripts/setup_rust_fork.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0f97fc03902ade979ede7cd9b51aff30e7822b9/scripts%2Fsetup_rust_fork.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d0f97fc03902ade979ede7cd9b51aff30e7822b9/scripts%2Fsetup_rust_fork.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fsetup_rust_fork.sh?ref=d0f97fc03902ade979ede7cd9b51aff30e7822b9", "patch": "@@ -33,7 +33,7 @@ index d95b5b7f17f..00b6f0e3635 100644\n  [dependencies]\n  core = { path = \"../core\" }\n -compiler_builtins = { version = \"0.1.40\", features = ['rustc-dep-of-std'] }\n-+compiler_builtins = { version = \"0.1.53\", features = ['rustc-dep-of-std', 'no-asm'] }\n++compiler_builtins = { version = \"0.1.66\", features = ['rustc-dep-of-std', 'no-asm'] }\n \n  [dev-dependencies]\n  rand = \"0.7\""}, {"sha": "93384bc55110167456e5e63ad52617d235456d6a", "filename": "src/inline_asm.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d0f97fc03902ade979ede7cd9b51aff30e7822b9/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f97fc03902ade979ede7cd9b51aff30e7822b9/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=d0f97fc03902ade979ede7cd9b51aff30e7822b9", "patch": "@@ -317,10 +317,14 @@ impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n         let mut new_slot = |x| new_slot_fn(&mut slot_size, x);\n \n         // Allocate stack slots for saving clobbered registers\n-        let abi_clobber =\n-            InlineAsmClobberAbi::parse(self.arch, &self.tcx.sess.target, Symbol::intern(\"C\"))\n-                .unwrap()\n-                .clobbered_regs();\n+        let abi_clobber = InlineAsmClobberAbi::parse(\n+            self.arch,\n+            |feature| self.tcx.sess.target_features.contains(&Symbol::intern(feature)),\n+            &self.tcx.sess.target,\n+            Symbol::intern(\"C\"),\n+        )\n+        .unwrap()\n+        .clobbered_regs();\n         for (i, reg) in self.registers.iter().enumerate().filter_map(|(i, r)| r.map(|r| (i, r))) {\n             let mut need_save = true;\n             // If the register overlaps with a register clobbered by function call, then"}]}