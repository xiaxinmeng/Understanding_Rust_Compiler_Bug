{"sha": "ee995dbfd441e20bba21306c41aec0049c1d7da4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlOTk1ZGJmZDQ0MWUyMGJiYTIxMzA2YzQxYWVjMDA0OWMxZDdkYTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-31T16:51:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-31T17:11:36Z"}, "message": "fix: fix shell injection in task spawning\n\ncloses #9058", "tree": {"sha": "0e81cc310ee7c9ee908c864c4f7eb2177283ccb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e81cc310ee7c9ee908c864c4f7eb2177283ccb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee995dbfd441e20bba21306c41aec0049c1d7da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee995dbfd441e20bba21306c41aec0049c1d7da4", "html_url": "https://github.com/rust-lang/rust/commit/ee995dbfd441e20bba21306c41aec0049c1d7da4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee995dbfd441e20bba21306c41aec0049c1d7da4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "020610f4539f5d553179e0b4dae46cae9db93e41", "url": "https://api.github.com/repos/rust-lang/rust/commits/020610f4539f5d553179e0b4dae46cae9db93e41", "html_url": "https://github.com/rust-lang/rust/commit/020610f4539f5d553179e0b4dae46cae9db93e41"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "947b3f2e46e7b4332d4e55e87110ee787690e313", "filename": "editors/code/src/tasks.ts", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ee995dbfd441e20bba21306c41aec0049c1d7da4/editors%2Fcode%2Fsrc%2Ftasks.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ee995dbfd441e20bba21306c41aec0049c1d7da4/editors%2Fcode%2Fsrc%2Ftasks.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftasks.ts?ref=ee995dbfd441e20bba21306c41aec0049c1d7da4", "patch": "@@ -80,7 +80,7 @@ export async function buildCargoTask(\n     throwOnError: boolean = false\n ): Promise<vscode.Task> {\n \n-    let exec: vscode.ShellExecution | undefined = undefined;\n+    let exec: vscode.ProcessExecution | vscode.ShellExecution | undefined = undefined;\n \n     if (customRunner) {\n         const runnerCommand = `${customRunner}.buildShellExecution`;\n@@ -105,13 +105,13 @@ export async function buildCargoTask(\n \n     if (!exec) {\n         // Check whether we must use a user-defined substitute for cargo.\n-        const cargoCommand = definition.overrideCargo ? definition.overrideCargo : toolchain.cargoPath();\n+        // Split on spaces to allow overrides like \"wrapper cargo\".\n+        const overrideCargo = definition.overrideCargo ?? definition.overrideCargo;\n+        const cargoCommand = overrideCargo?.split(\" \") ?? [toolchain.cargoPath()];\n \n-        // Prepare the whole command as one line. It is required if user has provided override command which contains spaces,\n-        // for example \"wrapper cargo\". Without manual preparation the overridden command will be quoted and fail to execute.\n-        const fullCommand = [cargoCommand, ...args].join(\" \");\n+        const fullCommand = [...cargoCommand, ...args];\n \n-        exec = new vscode.ShellExecution(fullCommand, definition);\n+        exec = new vscode.ProcessExecution(fullCommand[0], fullCommand.slice(1), definition);\n     }\n \n     return new vscode.Task("}]}