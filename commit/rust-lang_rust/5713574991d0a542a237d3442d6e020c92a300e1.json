{"sha": "5713574991d0a542a237d3442d6e020c92a300e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MTM1NzQ5OTFkMGE1NDJhMjM3ZDM0NDJkNmUwMjBjOTJhMzAwZTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-31T12:23:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-31T12:23:08Z"}, "message": "Auto merge of #5665 - flip1995:rustup, r=matthiaskrgr\n\nRustup\n\nr? @matthiaskrgr\n\nI finally got to doing the rustup. Sorry for taking so long, I was busy the last few days.\n\n@ebroto FYI: I had to add b6c58f0 to make Clippy pass the rustc test suite.\n\nchangelog: none", "tree": {"sha": "e47ebf5b7d00bb96fd727a73d7361abe420bdaca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e47ebf5b7d00bb96fd727a73d7361abe420bdaca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5713574991d0a542a237d3442d6e020c92a300e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5713574991d0a542a237d3442d6e020c92a300e1", "html_url": "https://github.com/rust-lang/rust/commit/5713574991d0a542a237d3442d6e020c92a300e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5713574991d0a542a237d3442d6e020c92a300e1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ea7cd165ad6705603852771bf82cc2fd6560db5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea7cd165ad6705603852771bf82cc2fd6560db5", "html_url": "https://github.com/rust-lang/rust/commit/7ea7cd165ad6705603852771bf82cc2fd6560db5"}, {"sha": "37381d33a4761a064311dd95fbc54b5da6ad3766", "url": "https://api.github.com/repos/rust-lang/rust/commits/37381d33a4761a064311dd95fbc54b5da6ad3766", "html_url": "https://github.com/rust-lang/rust/commit/37381d33a4761a064311dd95fbc54b5da6ad3766"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "9c508fc0e4a1ac99c20c238bf78829f90745dae3", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5713574991d0a542a237d3442d6e020c92a300e1/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5713574991d0a542a237d3442d6e020c92a300e1/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=5713574991d0a542a237d3442d6e020c92a300e1", "patch": "@@ -111,7 +111,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n \n         let fn_def_id = cx.tcx.hir().local_def_id(hir_id);\n \n-        let preds = traits::elaborate_predicates(cx.tcx, cx.param_env.caller_bounds.iter().copied())\n+        let preds = traits::elaborate_predicates(cx.tcx, cx.param_env.caller_bounds.iter())\n             .filter(|p| !p.is_global())\n             .filter_map(|obligation| {\n                 if let ty::PredicateKind::Trait(poly_trait_ref, _) = obligation.predicate.kind() {\n@@ -173,14 +173,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                     !preds.is_empty() && {\n                         let ty_empty_region = cx.tcx.mk_imm_ref(cx.tcx.lifetimes.re_root_empty, ty);\n                         preds.iter().all(|t| {\n-                            let ty_params = &t\n-                                .skip_binder()\n-                                .trait_ref\n-                                .substs\n-                                .iter()\n-                                .skip(1)\n-                                .cloned()\n-                                .collect::<Vec<_>>();\n+                            let ty_params = &t.skip_binder().trait_ref.substs.iter().skip(1).collect::<Vec<_>>();\n                             implements_trait(cx, ty_empty_region, t.def_id(), ty_params)\n                         })\n                     },"}, {"sha": "5f794598052f6bbd7926008bae27bb30014e865e", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5713574991d0a542a237d3442d6e020c92a300e1/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5713574991d0a542a237d3442d6e020c92a300e1/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=5713574991d0a542a237d3442d6e020c92a300e1", "patch": "@@ -279,13 +279,12 @@ impl EarlyLintPass for Write {\n             if let (Some(fmt_str), expr) = self.check_tts(cx, &mac.args.inner_tokens(), true) {\n                 if fmt_str.symbol == Symbol::intern(\"\") {\n                     let mut applicability = Applicability::MachineApplicable;\n-                    let suggestion = expr.map_or_else(\n-                        move || {\n-                            applicability = Applicability::HasPlaceholders;\n-                            Cow::Borrowed(\"v\")\n-                        },\n-                        move |expr| snippet_with_applicability(cx, expr.span, \"v\", &mut applicability),\n-                    );\n+                    let suggestion = if let Some(e) = expr {\n+                        snippet_with_applicability(cx, e.span, \"v\", &mut applicability)\n+                    } else {\n+                        applicability = Applicability::HasPlaceholders;\n+                        Cow::Borrowed(\"v\")\n+                    };\n \n                     span_lint_and_sugg(\n                         cx,"}, {"sha": "4453ae5ce4414b221eb7784c41dc9114cdd3095f", "filename": "src/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5713574991d0a542a237d3442d6e020c92a300e1/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5713574991d0a542a237d3442d6e020c92a300e1/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=5713574991d0a542a237d3442d6e020c92a300e1", "patch": "@@ -1,6 +1,5 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![feature(rustc_private)]\n-#![feature(str_strip)]\n \n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)"}, {"sha": "7bd5f09f333dd2fd4fa8a36f7e4e388d249767cb", "filename": "tests/compile-test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5713574991d0a542a237d3442d6e020c92a300e1/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5713574991d0a542a237d3442d6e020c92a300e1/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=5713574991d0a542a237d3442d6e020c92a300e1", "patch": "@@ -213,6 +213,10 @@ fn run_ui_cargo(config: &mut compiletest::Config) {\n         Ok(result)\n     }\n \n+    if cargo::is_rustc_test_suite() {\n+        return;\n+    }\n+\n     config.mode = TestMode::Ui;\n     config.src_base = Path::new(\"tests\").join(\"ui-cargo\").canonicalize().unwrap();\n "}]}