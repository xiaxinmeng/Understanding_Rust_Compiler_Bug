{"sha": "cd114880800069d5a79c5bfb5c146110b078160c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMTE0ODgwODAwMDY5ZDVhNzljNWJmYjVjMTQ2MTEwYjA3ODE2MGM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-25T13:22:36Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-25T13:22:36Z"}, "message": "rustup 2015-09-24", "tree": {"sha": "242248f416ecc6eee023a929798bacdef25e63bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/242248f416ecc6eee023a929798bacdef25e63bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd114880800069d5a79c5bfb5c146110b078160c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd114880800069d5a79c5bfb5c146110b078160c", "html_url": "https://github.com/rust-lang/rust/commit/cd114880800069d5a79c5bfb5c146110b078160c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd114880800069d5a79c5bfb5c146110b078160c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "294d7d85861785a6f4799ff094dbf6cc77831d94", "url": "https://api.github.com/repos/rust-lang/rust/commits/294d7d85861785a6f4799ff094dbf6cc77831d94", "html_url": "https://github.com/rust-lang/rust/commit/294d7d85861785a6f4799ff094dbf6cc77831d94"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "5ff911c8ced655140905f01ff4115f32f2569041", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd114880800069d5a79c5bfb5c146110b078160c/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cd114880800069d5a79c5bfb5c146110b078160c/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=cd114880800069d5a79c5bfb5c146110b078160c", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.16\"\n+version = \"0.0.17\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\","}, {"sha": "be681efb257f22db146f69b19eb5f04fd2bdca66", "filename": "src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd114880800069d5a79c5bfb5c146110b078160c/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd114880800069d5a79c5bfb5c146110b078160c/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=cd114880800069d5a79c5bfb5c146110b078160c", "patch": "@@ -321,7 +321,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                 |o| match op {\n                     UnNot => constant_not(o),\n                     UnNeg => constant_negate(o),\n-                    UnUniq | UnDeref => Some(o),\n+                    UnDeref => Some(o),\n                 }),\n             ExprBinary(op, ref left, ref right) =>\n                 self.binop(op, left, right),"}, {"sha": "8fd8d0d15ac253172511b123de9386de8adf7fb1", "filename": "src/shadow.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cd114880800069d5a79c5bfb5c146110b078160c/src%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd114880800069d5a79c5bfb5c146110b078160c/src%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshadow.rs?ref=cd114880800069d5a79c5bfb5c146110b078160c", "patch": "@@ -140,7 +140,7 @@ fn check_pat(cx: &LateContext, pat: &Pat, init: &Option<&Expr>, span: Span,\n             },\n         PatBox(ref inner) => {\n             if let Some(ref initp) = *init {\n-                if let ExprBox(_, ref inner_init) = initp.node {\n+                if let ExprBox(ref inner_init) = initp.node {\n                     check_pat(cx, inner, &Some(&**inner_init), span, bindings);\n                 } else {\n                     check_pat(cx, inner, init, span, bindings);\n@@ -198,10 +198,8 @@ fn check_expr(cx: &LateContext, expr: &Expr, bindings: &mut Vec<(Name, Span)>) {\n     if in_external_macro(cx, expr.span) { return; }\n     match expr.node {\n         ExprUnary(_, ref e) | ExprField(ref e, _) |\n-        ExprTupField(ref e, _) | ExprAddrOf(_, ref e) | ExprBox(None, ref e)\n+        ExprTupField(ref e, _) | ExprAddrOf(_, ref e) | ExprBox(ref e)\n             => { check_expr(cx, e, bindings) },\n-        ExprBox(Some(ref place), ref e) => {\n-            check_expr(cx, place, bindings); check_expr(cx, e, bindings) }\n         ExprBlock(ref block) | ExprLoop(ref block, _) =>\n             { check_block(cx, block, bindings) },\n         //ExprCall\n@@ -254,11 +252,11 @@ fn check_ty(cx: &LateContext, ty: &Ty, bindings: &mut Vec<(Name, Span)>) {\n \n fn is_self_shadow(name: Name, expr: &Expr) -> bool {\n     match expr.node {\n-        ExprBox(_, ref inner) |\n+        ExprBox(ref inner) |\n         ExprAddrOf(_, ref inner) => is_self_shadow(name, inner),\n         ExprBlock(ref block) => block.stmts.is_empty() && block.expr.as_ref().\n             map_or(false, |ref e| is_self_shadow(name, e)),\n-        ExprUnary(op, ref inner) => (UnUniq == op || UnDeref == op) &&\n+        ExprUnary(op, ref inner) => (UnDeref == op) &&\n             is_self_shadow(name, inner),\n         ExprPath(_, ref path) => path_eq_name(name, path),\n         _ => false,\n@@ -278,7 +276,7 @@ fn contains_self(name: Name, expr: &Expr) -> bool {\n         ExprLit(_) => false,\n         // one subexpr\n         ExprUnary(_, ref e) | ExprField(ref e, _) |\n-        ExprTupField(ref e, _) | ExprAddrOf(_, ref e) | ExprBox(_, ref e) |\n+        ExprTupField(ref e, _) | ExprAddrOf(_, ref e) | ExprBox(ref e) |\n         ExprCast(ref e, _) =>\n             contains_self(name, e),\n         // two subexprs"}]}