{"sha": "522d4b0a354b60b1b69d15773197c4c3dba521a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMmQ0YjBhMzU0YjYwYjFiNjlkMTU3NzMxOTdjNGMzZGJhNTIxYTU=", "commit": {"author": {"name": "Sean Bowe", "email": "ewillbefull@gmail.com", "date": "2015-09-13T20:14:04Z"}, "committer": {"name": "Sean Bowe", "email": "ewillbefull@gmail.com", "date": "2015-09-13T20:14:04Z"}, "message": "Fixed regression in associated item resolution with default type parameters that reference Self in traits.", "tree": {"sha": "ef11c1e3431f5ceee32f0e156a3f525548e1717c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef11c1e3431f5ceee32f0e156a3f525548e1717c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/522d4b0a354b60b1b69d15773197c4c3dba521a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/522d4b0a354b60b1b69d15773197c4c3dba521a5", "html_url": "https://github.com/rust-lang/rust/commit/522d4b0a354b60b1b69d15773197c4c3dba521a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/522d4b0a354b60b1b69d15773197c4c3dba521a5/comments", "author": {"login": "ebfull", "id": 3794471, "node_id": "MDQ6VXNlcjM3OTQ0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3794471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfull", "html_url": "https://github.com/ebfull", "followers_url": "https://api.github.com/users/ebfull/followers", "following_url": "https://api.github.com/users/ebfull/following{/other_user}", "gists_url": "https://api.github.com/users/ebfull/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfull/subscriptions", "organizations_url": "https://api.github.com/users/ebfull/orgs", "repos_url": "https://api.github.com/users/ebfull/repos", "events_url": "https://api.github.com/users/ebfull/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfull/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebfull", "id": 3794471, "node_id": "MDQ6VXNlcjM3OTQ0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3794471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfull", "html_url": "https://github.com/ebfull", "followers_url": "https://api.github.com/users/ebfull/followers", "following_url": "https://api.github.com/users/ebfull/following{/other_user}", "gists_url": "https://api.github.com/users/ebfull/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfull/subscriptions", "organizations_url": "https://api.github.com/users/ebfull/orgs", "repos_url": "https://api.github.com/users/ebfull/repos", "events_url": "https://api.github.com/users/ebfull/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfull/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd230ff12481ebeba720fb1ac1f610d93bb74920", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd230ff12481ebeba720fb1ac1f610d93bb74920", "html_url": "https://github.com/rust-lang/rust/commit/fd230ff12481ebeba720fb1ac1f610d93bb74920"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "b5b5113c4870d5134c204c2d61f990eb5e9a060e", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/522d4b0a354b60b1b69d15773197c4c3dba521a5/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522d4b0a354b60b1b69d15773197c4c3dba521a5/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=522d4b0a354b60b1b69d15773197c4c3dba521a5", "patch": "@@ -413,9 +413,20 @@ fn create_substs_for_ast_path<'tcx>(\n     let mut type_substs = if param_mode == PathParamMode::Optional &&\n                              types_provided.is_empty() {\n         let mut substs = region_substs.clone();\n+\n         ty_param_defs\n             .iter()\n-            .map(|p| this.ty_infer(Some(p.clone()), Some(&mut substs), Some(TypeSpace), span))\n+            .map(|p| {\n+                if let Some(ref default) = p.default {\n+                    if self_ty.is_none() && default.has_self_ty() {\n+                        // There is no suitable inference default for a type parameter\n+                        // that references Self with no self-type provided.\n+                        return this.ty_infer(None, Some(&mut substs), Some(TypeSpace), span);\n+                    }\n+                }\n+\n+                this.ty_infer(Some(p.clone()), Some(&mut substs), Some(TypeSpace), span)\n+            })\n             .collect()\n     } else {\n         types_provided"}, {"sha": "751a42826d2717affdf6a51b3e8f81009c04ca04", "filename": "src/test/compile-fail/issue-28344.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/522d4b0a354b60b1b69d15773197c4c3dba521a5/src%2Ftest%2Fcompile-fail%2Fissue-28344.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522d4b0a354b60b1b69d15773197c4c3dba521a5/src%2Ftest%2Fcompile-fail%2Fissue-28344.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28344.rs?ref=522d4b0a354b60b1b69d15773197c4c3dba521a5", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::BitXor;\n+\n+fn main() {\n+    let x: u8 = BitXor::bitor(0 as u8, 0 as u8);\n+    //~^ ERROR must be specified\n+    //~| no associated item named\n+\n+    let g = BitXor::bitor;\n+    //~^ ERROR must be specified\n+    //~| no associated item named\n+}\n\\ No newline at end of file"}, {"sha": "5ec9cf430f1d1eec1c821a7e00c26c72ce539ab4", "filename": "src/test/compile-fail/unspecified-self-in-trait-ref.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/522d4b0a354b60b1b69d15773197c4c3dba521a5/src%2Ftest%2Fcompile-fail%2Funspecified-self-in-trait-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522d4b0a354b60b1b69d15773197c4c3dba521a5/src%2Ftest%2Fcompile-fail%2Funspecified-self-in-trait-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funspecified-self-in-trait-ref.rs?ref=522d4b0a354b60b1b69d15773197c4c3dba521a5", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Foo<A=Self> {\n+    fn foo();\n+}\n+\n+pub trait Bar<X=usize, A=Self> {\n+    fn foo();\n+}\n+\n+fn main() {\n+    let a = Foo::lol();\n+    //~^ ERROR no associated item named\n+    let b = Foo::<_>::lol();\n+    //~^ ERROR no associated item named\n+    let c = Bar::lol();\n+    //~^ ERROR no associated item named\n+    let d = Bar::<usize, _>::lol();\n+    //~^ ERROR no associated item named\n+}"}]}