{"sha": "554fad7bdac1655119f2450d3286463aa2290200", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NGZhZDdiZGFjMTY1NTExOWYyNDUwZDMyODY0NjNhYTIyOTAyMDA=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T03:16:46Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T12:54:50Z"}, "message": "Permit calls to default const fns of impl const", "tree": {"sha": "dd4f018045ae4e1de48f27cf464d2254157ee0c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd4f018045ae4e1de48f27cf464d2254157ee0c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554fad7bdac1655119f2450d3286463aa2290200", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDpmJoACgkQZSV3NIU3\nbZJGqhAAvB2JMVKxXO0OSB+7eyrvtN3gogmdPFKgFp+OYRtcz6/RHCoxG8pNd41p\nP0d9EJUfmNMsuz9RzBpu2ordt75XPKvFE1UXt+zMZNglHMLE+Vh77EGhWRuOCAUG\nxP72I9oqKzFrUoh1xYSahOiwZi89Ymv0kYRDqumvgtlocEJR6WqP5HLFWzFkpgOL\nMOgtEmLQNFrwkup3iGNVJkKE37purZkpIpvGBwytX47WGTwbNIjV1Azx18UwXhln\nylBTtqvUpWBxz/ZcsPP070sy7EMZhEhkxdwrDTLB7t2YDnLjyE+KAFoas4o6WxA6\nBNXOGD3k3jwdw7v/KI8u8V1jPndiHrjzR+kKRDPaopAs3b945aN77MnfDRGfErt+\nurZjZMF0oLivZ8OmAFTxZUdBtZH1OrxMBIJEfhnj+G2whnI3ZxP6kgUifBKNuHIP\nM3gEAr2kEH5ZpWGKI/NkqlRDP43Jn4Es7ZgkEsbWu+YMRTktZ8rQaGsuxDv0oW/3\nvH810Lvpg1s8Kh5EmIXfQdk8B6ExqMIFADTA7WQT0btAE30HmnhCCoS05nGzngun\nvrYR9xOxcTXtTI+yaivCi05zCbFCPKcqE/0+D4lCo0fmzKHourcUOuEWCQOIREEp\n7emr/4n+K+fabocUR/bQFGaPa3BJO3m5NLJLv+cewoTSoaE73lw=\n=Z/89\n-----END PGP SIGNATURE-----", "payload": "tree dd4f018045ae4e1de48f27cf464d2254157ee0c9\nparent 27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2\nauthor Deadbeef <ent3rm4n@gmail.com> 1625887006 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1625921690 +0800\n\nPermit calls to default const fns of impl const\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554fad7bdac1655119f2450d3286463aa2290200", "html_url": "https://github.com/rust-lang/rust/commit/554fad7bdac1655119f2450d3286463aa2290200", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554fad7bdac1655119f2450d3286463aa2290200/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2", "html_url": "https://github.com/rust-lang/rust/commit/27e863b3df28aeb9b1cfe693b1a6d09a289b7ad2"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "646ae8ced7eb442398cee5b2a3808cb8c5567a86", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/554fad7bdac1655119f2450d3286463aa2290200/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554fad7bdac1655119f2450d3286463aa2290200/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=554fad7bdac1655119f2450d3286463aa2290200", "patch": "@@ -885,14 +885,32 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n                     return;\n                 }\n \n-                let caller_has_attr = tcx.has_attr(caller, sym::default_method_body_is_const);\n-                let in_same_trait = match (tcx.trait_of_item(caller), tcx.trait_of_item(callee)) {\n-                    (Some(t1), Some(t2)) => t1 == t2,\n-                    _ => false\n-                };\n+                if !tcx.is_const_fn_raw(callee) {\n+                    let mut permitted = false;\n+\n+                    let callee_trait = tcx.trait_of_item(callee);\n+                    if let Some(trait_id) = callee_trait {\n+                        if tcx.has_attr(caller, sym::default_method_body_is_const) {\n+                            // permit call to non-const fn when caller has default_method_body_is_const..\n+                            if tcx.trait_of_item(caller) == callee_trait {\n+                                // ..and caller and callee are in the same trait.\n+                                permitted = true;\n+                            }\n+                        }\n+                        let mut const_impls = true;\n+                        tcx.for_each_relevant_impl(trait_id, substs.type_at(0), |imp| {\n+                            if const_impls {\n+                                if let hir::Constness::NotConst = tcx.impl_constness(imp) {\n+                                    const_impls = false;\n+                                }\n+                            }\n+                        });\n+                        if const_impls {\n+                            permitted = true;\n+                        }\n+                    }\n \n-                if !(caller_has_attr && in_same_trait) {\n-                    if !tcx.is_const_fn_raw(callee) {\n+                    if !permitted {\n                         self.check_op(ops::FnCallNonConst);\n                         return;\n                     }"}]}