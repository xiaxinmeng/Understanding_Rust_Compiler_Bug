{"sha": "0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNGQxOTYwM2JjZWE0ZTVjYzU0ZmVlNDYwYzA1ODJmOWIzMWNiM2Y=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-10-16T00:10:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-16T00:10:09Z"}, "message": "Rollup merge of #77493 - hosseind88:ICEs_should_always_print_the_top_of_the_query_stack, r=oli-obk\n\nICEs should always print the top of the query stack\n\nsee #76920", "tree": {"sha": "48d347c6c75af4a9961c3f449d23c733bad10bbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48d347c6c75af4a9961c3f449d23c733bad10bbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfiOThCRBK7hj4Ov3rIwAAdHIIABTYmCiWiGr/CIHbjSNR08bQ\nEXH1QKZmAfp3JS4nrOqek6RHPLoFXSWLXdMQibiMK2v9uNZTgVhec3zpzKvCXohF\nDkJ4Z93ucsoxhlK9o8VCgAUC0nb2wnASo4zrvWHVk6K5JmrUdq+MCPt1i1MvwV9o\nz3iHVkFSy8NpSLp9gPVSIGrP4uTTzYfMCXA0sILJ9WJaEK42azH2H5OIjE7B/aoO\nbyNc0eFMkdUXtp0c9sT+1iJE8UrS9dbNoMeRbgPeze7cinJRPL2BmRL45mKL9QJU\nqIndRoHEx/tYKod1Qq2iTnulY5sNnX9BbfsHRpQOZNKskjj2urmUK0IcskckHko=\n=VIV0\n-----END PGP SIGNATURE-----\n", "payload": "tree 48d347c6c75af4a9961c3f449d23c733bad10bbc\nparent 85dbb034909793f7f6387a668ce1c5da8bae6432\nparent 46cc889abf6564408ffa1d9e896a3fc22a859d10\nauthor Dylan DPC <dylan.dpc@gmail.com> 1602807009 +0200\ncommitter GitHub <noreply@github.com> 1602807009 +0200\n\nRollup merge of #77493 - hosseind88:ICEs_should_always_print_the_top_of_the_query_stack, r=oli-obk\n\nICEs should always print the top of the query stack\n\nsee #76920\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "html_url": "https://github.com/rust-lang/rust/commit/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85dbb034909793f7f6387a668ce1c5da8bae6432", "url": "https://api.github.com/repos/rust-lang/rust/commits/85dbb034909793f7f6387a668ce1c5da8bae6432", "html_url": "https://github.com/rust-lang/rust/commit/85dbb034909793f7f6387a668ce1c5da8bae6432"}, {"sha": "46cc889abf6564408ffa1d9e896a3fc22a859d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/46cc889abf6564408ffa1d9e896a3fc22a859d10", "html_url": "https://github.com/rust-lang/rust/commit/46cc889abf6564408ffa1d9e896a3fc22a859d10"}], "stats": {"total": 47, "additions": 34, "deletions": 13}, "files": [{"sha": "d99e335a77a000ca076fca569d4d11fd2ad52486", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -1258,9 +1258,9 @@ pub fn report_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n     // If backtraces are enabled, also print the query stack\n     let backtrace = env::var_os(\"RUST_BACKTRACE\").map(|x| &x != \"0\").unwrap_or(false);\n \n-    if backtrace {\n-        TyCtxt::try_print_query_stack(&handler);\n-    }\n+    let num_frames = if backtrace { None } else { Some(2) };\n+\n+    TyCtxt::try_print_query_stack(&handler, num_frames);\n \n     #[cfg(windows)]\n     unsafe {"}, {"sha": "27bf22dac75cb6fd0bcc30f7899c5eb0a9ce476d", "filename": "compiler/rustc_middle/src/ty/query/plumbing.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fplumbing.rs?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -124,20 +124,23 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n-    pub fn try_print_query_stack(handler: &Handler) {\n+    pub fn try_print_query_stack(handler: &Handler, num_frames: Option<usize>) {\n         eprintln!(\"query stack during panic:\");\n \n         // Be careful reyling on global state here: this code is called from\n         // a panic hook, which means that the global `Handler` may be in a weird\n         // state if it was responsible for triggering the panic.\n+        let mut i = 0;\n         ty::tls::with_context_opt(|icx| {\n             if let Some(icx) = icx {\n                 let query_map = icx.tcx.queries.try_collect_active_jobs();\n \n                 let mut current_query = icx.query;\n-                let mut i = 0;\n \n                 while let Some(query) = current_query {\n+                    if Some(i) == num_frames {\n+                        break;\n+                    }\n                     let query_info =\n                         if let Some(info) = query_map.as_ref().and_then(|map| map.get(&query)) {\n                             info\n@@ -163,7 +166,11 @@ impl<'tcx> TyCtxt<'tcx> {\n             }\n         });\n \n-        eprintln!(\"end of query stack\");\n+        if num_frames == None || num_frames >= Some(i) {\n+            eprintln!(\"end of query stack\");\n+        } else {\n+            eprintln!(\"we're just showing a limited slice of the query stack\");\n+        }\n     }\n }\n "}, {"sha": "a3133a1a790705ea0b52d1885859ed3e0887e85d", "filename": "src/test/ui/proc-macro/invalid-punct-ident-1.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -9,6 +9,9 @@\n // normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\n+// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\n+// normalize-stderr-test \"end of query stack\\n\" -> \"\"\n \n #[macro_use]\n extern crate invalid_punct_ident;"}, {"sha": "5ef22709cb37167db23a5164d01cf861e394223e", "filename": "src/test/ui/proc-macro/invalid-punct-ident-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-1.rs:16:1\n+  --> $DIR/invalid-punct-ident-1.rs:19:1\n    |\n LL | invalid_punct!();\n    | ^^^^^^^^^^^^^^^^^"}, {"sha": "04a0a8733115a899bface3a292d1d40c08ad50f2", "filename": "src/test/ui/proc-macro/invalid-punct-ident-2.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -9,6 +9,9 @@\n // normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\n+// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\n+// normalize-stderr-test \"end of query stack\\n\" -> \"\"\n \n #[macro_use]\n extern crate invalid_punct_ident;"}, {"sha": "4bd7a5351d3a040ef714c01bb03c74542e5f48ef", "filename": "src/test/ui/proc-macro/invalid-punct-ident-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-2.rs:16:1\n+  --> $DIR/invalid-punct-ident-2.rs:19:1\n    |\n LL | invalid_ident!();\n    | ^^^^^^^^^^^^^^^^^"}, {"sha": "aebba341625aeab0b3a4310a4e188ab5dbe605e5", "filename": "src/test/ui/proc-macro/invalid-punct-ident-3.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -9,6 +9,9 @@\n // normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\n+// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\n+// normalize-stderr-test \"end of query stack\\n\" -> \"\"\n \n #[macro_use]\n extern crate invalid_punct_ident;"}, {"sha": "072d13956ac6c8e2d08041dd0bf0d7f005f6ac79", "filename": "src/test/ui/proc-macro/invalid-punct-ident-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-3.rs:16:1\n+  --> $DIR/invalid-punct-ident-3.rs:19:1\n    |\n LL | invalid_raw_ident!();\n    | ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "4a3ba9aee7453a66589c0867d5450a5746397c81", "filename": "src/test/ui/proc-macro/load-panic-backtrace.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.rs?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -10,6 +10,9 @@\n // normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n // normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\n+// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\n+// normalize-stderr-test \"end of query stack\\n\" -> \"\"\n \n #[macro_use]\n extern crate test_macros;"}, {"sha": "f825047e331686cd78490ccf12ba6c96b2ac5215", "filename": "src/test/ui/proc-macro/load-panic-backtrace.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.stderr?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -1,6 +1,6 @@\n at 'panic-derive', $DIR/auxiliary/test-macros.rs:43:5\n error: proc-macro derive panicked\n-  --> $DIR/load-panic-backtrace.rs:17:10\n+  --> $DIR/load-panic-backtrace.rs:20:10\n    |\n LL | #[derive(Panic)]\n    |          ^^^^^"}, {"sha": "805828eece1f26f4c46cf4c9f3806b58882e0868", "filename": "src/tools/clippy/src/driver.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -277,9 +277,9 @@ fn report_clippy_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n     // If backtraces are enabled, also print the query stack\n     let backtrace = env::var_os(\"RUST_BACKTRACE\").map_or(false, |x| &x != \"0\");\n \n-    if backtrace {\n-        TyCtxt::try_print_query_stack(&handler);\n-    }\n+    let num_frames = if backtrace { None } else { Some(2) };\n+\n+    TyCtxt::try_print_query_stack(&handler, num_frames);\n }\n \n fn toolchain_path(home: Option<String>, toolchain: Option<String>) -> Option<PathBuf> {"}, {"sha": "a1b8e2ee162cf67eb3722946e1884415b768149c", "filename": "src/tools/clippy/tests/ui/custom_ice_message.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcustom_ice_message.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e4d19603bcea4e5cc54fee460c0582f9b31cb3f/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcustom_ice_message.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcustom_ice_message.stderr?ref=0e4d19603bcea4e5cc54fee460c0582f9b31cb3f", "patch": "@@ -9,3 +9,5 @@ note: we would appreciate a bug report: https://github.com/rust-lang/rust-clippy\n \n note: Clippy version: foo\n \n+query stack during panic:\n+end of query stack"}]}