{"sha": "ad3cb2125dee4379c11f447216f510d6544c10c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkM2NiMjEyNWRlZTQzNzljMTFmNDQ3MjE2ZjUxMGQ2NTQ0YzEwYzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-27T21:35:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-27T21:35:57Z"}, "message": "Merge #7468\n\n7468: Enable fill_match_arms in macros r=Veykril a=Veykril\n\nFixes #3936\r\n\r\nThe indentation is a bit off, but I don't think it's worth trying to fix that up until we have a proper formatting thing set up, as this most likely requires some hand picked specializing making the implementation worse to read(Assuming this can even be fixed for all cases by hardcoding indentation fixes).\r\n\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "de2d601517dbf98b5d007ea8ac7c6634a4ec89a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de2d601517dbf98b5d007ea8ac7c6634a4ec89a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad3cb2125dee4379c11f447216f510d6544c10c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEdy9CRBK7hj4Ov3rIwAAdHIIACEatVKxXTGrhMOCOtqG4o9L\n7jt2EXeUi5RTsEzeFC5s9JfA5DJY7xy+8g1NWULCCb/jS5hKd2tkmiB0xsRENzFB\nfWAHEv7vKQ+dQLOffIh13b0SyvlLqmOxxZ6k0jAF+RzQFI/jYoVxgW/zUkrABHCA\n2ybfSbNBFbJ8QPKWjOaGhqj/Wd8sJ9UONStGN+GluiRUWgifd9JjaCUO7rsPylR4\n8oT2fhzGyl+hTYuouCmCSHZV4bkQs07r9Q8YXwYqsgxFq7OlVMEJyNgdr2mUmJWt\nYzfHEH56G/nYbAjwx0XpTTCMgvCSRJet0Qgu2TGACjD4eSNZG0jDxpD9S6bfjPA=\n=dGoo\n-----END PGP SIGNATURE-----\n", "payload": "tree de2d601517dbf98b5d007ea8ac7c6634a4ec89a8\nparent 671757a5de0bbbdd8f42cd3c2d859a75288e3880\nparent b883a52712fe9eccf8e5120b7a965ac3c9699d6f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1611783357 +0000\ncommitter GitHub <noreply@github.com> 1611783357 +0000\n\nMerge #7468\n\n7468: Enable fill_match_arms in macros r=Veykril a=Veykril\n\nFixes #3936\r\n\r\nThe indentation is a bit off, but I don't think it's worth trying to fix that up until we have a proper formatting thing set up, as this most likely requires some hand picked specializing making the implementation worse to read(Assuming this can even be fixed for all cases by hardcoding indentation fixes).\r\n\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad3cb2125dee4379c11f447216f510d6544c10c5", "html_url": "https://github.com/rust-lang/rust/commit/ad3cb2125dee4379c11f447216f510d6544c10c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad3cb2125dee4379c11f447216f510d6544c10c5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "671757a5de0bbbdd8f42cd3c2d859a75288e3880", "url": "https://api.github.com/repos/rust-lang/rust/commits/671757a5de0bbbdd8f42cd3c2d859a75288e3880", "html_url": "https://github.com/rust-lang/rust/commit/671757a5de0bbbdd8f42cd3c2d859a75288e3880"}, {"sha": "b883a52712fe9eccf8e5120b7a965ac3c9699d6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b883a52712fe9eccf8e5120b7a965ac3c9699d6f", "html_url": "https://github.com/rust-lang/rust/commit/b883a52712fe9eccf8e5120b7a965ac3c9699d6f"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "7086e47d28536dbf9ca13c35543bf2259a8f05b3", "filename": "crates/assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ad3cb2125dee4379c11f447216f510d6544c10c5/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad3cb2125dee4379c11f447216f510d6544c10c5/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=ad3cb2125dee4379c11f447216f510d6544c10c5", "patch": "@@ -37,7 +37,7 @@ use crate::{\n // }\n // ```\n pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n-    let match_expr = ctx.find_node_at_offset::<ast::MatchExpr>()?;\n+    let match_expr = ctx.find_node_at_offset_with_descend::<ast::MatchExpr>()?;\n     let match_arm_list = match_expr.match_arm_list()?;\n \n     let expr = match_expr.expr()?;\n@@ -103,7 +103,7 @@ pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<\n         return None;\n     }\n \n-    let target = match_expr.syntax().text_range();\n+    let target = ctx.sema.original_range(match_expr.syntax()).range;\n     acc.add(\n         AssistId(\"fill_match_arms\", AssistKind::QuickFix),\n         \"Fill match arms\",\n@@ -113,7 +113,7 @@ pub(crate) fn fill_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option<\n             let n_old_arms = new_arm_list.arms().count();\n             let new_arm_list = new_arm_list.append_arms(missing_arms);\n             let first_new_arm = new_arm_list.arms().nth(n_old_arms);\n-            let old_range = match_arm_list.syntax().text_range();\n+            let old_range = ctx.sema.original_range(match_arm_list.syntax()).range;\n             match (first_new_arm, ctx.config.snippet_cap) {\n                 (Some(first_new_arm), Some(cap)) => {\n                     let extend_lifetime;\n@@ -752,4 +752,36 @@ fn foo(opt: Option<i32>) {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn works_inside_macro_call() {\n+        check_assist(\n+            fill_match_arms,\n+            r#\"\n+macro_rules! m { ($expr:expr) => {$expr}}\n+enum Test {\n+    A,\n+    B,\n+    C,\n+}\n+\n+fn foo(t: Test) {\n+    m!(match t$0 {});\n+}\"#,\n+            r#\"macro_rules! m { ($expr:expr) => {$expr}}\n+enum Test {\n+    A,\n+    B,\n+    C,\n+}\n+\n+fn foo(t: Test) {\n+    m!(match t {\n+    $0Test::A => {}\n+    Test::B => {}\n+    Test::C => {}\n+});\n+}\"#,\n+        );\n+    }\n }"}]}