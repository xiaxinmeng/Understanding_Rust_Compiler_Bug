{"sha": "85175d639f0b40062d2741f4918df48aee3ef758", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MTc1ZDYzOWYwYjQwMDYyZDI3NDFmNDkxOGRmNDhhZWUzZWY3NTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-12T10:44:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-13T03:24:24Z"}, "message": "core: Add iter::reverse", "tree": {"sha": "4da18db0e5df31541dcab6776744a82278127fe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4da18db0e5df31541dcab6776744a82278127fe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85175d639f0b40062d2741f4918df48aee3ef758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85175d639f0b40062d2741f4918df48aee3ef758", "html_url": "https://github.com/rust-lang/rust/commit/85175d639f0b40062d2741f4918df48aee3ef758", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85175d639f0b40062d2741f4918df48aee3ef758/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c21db3bbc28c47e846783dedfe1eb1228f955f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c21db3bbc28c47e846783dedfe1eb1228f955f2b", "html_url": "https://github.com/rust-lang/rust/commit/c21db3bbc28c47e846783dedfe1eb1228f955f2b"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "8500ce7a783e2d1b34e678984613a782554077d0", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/85175d639f0b40062d2741f4918df48aee3ef758/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85175d639f0b40062d2741f4918df48aee3ef758/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=85175d639f0b40062d2741f4918df48aee3ef758", "patch": "@@ -77,6 +77,11 @@ fn to_list<A:copy,IA:iterable<A>>(self: IA) -> [A] {\n     foldl::<A,[A],IA>(self, [], {|r, a| r + [a]})\n }\n \n+// FIXME: This could be made more efficient with an riterable interface\n+fn reverse<A:copy,IA:iterable<A>>(self: IA, blk: fn(A)) {\n+    vec::riter(to_list(self), blk)\n+}\n+\n fn repeat(times: uint, blk: fn()) {\n     let i = 0u;\n     while i < times {\n@@ -214,3 +219,8 @@ fn test_max() {\n fn test_max_empty() {\n     max::<int, [int]>([]);\n }\n+\n+#[test]\n+fn test_reverse() {\n+    assert to_list(bind reverse([1, 2, 3], _)) == [3, 2, 1];\n+}\n\\ No newline at end of file"}]}