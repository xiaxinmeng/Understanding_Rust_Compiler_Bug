{"sha": "236705f3c30905623f97dc8887c83db520eb27c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzNjcwNWYzYzMwOTA1NjIzZjk3ZGM4ODg3YzgzZGI1MjBlYjI3YzE=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-29T14:05:10Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-05-19T13:01:52Z"}, "message": "Replace `sys_common::util::report_overflow` with `rterr!`", "tree": {"sha": "3401d07479d3ee044418fc8178717412d3060957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3401d07479d3ee044418fc8178717412d3060957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/236705f3c30905623f97dc8887c83db520eb27c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/236705f3c30905623f97dc8887c83db520eb27c1", "html_url": "https://github.com/rust-lang/rust/commit/236705f3c30905623f97dc8887c83db520eb27c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/236705f3c30905623f97dc8887c83db520eb27c1/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b987f74f05b3fbeb81eed27c43678dc71cdab8cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b987f74f05b3fbeb81eed27c43678dc71cdab8cf", "html_url": "https://github.com/rust-lang/rust/commit/b987f74f05b3fbeb81eed27c43678dc71cdab8cf"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "72fd48278bc16e3b8eaf98fd814c43b08ae1761b", "filename": "library/std/src/sys/unix/stack_overflow.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/236705f3c30905623f97dc8887c83db520eb27c1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236705f3c30905623f97dc8887c83db520eb27c1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs?ref=236705f3c30905623f97dc8887c83db520eb27c1", "patch": "@@ -42,6 +42,7 @@ mod imp {\n     use crate::io;\n     use crate::mem;\n     use crate::ptr;\n+    use crate::thread;\n \n     use libc::MAP_FAILED;\n     use libc::{mmap, munmap};\n@@ -95,15 +96,16 @@ mod imp {\n         info: *mut libc::siginfo_t,\n         _data: *mut libc::c_void,\n     ) {\n-        use crate::sys_common::util::report_overflow;\n-\n         let guard = thread_info::stack_guard().unwrap_or(0..0);\n         let addr = siginfo_si_addr(info);\n \n         // If the faulting address is within the guard page, then we print a\n         // message saying so and abort.\n         if guard.start <= addr && addr < guard.end {\n-            report_overflow();\n+            rterr!(\n+                \"\\nthread '{}' has overflowed its stack\\n\",\n+                thread::current().name().unwrap_or(\"<unknown>\")\n+            );\n             rtabort!(\"stack overflow\");\n         } else {\n             // Unregister ourselves by reverting back to the default behavior."}, {"sha": "24ba35ad17e6315ed1e8a4868debe4d4e28789cb", "filename": "library/std/src/sys/windows/stack_overflow.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/236705f3c30905623f97dc8887c83db520eb27c1/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236705f3c30905623f97dc8887c83db520eb27c1/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs?ref=236705f3c30905623f97dc8887c83db520eb27c1", "patch": "@@ -1,7 +1,7 @@\n #![cfg_attr(test, allow(dead_code))]\n \n use crate::sys::c;\n-use crate::sys_common::util::report_overflow;\n+use crate::thread;\n \n pub struct Handler;\n \n@@ -24,7 +24,10 @@ extern \"system\" fn vectored_handler(ExceptionInfo: *mut c::EXCEPTION_POINTERS) -\n         let code = rec.ExceptionCode;\n \n         if code == c::EXCEPTION_STACK_OVERFLOW {\n-            report_overflow();\n+            rterr!(\n+                \"\\nthread '{}' has overflowed its stack\\n\",\n+                thread::current().name().unwrap_or(\"<unknown>\")\n+            );\n         }\n         c::EXCEPTION_CONTINUE_SEARCH\n     }"}, {"sha": "f7072cc501103f23aa4b7698e09378877fbbd07e", "filename": "library/std/src/sys_common/util.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/236705f3c30905623f97dc8887c83db520eb27c1/library%2Fstd%2Fsrc%2Fsys_common%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/236705f3c30905623f97dc8887c83db520eb27c1/library%2Fstd%2Fsrc%2Fsys_common%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Futil.rs?ref=236705f3c30905623f97dc8887c83db520eb27c1", "patch": "@@ -1,18 +1,9 @@\n use crate::fmt;\n use crate::io::prelude::*;\n use crate::sys::stdio::panic_output;\n-use crate::thread;\n \n pub fn dumb_print(args: fmt::Arguments<'_>) {\n     if let Some(mut out) = panic_output() {\n         let _ = out.write_fmt(args);\n     }\n }\n-\n-#[allow(dead_code)] // stack overflow detection not enabled on all platforms\n-pub unsafe fn report_overflow() {\n-    dumb_print(format_args!(\n-        \"\\nthread '{}' has overflowed its stack\\n\",\n-        thread::current().name().unwrap_or(\"<unknown>\")\n-    ));\n-}"}]}