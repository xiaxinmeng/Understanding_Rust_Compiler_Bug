{"sha": "631e7b4eaacc44c85ba528de838217233a61dc38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMWU3YjRlYWFjYzQ0Yzg1YmE1MjhkZTgzODIxNzIzM2E2MWRjMzg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-03T13:39:09Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-03T14:24:59Z"}, "message": "Rollup merge of #33372 - birkenfeld:rustdoc-escape-code, r=cmr\n\nrustdoc: HTML-escape Rust code (from constants)\n\nEspecially in cases like the one in the test file, this can blow up the rendering big time if string constants in the code contain HTML.\n\nBut also other constants can contain special chars (e.g. `&` as an operator in constant expressions).", "tree": {"sha": "2c12ee018b5234df94b78d8d60e88c4c4f207bd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c12ee018b5234df94b78d8d60e88c4c4f207bd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/631e7b4eaacc44c85ba528de838217233a61dc38", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXKLS7AAoJEDu/TT4u95+YlK8P/2MVGYwmGdWZClKe8PmAyrg0\nnzLU4pH9mZqAvJj6VGTfp+Jl51BTEbeL+83HK9BgOSLdIU6KFyGbBiqn2cWOZJji\n2Gq/4Gpl59IAFa0HXtYr3J+oD8r5PetJZsPHDfdgdn1aQE3Nj5Npbs6sUGLgfYee\nvlht8027sK8miYTjgHibeEZI2M1klVDge15CUFjcz5Ujiy4Q9hw5Xxo75Nh8S+MS\nQdyu0YJKLpXzwgacEneG3kODpUAqLSOZm+y27ch4mTN2UnWScH5TdE6FrDvFAZ8W\n/YZQYqmUriRrfPccLkYar3dc4BnrE7yE06ipgfQ6wERpVC/ND1Te3zQmoZnByvPg\n6a+VWFIgWDTo20DvmBGWD8Oh+aJ0QkhegRn29Xi2igz8TTJMy46WnYax1kYxL1jS\npwNsWYWgCp5ScoTd+gegR4rcA6GjPfuF1fIs0uDsQtE2dlff+UA6b2k3cqA/BhwX\nGJJgwA8CgdKrTi+bk/oZU/1jFrxEzX9hxlAArPs9yEjjYrzu6PRAt7ElFmYcZ2RD\nQGoYYnplc8857EOAvl2OmqJBkappdnyeM8AJKmLX0LKxGVutaXSbVs1kMSfWHGkW\ncMWHkbi7vxvGM2pOdXDAO8OUfQfaXr44ErG3BEZbRAUKfmtfNl1TDzcYrNXVv0aA\nqIDTnkYPBEa1NMGM0VSS\n=rZwT\n-----END PGP SIGNATURE-----", "payload": "tree 2c12ee018b5234df94b78d8d60e88c4c4f207bd3\nparent 1ab019584e87df7b925aa1d962a8591a4436b869\nparent 1bcf41e53f1361a7b09503b6c3a081a3b6907cb6\nauthor Manish Goregaokar <manishsmail@gmail.com> 1462282749 +0530\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1462285499 +0530\n\nRollup merge of #33372 - birkenfeld:rustdoc-escape-code, r=cmr\n\nrustdoc: HTML-escape Rust code (from constants)\n\nEspecially in cases like the one in the test file, this can blow up the rendering big time if string constants in the code contain HTML.\n\nBut also other constants can contain special chars (e.g. `&` as an operator in constant expressions).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/631e7b4eaacc44c85ba528de838217233a61dc38", "html_url": "https://github.com/rust-lang/rust/commit/631e7b4eaacc44c85ba528de838217233a61dc38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/631e7b4eaacc44c85ba528de838217233a61dc38/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ab019584e87df7b925aa1d962a8591a4436b869", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ab019584e87df7b925aa1d962a8591a4436b869", "html_url": "https://github.com/rust-lang/rust/commit/1ab019584e87df7b925aa1d962a8591a4436b869"}, {"sha": "1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6", "html_url": "https://github.com/rust-lang/rust/commit/1bcf41e53f1361a7b09503b6c3a081a3b6907cb6"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "7af5322e7bdf16ea73449e4e5b94e775a1602db5", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/631e7b4eaacc44c85ba528de838217233a61dc38/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631e7b4eaacc44c85ba528de838217233a61dc38/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=631e7b4eaacc44c85ba528de838217233a61dc38", "patch": "@@ -26,6 +26,7 @@ use rustc::hir;\n use clean;\n use core::DocAccessLevels;\n use html::item_type::ItemType;\n+use html::escape::Escape;\n use html::render;\n use html::render::{cache, CURRENT_LOCATION_KEY};\n \n@@ -496,7 +497,7 @@ impl fmt::Display for clean::Type {\n                 primitive_link(f, clean::PrimitiveType::Array, \"[\")?;\n                 write!(f, \"{}\", t)?;\n                 primitive_link(f, clean::PrimitiveType::Array,\n-                               &format!(\"; {}]\", *s))\n+                               &format!(\"; {}]\", Escape(s)))\n             }\n             clean::Bottom => f.write_str(\"!\"),\n             clean::RawPointer(m, ref t) => {"}, {"sha": "36da95279fb24f7190666dd683ddb210eab207bd", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/631e7b4eaacc44c85ba528de838217233a61dc38/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631e7b4eaacc44c85ba528de838217233a61dc38/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=631e7b4eaacc44c85ba528de838217233a61dc38", "patch": "@@ -1866,7 +1866,7 @@ impl<'a> fmt::Display for Initializer<'a> {\n         let Initializer(s) = *self;\n         if s.is_empty() { return Ok(()); }\n         write!(f, \"<code> = </code>\")?;\n-        write!(f, \"<code>{}</code>\", s)\n+        write!(f, \"<code>{}</code>\", Escape(s))\n     }\n }\n \n@@ -2106,7 +2106,7 @@ fn assoc_const(w: &mut fmt::Formatter,\n \n     write!(w, \": {}\", ty)?;\n     if let Some(default) = default {\n-        write!(w, \" = {}\", default)?;\n+        write!(w, \" = {}\", Escape(default))?;\n     }\n     Ok(())\n }"}, {"sha": "7f9a2bf175a5f96c7a23daf497665244f16b055e", "filename": "src/test/rustdoc/escape-rust-expr.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/631e7b4eaacc44c85ba528de838217233a61dc38/src%2Ftest%2Frustdoc%2Fescape-rust-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631e7b4eaacc44c85ba528de838217233a61dc38/src%2Ftest%2Frustdoc%2Fescape-rust-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fescape-rust-expr.rs?ref=631e7b4eaacc44c85ba528de838217233a61dc38", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we HTML-escape Rust expressions, where HTML special chars\n+// can occur, and we know it's definitely not markup.\n+\n+// @has escape_rust_expr/constant.CONST_S.html '//pre[@class=\"rust const\"]' '\"<script>\"'\n+pub const CONST_S: &'static str = \"<script>\";"}]}