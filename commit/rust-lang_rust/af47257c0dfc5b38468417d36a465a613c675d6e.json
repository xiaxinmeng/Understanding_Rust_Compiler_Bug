{"sha": "af47257c0dfc5b38468417d36a465a613c675d6e", "node_id": "C_kwDOAAsO6NoAKGFmNDcyNTdjMGRmYzViMzg0Njg0MTdkMzZhNDY1YTYxM2M2NzVkNmU", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-05-06T02:46:12Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-05-06T02:46:12Z"}, "message": "typeck: port \"explicit generic args w/ impl trait\"\n\nPort the \"explicit generic arguments with impl trait\" diagnostic to\nusing the diagnostic derive.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "b5cc179704703b8af139c198fb2e98e828c55579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5cc179704703b8af139c198fb2e98e828c55579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af47257c0dfc5b38468417d36a465a613c675d6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af47257c0dfc5b38468417d36a465a613c675d6e", "html_url": "https://github.com/rust-lang/rust/commit/af47257c0dfc5b38468417d36a465a613c675d6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af47257c0dfc5b38468417d36a465a613c675d6e/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f413d2abb5cf5f72002bc7da5709bf6c4dab444", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f413d2abb5cf5f72002bc7da5709bf6c4dab444", "html_url": "https://github.com/rust-lang/rust/commit/3f413d2abb5cf5f72002bc7da5709bf6c4dab444"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "aef18fcafaa05e5cb8267d432ffd27015abaaf14", "filename": "compiler/rustc_error_messages/locales/en-US/typeck.ftl", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/af47257c0dfc5b38468417d36a465a613c675d6e/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/af47257c0dfc5b38468417d36a465a613c675d6e/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl?ref=af47257c0dfc5b38468417d36a465a613c675d6e", "patch": "@@ -93,3 +93,11 @@ typeck-expected-return-type = expected `{$expected}` because of return type\n \n typeck-unconstrained-opaque-type = unconstrained opaque type\n     .note = `{$name}` must be used in combination with a concrete type within the same module\n+\n+typeck-explicit-generic-args-with-impl-trait =\n+    cannot provide explicit generic arguments when `impl Trait` is used in argument position\n+    .label = explicit generic argument not allowed\n+    .note = see issue #83701 <https://github.com/rust-lang/rust/issues/83701> for more information\n+\n+typeck-explicit-generic-args-with-impl-trait-feature =\n+    add `#![feature(explicit_generic_args_with_impl_trait)]` to the crate attributes to enable"}, {"sha": "38c29d3874c9e169fbe4828fe6eb712574ec4459", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 6, "deletions": 22, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/af47257c0dfc5b38468417d36a465a613c675d6e/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af47257c0dfc5b38468417d36a465a613c675d6e/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=af47257c0dfc5b38468417d36a465a613c675d6e", "patch": "@@ -3,7 +3,10 @@ use crate::astconv::{\n     AstConv, CreateSubstsForGenericArgsCtxt, ExplicitLateBound, GenericArgCountMismatch,\n     GenericArgCountResult, GenericArgPosition,\n };\n-use crate::errors::AssocTypeBindingNotAllowed;\n+use crate::errors::{\n+    AssocTypeBindingNotAllowed, ExplicitGenericArgsWithImplTrait,\n+    ExplicitGenericArgsWithImplTraitFeature,\n+};\n use crate::structured_errors::{GenericArgsInfo, StructuredDiagnostic, WrongNumberOfGenericArgs};\n use rustc_ast::ast::ParamKindOrd;\n use rustc_errors::{struct_span_err, Applicability, Diagnostic, MultiSpan};\n@@ -636,29 +639,10 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 })\n                 .collect::<Vec<_>>();\n \n-            let mut err = struct_span_err! {\n-                tcx.sess,\n-                spans.clone(),\n-                E0632,\n-                \"cannot provide explicit generic arguments when `impl Trait` is \\\n-                used in argument position\"\n-            };\n-\n-            for span in spans {\n-                err.span_label(span, \"explicit generic argument not allowed\");\n-            }\n-\n-            err.note(\n-                \"see issue #83701 <https://github.com/rust-lang/rust/issues/83701> \\\n-                 for more information\",\n-            );\n+            let mut err = tcx.sess.create_err(ExplicitGenericArgsWithImplTrait { spans });\n             if tcx.sess.is_nightly_build() {\n-                err.help(\n-                    \"add `#![feature(explicit_generic_args_with_impl_trait)]` \\\n-                     to the crate attributes to enable\",\n-                );\n+                err.subdiagnostic(ExplicitGenericArgsWithImplTraitFeature);\n             }\n-\n             err.emit();\n         }\n "}, {"sha": "a3e7108caae00778eaae5f6b00ea552af5e62d11", "filename": "compiler/rustc_typeck/src/errors.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/af47257c0dfc5b38468417d36a465a613c675d6e/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af47257c0dfc5b38468417d36a465a613c675d6e/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Ferrors.rs?ref=af47257c0dfc5b38468417d36a465a613c675d6e", "patch": "@@ -237,3 +237,16 @@ pub struct UnconstrainedOpaqueType {\n     pub span: Span,\n     pub name: Symbol,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(code = \"E0632\", slug = \"typeck-explicit-generic-args-with-impl-trait\")]\n+#[note]\n+pub struct ExplicitGenericArgsWithImplTrait {\n+    #[primary_span]\n+    #[label]\n+    pub spans: Vec<Span>,\n+}\n+\n+#[derive(SessionSubdiagnostic)]\n+#[help(slug = \"typeck-explicit-generic-args-with-impl-trait-feature\")]\n+pub struct ExplicitGenericArgsWithImplTraitFeature;"}]}