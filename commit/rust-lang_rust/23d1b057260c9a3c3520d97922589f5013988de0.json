{"sha": "23d1b057260c9a3c3520d97922589f5013988de0", "node_id": "C_kwDOAAsO6NoAKDIzZDFiMDU3MjYwYzlhM2MzNTIwZDk3OTIyNTg5ZjUwMTM5ODhkZTA", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-23T21:48:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-23T21:48:15Z"}, "message": "Rollup merge of #103005 - solid-rs:patch/kmc-solid/readdir-terminator, r=m-ou-se\n\nkmc-solid: Handle errors returned by `SOLID_FS_ReadDir`\n\nFixes the issue where the `std::fs::ReadDir` implementaton of the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets silently suppressed errors returned by the underlying `SOLID_FS_ReadDir` system function. The new implementation correctly handles all cases:\n\n- `SOLID_ERR_NOTFOUND` indicates the end of directory stream.\n- `SOLID_ERR_OK` + non-empty `d_name` indicates success.\n- Some old filesystem drivers may return `SOLID_ERR_OK` + empty `d_name` to indicate the end of directory stream.\n- Any other negative values (per ITRON convention) represent an error.", "tree": {"sha": "fa81972559efa47fdf61eabac2b00b5ac3acf0cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa81972559efa47fdf61eabac2b00b5ac3acf0cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23d1b057260c9a3c3520d97922589f5013988de0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjVbafCRBK7hj4Ov3rIwAAspgIAFvjkr4mrVpCa6qcY0Xfy32Y\nn8CXWprkN7kSs4L/hzq1pq5CQScvM0x++JU2EMMNRcU6WVV+nn4xJMhW8Hpv0fH9\nZz9ejPo8heRx91FLwtOMpmw/h2mVMjXmyVG/nENacj+uF8XwBvEdDuPL5fgEbNnP\n4p7YBrxKH7I19ZpL0SIb1kaEAbGDOWOFOwy221zf5zLsxDLHIke1sAB/u9GfO1Xm\nn53/3JK8/iprndRHTpEfK1hHRcqHhHQmN5cezWeDQWTKlnBu/aSeWpCbG8lbihBy\ntxxsWEkl9Wvyn+hSUEyWd33EnKeWJgbEJ01hsrCKh99heWYl/cTrcOgp1aA8ThU=\n=TvHl\n-----END PGP SIGNATURE-----\n", "payload": "tree fa81972559efa47fdf61eabac2b00b5ac3acf0cb\nparent 214fa9fb9ce2cb5f40c562637ea992adaaab0340\nparent 76bec177bca25a35aa55a364bb8d2d66e0d5d45e\nauthor Michael Howell <michael@notriddle.com> 1666561695 -0700\ncommitter GitHub <noreply@github.com> 1666561695 -0700\n\nRollup merge of #103005 - solid-rs:patch/kmc-solid/readdir-terminator, r=m-ou-se\n\nkmc-solid: Handle errors returned by `SOLID_FS_ReadDir`\n\nFixes the issue where the `std::fs::ReadDir` implementaton of the [`*-kmc-solid_*`](https://doc.rust-lang.org/nightly/rustc/platform-support/kmc-solid.html) Tier 3 targets silently suppressed errors returned by the underlying `SOLID_FS_ReadDir` system function. The new implementation correctly handles all cases:\n\n- `SOLID_ERR_NOTFOUND` indicates the end of directory stream.\n- `SOLID_ERR_OK` + non-empty `d_name` indicates success.\n- Some old filesystem drivers may return `SOLID_ERR_OK` + empty `d_name` to indicate the end of directory stream.\n- Any other negative values (per ITRON convention) represent an error.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23d1b057260c9a3c3520d97922589f5013988de0", "html_url": "https://github.com/rust-lang/rust/commit/23d1b057260c9a3c3520d97922589f5013988de0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23d1b057260c9a3c3520d97922589f5013988de0/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "214fa9fb9ce2cb5f40c562637ea992adaaab0340", "url": "https://api.github.com/repos/rust-lang/rust/commits/214fa9fb9ce2cb5f40c562637ea992adaaab0340", "html_url": "https://github.com/rust-lang/rust/commit/214fa9fb9ce2cb5f40c562637ea992adaaab0340"}, {"sha": "76bec177bca25a35aa55a364bb8d2d66e0d5d45e", "url": "https://api.github.com/repos/rust-lang/rust/commits/76bec177bca25a35aa55a364bb8d2d66e0d5d45e", "html_url": "https://github.com/rust-lang/rust/commit/76bec177bca25a35aa55a364bb8d2d66e0d5d45e"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "6c66b93a3e1a306e1ae9ca0abc8b3bbbac4ef767", "filename": "library/std/src/sys/solid/fs.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/23d1b057260c9a3c3520d97922589f5013988de0/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23d1b057260c9a3c3520d97922589f5013988de0/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs?ref=23d1b057260c9a3c3520d97922589f5013988de0", "patch": "@@ -175,15 +175,19 @@ impl Iterator for ReadDir {\n     type Item = io::Result<DirEntry>;\n \n     fn next(&mut self) -> Option<io::Result<DirEntry>> {\n-        unsafe {\n-            let mut out_dirent = MaybeUninit::uninit();\n-            error::SolidError::err_if_negative(abi::SOLID_FS_ReadDir(\n+        let entry = unsafe {\n+            let mut out_entry = MaybeUninit::uninit();\n+            match error::SolidError::err_if_negative(abi::SOLID_FS_ReadDir(\n                 self.inner.dirp,\n-                out_dirent.as_mut_ptr(),\n-            ))\n-            .ok()?;\n-            Some(Ok(DirEntry { entry: out_dirent.assume_init(), inner: Arc::clone(&self.inner) }))\n-        }\n+                out_entry.as_mut_ptr(),\n+            )) {\n+                Ok(_) => out_entry.assume_init(),\n+                Err(e) if e.as_raw() == abi::SOLID_ERR_NOTFOUND => return None,\n+                Err(e) => return Some(Err(e.as_io_error())),\n+            }\n+        };\n+\n+        (entry.d_name[0] != 0).then(|| Ok(DirEntry { entry, inner: Arc::clone(&self.inner) }))\n     }\n }\n "}]}