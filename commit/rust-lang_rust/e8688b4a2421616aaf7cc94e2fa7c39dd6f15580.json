{"sha": "e8688b4a2421616aaf7cc94e2fa7c39dd6f15580", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4Njg4YjRhMjQyMTYxNmFhZjdjYzk0ZTJmYTdjMzlkZDZmMTU1ODA=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-05T18:13:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-05T18:13:50Z"}, "message": "Rollup merge of #47807 - tbu-:pr_doc_constanttime_cstr, r=steveklabnik\n\nMake wording around 0-cost casts more precise", "tree": {"sha": "97971b4b2739bc9a9f767d60429c39935506b02a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97971b4b2739bc9a9f767d60429c39935506b02a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8688b4a2421616aaf7cc94e2fa7c39dd6f15580", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaeJ7eCRBK7hj4Ov3rIwAAdHIIABbkZeELIYQzCeAzmKHB8n2g\n/7h0QjXK+6VcK5Iq1Sz/aKlVbkVYV/E/0YjulqwFv4GBkFc2zpaIy2ZWbHlqKUmp\nDjsqUIsPEoaz6fM1HLC3keciZpcB3lRf8qMsjHFl+vhDhed95id4modaFOO72h51\n1ANPJQLAd3bTAqjAErkaIeAFbTj0a8bj/05R/lzpPPORODZI07hJWo5cGyDc4zh6\ns6gBz8HsLEN/rhG8GoYmJGtgRs6EDkvQtzWO34F8lpPgeAVrQPDMy036qPrGeN7e\nxOTTrDNNIEqhxXbjOevE1PJMP3rZtT/URuXfOdEHukC1N6LViFe64IK0dJjArEo=\n=oZhl\n-----END PGP SIGNATURE-----\n", "payload": "tree 97971b4b2739bc9a9f767d60429c39935506b02a\nparent ddc4284b716b31bfb56bfbd1221253787988eb8b\nparent 6c86da288a6b658a2adb2c3de5dced871dc6826b\nauthor kennytm <kennytm@gmail.com> 1517854430 +0800\ncommitter GitHub <noreply@github.com> 1517854430 +0800\n\nRollup merge of #47807 - tbu-:pr_doc_constanttime_cstr, r=steveklabnik\n\nMake wording around 0-cost casts more precise\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8688b4a2421616aaf7cc94e2fa7c39dd6f15580", "html_url": "https://github.com/rust-lang/rust/commit/e8688b4a2421616aaf7cc94e2fa7c39dd6f15580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8688b4a2421616aaf7cc94e2fa7c39dd6f15580/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc4284b716b31bfb56bfbd1221253787988eb8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc4284b716b31bfb56bfbd1221253787988eb8b", "html_url": "https://github.com/rust-lang/rust/commit/ddc4284b716b31bfb56bfbd1221253787988eb8b"}, {"sha": "6c86da288a6b658a2adb2c3de5dced871dc6826b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c86da288a6b658a2adb2c3de5dced871dc6826b", "html_url": "https://github.com/rust-lang/rust/commit/6c86da288a6b658a2adb2c3de5dced871dc6826b"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e91d3a32a50cd80f232c580c934189901e22bf16", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e8688b4a2421616aaf7cc94e2fa7c39dd6f15580/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8688b4a2421616aaf7cc94e2fa7c39dd6f15580/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=e8688b4a2421616aaf7cc94e2fa7c39dd6f15580", "patch": "@@ -1026,9 +1026,9 @@ impl CStr {\n     /// The returned slice will **not** contain the trailing nul terminator that this C\n     /// string has.\n     ///\n-    /// > **Note**: This method is currently implemented as a 0-cost cast, but\n-    /// > it is planned to alter its definition in the future to perform the\n-    /// > length calculation whenever this method is called.\n+    /// > **Note**: This method is currently implemented as a constant-time\n+    /// > cast, but it is planned to alter its definition in the future to\n+    /// > perform the length calculation whenever this method is called.\n     ///\n     /// # Examples\n     ///\n@@ -1077,9 +1077,9 @@ impl CStr {\n     /// it will return an error with details of where UTF-8 validation failed.\n     ///\n     /// > **Note**: This method is currently implemented to check for validity\n-    /// > after a 0-cost cast, but it is planned to alter its definition in the\n-    /// > future to perform the length calculation in addition to the UTF-8\n-    /// > check whenever this method is called.\n+    /// > after a constant-time cast, but it is planned to alter its definition\n+    /// > in the future to perform the length calculation in addition to the\n+    /// > UTF-8 check whenever this method is called.\n     ///\n     /// [`&str`]: ../primitive.str.html\n     ///\n@@ -1110,9 +1110,9 @@ impl CStr {\n     /// with the result.\n     ///\n     /// > **Note**: This method is currently implemented to check for validity\n-    /// > after a 0-cost cast, but it is planned to alter its definition in the\n-    /// > future to perform the length calculation in addition to the UTF-8\n-    /// > check whenever this method is called.\n+    /// > after a constant-time cast, but it is planned to alter its definition\n+    /// > in the future to perform the length calculation in addition to the\n+    /// > UTF-8 check whenever this method is called.\n     ///\n     /// [`Cow`]: ../borrow/enum.Cow.html\n     /// [`Borrowed`]: ../borrow/enum.Cow.html#variant.Borrowed"}]}