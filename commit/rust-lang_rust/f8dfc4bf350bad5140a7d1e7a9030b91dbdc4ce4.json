{"sha": "f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4", "node_id": "C_kwDOAAsO6NoAKGY4ZGZjNGJmMzUwYmFkNTE0MGE3ZDFlN2E5MDMwYjkxZGJkYzRjZTQ", "commit": {"author": {"name": "miam-miam100", "email": "49870539+miam-miam100@users.noreply.github.com", "date": "2022-07-20T12:40:45Z"}, "committer": {"name": "miam-miam100", "email": "49870539+miam-miam100@users.noreply.github.com", "date": "2022-07-20T12:40:45Z"}, "message": "Fix off by one error and add ui test.", "tree": {"sha": "4242ce0504d1cd511fbf480a52f315a4a7f04f8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4242ce0504d1cd511fbf480a52f315a4a7f04f8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQR5DKPUXZIl5Aixb+MMNzAQGVP33QUCYtf3zQAKCRAMNzAQGVP3\n3dw4AP9a7p8QRHNUFXyLbqn4XmZO1sXrxXybXi5ey5fPxLT3YwEAn2/nIP9zGAOT\nEKfy5n0G3Kw/9aNECkqYO0knypZLEwY=\n=r8fg\n-----END PGP SIGNATURE-----", "payload": "tree 4242ce0504d1cd511fbf480a52f315a4a7f04f8d\nparent 62187b12c202c1ada2569211da090d16950c3640\nauthor miam-miam100 <49870539+miam-miam100@users.noreply.github.com> 1658320845 +0100\ncommitter miam-miam100 <49870539+miam-miam100@users.noreply.github.com> 1658320845 +0100\n\nFix off by one error and add ui test.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4", "html_url": "https://github.com/rust-lang/rust/commit/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4/comments", "author": {"login": "miam-miam100", "id": 49870539, "node_id": "MDQ6VXNlcjQ5ODcwNTM5", "avatar_url": "https://avatars.githubusercontent.com/u/49870539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miam-miam100", "html_url": "https://github.com/miam-miam100", "followers_url": "https://api.github.com/users/miam-miam100/followers", "following_url": "https://api.github.com/users/miam-miam100/following{/other_user}", "gists_url": "https://api.github.com/users/miam-miam100/gists{/gist_id}", "starred_url": "https://api.github.com/users/miam-miam100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miam-miam100/subscriptions", "organizations_url": "https://api.github.com/users/miam-miam100/orgs", "repos_url": "https://api.github.com/users/miam-miam100/repos", "events_url": "https://api.github.com/users/miam-miam100/events{/privacy}", "received_events_url": "https://api.github.com/users/miam-miam100/received_events", "type": "User", "site_admin": false}, "committer": {"login": "miam-miam100", "id": 49870539, "node_id": "MDQ6VXNlcjQ5ODcwNTM5", "avatar_url": "https://avatars.githubusercontent.com/u/49870539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miam-miam100", "html_url": "https://github.com/miam-miam100", "followers_url": "https://api.github.com/users/miam-miam100/followers", "following_url": "https://api.github.com/users/miam-miam100/following{/other_user}", "gists_url": "https://api.github.com/users/miam-miam100/gists{/gist_id}", "starred_url": "https://api.github.com/users/miam-miam100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miam-miam100/subscriptions", "organizations_url": "https://api.github.com/users/miam-miam100/orgs", "repos_url": "https://api.github.com/users/miam-miam100/repos", "events_url": "https://api.github.com/users/miam-miam100/events{/privacy}", "received_events_url": "https://api.github.com/users/miam-miam100/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62187b12c202c1ada2569211da090d16950c3640", "url": "https://api.github.com/repos/rust-lang/rust/commits/62187b12c202c1ada2569211da090d16950c3640", "html_url": "https://github.com/rust-lang/rust/commit/62187b12c202c1ada2569211da090d16950c3640"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "bce466921d0ff64d5e2e78146427b5f9358d44cc", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4", "patch": "@@ -485,7 +485,7 @@ impl<'a, 'b> Context<'a, 'b> {\n             if let Some(span) = fmt.width_span {\n                 let span = self.fmtsp.from_inner(InnerSpan::new(span.start, span.end));\n                 match fmt.width {\n-                    parse::CountIsParam(pos) if pos > self.num_args() => {\n+                    parse::CountIsParam(pos) if pos >= self.num_args() => {\n                         e.span_label(\n                             span,\n                             &format!("}, {"sha": "84f4cc7f4ccd81213009e336dd0088001f6ef57c", "filename": "src/test/ui/fmt/ifmt-bad-arg.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-arg.rs?ref=f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4", "patch": "@@ -86,6 +86,9 @@ tenth number: {}\",\n     println!(\"{:foo}\", 1); //~ ERROR unknown format trait `foo`\n     println!(\"{5} {:4$} {6:7$}\", 1);\n     //~^ ERROR invalid reference to positional arguments 4, 5, 6 and 7 (there is 1 argument)\n+    let foo = 1;\n+    println!(\"{foo:0$}\");\n+    //~^ ERROR invalid reference to positional argument 0 (no arguments were given)\n \n     // We used to ICE here because we tried to unconditionally access the first argument, which\n     // doesn't exist."}, {"sha": "5439ee173985b7298424fd28cd99195662e4cf61", "filename": "src/test/ui/fmt/ifmt-bad-arg.stderr", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-arg.stderr?ref=f8dfc4bf350bad5140a7d1e7a9030b91dbdc4ce4", "patch": "@@ -251,8 +251,19 @@ LL |     println!(\"{5} {:4$} {6:7$}\", 1);\n    = note: positional arguments are zero-based\n    = note: for information about formatting flags, visit https://doc.rust-lang.org/std/fmt/index.html\n \n+error: invalid reference to positional argument 0 (no arguments were given)\n+  --> $DIR/ifmt-bad-arg.rs:90:15\n+   |\n+LL |     println!(\"{foo:0$}\");\n+   |               ^^^^^--^\n+   |                    |\n+   |                    this width flag expects an `usize` argument at position 0, but no arguments were given\n+   |\n+   = note: positional arguments are zero-based\n+   = note: for information about formatting flags, visit https://doc.rust-lang.org/std/fmt/index.html\n+\n error: 2 positional arguments in format string, but no arguments were given\n-  --> $DIR/ifmt-bad-arg.rs:92:15\n+  --> $DIR/ifmt-bad-arg.rs:95:15\n    |\n LL |     println!(\"{:.*}\");\n    |               ^^--^\n@@ -328,7 +339,7 @@ LL |     pub fn from_usize(x: &usize) -> ArgumentV1<'_> {\n    |            ^^^^^^^^^^\n    = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 36 previous errors\n+error: aborting due to 37 previous errors\n \n Some errors have detailed explanations: E0308, E0425.\n For more information about an error, try `rustc --explain E0308`."}]}