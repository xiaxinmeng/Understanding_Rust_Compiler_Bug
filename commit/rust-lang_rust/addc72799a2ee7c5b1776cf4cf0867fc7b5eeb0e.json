{"sha": "addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "node_id": "C_kwDOAAsO6NoAKGFkZGM3Mjc5OWEyZWU3YzViMTc3NmNmNGNmMDg2N2ZjN2I1ZWViMGU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-15T20:23:34Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-15T20:27:12Z"}, "message": "Profile MIR passes.", "tree": {"sha": "0c31f49d22dd4e74fd390db9ba6959c7fdb90e01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c31f49d22dd4e74fd390db9ba6959c7fdb90e01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "html_url": "https://github.com/rust-lang/rust/commit/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2913ad6db0f72fed5139253faed73200c7af3535", "url": "https://api.github.com/repos/rust-lang/rust/commits/2913ad6db0f72fed5139253faed73200c7af3535", "html_url": "https://github.com/rust-lang/rust/commit/2913ad6db0f72fed5139253faed73200c7af3535"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9a8e5ac56bab19b75dcaa14f580172f4af66cec8", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "patch": "@@ -101,7 +101,7 @@ impl<'tcx> HasLocalDecls<'tcx> for Body<'tcx> {\n /// pass will be named after the type, and it will consist of a main\n /// loop that goes over each available MIR and applies `run_pass`.\n pub trait MirPass<'tcx> {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         let name = std::any::type_name::<Self>();\n         if let Some((_, tail)) = name.rsplit_once(':') { tail } else { name }\n     }"}, {"sha": "746e3d9652db6042848a465aa7572f6d1030f378", "filename": "compiler/rustc_mir_transform/src/dump_mir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdump_mir.rs?ref=addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "patch": "@@ -12,7 +12,7 @@ use rustc_session::config::OutputType;\n pub struct Marker(pub &'static str);\n \n impl<'tcx> MirPass<'tcx> for Marker {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         self.0\n     }\n "}, {"sha": "710eed3ed380850dba1f697d4da55b4b06cd6f81", "filename": "compiler/rustc_mir_transform/src/pass_manager.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fpass_manager.rs?ref=addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "patch": "@@ -6,7 +6,7 @@ use crate::{validate, MirPass};\n \n /// Just like `MirPass`, except it cannot mutate `Body`.\n pub trait MirLint<'tcx> {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         let name = std::any::type_name::<Self>();\n         if let Some((_, tail)) = name.rsplit_once(':') { tail } else { name }\n     }\n@@ -26,7 +26,7 @@ impl<'tcx, T> MirPass<'tcx> for Lint<T>\n where\n     T: MirLint<'tcx>,\n {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         self.0.name()\n     }\n \n@@ -49,7 +49,7 @@ impl<'tcx, T> MirPass<'tcx> for WithMinOptLevel<T>\n where\n     T: MirPass<'tcx>,\n {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         self.1.name()\n     }\n \n@@ -121,7 +121,7 @@ fn run_passes_inner<'tcx>(\n                 validate_body(tcx, body, format!(\"before pass {}\", name));\n             }\n \n-            pass.run_pass(tcx, body);\n+            tcx.sess.time(name, || pass.run_pass(tcx, body));\n \n             if dump_enabled {\n                 dump_mir_for_pass(tcx, body, &name, true);"}, {"sha": "e59219321b7ffe69a9b4300ed583ff4239a3a31b", "filename": "compiler/rustc_mir_transform/src/simplify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify.rs?ref=addc72799a2ee7c5b1776cf4cf0867fc7b5eeb0e", "patch": "@@ -74,7 +74,7 @@ pub fn simplify_cfg<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n }\n \n impl<'tcx> MirPass<'tcx> for SimplifyCfg {\n-    fn name(&self) -> &str {\n+    fn name(&self) -> &'static str {\n         &self.name()\n     }\n "}]}