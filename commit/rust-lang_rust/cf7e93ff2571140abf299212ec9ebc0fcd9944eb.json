{"sha": "cf7e93ff2571140abf299212ec9ebc0fcd9944eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmN2U5M2ZmMjU3MTE0MGFiZjI5OTIxMmVjOWViYzBmY2Q5OTQ0ZWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-14T22:20:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-14T22:20:50Z"}, "message": "auto merge of #9198 : FlaPer87/rust/shared-port, r=cmr\n\nSharedPort implementation was missing in std::comm. Since this module\r\nalso wraps SharedChan, it makes sense to have SharedPort defined there\r\nas well.", "tree": {"sha": "3023658ae15090a3d5344a08ec5a5c3c5c3ea814", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3023658ae15090a3d5344a08ec5a5c3c5c3ea814"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf7e93ff2571140abf299212ec9ebc0fcd9944eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf7e93ff2571140abf299212ec9ebc0fcd9944eb", "html_url": "https://github.com/rust-lang/rust/commit/cf7e93ff2571140abf299212ec9ebc0fcd9944eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf7e93ff2571140abf299212ec9ebc0fcd9944eb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c4f65e6f593ed790a9d6328c9ff0093572e87ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4f65e6f593ed790a9d6328c9ff0093572e87ef", "html_url": "https://github.com/rust-lang/rust/commit/5c4f65e6f593ed790a9d6328c9ff0093572e87ef"}, {"sha": "9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e", "html_url": "https://github.com/rust-lang/rust/commit/9357f8f4cdc6d3a7c454d0b2e3ffbaad997f315e"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "ec8314795ac0ea76b195eddd14ec5e9279dcf8c7", "filename": "src/libstd/comm.rs", "status": "modified", "additions": 38, "deletions": 9, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/cf7e93ff2571140abf299212ec9ebc0fcd9944eb/src%2Flibstd%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf7e93ff2571140abf299212ec9ebc0fcd9944eb/src%2Flibstd%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm.rs?ref=cf7e93ff2571140abf299212ec9ebc0fcd9944eb", "patch": "@@ -66,15 +66,6 @@ pub fn stream<T: Send>() -> (Port<T>, Chan<T>) {\n     (Port { x: p }, Chan { x: c })\n }\n \n-pub struct SharedChan<T> { x: rtcomm::SharedChan<T> }\n-\n-impl<T: Send> SharedChan<T> {\n-    pub fn new(c: Chan<T>) -> SharedChan<T> {\n-        let Chan { x: c } = c;\n-        SharedChan { x: rtcomm::SharedChan::new(c) }\n-    }\n-}\n-\n impl<T: Send> ChanOne<T> {\n     pub fn send(self, val: T) {\n         let ChanOne { x: c } = self;\n@@ -161,6 +152,16 @@ impl<T: Send> Peekable<T> for Port<T> {\n     }\n }\n \n+\n+pub struct SharedChan<T> { x: rtcomm::SharedChan<T> }\n+\n+impl<T: Send> SharedChan<T> {\n+    pub fn new(c: Chan<T>) -> SharedChan<T> {\n+        let Chan { x: c } = c;\n+        SharedChan { x: rtcomm::SharedChan::new(c) }\n+    }\n+}\n+\n impl<T: Send> GenericChan<T> for SharedChan<T> {\n     fn send(&self, val: T) {\n         let &SharedChan { x: ref c } = self;\n@@ -193,3 +194,31 @@ impl<T> Clone for SharedChan<T> {\n         SharedChan { x: c.clone() }\n     }\n }\n+\n+pub struct SharedPort<T> { x: rtcomm::SharedPort<T> }\n+\n+impl<T: Send> SharedPort<T> {\n+    pub fn new(p: Port<T>) -> SharedPort<T> {\n+        let Port { x: p } = p;\n+        SharedPort { x: rtcomm::SharedPort::new(p) }\n+    }\n+}\n+\n+impl<T: Send> GenericPort<T> for SharedPort<T> {\n+    fn recv(&self) -> T {\n+        let &SharedPort { x: ref p } = self;\n+        p.recv()\n+    }\n+\n+    fn try_recv(&self) -> Option<T> {\n+        let &SharedPort { x: ref p } = self;\n+        p.try_recv()\n+    }\n+}\n+\n+impl<T> Clone for SharedPort<T> {\n+    fn clone(&self) -> SharedPort<T> {\n+        let &SharedPort { x: ref p } = self;\n+        SharedPort { x: p.clone() }\n+    }\n+}"}]}