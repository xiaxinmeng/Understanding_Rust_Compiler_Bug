{"sha": "48029aba2c4a902fae9c6f028bceae5105979114", "node_id": "C_kwDOAAsO6NoAKDQ4MDI5YWJhMmM0YTkwMmZhZTljNmYwMjhiY2VhZTUxMDU5NzkxMTQ", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-04-14T13:31:21Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-04-14T13:31:21Z"}, "message": "Remove some now-dead code that was only relevant before deaggregation.\n\nThe code was broken anyway, if the deaggregator is disabled, it would have ICE on any non-enum Adt", "tree": {"sha": "fb7e539b3bba8d7e21610fd6b368a1c48be2349f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb7e539b3bba8d7e21610fd6b368a1c48be2349f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48029aba2c4a902fae9c6f028bceae5105979114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48029aba2c4a902fae9c6f028bceae5105979114", "html_url": "https://github.com/rust-lang/rust/commit/48029aba2c4a902fae9c6f028bceae5105979114", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48029aba2c4a902fae9c6f028bceae5105979114/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3c43e64eceb00e13b1932229aa9b2d774e6af96", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3c43e64eceb00e13b1932229aa9b2d774e6af96", "html_url": "https://github.com/rust-lang/rust/commit/e3c43e64eceb00e13b1932229aa9b2d774e6af96"}], "stats": {"total": 22, "additions": 3, "deletions": 19}, "files": [{"sha": "e6dfdf54a32d136c7dbf70edb52ba4c9bbeb9ab3", "filename": "compiler/rustc_const_eval/src/interpret/step.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/48029aba2c4a902fae9c6f028bceae5105979114/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48029aba2c4a902fae9c6f028bceae5105979114/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs?ref=48029aba2c4a902fae9c6f028bceae5105979114", "patch": "@@ -196,27 +196,11 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 self.write_immediate(*val, &dest)?;\n             }\n \n-            Aggregate(ref kind, ref operands) => {\n-                // active_field_index is for union initialization.\n-                let (dest, active_field_index) = match **kind {\n-                    mir::AggregateKind::Adt(adt_did, variant_index, _, _, active_field_index) => {\n-                        self.write_discriminant(variant_index, &dest)?;\n-                        if self.tcx.adt_def(adt_did).is_enum() {\n-                            assert!(active_field_index.is_none());\n-                            (self.place_downcast(&dest, variant_index)?, None)\n-                        } else {\n-                            if active_field_index.is_some() {\n-                                assert_eq!(operands.len(), 1);\n-                            }\n-                            (dest, active_field_index)\n-                        }\n-                    }\n-                    _ => (dest, None),\n-                };\n+            Aggregate(box ref kind, ref operands) => {\n+                assert!(matches!(kind, mir::AggregateKind::Array(..)));\n \n-                for (i, operand) in operands.iter().enumerate() {\n+                for (field_index, operand) in operands.iter().enumerate() {\n                     let op = self.eval_operand(operand, None)?;\n-                    let field_index = active_field_index.unwrap_or(i);\n                     let field_dest = self.place_field(&dest, field_index)?;\n                     self.copy_op(&op, &field_dest)?;\n                 }"}]}