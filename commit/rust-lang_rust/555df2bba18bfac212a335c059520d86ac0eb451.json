{"sha": "555df2bba18bfac212a335c059520d86ac0eb451", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NWRmMmJiYTE4YmZhYzIxMmEzMzVjMDU5NTIwZDg2YWMwZWI0NTE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-22T13:58:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-22T13:58:08Z"}, "message": "Rollup merge of #58601 - gnzlbg:json_error, r=oli-obk\n\nSearch for target_triple.json only if builtin target not found\n\nBefore this commit, if the builtin target was found, but an error\nhappened when instantiating it (e.g. validating the target\nspecification file failed, etc.), then we ignored those errors\nand proceeded to try to find a `target_triple.json` file, and if\nthat failed, reported that as an error.\n\nWith this commit, if rustc is supposed to provide the builtin target,\nand something fails while instantiating it, that error will\nget properly propagated.\n\nr? @oli-obk", "tree": {"sha": "e66748ea2d2d2f434bac379c7d706de01c83dede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e66748ea2d2d2f434bac379c7d706de01c83dede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/555df2bba18bfac212a335c059520d86ac0eb451", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcb//wCRBK7hj4Ov3rIwAAdHIIACxAMwMhmL69BxE1SyDFnt12\nj3FvBqoIDwLIrrFhLKTNoSPd5KnSC9rDtH69/tZ7fb03UcLheo/CaDplnG3YF+J6\nCj/qIFfi4LgaTfSRRzOdAT7XV/xZwybanfZFpsoxqDdxajFHTXdF/mzKJp1vo9Ic\nnMfrXbMQnj0xBpHuZOD+luotQpd5hjTxh3kdnVpAQrJrZKtHpD8LPM5sqe+pQBK8\nhymGQEMFJ9AEKesFCMiFM7Z/GnBlbHAb86HdpTw6Xs/LLEVRIPF9J63cAJfGYfF+\nug+hXDeFQvW9OqKkezcQTfbsIh/yqwEfSfIn6P8nTXounMJQTlaVqVOBIN4AA4o=\n=M02l\n-----END PGP SIGNATURE-----\n", "payload": "tree e66748ea2d2d2f434bac379c7d706de01c83dede\nparent 575a2096243538868f6ac88dbd99be1b560962fd\nparent 103ed0c347062967b8b5fe76a02f945da14aac72\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550843888 +0100\ncommitter GitHub <noreply@github.com> 1550843888 +0100\n\nRollup merge of #58601 - gnzlbg:json_error, r=oli-obk\n\nSearch for target_triple.json only if builtin target not found\n\nBefore this commit, if the builtin target was found, but an error\nhappened when instantiating it (e.g. validating the target\nspecification file failed, etc.), then we ignored those errors\nand proceeded to try to find a `target_triple.json` file, and if\nthat failed, reported that as an error.\n\nWith this commit, if rustc is supposed to provide the builtin target,\nand something fails while instantiating it, that error will\nget properly propagated.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/555df2bba18bfac212a335c059520d86ac0eb451", "html_url": "https://github.com/rust-lang/rust/commit/555df2bba18bfac212a335c059520d86ac0eb451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/555df2bba18bfac212a335c059520d86ac0eb451/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575a2096243538868f6ac88dbd99be1b560962fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/575a2096243538868f6ac88dbd99be1b560962fd", "html_url": "https://github.com/rust-lang/rust/commit/575a2096243538868f6ac88dbd99be1b560962fd"}, {"sha": "103ed0c347062967b8b5fe76a02f945da14aac72", "url": "https://api.github.com/repos/rust-lang/rust/commits/103ed0c347062967b8b5fe76a02f945da14aac72", "html_url": "https://github.com/rust-lang/rust/commit/103ed0c347062967b8b5fe76a02f945da14aac72"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "bef2afc7b6292db5530e23008ab3e45fe9597234", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/555df2bba18bfac212a335c059520d86ac0eb451/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/555df2bba18bfac212a335c059520d86ac0eb451/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=555df2bba18bfac212a335c059520d86ac0eb451", "patch": "@@ -259,6 +259,11 @@ impl ToJson for MergeFunctions {\n     }\n }\n \n+pub enum LoadTargetError {\n+    BuiltinTargetNotFound(String),\n+    Other(String),\n+}\n+\n pub type LinkArgs = BTreeMap<LinkerFlavor, Vec<String>>;\n pub type TargetResult = Result<Target, String>;\n \n@@ -269,21 +274,24 @@ macro_rules! supported_targets {\n         /// List of supported targets\n         const TARGETS: &[&str] = &[$($triple),*];\n \n-        fn load_specific(target: &str) -> TargetResult {\n+        fn load_specific(target: &str) -> Result<Target, LoadTargetError> {\n             match target {\n                 $(\n                     $triple => {\n-                        let mut t = $module::target()?;\n+                        let mut t = $module::target()\n+                            .map_err(LoadTargetError::Other)?;\n                         t.options.is_builtin = true;\n \n                         // round-trip through the JSON parser to ensure at\n                         // run-time that the parser works correctly\n-                        t = Target::from_json(t.to_json())?;\n+                        t = Target::from_json(t.to_json())\n+                            .map_err(LoadTargetError::Other)?;\n                         debug!(\"Got builtin target: {:?}\", t);\n                         Ok(t)\n                     },\n                 )+\n-                _ => Err(format!(\"Unable to find target: {}\", target))\n+                    _ => Err(LoadTargetError::BuiltinTargetNotFound(\n+                        format!(\"Unable to find target: {}\", target)))\n             }\n         }\n \n@@ -1176,8 +1184,10 @@ impl Target {\n         match *target_triple {\n             TargetTriple::TargetTriple(ref target_triple) => {\n                 // check if triple is in list of supported targets\n-                if let Ok(t) = load_specific(target_triple) {\n-                    return Ok(t)\n+                match load_specific(target_triple) {\n+                    Ok(t) => return Ok(t),\n+                    Err(LoadTargetError::BuiltinTargetNotFound(_)) => (),\n+                    Err(LoadTargetError::Other(e)) => return Err(e),\n                 }\n \n                 // search for a file named `target_triple`.json in RUST_TARGET_PATH"}]}