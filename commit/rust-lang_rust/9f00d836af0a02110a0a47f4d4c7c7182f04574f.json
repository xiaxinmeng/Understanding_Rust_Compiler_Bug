{"sha": "9f00d836af0a02110a0a47f4d4c7c7182f04574f", "node_id": "C_kwDOAAsO6NoAKDlmMDBkODM2YWYwYTAyMTEwYTBhNDdmNGQ0YzdjNzE4MmYwNDU3NGY", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-07-24T10:26:20Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-07-24T10:26:20Z"}, "message": "make sure has_deref is correct", "tree": {"sha": "f2b51d4178c96f7d3d320616d2c9e1168e613ea9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2b51d4178c96f7d3d320616d2c9e1168e613ea9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f00d836af0a02110a0a47f4d4c7c7182f04574f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f00d836af0a02110a0a47f4d4c7c7182f04574f", "html_url": "https://github.com/rust-lang/rust/commit/9f00d836af0a02110a0a47f4d4c7c7182f04574f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f00d836af0a02110a0a47f4d4c7c7182f04574f/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "447aaceed717a516bb9f4b295d582f5e2594b83b", "url": "https://api.github.com/repos/rust-lang/rust/commits/447aaceed717a516bb9f4b295d582f5e2594b83b", "html_url": "https://github.com/rust-lang/rust/commit/447aaceed717a516bb9f4b295d582f5e2594b83b"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "f7311ebdabfd91bcb235b98cfa6236f146000206", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f00d836af0a02110a0a47f4d4c7c7182f04574f/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f00d836af0a02110a0a47f4d4c7c7182f04574f/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=9f00d836af0a02110a0a47f4d4c7c7182f04574f", "patch": "@@ -1464,6 +1464,8 @@ impl<'tcx> Place<'tcx> {\n     /// If MirPhase >= Derefered and if projection contains Deref,\n     /// It's guaranteed to be in the first place\n     pub fn has_deref(&self) -> bool {\n+        // To make sure this is not accidently used in wrong mir phase\n+        debug_assert!(!self.projection[1..].contains(&PlaceElem::Deref));\n         self.projection.first() == Some(&PlaceElem::Deref)\n     }\n "}]}