{"sha": "8f5d71cf71849bea25f87836cec1b06b476baf37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNWQ3MWNmNzE4NDliZWEyNWY4NzgzNmNlYzFiMDZiNDc2YmFmMzc=", "commit": {"author": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-09T17:24:00Z"}, "committer": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-14T01:00:50Z"}, "message": "rustdoc: Omit repeated paths in the search index.\n\nSince the items roughly follow the lexical order, there are\nmany consecutive items with the same path value which can be\neasily compressed.\n\nFor the library and compiler docs, this commit decreases\nthe index size by 26% and 6% before and after gzip, respectively.", "tree": {"sha": "664d3c034b76eb89566f1b58164902c4e0f8216e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/664d3c034b76eb89566f1b58164902c4e0f8216e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f5d71cf71849bea25f87836cec1b06b476baf37", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f5d71cf71849bea25f87836cec1b06b476baf37", "html_url": "https://github.com/rust-lang/rust/commit/8f5d71cf71849bea25f87836cec1b06b476baf37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f5d71cf71849bea25f87836cec1b06b476baf37/comments", "author": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb336a0206178f52146d41dd152166233df703b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb336a0206178f52146d41dd152166233df703b", "html_url": "https://github.com/rust-lang/rust/commit/9eb336a0206178f52146d41dd152166233df703b"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "669a489a4fb6e6ce2d0a34802af121fd1297f966", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8f5d71cf71849bea25f87836cec1b06b476baf37/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f5d71cf71849bea25f87836cec1b06b476baf37/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8f5d71cf71849bea25f87836cec1b06b476baf37", "patch": "@@ -309,12 +309,23 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n     let index = {\n         let mut w = MemWriter::new();\n         try!(write!(&mut w, r#\"searchIndex['{}'] = \\{\"items\":[\"#, krate.name));\n+\n+        let mut lastpath = ~\"\";\n         for (i, item) in cache.search_index.iter().enumerate() {\n+            // Omit the path if it is same to that of the prior item.\n+            let path;\n+            if lastpath == item.path {\n+                path = \"\";\n+            } else {\n+                lastpath = item.path.clone();\n+                path = item.path.as_slice();\n+            };\n+\n             if i > 0 {\n                 try!(write!(&mut w, \",\"));\n             }\n             try!(write!(&mut w, r#\"[{:u},\"{}\",\"{}\",{}\"#,\n-                        item.ty, item.name, item.path,\n+                        item.ty, item.name, path,\n                         item.desc.to_json().to_str()));\n             match item.parent {\n                 Some(nodeid) => {\n@@ -325,7 +336,9 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n             }\n             try!(write!(&mut w, \"]\"));\n         }\n+\n         try!(write!(&mut w, r#\"],\"paths\":[\"#));\n+\n         for (i, &nodeid) in pathid_to_nodeid.iter().enumerate() {\n             let &(ref fqp, short) = cache.paths.find(&nodeid).unwrap();\n             if i > 0 {\n@@ -334,6 +347,7 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n             try!(write!(&mut w, r#\"[{:u},\"{}\"]\"#,\n                         short, *fqp.last().unwrap()));\n         }\n+\n         try!(write!(&mut w, r\"]\\};\"));\n \n         str::from_utf8(w.unwrap().as_slice()).unwrap().to_owned()"}, {"sha": "4b79ae89eef6bc41a0ba566c7752e3cb5f560afd", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f5d71cf71849bea25f87836cec1b06b476baf37/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/8f5d71cf71849bea25f87836cec1b06b476baf37/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=8f5d71cf71849bea25f87836cec1b06b476baf37", "patch": "@@ -539,7 +539,7 @@\n \n                 // an array of [(Number) item type,\n                 //              (String) name,\n-                //              (String) full path,\n+                //              (String) full path or empty string for previous path,\n                 //              (String) description,\n                 //              (optional Number) the parent path index to `paths`]\n                 var items = rawSearchIndex[crate].items;\n@@ -561,10 +561,11 @@\n                 // all other search operations have access to this cached data for\n                 // faster analysis operations\n                 var len = items.length;\n+                var lastPath = \"\";\n                 for (var i = 0; i < len; i += 1) {\n                     var rawRow = items[i];\n                     var row = {crate: crate, ty: rawRow[0], name: rawRow[1],\n-                               path: rawRow[2], desc: rawRow[3],\n+                               path: rawRow[2] || lastPath, desc: rawRow[3],\n                                parent: paths[rawRow[4]]};\n                     searchIndex.push(row);\n                     if (typeof row.name === \"string\") {\n@@ -573,6 +574,7 @@\n                     } else {\n                         searchWords.push(\"\");\n                     }\n+                    lastPath = row.path;\n                 }\n             }\n             return searchWords;"}]}