{"sha": "6eea598645be5489f518f91e4b80a0f04a315fda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZWE1OTg2NDViZTU0ODlmNTE4ZjkxZTRiODBhMGYwNGEzMTVmZGE=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-05-07T17:07:59Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-05-27T02:53:43Z"}, "message": "Fix config file lookup", "tree": {"sha": "add37d356d68f4cff30f54250ae556acc7dbe0bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/add37d356d68f4cff30f54250ae556acc7dbe0bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eea598645be5489f518f91e4b80a0f04a315fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eea598645be5489f518f91e4b80a0f04a315fda", "html_url": "https://github.com/rust-lang/rust/commit/6eea598645be5489f518f91e4b80a0f04a315fda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eea598645be5489f518f91e4b80a0f04a315fda/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3af95846a2ab61238f1a8f9c16a52d4a8d2390b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3af95846a2ab61238f1a8f9c16a52d4a8d2390b0", "html_url": "https://github.com/rust-lang/rust/commit/3af95846a2ab61238f1a8f9c16a52d4a8d2390b0"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "b08a57a09b39fbce35ebd625fbe846226c3d9bf7", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6eea598645be5489f518f91e4b80a0f04a315fda/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eea598645be5489f518f91e4b80a0f04a315fda/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=6eea598645be5489f518f91e4b80a0f04a315fda", "patch": "@@ -405,7 +405,6 @@ pub fn register_pre_expansion_lints(store: &mut rustc_lint::LintStore) {\n \n #[doc(hidden)]\n pub fn read_conf(sess: &Session) -> Conf {\n-    use std::path::Path;\n     let file_name = match utils::conf::lookup_conf_file() {\n         Ok(Some(path)) => path,\n         Ok(None) => return Conf::default(),\n@@ -416,16 +415,6 @@ pub fn read_conf(sess: &Session) -> Conf {\n         },\n     };\n \n-    let file_name = if file_name.is_relative() {\n-        sess.local_crate_source_file\n-            .as_deref()\n-            .and_then(Path::parent)\n-            .unwrap_or_else(|| Path::new(\"\"))\n-            .join(file_name)\n-    } else {\n-        file_name\n-    };\n-\n     let TryConf { conf, errors } = utils::conf::read(&file_name);\n     // all conf errors are non-fatal, we just use the default conf in case of error\n     for error in errors {"}, {"sha": "1bd38dc042cb50eb541ffb12eda3d162f7cfa9c4", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6eea598645be5489f518f91e4b80a0f04a315fda/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eea598645be5489f518f91e4b80a0f04a315fda/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=6eea598645be5489f518f91e4b80a0f04a315fda", "patch": "@@ -210,15 +210,13 @@ pub fn lookup_conf_file() -> io::Result<Option<PathBuf>> {\n         .map_or_else(|| PathBuf::from(\".\"), PathBuf::from);\n     loop {\n         for config_file_name in &CONFIG_FILE_NAMES {\n-            let config_file = current.join(config_file_name);\n-            match fs::metadata(&config_file) {\n-                // Only return if it's a file to handle the unlikely situation of a directory named\n-                // `clippy.toml`.\n-                Ok(ref md) if !md.is_dir() => return Ok(Some(config_file)),\n-                // Return the error if it's something other than `NotFound`; otherwise we didn't\n-                // find the project file yet, and continue searching.\n-                Err(e) if e.kind() != io::ErrorKind::NotFound => return Err(e),\n-                _ => {},\n+            if let Ok(config_file) = current.join(config_file_name).canonicalize() {\n+                match fs::metadata(&config_file) {\n+                    Err(e) if e.kind() == io::ErrorKind::NotFound => {},\n+                    Err(e) => return Err(e),\n+                    Ok(md) if md.is_dir() => {},\n+                    Ok(_) => return Ok(Some(config_file)),\n+                }\n             }\n         }\n "}]}