{"sha": "3f16597a6adee9d99119ca6eaaf31f6ae8dce496", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMTY1OTdhNmFkZWU5ZDk5MTE5Y2E2ZWFhZjMxZjZhZThkY2U0OTY=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-08-12T21:23:07Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-08-12T21:23:07Z"}, "message": "Move to intra doc links whenever possible within std/src/lib.rs", "tree": {"sha": "2d82598ae67f2a8a8d7782cf2e0dc978c7b29685", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d82598ae67f2a8a8d7782cf2e0dc978c7b29685"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f16597a6adee9d99119ca6eaaf31f6ae8dce496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f16597a6adee9d99119ca6eaaf31f6ae8dce496", "html_url": "https://github.com/rust-lang/rust/commit/3f16597a6adee9d99119ca6eaaf31f6ae8dce496", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f16597a6adee9d99119ca6eaaf31f6ae8dce496/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "url": "https://api.github.com/repos/rust-lang/rust/commits/3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "html_url": "https://github.com/rust-lang/rust/commit/3df25ae186e89c885d9a71cd37fbd7a37e39fc85"}], "stats": {"total": 67, "additions": 27, "deletions": 40}, "files": [{"sha": "1144a13b52c30b377a806a4e075891bd82711355", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 27, "deletions": 40, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/3f16597a6adee9d99119ca6eaaf31f6ae8dce496/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f16597a6adee9d99119ca6eaaf31f6ae8dce496/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=3f16597a6adee9d99119ca6eaaf31f6ae8dce496", "patch": "@@ -22,7 +22,7 @@\n //! * [`std::*` modules](#modules)\n //! * [Primitive types](#primitives)\n //! * [Standard macros](#macros)\n-//! * [The Rust Prelude](prelude/index.html)\n+//! * [The Rust Prelude]\n //!\n //! If this is your first time, the documentation for the standard library is\n //! written to be casually perused. Clicking on interesting things should\n@@ -63,8 +63,8 @@\n //! So for example there is a [page for the primitive type\n //! `i32`](primitive.i32.html) that lists all the methods that can be called on\n //! 32-bit integers (very useful), and there is a [page for the module\n-//! `std::i32`](i32/index.html) that documents the constant values [`MIN`] and\n-//! [`MAX`](i32/constant.MAX.html) (rarely useful).\n+//! `std::i32`] that documents the constant values [`MIN`] and [`MAX`] (rarely\n+//! useful).\n //!\n //! Note the documentation for the primitives [`str`] and [`[T]`][slice] (also\n //! called 'slice'). Many method calls on [`String`] and [`Vec<T>`] are actually\n@@ -152,48 +152,35 @@\n //! contains further primitive shared memory types, including [`atomic`] and\n //! [`mpsc`], which contains the channel types for message passing.\n //!\n-//! [I/O]: io/index.html\n-//! [`MIN`]: i32/constant.MIN.html\n-//! [TCP]: net/struct.TcpStream.html\n-//! [The Rust Prelude]: prelude/index.html\n-//! [UDP]: net/struct.UdpSocket.html\n-//! [`Arc`]: sync/struct.Arc.html\n-//! [owned slice]: boxed/index.html\n-//! [`Cell`]: cell/struct.Cell.html\n-//! [`FromStr`]: str/trait.FromStr.html\n-//! [`HashMap<K, V>`]: collections/struct.HashMap.html\n-//! [`Iterator`]: iter/trait.Iterator.html\n-//! [`Mutex`]: sync/struct.Mutex.html\n-//! [`Option<T>`]: option/enum.Option.html\n-//! [`Rc`]: rc/struct.Rc.html\n-//! [`RefCell`]: cell/struct.RefCell.html\n-//! [`Result<T, E>`]: result/enum.Result.html\n-//! [`String`]: string/struct.String.html\n-//! [`Vec<T>`]: vec/struct.Vec.html\n-//! [array]: primitive.array.html\n-//! [slice]: primitive.slice.html\n-//! [`atomic`]: sync/atomic/index.html\n-//! [`collections`]: collections/index.html\n+//! [I/O]: io\n+//! [`MIN`]: i32::MIN\n+//! [`MAX`]: i32::MAX\n+//! [page for the module `std::i32`]: crate::i32\n+//! [TCP]: net::TcpStream\n+//! [The Rust Prelude]: prelude\n+//! [UDP]: net::UdpSocket\n+//! [`Arc`]: sync::Arc\n+//! [owned slice]: boxed\n+//! [`Cell`]: cell::Cell\n+//! [`FromStr`]: str::FromStr\n+//! [`HashMap<K, V>`]: collections::HashMap\n+//! [`Mutex`]: sync::Mutex\n+//! [`Option<T>`]: option::Option\n+//! [`Rc`]: rc::Rc\n+//! [`RefCell`]: cell::RefCell\n+//! [`Result<T, E>`]: result::Result\n+//! [`Vec<T>`]: vec::Vec\n+//! [`atomic`]: sync::atomic\n //! [`for`]: ../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n-//! [`format!`]: macro.format.html\n-//! [`fs`]: fs/index.html\n-//! [`io`]: io/index.html\n-//! [`iter`]: iter/index.html\n-//! [`mpsc`]: sync/mpsc/index.html\n-//! [`net`]: net/index.html\n-//! [`option`]: option/index.html\n-//! [`result`]: result/index.html\n-//! [`std::cmp`]: cmp/index.html\n-//! [`std::slice`]: slice/index.html\n-//! [`str`]: primitive.str.html\n-//! [`sync`]: sync/index.html\n-//! [`thread`]: thread/index.html\n+//! [`mpsc`]: sync::mpsc\n+//! [`std::cmp`]: cmp\n+//! [`std::slice`]: slice\n //! [`use std::env`]: env/index.html\n //! [`use`]: ../book/ch07-02-defining-modules-to-control-scope-and-privacy.html\n //! [crates.io]: https://crates.io\n //! [deref-coercions]: ../book/ch15-02-deref.html#implicit-deref-coercions-with-functions-and-methods\n-//! [files]: fs/struct.File.html\n-//! [multithreading]: thread/index.html\n+//! [files]: fs::File\n+//! [multithreading]: thread\n //! [other]: #what-is-in-the-standard-library-documentation\n //! [primitive types]: ../book/ch03-02-data-types.html\n //! [rust-discord]: https://discord.gg/rust-lang"}]}