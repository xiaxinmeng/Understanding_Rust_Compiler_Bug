{"sha": "b92c1197b64c6942b54bde159b8929ff2ee8ac53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MmMxMTk3YjY0YzY5NDJiNTRiZGUxNTliODkyOWZmMmVlOGFjNTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-01T23:39:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-01T23:39:32Z"}, "message": "Long lines", "tree": {"sha": "f23d557d851732e0286b8aa4eea9ce93e83a0a70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f23d557d851732e0286b8aa4eea9ce93e83a0a70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b92c1197b64c6942b54bde159b8929ff2ee8ac53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b92c1197b64c6942b54bde159b8929ff2ee8ac53", "html_url": "https://github.com/rust-lang/rust/commit/b92c1197b64c6942b54bde159b8929ff2ee8ac53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b92c1197b64c6942b54bde159b8929ff2ee8ac53/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0069bd2f4612b744ab3731b4c1db13c2f3202185", "url": "https://api.github.com/repos/rust-lang/rust/commits/0069bd2f4612b744ab3731b4c1db13c2f3202185", "html_url": "https://github.com/rust-lang/rust/commit/0069bd2f4612b744ab3731b4c1db13c2f3202185"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "e988f5ed54215f886deb3a6aa2e5224cea817d0b", "filename": "src/rustc/front/config.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b92c1197b64c6942b54bde159b8929ff2ee8ac53/src%2Frustc%2Ffront%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b92c1197b64c6942b54bde159b8929ff2ee8ac53/src%2Frustc%2Ffront%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Ffront%2Fconfig.rs?ref=b92c1197b64c6942b54bde159b8929ff2ee8ac53", "patch": "@@ -80,7 +80,8 @@ fn fold_foreign_mod(cx: ctxt, nm: ast::foreign_mod,\n     };\n }\n \n-fn fold_item_underscore(cx: ctxt, item: ast::item_, fld: fold::ast_fold) -> ast::item_ {\n+fn fold_item_underscore(cx: ctxt, item: ast::item_,\n+                        fld: fold::ast_fold) -> ast::item_ {\n     let item = match item {\n         ast::item_impl(a, b, c, Some(methods)) => {\n             let methods = methods.filter(|m| method_in_cfg(cx, *m) );"}]}