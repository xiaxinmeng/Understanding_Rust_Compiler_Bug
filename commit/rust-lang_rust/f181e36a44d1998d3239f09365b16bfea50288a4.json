{"sha": "f181e36a44d1998d3239f09365b16bfea50288a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxODFlMzZhNDRkMTk5OGQzMjM5ZjA5MzY1YjE2YmZlYTUwMjg4YTQ=", "commit": {"author": {"name": "Bernardo", "email": "berublan@gmail.com", "date": "2019-01-18T23:53:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-26T08:46:27Z"}, "message": "handle recursive watching ourselves", "tree": {"sha": "b93c2aca51c5498e9acab866d0fac04a4ef7c5d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b93c2aca51c5498e9acab866d0fac04a4ef7c5d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f181e36a44d1998d3239f09365b16bfea50288a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f181e36a44d1998d3239f09365b16bfea50288a4", "html_url": "https://github.com/rust-lang/rust/commit/f181e36a44d1998d3239f09365b16bfea50288a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f181e36a44d1998d3239f09365b16bfea50288a4/comments", "author": {"login": "vemoo", "id": 4866051, "node_id": "MDQ6VXNlcjQ4NjYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4866051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vemoo", "html_url": "https://github.com/vemoo", "followers_url": "https://api.github.com/users/vemoo/followers", "following_url": "https://api.github.com/users/vemoo/following{/other_user}", "gists_url": "https://api.github.com/users/vemoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vemoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vemoo/subscriptions", "organizations_url": "https://api.github.com/users/vemoo/orgs", "repos_url": "https://api.github.com/users/vemoo/repos", "events_url": "https://api.github.com/users/vemoo/events{/privacy}", "received_events_url": "https://api.github.com/users/vemoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e69b620f0d1e90afcc14dc7cf07ed0b828d8ec96", "url": "https://api.github.com/repos/rust-lang/rust/commits/e69b620f0d1e90afcc14dc7cf07ed0b828d8ec96", "html_url": "https://github.com/rust-lang/rust/commit/e69b620f0d1e90afcc14dc7cf07ed0b828d8ec96"}], "stats": {"total": 94, "additions": 78, "deletions": 16}, "files": [{"sha": "2d18122d8870ca074136d990d27bcbccfbdbce7d", "filename": "Cargo.lock", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f181e36a44d1998d3239f09365b16bfea50288a4/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f181e36a44d1998d3239f09365b16bfea50288a4/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f181e36a44d1998d3239f09365b16bfea50288a4", "patch": "@@ -446,6 +446,18 @@ name = \"glob\"\n version = \"0.2.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"globset\"\n+version = \"0.4.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"aho-corasick 0.6.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"memchr 2.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"heck\"\n version = \"0.3.1\"\n@@ -469,6 +481,23 @@ dependencies = [\n  \"unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"ignore\"\n+version = \"0.4.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"crossbeam-channel 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"globset 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"memchr 2.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"same-file 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"im\"\n version = \"12.3.0\"\n@@ -1010,6 +1039,7 @@ dependencies = [\n  \"crossbeam-channel 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"flexi_logger 0.10.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ignore 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"notify 4.0.6 (git+https://github.com/vemoo/notify/?branch=v4-legacy)\",\n  \"ra_arena 0.1.0\",\n@@ -1868,9 +1898,11 @@ dependencies = [\n \"checksum futures 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49e7653e374fe0d0c12de4250f0bdb60680b8c80eed558c5c7538eec9c89e21b\"\n \"checksum generic-array 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ef25c5683767570c2bbd7deba372926a55eaae9982d7726ee2a1050239d45b9d\"\n \"checksum glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8be18de09a56b60ed0edf84bc9df007e30040691af7acd1c41874faac5895bfb\"\n+\"checksum globset 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4743617a7464bbda3c8aec8558ff2f9429047e025771037df561d383337ff865\"\n \"checksum heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205\"\n \"checksum humansize 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b6cab2627acfc432780848602f3f558f7e9dd427352224b0d9324025796d2a5e\"\n \"checksum idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e\"\n+\"checksum ignore 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad03ca67dc12474ecd91fdb94d758cbd20cb4e7a78ebe831df26a9b7511e1162\"\n \"checksum im 12.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0627d417829c1d763d602687634869f254fc79f7e22dea6c824dab993db857e4\"\n \"checksum indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e81a7c05f79578dbc15793d8b619db9ba32b4577003ef3af1a91c416798c58d\"\n \"checksum inotify 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"40b54539f3910d6f84fbf9a643efd6e3aa6e4f001426c0329576128255994718\""}, {"sha": "58196555c4c675f2dece0b523e3ea737eaf24e7e", "filename": "crates/ra_vfs/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f181e36a44d1998d3239f09365b16bfea50288a4/crates%2Fra_vfs%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f181e36a44d1998d3239f09365b16bfea50288a4/crates%2Fra_vfs%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2FCargo.toml?ref=f181e36a44d1998d3239f09365b16bfea50288a4", "patch": "@@ -12,6 +12,7 @@ crossbeam-channel = \"0.3.5\"\n log = \"0.4.6\"\n # until https://github.com/passcod/notify/issues/169 is fixed\n notify = { git = \"https://github.com/vemoo/notify/\", branch = \"v4-legacy\" }\n+ignore = \"0.4\"\n drop_bomb = \"0.1.0\"\n \n thread_worker = { path = \"../thread_worker\" }"}, {"sha": "ad40db340decfae264ac744cedf8e0e7d3379e96", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f181e36a44d1998d3239f09365b16bfea50288a4/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f181e36a44d1998d3239f09365b16bfea50288a4/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=f181e36a44d1998d3239f09365b16bfea50288a4", "patch": "@@ -141,9 +141,7 @@ impl Vfs {\n             };\n             res.worker.inp.send(task).unwrap();\n             if let Some(ref mut watcher) = res.watcher {\n-                if let Err(e) = watcher.watch(path) {\n-                    log::warn!(\"could not watch \\\"{}\\\": {}\", path.display(), e);\n-                }\n+                watcher.watch(path);\n             }\n         }\n         let roots = res.roots.iter().map(|(id, _)| id).collect();"}, {"sha": "013611e1ab8d8e3487d6e088589bf920cfd3ef7e", "filename": "crates/ra_vfs/src/watcher.rs", "status": "modified", "additions": 44, "deletions": 13, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/f181e36a44d1998d3239f09365b16bfea50288a4/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f181e36a44d1998d3239f09365b16bfea50288a4/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fwatcher.rs?ref=f181e36a44d1998d3239f09365b16bfea50288a4", "patch": "@@ -1,17 +1,17 @@\n+use crate::io;\n+use crossbeam_channel::Sender;\n+use drop_bomb::DropBomb;\n+use ignore;\n+use notify::{DebouncedEvent, RecommendedWatcher, RecursiveMode, Watcher as NotifyWatcher};\n use std::{\n     path::{Path, PathBuf},\n-    sync::mpsc,\n+    sync::{mpsc, Arc, Mutex},\n     thread,\n     time::Duration,\n };\n \n-use crate::io;\n-use crossbeam_channel::Sender;\n-use drop_bomb::DropBomb;\n-use notify::{DebouncedEvent, RecommendedWatcher, RecursiveMode, Watcher as NotifyWatcher};\n-\n pub struct Watcher {\n-    watcher: RecommendedWatcher,\n+    watcher: Arc<Mutex<RecommendedWatcher>>,\n     thread: thread::JoinHandle<()>,\n     bomb: DropBomb,\n }\n@@ -24,9 +24,10 @@ pub enum WatcherChange {\n     Rescan,\n }\n \n-fn send_change_events(\n+fn handle_change_event(\n     ev: DebouncedEvent,\n     sender: &Sender<io::Task>,\n+    watcher: &Arc<Mutex<RecommendedWatcher>>,\n ) -> Result<(), Box<std::error::Error>> {\n     match ev {\n         DebouncedEvent::NoticeWrite(_)\n@@ -38,6 +39,9 @@ fn send_change_events(\n             sender.send(io::Task::HandleChange(WatcherChange::Rescan))?;\n         }\n         DebouncedEvent::Create(path) => {\n+            if path.is_dir() {\n+                watch_recursive(watcher, &path);\n+            }\n             sender.send(io::Task::HandleChange(WatcherChange::Create(path)))?;\n         }\n         DebouncedEvent::Write(path) => {\n@@ -58,17 +62,45 @@ fn send_change_events(\n     Ok(())\n }\n \n+fn watch_one(watcher: &mut RecommendedWatcher, path: &Path) {\n+    match watcher.watch(path, RecursiveMode::NonRecursive) {\n+        Ok(()) => log::debug!(\"watching \\\"{}\\\"\", path.display()),\n+        Err(e) => log::warn!(\"could not watch \\\"{}\\\": {}\", path.display(), e),\n+    }\n+}\n+\n+fn watch_recursive(watcher: &Arc<Mutex<RecommendedWatcher>>, path: &Path) {\n+    log::debug!(\"watch_recursive \\\"{}\\\"\", path.display());\n+    let mut w = watcher.lock().unwrap();\n+    // TODO it seems path itself isn't checked against ignores\n+    // check if path should be ignored before walking it\n+    for res in ignore::Walk::new(path) {\n+        match res {\n+            Ok(entry) => {\n+                if entry.path().is_dir() {\n+                    watch_one(&mut w, entry.path());\n+                }\n+            }\n+            Err(e) => log::warn!(\"watcher error: {}\", e),\n+        }\n+    }\n+}\n+\n impl Watcher {\n     pub(crate) fn start(\n         output_sender: Sender<io::Task>,\n     ) -> Result<Watcher, Box<std::error::Error>> {\n         let (input_sender, input_receiver) = mpsc::channel();\n-        let watcher = notify::watcher(input_sender, Duration::from_millis(250))?;\n+        let watcher = Arc::new(Mutex::new(notify::watcher(\n+            input_sender,\n+            Duration::from_millis(250),\n+        )?));\n+        let w = watcher.clone();\n         let thread = thread::spawn(move || {\n             input_receiver\n                 .into_iter()\n                 // forward relevant events only\n-                .try_for_each(|change| send_change_events(change, &output_sender))\n+                .try_for_each(|change| handle_change_event(change, &output_sender, &w))\n                 .unwrap()\n         });\n         Ok(Watcher {\n@@ -78,9 +110,8 @@ impl Watcher {\n         })\n     }\n \n-    pub fn watch(&mut self, root: impl AsRef<Path>) -> Result<(), Box<std::error::Error>> {\n-        self.watcher.watch(root, RecursiveMode::Recursive)?;\n-        Ok(())\n+    pub fn watch(&mut self, root: impl AsRef<Path>) {\n+        watch_recursive(&self.watcher, root.as_ref());\n     }\n \n     pub fn shutdown(mut self) -> thread::Result<()> {"}]}