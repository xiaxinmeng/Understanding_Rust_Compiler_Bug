{"sha": "5cf20ca3c539d8d2e2560055f516ef95251837c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZjIwY2EzYzUzOWQ4ZDJlMjU2MDA1NWY1MTZlZjk1MjUxODM3YzE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-01-31T14:42:45Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-02-01T10:27:59Z"}, "message": "Fix image link in the settings menu", "tree": {"sha": "f911a11fb80abc1acaa365cdefb1f799c1aa8ea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f911a11fb80abc1acaa365cdefb1f799c1aa8ea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cf20ca3c539d8d2e2560055f516ef95251837c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf20ca3c539d8d2e2560055f516ef95251837c1", "html_url": "https://github.com/rust-lang/rust/commit/5cf20ca3c539d8d2e2560055f516ef95251837c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cf20ca3c539d8d2e2560055f516ef95251837c1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f40aaa68278ef0879af5fe7ce077c64c6515ea05", "url": "https://api.github.com/repos/rust-lang/rust/commits/f40aaa68278ef0879af5fe7ce077c64c6515ea05", "html_url": "https://github.com/rust-lang/rust/commit/f40aaa68278ef0879af5fe7ce077c64c6515ea05"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "b444993c1b5ecd9f153492c5a2058248c2fe6d93", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5cf20ca3c539d8d2e2560055f516ef95251837c1/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf20ca3c539d8d2e2560055f516ef95251837c1/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=5cf20ca3c539d8d2e2560055f516ef95251837c1", "patch": "@@ -4,6 +4,8 @@ use std::path::PathBuf;\n \n use externalfiles::ExternalHtml;\n \n+use html::render::SlashChecker;\n+\n #[derive(Clone)]\n pub struct Layout {\n     pub logo: String,\n@@ -176,16 +178,22 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     static_root_path = static_root_path,\n     root_path = page.root_path,\n     css_class = page.css_class,\n-    logo      = if layout.logo.is_empty() {\n-        format!(\"<a href='{}{}/index.html'>\\\n-                 <img src='{static_root_path}rust-logo{suffix}.png' alt='logo' width='100'></a>\",\n-                static_root_path=static_root_path,\n-                suffix=page.resource_suffix)\n-    } else {\n-        format!(\"<a href='{}{}/index.html'>\\\n-                 <img src='{}' alt='logo' width='100'></a>\",\n-                page.root_path, layout.krate,\n-                layout.logo)\n+    logo      = {\n+        let p = format!(\"{}{}\", page.root_path, layout.krate);\n+        let p = SlashChecker(&p);\n+        if layout.logo.is_empty() {\n+            format!(\"<a href='{path}index.html'>\\\n+                     <img src='{static_root_path}rust-logo{suffix}.png' \\\n+                          alt='logo' width='100'></a>\",\n+                    path=p,\n+                    static_root_path=static_root_path,\n+                    suffix=page.resource_suffix)\n+        } else {\n+            format!(\"<a href='{}index.html'>\\\n+                     <img src='{}' alt='logo' width='100'></a>\",\n+                    p,\n+                    layout.logo)\n+        }\n     },\n     title     = page.title,\n     description = page.description,"}, {"sha": "f2bd56978c28778f22062d52acdde0c8f51ada13", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5cf20ca3c539d8d2e2560055f516ef95251837c1/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf20ca3c539d8d2e2560055f516ef95251837c1/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=5cf20ca3c539d8d2e2560055f516ef95251837c1", "patch": "@@ -73,6 +73,18 @@ use minifier;\n /// A pair of name and its optional document.\n pub type NameDoc = (String, Option<String>);\n \n+pub struct SlashChecker<'a>(pub &'a str);\n+\n+impl<'a> Display for SlashChecker<'a> {\n+    fn fmt(&self, f: &mut Formatter) -> fmt::Result {\n+        if !self.0.ends_with(\"/\") && !self.0.is_empty() {\n+            write!(f, \"{}/\", self.0)\n+        } else {\n+            write!(f, \"{}\", self.0)\n+        }\n+    }\n+}\n+\n /// Major driving force in all rustdoc rendering. This contains information\n /// about where in the tree-like hierarchy rendering is occurring and controls\n /// how the current page is being rendered.\n@@ -1140,7 +1152,8 @@ themePicker.onblur = handleThemeButtonsBlur;\n                                   krates\n                                     .iter()\n                                     .map(|s| {\n-                                        format!(\"<li><a href=\\\"{}/index.html\\\">{}</li>\", s, s)\n+                                        format!(\"<li><a href=\\\"{}index.html\\\">{}</li>\",\n+                                                SlashChecker(s), s)\n                                     })\n                                     .collect::<String>());\n             try_err!(layout::render(&mut w, &cx.shared.layout,\n@@ -2074,8 +2087,7 @@ impl Context {\n         let mut themes = self.shared.themes.clone();\n         let sidebar = \"<p class='location'>Settings</p><div class='sidebar-elems'></div>\";\n         themes.push(PathBuf::from(\"settings.css\"));\n-        let mut layout = self.shared.layout.clone();\n-        layout.krate = String::new();\n+        let layout = self.shared.layout.clone();\n         try_err!(layout::render(&mut w, &layout,\n                                 &page, &sidebar, &settings,\n                                 self.shared.css_file_extension.is_some(),\n@@ -2454,7 +2466,7 @@ impl<'a> fmt::Display for Item<'a> {\n \n fn item_path(ty: ItemType, name: &str) -> String {\n     match ty {\n-        ItemType::Module => format!(\"{}/index.html\", name),\n+        ItemType::Module => format!(\"{}index.html\", SlashChecker(name)),\n         _ => format!(\"{}.{}.html\", ty.css_class(), name),\n     }\n }"}, {"sha": "c721c024468ddf2b75e8ee6b608b9217eba9ecad", "filename": "src/test/rustdoc/keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cf20ca3c539d8d2e2560055f516ef95251837c1/src%2Ftest%2Frustdoc%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf20ca3c539d8d2e2560055f516ef95251837c1/src%2Ftest%2Frustdoc%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fkeyword.rs?ref=5cf20ca3c539d8d2e2560055f516ef95251837c1", "patch": "@@ -7,7 +7,7 @@\n // @has foo/keyword.match.html '//a[@class=\"keyword\"]' 'match'\n // @has foo/keyword.match.html '//span[@class=\"in-band\"]' 'Keyword match'\n // @has foo/keyword.match.html '//section[@id=\"main\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n-// @!has foo/index.html '//a/@href' 'foo/index.html'\n+// @has foo/index.html '//a/@href' '../foo/index.html'\n // @!has foo/foo/index.html\n // @!has-dir foo/foo\n #[doc(keyword = \"match\")]"}]}