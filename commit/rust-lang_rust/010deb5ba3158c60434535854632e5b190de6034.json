{"sha": "010deb5ba3158c60434535854632e5b190de6034", "node_id": "C_kwDOAAsO6NoAKDAxMGRlYjViYTMxNThjNjA0MzQ1MzU4NTQ2MzJlNWIxOTBkZTYwMzQ", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-21T01:12:39Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-04-21T01:12:39Z"}, "message": "Panic instead of truncating if the dep graph is too big", "tree": {"sha": "8771e4322affe4450a2c9e39715c897176e183b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8771e4322affe4450a2c9e39715c897176e183b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/010deb5ba3158c60434535854632e5b190de6034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/010deb5ba3158c60434535854632e5b190de6034", "html_url": "https://github.com/rust-lang/rust/commit/010deb5ba3158c60434535854632e5b190de6034", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/010deb5ba3158c60434535854632e5b190de6034/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bdcc62cb0362869f0e7b43a6ae4f96b953d3cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bdcc62cb0362869f0e7b43a6ae4f96b953d3cbc", "html_url": "https://github.com/rust-lang/rust/commit/8bdcc62cb0362869f0e7b43a6ae4f96b953d3cbc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c05323c2d6ca8d4a7a7c7a9a62388939f13e5d9f", "filename": "compiler/rustc_query_impl/src/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/010deb5ba3158c60434535854632e5b190de6034/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/010deb5ba3158c60434535854632e5b190de6034/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs?ref=010deb5ba3158c60434535854632e5b190de6034", "patch": "@@ -300,7 +300,7 @@ impl<'sess> rustc_middle::ty::OnDiskCache<'sess> for OnDiskCache<'sess> {\n                     interpret_alloc_index.reserve(new_n - n);\n                     for idx in n..new_n {\n                         let id = encoder.interpret_allocs[idx];\n-                        let pos = encoder.position() as u32;\n+                        let pos: u32 = encoder.position().try_into().unwrap();\n                         interpret_alloc_index.push(pos);\n                         interpret::specialized_encode_alloc_id(&mut encoder, tcx, id);\n                     }"}]}