{"sha": "0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkYTBhZTNhYTZhYmYxYmQ3YTZlN2ZkNzI1YWQyNTZjZWQ0MzhmNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-08T20:28:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-08T20:28:19Z"}, "message": "Auto merge of #5022 - flip1995:useless_attr, r=phansch\n\nFix useless_attribute suggestion\n\nFixes #5021\n\nchangelog: Fix [`useless_attribute`] suggestion, which tripped rustfix", "tree": {"sha": "712bf1c7cf6786da78a9237bfc24e9d9c0cb0513", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/712bf1c7cf6786da78a9237bfc24e9d9c0cb0513"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "html_url": "https://github.com/rust-lang/rust/commit/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52b9e704c6fa3903ac235065aa6152bff92f712d", "url": "https://api.github.com/repos/rust-lang/rust/commits/52b9e704c6fa3903ac235065aa6152bff92f712d", "html_url": "https://github.com/rust-lang/rust/commit/52b9e704c6fa3903ac235065aa6152bff92f712d"}, {"sha": "6eba66532c305973da2a3dc0648365150ba886b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eba66532c305973da2a3dc0648365150ba886b8", "html_url": "https://github.com/rust-lang/rust/commit/6eba66532c305973da2a3dc0648365150ba886b8"}], "stats": {"total": 94, "additions": 88, "deletions": 6}, "files": [{"sha": "e304d98009891e8b489d396790b88ad4d880250a", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "patch": "@@ -42,8 +42,8 @@ use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::Node;\n use rustc_hir::*;\n use rustc_span::hygiene::ExpnKind;\n-use rustc_span::source_map::{Span, DUMMY_SP};\n use rustc_span::symbol::{kw, Symbol};\n+use rustc_span::{BytePos, Pos, Span, DUMMY_SP};\n use smallvec::SmallVec;\n use syntax::ast::{self, Attribute, LitKind};\n use syntax::attr;\n@@ -554,7 +554,16 @@ pub fn last_line_of_span<T: LintContext>(cx: &T, span: Span) -> Span {\n     let source_map_and_line = cx.sess().source_map().lookup_line(span.lo()).unwrap();\n     let line_no = source_map_and_line.line;\n     let line_start = &source_map_and_line.sf.lines[line_no];\n-    Span::new(*line_start, span.hi(), span.ctxt())\n+    let span = Span::new(*line_start, span.hi(), span.ctxt());\n+    if_chain! {\n+        if let Some(snip) = snippet_opt(cx, span);\n+        if let Some(first_ch_pos) = snip.find(|c: char| !c.is_whitespace());\n+        then {\n+            span.with_lo(span.lo() + BytePos::from_usize(first_ch_pos))\n+        } else {\n+            span\n+        }\n+    }\n }\n \n /// Like `snippet_block`, but add braces if the expr is not an `ExprKind::Block`."}, {"sha": "56811a998728c51a61d7e5f0a3371fc86bef432a", "filename": "tests/ui/useless_attribute.fixed", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/tests%2Fui%2Fuseless_attribute.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/tests%2Fui%2Fuseless_attribute.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.fixed?ref=0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "patch": "@@ -0,0 +1,57 @@\n+// run-rustfix\n+// aux-build:proc_macro_derive.rs\n+\n+#![warn(clippy::useless_attribute)]\n+#![warn(unreachable_pub)]\n+#![feature(rustc_private)]\n+\n+#![allow(dead_code)]\n+#![cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n+#[rustfmt::skip]\n+#[allow(unused_imports)]\n+#[allow(unused_extern_crates)]\n+#[macro_use]\n+extern crate rustc;\n+\n+#[macro_use]\n+extern crate proc_macro_derive;\n+\n+// don't lint on unused_import for `use` items\n+#[allow(unused_imports)]\n+use std::collections;\n+\n+// don't lint on deprecated for `use` items\n+mod foo {\n+    #[deprecated]\n+    pub struct Bar;\n+}\n+#[allow(deprecated)]\n+pub use foo::Bar;\n+\n+// This should not trigger the lint. There's lint level definitions inside the external derive\n+// that would trigger the useless_attribute lint.\n+#[derive(DeriveSomething)]\n+struct Baz;\n+\n+// don't lint on unreachable_pub for `use` items\n+mod a {\n+    mod b {\n+        #[allow(dead_code)]\n+        #[allow(unreachable_pub)]\n+        pub struct C {}\n+    }\n+\n+    #[allow(unreachable_pub)]\n+    pub use self::b::C;\n+}\n+\n+fn test_indented_attr() {\n+    #![allow(clippy::almost_swapped)]\n+    use std::collections::HashSet;\n+\n+    let _ = HashSet::<u32>::default();\n+}\n+\n+fn main() {\n+    test_indented_attr();\n+}"}, {"sha": "bbf5e495db4a775e3f7fb8132522ad7bde5d3cf2", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "patch": "@@ -1,3 +1,4 @@\n+// run-rustfix\n // aux-build:proc_macro_derive.rs\n \n #![warn(clippy::useless_attribute)]\n@@ -44,4 +45,13 @@ mod a {\n     pub use self::b::C;\n }\n \n-fn main() {}\n+fn test_indented_attr() {\n+    #[allow(clippy::almost_swapped)]\n+    use std::collections::HashSet;\n+\n+    let _ = HashSet::<u32>::default();\n+}\n+\n+fn main() {\n+    test_indented_attr();\n+}"}, {"sha": "08a211b41a9133064000c2fb049bb87dbd498ea0", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=0da0ae3aa6abf1bd7a6e7fd725ad256ced438f50", "patch": "@@ -1,16 +1,22 @@\n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:7:1\n+  --> $DIR/useless_attribute.rs:8:1\n    |\n LL | #[allow(dead_code)]\n    | ^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![allow(dead_code)]`\n    |\n    = note: `-D clippy::useless-attribute` implied by `-D warnings`\n \n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:8:1\n+  --> $DIR/useless_attribute.rs:9:1\n    |\n LL | #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![cfg_attr(feature = \"cargo-clippy\", allow(dead_code)`\n \n-error: aborting due to 2 previous errors\n+error: useless lint attribute\n+  --> $DIR/useless_attribute.rs:49:5\n+   |\n+LL |     #[allow(clippy::almost_swapped)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![allow(clippy::almost_swapped)]`\n+\n+error: aborting due to 3 previous errors\n "}]}