{"sha": "df7f755e3b08e58a30bdbb39685bea76be7762ba", "node_id": "C_kwDOAAsO6NoAKGRmN2Y3NTVlM2IwOGU1OGEzMGJkYmIzOTY4NWJlYTc2YmU3NzYyYmE", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-04T12:01:33Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-08-04T12:56:44Z"}, "message": "Don't flycheck while the workspace is being loaded", "tree": {"sha": "0481074b073c3ef8db0082e14f0c58efeb011080", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0481074b073c3ef8db0082e14f0c58efeb011080"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df7f755e3b08e58a30bdbb39685bea76be7762ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df7f755e3b08e58a30bdbb39685bea76be7762ba", "html_url": "https://github.com/rust-lang/rust/commit/df7f755e3b08e58a30bdbb39685bea76be7762ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df7f755e3b08e58a30bdbb39685bea76be7762ba/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df9d3db82f1d0dce5f74faf8ae0501a534953f84", "url": "https://api.github.com/repos/rust-lang/rust/commits/df9d3db82f1d0dce5f74faf8ae0501a534953f84", "html_url": "https://github.com/rust-lang/rust/commit/df9d3db82f1d0dce5f74faf8ae0501a534953f84"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "09150c77d7dd1d9de53adaff2a67382132e32711", "filename": "crates/rust-analyzer/src/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df7f755e3b08e58a30bdbb39685bea76be7762ba/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df7f755e3b08e58a30bdbb39685bea76be7762ba/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics.rs?ref=df7f755e3b08e58a30bdbb39685bea76be7762ba", "patch": "@@ -72,7 +72,6 @@ impl DiagnosticCollection {\n         let check_fixes = Arc::make_mut(&mut self.check_fixes);\n         check_fixes.entry(flycheck_id).or_default().entry(file_id).or_default().extend(fix);\n         diagnostics.push(diagnostic);\n-        tracing::warn!(?flycheck_id, ?file_id, \"add_check_diagnostic changes pushed\");\n         self.changes.insert(file_id);\n     }\n "}, {"sha": "55c4cfcf8608f20150d54656b7636d1a17ee8f4a", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df7f755e3b08e58a30bdbb39685bea76be7762ba/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df7f755e3b08e58a30bdbb39685bea76be7762ba/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=df7f755e3b08e58a30bdbb39685bea76be7762ba", "patch": "@@ -192,6 +192,7 @@ impl GlobalState {\n                 if let Some(path) = vfs.file_path(file.file_id).as_path() {\n                     let path = path.to_path_buf();\n                     if reload::should_refresh_for_change(&path, file.change_kind) {\n+                        tracing::warn!(\"fetch-fiel_change\");\n                         self.fetch_workspaces_queue\n                             .request_op(format!(\"vfs file change: {}\", path.display()));\n                     }"}, {"sha": "4ed34df01ca930a34d61cc474c640aa9da4c9351", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/df7f755e3b08e58a30bdbb39685bea76be7762ba/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df7f755e3b08e58a30bdbb39685bea76be7762ba/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=df7f755e3b08e58a30bdbb39685bea76be7762ba", "patch": "@@ -447,7 +447,10 @@ impl GlobalState {\n         let memdocs_added_or_removed = self.mem_docs.take_changes();\n \n         if self.is_quiescent() {\n-            if !was_quiescent {\n+            if !was_quiescent\n+                && !self.fetch_workspaces_queue.op_requested()\n+                && !self.fetch_build_data_queue.op_requested()\n+            {\n                 for flycheck in &self.flycheck {\n                     flycheck.update();\n                 }"}]}