{"sha": "577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d", "node_id": "C_kwDOAAsO6NoAKDU3N2YzYzZmNTJmNjQxYThhOGYyYjJlMzllZTk3ODRiYmY3NmQyNWQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-24T15:57:01Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-12T17:00:13Z"}, "message": "add test for implicit stuff in signatures of closures with `for<>`", "tree": {"sha": "a0b9504a66b7529d2b21e7e80f0744e5234fe2f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0b9504a66b7529d2b21e7e80f0744e5234fe2f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d", "html_url": "https://github.com/rust-lang/rust/commit/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c284843ba23482a2263e1e60b595ead154baae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c284843ba23482a2263e1e60b595ead154baae1", "html_url": "https://github.com/rust-lang/rust/commit/0c284843ba23482a2263e1e60b595ead154baae1"}], "stats": {"total": 134, "additions": 134, "deletions": 0}, "files": [{"sha": "09e4c747afee833f7f1787a30d0022c195e6b470", "filename": "src/test/ui/closures/binder/implicit-stuff.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d/src%2Ftest%2Fui%2Fclosures%2Fbinder%2Fimplicit-stuff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d/src%2Ftest%2Fui%2Fclosures%2Fbinder%2Fimplicit-stuff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fbinder%2Fimplicit-stuff.rs?ref=577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d", "patch": "@@ -0,0 +1,27 @@\n+#![feature(closure_lifetime_binder)]\n+\n+fn main() {\n+    // Implicit types\n+    let _ = for<> || {};                                      //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+    let _ = for<'a> || -> &'a _ { &() };                      //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+    let _ = for<'a> |x| -> &'a () { x };                      //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+    let _ = for<'a> |x: &'a _| -> &'a () { x };               //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+    let _ = for<'a> |x: &'a Vec::<_>| -> &'a Vec::<()> { x }; //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+    let _ = for<'a> |x: &'a Vec<()>| -> &'a Vec<_> { x };     //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+    let _ = for<'a> |x: &'a _| -> &'a &'a () { x };           //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+    let _ = for<'a> |x: &'a _, y, z: _| -> &'a _ {            //~ ERROR implicit types in closure signatures are forbidden when `for<...>` is present\n+        let _: &u8 = x;\n+        let _: u32 = y;\n+        let _: i32 = z;\n+        x\n+    };\n+\n+    // Lifetime elision\n+    let _ = for<> |_: &()| -> () {};           //~ ERROR `&` without an explicit lifetime name cannot be used here\n+    let _ = for<> |x: &()| -> &() { x };       //~ ERROR `&` without an explicit lifetime name cannot be used here\n+                                               //~| ERROR `&` without an explicit lifetime name cannot be used here\n+    let _ = for<> |x: &'_ ()| -> &'_ () { x }; //~ ERROR `'_` cannot be used here\n+                                               //~| ERROR `'_` cannot be used here\n+    let _ = for<'a> |x: &()| -> &'a () { x };  //~ ERROR `&` without an explicit lifetime name cannot be used here\n+    let _ = for<'a> |x: &'a ()| -> &() { x };  //~ ERROR `&` without an explicit lifetime name cannot be used here\n+}"}, {"sha": "779a08a44e5a838abf31a70031f7cdf45e5bada8", "filename": "src/test/ui/closures/binder/implicit-stuff.stderr", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d/src%2Ftest%2Fui%2Fclosures%2Fbinder%2Fimplicit-stuff.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d/src%2Ftest%2Fui%2Fclosures%2Fbinder%2Fimplicit-stuff.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fbinder%2Fimplicit-stuff.stderr?ref=577f3c6f52f641a8a8f2b2e39ee9784bbf76d25d", "patch": "@@ -0,0 +1,107 @@\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/implicit-stuff.rs:20:23\n+   |\n+LL |     let _ = for<> |_: &()| -> () {};\n+   |                       ^ explicit lifetime name needed here\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/implicit-stuff.rs:21:23\n+   |\n+LL |     let _ = for<> |x: &()| -> &() { x };\n+   |                       ^ explicit lifetime name needed here\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/implicit-stuff.rs:21:31\n+   |\n+LL |     let _ = for<> |x: &()| -> &() { x };\n+   |                               ^ explicit lifetime name needed here\n+\n+error[E0637]: `'_` cannot be used here\n+  --> $DIR/implicit-stuff.rs:23:24\n+   |\n+LL |     let _ = for<> |x: &'_ ()| -> &'_ () { x };\n+   |                        ^^ `'_` is a reserved lifetime name\n+\n+error[E0637]: `'_` cannot be used here\n+  --> $DIR/implicit-stuff.rs:23:35\n+   |\n+LL |     let _ = for<> |x: &'_ ()| -> &'_ () { x };\n+   |                                   ^^ `'_` is a reserved lifetime name\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/implicit-stuff.rs:25:25\n+   |\n+LL |     let _ = for<'a> |x: &()| -> &'a () { x };\n+   |                         ^ explicit lifetime name needed here\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/implicit-stuff.rs:26:36\n+   |\n+LL |     let _ = for<'a> |x: &'a ()| -> &() { x };\n+   |                                    ^ explicit lifetime name needed here\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:5:22\n+   |\n+LL |     let _ = for<> || {};\n+   |             -----    ^\n+   |             |\n+   |             `for<...>` is here\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:6:31\n+   |\n+LL |     let _ = for<'a> || -> &'a _ { &() };\n+   |             -------           ^\n+   |             |\n+   |             `for<...>` is here\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:7:22\n+   |\n+LL |     let _ = for<'a> |x| -> &'a () { x };\n+   |             -------  ^\n+   |             |\n+   |             `for<...>` is here\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:8:29\n+   |\n+LL |     let _ = for<'a> |x: &'a _| -> &'a () { x };\n+   |             -------         ^\n+   |             |\n+   |             `for<...>` is here\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:9:35\n+   |\n+LL |     let _ = for<'a> |x: &'a Vec::<_>| -> &'a Vec::<()> { x };\n+   |             -------               ^\n+   |             |\n+   |             `for<...>` is here\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:10:49\n+   |\n+LL |     let _ = for<'a> |x: &'a Vec<()>| -> &'a Vec<_> { x };\n+   |             ------- `for<...>` is here          ^\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:11:29\n+   |\n+LL |     let _ = for<'a> |x: &'a _| -> &'a &'a () { x };\n+   |             -------         ^\n+   |             |\n+   |             `for<...>` is here\n+\n+error: implicit types in closure signatures are forbidden when `for<...>` is present\n+  --> $DIR/implicit-stuff.rs:12:29\n+   |\n+LL |     let _ = for<'a> |x: &'a _, y, z: _| -> &'a _ {\n+   |             -------         ^  ^     ^         ^\n+   |             |\n+   |             `for<...>` is here\n+\n+error: aborting due to 15 previous errors\n+\n+For more information about this error, try `rustc --explain E0637`."}]}