{"sha": "217b30568ed8dc6e11df9978a31747cb1fc9a094", "node_id": "C_kwDOAAsO6NoAKDIxN2IzMDU2OGVkOGRjNmUxMWRmOTk3OGEzMTc0N2NiMWZjOWEwOTQ", "commit": {"author": {"name": "Walther", "email": "veeti.haapsamo@gmail.com", "date": "2022-03-17T13:03:02Z"}, "committer": {"name": "Walther", "email": "veeti.haapsamo@gmail.com", "date": "2022-03-17T13:03:02Z"}, "message": "Insert #[must_use] in generate_is_empty_from_len", "tree": {"sha": "4f24fcdf52076675afac10bdc8bc626d145b5f1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f24fcdf52076675afac10bdc8bc626d145b5f1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/217b30568ed8dc6e11df9978a31747cb1fc9a094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/217b30568ed8dc6e11df9978a31747cb1fc9a094", "html_url": "https://github.com/rust-lang/rust/commit/217b30568ed8dc6e11df9978a31747cb1fc9a094", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/217b30568ed8dc6e11df9978a31747cb1fc9a094/comments", "author": {"login": "Walther", "id": 2943750, "node_id": "MDQ6VXNlcjI5NDM3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2943750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Walther", "html_url": "https://github.com/Walther", "followers_url": "https://api.github.com/users/Walther/followers", "following_url": "https://api.github.com/users/Walther/following{/other_user}", "gists_url": "https://api.github.com/users/Walther/gists{/gist_id}", "starred_url": "https://api.github.com/users/Walther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Walther/subscriptions", "organizations_url": "https://api.github.com/users/Walther/orgs", "repos_url": "https://api.github.com/users/Walther/repos", "events_url": "https://api.github.com/users/Walther/events{/privacy}", "received_events_url": "https://api.github.com/users/Walther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Walther", "id": 2943750, "node_id": "MDQ6VXNlcjI5NDM3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/2943750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Walther", "html_url": "https://github.com/Walther", "followers_url": "https://api.github.com/users/Walther/followers", "following_url": "https://api.github.com/users/Walther/following{/other_user}", "gists_url": "https://api.github.com/users/Walther/gists{/gist_id}", "starred_url": "https://api.github.com/users/Walther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Walther/subscriptions", "organizations_url": "https://api.github.com/users/Walther/orgs", "repos_url": "https://api.github.com/users/Walther/repos", "events_url": "https://api.github.com/users/Walther/events{/privacy}", "received_events_url": "https://api.github.com/users/Walther/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98143da79924fe2044acae749ffb01923f2f14c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/98143da79924fe2044acae749ffb01923f2f14c6", "html_url": "https://github.com/rust-lang/rust/commit/98143da79924fe2044acae749ffb01923f2f14c6"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "bd7c85c443026240b74051a3514b8e85dafcaf8f", "filename": "crates/ide_assists/src/handlers/generate_is_empty_from_len.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/217b30568ed8dc6e11df9978a31747cb1fc9a094/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_is_empty_from_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/217b30568ed8dc6e11df9978a31747cb1fc9a094/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_is_empty_from_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_is_empty_from_len.rs?ref=217b30568ed8dc6e11df9978a31747cb1fc9a094", "patch": "@@ -17,6 +17,7 @@ use crate::{\n // struct MyStruct { data: Vec<String> }\n //\n // impl MyStruct {\n+//     #[must_use]\n //     p$0ub fn len(&self) -> usize {\n //         self.data.len()\n //     }\n@@ -27,10 +28,12 @@ use crate::{\n // struct MyStruct { data: Vec<String> }\n //\n // impl MyStruct {\n+//     #[must_use]\n //     pub fn len(&self) -> usize {\n //         self.data.len()\n //     }\n //\n+//     #[must_use]\n //     pub fn is_empty(&self) -> bool {\n //         self.len() == 0\n //     }\n@@ -72,6 +75,7 @@ pub(crate) fn generate_is_empty_from_len(acc: &mut Assists, ctx: &AssistContext)\n         |builder| {\n             let code = r#\"\n \n+    #[must_use]\n     pub fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\"#\n@@ -129,6 +133,7 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     p$0ub fn len(&self, _i: bool) -> usize {\n         self.data.len()\n     }\n@@ -146,10 +151,12 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     p$0ub fn len(&self) -> usize {\n         self.data.len()\n     }\n \n+    #[must_use]\n     pub fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n@@ -167,6 +174,7 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     p$0ub fn len(&self) -> u32 {\n         self.data.len()\n     }\n@@ -183,6 +191,7 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     p$0ub fn len(&self) -> usize {\n         self.data.len()\n     }\n@@ -192,10 +201,12 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     pub fn len(&self) -> usize {\n         self.data.len()\n     }\n \n+    #[must_use]\n     pub fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n@@ -212,10 +223,12 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     pub fn new() -> Self {\n         Self { data: 0 }\n     }\n \n+    #[must_use]\n     p$0ub fn len(&self) -> usize {\n         self.data.len()\n     }\n@@ -229,14 +242,17 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     pub fn new() -> Self {\n         Self { data: 0 }\n     }\n \n+    #[must_use]\n     pub fn len(&self) -> usize {\n         self.data.len()\n     }\n \n+    #[must_use]\n     pub fn is_empty(&self) -> bool {\n         self.len() == 0\n     }\n@@ -257,12 +273,14 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     p$0ub fn len(&self) -> usize {\n         self.data.len()\n     }\n }\n \n impl MyStruct {\n+    #[must_use]\n     pub fn is_empty(&self) -> bool {\n         self.len() == 0\n     }"}, {"sha": "99138039f42ae75a1a27776a35af4e4516b64703", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/217b30568ed8dc6e11df9978a31747cb1fc9a094/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/217b30568ed8dc6e11df9978a31747cb1fc9a094/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=217b30568ed8dc6e11df9978a31747cb1fc9a094", "patch": "@@ -1097,6 +1097,7 @@ fn doctest_generate_is_empty_from_len() {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     p$0ub fn len(&self) -> usize {\n         self.data.len()\n     }\n@@ -1106,10 +1107,12 @@ impl MyStruct {\n struct MyStruct { data: Vec<String> }\n \n impl MyStruct {\n+    #[must_use]\n     pub fn len(&self) -> usize {\n         self.data.len()\n     }\n \n+    #[must_use]\n     pub fn is_empty(&self) -> bool {\n         self.len() == 0\n     }"}]}