{"sha": "f121f094fe4d4f4e92142984e9230373c311e1e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMjFmMDk0ZmU0ZDRmNGU5MjE0Mjk4NGU5MjMwMzczYzMxMWUxZTY=", "commit": {"author": {"name": "ThinkChaos", "email": "ThinkChaos@users.noreply.github.com", "date": "2020-04-21T18:03:50Z"}, "committer": {"name": "ThinkChaos", "email": "ThinkChaos@users.noreply.github.com", "date": "2020-04-26T09:43:34Z"}, "message": "Add `RefCell::take`\n\nIn the same vein as `Cell::take` and `Option::take`.", "tree": {"sha": "2d26e7717bb359fcb0b6ce7241d88b67317224ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d26e7717bb359fcb0b6ce7241d88b67317224ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f121f094fe4d4f4e92142984e9230373c311e1e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f121f094fe4d4f4e92142984e9230373c311e1e6", "html_url": "https://github.com/rust-lang/rust/commit/f121f094fe4d4f4e92142984e9230373c311e1e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f121f094fe4d4f4e92142984e9230373c311e1e6/comments", "author": {"login": "ThinkChaos", "id": 4761135, "node_id": "MDQ6VXNlcjQ3NjExMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4761135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkChaos", "html_url": "https://github.com/ThinkChaos", "followers_url": "https://api.github.com/users/ThinkChaos/followers", "following_url": "https://api.github.com/users/ThinkChaos/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkChaos/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkChaos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkChaos/subscriptions", "organizations_url": "https://api.github.com/users/ThinkChaos/orgs", "repos_url": "https://api.github.com/users/ThinkChaos/repos", "events_url": "https://api.github.com/users/ThinkChaos/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkChaos/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThinkChaos", "id": 4761135, "node_id": "MDQ6VXNlcjQ3NjExMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4761135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkChaos", "html_url": "https://github.com/ThinkChaos", "followers_url": "https://api.github.com/users/ThinkChaos/followers", "following_url": "https://api.github.com/users/ThinkChaos/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkChaos/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkChaos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkChaos/subscriptions", "organizations_url": "https://api.github.com/users/ThinkChaos/orgs", "repos_url": "https://api.github.com/users/ThinkChaos/repos", "events_url": "https://api.github.com/users/ThinkChaos/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkChaos/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "019ab732ce63a117cbb446db1488916c5c0bd2a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/019ab732ce63a117cbb446db1488916c5c0bd2a7", "html_url": "https://github.com/rust-lang/rust/commit/019ab732ce63a117cbb446db1488916c5c0bd2a7"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "05c9c97a6126e23d2fa2295d3e28c5274e50ea75", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f121f094fe4d4f4e92142984e9230373c311e1e6/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f121f094fe4d4f4e92142984e9230373c311e1e6/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=f121f094fe4d4f4e92142984e9230373c311e1e6", "patch": "@@ -1023,6 +1023,27 @@ impl<T: ?Sized> RefCell<T> {\n     }\n }\n \n+impl<T: Default> RefCell<T> {\n+    /// Takes the wrapped value, leaving `Default::default()` in its place.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(refcell_take)]\n+    /// use std::cell::RefCell;\n+    ///\n+    /// let c = RefCell::new(5);\n+    /// let five = c.take();\n+    ///\n+    /// assert_eq!(five, 5);\n+    /// assert_eq!(c.into_inner(), 0);\n+    /// ```\n+    #[unstable(feature = \"refcell_take\", issue = \"71395\")]\n+    pub fn take(&self) -> T {\n+        self.replace(Default::default())\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe impl<T: ?Sized> Send for RefCell<T> where T: Send {}\n "}]}