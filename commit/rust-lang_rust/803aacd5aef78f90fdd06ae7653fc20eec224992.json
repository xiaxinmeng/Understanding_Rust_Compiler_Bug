{"sha": "803aacd5aef78f90fdd06ae7653fc20eec224992", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwM2FhY2Q1YWVmNzhmOTBmZGQwNmFlNzY1M2ZjMjBlZWMyMjQ5OTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-17T02:56:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-17T02:56:55Z"}, "message": "auto merge of #18927 : areski/rust/pr-improve-option-match-readl, r=jakub-\n\n**match** are much more easy to read when it's not in 1 single line", "tree": {"sha": "2088be9de347fd4961bd5c1457383d0aef91d811", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2088be9de347fd4961bd5c1457383d0aef91d811"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/803aacd5aef78f90fdd06ae7653fc20eec224992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/803aacd5aef78f90fdd06ae7653fc20eec224992", "html_url": "https://github.com/rust-lang/rust/commit/803aacd5aef78f90fdd06ae7653fc20eec224992", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/803aacd5aef78f90fdd06ae7653fc20eec224992/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7b4f075a531eb160becf2818c1e9a63fa10cd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7b4f075a531eb160becf2818c1e9a63fa10cd3", "html_url": "https://github.com/rust-lang/rust/commit/0b7b4f075a531eb160becf2818c1e9a63fa10cd3"}, {"sha": "4aa2040cc71d1a0394a2845e5b0959655e2a3ecb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb", "html_url": "https://github.com/rust-lang/rust/commit/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "af9efee0c8fd187cd4b6f20917e6e509aa50a728", "filename": "src/libcore/option.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/803aacd5aef78f90fdd06ae7653fc20eec224992/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803aacd5aef78f90fdd06ae7653fc20eec224992/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=803aacd5aef78f90fdd06ae7653fc20eec224992", "patch": "@@ -235,7 +235,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[stable]\n     pub fn as_ref<'r>(&'r self) -> Option<&'r T> {\n-        match *self { Some(ref x) => Some(x), None => None }\n+        match *self {\n+            Some(ref x) => Some(x),\n+            None => None\n+        }\n     }\n \n     /// Convert from `Option<T>` to `Option<&mut T>`\n@@ -253,7 +256,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for mut conventions\"]\n     pub fn as_mut<'r>(&'r mut self) -> Option<&'r mut T> {\n-        match *self { Some(ref mut x) => Some(x), None => None }\n+        match *self {\n+            Some(ref mut x) => Some(x),\n+            None => None\n+        }\n     }\n \n     /// Convert from `Option<T>` to `&mut [T]` (without copying)\n@@ -401,7 +407,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n     pub fn map<U>(self, f: |T| -> U) -> Option<U> {\n-        match self { Some(x) => Some(f(x)), None => None }\n+        match self {\n+            Some(x) => Some(f(x)),\n+            None => None\n+        }\n     }\n \n     /// Applies a function to the contained value or returns a default.\n@@ -418,7 +427,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n     pub fn map_or<U>(self, def: U, f: |T| -> U) -> U {\n-        match self { None => def, Some(t) => f(t) }\n+        match self {\n+            Some(t) => f(t),\n+            None => def\n+        }\n     }\n \n     /// Applies a function to the contained value or computes a default.\n@@ -437,7 +449,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n     pub fn map_or_else<U>(self, def: || -> U, f: |T| -> U) -> U {\n-        match self { None => def(), Some(t) => f(t) }\n+        match self {\n+            Some(t) => f(t),\n+            None => def()\n+        }\n     }\n \n     /// Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to"}]}