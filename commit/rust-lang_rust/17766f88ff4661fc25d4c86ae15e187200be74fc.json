{"sha": "17766f88ff4661fc25d4c86ae15e187200be74fc", "node_id": "C_kwDOAAsO6NoAKDE3NzY2Zjg4ZmY0NjYxZmMyNWQ0Yzg2YWUxNWUxODcyMDBiZTc0ZmM", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-12-11T17:29:29Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-12-11T17:29:29Z"}, "message": "Fix AArch64 asm ui tests", "tree": {"sha": "fb9b6e06c5158a9b846c6c34be8de0eee7d1e881", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb9b6e06c5158a9b846c6c34be8de0eee7d1e881"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17766f88ff4661fc25d4c86ae15e187200be74fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17766f88ff4661fc25d4c86ae15e187200be74fc", "html_url": "https://github.com/rust-lang/rust/commit/17766f88ff4661fc25d4c86ae15e187200be74fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17766f88ff4661fc25d4c86ae15e187200be74fc/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8716f2780e067c3590a6be4545cf40d0b6d8865a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8716f2780e067c3590a6be4545cf40d0b6d8865a", "html_url": "https://github.com/rust-lang/rust/commit/8716f2780e067c3590a6be4545cf40d0b6d8865a"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "e346f8d992aa5cd8f3f4ae8c60f7dec2841028fe", "filename": "src/test/ui/asm/aarch64/bad-reg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17766f88ff4661fc25d4c86ae15e187200be74fc/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fbad-reg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17766f88ff4661fc25d4c86ae15e187200be74fc/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fbad-reg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fbad-reg.rs?ref=17766f88ff4661fc25d4c86ae15e187200be74fc", "patch": "@@ -29,8 +29,6 @@ fn main() {\n         //~^ ERROR invalid register `sp`: the stack pointer cannot be used as an operand\n         asm!(\"\", in(\"xzr\") foo);\n         //~^ ERROR invalid register `xzr`: the zero register cannot be used as an operand\n-        asm!(\"\", in(\"x18\") foo);\n-        //~^ ERROR invalid register `x18`: x18 is used as a reserved register on some targets and cannot be used as an operand for inline asm\n         asm!(\"\", in(\"x19\") foo);\n         //~^ ERROR invalid register `x19`: x19 is used internally by LLVM and cannot be used as an operand for inline asm\n "}, {"sha": "42f2a5d72ec0915cfb30e02ef36600c64214169a", "filename": "src/test/ui/asm/aarch64/bad-reg.stderr", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/17766f88ff4661fc25d4c86ae15e187200be74fc/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fbad-reg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17766f88ff4661fc25d4c86ae15e187200be74fc/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fbad-reg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fbad-reg.stderr?ref=17766f88ff4661fc25d4c86ae15e187200be74fc", "patch": "@@ -74,79 +74,73 @@ error: invalid register `xzr`: the zero register cannot be used as an operand fo\n LL |         asm!(\"\", in(\"xzr\") foo);\n    |                  ^^^^^^^^^^^^^\n \n-error: invalid register `x18`: x18 is used as a reserved register on some targets and cannot be used as an operand for inline asm\n-  --> $DIR/bad-reg.rs:32:18\n-   |\n-LL |         asm!(\"\", in(\"x18\") foo);\n-   |                  ^^^^^^^^^^^^^\n-\n error: invalid register `x19`: x19 is used internally by LLVM and cannot be used as an operand for inline asm\n-  --> $DIR/bad-reg.rs:34:18\n+  --> $DIR/bad-reg.rs:32:18\n    |\n LL |         asm!(\"\", in(\"x19\") foo);\n    |                  ^^^^^^^^^^^^^\n \n error: register class `preg` can only be used as a clobber, not as an input or output\n-  --> $DIR/bad-reg.rs:37:18\n+  --> $DIR/bad-reg.rs:35:18\n    |\n LL |         asm!(\"\", in(\"p0\") foo);\n    |                  ^^^^^^^^^^^^\n \n error: register class `preg` can only be used as a clobber, not as an input or output\n-  --> $DIR/bad-reg.rs:40:20\n+  --> $DIR/bad-reg.rs:38:20\n    |\n LL |         asm!(\"{}\", in(preg) foo);\n    |                    ^^^^^^^^^^^^\n \n error: register class `preg` can only be used as a clobber, not as an input or output\n-  --> $DIR/bad-reg.rs:42:20\n+  --> $DIR/bad-reg.rs:40:20\n    |\n LL |         asm!(\"{}\", out(preg) _);\n    |                    ^^^^^^^^^^^\n \n error: register `x0` conflicts with register `x0`\n-  --> $DIR/bad-reg.rs:48:32\n+  --> $DIR/bad-reg.rs:46:32\n    |\n LL |         asm!(\"\", in(\"x0\") foo, in(\"w0\") bar);\n    |                  ------------  ^^^^^^^^^^^^ register `x0`\n    |                  |\n    |                  register `x0`\n \n error: register `x0` conflicts with register `x0`\n-  --> $DIR/bad-reg.rs:50:32\n+  --> $DIR/bad-reg.rs:48:32\n    |\n LL |         asm!(\"\", in(\"x0\") foo, out(\"x0\") bar);\n    |                  ------------  ^^^^^^^^^^^^^ register `x0`\n    |                  |\n    |                  register `x0`\n    |\n help: use `lateout` instead of `out` to avoid conflict\n-  --> $DIR/bad-reg.rs:50:18\n+  --> $DIR/bad-reg.rs:48:18\n    |\n LL |         asm!(\"\", in(\"x0\") foo, out(\"x0\") bar);\n    |                  ^^^^^^^^^^^^\n \n error: register `v0` conflicts with register `v0`\n-  --> $DIR/bad-reg.rs:53:32\n+  --> $DIR/bad-reg.rs:51:32\n    |\n LL |         asm!(\"\", in(\"v0\") foo, in(\"q0\") bar);\n    |                  ------------  ^^^^^^^^^^^^ register `v0`\n    |                  |\n    |                  register `v0`\n \n error: register `v0` conflicts with register `v0`\n-  --> $DIR/bad-reg.rs:55:32\n+  --> $DIR/bad-reg.rs:53:32\n    |\n LL |         asm!(\"\", in(\"v0\") foo, out(\"q0\") bar);\n    |                  ------------  ^^^^^^^^^^^^^ register `v0`\n    |                  |\n    |                  register `v0`\n    |\n help: use `lateout` instead of `out` to avoid conflict\n-  --> $DIR/bad-reg.rs:55:18\n+  --> $DIR/bad-reg.rs:53:18\n    |\n LL |         asm!(\"\", in(\"v0\") foo, out(\"q0\") bar);\n    |                  ^^^^^^^^^^^^\n \n-error: aborting due to 19 previous errors\n+error: aborting due to 18 previous errors\n "}]}