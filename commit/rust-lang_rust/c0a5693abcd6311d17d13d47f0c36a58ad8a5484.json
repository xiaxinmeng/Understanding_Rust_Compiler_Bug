{"sha": "c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "node_id": "C_kwDOAAsO6NoAKGMwYTU2OTNhYmNkNjMxMWQxN2QxM2Q0N2YwYzM2YTU4YWQ4YTU0ODQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-30T17:12:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-30T17:12:24Z"}, "message": "Auto merge of #8602 - giraffate:fix_ice_for_iter_overeager_cloned, r=llogiq\n\nFix ICE for `iter_overeager_cloned`\n\nFix https://github.com/rust-lang/rust-clippy/issues/8527\n\nchangelog: Fix ICE for [`iter_overeager_cloned`]", "tree": {"sha": "5f54248a584c1e4f9ba46a1567ac359be00a163f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f54248a584c1e4f9ba46a1567ac359be00a163f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "html_url": "https://github.com/rust-lang/rust/commit/c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe7254ff6f9ed485fe3d8b31c97c0beac1102d12", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7254ff6f9ed485fe3d8b31c97c0beac1102d12", "html_url": "https://github.com/rust-lang/rust/commit/fe7254ff6f9ed485fe3d8b31c97c0beac1102d12"}, {"sha": "c22b7b8814e459d985c8ab337d933a4ae4feecea", "url": "https://api.github.com/repos/rust-lang/rust/commits/c22b7b8814e459d985c8ab337d933a4ae4feecea", "html_url": "https://github.com/rust-lang/rust/commit/c22b7b8814e459d985c8ab337d933a4ae4feecea"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "54c9ca435a447d8e870403ecf78cc48a5ce7d09a", "filename": "clippy_lints/src/methods/iter_overeager_cloned.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/clippy_lints%2Fsrc%2Fmethods%2Fiter_overeager_cloned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/clippy_lints%2Fsrc%2Fmethods%2Fiter_overeager_cloned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_overeager_cloned.rs?ref=c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "patch": "@@ -1,11 +1,12 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n-use clippy_utils::ty::{get_iterator_item_ty, is_copy};\n+use clippy_utils::ty::{get_iterator_item_ty, implements_trait, is_copy};\n use itertools::Itertools;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_middle::ty;\n+use rustc_span::sym;\n use std::ops::Not;\n \n use super::ITER_OVEREAGER_CLONED;\n@@ -20,9 +21,16 @@ pub(super) fn check<'tcx>(\n     map_arg: &[hir::Expr<'_>],\n ) {\n     // Check if it's iterator and get type associated with `Item`.\n-    let inner_ty = match get_iterator_item_ty(cx, cx.typeck_results().expr_ty_adjusted(recv)) {\n-        Some(ty) => ty,\n-        _ => return,\n+    let inner_ty = if_chain! {\n+        if let Some(iterator_trait_id) = cx.tcx.get_diagnostic_item(sym::Iterator);\n+        let recv_ty = cx.typeck_results().expr_ty(recv);\n+        if implements_trait(cx, recv_ty, iterator_trait_id, &[]);\n+        if let Some(inner_ty) = get_iterator_item_ty(cx, cx.typeck_results().expr_ty_adjusted(recv));\n+        then {\n+            inner_ty\n+        } else {\n+            return;\n+        }\n     };\n \n     match inner_ty.kind() {"}, {"sha": "56761ebbcb80bb0e5dcd595ba3ca0194b41829e2", "filename": "tests/ui/iter_overeager_cloned.fixed", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/tests%2Fui%2Fiter_overeager_cloned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/tests%2Fui%2Fiter_overeager_cloned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_overeager_cloned.fixed?ref=c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::iter_overeager_cloned, clippy::redundant_clone, clippy::filter_next)]\n+#![allow(dead_code)]\n \n fn main() {\n     let vec = vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()];\n@@ -43,3 +44,8 @@ fn main() {\n     // Should probably stay as it is.\n     let _ = [0, 1, 2, 3, 4].iter().cloned().take(10);\n }\n+\n+// #8527\n+fn cloned_flatten(x: Option<&Option<String>>) -> Option<String> {\n+    x.cloned().flatten()\n+}"}, {"sha": "98321d889b58273fd78a023d8933ad3af3f53074", "filename": "tests/ui/iter_overeager_cloned.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/tests%2Fui%2Fiter_overeager_cloned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/tests%2Fui%2Fiter_overeager_cloned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_overeager_cloned.rs?ref=c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n #![warn(clippy::iter_overeager_cloned, clippy::redundant_clone, clippy::filter_next)]\n+#![allow(dead_code)]\n \n fn main() {\n     let vec = vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()];\n@@ -45,3 +46,8 @@ fn main() {\n     // Should probably stay as it is.\n     let _ = [0, 1, 2, 3, 4].iter().cloned().take(10);\n }\n+\n+// #8527\n+fn cloned_flatten(x: Option<&Option<String>>) -> Option<String> {\n+    x.cloned().flatten()\n+}"}, {"sha": "0582700fd16a8bde34e9b13c93786ad9e467c8e6", "filename": "tests/ui/iter_overeager_cloned.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/tests%2Fui%2Fiter_overeager_cloned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0a5693abcd6311d17d13d47f0c36a58ad8a5484/tests%2Fui%2Fiter_overeager_cloned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_overeager_cloned.stderr?ref=c0a5693abcd6311d17d13d47f0c36a58ad8a5484", "patch": "@@ -1,45 +1,45 @@\n error: called `cloned().last()` on an `Iterator`. It may be more efficient to call `last().cloned()` instead\n-  --> $DIR/iter_overeager_cloned.rs:7:29\n+  --> $DIR/iter_overeager_cloned.rs:8:29\n    |\n LL |     let _: Option<String> = vec.iter().cloned().last();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `vec.iter().last().cloned()`\n    |\n    = note: `-D clippy::iter-overeager-cloned` implied by `-D warnings`\n \n error: called `cloned().next()` on an `Iterator`. It may be more efficient to call `next().cloned()` instead\n-  --> $DIR/iter_overeager_cloned.rs:9:29\n+  --> $DIR/iter_overeager_cloned.rs:10:29\n    |\n LL |     let _: Option<String> = vec.iter().chain(vec.iter()).cloned().next();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `vec.iter().chain(vec.iter()).next().cloned()`\n \n error: called `cloned().count()` on an `Iterator`. It may be more efficient to call `count()` instead\n-  --> $DIR/iter_overeager_cloned.rs:11:20\n+  --> $DIR/iter_overeager_cloned.rs:12:20\n    |\n LL |     let _: usize = vec.iter().filter(|x| x == &\"2\").cloned().count();\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `vec.iter().filter(|x| x == &\"2\").count()`\n    |\n    = note: `-D clippy::redundant-clone` implied by `-D warnings`\n \n error: called `cloned().take(...)` on an `Iterator`. It may be more efficient to call `take(...).cloned()` instead\n-  --> $DIR/iter_overeager_cloned.rs:13:21\n+  --> $DIR/iter_overeager_cloned.rs:14:21\n    |\n LL |     let _: Vec<_> = vec.iter().cloned().take(2).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `vec.iter().take(2).cloned()`\n \n error: called `cloned().skip(...)` on an `Iterator`. It may be more efficient to call `skip(...).cloned()` instead\n-  --> $DIR/iter_overeager_cloned.rs:15:21\n+  --> $DIR/iter_overeager_cloned.rs:16:21\n    |\n LL |     let _: Vec<_> = vec.iter().cloned().skip(2).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `vec.iter().skip(2).cloned()`\n \n error: called `cloned().nth(...)` on an `Iterator`. It may be more efficient to call `nth(...).cloned()` instead\n-  --> $DIR/iter_overeager_cloned.rs:17:13\n+  --> $DIR/iter_overeager_cloned.rs:18:13\n    |\n LL |     let _ = vec.iter().filter(|x| x == &\"2\").cloned().nth(2);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `vec.iter().filter(|x| x == &\"2\").nth(2).cloned()`\n \n error: called `cloned().flatten()` on an `Iterator`. It may be more efficient to call `flatten().cloned()` instead\n-  --> $DIR/iter_overeager_cloned.rs:19:13\n+  --> $DIR/iter_overeager_cloned.rs:20:13\n    |\n LL |       let _ = [Some(Some(\"str\".to_string())), Some(Some(\"str\".to_string()))]\n    |  _____________^"}]}