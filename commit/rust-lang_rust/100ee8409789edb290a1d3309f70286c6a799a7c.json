{"sha": "100ee8409789edb290a1d3309f70286c6a799a7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMGVlODQwOTc4OWVkYjI5MGExZDMzMDlmNzAyODZjNmE3OTlhN2M=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-05-30T17:21:41Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-01T00:02:49Z"}, "message": "Only output colors if colors are supported (removes burden from caller)", "tree": {"sha": "e7801436efd888383827a7f97b142aabd9b5fe01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7801436efd888383827a7f97b142aabd9b5fe01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/100ee8409789edb290a1d3309f70286c6a799a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/100ee8409789edb290a1d3309f70286c6a799a7c", "html_url": "https://github.com/rust-lang/rust/commit/100ee8409789edb290a1d3309f70286c6a799a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/100ee8409789edb290a1d3309f70286c6a799a7c/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f27c6306d9f376f9b629a98f8a57c2e43e59b41", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f27c6306d9f376f9b629a98f8a57c2e43e59b41", "html_url": "https://github.com/rust-lang/rust/commit/1f27c6306d9f376f9b629a98f8a57c2e43e59b41"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "691a6b4dc6242cded46512a45f5d1853854c1b5d", "filename": "src/libextra/term.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/100ee8409789edb290a1d3309f70286c6a799a7c/src%2Flibextra%2Fterm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/100ee8409789edb290a1d3309f70286c6a799a7c/src%2Flibextra%2Fterm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterm.rs?ref=100ee8409789edb290a1d3309f70286c6a799a7c", "patch": "@@ -43,8 +43,6 @@ pub static color_bright_magenta: u8 = 13u8;\n pub static color_bright_cyan: u8 = 14u8;\n pub static color_bright_white: u8 = 15u8;\n \n-pub fn esc(writer: @io::Writer) { writer.write([0x1bu8, '[' as u8]); }\n-\n pub struct Terminal {\n     color_supported: bool,\n     priv out: @io::Writer,\n@@ -75,12 +73,20 @@ pub impl Terminal {\n         return Ok(Terminal {out: out, ti: inf, color_supported: cs});\n     }\n     fn fg(&self, color: u8) {\n-        self.out.write(expand(*self.ti.strings.find_equiv(&(\"setaf\")).unwrap(), [Number(color as int)], [], []));\n+        if self.color_supported {\n+            self.out.write(expand(*self.ti.strings.find_equiv(&(\"setaf\")).unwrap(), \n+                                  [Number(color as int)], [], []));\n+        }\n     }\n     fn bg(&self, color: u8) {\n-        self.out.write(expand(*self.ti.strings.find_equiv(&(\"setab\")).unwrap(), [Number(color as int)], [], []));\n+        if self.color_supported {\n+            self.out.write(expand(*self.ti.strings.find_equiv(&(\"setab\")).unwrap(),\n+                                  [Number(color as int)], [], []));\n+        }\n     }\n     fn reset(&self) {\n-        self.out.write(expand(*self.ti.strings.find_equiv(&(\"op\")).unwrap(), [], [], []));\n+        if self.color_supported {\n+            self.out.write(expand(*self.ti.strings.find_equiv(&(\"op\")).unwrap(), [], [], []));\n+        }\n     }\n }"}]}