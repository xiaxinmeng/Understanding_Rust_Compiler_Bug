{"sha": "c659faba8d8a7e21eeddbf446c9101bb945e9f0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NTlmYWJhOGQ4YTdlMjFlZWRkYmY0NDZjOTEwMWJiOTQ1ZTlmMGM=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-03-10T22:26:33Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-04-29T03:32:49Z"}, "message": "in which the fn-must-use codepath is prevented from panicking on closure\n\nThe must-use lint needs the DefId of called functions and method\nreceivers in order to look for a `#[must_use]` attribute, but this would\nICE (!) if a called function was actually a closure (with a non-unit\nreturn value). Instead, let's be specific that we want a `Def::Fn`,\nrather than blithely assuming that we can get the DefId of a qpath.\n\nSupporting must-use closures doesn't seem like a priority, but could\nconceivably be added in the future if desired (conditional on the\nstatement and expression attributes (#15701) story being amicable).", "tree": {"sha": "2098b56611e6f0314e9e820cedde61025416ed0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2098b56611e6f0314e9e820cedde61025416ed0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c659faba8d8a7e21eeddbf446c9101bb945e9f0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c659faba8d8a7e21eeddbf446c9101bb945e9f0c", "html_url": "https://github.com/rust-lang/rust/commit/c659faba8d8a7e21eeddbf446c9101bb945e9f0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c659faba8d8a7e21eeddbf446c9101bb945e9f0c/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4c1f0ce93137049bd6c25d3289bf12bfc00426d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c1f0ce93137049bd6c25d3289bf12bfc00426d", "html_url": "https://github.com/rust-lang/rust/commit/f4c1f0ce93137049bd6c25d3289bf12bfc00426d"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "c32e9cdce0e61409ed46f52d28bcf1420290fdb5", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c659faba8d8a7e21eeddbf446c9101bb945e9f0c/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c659faba8d8a7e21eeddbf446c9101bb945e9f0c/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=c659faba8d8a7e21eeddbf446c9101bb945e9f0c", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use rustc::hir::def::Def;\n use rustc::hir::def_id::DefId;\n use rustc::ty;\n use rustc::ty::adjustment;\n@@ -77,7 +78,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n                 hir::ExprCall(ref callee, _) => {\n                     match callee.node {\n                         hir::ExprPath(ref qpath) => {\n-                            Some(cx.tables.qpath_def(qpath, callee.hir_id))\n+                            let def = cx.tables.qpath_def(qpath, callee.hir_id);\n+                            if let Def::Fn(_) = def {\n+                                Some(def)\n+                            } else {  // `Def::Local` if it was a closure, for which we\n+                                None  // do not currently support must-use linting\n+                            }\n                         },\n                         _ => None\n                     }"}]}