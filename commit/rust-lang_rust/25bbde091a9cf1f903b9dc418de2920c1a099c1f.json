{"sha": "25bbde091a9cf1f903b9dc418de2920c1a099c1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YmJkZTA5MWE5Y2YxZjkwM2I5ZGM0MThkZTI5MjBjMWEwOTljMWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-24T15:02:26Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-29T08:45:45Z"}, "message": "a small refactoring for readability", "tree": {"sha": "378726782a3666506fd0dd9bfd0cfa637095813c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/378726782a3666506fd0dd9bfd0cfa637095813c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25bbde091a9cf1f903b9dc418de2920c1a099c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25bbde091a9cf1f903b9dc418de2920c1a099c1f", "html_url": "https://github.com/rust-lang/rust/commit/25bbde091a9cf1f903b9dc418de2920c1a099c1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25bbde091a9cf1f903b9dc418de2920c1a099c1f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6904fd5a490572af615055d135686206018fe14b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6904fd5a490572af615055d135686206018fe14b", "html_url": "https://github.com/rust-lang/rust/commit/6904fd5a490572af615055d135686206018fe14b"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "2de59c9bc597e6528d45a73143601d585c9335ba", "filename": "src/booleans.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/25bbde091a9cf1f903b9dc418de2920c1a099c1f/src%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bbde091a9cf1f903b9dc418de2920c1a099c1f/src%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbooleans.rs?ref=25bbde091a9cf1f903b9dc418de2920c1a099c1f", "patch": "@@ -87,12 +87,11 @@ impl<'a, 'tcx, 'v> Hir2Qmm<'a, 'tcx, 'v> {\n                 _ => {},\n             }\n         }\n-        if let Some((n, _)) = self.terminals\n-                                  .iter()\n-                                  .enumerate()\n-                                  .find(|&(_, expr)| SpanlessEq::new(self.cx).ignore_fn().eq_expr(e, expr)) {\n-            #[allow(cast_possible_truncation)]\n-            return Ok(Bool::Term(n as u8));\n+        for (n, expr) in self.terminals.iter().enumerate() {\n+            if SpanlessEq::new(self.cx).ignore_fn().eq_expr(e, expr) {\n+                #[allow(cast_possible_truncation)]\n+                return Ok(Bool::Term(n as u8));\n+            }\n         }\n         let n = self.terminals.len();\n         self.terminals.push(e);"}]}