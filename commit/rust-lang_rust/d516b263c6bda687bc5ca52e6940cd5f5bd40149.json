{"sha": "d516b263c6bda687bc5ca52e6940cd5f5bd40149", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MTZiMjYzYzZiZGE2ODdiYzVjYTUyZTY5NDBjZDVmNWJkNDAxNDk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-07-15T18:47:49Z"}, "committer": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2018-03-01T15:04:26Z"}, "message": "use `{}` for `Known` variant just for more parity", "tree": {"sha": "93ea93dddbf8ffe6bf009d75ec6702fe0e3efb07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93ea93dddbf8ffe6bf009d75ec6702fe0e3efb07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d516b263c6bda687bc5ca52e6940cd5f5bd40149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d516b263c6bda687bc5ca52e6940cd5f5bd40149", "html_url": "https://github.com/rust-lang/rust/commit/d516b263c6bda687bc5ca52e6940cd5f5bd40149", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d516b263c6bda687bc5ca52e6940cd5f5bd40149/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4df52cacbee5d95e912a43188192a5054d36b4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4df52cacbee5d95e912a43188192a5054d36b4f", "html_url": "https://github.com/rust-lang/rust/commit/d4df52cacbee5d95e912a43188192a5054d36b4f"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "d89625ac871a75c009a49a408c1f3a95dbeb433c", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d516b263c6bda687bc5ca52e6940cd5f5bd40149/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d516b263c6bda687bc5ca52e6940cd5f5bd40149/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=d516b263c6bda687bc5ca52e6940cd5f5bd40149", "patch": "@@ -79,7 +79,9 @@ struct TypeVariableData<'tcx> {\n }\n \n enum TypeVariableValue<'tcx> {\n-    Known(Ty<'tcx>),\n+    Known {\n+        value: Ty<'tcx>\n+    },\n     Bounded {\n         default: Option<Default<'tcx>>\n     }\n@@ -120,7 +122,7 @@ impl<'tcx> TypeVariableTable<'tcx> {\n \n     pub fn default(&self, vid: ty::TyVid) -> Option<Default<'tcx>> {\n         match &self.values.get(vid.index as usize).value {\n-            &Known(_) => None,\n+            &Known { .. } => None,\n             &Bounded { ref default, .. } => default.clone()\n         }\n     }\n@@ -161,14 +163,14 @@ impl<'tcx> TypeVariableTable<'tcx> {\n \n         let old_value = {\n             let vid_data = &mut self.values[vid.index as usize];\n-            mem::replace(&mut vid_data.value, TypeVariableValue::Known(ty))\n+            mem::replace(&mut vid_data.value, TypeVariableValue::Known { value: ty })\n         };\n \n         match old_value {\n             TypeVariableValue::Bounded { default } => {\n                 self.values.record(Instantiate { vid: vid, default: default });\n             }\n-            TypeVariableValue::Known(old_ty) => {\n+            TypeVariableValue::Known { value: old_ty } => {\n                 bug!(\"instantiating type variable `{:?}` twice: new-value = {:?}, old-value={:?}\",\n                      vid, ty, old_ty)\n             }\n@@ -236,7 +238,7 @@ impl<'tcx> TypeVariableTable<'tcx> {\n         debug_assert!(self.root_var(vid) == vid);\n         match self.values.get(vid.index as usize).value {\n             Bounded { .. } => None,\n-            Known(t) => Some(t)\n+            Known { value } => Some(value)\n         }\n     }\n \n@@ -337,7 +339,7 @@ impl<'tcx> TypeVariableTable<'tcx> {\n                         // created since the snapshot started or not.\n                         let escaping_type = match self.values.get(vid.index as usize).value {\n                             Bounded { .. } => bug!(),\n-                            Known(ty) => ty,\n+                            Known { value } => value,\n                         };\n                         escaping_types.push(escaping_type);\n                     }"}]}