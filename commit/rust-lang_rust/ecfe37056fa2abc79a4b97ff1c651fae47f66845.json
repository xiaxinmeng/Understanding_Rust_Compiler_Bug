{"sha": "ecfe37056fa2abc79a4b97ff1c651fae47f66845", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZmUzNzA1NmZhMmFiYzc5YTRiOTdmZjFjNjUxZmFlNDdmNjY4NDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-25T11:36:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-25T11:36:13Z"}, "message": "Auto merge of #51733 - varkor:ice-match-slice, r=oli-obk\n\nFix an ICE when matching over const slices\n\nFixes #51655. I'm not super familiar with this code, so tell me if this is the wrong approach \ud83d\ude05\n\nr? @oli-obk", "tree": {"sha": "60283817562185e9feb4db4448003e81618c8f07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60283817562185e9feb4db4448003e81618c8f07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecfe37056fa2abc79a4b97ff1c651fae47f66845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecfe37056fa2abc79a4b97ff1c651fae47f66845", "html_url": "https://github.com/rust-lang/rust/commit/ecfe37056fa2abc79a4b97ff1c651fae47f66845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecfe37056fa2abc79a4b97ff1c651fae47f66845/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "446aef691e7223f31b18236fb9bf2d08bc25ba46", "url": "https://api.github.com/repos/rust-lang/rust/commits/446aef691e7223f31b18236fb9bf2d08bc25ba46", "html_url": "https://github.com/rust-lang/rust/commit/446aef691e7223f31b18236fb9bf2d08bc25ba46"}, {"sha": "e14e48bfaa36bda05a467dca0743dab5b10de097", "url": "https://api.github.com/repos/rust-lang/rust/commits/e14e48bfaa36bda05a467dca0743dab5b10de097", "html_url": "https://github.com/rust-lang/rust/commit/e14e48bfaa36bda05a467dca0743dab5b10de097"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "41024e60202739161e46548566c4764385f8ac24", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ecfe37056fa2abc79a4b97ff1c651fae47f66845/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecfe37056fa2abc79a4b97ff1c651fae47f66845/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=ecfe37056fa2abc79a4b97ff1c651fae47f66845", "patch": "@@ -25,6 +25,7 @@ use rustc::hir::RangeEnd;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n \n use rustc::mir::Field;\n+use rustc::mir::interpret::ConstValue;\n use rustc::util::common::ErrorReported;\n \n use syntax_pos::{Span, DUMMY_SP};\n@@ -932,16 +933,20 @@ fn slice_pat_covered_by_constructor<'tcx>(\n     suffix: &[Pattern<'tcx>]\n ) -> Result<bool, ErrorReported> {\n     let data: &[u8] = match *ctor {\n-        ConstantValue(const_val @ &ty::Const { val: ConstVal::Value(..), .. }) => {\n-            if let Some(ptr) = const_val.to_ptr() {\n-                let is_array_ptr = const_val.ty\n+        ConstantValue(&ty::Const { val: ConstVal::Value(const_val), ty }) => {\n+            let val = match const_val {\n+                ConstValue::ByRef(..) => bug!(\"unexpected ConstValue::ByRef\"),\n+                ConstValue::Scalar(val) | ConstValue::ScalarPair(val, _) => val,\n+            };\n+            if let Ok(ptr) = val.to_ptr() {\n+                let is_array_ptr = ty\n                     .builtin_deref(true)\n                     .and_then(|t| t.ty.builtin_index())\n                     .map_or(false, |t| t == tcx.types.u8);\n                 assert!(is_array_ptr);\n                 tcx.alloc_map.lock().unwrap_memory(ptr.alloc_id).bytes.as_ref()\n             } else {\n-                bug!()\n+                bug!(\"unexpected non-ptr ConstantValue\")\n             }\n         }\n         _ => bug!()"}, {"sha": "b5b89ede91b11e782799ff6144c918ec757734aa", "filename": "src/test/run-pass/issue-51655.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ecfe37056fa2abc79a4b97ff1c651fae47f66845/src%2Ftest%2Frun-pass%2Fissue-51655.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecfe37056fa2abc79a4b97ff1c651fae47f66845/src%2Ftest%2Frun-pass%2Fissue-51655.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-51655.rs?ref=ecfe37056fa2abc79a4b97ff1c651fae47f66845", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(dead_code)]\n+\n+const PATH_DOT: &[u8] = &[b'.'];\n+\n+fn match_slice(element: &[u8]) {\n+    match element {\n+        &[] => {}\n+        PATH_DOT => {}\n+        _ => {}\n+    }\n+}\n+\n+fn main() {}"}]}