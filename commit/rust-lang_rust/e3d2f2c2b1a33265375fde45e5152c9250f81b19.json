{"sha": "e3d2f2c2b1a33265375fde45e5152c9250f81b19", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZDJmMmMyYjFhMzMyNjUzNzVmZGU0NWU1MTUyYzkyNTBmODFiMTk=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-10T12:54:26Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-10T12:54:26Z"}, "message": "Cargo fmt", "tree": {"sha": "753fc2ec1850cddbd0fe7bedce396ab81e4dadae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/753fc2ec1850cddbd0fe7bedce396ab81e4dadae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3d2f2c2b1a33265375fde45e5152c9250f81b19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3d2f2c2b1a33265375fde45e5152c9250f81b19", "html_url": "https://github.com/rust-lang/rust/commit/e3d2f2c2b1a33265375fde45e5152c9250f81b19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3d2f2c2b1a33265375fde45e5152c9250f81b19/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90383d7426c2a71bd7b6b904f81a185dc553d128", "url": "https://api.github.com/repos/rust-lang/rust/commits/90383d7426c2a71bd7b6b904f81a185dc553d128", "html_url": "https://github.com/rust-lang/rust/commit/90383d7426c2a71bd7b6b904f81a185dc553d128"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "7512ef72e27588ee906c0f5b6a4993c61dbb7910", "filename": "src/chains.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e3d2f2c2b1a33265375fde45e5152c9250f81b19/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d2f2c2b1a33265375fde45e5152c9250f81b19/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=e3d2f2c2b1a33265375fde45e5152c9250f81b19", "patch": "@@ -419,10 +419,12 @@ fn rewrite_chain_subexpr(\n     context: &RewriteContext,\n     shape: Shape,\n ) -> Option<String> {\n-    let rewrite_element = |expr_str: String| if expr_str.len() <= shape.width {\n-        Some(expr_str)\n-    } else {\n-        None\n+    let rewrite_element = |expr_str: String| {\n+        if expr_str.len() <= shape.width {\n+            Some(expr_str)\n+        } else {\n+            None\n+        }\n     };\n \n     match expr.node {"}, {"sha": "ed4adffb9f5971983579df8f09729fbe1fbb6060", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e3d2f2c2b1a33265375fde45e5152c9250f81b19/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d2f2c2b1a33265375fde45e5152c9250f81b19/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e3d2f2c2b1a33265375fde45e5152c9250f81b19", "patch": "@@ -2316,12 +2316,13 @@ fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) ->\n         .offset_left(paren_overhead)\n         .and_then(|s| s.sub_width(paren_overhead))?;\n \n-    let paren_wrapper =\n-        |s: &str| if context.config.spaces_within_parens_and_brackets() && !s.is_empty() {\n+    let paren_wrapper = |s: &str| {\n+        if context.config.spaces_within_parens_and_brackets() && !s.is_empty() {\n             format!(\"( {} )\", s)\n         } else {\n             format!(\"({})\", s)\n-        };\n+        }\n+    };\n \n     let subexpr_str = subexpr.rewrite(context, sub_shape)?;\n     debug!(\"rewrite_paren, subexpr_str: `{:?}`\", subexpr_str);"}, {"sha": "496c66971d7da20e5e5795c968bee87b421792a8", "filename": "src/items.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e3d2f2c2b1a33265375fde45e5152c9250f81b19/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3d2f2c2b1a33265375fde45e5152c9250f81b19/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=e3d2f2c2b1a33265375fde45e5152c9250f81b19", "patch": "@@ -482,10 +482,12 @@ impl<'a> FmtVisitor<'a> {\n                 enum_def.variants.iter(),\n                 \"}\",\n                 \",\",\n-                |f| if !f.node.attrs.is_empty() {\n-                    f.node.attrs[0].span.lo()\n-                } else {\n-                    f.span.lo()\n+                |f| {\n+                    if !f.node.attrs.is_empty() {\n+                        f.node.attrs[0].span.lo()\n+                    } else {\n+                        f.span.lo()\n+                    }\n                 },\n                 |f| f.span.hi(),\n                 |f| self.format_variant(f, one_line_width),\n@@ -2549,10 +2551,12 @@ fn rewrite_where_clause_rfc_style(\n     };\n     let preds_str = write_list(&items.collect::<Vec<_>>(), &fmt)?;\n \n-    let comment_separator = |comment: &str, shape: Shape| if comment.is_empty() {\n-        String::new()\n-    } else {\n-        format!(\"\\n{}\", shape.indent.to_string(context.config))\n+    let comment_separator = |comment: &str, shape: Shape| {\n+        if comment.is_empty() {\n+            String::new()\n+        } else {\n+            format!(\"\\n{}\", shape.indent.to_string(context.config))\n+        }\n     };\n     let newline_before_where = comment_separator(&comment_before, shape);\n     let newline_after_where = comment_separator(&comment_after, clause_shape);"}]}