{"sha": "72c917d4be2dfb53c01466335175ed69eba9b5ad", "node_id": "C_kwDOAAsO6NoAKDcyYzkxN2Q0YmUyZGZiNTNjMDE0NjYzMzUxNzVlZDY5ZWJhOWI1YWQ", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-03-26T16:55:37Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-03-26T18:05:17Z"}, "message": "debuginfo: Get pointer size/align from tcx.data_layout instead of layout_of\n\nThis avoids some type interning and a query execution. It also just\nmakes the code simpler.", "tree": {"sha": "78641edd0ef0b6d534f434172bbde08e2b30aeb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78641edd0ef0b6d534f434172bbde08e2b30aeb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72c917d4be2dfb53c01466335175ed69eba9b5ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72c917d4be2dfb53c01466335175ed69eba9b5ad", "html_url": "https://github.com/rust-lang/rust/commit/72c917d4be2dfb53c01466335175ed69eba9b5ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72c917d4be2dfb53c01466335175ed69eba9b5ad/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "439292bc7913399e406d9bb7e8da0f70c6317c6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/439292bc7913399e406d9bb7e8da0f70c6317c6e", "html_url": "https://github.com/rust-lang/rust/commit/439292bc7913399e406d9bb7e8da0f70c6317c6e"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "e2a592d851a8cd9a55e28e88bf603668cbdbd4a7", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/72c917d4be2dfb53c01466335175ed69eba9b5ad/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72c917d4be2dfb53c01466335175ed69eba9b5ad/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=72c917d4be2dfb53c01466335175ed69eba9b5ad", "patch": "@@ -176,15 +176,14 @@ fn build_pointer_or_reference_di_node<'ll, 'tcx>(\n \n     return_if_di_node_created_in_meantime!(cx, unique_type_id);\n \n-    let (thin_pointer_size, thin_pointer_align) =\n-        cx.size_and_align_of(cx.tcx.mk_imm_ptr(cx.tcx.types.unit));\n+    let data_layout = &cx.tcx.data_layout;\n     let ptr_type_debuginfo_name = compute_debuginfo_type_name(cx.tcx, ptr_type, true);\n \n     match fat_pointer_kind(cx, pointee_type) {\n         None => {\n             // This is a thin pointer. Create a regular pointer type and give it the correct name.\n             debug_assert_eq!(\n-                (thin_pointer_size, thin_pointer_align),\n+                (data_layout.pointer_size, data_layout.pointer_align.abi),\n                 cx.size_and_align_of(ptr_type),\n                 \"ptr_type={}, pointee_type={}\",\n                 ptr_type,\n@@ -195,8 +194,8 @@ fn build_pointer_or_reference_di_node<'ll, 'tcx>(\n                 llvm::LLVMRustDIBuilderCreatePointerType(\n                     DIB(cx),\n                     pointee_type_di_node,\n-                    thin_pointer_size.bits(),\n-                    thin_pointer_align.bits() as u32,\n+                    data_layout.pointer_size.bits(),\n+                    data_layout.pointer_align.abi.bits() as u32,\n                     0, // Ignore DWARF address space.\n                     ptr_type_debuginfo_name.as_ptr().cast(),\n                     ptr_type_debuginfo_name.len(),"}]}