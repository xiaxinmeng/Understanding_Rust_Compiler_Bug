{"sha": "17f4d27f1285a76961b2e3957dc192de8e4f179f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZjRkMjdmMTI4NWE3Njk2MWIyZTM5NTdkYzE5MmRlOGU0ZjE3OWY=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2020-07-19T18:26:24Z"}, "committer": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2020-07-19T18:26:24Z"}, "message": "Minor perf tweaks per clippy", "tree": {"sha": "21508e1ebdc068b74f7bb12006bd66495916f84b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21508e1ebdc068b74f7bb12006bd66495916f84b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17f4d27f1285a76961b2e3957dc192de8e4f179f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17f4d27f1285a76961b2e3957dc192de8e4f179f", "html_url": "https://github.com/rust-lang/rust/commit/17f4d27f1285a76961b2e3957dc192de8e4f179f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17f4d27f1285a76961b2e3957dc192de8e4f179f/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09fab42d39e69c94a4a4b7f5ae5ad10005290bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/09fab42d39e69c94a4a4b7f5ae5ad10005290bf2", "html_url": "https://github.com/rust-lang/rust/commit/09fab42d39e69c94a4a4b7f5ae5ad10005290bf2"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "4e8a0c2db6552b45b859f051b5cc48a065b8133d", "filename": "crates/ra_assists/src/handlers/raw_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs?ref=17f4d27f1285a76961b2e3957dc192de8e4f179f", "patch": "@@ -131,7 +131,7 @@ pub(crate) fn remove_hash(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n     let token = ctx.find_token_at_offset(RAW_STRING).and_then(ast::RawString::cast)?;\n \n     let text = token.text().as_str();\n-    if !text.starts_with(\"r#\") && text.ends_with(\"#\") {\n+    if !text.starts_with(\"r#\") && text.ends_with('#') {\n         return None;\n     }\n "}, {"sha": "3d51faa5430645c2b62dbb96c699fc30d4d504a7", "filename": "crates/ra_assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=17f4d27f1285a76961b2e3957dc192de8e4f179f", "patch": "@@ -106,7 +106,7 @@ fn maybe_replace_path(\n     path: ast::Path,\n     target: ast::Path,\n ) -> Option<()> {\n-    if !path_eq(path.clone(), target.clone()) {\n+    if !path_eq(path.clone(), target) {\n         return None;\n     }\n "}, {"sha": "1eacc6f95ed8fe30ab1203387f9ac8b3bca75139", "filename": "crates/ra_hir_ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flower.rs?ref=17f4d27f1285a76961b2e3957dc192de8e4f179f", "patch": "@@ -341,7 +341,7 @@ impl Ty {\n                     let segment = remaining_segments.first().unwrap();\n                     let found = associated_type_by_name_including_super_traits(\n                         ctx.db,\n-                        trait_ref.clone(),\n+                        trait_ref,\n                         &segment.name,\n                     );\n                     match found {"}, {"sha": "c84d43d773320d103bca628c8c4f873afdabcb46", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=17f4d27f1285a76961b2e3957dc192de8e4f179f", "patch": "@@ -215,7 +215,7 @@ impl<'a> CompletionContext<'a> {\n \n     fn fill_keyword_patterns(&mut self, file_with_fake_ident: &SyntaxNode, offset: TextSize) {\n         let fake_ident_token = file_with_fake_ident.token_at_offset(offset).right_biased().unwrap();\n-        let syntax_element = NodeOrToken::Token(fake_ident_token.clone());\n+        let syntax_element = NodeOrToken::Token(fake_ident_token);\n         self.block_expr_parent = has_block_expr_parent(syntax_element.clone());\n         self.unsafe_is_prev = unsafe_is_prev(syntax_element.clone());\n         self.if_is_prev = if_is_prev(syntax_element.clone());\n@@ -228,7 +228,7 @@ impl<'a> CompletionContext<'a> {\n         self.trait_as_prev_sibling = has_trait_as_prev_sibling(syntax_element.clone());\n         self.is_match_arm = is_match_arm(syntax_element.clone());\n         self.has_item_list_or_source_file_parent =\n-            has_item_list_or_source_file_parent(syntax_element.clone());\n+            has_item_list_or_source_file_parent(syntax_element);\n     }\n \n     fn fill("}, {"sha": "e029af0dc9cb75d38f5f7bdab760bad531d6c77d", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=17f4d27f1285a76961b2e3957dc192de8e4f179f", "patch": "@@ -183,7 +183,7 @@ fn missing_struct_field_fix(\n     }\n     new_field = format!(\"\\n{}{}\", indent, new_field);\n \n-    let needs_comma = !last_field_syntax.to_string().ends_with(\",\");\n+    let needs_comma = !last_field_syntax.to_string().ends_with(',');\n     if needs_comma {\n         new_field = format!(\",{}\", new_field);\n     }"}, {"sha": "09883ab4de13c6ff457fc3e9c9a20f51e8408e4d", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=17f4d27f1285a76961b2e3957dc192de8e4f179f", "patch": "@@ -171,7 +171,7 @@ fn get_param_name_hints(\n         .map(|(param_name, arg)| InlayHint {\n             range: arg.syntax().text_range(),\n             kind: InlayKind::ParameterHint,\n-            label: param_name.to_string().into(),\n+            label: param_name.into(),\n         });\n \n     acc.extend(hints);"}, {"sha": "d7ae00b073b21a93384f8b9c5bad3dac2b44a731", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f4d27f1285a76961b2e3957dc192de8e4f179f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=17f4d27f1285a76961b2e3957dc192de8e4f179f", "patch": "@@ -242,7 +242,7 @@ impl GlobalState {\n             })\n             .map(move |cargo| {\n                 let cargo_project_root = cargo.workspace_root().to_path_buf();\n-                FlycheckHandle::spawn(sender, config.clone(), cargo_project_root.into())\n+                FlycheckHandle::spawn(sender, config, cargo_project_root.into())\n             })\n     }\n }"}]}