{"sha": "7f5c568e0ad7014eda43798fd66fb7f2b8069ff2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNWM1NjhlMGFkNzAxNGVkYTQzNzk4ZmQ2NmZiN2YyYjgwNjlmZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-21T00:48:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-21T00:48:09Z"}, "message": "Auto merge of #32344 - aturon:issue-32324, r=eddyb\n\nFix mis-uses of projection mode\n\nA couple of places where we construct a fresh inference context were\nincorrectly assuming that we were past coherence checking. This commit\ncorrects them to use `Topmost` rather than `AnyFinal` as the projection mode.\n\nFixes #32324\n\nr? @nikomatsakis", "tree": {"sha": "8ff988a32ae0856147970c09e2565bb006c1a516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ff988a32ae0856147970c09e2565bb006c1a516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2", "html_url": "https://github.com/rust-lang/rust/commit/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399b52217b19dd8e1d86b652c150579c0110e772", "url": "https://api.github.com/repos/rust-lang/rust/commits/399b52217b19dd8e1d86b652c150579c0110e772", "html_url": "https://github.com/rust-lang/rust/commit/399b52217b19dd8e1d86b652c150579c0110e772"}, {"sha": "09263a6137f27ef82e36225683c5f320c9163b17", "url": "https://api.github.com/repos/rust-lang/rust/commits/09263a6137f27ef82e36225683c5f320c9163b17", "html_url": "https://github.com/rust-lang/rust/commit/09263a6137f27ef82e36225683c5f320c9163b17"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "6a91592dbd52a0ffce57edff8f581b3df59222bf", "filename": "src/librustc/middle/ty/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2/src%2Flibrustc%2Fmiddle%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2/src%2Flibrustc%2Fmiddle%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty%2Futil.rs?ref=7f5c568e0ad7014eda43798fd66fb7f2b8069ff2", "patch": "@@ -133,7 +133,7 @@ impl<'a, 'tcx> ParameterEnvironment<'a, 'tcx> {\n         let infcx = infer::new_infer_ctxt(tcx,\n                                           &tcx.tables,\n                                           Some(self.clone()),\n-                                          ProjectionMode::AnyFinal);\n+                                          ProjectionMode::Topmost);\n \n         let adt = match self_type.sty {\n             ty::TyStruct(struct_def, substs) => {\n@@ -548,7 +548,7 @@ impl<'tcx> ty::TyS<'tcx> {\n         let infcx = infer::new_infer_ctxt(tcx,\n                                           &tcx.tables,\n                                           Some(param_env.clone()),\n-                                          ProjectionMode::AnyFinal);\n+                                          ProjectionMode::Topmost);\n \n         let is_impld = traits::type_known_to_meet_builtin_bound(&infcx,\n                                                                 self, bound, span);"}, {"sha": "ca9dd6ada80b5324785dada137ce1d2d42cba887", "filename": "src/test/run-pass/issue-32324.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2/src%2Ftest%2Frun-pass%2Fissue-32324.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5c568e0ad7014eda43798fd66fb7f2b8069ff2/src%2Ftest%2Frun-pass%2Fissue-32324.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-32324.rs?ref=7f5c568e0ad7014eda43798fd66fb7f2b8069ff2", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(dead_code)]\n+\n+trait Resources {\n+    type Buffer: Copy;\n+}\n+\n+#[derive(Copy, Clone)]\n+struct ConstantBufferSet<R: Resources>(\n+    pub R::Buffer\n+);\n+\n+#[derive(Copy, Clone)]\n+enum It {}\n+impl Resources for It {\n+    type Buffer = u8;\n+}\n+\n+#[derive(Copy, Clone)]\n+enum Command {\n+    BindConstantBuffers(ConstantBufferSet<It>)\n+}\n+\n+fn main() {}"}]}