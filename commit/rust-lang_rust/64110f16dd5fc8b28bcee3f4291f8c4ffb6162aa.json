{"sha": "64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MTEwZjE2ZGQ1ZmM4YjI4YmNlZTNmNDI5MWY4YzRmZmI2MTYyYWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-16T15:28:31Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-17T11:23:54Z"}, "message": "fix `Eq`+`Hash` for `Constant`", "tree": {"sha": "d3b6055f3d6156361a19856e35d68be4cc1460be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3b6055f3d6156361a19856e35d68be4cc1460be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa", "html_url": "https://github.com/rust-lang/rust/commit/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "432d9fec38be7b8b5abe57f002dc3f71d84e63c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/432d9fec38be7b8b5abe57f002dc3f71d84e63c3", "html_url": "https://github.com/rust-lang/rust/commit/432d9fec38be7b8b5abe57f002dc3f71d84e63c3"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "3e08f1b74ff847a0ad062ae463ce39957960a9db", "filename": "src/consts.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa", "patch": "@@ -85,7 +85,7 @@ impl PartialEq for Constant {\n             (&Constant::Str(ref ls, ref lsty), &Constant::Str(ref rs, ref rsty)) => ls == rs && lsty == rsty,\n             (&Constant::Binary(ref l), &Constant::Binary(ref r)) => l == r,\n             (&Constant::Char(l), &Constant::Char(r)) => l == r,\n-            (&Constant::Int(l), &Constant::Int(r)) => l == r,\n+            (&Constant::Int(l), &Constant::Int(r)) => l.is_negative() == r.is_negative() && l.to_u64_unchecked() == r.to_u64_unchecked(),\n             (&Constant::Float(ref ls, _), &Constant::Float(ref rs, _)) => {\n                 // we want `Fw32 == FwAny` and `FwAny == Fw64`, by transitivity we must have\n                 // `Fw32 == Fw64` so don\u2019t compare them\n@@ -119,7 +119,8 @@ impl Hash for Constant {\n                 c.hash(state);\n             }\n             Constant::Int(i) => {\n-                i.hash(state);\n+                i.to_u64_unchecked().hash(state);\n+                i.is_negative().hash(state);\n             }\n             Constant::Float(ref f, _) => {\n                 // don\u2019t use the width here because of PartialEq implementation"}, {"sha": "9ade801abb37a74ece1171021c75cfcb73c3701b", "filename": "src/identity_op.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa/src%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa/src%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fidentity_op.rs?ref=64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa", "patch": "@@ -55,11 +55,11 @@ impl LateLintPass for IdentityOp {\n \n \n fn check(cx: &LateContext, e: &Expr, m: i8, span: Span, arg: Span) {\n-    if let Some(Constant::Int(v)) = constant_simple(e) {\n+    if let Some(v @ Constant::Int(_)) = constant_simple(e) {\n         if match m {\n-            0 => v == ConstInt::Infer(0),\n-            -1 => v == ConstInt::InferSigned(-1),\n-            1 => v == ConstInt::Infer(1),\n+            0 => v == Constant::Int(ConstInt::Infer(0)),\n+            -1 => v == Constant::Int(ConstInt::InferSigned(-1)),\n+            1 => v == Constant::Int(ConstInt::Infer(1)),\n             _ => unreachable!(),\n         } {\n             span_lint(cx,"}, {"sha": "3a774f674734d60cb4f97699a7f42f5928a8bc6f", "filename": "tests/consts.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa/tests%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa/tests%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconsts.rs?ref=64110f16dd5fc8b28bcee3f4291f8c4ffb6162aa", "patch": "@@ -86,4 +86,8 @@ fn test_ops() {\n     assert_eq!(half_any, half32);\n     assert_eq!(half_any, half64);\n     assert_eq!(half32, half64); // for transitivity\n+\n+    assert_eq!(Constant::Int(ConstInt::Infer(0)), Constant::Int(ConstInt::U8(0)));\n+    assert_eq!(Constant::Int(ConstInt::Infer(0)), Constant::Int(ConstInt::I8(0)));\n+    assert_eq!(Constant::Int(ConstInt::InferSigned(-1)), Constant::Int(ConstInt::I8(-1)));\n }"}]}