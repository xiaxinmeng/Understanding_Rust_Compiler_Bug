{"sha": "a6ef302236dd353bd737d1196d7dc581ffc703a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZWYzMDIyMzZkZDM1M2JkNzM3ZDExOTZkN2RjNTgxZmZjNzAzYTA=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-10-14T20:07:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-14T20:07:59Z"}, "message": "Merge pull request #3100 from topecongiro/issue-3092\n\nFix poor formatting of empty trait with generic bounds", "tree": {"sha": "2f16f39939a92bff5a0b4a99d8347e6788dacab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f16f39939a92bff5a0b4a99d8347e6788dacab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6ef302236dd353bd737d1196d7dc581ffc703a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbw6IfCRBK7hj4Ov3rIwAAdHIIAEWrQVD1A+op6TzZkEXSLy3g\nJ69+scgH2FOHJ8gPRyZi2iYi1ZoayludgUyGxVuDtrYOXtXzhZEFZGAQHIy9JZOe\n4VjzROsgC2qJx7NV0nARCpX7ce3utQvPefUCbYuVSN1S1RI6RHF5EE7PqRyV5gOD\nOjH5LDIYdc22S8YiSK8eV3PQN06yrXmLeIRV6pWZRfGp+w9YBKOOMWuWK3hXhOUH\n0nb8IxQdcWnVNOQ/Pb+SQBuTKbVwp6vTFeCyzrB16VPX1OjRlfXypYtO16ShTYB+\n+VWrANyOidNex+4bixvDCjMmmDU+1eMhhtRZHf65eSpyWkYHpjr5u6GU4XcClKY=\n=Fmkk\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f16f39939a92bff5a0b4a99d8347e6788dacab3\nparent 2f8c1fea72dee881b602d850422568b1f8c14d12\nparent 5f5d04283ce68b514a13ae5c41ba3961549ab46f\nauthor Nick Cameron <nrc@ncameron.org> 1539547679 +1200\ncommitter GitHub <noreply@github.com> 1539547679 +1200\n\nMerge pull request #3100 from topecongiro/issue-3092\n\nFix poor formatting of empty trait with generic bounds"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ef302236dd353bd737d1196d7dc581ffc703a0", "html_url": "https://github.com/rust-lang/rust/commit/a6ef302236dd353bd737d1196d7dc581ffc703a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6ef302236dd353bd737d1196d7dc581ffc703a0/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f8c1fea72dee881b602d850422568b1f8c14d12", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8c1fea72dee881b602d850422568b1f8c14d12", "html_url": "https://github.com/rust-lang/rust/commit/2f8c1fea72dee881b602d850422568b1f8c14d12"}, {"sha": "5f5d04283ce68b514a13ae5c41ba3961549ab46f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f5d04283ce68b514a13ae5c41ba3961549ab46f", "html_url": "https://github.com/rust-lang/rust/commit/5f5d04283ce68b514a13ae5c41ba3961549ab46f"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "8a5b3de7a147756f066b2577cf9c38e076630392", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6ef302236dd353bd737d1196d7dc581ffc703a0/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ef302236dd353bd737d1196d7dc581ffc703a0/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=a6ef302236dd353bd737d1196d7dc581ffc703a0", "patch": "@@ -1937,7 +1937,9 @@ fn shape_from_rhs_tactic(\n     rhs_tactic: RhsTactics,\n ) -> Option<Shape> {\n     match rhs_tactic {\n-        RhsTactics::ForceNextLineWithoutIndent => Some(shape.with_max_width(context.config)),\n+        RhsTactics::ForceNextLineWithoutIndent => shape\n+            .with_max_width(context.config)\n+            .sub_width(shape.indent.width()),\n         RhsTactics::Default => {\n             Shape::indented(shape.indent.block_indent(context.config), context.config)\n                 .sub_width(shape.rhs_overhead(context.config))"}, {"sha": "1673bffbce9b587b8b303d1933a78fe77fd8f44b", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6ef302236dd353bd737d1196d7dc581ffc703a0/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ef302236dd353bd737d1196d7dc581ffc703a0/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=a6ef302236dd353bd737d1196d7dc581ffc703a0", "patch": "@@ -1121,6 +1121,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n \n         let snippet = context.snippet(item.span);\n         let open_pos = snippet.find_uncommented(\"{\")? + 1;\n+        let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n \n         if !trait_items.is_empty() || contains_comment(&snippet[open_pos..]) {\n             let mut visitor = FmtVisitor::from_context(context);\n@@ -1134,13 +1135,12 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n             visitor.format_missing(item.span.hi() - BytePos(1));\n \n             let inner_indent_str = visitor.block_indent.to_string_with_newline(context.config);\n-            let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n \n             result.push_str(&inner_indent_str);\n             result.push_str(visitor.buffer.to_string().trim());\n             result.push_str(&outer_indent_str);\n         } else if result.contains('\\n') {\n-            result.push('\\n');\n+            result.push_str(&outer_indent_str);\n         }\n \n         result.push('}');"}, {"sha": "d5ee4f0441736aeaae86aeb855b4e2c5f5bec34e", "filename": "tests/source/trait.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a6ef302236dd353bd737d1196d7dc581ffc703a0/tests%2Fsource%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ef302236dd353bd737d1196d7dc581ffc703a0/tests%2Fsource%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftrait.rs?ref=a6ef302236dd353bd737d1196d7dc581ffc703a0", "patch": "@@ -106,3 +106,12 @@ trait Foo<'a> {\n impl<'a> Foo<'a> for i32 {\n     type Bar<  'a  > = i32;\n }\n+\n+// #3092\n+pub mod test {\n+    pub trait ATraitWithALooongName {}\n+    pub trait ATrait\n+        :ATraitWithALooongName + ATraitWithALooongName + ATraitWithALooongName + ATraitWithALooongName\n+{\n+}\n+}"}, {"sha": "18747c47fef39a03978173fa5dfc29a469bc933f", "filename": "tests/target/trait.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a6ef302236dd353bd737d1196d7dc581ffc703a0/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ef302236dd353bd737d1196d7dc581ffc703a0/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=a6ef302236dd353bd737d1196d7dc581ffc703a0", "patch": "@@ -144,3 +144,15 @@ trait Foo<'a> {\n impl<'a> Foo<'a> for i32 {\n     type Bar<'a> = i32;\n }\n+\n+// #3092\n+pub mod test {\n+    pub trait ATraitWithALooongName {}\n+    pub trait ATrait:\n+        ATraitWithALooongName\n+        + ATraitWithALooongName\n+        + ATraitWithALooongName\n+        + ATraitWithALooongName\n+    {\n+    }\n+}"}]}