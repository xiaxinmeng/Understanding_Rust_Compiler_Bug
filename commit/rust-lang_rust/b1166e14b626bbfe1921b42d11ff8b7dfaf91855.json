{"sha": "b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMTY2ZTE0YjYyNmJiZmUxOTIxYjQyZDExZmY4YjdkZmFmOTE4NTU=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-08-02T14:36:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-02T14:36:50Z"}, "message": "Rollup merge of #87654 - jesyspa:issue-87238-option-result-doc, r=scottmcm\n\nAdd documentation for the order of Option and Result\n\nThis resolves issue #87238.", "tree": {"sha": "b507d3266a12a131a04b8e2f8013bae668903684", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b507d3266a12a131a04b8e2f8013bae668903684"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCAMCCRBK7hj4Ov3rIwAALoYIABaY929kV1plhb/9OA7tfdPZ\n9X85nHDckN0HYXdMVVi675RoNEjupw1IlPmQg2JBc+VWG+FbJDf/kBkGC6tkAqxM\nLqGyr9B6In+QX/KGsuIZJEDafdugDN1PYyCo6XQ1XgjAKN3lGMr9UftY9HazgrBy\n4uEtlMvnQdTAS8kzJCUXxeFc6/mNEUmQdcjgRHlfsFkwLCvnbqulAVJp6KiuU4s+\nHfgfYogaPrRw6CaPzrXiGL9849tSeYrDIjRQkSM/qcKPjRUTtaW2OyrjKtYBNxJi\nGXDvxqFpXu+EWk/+ycXooJsUInDSrzF75UoqrtbWRdMr+WN65o/6SrWUNWW5zLk=\n=oksL\n-----END PGP SIGNATURE-----\n", "payload": "tree b507d3266a12a131a04b8e2f8013bae668903684\nparent 14f3418f79a6cd1ecf5aab1a2275ab8b08785990\nparent 40eaab17de1ee63491000a02a555aab6398f8376\nauthor Cameron Steffen <cam.steffen94@gmail.com> 1627915010 -0500\ncommitter GitHub <noreply@github.com> 1627915010 -0500\n\nRollup merge of #87654 - jesyspa:issue-87238-option-result-doc, r=scottmcm\n\nAdd documentation for the order of Option and Result\n\nThis resolves issue #87238.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "html_url": "https://github.com/rust-lang/rust/commit/b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1166e14b626bbfe1921b42d11ff8b7dfaf91855/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f3418f79a6cd1ecf5aab1a2275ab8b08785990", "url": "https://api.github.com/repos/rust-lang/rust/commits/14f3418f79a6cd1ecf5aab1a2275ab8b08785990", "html_url": "https://github.com/rust-lang/rust/commit/14f3418f79a6cd1ecf5aab1a2275ab8b08785990"}, {"sha": "40eaab17de1ee63491000a02a555aab6398f8376", "url": "https://api.github.com/repos/rust-lang/rust/commits/40eaab17de1ee63491000a02a555aab6398f8376", "html_url": "https://github.com/rust-lang/rust/commit/40eaab17de1ee63491000a02a555aab6398f8376"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "d4e9c384f93021ced4d79096bf4f709a1dd45135", "filename": "library/core/src/option.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b1166e14b626bbfe1921b42d11ff8b7dfaf91855/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1166e14b626bbfe1921b42d11ff8b7dfaf91855/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "patch": "@@ -285,6 +285,19 @@\n //! assert_eq!(res, [\"error!\", \"error!\", \"foo\", \"error!\", \"bar\"]);\n //! ```\n //!\n+//! ## Comparison operators\n+//!\n+//! If `T` implements [`PartialOrd`] then [`Option<T>`] will derive its\n+//! [`PartialOrd`] implementation.  With this order, [`None`] compares as\n+//! less than any [`Some`], and two [`Some`] compare the same way as their\n+//! contained values would in `T`.  If `T` also implements\n+//! [`Ord`], then so does [`Option<T>`].\n+//!\n+//! ```\n+//! assert!(None < Some(0));\n+//! assert!(Some(0) < Some(1));\n+//! ```\n+//!\n //! ## Iterating over `Option`\n //!\n //! An [`Option`] can be iterated over. This can be helpful if you need an"}, {"sha": "861790e8a4099cd03c2f325c6745373c1f2e9628", "filename": "library/core/src/result.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b1166e14b626bbfe1921b42d11ff8b7dfaf91855/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1166e14b626bbfe1921b42d11ff8b7dfaf91855/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "patch": "@@ -379,6 +379,24 @@\n //! [`and_then`]: Result::and_then\n //! [`or_else`]: Result::or_else\n //!\n+//! ## Comparison operators\n+//!\n+//! If `T` and `E` both implement [`PartialOrd`] then [`Result<T, E>`] will\n+//! derive its [`PartialOrd`] implementation.  With this order, an [`Ok`]\n+//! compares as less than any [`Err`], while two [`Ok`] or two [`Err`]\n+//! compare as their contained values would in `T` or `E` respectively.  If `T`\n+//! and `E` both also implement [`Ord`], then so does [`Result<T, E>`].\n+//!\n+//! ```\n+//! assert!(Ok(1) < Err(0));\n+//! let x: Result<i32, ()> = Ok(0);\n+//! let y = Ok(1);\n+//! assert!(x < y);\n+//! let x: Result<(), i32> = Err(0);\n+//! let y = Err(1);\n+//! assert!(x < y);\n+//! ```\n+//!\n //! ## Iterating over `Result`\n //!\n //! A [`Result`] can be iterated over. This can be helpful if you need an"}]}