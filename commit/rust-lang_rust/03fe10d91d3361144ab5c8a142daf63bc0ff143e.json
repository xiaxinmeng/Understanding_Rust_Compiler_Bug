{"sha": "03fe10d91d3361144ab5c8a142daf63bc0ff143e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZmUxMGQ5MWQzMzYxMTQ0YWI1YzhhMTQyZGFmNjNiYzBmZjE0M2U=", "commit": {"author": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-04T14:37:34Z"}, "committer": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-04T14:37:34Z"}, "message": "impl_parent", "tree": {"sha": "fcd108ececa36f28e67fb3daff96afba72471f9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcd108ececa36f28e67fb3daff96afba72471f9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03fe10d91d3361144ab5c8a142daf63bc0ff143e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03fe10d91d3361144ab5c8a142daf63bc0ff143e", "html_url": "https://github.com/rust-lang/rust/commit/03fe10d91d3361144ab5c8a142daf63bc0ff143e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03fe10d91d3361144ab5c8a142daf63bc0ff143e/comments", "author": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa5a5320466d4a6ac7125cb01956307e63d9918b", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa5a5320466d4a6ac7125cb01956307e63d9918b", "html_url": "https://github.com/rust-lang/rust/commit/aa5a5320466d4a6ac7125cb01956307e63d9918b"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "de1531bbd54d383d6de83084d979578ebbdbb0d4", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=03fe10d91d3361144ab5c8a142daf63bc0ff143e", "patch": "@@ -156,6 +156,7 @@ pub enum DepNode<D: Clone + Debug> {\n     Deprecation(D),\n     ItemBodyNestedBodies(D),\n     ConstIsRvaluePromotableToStatic(D),\n+    ImplParent(D),\n     TraitOfItem(D),\n     IsMirAvailable(D),\n     ItemAttrs(D),\n@@ -272,6 +273,7 @@ impl<D: Clone + Debug> DepNode<D> {\n             Deprecation(ref d) => op(d).map(Deprecation),\n             ItemAttrs(ref d) => op(d).map(ItemAttrs),\n             FnArgNames(ref d) => op(d).map(FnArgNames),\n+            ImplParent(ref d) => op(d).map(ImplParent),\n             TraitOfItem(ref d) => op(d).map(TraitOfItem),\n             ItemBodyNestedBodies(ref d) => op(d).map(ItemBodyNestedBodies),\n             ConstIsRvaluePromotableToStatic(ref d) => op(d).map(ConstIsRvaluePromotableToStatic),"}, {"sha": "e50072043d5f7c927ba74d3af306bdc16bb3dba9", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=03fe10d91d3361144ab5c8a142daf63bc0ff143e", "patch": "@@ -188,7 +188,6 @@ pub trait CrateStore {\n \n     // impl info\n     fn impl_defaultness(&self, def: DefId) -> hir::Defaultness;\n-    fn impl_parent(&self, impl_def_id: DefId) -> Option<DefId>;\n \n     // trait/impl-item info\n     fn associated_item_cloned(&self, def: DefId) -> ty::AssociatedItem;\n@@ -312,7 +311,6 @@ impl CrateStore for DummyCrateStore {\n \n     // impl info\n     fn impl_defaultness(&self, def: DefId) -> hir::Defaultness { bug!(\"impl_defaultness\") }\n-    fn impl_parent(&self, def: DefId) -> Option<DefId> { bug!(\"impl_parent\") }\n \n     // trait/impl-item info\n     fn associated_item_cloned(&self, def: DefId) -> ty::AssociatedItem"}, {"sha": "1dfd7bc9760828720a97ad82e54163f8c2b48098", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=03fe10d91d3361144ab5c8a142daf63bc0ff143e", "patch": "@@ -347,6 +347,12 @@ impl<'tcx> QueryDescription for queries::fn_arg_names<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::impl_parent<'tcx> {\n+    fn describe(_: TyCtxt, _: DefId) -> String {\n+        bug!(\"impl_parent\")\n+    }\n+}\n+\n impl<'tcx> QueryDescription for queries::trait_of_item<'tcx> {\n     fn describe(_: TyCtxt, _: DefId) -> String {\n         bug!(\"trait_of_item\")\n@@ -804,6 +810,7 @@ define_maps! { <'tcx>\n     [] deprecation: Deprecation(DefId) -> Option<attr::Deprecation>,\n     [] item_attrs: ItemAttrs(DefId) -> Rc<[ast::Attribute]>,\n     [] fn_arg_names: FnArgNames(DefId) -> Vec<ast::Name>,\n+    [] impl_parent: ImplParent(DefId) -> Option<DefId>,\n     [] trait_of_item: TraitOfItem(DefId) -> Option<DefId>,\n     [] item_body_nested_bodies: ItemBodyNestedBodies(DefId) -> Rc<BTreeMap<hir::BodyId, hir::Body>>,\n     [] const_is_rvalue_promotable_to_static: ConstIsRvaluePromotableToStatic(DefId) -> bool,"}, {"sha": "1c3e74d4fb965e564d5d7df3f80beaefbc2ab1b5", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=03fe10d91d3361144ab5c8a142daf63bc0ff143e", "patch": "@@ -2393,7 +2393,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             let trait_ref = self.impl_trait_ref(impl_def_id).unwrap();\n \n             // Record the trait->implementation mapping.\n-            let parent = self.sess.cstore.impl_parent(impl_def_id).unwrap_or(trait_id);\n+            let parent = self.impl_parent(impl_def_id).unwrap_or(trait_id);\n             def.record_remote_impl(self, impl_def_id, trait_ref, parent);\n         }\n "}, {"sha": "b54db55c0e12abe8d5728ef245071223edb79fd7", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03fe10d91d3361144ab5c8a142daf63bc0ff143e/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=03fe10d91d3361144ab5c8a142daf63bc0ff143e", "patch": "@@ -119,6 +119,7 @@ provide! { <'tcx> tcx, def_id, cdata\n     // This is only used by rustdoc anyway, which shouldn't have\n     // incremental recompilation ever enabled.\n     fn_arg_names => { cdata.get_fn_arg_names(def_id.index) }\n+    impl_parent => { cdata.get_parent_impl(def_id.index) }\n     trait_of_item => { cdata.get_trait_of_item(def_id.index) }\n     item_body_nested_bodies => {\n         let map: BTreeMap<_, _> = cdata.entry(def_id.index).ast.into_iter().flat_map(|ast| {\n@@ -170,11 +171,6 @@ impl CrateStore for cstore::CStore {\n         self.get_crate_data(def.krate).get_impl_defaultness(def.index)\n     }\n \n-    fn impl_parent(&self, impl_def: DefId) -> Option<DefId> {\n-        self.dep_graph.read(DepNode::MetaData(impl_def));\n-        self.get_crate_data(impl_def.krate).get_parent_impl(impl_def.index)\n-    }\n-\n     fn associated_item_cloned(&self, def: DefId) -> ty::AssociatedItem\n     {\n         self.dep_graph.read(DepNode::MetaData(def));"}]}