{"sha": "e4eb54dae8a29c15504144dcd494326884e11587", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZWI1NGRhZThhMjljMTU1MDQxNDRkY2Q0OTQzMjY4ODRlMTE1ODc=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-11T22:09:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-11T22:09:51Z"}, "message": "Rollup merge of #65263 - mbStavola:dedup-raw-item-fns, r=Centril\n\nDeduplicate is_{freeze,copy,sized}_raw\n\nFixes #65259\n\nDeduplicates `is_{freeze,copy,sized}_raw` by delegating to a new method which takes in a `LangItem`.", "tree": {"sha": "168bd2fb0d54bd3e93ca3b786cb25f638ed41bc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/168bd2fb0d54bd3e93ca3b786cb25f638ed41bc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4eb54dae8a29c15504144dcd494326884e11587", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdoP2vCRBK7hj4Ov3rIwAAdHIIAC1MpxrMxnQSm4chn6cJP/XJ\nz6skwfmumot2LDpTbCEJ/RwxHX85jSep5hY23fCQ0g4cLjwPIENbf1yhQMplLhLC\nUgDvMlKsJi9GGcZNriMGsgW4MbSDUKzOjyMj+xPVlGWu/iJno23dfX073rTEbUur\nQz6Q2pYcNqA22nUNvobuQyBDtBIImbhT1FHgYKV7E8wRGZKHXIOMT2ITDPYKUZTg\nZSyUZ+EtnjK09yb43NCuqxC+rYACiXdiuG+XkOgDFLG+8hKDyIxZ/tkPypxZJOzp\nKme5lWf3BEIGeiewXb3+HumByYcmj/PF9XeudpupBbRhsPpZcQW4bukuj4RxLNA=\n=iqEK\n-----END PGP SIGNATURE-----\n", "payload": "tree 168bd2fb0d54bd3e93ca3b786cb25f638ed41bc9\nparent 2403c37ede33d448461703073c1ab310552c0fdb\nparent ee081145ac417b244e513580e15195c864763a6e\nauthor Tyler Mandry <tmandry@gmail.com> 1570831791 -0700\ncommitter GitHub <noreply@github.com> 1570831791 -0700\n\nRollup merge of #65263 - mbStavola:dedup-raw-item-fns, r=Centril\n\nDeduplicate is_{freeze,copy,sized}_raw\n\nFixes #65259\n\nDeduplicates `is_{freeze,copy,sized}_raw` by delegating to a new method which takes in a `LangItem`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4eb54dae8a29c15504144dcd494326884e11587", "html_url": "https://github.com/rust-lang/rust/commit/e4eb54dae8a29c15504144dcd494326884e11587", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4eb54dae8a29c15504144dcd494326884e11587/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2403c37ede33d448461703073c1ab310552c0fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2403c37ede33d448461703073c1ab310552c0fdb", "html_url": "https://github.com/rust-lang/rust/commit/2403c37ede33d448461703073c1ab310552c0fdb"}, {"sha": "ee081145ac417b244e513580e15195c864763a6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee081145ac417b244e513580e15195c864763a6e", "html_url": "https://github.com/rust-lang/rust/commit/ee081145ac417b244e513580e15195c864763a6e"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "5ddf15317a31cdab9be3d34d348122a05fdc7b2f", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 12, "deletions": 21, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e4eb54dae8a29c15504144dcd494326884e11587/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4eb54dae8a29c15504144dcd494326884e11587/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=e4eb54dae8a29c15504144dcd494326884e11587", "patch": "@@ -1017,34 +1017,25 @@ impl<'tcx> ty::TyS<'tcx> {\n }\n \n fn is_copy_raw<'tcx>(tcx: TyCtxt<'tcx>, query: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> bool {\n-    let (param_env, ty) = query.into_parts();\n-    let trait_def_id = tcx.require_lang_item(lang_items::CopyTraitLangItem, None);\n-    tcx.infer_ctxt()\n-        .enter(|infcx| traits::type_known_to_meet_bound_modulo_regions(\n-            &infcx,\n-            param_env,\n-            ty,\n-            trait_def_id,\n-            DUMMY_SP,\n-        ))\n+    is_item_raw(tcx, query, lang_items::CopyTraitLangItem)\n }\n \n fn is_sized_raw<'tcx>(tcx: TyCtxt<'tcx>, query: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> bool {\n-    let (param_env, ty) = query.into_parts();\n-    let trait_def_id = tcx.require_lang_item(lang_items::SizedTraitLangItem, None);\n-    tcx.infer_ctxt()\n-        .enter(|infcx| traits::type_known_to_meet_bound_modulo_regions(\n-            &infcx,\n-            param_env,\n-            ty,\n-            trait_def_id,\n-            DUMMY_SP,\n-        ))\n+    is_item_raw(tcx, query, lang_items::SizedTraitLangItem)\n+\n }\n \n fn is_freeze_raw<'tcx>(tcx: TyCtxt<'tcx>, query: ty::ParamEnvAnd<'tcx, Ty<'tcx>>) -> bool {\n+    is_item_raw(tcx, query, lang_items::FreezeTraitLangItem)\n+}\n+\n+fn is_item_raw<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    query: ty::ParamEnvAnd<'tcx, Ty<'tcx>>,\n+    item: lang_items::LangItem,\n+) -> bool {\n     let (param_env, ty) = query.into_parts();\n-    let trait_def_id = tcx.require_lang_item(lang_items::FreezeTraitLangItem, None);\n+    let trait_def_id = tcx.require_lang_item(item, None);\n     tcx.infer_ctxt()\n         .enter(|infcx| traits::type_known_to_meet_bound_modulo_regions(\n             &infcx,"}]}