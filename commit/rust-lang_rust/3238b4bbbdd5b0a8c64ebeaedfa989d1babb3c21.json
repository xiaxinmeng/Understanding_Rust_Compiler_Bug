{"sha": "3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMzhiNGJiYmRkNWIwYThjNjRlYmVhZWRmYTk4OWQxYmFiYjNjMjE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-11T18:30:48Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-11T18:30:48Z"}, "message": "Add comments", "tree": {"sha": "5e6dbf42a1b8ab2132337119083cd2270d95588b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e6dbf42a1b8ab2132337119083cd2270d95588b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21", "html_url": "https://github.com/rust-lang/rust/commit/3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faea5ff6efae623c052e59120d18306cc6d9fd4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/faea5ff6efae623c052e59120d18306cc6d9fd4a", "html_url": "https://github.com/rust-lang/rust/commit/faea5ff6efae623c052e59120d18306cc6d9fd4a"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "1404b8cf3adf8b422fcd61f3627f93fa6f72c43a", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=3238b4bbbdd5b0a8c64ebeaedfa989d1babb3c21", "patch": "@@ -317,6 +317,8 @@ impl<'a> ::ModuleS<'a> {\n     fn update_resolution<T, F>(&self, name: Name, ns: Namespace, update: F) -> T\n         where F: FnOnce(&mut NameResolution<'a>) -> T\n     {\n+        // Ensure that `resolution` isn't borrowed during `define_in_glob_importers`,\n+        // where it might end up getting re-defined via a glob cycle.\n         let (new_binding, t) = {\n             let mut resolution = &mut *self.resolution(name, ns).borrow_mut();\n             let was_known = resolution.binding().is_some();\n@@ -650,6 +652,8 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n         // Add to target_module's glob_importers\n         target_module.glob_importers.borrow_mut().push((module_, directive));\n \n+        // Ensure that `resolutions` isn't borrowed during `try_define_child`,\n+        // since it might get updated via a glob cycle.\n         let bindings = target_module.resolutions.borrow().iter().filter_map(|(name, resolution)| {\n             resolution.borrow().binding().map(|binding| (*name, binding))\n         }).collect::<Vec<_>>();"}]}