{"sha": "754d8687f4952e0dca50eca95aded4cf58a07fdf", "node_id": "C_kwDOAAsO6NoAKDc1NGQ4Njg3ZjQ5NTJlMGRjYTUwZWNhOTVhZGVkNGNmNThhMDdmZGY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-21T23:33:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-21T23:33:58Z"}, "message": "Merge #11785\n\n11785: fix: Fix tuple- and record struct completions not working with existing braces r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "c7a0353021e0b1e5ab2f9a6e5a89799d4dd583f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7a0353021e0b1e5ab2f9a6e5a89799d4dd583f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/754d8687f4952e0dca50eca95aded4cf58a07fdf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiOQtmCRBK7hj4Ov3rIwAA078IAFdT7EGqPZet5KP7sHeyYqsj\nbk5UPiprWmTrQ7mGfKqU6ZawJ7/7UDrSsbC+L4iUqf6BcLpg8y+cfl7o8le/K1+Q\neKkc/9ED+fIOss4DKkRM+K8oX8xGG4ZyVeBbASuWESvh6keH2QuzvZEdAlZbIcpn\nhIW5krPnEg58x/OYxOsHwG1lVLYO+dnNJnE/XNCk+VaQJMH6IrNlK4h2MZb/c+qF\ny8mSmB/6zShB1LspkukSpM7wMc4VNdsBFKPtrYpBj2WElvkElnUlCy/NkpoxHYzK\nZqqQQ9hovr/nCrLpMER4OsgXH4Q6yJOj+VVnSdgpAlBgTlfbdgEGZFsRCnPrHn8=\n=iDEC\n-----END PGP SIGNATURE-----\n", "payload": "tree c7a0353021e0b1e5ab2f9a6e5a89799d4dd583f4\nparent d61e02dfe4f501c4ca206ecf93ec7608af40ec53\nparent 000e681d5f059be25cda714a31b32f05dbb53627\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1647905638 +0000\ncommitter GitHub <noreply@github.com> 1647905638 +0000\n\nMerge #11785\n\n11785: fix: Fix tuple- and record struct completions not working with existing braces r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/754d8687f4952e0dca50eca95aded4cf58a07fdf", "html_url": "https://github.com/rust-lang/rust/commit/754d8687f4952e0dca50eca95aded4cf58a07fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/754d8687f4952e0dca50eca95aded4cf58a07fdf/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d61e02dfe4f501c4ca206ecf93ec7608af40ec53", "url": "https://api.github.com/repos/rust-lang/rust/commits/d61e02dfe4f501c4ca206ecf93ec7608af40ec53", "html_url": "https://github.com/rust-lang/rust/commit/d61e02dfe4f501c4ca206ecf93ec7608af40ec53"}, {"sha": "000e681d5f059be25cda714a31b32f05dbb53627", "url": "https://api.github.com/repos/rust-lang/rust/commits/000e681d5f059be25cda714a31b32f05dbb53627", "html_url": "https://github.com/rust-lang/rust/commit/000e681d5f059be25cda714a31b32f05dbb53627"}], "stats": {"total": 65, "additions": 49, "deletions": 16}, "files": [{"sha": "e65631712ec6afbe943e5fded9af33e112ffe42b", "filename": "crates/ide_completion/src/render/literal.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Frender%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Frender%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fliteral.rs?ref=754d8687f4952e0dca50eca95aded4cf58a07fdf", "patch": "@@ -49,12 +49,12 @@ fn render(\n     name: hir::Name,\n     path: Option<hir::ModPath>,\n ) -> Option<CompletionItem> {\n-    if let Some(PathCompletionCtx { has_call_parens: true, .. }) = completion.path_context {\n-        return None;\n-    }\n     let db = completion.db;\n-    let fields = thing.fields(completion)?;\n+    let kind = thing.kind(db);\n+    let has_call_parens =\n+        matches!(completion.path_context, Some(PathCompletionCtx { has_call_parens: true, .. }));\n \n+    let fields = thing.fields(completion)?;\n     let (qualified_name, short_qualified_name, qualified) = match path {\n         Some(path) => {\n             let short = hir::ModPath::from_segments(\n@@ -68,13 +68,14 @@ fn render(\n     let qualified_name = qualified_name.to_string();\n     let snippet_cap = ctx.snippet_cap();\n \n-    let kind = thing.kind(db);\n     let mut rendered = match kind {\n-        StructKind::Tuple => render_tuple_lit(db, snippet_cap, &fields, &qualified_name),\n-        StructKind::Record => render_record_lit(db, snippet_cap, &fields, &qualified_name),\n-        StructKind::Unit => {\n-            RenderedLiteral { literal: qualified_name.clone(), detail: qualified_name.clone() }\n+        StructKind::Tuple if !has_call_parens => {\n+            render_tuple_lit(db, snippet_cap, &fields, &qualified_name)\n+        }\n+        StructKind::Record if !has_call_parens => {\n+            render_record_lit(db, snippet_cap, &fields, &qualified_name)\n         }\n+        _ => RenderedLiteral { literal: qualified_name.clone(), detail: qualified_name.clone() },\n     };\n \n     if snippet_cap.is_some() {"}, {"sha": "ff61bf61c54ef8c79d08c33bcf6462146208472b", "filename": "crates/ide_completion/src/render/pattern.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Frender%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Frender%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fpattern.rs?ref=754d8687f4952e0dca50eca95aded4cf58a07fdf", "patch": "@@ -6,7 +6,7 @@ use itertools::Itertools;\n use syntax::SmolStr;\n \n use crate::{\n-    context::{ParamKind, PatternContext},\n+    context::{ParamKind, PathCompletionCtx, PatternContext},\n     render::{variant::visible_fields, RenderContext},\n     CompletionItem, CompletionItemKind,\n };\n@@ -77,12 +77,19 @@ fn render_pat(\n     fields: &[hir::Field],\n     fields_omitted: bool,\n ) -> Option<String> {\n+    let has_call_parens = matches!(\n+        ctx.completion.path_context,\n+        Some(PathCompletionCtx { has_call_parens: true, .. })\n+    );\n     let mut pat = match kind {\n-        StructKind::Tuple => render_tuple_as_pat(ctx.snippet_cap(), fields, name, fields_omitted),\n-        StructKind::Record => {\n+        StructKind::Tuple if !has_call_parens => {\n+            render_tuple_as_pat(ctx.snippet_cap(), fields, name, fields_omitted)\n+        }\n+        StructKind::Record if !has_call_parens => {\n             render_record_as_pat(ctx.db(), ctx.snippet_cap(), fields, name, fields_omitted)\n         }\n-        _ => return None,\n+        StructKind::Unit => return None,\n+        _ => name.to_owned(),\n     };\n \n     if matches!(\n@@ -91,7 +98,7 @@ fn render_pat(\n             param_ctx: Some((.., ParamKind::Function(_))),\n             has_type_ascription: false,\n             ..\n-        })\n+        }) if !has_call_parens\n     ) {\n         pat.push(':');\n         pat.push(' ');"}, {"sha": "f38c504fab8328b8bc1e9f95855cfa68a0296c11", "filename": "crates/ide_completion/src/tests/expression.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fexpression.rs?ref=754d8687f4952e0dca50eca95aded4cf58a07fdf", "patch": "@@ -552,3 +552,24 @@ fn func() {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn with_parens() {\n+    check_empty(\n+        r#\"\n+enum Enum {\n+    Variant()\n+}\n+impl Enum {\n+    fn variant() -> Self { Enum::Variant() }\n+}\n+fn func() {\n+    Enum::$0()\n+}\n+\"#,\n+        expect![[r#\"\n+            ev Variant(\u2026) Variant\n+            fn variant    fn() -> Enum\n+        \"#]],\n+    );\n+}"}, {"sha": "3b592635288811eb639a6c3cae63b2c233c95baa", "filename": "crates/ide_completion/src/tests/pattern.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754d8687f4952e0dca50eca95aded4cf58a07fdf/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fpattern.rs?ref=754d8687f4952e0dca50eca95aded4cf58a07fdf", "patch": "@@ -429,7 +429,9 @@ fn foo() {\n     }\n }\n \"#,\n-        expect![[r#\"\"#]],\n+        expect![[r#\"\n+            ev TupleVariant(\u2026) TupleVariant\n+        \"#]],\n     );\n     check_empty(\n         r#\"\n@@ -442,7 +444,9 @@ fn foo() {\n     }\n }\n \"#,\n-        expect![[r#\"\"#]],\n+        expect![[r#\"\n+            ev RecordVariant {\u2026} RecordVariant\n+        \"#]],\n     );\n }\n "}]}