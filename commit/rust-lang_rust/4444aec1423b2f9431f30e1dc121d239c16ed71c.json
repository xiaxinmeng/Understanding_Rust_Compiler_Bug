{"sha": "4444aec1423b2f9431f30e1dc121d239c16ed71c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NDRhZWMxNDIzYjJmOTQzMWYzMGUxZGMxMjFkMjM5YzE2ZWQ3MWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-21T14:40:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-21T14:40:57Z"}, "message": "auto merge of #16632 : pcwalton/rust/unboxed-closures-euv, r=luqmana\n\nexpression use visitor.\r\n\r\nCloses #16166.\r\n\r\nr? @huonw", "tree": {"sha": "79206c160af3358d1ba78fd16767cd43bb146e77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79206c160af3358d1ba78fd16767cd43bb146e77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4444aec1423b2f9431f30e1dc121d239c16ed71c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4444aec1423b2f9431f30e1dc121d239c16ed71c", "html_url": "https://github.com/rust-lang/rust/commit/4444aec1423b2f9431f30e1dc121d239c16ed71c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4444aec1423b2f9431f30e1dc121d239c16ed71c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f1b1a65ef9720e302a2fb5a0601d06c7d0dfa1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f1b1a65ef9720e302a2fb5a0601d06c7d0dfa1e", "html_url": "https://github.com/rust-lang/rust/commit/6f1b1a65ef9720e302a2fb5a0601d06c7d0dfa1e"}, {"sha": "24b089721f2c0e2b25228d3d5d31b5ca70d68070", "url": "https://api.github.com/repos/rust-lang/rust/commits/24b089721f2c0e2b25228d3d5d31b5ca70d68070", "html_url": "https://github.com/rust-lang/rust/commit/24b089721f2c0e2b25228d3d5d31b5ca70d68070"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "84b879227ae6c7df7e50154043c4adbe174ac110", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4444aec1423b2f9431f30e1dc121d239c16ed71c/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4444aec1423b2f9431f30e1dc121d239c16ed71c/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=4444aec1423b2f9431f30e1dc121d239c16ed71c", "patch": "@@ -130,16 +130,11 @@ impl OverloadedCallType {\n \n     fn from_method_id(tcx: &ty::ctxt, method_id: ast::DefId)\n                       -> OverloadedCallType {\n-        let method_descriptor =\n-            match tcx.impl_or_trait_items.borrow_mut().find(&method_id) {\n-                Some(&ty::MethodTraitItem(ref method_descriptor)) => {\n-                    (*method_descriptor).clone()\n-                }\n-                None => {\n-                    tcx.sess.bug(\"overloaded call method wasn't in method \\\n-                                  map\")\n-                }\n-            };\n+        let method_descriptor = match ty::impl_or_trait_item(tcx, method_id) {\n+            ty::MethodTraitItem(ref method_descriptor) => {\n+                (*method_descriptor).clone()\n+            }\n+        };\n         let impl_id = match method_descriptor.container {\n             ty::TraitContainer(_) => {\n                 tcx.sess.bug(\"statically resolved overloaded call method \\\n@@ -157,14 +152,27 @@ impl OverloadedCallType {\n         OverloadedCallType::from_trait_id(tcx, trait_ref.def_id)\n     }\n \n+    fn from_unboxed_closure(tcx: &ty::ctxt, closure_did: ast::DefId)\n+                            -> OverloadedCallType {\n+        let trait_did =\n+            tcx.unboxed_closures\n+               .borrow()\n+               .find(&closure_did)\n+               .expect(\"OverloadedCallType::from_unboxed_closure: didn't \\\n+                        find closure id\")\n+               .kind\n+               .trait_did(tcx);\n+        OverloadedCallType::from_trait_id(tcx, trait_did)\n+    }\n+\n     fn from_method_origin(tcx: &ty::ctxt, origin: &MethodOrigin)\n                           -> OverloadedCallType {\n         match *origin {\n             MethodStatic(def_id) => {\n                 OverloadedCallType::from_method_id(tcx, def_id)\n             }\n             MethodStaticUnboxedClosure(def_id) => {\n-                OverloadedCallType::from_method_id(tcx, def_id)\n+                OverloadedCallType::from_unboxed_closure(tcx, def_id)\n             }\n             MethodParam(ref method_param) => {\n                 OverloadedCallType::from_trait_id(tcx, method_param.trait_id)"}, {"sha": "c77ee9914ef2eafd0782d8581264ac3eb13fecd5", "filename": "src/test/run-pass/unboxed-closures-direct-sugary-call.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4444aec1423b2f9431f30e1dc121d239c16ed71c/src%2Ftest%2Frun-pass%2Funboxed-closures-direct-sugary-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4444aec1423b2f9431f30e1dc121d239c16ed71c/src%2Ftest%2Frun-pass%2Funboxed-closures-direct-sugary-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-direct-sugary-call.rs?ref=4444aec1423b2f9431f30e1dc121d239c16ed71c", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures, overloaded_calls)]\n+\n+fn main() {\n+    let mut unboxed = |&mut:| {};\n+    unboxed();\n+}\n+"}]}