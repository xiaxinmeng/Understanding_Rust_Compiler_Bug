{"sha": "2e543e9439c817f3af02170525a7dc9a26e3a307", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNTQzZTk0MzljODE3ZjNhZjAyMTcwNTI1YTdkYzlhMjZlM2EzMDc=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-01T13:14:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-01T13:14:10Z"}, "message": "Rollup merge of #53774 - PhilipDaniels:master, r=tromey\n\nAdd rust-gdbgui script.\n\nThis script invokes the [gdbgui](https://gdbgui.com/) graphical GDB front-end with the Rust pretty printers loaded. The script does not install gdbgui, that must be done manually.\n\nAs an escapee from Visual Studio it is nice to have a point-and-click debugger. This script invokes `gdbgui` similarly to the way that `rust-gdb` invokes `gdb` - I copied that script as a starting point.\n\nBecause it is a wrapper around a wrapper you don't have as much flexibility in passing arguments to GDB and I could not find a way to eliminate the single quotes you have to use when you want to pass arguments to your program (`gdbgui` supposedly supports an `--args` option which I think should allow this, but I couldn't get it to work, my shell-fu is weak). Still, I find this very usable for debugging programs, and it is a lot more approachable than gdb in the terminal.", "tree": {"sha": "df4c31010cf622fb12477bcf755eaf85f1a1b6f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df4c31010cf622fb12477bcf755eaf85f1a1b6f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e543e9439c817f3af02170525a7dc9a26e3a307", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbipCiCRBK7hj4Ov3rIwAAdHIIAHyL5iLpH7fw1CqlcDPMiNOH\nL1MibhkqVHt41pmTeid2Xica7eK9CNTg9rwjKVNT2+9HXHPu/2N3d9+W0KHpwRJt\nooUXM6XGrIZUdNNCyXZxrn3CtZZAD9GnfHZeTdtEZoHjJIEQ/pJfYQih3DOvgl1n\nRHelPWirgsjF6x0m7oY9Oy1xel4BGBwg1mktS90Vk/zR1XQOIgNz+jP78jZ4pfIj\nrj0tBiSTT4qv/0cjOO6bwK36Ix2HVoxtjNWhNSlLSRhDWOhs+PvWO0Y2+L4Vnyel\nLF8Wbl9olYASBM2R+QHWWxLjutliuDVAKHQ/aVFOC+t3K4BwM1dE2EbB6X0Er1c=\n=xtSx\n-----END PGP SIGNATURE-----\n", "payload": "tree df4c31010cf622fb12477bcf755eaf85f1a1b6f6\nparent 7cf6ea5ee457d85e48400587f80f239685fb1306\nparent 47aa4758664ee7b054261f09de3375cfb3cc926d\nauthor kennytm <kennytm@gmail.com> 1535807650 +0800\ncommitter GitHub <noreply@github.com> 1535807650 +0800\n\nRollup merge of #53774 - PhilipDaniels:master, r=tromey\n\nAdd rust-gdbgui script.\n\nThis script invokes the [gdbgui](https://gdbgui.com/) graphical GDB front-end with the Rust pretty printers loaded. The script does not install gdbgui, that must be done manually.\n\nAs an escapee from Visual Studio it is nice to have a point-and-click debugger. This script invokes `gdbgui` similarly to the way that `rust-gdb` invokes `gdb` - I copied that script as a starting point.\n\nBecause it is a wrapper around a wrapper you don't have as much flexibility in passing arguments to GDB and I could not find a way to eliminate the single quotes you have to use when you want to pass arguments to your program (`gdbgui` supposedly supports an `--args` option which I think should allow this, but I couldn't get it to work, my shell-fu is weak). Still, I find this very usable for debugging programs, and it is a lot more approachable than gdb in the terminal.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e543e9439c817f3af02170525a7dc9a26e3a307", "html_url": "https://github.com/rust-lang/rust/commit/2e543e9439c817f3af02170525a7dc9a26e3a307", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e543e9439c817f3af02170525a7dc9a26e3a307/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cf6ea5ee457d85e48400587f80f239685fb1306", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf6ea5ee457d85e48400587f80f239685fb1306", "html_url": "https://github.com/rust-lang/rust/commit/7cf6ea5ee457d85e48400587f80f239685fb1306"}, {"sha": "47aa4758664ee7b054261f09de3375cfb3cc926d", "url": "https://api.github.com/repos/rust-lang/rust/commits/47aa4758664ee7b054261f09de3375cfb3cc926d", "html_url": "https://github.com/rust-lang/rust/commit/47aa4758664ee7b054261f09de3375cfb3cc926d"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "7e179ba927dff11bb0bd1fe59e8eb833b3443ce2", "filename": "src/etc/rust-gdbgui", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/2e543e9439c817f3af02170525a7dc9a26e3a307/src%2Fetc%2Frust-gdbgui", "raw_url": "https://github.com/rust-lang/rust/raw/2e543e9439c817f3af02170525a7dc9a26e3a307/src%2Fetc%2Frust-gdbgui", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-gdbgui?ref=2e543e9439c817f3af02170525a7dc9a26e3a307", "patch": "@@ -0,0 +1,65 @@\n+#!/bin/sh\n+# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# Exit if anything fails\n+set -e\n+\n+if [ $# -eq 0 ] || [ \"$1\" = \"-h\" ] || [ \"$1\" = \"-help\" ] || [ \"$1\" = \"--help\" ]; then\n+    echo \"\n+rust-gdbgui\n+===========\n+gdbgui - https://gdbgui.com - is a graphical front-end to GDB\n+that runs in a browser. This script invokes gdbgui with the Rust\n+pretty printers loaded.\n+\n+Simple usage  : rust-gdbgui target/debug/myprog\n+With arguments: rust-gdbgui 'target/debug/myprog arg1 arg2...'\n+  (note the quotes)\n+\n+\n+Hints\n+=====\n+gdbgui won't be able to find the rust 'main' method automatically, so\n+in its options make sure to disable the 'Add breakpoint to main after\n+loading executable' setting to avoid a 'File not found: main' warning\n+on startup.\n+\n+Instead, type 'main' into gdbgui's file browser and you should get\n+auto-completion on the filename. Just pick 'main.rs', add a breakpoint\n+by clicking in the line number gutter, and type 'r' or hit the Restart\n+icon to start your program running.\n+\"\n+    exit 0\n+fi\n+\n+# Find out where the pretty printer Python module is\n+RUSTC_SYSROOT=`rustc --print=sysroot`\n+GDB_PYTHON_MODULE_DIRECTORY=\"$RUSTC_SYSROOT/lib/rustlib/etc\"\n+\n+# Set the environment variable `RUST_GDB` to overwrite the call to a\n+# different/specific command (defaults to `gdb`).\n+RUST_GDB=\"${RUST_GDB:-gdb}\"\n+\n+# Set the environment variable `RUST_GDBGUI` to overwrite the call to a\n+# different/specific command (defaults to `gdbgui`).\n+RUST_GDBGUI=\"${RUST_GDBGUI:-gdbgui}\"\n+\n+# These arguments get passed through to GDB and make it load the\n+# Rust pretty printers.\n+GDB_ARGS=\"--directory=\\\"$GDB_PYTHON_MODULE_DIRECTORY\\\" -iex \\\"add-auto-load-safe-path $GDB_PYTHON_MODULE_DIRECTORY\\\"\"\n+\n+# Finally we execute gdbgui.\n+PYTHONPATH=\"$PYTHONPATH:$GDB_PYTHON_MODULE_DIRECTORY\" \\\n+  exec ${RUST_GDBGUI} \\\n+  --gdb ${RUST_GDB} \\\n+  --gdb-args \"${GDB_ARGS}\" \\\n+  \"${@}\"\n+"}]}