{"sha": "9752c63035bc78f624c5fa1ca644f15db4e2a0df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NTJjNjMwMzViYzc4ZjYyNGM1ZmExY2E2NDRmMTVkYjRlMmEwZGY=", "commit": {"author": {"name": "Arcterus", "email": "Arcterus@mail.com", "date": "2014-02-02T23:20:32Z"}, "committer": {"name": "Arcterus", "email": "Arcterus@mail.com", "date": "2014-02-06T18:00:17Z"}, "message": "Move getopts out of extra", "tree": {"sha": "14d3155467142741ea2a32590015dfc50ef47ef3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14d3155467142741ea2a32590015dfc50ef47ef3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9752c63035bc78f624c5fa1ca644f15db4e2a0df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9752c63035bc78f624c5fa1ca644f15db4e2a0df", "html_url": "https://github.com/rust-lang/rust/commit/9752c63035bc78f624c5fa1ca644f15db4e2a0df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9752c63035bc78f624c5fa1ca644f15db4e2a0df/comments", "author": {"login": "Arcterus", "id": 829813, "node_id": "MDQ6VXNlcjgyOTgxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/829813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arcterus", "html_url": "https://github.com/Arcterus", "followers_url": "https://api.github.com/users/Arcterus/followers", "following_url": "https://api.github.com/users/Arcterus/following{/other_user}", "gists_url": "https://api.github.com/users/Arcterus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arcterus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arcterus/subscriptions", "organizations_url": "https://api.github.com/users/Arcterus/orgs", "repos_url": "https://api.github.com/users/Arcterus/repos", "events_url": "https://api.github.com/users/Arcterus/events{/privacy}", "received_events_url": "https://api.github.com/users/Arcterus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Arcterus", "id": 829813, "node_id": "MDQ6VXNlcjgyOTgxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/829813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arcterus", "html_url": "https://github.com/Arcterus", "followers_url": "https://api.github.com/users/Arcterus/followers", "following_url": "https://api.github.com/users/Arcterus/following{/other_user}", "gists_url": "https://api.github.com/users/Arcterus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arcterus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arcterus/subscriptions", "organizations_url": "https://api.github.com/users/Arcterus/orgs", "repos_url": "https://api.github.com/users/Arcterus/repos", "events_url": "https://api.github.com/users/Arcterus/events{/privacy}", "received_events_url": "https://api.github.com/users/Arcterus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f039d10cf73d8bc9a57fcdfe38c5f0b0a3a98b5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f039d10cf73d8bc9a57fcdfe38c5f0b0a3a98b5a", "html_url": "https://github.com/rust-lang/rust/commit/f039d10cf73d8bc9a57fcdfe38c5f0b0a3a98b5a"}], "stats": {"total": 77, "additions": 43, "deletions": 34}, "files": [{"sha": "65fb24257645259170692c0e66b3765ffc7c69bc", "filename": "mk/crates.mk", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -49,19 +49,20 @@\n # automatically generated for all stage/host/target combinations.\n ################################################################################\n \n-TARGET_CRATES := std extra green rustuv native flate arena glob term semver uuid serialize sync\n+TARGET_CRATES := std extra green rustuv native flate arena glob term semver \\\n+                 uuid serialize sync getopts\n HOST_CRATES := syntax rustc rustdoc\n CRATES := $(TARGET_CRATES) $(HOST_CRATES)\n TOOLS := compiletest rustdoc rustc\n \n DEPS_std := native:rustrt\n-DEPS_extra := std serialize sync term\n+DEPS_extra := std term sync serialize getopts\n DEPS_green := std\n DEPS_rustuv := std native:uv native:uv_support\n DEPS_native := std\n DEPS_syntax := std extra term serialize\n-DEPS_rustc := syntax native:rustllvm flate arena serialize sync\n-DEPS_rustdoc := rustc native:sundown serialize sync\n+DEPS_rustc := syntax native:rustllvm flate arena serialize sync getopts\n+DEPS_rustdoc := rustc native:sundown serialize sync getopts\n DEPS_flate := std native:miniz\n DEPS_arena := std extra\n DEPS_glob := std\n@@ -70,8 +71,9 @@ DEPS_term := std\n DEPS_semver := std\n DEPS_uuid := std serialize\n DEPS_sync := std\n+DEPS_getopts := std\n \n-TOOL_DEPS_compiletest := extra green rustuv\n+TOOL_DEPS_compiletest := extra green rustuv getopts\n TOOL_DEPS_rustdoc := rustdoc green rustuv\n TOOL_DEPS_rustc := rustc green rustuv\n TOOL_SOURCE_compiletest := $(S)src/compiletest/compiletest.rs"}, {"sha": "ff427ff0f5969a1954ab1d6ad1bebe983cb65417", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -14,13 +14,13 @@\n #[deny(warnings)];\n \n extern mod extra;\n+extern mod getopts;\n \n use std::os;\n use std::io;\n use std::io::fs;\n \n-use extra::getopts;\n-use extra::getopts::groups::{optopt, optflag, reqopt};\n+use getopts::groups::{optopt, optflag, reqopt};\n use extra::test;\n \n use common::config;"}, {"sha": "39dc196b6a051bdaecd97372bd615f50a7fe56f2", "filename": "src/doc/index.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Fdoc%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Fdoc%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Findex.md?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -39,6 +39,7 @@ li {list-style-type: none; }\n \n * [The `arena` allocation library](arena/index.html)\n * [The `flate` compression library](flate/index.html)\n+* [The `getopts` argument parsing library](getopts/index.html)\n * [The `glob` file path matching library](glob/index.html)\n * [The `semver` version collation library](semver/index.html)\n * [The `serialize` value encoding/decoding library](serialize/index.html)"}, {"sha": "97c38a59af85b6bc7bf79ff19b69eb10ea6b4b49", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -73,7 +73,6 @@ pub mod lru_cache;\n // And ... other stuff\n \n pub mod url;\n-pub mod getopts;\n pub mod json;\n pub mod tempfile;\n pub mod time;"}, {"sha": "b412138bff52ad24a4e35d0f4d53e6bcfcafb863", "filename": "src/libextra/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -17,8 +17,8 @@\n \n extern mod term;\n \n-use getopts;\n use getopts::groups;\n+use getopts;\n use json::ToJson;\n use json;\n use serialize::Decodable;"}, {"sha": "e1c0df294f73eca6b5a8502368efc1a5f7b1bdcf", "filename": "src/libgetopts/lib.rs", "status": "renamed", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -30,8 +30,8 @@\n //! file name following `-o`, and accepts both `-h` and `--help` as optional flags.\n //!\n //! ~~~{.rust}\n-//! extern mod extra;\n-//! use extra::getopts::{optopt,optflag,getopts,Opt};\n+//! extern mod getopts;\n+//! use getopts::{optopt,optflag,getopts,Opt};\n //! use std::os;\n //!\n //! fn do_work(inp: &str, out: Option<~str>) {\n@@ -77,6 +77,14 @@\n //! }\n //! ~~~\n \n+#[crate_id = \"getopts#0.10-pre\"];\n+#[crate_type = \"rlib\"];\n+#[crate_type = \"dylib\"];\n+#[license = \"MIT/ASL2\"];\n+#[allow(missing_doc)];\n+\n+#[feature(globs)];\n+\n use std::cmp::Eq;\n use std::result::{Err, Ok};\n use std::result;\n@@ -519,8 +527,8 @@ pub fn getopts(args: &[~str], opts: &[Opt]) -> Result {\n /// A module which provides a way to specify descriptions and\n /// groups of short and long option names, together.\n pub mod groups {\n-    use getopts::{HasArg, Long, Maybe, Multi, No, Occur, Opt, Optional, Req};\n-    use getopts::{Short, Yes};\n+    use super::{HasArg, Long, Maybe, Multi, No, Occur, Opt, Optional, Req};\n+    use super::{Short, Yes};\n \n     /// One group of options, e.g., both -h and --help, along with\n     /// their shared description and properties.\n@@ -671,8 +679,8 @@ pub mod groups {\n     }\n \n     /// Parse command line args with the provided long format options.\n-    pub fn getopts(args: &[~str], opts: &[OptGroup]) -> ::getopts::Result {\n-        ::getopts::getopts(args, opts.map(|x| x.long_to_short()))\n+    pub fn getopts(args: &[~str], opts: &[OptGroup]) -> super::Result {\n+        super::getopts(args, opts.map(|x| x.long_to_short()))\n     }\n \n     fn format_option(opt: &OptGroup) -> ~str {\n@@ -901,8 +909,8 @@ pub mod groups {\n #[cfg(test)]\n mod tests {\n \n-    use getopts::groups::OptGroup;\n-    use getopts::*;\n+    use super::groups::OptGroup;\n+    use super::*;\n \n     use std::result::{Err, Ok};\n     use std::result;", "previous_filename": "src/libextra/getopts.rs"}, {"sha": "1d99faa751160451f5840fd1441867ec0aaa7be3", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -34,8 +34,8 @@ use std::io::fs;\n use std::io::MemReader;\n use std::os;\n use std::vec;\n-use extra::getopts::groups::{optopt, optmulti, optflag, optflagopt};\n-use extra::getopts;\n+use getopts::groups::{optopt, optmulti, optflag, optflagopt};\n+use getopts;\n use syntax::ast;\n use syntax::abi;\n use syntax::attr;\n@@ -1188,7 +1188,7 @@ mod test {\n     use driver::driver::{build_configuration, build_session};\n     use driver::driver::{build_session_options, optgroups};\n \n-    use extra::getopts::groups::getopts;\n+    use getopts::groups::getopts;\n     use syntax::attr;\n     use syntax::attr::AttrMetaMethods;\n     use syntax::diagnostic;"}, {"sha": "c675de0d528c1e98e8c1b77533c1d7c1318d1702", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -37,6 +37,7 @@ extern mod arena;\n extern mod syntax;\n extern mod serialize;\n extern mod sync;\n+extern mod getopts;\n \n use back::link;\n use driver::session;\n@@ -50,8 +51,7 @@ use std::os;\n use std::str;\n use std::task;\n use std::vec;\n-use extra::getopts::groups;\n-use extra::getopts;\n+use getopts::groups;\n use syntax::ast;\n use syntax::attr;\n use syntax::diagnostic::Emitter;"}, {"sha": "28b10e881cd9a6889367468ec02c2b3ac3b57c2b", "filename": "src/librustc/middle/typeck/infer/test.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Ftest.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -23,12 +23,10 @@ use middle::lang_items::{LanguageItems, language_items};\n use middle::ty::{FnTyBase, FnMeta, FnSig};\n use util::ppaux::ty_to_str;\n \n-use extra::getopts::groups::{optopt, optmulti, optflag, optflagopt, getopts};\n-use extra::getopts::groups;\n-use extra::getopts::{opt_present};\n-use extra::getopts;\n-use extra::getopts;\n use extra::oldmap::HashMap;\n+use getopts::groups::{optopt, optmulti, optflag, optflagopt, getopts};\n+use getopts::groups;\n+use getopts::opt_present;\n use syntax::codemap::DUMMY_SP;\n use syntax::parse::parse_crate_from_source_str;\n use syntax::{ast, attr, parse};"}, {"sha": "48828a1ed06f49ab6291de39167af7bb75a2d849", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -20,16 +20,16 @@ extern mod rustc;\n extern mod extra;\n extern mod serialize;\n extern mod sync;\n+extern mod getopts;\n \n use std::local_data;\n use std::io;\n use std::io::{File, MemWriter};\n use std::str;\n-use extra::getopts;\n-use extra::getopts::groups;\n use extra::json;\n use serialize::{Decodable, Encodable};\n use extra::time;\n+use getopts::groups;\n \n pub mod clean;\n pub mod core;\n@@ -81,7 +81,7 @@ pub fn main() {\n }\n \n pub fn opts() -> ~[groups::OptGroup] {\n-    use extra::getopts::groups::*;\n+    use getopts::groups::*;\n     ~[\n         optflag(\"h\", \"help\", \"show this help message\"),\n         optflag(\"\", \"version\", \"print rustdoc's version\"),"}, {"sha": "12f2f2ca9361c11bc0bdd890332e225c750d01d7", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -16,11 +16,11 @@ use std::run;\n use std::str;\n \n use extra::tempfile::TempDir;\n-use extra::getopts;\n use extra::test;\n use rustc::driver::driver;\n use rustc::driver::session;\n use rustc::metadata::creader::Loader;\n+use getopts;\n use syntax::diagnostic;\n use syntax::parse;\n "}, {"sha": "45fc398ebeb80ff83d081ae455b2a61e1d9ffccf", "filename": "src/test/bench/shootout-pfib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pfib.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -19,8 +19,9 @@\n */\n \n extern mod extra;\n+extern mod getopts;\n \n-use extra::{time, getopts};\n+use extra::time;\n use std::os;\n use std::result::{Ok, Err};\n use std::task;"}, {"sha": "837f808274238b6e3cbbc6d850f38d81039ca160", "filename": "src/test/run-pass/getopts_ref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Ftest%2Frun-pass%2Fgetopts_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9752c63035bc78f624c5fa1ca644f15db4e2a0df/src%2Ftest%2Frun-pass%2Fgetopts_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgetopts_ref.rs?ref=9752c63035bc78f624c5fa1ca644f15db4e2a0df", "patch": "@@ -10,9 +10,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern mod extra;\n+extern mod getopts;\n \n-use extra::getopts::{optopt, getopts};\n+use getopts::{optopt, getopts};\n \n pub fn main() {\n     let args = ~[];"}]}