{"sha": "bb083b82023a5fc187a01c4db98c3ac40d9b351d", "node_id": "C_kwDOAAsO6NoAKGJiMDgzYjgyMDIzYTVmYzE4N2EwMWM0ZGI5OGMzYWM0MGQ5YjM1MWQ", "commit": {"author": {"name": "Daniel Eades", "email": "danieleades@hotmail.com", "date": "2022-12-30T10:08:07Z"}, "committer": {"name": "Daniel Eades", "email": "danieleades@hotmail.com", "date": "2023-01-02T15:02:54Z"}, "message": "remove useless casts", "tree": {"sha": "6f619521bfa10b875f126e1ef49df2196aa62542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f619521bfa10b875f126e1ef49df2196aa62542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb083b82023a5fc187a01c4db98c3ac40d9b351d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb083b82023a5fc187a01c4db98c3ac40d9b351d", "html_url": "https://github.com/rust-lang/rust/commit/bb083b82023a5fc187a01c4db98c3ac40d9b351d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb083b82023a5fc187a01c4db98c3ac40d9b351d/comments", "author": {"login": "danieleades", "id": 33452915, "node_id": "MDQ6VXNlcjMzNDUyOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/33452915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieleades", "html_url": "https://github.com/danieleades", "followers_url": "https://api.github.com/users/danieleades/followers", "following_url": "https://api.github.com/users/danieleades/following{/other_user}", "gists_url": "https://api.github.com/users/danieleades/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieleades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieleades/subscriptions", "organizations_url": "https://api.github.com/users/danieleades/orgs", "repos_url": "https://api.github.com/users/danieleades/repos", "events_url": "https://api.github.com/users/danieleades/events{/privacy}", "received_events_url": "https://api.github.com/users/danieleades/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danieleades", "id": 33452915, "node_id": "MDQ6VXNlcjMzNDUyOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/33452915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieleades", "html_url": "https://github.com/danieleades", "followers_url": "https://api.github.com/users/danieleades/followers", "following_url": "https://api.github.com/users/danieleades/following{/other_user}", "gists_url": "https://api.github.com/users/danieleades/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieleades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieleades/subscriptions", "organizations_url": "https://api.github.com/users/danieleades/orgs", "repos_url": "https://api.github.com/users/danieleades/repos", "events_url": "https://api.github.com/users/danieleades/events{/privacy}", "received_events_url": "https://api.github.com/users/danieleades/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa90d02079d0ecbdc089a9094bb68277379f98d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa90d02079d0ecbdc089a9094bb68277379f98d3", "html_url": "https://github.com/rust-lang/rust/commit/aa90d02079d0ecbdc089a9094bb68277379f98d3"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "8df70330fa9eb7d97806912ad454e34ae38c44ca", "filename": "crates/hir-ty/src/consteval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs?ref=bb083b82023a5fc187a01c4db98c3ac40d9b351d", "patch": "@@ -131,15 +131,15 @@ fn scalar_max(scalar: &Scalar) -> i128 {\n             IntTy::I16 => i16::MAX as i128,\n             IntTy::I32 => i32::MAX as i128,\n             IntTy::I64 => i64::MAX as i128,\n-            IntTy::I128 => i128::MAX as i128,\n+            IntTy::I128 => i128::MAX,\n         },\n         Scalar::Uint(x) => match x {\n             chalk_ir::UintTy::Usize => usize::MAX as i128,\n             chalk_ir::UintTy::U8 => u8::MAX as i128,\n             chalk_ir::UintTy::U16 => u16::MAX as i128,\n             chalk_ir::UintTy::U32 => u32::MAX as i128,\n             chalk_ir::UintTy::U64 => u64::MAX as i128,\n-            chalk_ir::UintTy::U128 => i128::MAX as i128, // ignore too big u128 for now\n+            chalk_ir::UintTy::U128 => i128::MAX, // ignore too big u128 for now\n         },\n         Scalar::Float(_) => 0,\n     }"}, {"sha": "2dbb14fcd9a676f2a3802ba1a528537fdce5fd1c", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=bb083b82023a5fc187a01c4db98c3ac40d9b351d", "patch": "@@ -25,12 +25,9 @@ pub(crate) fn vfs_path(url: &lsp_types::Url) -> Result<vfs::VfsPath> {\n \n pub(crate) fn offset(line_index: &LineIndex, position: lsp_types::Position) -> Result<TextSize> {\n     let line_col = match line_index.encoding {\n-        PositionEncoding::Utf8 => {\n-            LineCol { line: position.line as u32, col: position.character as u32 }\n-        }\n+        PositionEncoding::Utf8 => LineCol { line: position.line, col: position.character },\n         PositionEncoding::Utf16 => {\n-            let line_col =\n-                LineColUtf16 { line: position.line as u32, col: position.character as u32 };\n+            let line_col = LineColUtf16 { line: position.line, col: position.character };\n             line_index.index.to_utf8(line_col)\n         }\n     };"}, {"sha": "c2cc3f422d206b80b2efcdf1f2dc9b23150dbc1c", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=bb083b82023a5fc187a01c4db98c3ac40d9b351d", "patch": "@@ -161,8 +161,8 @@ impl SemanticTokensBuilder {\n \n     /// Push a new token onto the builder\n     pub(crate) fn push(&mut self, range: Range, token_index: u32, modifier_bitset: u32) {\n-        let mut push_line = range.start.line as u32;\n-        let mut push_char = range.start.character as u32;\n+        let mut push_line = range.start.line;\n+        let mut push_char = range.start.character;\n \n         if !self.data.is_empty() {\n             push_line -= self.prev_line;\n@@ -177,15 +177,15 @@ impl SemanticTokensBuilder {\n         let token = SemanticToken {\n             delta_line: push_line,\n             delta_start: push_char,\n-            length: token_len as u32,\n+            length: token_len,\n             token_type: token_index,\n             token_modifiers_bitset: modifier_bitset,\n         };\n \n         self.data.push(token);\n \n-        self.prev_line = range.start.line as u32;\n-        self.prev_char = range.start.character as u32;\n+        self.prev_line = range.start.line;\n+        self.prev_char = range.start.character;\n     }\n \n     pub(crate) fn build(self) -> SemanticTokens {"}, {"sha": "0c21d2674b1a05d0a09cae7b33c21f602774fced", "filename": "crates/stdx/src/hash.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Fstdx%2Fsrc%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb083b82023a5fc187a01c4db98c3ac40d9b351d/crates%2Fstdx%2Fsrc%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Fhash.rs?ref=bb083b82023a5fc187a01c4db98c3ac40d9b351d", "patch": "@@ -51,7 +51,7 @@ impl Hasher for NoHashHasher {\n     }\n \n     fn write_u64(&mut self, i: u64) {\n-        self.0 = i as u64;\n+        self.0 = i;\n     }\n \n     fn write_usize(&mut self, i: usize) {"}]}