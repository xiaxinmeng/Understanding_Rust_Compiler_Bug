{"sha": "134ef4f7933b87efdc04eac3e8d9a530d56d9cfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNGVmNGY3OTMzYjg3ZWZkYzA0ZWFjM2U4ZDlhNTMwZDU2ZDljZmU=", "commit": {"author": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2016-11-08T12:33:33Z"}, "committer": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2016-11-08T12:33:56Z"}, "message": "Revert \"Point macros 1.1 errors to the input item\"\n\nThis reverts commit 3784067edcbcd0614f6c4c88f6445ca17ae27ff6.\nAny errors in the derived output now point at the derive attribute\ninstead of the item.", "tree": {"sha": "cc06523b6156b87e13ea8e57c4aff813396cc4be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc06523b6156b87e13ea8e57c4aff813396cc4be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe", "html_url": "https://github.com/rust-lang/rust/commit/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe/comments", "author": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31a508e1185713c6e570bb963dd3e097a228957c", "url": "https://api.github.com/repos/rust-lang/rust/commits/31a508e1185713c6e570bb963dd3e097a228957c", "html_url": "https://github.com/rust-lang/rust/commit/31a508e1185713c6e570bb963dd3e097a228957c"}], "stats": {"total": 24, "additions": 5, "deletions": 19}, "files": [{"sha": "3305c1eae2b00ee6106ae8fab877fcddc4d2b463", "filename": "src/libsyntax_ext/deriving/custom.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs?ref=134ef4f7933b87efdc04eac3e8d9a530d56d9cfe", "patch": "@@ -14,12 +14,10 @@ use errors::FatalError;\n use proc_macro::{TokenStream, __internal};\n use syntax::ast::{self, ItemKind, Attribute};\n use syntax::attr::{mark_used, mark_known};\n-use syntax::codemap::{ExpnInfo, MacroAttribute, NameAndSpan, Span};\n+use syntax::codemap::Span;\n use syntax::ext::base::*;\n use syntax::fold::Folder;\n use syntax::parse::token::InternedString;\n-use syntax::parse::token::intern;\n-use syntax::print::pprust;\n use syntax::visit::Visitor;\n \n struct MarkAttrs<'a>(&'a [InternedString]);\n@@ -50,7 +48,7 @@ impl MultiItemModifier for CustomDerive {\n     fn expand(&self,\n               ecx: &mut ExtCtxt,\n               span: Span,\n-              meta_item: &ast::MetaItem,\n+              _meta_item: &ast::MetaItem,\n               item: Annotatable)\n               -> Vec<Annotatable> {\n         let item = match item {\n@@ -75,18 +73,6 @@ impl MultiItemModifier for CustomDerive {\n         // Mark attributes as known, and used.\n         MarkAttrs(&self.attrs).visit_item(&item);\n \n-        let input_span = Span {\n-            expn_id: ecx.codemap().record_expansion(ExpnInfo {\n-                call_site: span,\n-                callee: NameAndSpan {\n-                    format: MacroAttribute(intern(&pprust::meta_item_to_string(meta_item))),\n-                    span: Some(span),\n-                    allow_internal_unstable: true,\n-                },\n-            }),\n-            ..item.span\n-        };\n-\n         let input = __internal::new_token_stream(item.clone());\n         let res = __internal::set_parse_sess(&ecx.parse_sess, || {\n             let inner = self.inner;\n@@ -113,7 +99,7 @@ impl MultiItemModifier for CustomDerive {\n         // Reassign spans of all expanded items to the input `item`\n         // for better errors here.\n         res.extend(new_items.into_iter().flat_map(|item| {\n-            ChangeSpan { span: input_span }.fold_item(item)\n+            ChangeSpan { span: span }.fold_item(item)\n         }).map(Annotatable::Item));\n         res\n     }"}, {"sha": "4f4ed90f8fca2be697a1c707da5218aaa2431ad5", "filename": "src/test/compile-fail-fulldeps/proc-macro/expand-to-unstable-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fexpand-to-unstable-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fexpand-to-unstable-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fexpand-to-unstable-2.rs?ref=134ef4f7933b87efdc04eac3e8d9a530d56d9cfe", "patch": "@@ -17,8 +17,8 @@\n extern crate derive_unstable_2;\n \n #[derive(Unstable)]\n-struct A;\n //~^ ERROR: reserved for internal compiler\n+struct A;\n \n fn main() {\n     foo();"}, {"sha": "84ac776a765a2631f6505e54340482f7c1bfc620", "filename": "src/test/compile-fail-fulldeps/proc-macro/expand-to-unstable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fexpand-to-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/134ef4f7933b87efdc04eac3e8d9a530d56d9cfe/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fexpand-to-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fexpand-to-unstable.rs?ref=134ef4f7933b87efdc04eac3e8d9a530d56d9cfe", "patch": "@@ -17,8 +17,8 @@\n extern crate derive_unstable;\n \n #[derive(Unstable)]\n-struct A;\n //~^ ERROR: use of unstable library feature\n+struct A;\n \n fn main() {\n     unsafe { foo(); }"}]}