{"sha": "083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "node_id": "C_kwDOAAsO6NoAKDA4M2ViOTM2ZWMwZmQwNWZjNmMyMjdlNWFhMjk5Mjk3MWYxZmUyZDE", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-28T17:26:30Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-28T19:03:28Z"}, "message": "On unsized locals with explicit types suggest `&`\n\nFix #72742.", "tree": {"sha": "caed52c7a54304ce9a58e1a775868ed8e35bb1cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caed52c7a54304ce9a58e1a775868ed8e35bb1cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "html_url": "https://github.com/rust-lang/rust/commit/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92c1937a90e5b6f20fa6e87016d6869da363972e", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c1937a90e5b6f20fa6e87016d6869da363972e", "html_url": "https://github.com/rust-lang/rust/commit/92c1937a90e5b6f20fa6e87016d6869da363972e"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "26ba3d780d55928df5e287bccd12fbb669eb4a92", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "patch": "@@ -2514,6 +2514,15 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             ObligationCauseCode::VariableType(hir_id) => {\n                 let parent_node = self.tcx.hir().get_parent_node(hir_id);\n                 match self.tcx.hir().find(parent_node) {\n+                    Some(Node::Local(hir::Local { ty: Some(ty), .. })) => {\n+                        err.span_suggestion_verbose(\n+                            ty.span.shrink_to_lo(),\n+                            \"consider borrowing here\",\n+                            \"&\",\n+                            Applicability::MachineApplicable,\n+                        );\n+                        err.note(\"all local variables must have a statically known size\");\n+                    }\n                     Some(Node::Local(hir::Local {\n                         init: Some(hir::Expr { kind: hir::ExprKind::Index(_, _), span, .. }),\n                         .."}, {"sha": "0869485799311f14ac4bc1b330a6c64abad12805", "filename": "src/test/ui/unsized-locals/suggest-borrow.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized-locals%2Fsuggest-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized-locals%2Fsuggest-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fsuggest-borrow.rs?ref=083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let x: [u8] = vec!(1, 2, 3)[..]; //~ ERROR E0277\n+    let x: &[u8] = vec!(1, 2, 3)[..]; //~ ERROR E0308\n+    let x: [u8] = &vec!(1, 2, 3)[..]; //~ ERROR E0308\n+    //~^ ERROR E0277\n+    let x: &[u8] = &vec!(1, 2, 3)[..];\n+}"}, {"sha": "08745eab28d16e518b37ea35d3d02aa7e06cd75a", "filename": "src/test/ui/unsized-locals/suggest-borrow.stderr", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized-locals%2Fsuggest-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized-locals%2Fsuggest-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Fsuggest-borrow.stderr?ref=083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "patch": "@@ -0,0 +1,60 @@\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/suggest-borrow.rs:2:9\n+   |\n+LL |     let x: [u8] = vec!(1, 2, 3)[..];\n+   |         ^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+   = note: all local variables must have a statically known size\n+   = help: unsized locals are gated as an unstable feature\n+help: consider borrowing here\n+   |\n+LL |     let x: &[u8] = vec!(1, 2, 3)[..];\n+   |            +\n+\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-borrow.rs:3:20\n+   |\n+LL |     let x: &[u8] = vec!(1, 2, 3)[..];\n+   |            -----   ^^^^^^^^^^^^^^^^^\n+   |            |       |\n+   |            |       expected `&[u8]`, found slice `[{integer}]`\n+   |            |       help: consider borrowing here: `&vec!(1, 2, 3)[..]`\n+   |            expected due to this\n+\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-borrow.rs:4:19\n+   |\n+LL |     let x: [u8] = &vec!(1, 2, 3)[..];\n+   |            ----   ^^^^^^^^^^^^^^^^^^ expected slice `[u8]`, found `&[{integer}]`\n+   |            |\n+   |            expected due to this\n+   |\n+help: consider removing the borrow\n+   |\n+LL -     let x: [u8] = &vec!(1, 2, 3)[..];\n+LL +     let x: [u8] = vec!(1, 2, 3)[..];\n+   |\n+help: alternatively, consider changing the type annotation\n+   |\n+LL |     let x: &[u8] = &vec!(1, 2, 3)[..];\n+   |            +\n+\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/suggest-borrow.rs:4:9\n+   |\n+LL |     let x: [u8] = &vec!(1, 2, 3)[..];\n+   |         ^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+   = note: all local variables must have a statically known size\n+   = help: unsized locals are gated as an unstable feature\n+help: consider borrowing here\n+   |\n+LL |     let x: &[u8] = &vec!(1, 2, 3)[..];\n+   |            +\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0277, E0308.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "ace5a87187b8d1537f612cfc91e115dea1efd0ea", "filename": "src/test/ui/unsized-locals/unsized-locals-using-unsized-fn-params.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized-locals%2Funsized-locals-using-unsized-fn-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized-locals%2Funsized-locals-using-unsized-fn-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Funsized-locals-using-unsized-fn-params.stderr?ref=083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "patch": "@@ -27,6 +27,10 @@ LL |     let _foo: [u8] = *foo;\n    = help: the trait `Sized` is not implemented for `[u8]`\n    = note: all local variables must have a statically known size\n    = help: unsized locals are gated as an unstable feature\n+help: consider borrowing here\n+   |\n+LL |     let _foo: &[u8] = *foo;\n+   |               +\n \n error: aborting due to 3 previous errors\n "}, {"sha": "18ac1ea18751542fdf9489871f5b10a31713cd5b", "filename": "src/test/ui/unsized/unsized6.stderr", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized%2Funsized6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/083eb936ec0fd05fc6c227e5aa2992971f1fe2d1/src%2Ftest%2Fui%2Funsized%2Funsized6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized6.stderr?ref=083eb936ec0fd05fc6c227e5aa2992971f1fe2d1", "patch": "@@ -14,6 +14,10 @@ help: consider removing the `?Sized` bound to make the type parameter `Sized`\n LL - fn f1<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized>(x: &X) {\n LL + fn f1<W: ?Sized, X: ?Sized, Y, Z: ?Sized>(x: &X) {\n    |\n+help: consider borrowing here\n+   |\n+LL |     let y: &Y;\n+   |            +\n \n error[E0277]: the size for values of type `X` cannot be known at compilation time\n   --> $DIR/unsized6.rs:7:12\n@@ -62,6 +66,10 @@ help: consider removing the `?Sized` bound to make the type parameter `Sized`\n LL - fn f2<X: ?Sized, Y: ?Sized>(x: &X) {\n LL + fn f2<X, Y: ?Sized>(x: &X) {\n    |\n+help: consider borrowing here\n+   |\n+LL |     let y: &X;\n+   |            +\n \n error[E0277]: the size for values of type `Y` cannot be known at compilation time\n   --> $DIR/unsized6.rs:17:12\n@@ -94,6 +102,10 @@ help: consider removing the `?Sized` bound to make the type parameter `Sized`\n LL - fn f3<X: ?Sized>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n LL + fn f3<X>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n    |\n+help: consider borrowing here\n+   |\n+LL |     let y: &X = *x1;\n+   |            +\n \n error[E0277]: the size for values of type `X` cannot be known at compilation time\n   --> $DIR/unsized6.rs:24:9\n@@ -144,6 +156,10 @@ help: consider removing the `?Sized` bound to make the type parameter `Sized`\n LL - fn f4<X: ?Sized + T>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n LL + fn f4<X: T>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n    |\n+help: consider borrowing here\n+   |\n+LL |     let y: &X = *x1;\n+   |            +\n \n error[E0277]: the size for values of type `X` cannot be known at compilation time\n   --> $DIR/unsized6.rs:32:9"}]}