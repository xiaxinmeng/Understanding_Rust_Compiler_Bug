{"sha": "ec88426ea8dbee3a4647039d65deea4de31fb69a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjODg0MjZlYThkYmVlM2E0NjQ3MDM5ZDY1ZGVlYTRkZTMxZmI2OWE=", "commit": {"author": {"name": "Daniel Griffen", "email": "daniel@dgriffen.com", "date": "2015-01-06T05:30:58Z"}, "committer": {"name": "Daniel Griffen", "email": "daniel@dgriffen.com", "date": "2015-01-24T10:25:17Z"}, "message": "Implement winsize() for unix.", "tree": {"sha": "ce420da9f611e90006ee3343aceceab07c88d4eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce420da9f611e90006ee3343aceceab07c88d4eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec88426ea8dbee3a4647039d65deea4de31fb69a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec88426ea8dbee3a4647039d65deea4de31fb69a", "html_url": "https://github.com/rust-lang/rust/commit/ec88426ea8dbee3a4647039d65deea4de31fb69a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec88426ea8dbee3a4647039d65deea4de31fb69a/comments", "author": null, "committer": null, "parents": [{"sha": "c7dd3c4d69aee1c4ad8cc220c194b176bba2ab62", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7dd3c4d69aee1c4ad8cc220c194b176bba2ab62", "html_url": "https://github.com/rust-lang/rust/commit/c7dd3c4d69aee1c4ad8cc220c194b176bba2ab62"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "d20469f5106f86fb753919db5ee56a4ea2abcac6", "filename": "src/libstd/sys/unix/tty.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ec88426ea8dbee3a4647039d65deea4de31fb69a/src%2Flibstd%2Fsys%2Funix%2Ftty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec88426ea8dbee3a4647039d65deea4de31fb69a/src%2Flibstd%2Fsys%2Funix%2Ftty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ftty.rs?ref=ec88426ea8dbee3a4647039d65deea4de31fb69a", "patch": "@@ -11,14 +11,22 @@\n use prelude::v1::*;\n \n use sys::fs::FileDesc;\n-use libc::{self, c_int};\n+use libc::{self, c_int, c_ulong, funcs};\n use io::{self, IoResult, IoError};\n+use sys::c;\n use sys_common;\n \n pub struct TTY {\n     pub fd: FileDesc,\n }\n \n+#[cfg(any(target_os = \"macos\",\n+          target_os = \"freebsd\"))]\n+const TIOCGWINSZ: c_ulong = 0x40087468;\n+\n+#[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n+const TIOCGWINSZ: c_ulong = 0x00005413;\n+\n impl TTY {\n     pub fn new(fd: c_int) -> IoResult<TTY> {\n         if unsafe { libc::isatty(fd) } != 0 {\n@@ -41,8 +49,39 @@ impl TTY {\n     pub fn set_raw(&mut self, _raw: bool) -> IoResult<()> {\n         Err(sys_common::unimpl())\n     }\n+\n+    #[cfg(any(target_os = \"linux\",\n+              target_os = \"android\",\n+              target_os = \"macos\",\n+              target_os = \"freebsd\"))]\n+    pub fn get_winsize(&mut self) -> IoResult<(int, int)> {\n+        unsafe {\n+            #[repr(C)]\n+            struct winsize {\n+                ws_row: u16,\n+                ws_col: u16,\n+                ws_xpixel: u16,\n+                ws_ypixel: u16\n+            }\n+\n+            let mut size = winsize { ws_row: 0, ws_col: 0, ws_xpixel: 0, ws_ypixel: 0 };\n+            if c::ioctl(self.fd.fd(), TIOCGWINSZ, &mut size) == -1 {\n+                Err(IoError {\n+                    kind: io::OtherIoError,\n+                    desc: \"Size of terminal could not be determined\",\n+                    detail: None,\n+                })\n+            } else {\n+                Ok((size.ws_col as int, size.ws_row as int))\n+            }\n+        }\n+    }\n+\n+    #[cfg(any(target_os = \"ios\",\n+              target_os = \"dragonfly\"))]\n     pub fn get_winsize(&mut self) -> IoResult<(int, int)> {\n         Err(sys_common::unimpl())\n     }\n+\n     pub fn isatty(&self) -> bool { false }\n }"}]}