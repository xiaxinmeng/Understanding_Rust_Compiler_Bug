{"sha": "967c7d828aacd9f788973c05acabafc194bd5772", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2N2M3ZDgyOGFhY2Q5Zjc4ODk3M2MwNWFjYWJhZmMxOTRiZDU3NzI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-10T21:27:18Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-10T21:34:28Z"}, "message": "Replace str::raw::buf_as_slice with c_str_to_static_slice. Close #3843.", "tree": {"sha": "e4fff46ac86a96981d4b494f80b3dd19dbe15f30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4fff46ac86a96981d4b494f80b3dd19dbe15f30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/967c7d828aacd9f788973c05acabafc194bd5772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/967c7d828aacd9f788973c05acabafc194bd5772", "html_url": "https://github.com/rust-lang/rust/commit/967c7d828aacd9f788973c05acabafc194bd5772", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/967c7d828aacd9f788973c05acabafc194bd5772/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1310212c27c1c294e1f907b05a225440c987a912", "url": "https://api.github.com/repos/rust-lang/rust/commits/1310212c27c1c294e1f907b05a225440c987a912", "html_url": "https://github.com/rust-lang/rust/commit/1310212c27c1c294e1f907b05a225440c987a912"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "dd66a76eead91777ea2130c5070b8bce3d8ca3e3", "filename": "src/libstd/rt/uv/mod.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/967c7d828aacd9f788973c05acabafc194bd5772/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/967c7d828aacd9f788973c05acabafc194bd5772/src%2Flibstd%2Frt%2Fuv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fmod.rs?ref=967c7d828aacd9f788973c05acabafc194bd5772", "patch": "@@ -238,28 +238,14 @@ pub fn last_uv_error<H, W: Watcher + NativeHandle<*H>>(watcher: &W) -> UvError {\n }\n \n pub fn uv_error_to_io_error(uverr: UvError) -> IoError {\n-\n-    // XXX: Could go in str::raw\n-    unsafe fn c_str_to_static_slice(s: *libc::c_char) -> &'static str {\n-        let s = s as *u8;\n-        let mut (curr, len) = (s, 0u);\n-        while *curr != 0u8 {\n-            len += 1u;\n-            curr = ptr::offset(s, len);\n-        }\n-\n-        str::raw::buf_as_slice(s, len, |d| cast::transmute(d))\n-    }\n-\n-\n     unsafe {\n         // Importing error constants\n         use rt::uv::uvll::*;\n         use rt::io::*;\n \n         // uv error descriptions are static\n         let c_desc = uvll::strerror(&*uverr);\n-        let desc = c_str_to_static_slice(c_desc);\n+        let desc = str::raw::c_str_to_static_slice(c_desc);\n \n         let kind = match uverr.code {\n             UNKNOWN => OtherIoError,"}, {"sha": "f270964c3b5697224d3e4121aa50a3fa85266bc6", "filename": "src/libstd/str.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/967c7d828aacd9f788973c05acabafc194bd5772/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/967c7d828aacd9f788973c05acabafc194bd5772/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=967c7d828aacd9f788973c05acabafc194bd5772", "patch": "@@ -1396,12 +1396,19 @@ pub mod raw {\n     /// Converts a byte to a string.\n     pub unsafe fn from_byte(u: u8) -> ~str { raw::from_bytes([u]) }\n \n-    /// Form a slice from a *u8 buffer of the given length without copying.\n-    pub unsafe fn buf_as_slice<T>(buf: *u8, len: uint,\n-                              f: &fn(v: &str) -> T) -> T {\n-        let v = (buf, len + 1);\n+    /// Form a slice from a C string. Unsafe because the caller must ensure the\n+    /// C string has the static lifetime, or else the return value may be\n+    /// invalidated later.\n+    pub unsafe fn c_str_to_static_slice(s: *libc::c_char) -> &'static str {\n+        let s = s as *u8;\n+        let mut (curr, len) = (s, 0u);\n+        while *curr != 0u8 {\n+            len += 1u;\n+            curr = ptr::offset(s, len);\n+        }\n+        let v = (s, len + 1);\n         assert!(is_utf8(::cast::transmute(v)));\n-        f(::cast::transmute(v))\n+        ::cast::transmute(v)\n     }\n \n     /**"}]}