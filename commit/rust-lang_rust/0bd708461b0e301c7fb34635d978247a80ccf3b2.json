{"sha": "0bd708461b0e301c7fb34635d978247a80ccf3b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZDcwODQ2MWIwZTMwMWM3ZmIzNDYzNWQ5NzgyNDdhODBjY2YzYjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-12T10:38:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-12T10:38:48Z"}, "message": "Auto merge of #29770 - ollie27:assert_eq_unsized, r=alexcrichton\n\n`format_args!` doesn't support none Sized types so we should just pass it the references to `left_val` and `right_val`.\n\nThe following works:\n```rust\nassert!([1, 2, 3][..] == vec![1, 2, 3][..])\n```\nSo I would expect this to as well:\n```rust\nassert_eq!([1, 2, 3][..], vec![1, 2, 3][..])\n```\nBut it fails with \"error: the trait `core::marker::Sized` is not implemented for the type `[_]` [E0277]\"\nI don't know if this change will have any nasty side effects I don't understand.", "tree": {"sha": "6eabf307b21ddef348b35800dd4af77443860cff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eabf307b21ddef348b35800dd4af77443860cff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bd708461b0e301c7fb34635d978247a80ccf3b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd708461b0e301c7fb34635d978247a80ccf3b2", "html_url": "https://github.com/rust-lang/rust/commit/0bd708461b0e301c7fb34635d978247a80ccf3b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bd708461b0e301c7fb34635d978247a80ccf3b2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afd4a5420c3a9f6642da655543aa26df15b2ef9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/afd4a5420c3a9f6642da655543aa26df15b2ef9c", "html_url": "https://github.com/rust-lang/rust/commit/afd4a5420c3a9f6642da655543aa26df15b2ef9c"}, {"sha": "780581e8a1233f744329f37b6de10177069fbd86", "url": "https://api.github.com/repos/rust-lang/rust/commits/780581e8a1233f744329f37b6de10177069fbd86", "html_url": "https://github.com/rust-lang/rust/commit/780581e8a1233f744329f37b6de10177069fbd86"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "a4a2552025bf760f5da11875c9328bcc4ab29b0f", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bd708461b0e301c7fb34635d978247a80ccf3b2/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bd708461b0e301c7fb34635d978247a80ccf3b2/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=0bd708461b0e301c7fb34635d978247a80ccf3b2", "patch": "@@ -89,7 +89,7 @@ macro_rules! assert_eq {\n             (left_val, right_val) => {\n                 if !(*left_val == *right_val) {\n                     panic!(\"assertion failed: `(left == right)` \\\n-                           (left: `{:?}`, right: `{:?}`)\", *left_val, *right_val)\n+                           (left: `{:?}`, right: `{:?}`)\", left_val, right_val)\n                 }\n             }\n         }"}, {"sha": "e21d3ef0ed0680ad5579264a92b5ab36a72f5f07", "filename": "src/test/run-pass/assert-eq-macro-unsized.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0bd708461b0e301c7fb34635d978247a80ccf3b2/src%2Ftest%2Frun-pass%2Fassert-eq-macro-unsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bd708461b0e301c7fb34635d978247a80ccf3b2/src%2Ftest%2Frun-pass%2Fassert-eq-macro-unsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassert-eq-macro-unsized.rs?ref=0bd708461b0e301c7fb34635d978247a80ccf3b2", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn main() {\n+    assert_eq!([1, 2, 3][..], vec![1, 2, 3][..]);\n+}"}]}