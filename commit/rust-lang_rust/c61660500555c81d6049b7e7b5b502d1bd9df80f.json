{"sha": "c61660500555c81d6049b7e7b5b502d1bd9df80f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MTY2MDUwMDU1NWM4MWQ2MDQ5YjdlN2I1YjUwMmQxYmQ5ZGY4MGY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-16T20:17:40Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-16T20:58:44Z"}, "message": "Point at enclosing fn/closure when it's not async", "tree": {"sha": "4105d1785b55393975ca162ee26865133c56a1f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4105d1785b55393975ca162ee26865133c56a1f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c61660500555c81d6049b7e7b5b502d1bd9df80f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c61660500555c81d6049b7e7b5b502d1bd9df80f", "html_url": "https://github.com/rust-lang/rust/commit/c61660500555c81d6049b7e7b5b502d1bd9df80f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c61660500555c81d6049b7e7b5b502d1bd9df80f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91c36c40bdd68d928f9202077309ae48f575d187", "url": "https://api.github.com/repos/rust-lang/rust/commits/91c36c40bdd68d928f9202077309ae48f575d187", "html_url": "https://github.com/rust-lang/rust/commit/91c36c40bdd68d928f9202077309ae48f575d187"}], "stats": {"total": 101, "additions": 60, "deletions": 41}, "files": [{"sha": "3a8b139236ccad97fde64828468dc593664217eb", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=c61660500555c81d6049b7e7b5b502d1bd9df80f", "patch": "@@ -99,7 +99,7 @@ pub struct LoweringContext<'a> {\n \n     /// Used to get the current `fn`'s def span to point to when using `await`\n     /// outside of an `async fn`.\n-    current_item_id: Option<hir::HirId>,\n+    current_item: Option<Span>,\n \n     catch_scopes: Vec<NodeId>,\n     loop_scopes: Vec<NodeId>,\n@@ -254,7 +254,7 @@ pub fn lower_crate(\n         node_id_to_hir_id: IndexVec::new(),\n         is_generator: false,\n         is_async_body: false,\n-        current_item_id: None,\n+        current_item: None,\n         is_in_trait_impl: false,\n         lifetimes_to_define: Vec::new(),\n         is_collecting_in_band_lifetimes: false,\n@@ -3120,8 +3120,8 @@ impl<'a> LoweringContext<'a> {\n             }\n             ItemKind::Fn(ref decl, ref header, ref generics, ref body) => {\n                 let fn_def_id = self.resolver.definitions().local_def_id(id);\n-                let hir_id = self.lower_node_id(id);\n                 self.with_new_scopes(|this| {\n+                    this.current_item = Some(ident.span);\n                     let mut lower_fn = |decl: &FnDecl| {\n                         // Note: we don't need to change the return type from `T` to\n                         // `impl Future<Output = T>` here because lower_body\n@@ -3159,7 +3159,6 @@ impl<'a> LoweringContext<'a> {\n                     } else {\n                         lower_fn(decl)\n                     };\n-                    this.current_item_id = Some(hir_id);\n \n                     hir::ItemKind::Fn(\n                         fn_decl,\n@@ -3661,6 +3660,7 @@ impl<'a> LoweringContext<'a> {\n                 } else {\n                     lower_method(sig)\n                 };\n+                self.current_item = Some(i.span);\n \n                 (generics, hir::ImplItemKind::Method(sig, body_id))\n             }\n@@ -4277,6 +4277,7 @@ impl<'a> LoweringContext<'a> {\n                     let fn_decl = self.lower_fn_decl(decl, None, false, None);\n \n                     self.with_new_scopes(|this| {\n+                        this.current_item = Some(fn_decl_span);\n                         let mut is_generator = false;\n                         let body_id = this.lower_body(Some(decl), |this| {\n                             let e = this.lower_expr(body);\n@@ -5565,11 +5566,8 @@ impl<'a> LoweringContext<'a> {\n                 \"`await` is only allowed inside `async` functions and blocks\"\n             );\n             err.span_label(await_span, \"only allowed inside `async` functions and blocks\");\n-            if let Some(item_id) = self.current_item_id {\n-                err.span_label(\n-                    self.sess.source_map().def_span(self.items[&item_id].span),\n-                    \"this function is not `async`\",\n-                );\n+            if let Some(item_sp) = self.current_item {\n+                err.span_label(item_sp, \"this is not `async`\");\n             }\n             err.emit();\n             return hir::ExprKind::Err;"}, {"sha": "6b615cc9ff98f23adb0ec1917e0508a06f04811e", "filename": "src/test/ui/await-keyword/incorrect-syntax-suggestions.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fawait-keyword%2Fincorrect-syntax-suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fawait-keyword%2Fincorrect-syntax-suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2Fincorrect-syntax-suggestions.rs?ref=c61660500555c81d6049b7e7b5b502d1bd9df80f", "patch": "@@ -89,5 +89,19 @@ fn foo16() -> Result<(), ()> {\n     let _ = bar().await?; //~ ERROR `await` is only allowed inside `async` functions and blocks\n     Ok(())\n }\n+fn foo24() -> Result<(), ()> {\n+    fn foo() -> Result<(), ()> {\n+        let _ = bar().await?; //~ ERROR `await` is only allowed inside `async` functions and blocks\n+        Ok(())\n+    }\n+    foo()\n+}\n+fn foo25() -> Result<(), ()> {\n+    let foo = || {\n+        let _ = bar().await?; //~ ERROR `await` is only allowed inside `async` functions and blocks\n+        Ok(())\n+    };\n+    foo()\n+}\n \n fn main() {}"}, {"sha": "5ea59d4bcee1721d5eb243a5f23540a429ec9740", "filename": "src/test/ui/await-keyword/incorrect-syntax-suggestions.stderr", "status": "modified", "additions": 33, "deletions": 25, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fawait-keyword%2Fincorrect-syntax-suggestions.stderr?ref=c61660500555c81d6049b7e7b5b502d1bd9df80f", "patch": "@@ -91,75 +91,83 @@ LL |     let _ = bar().await()?;\n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:55:13\n    |\n-LL | async fn foo8() -> Result<(), ()> {\n-   | --------------------------------- this function is not `async`\n-...\n+LL | fn foo9() -> Result<(), ()> {\n+   |    ---- this is not `async`\n LL |     let _ = await bar();\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:60:13\n    |\n-LL | fn foo9() -> Result<(), ()> {\n-   | --------------------------- this function is not `async`\n-...\n+LL | fn foo10() -> Result<(), ()> {\n+   |    ----- this is not `async`\n LL |     let _ = await? bar();\n    |             ^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:65:13\n    |\n-LL | fn foo10() -> Result<(), ()> {\n-   | ---------------------------- this function is not `async`\n-...\n+LL | fn foo11() -> Result<(), ()> {\n+   |    ----- this is not `async`\n LL |     let _ = await bar()?;\n    |             ^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:70:14\n    |\n-LL | fn foo11() -> Result<(), ()> {\n-   | ---------------------------- this function is not `async`\n-...\n+LL | fn foo12() -> Result<(), ()> {\n+   |    ----- this is not `async`\n LL |     let _ = (await bar())?;\n    |              ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:75:13\n    |\n-LL | fn foo12() -> Result<(), ()> {\n-   | ---------------------------- this function is not `async`\n-...\n+LL | fn foo13() -> Result<(), ()> {\n+   |    ----- this is not `async`\n LL |     let _ = bar().await();\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:80:13\n    |\n-LL | fn foo13() -> Result<(), ()> {\n-   | ---------------------------- this function is not `async`\n-...\n+LL | fn foo14() -> Result<(), ()> {\n+   |    ----- this is not `async`\n LL |     let _ = bar().await()?;\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:85:13\n    |\n-LL | fn foo14() -> Result<(), ()> {\n-   | ---------------------------- this function is not `async`\n-...\n+LL | fn foo15() -> Result<(), ()> {\n+   |    ----- this is not `async`\n LL |     let _ = bar().await;\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/incorrect-syntax-suggestions.rs:89:13\n    |\n-LL | fn foo15() -> Result<(), ()> {\n-   | ---------------------------- this function is not `async`\n-...\n+LL | fn foo16() -> Result<(), ()> {\n+   |    ----- this is not `async`\n LL |     let _ = bar().await?;\n    |             ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n+error[E0728]: `await` is only allowed inside `async` functions and blocks\n+  --> $DIR/incorrect-syntax-suggestions.rs:94:17\n+   |\n+LL |     fn foo() -> Result<(), ()> {\n+   |        --- this is not `async`\n+LL |         let _ = bar().await?;\n+   |                 ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n+\n+error[E0728]: `await` is only allowed inside `async` functions and blocks\n+  --> $DIR/incorrect-syntax-suggestions.rs:101:17\n+   |\n+LL |     let foo = || {\n+   |               -- this is not `async`\n+LL |         let _ = bar().await?;\n+   |                 ^^^^^^^^^^^ only allowed inside `async` functions and blocks\n+\n error[E0277]: the `?` operator can only be applied to values that implement `std::ops::Try`\n   --> $DIR/incorrect-syntax-suggestions.rs:18:19\n    |\n@@ -169,6 +177,6 @@ LL |     let _ = await bar()?;\n    = help: the trait `std::ops::Try` is not implemented for `impl std::future::Future`\n    = note: required by `std::ops::Try::into_result`\n \n-error: aborting due to 24 previous errors\n+error: aborting due to 26 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "c06165b24468fb97f6b655d597336d699380c0e6", "filename": "src/test/ui/issues/issue-51719.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fissues%2Fissue-51719.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fissues%2Fissue-51719.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51719.stderr?ref=c61660500555c81d6049b7e7b5b502d1bd9df80f", "patch": "@@ -1,11 +1,10 @@\n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/issue-51719.rs:10:19\n    |\n-LL | async fn foo() {}\n-   | -------------- this function is not `async`\n-...\n LL |     let _gen = || foo.await;\n-   |                   ^^^^^^^^^ only allowed inside `async` functions and blocks\n+   |                -- ^^^^^^^^^ only allowed inside `async` functions and blocks\n+   |                |\n+   |                this is not `async`\n \n error: aborting due to previous error\n "}, {"sha": "97b63d1590ec62bdd63511078c9a6f772860a76f", "filename": "src/test/ui/issues/issue-51751.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fissues%2Fissue-51751.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c61660500555c81d6049b7e7b5b502d1bd9df80f/src%2Ftest%2Fui%2Fissues%2Fissue-51751.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51751.stderr?ref=c61660500555c81d6049b7e7b5b502d1bd9df80f", "patch": "@@ -1,9 +1,9 @@\n error[E0728]: `await` is only allowed inside `async` functions and blocks\n   --> $DIR/issue-51751.rs:11:20\n    |\n-LL | async fn inc(limit: i64) -> i64 {\n-   | ------------------------------- this function is not `async`\n-...\n+LL | fn main() {\n+   |    ---- this is not `async`\n+LL |     let result = inc(10000);\n LL |     let finished = result.await;\n    |                    ^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n "}]}