{"sha": "85f786cc9c85473166fee1daec2dfc550f46bed8", "node_id": "C_kwDOAAsO6NoAKDg1Zjc4NmNjOWM4NTQ3MzE2NmZlZTFkYWVjMmRmYzU1MGY0NmJlZDg", "commit": {"author": {"name": "Ibraheem Ahmed", "email": "ibrah1440@gmail.com", "date": "2021-12-15T01:00:59Z"}, "committer": {"name": "Ibraheem Ahmed", "email": "ibrah1440@gmail.com", "date": "2021-12-15T01:00:59Z"}, "message": "add `io::Error::other` constructor", "tree": {"sha": "93ce4f5e7f850d1f45c312f6aabcec675c0c6c1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93ce4f5e7f850d1f45c312f6aabcec675c0c6c1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85f786cc9c85473166fee1daec2dfc550f46bed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85f786cc9c85473166fee1daec2dfc550f46bed8", "html_url": "https://github.com/rust-lang/rust/commit/85f786cc9c85473166fee1daec2dfc550f46bed8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85f786cc9c85473166fee1daec2dfc550f46bed8/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "477fd7038c235689913abf9208dfa9371cbacd88", "url": "https://api.github.com/repos/rust-lang/rust/commits/477fd7038c235689913abf9208dfa9371cbacd88", "html_url": "https://github.com/rust-lang/rust/commit/477fd7038c235689913abf9208dfa9371cbacd88"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "210a9ec718315b3c0e1336ec9d48d5689b01b840", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/85f786cc9c85473166fee1daec2dfc550f46bed8/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f786cc9c85473166fee1daec2dfc550f46bed8/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=85f786cc9c85473166fee1daec2dfc550f46bed8", "patch": "@@ -417,6 +417,33 @@ impl Error {\n         Self::_new(kind, error.into())\n     }\n \n+    /// Creates a new I/O error from an arbitrary error payload.\n+    ///\n+    /// This function is used to generically create I/O errors which do not\n+    /// originate from the OS itself. It is a shortcut for [`Error::new`]\n+    /// with [`ErrorKind::Other`].\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(io_error_other)]\n+    ///\n+    /// use std::io::Error;\n+    ///\n+    /// // errors can be created from strings\n+    /// let custom_error = Error::other(\"oh no!\");\n+    ///\n+    /// // errors can also be created from other errors\n+    /// let custom_error2 = Error::other(custom_error);\n+    /// ```\n+    #[unstable(feature = \"io_error_other\", issue = \"91946\")]\n+    pub fn other<E>(error: E) -> Error\n+    where\n+        E: Into<Box<dyn error::Error + Send + Sync>>,\n+    {\n+        Self::_new(ErrorKind::Other, error.into())\n+    }\n+\n     fn _new(kind: ErrorKind, error: Box<dyn error::Error + Send + Sync>) -> Error {\n         Error { repr: Repr::Custom(Box::new(Custom { kind, error })) }\n     }"}]}