{"sha": "c22c0395780c548d7b7fb557b1879e998921b01d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMmMwMzk1NzgwYzU0OGQ3YjdmYjU1N2IxODc5ZTk5ODkyMWIwMWQ=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-10-17T14:08:25Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-10-20T13:57:50Z"}, "message": "Assist: replace string with char\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "c0dc9fa0a4ce3879f7fa34daab264e01b20da349", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0dc9fa0a4ce3879f7fa34daab264e01b20da349"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22c0395780c548d7b7fb557b1879e998921b01d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22c0395780c548d7b7fb557b1879e998921b01d", "html_url": "https://github.com/rust-lang/rust/commit/c22c0395780c548d7b7fb557b1879e998921b01d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22c0395780c548d7b7fb557b1879e998921b01d/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62192cede3567df632c819656cc28ec3b2d2f5d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/62192cede3567df632c819656cc28ec3b2d2f5d6", "html_url": "https://github.com/rust-lang/rust/commit/62192cede3567df632c819656cc28ec3b2d2f5d6"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "8408e446321e654ba5da1ac537f01e52256a421c", "filename": "crates/assists/src/handlers/replace_string_with_char.rs", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c22c0395780c548d7b7fb557b1879e998921b01d/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22c0395780c548d7b7fb557b1879e998921b01d/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs?ref=c22c0395780c548d7b7fb557b1879e998921b01d", "patch": "@@ -1,18 +1,14 @@\n-use std::borrow::Cow;\n-\n use syntax::{\n-    ast::{self, HasQuotes, HasStringValue},\n+    ast::{self, HasStringValue},\n     AstToken,\n-    SyntaxKind::{RAW_STRING, STRING},\n-    TextRange, TextSize,\n+    SyntaxKind::STRING,\n };\n-use test_utils::mark;\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n \n // Assist: replace_string_with_char\n //\n-// Replace string with char\n+// Replace string with char.\n //\n // ```\n // fn main() {\n@@ -29,7 +25,8 @@ pub(crate) fn replace_string_with_char(acc: &mut Assists, ctx: &AssistContext) -\n     let token = ctx.find_token_at_offset(STRING).and_then(ast::String::cast)?;\n     let value = token.value()?;\n     let target = token.syntax().text_range();\n-    if value.len() > 1 || value.is_empty() {\n+\n+    if value.is_empty() || value.chars().count() > 1 {\n         return None;\n     }\n \n@@ -79,6 +76,23 @@ mod tests {\n         )\n     }\n \n+    #[test]\n+    fn replace_string_with_char_assist_with_emoji() {\n+        check_assist(\n+            replace_string_with_char,\n+            r#\"\n+    fn f() {\n+        let s = \"<|>\ud83d\ude00\";\n+    }\n+    \"#,\n+            r##\"\n+    fn f() {\n+        let s = '\ud83d\ude00';\n+    }\n+    \"##,\n+        )\n+    }\n+\n     #[test]\n     fn replace_string_with_char_assist_not_applicable() {\n         check_assist_not_applicable("}, {"sha": "6fb2a7cac16ef029a97b8e0a8c2cc2c5dade2693", "filename": "crates/assists/src/tests/generated.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c22c0395780c548d7b7fb557b1879e998921b01d/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22c0395780c548d7b7fb557b1879e998921b01d/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs?ref=c22c0395780c548d7b7fb557b1879e998921b01d", "patch": "@@ -881,6 +881,23 @@ fn process(map: HashMap<String, String>) {}\n     )\n }\n \n+#[test]\n+fn doctest_replace_string_with_char() {\n+    check_doc_test(\n+        \"replace_string_with_char\",\n+        r#####\"\n+fn main() {\n+    find(\"{<|>\");\n+}\n+\"#####,\n+        r#####\"\n+fn main() {\n+    find('{');\n+}\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_replace_unwrap_with_match() {\n     check_doc_test("}]}