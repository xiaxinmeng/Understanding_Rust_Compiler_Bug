{"sha": "93eb4333a085008a55e98259e454c5c592a03d45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZWI0MzMzYTA4NTAwOGE1NWU5ODI1OWU0NTRjNWM1OTJhMDNkNDU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-26T11:11:29Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-04T15:04:52Z"}, "message": "Move typeck into its own crate.", "tree": {"sha": "ad79b50f0e5674d1e6a4f64ab0c7b8f576c9f205", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad79b50f0e5674d1e6a4f64ab0c7b8f576c9f205"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93eb4333a085008a55e98259e454c5c592a03d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93eb4333a085008a55e98259e454c5c592a03d45", "html_url": "https://github.com/rust-lang/rust/commit/93eb4333a085008a55e98259e454c5c592a03d45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93eb4333a085008a55e98259e454c5c592a03d45/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e135fa5b49b215e03802ea6fc99405fab8cbe8e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e135fa5b49b215e03802ea6fc99405fab8cbe8e9", "html_url": "https://github.com/rust-lang/rust/commit/e135fa5b49b215e03802ea6fc99405fab8cbe8e9"}], "stats": {"total": 168, "additions": 100, "deletions": 68}, "files": [{"sha": "839631f02ab634547a53a7184b9470cca4252f8c", "filename": "mk/crates.mk", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -53,7 +53,7 @@ TARGET_CRATES := libc std flate arena term \\\n                  serialize getopts collections test time rand \\\n                  log regex graphviz core rbml alloc rustrt \\\n                  unicode\n-HOST_CRATES := syntax rustc rustc_trans rustdoc regex_macros fmt_macros \\\n+HOST_CRATES := syntax rustc rustc_typeck rustc_trans rustdoc regex_macros fmt_macros \\\n \t       rustc_llvm rustc_back\n CRATES := $(TARGET_CRATES) $(HOST_CRATES)\n TOOLS := compiletest rustdoc rustc\n@@ -67,7 +67,9 @@ DEPS_std := core libc rand alloc collections rustrt unicode \\\n \tnative:rust_builtin native:backtrace\n DEPS_graphviz := std\n DEPS_syntax := std term serialize log fmt_macros arena libc\n-DEPS_rustc_trans := rustc rustc_back rustc_llvm libc\n+DEPS_rustc_trans := arena flate getopts graphviz libc rustc rustc_back \\\n+                    rustc_typeck log syntax serialize rustc_llvm\n+DEPS_rustc_typeck := rustc syntax\n DEPS_rustc := syntax flate arena serialize getopts rbml \\\n               time log graphviz rustc_llvm rustc_back\n DEPS_rustc_llvm := native:rustllvm libc std\n@@ -110,8 +112,11 @@ ONLY_RLIB_unicode := 1\n # You should not need to edit below this line\n ################################################################################\n \n-DOC_CRATES := $(filter-out rustc, $(filter-out rustc_trans, $(filter-out syntax, $(CRATES))))\n-COMPILER_DOC_CRATES := rustc rustc_trans syntax\n+DOC_CRATES := $(filter-out rustc, \\\n+              $(filter-out rustc_trans, \\\n+              $(filter-out rustc_typeck, \\\n+              $(filter-out syntax, $(CRATES)))))\n+COMPILER_DOC_CRATES := rustc rustc_trans rustc_typeck syntax\n \n # This macro creates some simple definitions for each crate being built, just\n # some munging of all of the parameters above."}, {"sha": "a964609e4e63404b928e95528f853c1ace0f3c23", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -98,9 +98,6 @@ pub mod middle {\n     pub mod weak_lang_items;\n }\n \n-#[path=\"middle/typeck/mod.rs\"]\n-pub mod typeck;\n-\n pub mod metadata;\n \n pub mod session;"}, {"sha": "f7cdc7de56088bdc3ab86b0d976950327d5d74ee", "filename": "src/librustc_trans/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_trans%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_trans%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdriver%2Fdriver.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -20,7 +20,7 @@ use middle;\n use plugin::load::Plugins;\n use plugin::registry::Registry;\n use plugin;\n-use rustc::typeck;\n+use rustc_typeck as typeck;\n use trans;\n \n use util::common::time;"}, {"sha": "8070b319f1850c4ec08da23b45f112340a67e2cf", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -32,6 +32,7 @@ extern crate getopts;\n extern crate graphviz;\n extern crate libc;\n extern crate rustc;\n+extern crate rustc_typeck;\n extern crate rustc_back;\n #[phase(plugin, link)] extern crate log;\n #[phase(plugin, link)] extern crate syntax;"}, {"sha": "d95ad9a11c87f1eff809aa7ca44fe778d0ecba50", "filename": "src/librustc_typeck/astconv.rs", "status": "renamed", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -54,10 +54,9 @@ use middle::resolve_lifetime as rl;\n use middle::subst::{FnSpace, TypeSpace, AssocSpace, SelfSpace, Subst, Substs};\n use middle::subst::{VecPerParamSpace};\n use middle::ty::{mod, Ty};\n-use typeck::lookup_def_tcx;\n-use typeck::rscope::{mod, UnelidableRscope, RegionScope, SpecificRscope,\n-                     ShiftedRscope, BindingRscope};\n-use typeck::TypeAndSubsts;\n+use rscope::{mod, UnelidableRscope, RegionScope, SpecificRscope,\n+             ShiftedRscope, BindingRscope};\n+use TypeAndSubsts;\n use util::common::ErrorReported;\n use util::nodemap::DefIdMap;\n use util::ppaux::{mod, Repr, UserString};\n@@ -429,9 +428,9 @@ pub fn instantiate_trait_ref<'tcx,AC,RS>(this: &AC,\n                                          where AC: AstConv<'tcx>,\n                                                RS: RegionScope\n {\n-    match lookup_def_tcx(this.tcx(),\n-                         ast_trait_ref.path.span,\n-                         ast_trait_ref.ref_id) {\n+    match ::lookup_def_tcx(this.tcx(),\n+                           ast_trait_ref.path.span,\n+                           ast_trait_ref.ref_id) {\n         def::DefTrait(trait_def_id) => {\n             let trait_ref = Rc::new(ast_path_to_trait_ref(this, rscope, trait_def_id,\n                                                           self_ty, &ast_trait_ref.path));\n@@ -1477,7 +1476,7 @@ pub fn partition_bounds<'a>(tcx: &ty::ctxt,\n     for &ast_bound in ast_bounds.iter() {\n         match *ast_bound {\n             ast::TraitTyParamBound(ref b) => {\n-                match lookup_def_tcx(tcx, b.trait_ref.path.span, b.trait_ref.ref_id) {\n+                match ::lookup_def_tcx(tcx, b.trait_ref.path.span, b.trait_ref.ref_id) {\n                     def::DefTrait(trait_did) => {\n                         match trait_def_ids.get(&trait_did) {\n                             // Already seen this trait. We forbid", "previous_filename": "src/librustc/middle/typeck/astconv.rs"}, {"sha": "7dcf0aa3e21898ae1080368df3176250db880c16", "filename": "src/librustc_typeck/check/_match.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -9,13 +9,13 @@\n // except according to those terms.\n \n use middle::def;\n+use middle::infer::{mod, resolve};\n use middle::pat_util::{PatIdMap, pat_id_map, pat_is_binding, pat_is_const};\n use middle::subst::{Subst, Substs};\n use middle::ty::{mod, Ty};\n-use typeck::check::{check_expr, check_expr_has_type, demand, FnCtxt};\n-use typeck::check::{instantiate_path, structurally_resolved_type, valid_range_bounds};\n-use middle::infer::{mod, resolve};\n-use typeck::require_same_types;\n+use check::{check_expr, check_expr_has_type, demand, FnCtxt};\n+use check::{instantiate_path, structurally_resolved_type, valid_range_bounds};\n+use require_same_types;\n use util::nodemap::FnvHashMap;\n \n use std::cmp;", "previous_filename": "src/librustc/middle/typeck/check/_match.rs"}, {"sha": "34030ae4493a2cbbe57ef80b8af9c6e058c29c1e", "filename": "src/librustc_typeck/check/closure.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -14,11 +14,11 @@ use super::check_fn;\n use super::{Expectation, ExpectCastableToType, ExpectHasType, NoExpectation};\n use super::FnCtxt;\n \n+use astconv;\n use middle::infer;\n use middle::subst;\n use middle::ty::{mod, Ty};\n-use typeck::astconv;\n-use typeck::rscope::RegionScope;\n+use rscope::RegionScope;\n use syntax::abi;\n use syntax::ast;\n use syntax::ast_util;", "previous_filename": "src/librustc/middle/typeck/check/closure.rs"}, {"sha": "2b8a52f050d6f81d070e91dfb2440abb636fddcb", "filename": "src/librustc_typeck/check/demand.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n \n+use check::FnCtxt;\n use middle::ty::{mod, Ty};\n-use typeck::check::FnCtxt;\n use middle::infer;\n use middle::infer::resolve_type;\n use middle::infer::resolve::try_resolve_tvar_shallow;", "previous_filename": "src/librustc/middle/typeck/check/demand.rs"}, {"sha": "1fe73f0478d566a111a8f93f9ef4200e55954423", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -10,12 +10,12 @@\n \n use super::probe;\n \n+use check::{mod, FnCtxt, NoPreference, PreferMutLvalue};\n use middle::subst::{mod, Subst};\n use middle::traits;\n use middle::ty::{mod, Ty};\n use middle::ty::{MethodCall, MethodCallee, MethodObject, MethodOrigin,\n                  MethodParam, MethodStatic, MethodTraitObject, MethodTypeParam};\n-use typeck::check::{mod, FnCtxt, NoPreference, PreferMutLvalue};\n use middle::infer;\n use middle::infer::InferCtxt;\n use middle::ty_fold::HigherRankedFoldable;", "previous_filename": "src/librustc/middle/typeck/check/method/confirm.rs"}, {"sha": "6129e38e39c12f9e6e0810dfd0101fcd98605996", "filename": "src/librustc_typeck/check/method/doc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fdoc.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "previous_filename": "src/librustc/middle/typeck/check/method/doc.rs"}, {"sha": "f87a4c9294bab60369b6c4522556083039cacff2", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -10,16 +10,16 @@\n \n //! Method lookup: the secret sauce of Rust. See `doc.rs`.\n \n+use astconv::AstConv;\n+use check::{FnCtxt};\n+use check::{impl_self_ty};\n+use check::vtable;\n+use check::vtable::select_new_fcx_obligations;\n use middle::subst;\n use middle::subst::{Subst};\n use middle::traits;\n use middle::ty::*;\n use middle::ty;\n-use typeck::astconv::AstConv;\n-use typeck::check::{FnCtxt};\n-use typeck::check::{impl_self_ty};\n-use typeck::check::vtable;\n-use typeck::check::vtable::select_new_fcx_obligations;\n use middle::infer;\n use util::ppaux::{Repr, UserString};\n ", "previous_filename": "src/librustc/middle/typeck/check/method/mod.rs"}, {"sha": "6ff276edbce7ebf79a28d014fdb92a7beef441c0", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -12,15 +12,15 @@ use super::{MethodError,Ambiguity,NoMatch};\n use super::MethodIndex;\n use super::{CandidateSource,ImplSource,TraitSource};\n \n+use check;\n+use check::{FnCtxt, NoPreference};\n use middle::fast_reject;\n use middle::subst;\n use middle::subst::Subst;\n use middle::traits;\n use middle::ty::{mod, Ty};\n use middle::ty::{MethodObject};\n use middle::ty_fold::HigherRankedFoldable;\n-use typeck::check;\n-use typeck::check::{FnCtxt, NoPreference};\n use middle::infer;\n use middle::infer::InferCtxt;\n use syntax::ast;", "previous_filename": "src/librustc/middle/typeck/check/method/probe.rs"}, {"sha": "a0f3f2734d97640805224293112872d3e17c8a24", "filename": "src/librustc_typeck/check/mod.rs", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -31,7 +31,7 @@ can be broken down into several distinct phases:\n \n   In the process of checking, various constraints will be placed on\n   these type variables through the subtyping relationships requested\n-  through the `demand` module.  The `typeck::infer` module is in charge\n+  through the `demand` module.  The `infer` module is in charge\n   of resolving those constraints.\n \n - regionck: after main is complete, the regionck pass goes over all\n@@ -82,7 +82,8 @@ pub use self::Expectation::*;\n use self::IsBinopAssignment::*;\n use self::TupleArgumentsFlag::*;\n \n-use session::Session;\n+use astconv::{mod, ast_region_to_region, ast_ty_to_ty, AstConv};\n+use check::_match::pat_ctxt;\n use middle::{const_eval, def, traits};\n use middle::infer;\n use middle::lang_items::IteratorItem;\n@@ -96,11 +97,10 @@ use middle::ty::{mod, Ty};\n use middle::ty::liberate_late_bound_regions;\n use middle::ty::{MethodCall, MethodCallee, MethodMap, ObjectCastMap};\n use middle::ty_fold::TypeFolder;\n-use typeck::astconv::{mod, ast_region_to_region, ast_ty_to_ty, AstConv};\n-use typeck::check::_match::pat_ctxt;\n-use typeck::rscope::RegionScope;\n-use typeck::{CrateCtxt, lookup_def_ccx, no_params, require_same_types};\n-use typeck::TypeAndSubsts;\n+use rscope::RegionScope;\n+use session::Session;\n+use {CrateCtxt, lookup_def_ccx, no_params, require_same_types};\n+use TypeAndSubsts;\n use middle::lang_items::TypeIdLangItem;\n use lint;\n use util::common::{block_query, indenter, loop_query};", "previous_filename": "src/librustc/middle/typeck/check/mod.rs"}, {"sha": "2aec4393de9426e1361240a25aaf21c12618d642", "filename": "src/librustc_typeck/check/regionck.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -114,16 +114,16 @@\n //! then mean that all later passes would have to check for these figments\n //! and report an error, and it just seems like more mess in the end.)\n \n+use astconv::AstConv;\n+use check::FnCtxt;\n+use check::regionmanip;\n+use check::vtable;\n use middle::def;\n use middle::mem_categorization as mc;\n use middle::region::CodeExtent;\n use middle::traits;\n use middle::ty::{ReScope};\n use middle::ty::{mod, Ty, MethodCall};\n-use typeck::astconv::AstConv;\n-use typeck::check::FnCtxt;\n-use typeck::check::regionmanip;\n-use typeck::check::vtable;\n use middle::infer::resolve_and_force_all_but_regions;\n use middle::infer::resolve_type;\n use middle::infer;", "previous_filename": "src/librustc/middle/typeck/check/regionck.rs"}, {"sha": "92dfd8b5f56d272842fa9cb6ce563f82ada53fd2", "filename": "src/librustc_typeck/check/regionmanip.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "previous_filename": "src/librustc/middle/typeck/check/regionmanip.rs"}, {"sha": "c2b263885bd73bcd69f6c118dcb7e774bbb2ae60", "filename": "src/librustc_typeck/check/vtable.rs", "status": "renamed", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -8,15 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use check::{FnCtxt, structurally_resolved_type};\n use middle::subst::{SelfSpace, FnSpace};\n use middle::traits;\n use middle::traits::{SelectionError, OutputTypeParameterMismatch, Overflow, Unimplemented};\n use middle::traits::{Obligation, obligation_for_builtin_bound};\n use middle::traits::{FulfillmentError, CodeSelectionError, CodeAmbiguity};\n use middle::traits::{ObligationCause};\n use middle::ty::{mod, Ty};\n-use typeck::check::{FnCtxt,\n-                            structurally_resolved_type};\n use middle::infer;\n use std::rc::Rc;\n use syntax::ast;", "previous_filename": "src/librustc/middle/typeck/check/vtable.rs"}, {"sha": "1769c588ec1de51244bafa77bf7b32fe8ee31b00", "filename": "src/librustc_typeck/check/wf.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -8,16 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use astconv::AstConv;\n+use check::{FnCtxt, Inherited, blank_fn_ctxt, vtable, regionck};\n+use CrateCtxt;\n use middle::region;\n use middle::subst;\n use middle::subst::{Subst};\n use middle::traits;\n use middle::ty::{mod, Ty};\n use middle::ty::liberate_late_bound_regions;\n use middle::ty_fold::{TypeFolder, TypeFoldable};\n-use typeck::astconv::AstConv;\n-use typeck::check::{FnCtxt, Inherited, blank_fn_ctxt, vtable, regionck};\n-use typeck::CrateCtxt;\n use util::ppaux::Repr;\n \n use std::collections::HashSet;", "previous_filename": "src/librustc/middle/typeck/check/wf.rs"}, {"sha": "777f354bec126520b4724a095005a6dcc09eeb02", "filename": "src/librustc_typeck/check/writeback.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -13,17 +13,17 @@\n // substitutions.\n use self::ResolveReason::*;\n \n+use astconv::AstConv;\n+use check::FnCtxt;\n use middle::def;\n use middle::pat_util;\n use middle::ty::{mod, Ty, MethodCall, MethodCallee};\n use middle::ty_fold::{TypeFolder,TypeFoldable};\n-use typeck::astconv::AstConv;\n-use typeck::check::FnCtxt;\n use middle::infer::{force_all, resolve_all, resolve_region};\n use middle::infer::resolve_type;\n use middle::infer;\n-use typeck::write_substs_to_tcx;\n-use typeck::write_ty_to_tcx;\n+use write_substs_to_tcx;\n+use write_ty_to_tcx;\n use util::ppaux::Repr;\n \n use std::cell::Cell;", "previous_filename": "src/librustc/middle/typeck/check/writeback.rs"}, {"sha": "b8642ddde4082448f69471b6cfc39b1fc46a2da6", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -30,7 +30,7 @@ use middle::ty::{ty_closure};\n use middle::ty::type_is_ty_var;\n use middle::subst::Subst;\n use middle::ty;\n-use typeck::CrateCtxt;\n+use CrateCtxt;\n use middle::infer::combine::Combine;\n use middle::infer::InferCtxt;\n use middle::infer::{new_infer_ctxt, resolve_ivar, resolve_type};", "previous_filename": "src/librustc/middle/typeck/coherence/mod.rs"}, {"sha": "dc3afaae35f615800056ddbfef49787cadf128c6", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "previous_filename": "src/librustc/middle/typeck/coherence/orphan.rs"}, {"sha": "0e74d4578d95be7817f531777980c4bb512cd19d", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "previous_filename": "src/librustc/middle/typeck/coherence/overlap.rs"}, {"sha": "717e886029a3d1bf7eb5a1e828c2f27a151243c6", "filename": "src/librustc_typeck/collect.rs", "status": "renamed", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -32,6 +32,9 @@ as `ty_param()` instances.\n use self::ConvertMethodContext::*;\n use self::CreateTypeParametersForAssociatedTypesFlag::*;\n \n+use astconv::{AstConv, ty_of_arg};\n+use astconv::{ast_ty_to_ty, ast_region_to_region};\n+use astconv;\n use metadata::csearch;\n use middle::def;\n use middle::lang_items::SizedTraitLangItem;\n@@ -43,13 +46,9 @@ use middle::ty::{ImplContainer, ImplOrTraitItemContainer, TraitContainer};\n use middle::ty::{Polytype};\n use middle::ty::{mod, Ty};\n use middle::ty_fold::TypeFolder;\n-use typeck::astconv::{AstConv, ty_of_arg};\n-use typeck::astconv::{ast_ty_to_ty, ast_region_to_region};\n-use typeck::astconv;\n use middle::infer;\n-use typeck::rscope::*;\n-use typeck::{CrateCtxt, lookup_def_tcx, no_params, write_ty_to_tcx};\n-use typeck;\n+use rscope::*;\n+use {CrateCtxt, lookup_def_tcx, no_params, write_ty_to_tcx};\n use util::nodemap::{FnvHashMap, FnvHashSet};\n use util::ppaux;\n use util::ppaux::{Repr,UserString};\n@@ -2159,13 +2158,13 @@ fn check_method_self_type<'a, 'tcx, RS:RegionScope>(\n                base_type.repr(crate_context.tcx),\n                base_type_free.repr(crate_context.tcx));\n         let infcx = infer::new_infer_ctxt(crate_context.tcx);\n-        drop(typeck::require_same_types(crate_context.tcx,\n-                                        Some(&infcx),\n-                                        false,\n-                                        explicit_self.span,\n-                                        base_type_free,\n-                                        required_type_free,\n-                                        || {\n+        drop(::require_same_types(crate_context.tcx,\n+                                  Some(&infcx),\n+                                  false,\n+                                  explicit_self.span,\n+                                  base_type_free,\n+                                  required_type_free,\n+                                  || {\n                 format!(\"mismatched self type: expected `{}`\",\n                         ppaux::ty_to_string(crate_context.tcx, required_type))\n         }));", "previous_filename": "src/librustc/middle/typeck/collect.rs"}, {"sha": "36e81f18103b873dfd1f1ae61d25cd725b96de18", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -145,5 +145,7 @@ register_diagnostics!(\n     E0166,\n     E0167,\n     E0168,\n-    E0169\n+    E0169,\n+    E0171,\n+    E0172\n )"}, {"sha": "2f5b473567faa62f69e1f1b45df72fd7f9752760", "filename": "src/librustc_typeck/lib.rs", "status": "renamed", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-/*\n+/*!\n \n typeck.rs, an introduction\n \n@@ -57,10 +57,37 @@ independently:\n   all subtyping and assignment constraints are met.  In essence, the check\n   module specifies the constraints, and the infer module solves them.\n \n+# Note\n+\n+This API is completely unstable and subject to change.\n+\n */\n \n+#![crate_name = \"rustc_typeck\"]\n+#![experimental]\n+#![crate_type = \"dylib\"]\n+#![crate_type = \"rlib\"]\n+#![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n+      html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n+      html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n+\n+#![feature(default_type_params, globs, if_let, import_shadowing, macro_rules, phase, quote)]\n+#![feature(slicing_syntax, tuple_indexing, unsafe_destructor)]\n+#![feature(rustc_diagnostic_macros)]\n #![allow(non_camel_case_types)]\n \n+#[phase(plugin, link)] extern crate log;\n+#[phase(plugin, link)] extern crate syntax;\n+\n+extern crate arena;\n+extern crate rustc;\n+\n+pub use rustc::lint;\n+pub use rustc::metadata;\n+pub use rustc::middle;\n+pub use rustc::session;\n+pub use rustc::util;\n+\n use middle::def;\n use middle::resolve;\n use middle::infer;\n@@ -76,6 +103,9 @@ use syntax::codemap::Span;\n use syntax::print::pprust::*;\n use syntax::{ast, ast_map, abi};\n \n+#[cfg(stage0)]\n+mod diagnostics;\n+\n mod check;\n mod rscope;\n mod astconv;", "previous_filename": "src/librustc/middle/typeck/mod.rs"}, {"sha": "3bca24f479f704d487eae5cab9944d8dd2bd609e", "filename": "src/librustc_typeck/rscope.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Frscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Frscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Frscope.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "previous_filename": "src/librustc/middle/typeck/rscope.rs"}, {"sha": "ade3144ce414e8485f44a84d42179d2094aa280e", "filename": "src/librustc_typeck/variance.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fvariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93eb4333a085008a55e98259e454c5c592a03d45/src%2Flibrustc_typeck%2Fvariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance.rs?ref=93eb4333a085008a55e98259e454c5c592a03d45", "previous_filename": "src/librustc/middle/typeck/variance.rs"}]}