{"sha": "ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZDcwOTRmMWQwZjBhNjE5YjZkNDBkN2Y0NzA1Y2JiMDQwMDVlMjA=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-24T21:16:49Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-06T22:41:17Z"}, "message": "Fix handling of `--output-format json` flag\n\n- Don't treat it as deprecated on stable and beta channels. Before, it\n  would give confusing and incorrect output:\n\n  ```\n  warning: the 'output-format' flag is considered deprecated\n    |\n    = warning: see issue #44136 <https://github.com/rust-lang/rust/issues/44136> for more information\n\n  error: json output format isn't supported for doc generation\n  ```\n  Both of those are wrong: output-format isn't deprecated, and json\n  output is supported.\n\n- Require -Z unstable-options for `--output-format json`\n\n  Previously, it was allowed by default on nightly, which made it hard\n  to realize the flag wouldn't be accepted on beta or stable.\n  Note that this still allows `--output-format html`, which has been\n  stable since 1.0.\n\n- Remove unnecessary double-checking of the feature gate when parsing\n  the output format\n- Add custom run-make test since compiletest passes -Zunstable-options\n    by default", "tree": {"sha": "e86054db1490582ffe5cad1c01d4729be6d5658b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e86054db1490582ffe5cad1c01d4729be6d5658b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "html_url": "https://github.com/rust-lang/rust/commit/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16143d10679537d3fde4247e15334e78ad9d55b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/16143d10679537d3fde4247e15334e78ad9d55b9", "html_url": "https://github.com/rust-lang/rust/commit/16143d10679537d3fde4247e15334e78ad9d55b9"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "2433f75c189620bb33d92b14aab82ab4790eace2", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "patch": "@@ -379,6 +379,17 @@ impl Options {\n             }\n         }\n \n+        // check for `--output-format=json`\n+        if !matches!(matches.opt_str(\"output-format\").as_deref(), None | Some(\"html\"))\n+            && !matches.opt_present(\"show-coverage\")\n+            && !nightly_options::is_unstable_enabled(matches)\n+        {\n+            rustc_session::early_error(\n+                error_format,\n+                \"the -Z unstable-options flag must be passed to enable --output-format for documentation generation (see https://github.com/rust-lang/rust/issues/76578)\",\n+            );\n+        }\n+\n         let to_check = matches.opt_strs(\"check-theme\");\n         if !to_check.is_empty() {\n             let paths = theme::load_css_paths(static_files::themes::LIGHT.as_bytes());\n@@ -575,13 +586,7 @@ impl Options {\n         let output_format = match matches.opt_str(\"output-format\") {\n             Some(s) => match OutputFormat::try_from(s.as_str()) {\n                 Ok(out_fmt) => {\n-                    if out_fmt.is_json()\n-                        && !(show_coverage || nightly_options::match_is_nightly_build(matches))\n-                    {\n-                        diag.struct_err(\"json output format isn't supported for doc generation\")\n-                            .emit();\n-                        return Err(1);\n-                    } else if !out_fmt.is_json() && show_coverage {\n+                    if !out_fmt.is_json() && show_coverage {\n                         diag.struct_err(\n                             \"html output format isn't supported for the --show-coverage option\",\n                         )\n@@ -703,16 +708,10 @@ impl Options {\n \n /// Prints deprecation warnings for deprecated options\n fn check_deprecated_options(matches: &getopts::Matches, diag: &rustc_errors::Handler) {\n-    let deprecated_flags = [\"input-format\", \"output-format\", \"no-defaults\", \"passes\"];\n+    let deprecated_flags = [\"input-format\", \"no-defaults\", \"passes\"];\n \n     for flag in deprecated_flags.iter() {\n         if matches.opt_present(flag) {\n-            if *flag == \"output-format\"\n-                && (matches.opt_present(\"show-coverage\")\n-                    || nightly_options::match_is_nightly_build(matches))\n-            {\n-                continue;\n-            }\n             let mut err = diag.struct_warn(&format!(\"the `{}` flag is deprecated\", flag));\n             err.note(\n                 \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\"}, {"sha": "b8769d5f6905178c2aab86e27a20ef053a158ee2", "filename": "src/test/run-make/unstable-flag-required/Makefile", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funstable-flag-required%2FMakefile?ref=ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "patch": "@@ -0,0 +1,4 @@\n+-include ../../run-make-fulldeps/tools.mk\n+\n+all:\n+\t$(RUSTDOC) --output-format=json x.html 2>&1 | diff - output-format-json.stderr"}, {"sha": "e5251fdf9b5d95351e3f76ed0af56d3996c9a964", "filename": "src/test/run-make/unstable-flag-required/README.md", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funstable-flag-required%2FREADME.md?ref=ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "patch": "@@ -0,0 +1,3 @@\n+This is a collection of tests that verify `--unstable-options` is required.\n+It should eventually be removed in favor of UI tests once compiletest stops\n+passing --unstable-options by default (#82639)."}, {"sha": "fb4079beb2799f8aae1f1d74022751cbd5abb889", "filename": "src/test/run-make/unstable-flag-required/output-format-json.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2Foutput-format-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2Foutput-format-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funstable-flag-required%2Foutput-format-json.stderr?ref=ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "patch": "@@ -0,0 +1,2 @@\n+error: the -Z unstable-options flag must be passed to enable --output-format for documentation generation (see https://github.com/rust-lang/rust/issues/76578)\n+"}, {"sha": "5df7576133a684ab8f887f442084e99062eb4886", "filename": "src/test/run-make/unstable-flag-required/x.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2Fx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frun-make%2Funstable-flag-required%2Fx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funstable-flag-required%2Fx.rs?ref=ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "patch": "@@ -0,0 +1 @@\n+// nothing to see here"}, {"sha": "fa0362640bb8f26b51093d5819bed027efb619ca", "filename": "src/test/rustdoc-ui/output-format-html-stable.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frustdoc-ui%2Foutput-format-html-stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftest%2Frustdoc-ui%2Foutput-format-html-stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Foutput-format-html-stable.rs?ref=ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: --output-format html\n+// check-pass\n+// This tests that `--output-format html` is accepted without `-Z unstable-options`,\n+// since it has been stable since 1.0."}, {"sha": "7c8cd699fe0e7168ac5e3809f4586f335c860a12", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd7094f1d0f0a619b6d40d7f4705cbb04005e20/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=ffd7094f1d0f0a619b6d40d7f4705cbb04005e20", "patch": "@@ -1600,7 +1600,7 @@ impl<'test> TestCx<'test> {\n             .args(&self.props.compile_flags);\n \n         if self.config.mode == RustdocJson {\n-            rustdoc.arg(\"--output-format\").arg(\"json\");\n+            rustdoc.arg(\"--output-format\").arg(\"json\").arg(\"-Zunstable-options\");\n         }\n \n         if let Some(ref linker) = self.config.linker {"}]}