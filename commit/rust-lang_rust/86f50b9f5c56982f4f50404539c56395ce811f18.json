{"sha": "86f50b9f5c56982f4f50404539c56395ce811f18", "node_id": "C_kwDOAAsO6NoAKDg2ZjUwYjlmNWM1Njk4MmY0ZjUwNDA0NTM5YzU2Mzk1Y2U4MTFmMTg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-25T05:47:05Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-02T22:36:24Z"}, "message": "Disallow associated type constraints on negative bounds", "tree": {"sha": "964c7bd0d78466f05d8b6955182a50b39d8dab34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/964c7bd0d78466f05d8b6955182a50b39d8dab34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86f50b9f5c56982f4f50404539c56395ce811f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86f50b9f5c56982f4f50404539c56395ce811f18", "html_url": "https://github.com/rust-lang/rust/commit/86f50b9f5c56982f4f50404539c56395ce811f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86f50b9f5c56982f4f50404539c56395ce811f18/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e01e910cb8ab0109235be7cc7ab7ef465724255", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e01e910cb8ab0109235be7cc7ab7ef465724255", "html_url": "https://github.com/rust-lang/rust/commit/6e01e910cb8ab0109235be7cc7ab7ef465724255"}], "stats": {"total": 78, "additions": 76, "deletions": 2}, "files": [{"sha": "2f413789e7704630e13c4ad316d104a3554d3d9c", "filename": "compiler/rustc_ast_passes/messages.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_ast_passes%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_ast_passes%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fmessages.ftl?ref=86f50b9f5c56982f4f50404539c56395ce811f18", "patch": "@@ -238,3 +238,6 @@ ast_passes_show_span = {$msg}\n \n ast_passes_negative_bound_not_supported =\n     negative bounds are not supported\n+\n+ast_passes_constraint_on_negative_bound =\n+    associated type constraints not allowed on negative bounds"}, {"sha": "bf43bbdbbeebae89abbf4c687b25c046f17767f3", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=86f50b9f5c56982f4f50404539c56395ce811f18", "patch": "@@ -1177,6 +1177,18 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n             }\n         }\n \n+        // Negative trait bounds are not allowed to have associated constraints\n+        if let GenericBound::Trait(trait_ref, TraitBoundModifier::Negative) = bound\n+            && let Some(segment) = trait_ref.trait_ref.path.segments.last()\n+            && let Some(ast::GenericArgs::AngleBracketed(args)) = segment.args.as_deref()\n+        {\n+            for arg in &args.args {\n+                if let ast::AngleBracketedArg::Constraint(constraint) = arg {\n+                    self.err_handler().emit_err(errors::ConstraintOnNegativeBound { span: constraint.span });\n+                }\n+            }\n+        }\n+\n         visit::walk_param_bound(self, bound)\n     }\n "}, {"sha": "82fe2a21d0876910bcb72fc82e951cb8715a5bfd", "filename": "compiler/rustc_ast_passes/src/errors.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ferrors.rs?ref=86f50b9f5c56982f4f50404539c56395ce811f18", "patch": "@@ -701,3 +701,10 @@ pub struct NegativeBoundUnsupported {\n     #[primary_span]\n     pub span: Span,\n }\n+\n+#[derive(Diagnostic)]\n+#[diag(ast_passes_constraint_on_negative_bound)]\n+pub struct ConstraintOnNegativeBound {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "fda59d000eaa2c61e7abaf497beec65ecbcd9c38", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f50b9f5c56982f4f50404539c56395ce811f18/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=86f50b9f5c56982f4f50404539c56395ce811f18", "patch": "@@ -701,8 +701,6 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n         let mut dup_bindings = FxHashMap::default();\n         for binding in &assoc_bindings {\n-            // TODO: negative polarity can't have associated type bindings!\n-\n             // Specify type to assert that error was already reported in `Err` case.\n             let _: Result<_, ErrorGuaranteed> = self.add_predicates_for_ast_type_binding(\n                 hir_id,"}, {"sha": "bc1a0ef1708378e75ae27d86e997b149c47076c8", "filename": "tests/ui/traits/negative-bounds/associated-constraints.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/86f50b9f5c56982f4f50404539c56395ce811f18/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fassociated-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f50b9f5c56982f4f50404539c56395ce811f18/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fassociated-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fassociated-constraints.rs?ref=86f50b9f5c56982f4f50404539c56395ce811f18", "patch": "@@ -0,0 +1,20 @@\n+#![feature(negative_bounds, associated_type_bounds)]\n+//~^ WARN the feature `negative_bounds` is incomplete and may not be safe to use and/or cause compiler crashes\n+\n+trait Trait {\n+    type Assoc;\n+}\n+\n+fn test<T: !Trait<Assoc = i32>>() {}\n+//~^ ERROR associated type constraints not allowed on negative bounds\n+\n+fn test2<T>() where T: !Trait<Assoc = i32> {}\n+//~^ ERROR associated type constraints not allowed on negative bounds\n+\n+fn test3<T: !Trait<Assoc: Send>>() {}\n+//~^ ERROR associated type constraints not allowed on negative bounds\n+\n+fn test4<T>() where T: !Trait<Assoc: Send> {}\n+//~^ ERROR associated type constraints not allowed on negative bounds\n+\n+fn main() {}"}, {"sha": "335ac7e5ad903f6c702eb3cc2a41e1e4f18459b4", "filename": "tests/ui/traits/negative-bounds/associated-constraints.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/86f50b9f5c56982f4f50404539c56395ce811f18/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fassociated-constraints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86f50b9f5c56982f4f50404539c56395ce811f18/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fassociated-constraints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnegative-bounds%2Fassociated-constraints.stderr?ref=86f50b9f5c56982f4f50404539c56395ce811f18", "patch": "@@ -0,0 +1,34 @@\n+error: associated type constraints not allowed on negative bounds\n+  --> $DIR/associated-constraints.rs:8:19\n+   |\n+LL | fn test<T: !Trait<Assoc = i32>>() {}\n+   |                   ^^^^^^^^^^^\n+\n+error: associated type constraints not allowed on negative bounds\n+  --> $DIR/associated-constraints.rs:11:31\n+   |\n+LL | fn test2<T>() where T: !Trait<Assoc = i32> {}\n+   |                               ^^^^^^^^^^^\n+\n+error: associated type constraints not allowed on negative bounds\n+  --> $DIR/associated-constraints.rs:14:20\n+   |\n+LL | fn test3<T: !Trait<Assoc: Send>>() {}\n+   |                    ^^^^^^^^^^^\n+\n+error: associated type constraints not allowed on negative bounds\n+  --> $DIR/associated-constraints.rs:17:31\n+   |\n+LL | fn test4<T>() where T: !Trait<Assoc: Send> {}\n+   |                               ^^^^^^^^^^^\n+\n+warning: the feature `negative_bounds` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/associated-constraints.rs:1:12\n+   |\n+LL | #![feature(negative_bounds, associated_type_bounds)]\n+   |            ^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error: aborting due to 4 previous errors; 1 warning emitted\n+"}]}