{"sha": "88f78bdb9b64e0ba4ca5924599e42a524f5c3b64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4Zjc4YmRiOWI2NGUwYmE0Y2E1OTI0NTk5ZTQyYTUyNGY1YzNiNjQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-13T01:25:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-13T01:25:33Z"}, "message": "Merge #7991\n\n7991: Simplify hir_def TestDB r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "daf2ca59132dfbaf2b3e1d24e0390ff100d8c0d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daf2ca59132dfbaf2b3e1d24e0390ff100d8c0d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88f78bdb9b64e0ba4ca5924599e42a524f5c3b64", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgTBSNCRBK7hj4Ov3rIwAAdHIIAAA7Wzlfu2EjWyEDHweU3e0E\nkw9C9Em5MROHlk2ndxuF9kVqt9nIKeGRciXLv9HpIrRveFSJVANBjuEr7vDXcLQI\nQ3mEiBiXfwC12pfKvMvGOru87iJg+DVc/LdzR9sNb+enF6VNElJ9GLJac4Oqvm70\niHl3d8AdrmS87+iwW1z6mdoY/jy98BK4bU62ajS+tnwD9hOFV2mvwS5HNBGitvbo\nbnb8kQ77z/W55nr0+iHek/qHgTNVXxGh6AYTar33h1Ru8iN/wTIH3Lg42m06Tw0E\nOCnn6Akf7rTnwOK3QnXy3mVi27KwB9zpRXTIlicTvUNN2QWKEBrHffofMpL/6u8=\n=Jizr\n-----END PGP SIGNATURE-----\n", "payload": "tree daf2ca59132dfbaf2b3e1d24e0390ff100d8c0d8\nparent 5368e2c103dc313d65216f5c42e9895b5f3a11b1\nparent 2b5ea5c730b36cab9396cffd87384d7fd3b8a39b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615598733 +0000\ncommitter GitHub <noreply@github.com> 1615598733 +0000\n\nMerge #7991\n\n7991: Simplify hir_def TestDB r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88f78bdb9b64e0ba4ca5924599e42a524f5c3b64", "html_url": "https://github.com/rust-lang/rust/commit/88f78bdb9b64e0ba4ca5924599e42a524f5c3b64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88f78bdb9b64e0ba4ca5924599e42a524f5c3b64/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5368e2c103dc313d65216f5c42e9895b5f3a11b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5368e2c103dc313d65216f5c42e9895b5f3a11b1", "html_url": "https://github.com/rust-lang/rust/commit/5368e2c103dc313d65216f5c42e9895b5f3a11b1"}, {"sha": "2b5ea5c730b36cab9396cffd87384d7fd3b8a39b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b5ea5c730b36cab9396cffd87384d7fd3b8a39b", "html_url": "https://github.com/rust-lang/rust/commit/2b5ea5c730b36cab9396cffd87384d7fd3b8a39b"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "10977761c93cfae3880c094e99d6a35dbe8b9f10", "filename": "crates/hir_def/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/88f78bdb9b64e0ba4ca5924599e42a524f5c3b64/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88f78bdb9b64e0ba4ca5924599e42a524f5c3b64/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftest_db.rs?ref=88f78bdb9b64e0ba4ca5924599e42a524f5c3b64", "patch": "@@ -15,7 +15,7 @@ use rustc_hash::FxHashSet;\n use syntax::{algo, ast, AstNode, TextRange, TextSize};\n use test_utils::extract_annotations;\n \n-use crate::{db::DefDatabase, nameres::DefMap, Lookup, ModuleDefId, ModuleId};\n+use crate::{db::DefDatabase, nameres::DefMap, src::HasSource, Lookup, ModuleDefId, ModuleId};\n \n #[salsa::database(\n     base_db::SourceDatabaseExtStorage,\n@@ -115,14 +115,9 @@ impl TestDB {\n             if file_id != position.file_id.into() {\n                 continue;\n             }\n-            let root = self.parse_or_expand(file_id).unwrap();\n-            let ast_map = self.ast_id_map(file_id);\n-            let item_tree = self.item_tree(file_id);\n             for decl in module.scope.declarations() {\n                 if let ModuleDefId::FunctionId(it) = decl {\n-                    let ast =\n-                        ast_map.get(item_tree[it.lookup(self).id.value].ast_id).to_node(&root);\n-                    let range = ast.syntax().text_range();\n+                    let range = it.lookup(self).source(self).value.syntax().text_range();\n \n                     if !range.contains(position.offset) {\n                         continue;"}]}