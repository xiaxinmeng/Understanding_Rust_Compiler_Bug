{"sha": "ee05e4d5ab76a94f46705e9afb01357d138fd519", "node_id": "C_kwDOAAsO6NoAKGVlMDVlNGQ1YWI3NmE5NGY0NjcwNWU5YWZiMDEzNTdkMTM4ZmQ1MTk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-16T15:41:52Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-16T15:41:52Z"}, "message": "Don't ICE on unimplemented call convs", "tree": {"sha": "12e41ccc69dd5f658a1a83980cf3ddace7152335", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12e41ccc69dd5f658a1a83980cf3ddace7152335"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee05e4d5ab76a94f46705e9afb01357d138fd519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee05e4d5ab76a94f46705e9afb01357d138fd519", "html_url": "https://github.com/rust-lang/rust/commit/ee05e4d5ab76a94f46705e9afb01357d138fd519", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee05e4d5ab76a94f46705e9afb01357d138fd519/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dffa6acf731c6019a39d0175e242b821a3423915", "url": "https://api.github.com/repos/rust-lang/rust/commits/dffa6acf731c6019a39d0175e242b821a3423915", "html_url": "https://github.com/rust-lang/rust/commit/dffa6acf731c6019a39d0175e242b821a3423915"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "90ec8ec3685e3328fdcb6ad2320cb408f08e0e8f", "filename": "src/abi/mod.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ee05e4d5ab76a94f46705e9afb01357d138fd519/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee05e4d5ab76a94f46705e9afb01357d138fd519/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=ee05e4d5ab76a94f46705e9afb01357d138fd519", "patch": "@@ -7,6 +7,7 @@ mod returning;\n use cranelift_module::ModuleError;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::ty::layout::FnAbiOf;\n+use rustc_session::Session;\n use rustc_target::abi::call::{Conv, FnAbi};\n use rustc_target::spec::abi::Abi;\n \n@@ -22,7 +23,7 @@ fn clif_sig_from_fn_abi<'tcx>(\n     default_call_conv: CallConv,\n     fn_abi: &FnAbi<'tcx, Ty<'tcx>>,\n ) -> Signature {\n-    let call_conv = conv_to_call_conv(fn_abi.conv, default_call_conv);\n+    let call_conv = conv_to_call_conv(tcx.sess, fn_abi.conv, default_call_conv);\n \n     let inputs = fn_abi.args.iter().map(|arg_abi| arg_abi.get_abi_param(tcx).into_iter()).flatten();\n \n@@ -33,24 +34,30 @@ fn clif_sig_from_fn_abi<'tcx>(\n     Signature { params, returns, call_conv }\n }\n \n-pub(crate) fn conv_to_call_conv(c: Conv, default_call_conv: CallConv) -> CallConv {\n+pub(crate) fn conv_to_call_conv(sess: &Session, c: Conv, default_call_conv: CallConv) -> CallConv {\n     match c {\n         Conv::Rust | Conv::C => default_call_conv,\n         Conv::RustCold => CallConv::Cold,\n         Conv::X86_64SysV => CallConv::SystemV,\n         Conv::X86_64Win64 => CallConv::WindowsFastcall,\n-        Conv::ArmAapcs\n-        | Conv::CCmseNonSecureCall\n+\n+        // Should already get a back compat warning\n+        Conv::X86Fastcall | Conv::X86Stdcall | Conv::X86ThisCall | Conv::X86VectorCall => {\n+            default_call_conv\n+        }\n+\n+        Conv::X86Intr => sess.fatal(\"x86-interrupt call conv not yet implemented\"),\n+\n+        Conv::ArmAapcs => sess.fatal(\"aapcs call conv not yet implemented\"),\n+\n+        Conv::CCmseNonSecureCall\n         | Conv::Msp430Intr\n         | Conv::PtxKernel\n-        | Conv::X86Fastcall\n-        | Conv::X86Intr\n-        | Conv::X86Stdcall\n-        | Conv::X86ThisCall\n-        | Conv::X86VectorCall\n         | Conv::AmdGpuKernel\n         | Conv::AvrInterrupt\n-        | Conv::AvrNonBlockingInterrupt => todo!(\"{:?}\", c),\n+        | Conv::AvrNonBlockingInterrupt => {\n+            unreachable!(\"tried to use {c:?} call conv which only exists on an unsupported target\");\n+        }\n     }\n }\n "}, {"sha": "fd45362548c0dcc1f5d88ddda1a83c7555e71d70", "filename": "src/main_shim.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee05e4d5ab76a94f46705e9afb01357d138fd519/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee05e4d5ab76a94f46705e9afb01357d138fd519/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=ee05e4d5ab76a94f46705e9afb01357d138fd519", "patch": "@@ -64,6 +64,7 @@ pub(crate) fn maybe_create_entry_wrapper(\n             ],\n             returns: vec![AbiParam::new(m.target_config().pointer_type() /*isize*/)],\n             call_conv: crate::conv_to_call_conv(\n+                tcx.sess,\n                 tcx.sess.target.options.entry_abi,\n                 m.target_config().default_call_conv,\n             ),"}]}