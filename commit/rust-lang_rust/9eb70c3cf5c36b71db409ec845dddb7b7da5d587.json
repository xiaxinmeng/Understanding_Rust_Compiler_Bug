{"sha": "9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYjcwYzNjZjVjMzZiNzFkYjQwOWVjODQ1ZGRkYjdiN2RhNWQ1ODc=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-06-02T20:23:26Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-06-02T20:58:49Z"}, "message": "use type name in E0599 enum variant suggestion\n\nAlso, rename the variable from \"type_str\" to \"item_kind\" to avoid\nthe ambiguity that caused this bug.", "tree": {"sha": "36eec05548d5746feaf46c7eeb41cf70cf5c9cfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36eec05548d5746feaf46c7eeb41cf70cf5c9cfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlsTBR0WHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdIYdB/0f7jx1fO2Ey0BNoFlQ+Q1spEjQ\n+yDJw8/LLEaFE7StKDty1oF5F5e4WZkPMq71sn0QTtrqTgLfx6HQDj3qfGKZ0vvN\n5gC5dhT0xVc+cUai87iViaBYJe7upRvzDjf3f79KwUSL/ih1U/ychI0sGGnvkEnS\nLtU7GJrCiznXa0Cn1gQ00/tRUyDpPHBIn7/G58EbESrujTYs52IRsCWuDwvFVx7X\noLP2GRWNkCPzZwm7PC3tQXn6WO1ksPPo885Y8D4lEusghDfWv0IwEiANlhSsLf2+\nBHufzDU4dJc4BNSDYgrhfrnyX4HdTjOVXYFQZGRtkKTnefBIIslgG05Aiw0N\n=tLYV\n-----END PGP SIGNATURE-----", "payload": "tree 36eec05548d5746feaf46c7eeb41cf70cf5c9cfc\nparent 4ecf12bf0eb8386626ccdb5f721a7183ccc4eba6\nauthor Andy Russell <arussell123@gmail.com> 1527971006 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1527973129 -0400\n\nuse type name in E0599 enum variant suggestion\n\nAlso, rename the variable from \"type_str\" to \"item_kind\" to avoid\nthe ambiguity that caused this bug.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "html_url": "https://github.com/rust-lang/rust/commit/9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eb70c3cf5c36b71db409ec845dddb7b7da5d587/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ecf12bf0eb8386626ccdb5f721a7183ccc4eba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ecf12bf0eb8386626ccdb5f721a7183ccc4eba6", "html_url": "https://github.com/rust-lang/rust/commit/4ecf12bf0eb8386626ccdb5f721a7183ccc4eba6"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "86cd8d0fb2c5207c0cdd5846ad235bb29e4583a7", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9eb70c3cf5c36b71db409ec845dddb7b7da5d587/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eb70c3cf5c36b71db409ec845dddb7b7da5d587/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "patch": "@@ -195,7 +195,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 let ty_string = self.ty_to_string(actual);\n                 let is_method = mode == Mode::MethodCall;\n                 let mut suggestion = None;\n-                let type_str = if is_method {\n+                let item_kind = if is_method {\n                     \"method\"\n                 } else if actual.is_enum() {\n                     if let TyAdt(ref adt_def, _) = actual.sty {\n@@ -235,7 +235,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             span,\n                             E0689,\n                             \"can't call {} `{}` on ambiguous numeric type `{}`\",\n-                            type_str,\n+                            item_kind,\n                             item_name,\n                             ty_string\n                         );\n@@ -284,12 +284,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             span,\n                             E0599,\n                             \"no {} named `{}` found for type `{}` in the current scope\",\n-                            type_str,\n+                            item_kind,\n                             item_name,\n                             ty_string\n                         );\n                         if let Some(suggestion) = suggestion {\n-                            err.note(&format!(\"did you mean `{}::{}`?\", type_str, suggestion));\n+                            err.note(&format!(\"did you mean `{}::{}`?\", ty_string, suggestion));\n                         }\n                         err\n                     }\n@@ -301,7 +301,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     if let Some(full_sp) = tcx.hir.span_if_local(def.did) {\n                         let def_sp = tcx.sess.codemap().def_span(full_sp);\n                         err.span_label(def_sp, format!(\"{} `{}` not found {}\",\n-                                                       type_str,\n+                                                       item_kind,\n                                                        item_name,\n                                                        if def.is_enum() && !is_method {\n                                                            \"here\"\n@@ -355,7 +355,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         }\n                     }\n                 } else {\n-                    err.span_label(span, format!(\"{} not found in `{}`\", type_str, ty_string));\n+                    err.span_label(span, format!(\"{} not found in `{}`\", item_kind, ty_string));\n                 }\n \n                 if self.is_fn_ty(&rcvr_ty, span) {"}, {"sha": "d87f239bca6906e865613569637a5ece0d89c80c", "filename": "src/test/ui/issue-23217.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9eb70c3cf5c36b71db409ec845dddb7b7da5d587/src%2Ftest%2Fui%2Fissue-23217.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9eb70c3cf5c36b71db409ec845dddb7b7da5d587/src%2Ftest%2Fui%2Fissue-23217.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-23217.stderr?ref=9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "patch": "@@ -6,7 +6,7 @@ LL | pub enum SomeEnum {\n LL |     B = SomeEnum::A,\n    |         ^^^^^^^^^^^ variant not found in `SomeEnum`\n    |\n-   = note: did you mean `variant::B`?\n+   = note: did you mean `SomeEnum::B`?\n \n error: aborting due to previous error\n "}, {"sha": "c04e21f7c58572d7e6e63bd10dfc3ed01317e62b", "filename": "src/test/ui/issue-28971.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9eb70c3cf5c36b71db409ec845dddb7b7da5d587/src%2Ftest%2Fui%2Fissue-28971.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9eb70c3cf5c36b71db409ec845dddb7b7da5d587/src%2Ftest%2Fui%2Fissue-28971.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-28971.stderr?ref=9eb70c3cf5c36b71db409ec845dddb7b7da5d587", "patch": "@@ -7,7 +7,7 @@ LL | enum Foo {\n LL |             Foo::Baz(..) => (),\n    |             ^^^^^^^^^^^^ variant not found in `Foo`\n    |\n-   = note: did you mean `variant::Bar`?\n+   = note: did you mean `Foo::Bar`?\n \n error: aborting due to previous error\n "}]}