{"sha": "88c058b6147b9db15b03035baaab62c8e4d28ee4", "node_id": "C_kwDOAAsO6NoAKDg4YzA1OGI2MTQ3YjlkYjE1YjAzMDM1YmFhYWI2MmM4ZTRkMjhlZTQ", "commit": {"author": {"name": "David Morrison", "email": "drmorr@evokewonder.com", "date": "2021-11-11T04:14:23Z"}, "committer": {"name": "David Morrison", "email": "drmorr@evokewonder.com", "date": "2022-04-03T00:21:08Z"}, "message": "make memcmp return a value of c_int_width instead of i32", "tree": {"sha": "2fcf04902a4a53f4a1f9eafb154b168cce23a053", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fcf04902a4a53f4a1f9eafb154b168cce23a053"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88c058b6147b9db15b03035baaab62c8e4d28ee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88c058b6147b9db15b03035baaab62c8e4d28ee4", "html_url": "https://github.com/rust-lang/rust/commit/88c058b6147b9db15b03035baaab62c8e4d28ee4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88c058b6147b9db15b03035baaab62c8e4d28ee4/comments", "author": {"login": "drmorr0", "id": 3268445, "node_id": "MDQ6VXNlcjMyNjg0NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3268445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmorr0", "html_url": "https://github.com/drmorr0", "followers_url": "https://api.github.com/users/drmorr0/followers", "following_url": "https://api.github.com/users/drmorr0/following{/other_user}", "gists_url": "https://api.github.com/users/drmorr0/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmorr0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmorr0/subscriptions", "organizations_url": "https://api.github.com/users/drmorr0/orgs", "repos_url": "https://api.github.com/users/drmorr0/repos", "events_url": "https://api.github.com/users/drmorr0/events{/privacy}", "received_events_url": "https://api.github.com/users/drmorr0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "drmorr0", "id": 3268445, "node_id": "MDQ6VXNlcjMyNjg0NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3268445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmorr0", "html_url": "https://github.com/drmorr0", "followers_url": "https://api.github.com/users/drmorr0/followers", "following_url": "https://api.github.com/users/drmorr0/following{/other_user}", "gists_url": "https://api.github.com/users/drmorr0/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmorr0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmorr0/subscriptions", "organizations_url": "https://api.github.com/users/drmorr0/orgs", "repos_url": "https://api.github.com/users/drmorr0/repos", "events_url": "https://api.github.com/users/drmorr0/events{/privacy}", "received_events_url": "https://api.github.com/users/drmorr0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81083b906f1160da1131be5d63487646370d107e", "url": "https://api.github.com/repos/rust-lang/rust/commits/81083b906f1160da1131be5d63487646370d107e", "html_url": "https://github.com/rust-lang/rust/commit/81083b906f1160da1131be5d63487646370d107e"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "19127c7612d8f5ad36d2600bd9daf91b48f393c9", "filename": "src/common.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88c058b6147b9db15b03035baaab62c8e4d28ee4/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88c058b6147b9db15b03035baaab62c8e4d28ee4/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=88c058b6147b9db15b03035baaab62c8e4d28ee4", "patch": "@@ -91,6 +91,10 @@ impl<'gcc, 'tcx> ConstMethods<'tcx> for CodegenCx<'gcc, 'tcx> {\n         self.const_uint(self.type_i1(), val as u64)\n     }\n \n+    fn const_i16(&self, i: i16) -> RValue<'gcc> {\n+        self.const_int(self.type_i16(), i as i64)\n+    }\n+\n     fn const_i32(&self, i: i32) -> RValue<'gcc> {\n         self.const_int(self.type_i32(), i as i64)\n     }"}]}