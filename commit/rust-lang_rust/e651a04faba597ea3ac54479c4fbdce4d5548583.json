{"sha": "e651a04faba597ea3ac54479c4fbdce4d5548583", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NTFhMDRmYWJhNTk3ZWEzYWM1NDQ3OWM0ZmJkY2U0ZDU1NDg1ODM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-08T22:50:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-08T22:50:29Z"}, "message": "Auto merge of #6133 - JPTIZ:no-box-for-c-ffi, r=ebroto\n\nclippy_lints: Do not warn against Box parameter in C FFI\n\nchangelog: [`boxed_local`]: don't lint in `extern fn` arguments\n\nFixes #5542.\n\nWhen using C FFI, to handle pointers in parameters it is needed to\ndeclare them as `Box` in its Rust-side signature. However, the current\nlinter warns against the usage of Box stating that \"local variable\ndoesn't need to be boxed here\".\n\nThis commit fixes it by ignoring functions whose Abi is C.", "tree": {"sha": "cd807fd9a4fcac43ee7f85cd433ef2568a424ae2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd807fd9a4fcac43ee7f85cd433ef2568a424ae2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e651a04faba597ea3ac54479c4fbdce4d5548583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e651a04faba597ea3ac54479c4fbdce4d5548583", "html_url": "https://github.com/rust-lang/rust/commit/e651a04faba597ea3ac54479c4fbdce4d5548583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e651a04faba597ea3ac54479c4fbdce4d5548583/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "265e4841b7d8ee26ed0d642075f3c90496ba610a", "url": "https://api.github.com/repos/rust-lang/rust/commits/265e4841b7d8ee26ed0d642075f3c90496ba610a", "html_url": "https://github.com/rust-lang/rust/commit/265e4841b7d8ee26ed0d642075f3c90496ba610a"}, {"sha": "b709b873632dc001b381704c1deb6be702111706", "url": "https://api.github.com/repos/rust-lang/rust/commits/b709b873632dc001b381704c1deb6be702111706", "html_url": "https://github.com/rust-lang/rust/commit/b709b873632dc001b381704c1deb6be702111706"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "8b0229125738a80f16c6cef615a80d18b16c114e", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e651a04faba597ea3ac54479c4fbdce4d5548583/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e651a04faba597ea3ac54479c4fbdce4d5548583/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=e651a04faba597ea3ac54479c4fbdce4d5548583", "patch": "@@ -6,6 +6,7 @@ use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_target::abi::LayoutOf;\n+use rustc_target::spec::abi::Abi;\n use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n use crate::utils::span_lint;\n@@ -60,12 +61,18 @@ impl<'tcx> LateLintPass<'tcx> for BoxedLocal {\n     fn check_fn(\n         &mut self,\n         cx: &LateContext<'tcx>,\n-        _: intravisit::FnKind<'tcx>,\n+        fn_kind: intravisit::FnKind<'tcx>,\n         _: &'tcx FnDecl<'_>,\n         body: &'tcx Body<'_>,\n         _: Span,\n         hir_id: HirId,\n     ) {\n+        if let Some(header) = fn_kind.header() {\n+            if header.abi != Abi::Rust {\n+                return;\n+            }\n+        }\n+\n         // If the method is an impl for a trait, don't warn.\n         let parent_id = cx.tcx.hir().get_parent_item(hir_id);\n         let parent_node = cx.tcx.hir().find(parent_id);"}, {"sha": "07004489610d0a438fece6465493d77d90fe40d3", "filename": "tests/ui/escape_analysis.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e651a04faba597ea3ac54479c4fbdce4d5548583/tests%2Fui%2Fescape_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e651a04faba597ea3ac54479c4fbdce4d5548583/tests%2Fui%2Fescape_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.rs?ref=e651a04faba597ea3ac54479c4fbdce4d5548583", "patch": "@@ -174,3 +174,11 @@ mod issue_3739 {\n         };\n     }\n }\n+\n+/// Issue #5542\n+///\n+/// This shouldn't warn for `boxed_local` as it is intended to called from non-Rust code.\n+pub extern \"C\" fn do_not_warn_me(_c_pointer: Box<String>) -> () {}\n+\n+#[rustfmt::skip] // Forces rustfmt to not add ABI\n+pub extern fn do_not_warn_me_no_abi(_c_pointer: Box<String>) -> () {}"}]}