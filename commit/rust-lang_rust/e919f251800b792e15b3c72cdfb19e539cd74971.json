{"sha": "e919f251800b792e15b3c72cdfb19e539cd74971", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MTlmMjUxODAwYjc5MmUxNWIzYzcyY2RmYjE5ZTUzOWNkNzQ5NzE=", "commit": {"author": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2016-05-10T13:34:52Z"}, "committer": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2016-05-10T17:36:08Z"}, "message": "Delay wrapping Definitions into a RefCell around LocalCrateReader.", "tree": {"sha": "35ef70e2e53b44b6a3daa8dfcd0285111d3df678", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35ef70e2e53b44b6a3daa8dfcd0285111d3df678"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e919f251800b792e15b3c72cdfb19e539cd74971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e919f251800b792e15b3c72cdfb19e539cd74971", "html_url": "https://github.com/rust-lang/rust/commit/e919f251800b792e15b3c72cdfb19e539cd74971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e919f251800b792e15b3c72cdfb19e539cd74971/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d3531d3db513bd71ad1ac041ad9a2172ec34012", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3531d3db513bd71ad1ac041ad9a2172ec34012", "html_url": "https://github.com/rust-lang/rust/commit/8d3531d3db513bd71ad1ac041ad9a2172ec34012"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "3f9fa0a23c2d8b727f53be622859d4ddac6ded59", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=e919f251800b792e15b3c72cdfb19e539cd74971", "patch": "@@ -142,29 +142,30 @@ pub fn compile_input(sess: &Session,\n         let dep_graph = DepGraph::new(sess.opts.build_dep_graph());\n \n         // Collect defintions for def ids.\n-        let defs = &RefCell::new(time(sess.time_passes(),\n-                                 \"collecting defs\",\n-                                 || hir_map::collect_definitions(&expanded_crate)));\n+        let mut defs = time(sess.time_passes(),\n+                            \"collecting defs\",\n+                            || hir_map::collect_definitions(&expanded_crate));\n \n         time(sess.time_passes(),\n              \"external crate/lib resolution\",\n-             || LocalCrateReader::new(sess, &cstore, &defs.borrow(), &expanded_crate, &id)\n+             || LocalCrateReader::new(sess, &cstore, &defs, &expanded_crate, &id)\n                     .read_crates(&dep_graph));\n \n         time(sess.time_passes(),\n              \"early lint checks\",\n              || lint::check_ast_crate(sess, &expanded_crate));\n \n         let (analysis, resolutions, mut hir_forest) = {\n-            let defs = &mut *defs.borrow_mut();\n-            lower_and_resolve(sess, &id, defs, &expanded_crate, dep_graph, control.make_glob_map)\n+            lower_and_resolve(sess, &id, &mut defs, &expanded_crate, dep_graph,\n+                              control.make_glob_map)\n         };\n \n         // Discard MTWT tables that aren't required past lowering to HIR.\n         if !keep_mtwt_tables(sess) {\n             syntax::ext::mtwt::clear_tables();\n         }\n \n+        let defs = &RefCell::new(defs);\n         let arenas = ty::CtxtArenas::new();\n \n         // Construct the HIR map"}, {"sha": "59713c66afcb6fb1f1bad5589d58273a40e926d5", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=e919f251800b792e15b3c72cdfb19e539cd74971", "patch": "@@ -120,15 +120,16 @@ fn test_env<F>(source_string: &str,\n \n     let dep_graph = DepGraph::new(false);\n     let krate = driver::assign_node_ids(&sess, krate);\n-    let defs = &RefCell::new(hir_map::collect_definitions(&krate));\n-    LocalCrateReader::new(&sess, &cstore, &defs.borrow(), &krate, \"test_crate\").read_crates(&dep_graph);\n+    let mut defs = hir_map::collect_definitions(&krate);\n+    LocalCrateReader::new(&sess, &cstore, &defs, &krate, \"test_crate\").read_crates(&dep_graph);\n     let _ignore = dep_graph.in_ignore();\n \n     let (_, resolutions, mut hir_forest) = {\n-        let (defs, dep_graph) = (&mut *defs.borrow_mut(), dep_graph.clone());\n-        driver::lower_and_resolve(&sess, \"test-crate\", defs, &krate, dep_graph, MakeGlobMap::No)\n+        driver::lower_and_resolve(&sess, \"test-crate\", &mut defs, &krate, dep_graph.clone(),\n+                                  MakeGlobMap::No)\n     };\n \n+    let defs = &RefCell::new(defs);\n     let arenas = ty::CtxtArenas::new();\n     let ast_map = hir_map::map_crate(&mut hir_forest, defs);\n "}, {"sha": "857a1176f496a928af08c30dcf928b175e25c9a5", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=e919f251800b792e15b3c72cdfb19e539cd74971", "patch": "@@ -153,15 +153,16 @@ pub fn run_core(search_paths: SearchPaths,\n     let krate = driver::assign_node_ids(&sess, krate);\n     let dep_graph = DepGraph::new(false);\n \n-    let defs = &RefCell::new(hir_map::collect_definitions(&krate));\n-    LocalCrateReader::new(&sess, &cstore, &defs.borrow(), &krate, &name).read_crates(&dep_graph);\n+    let mut defs = hir_map::collect_definitions(&krate);\n+    LocalCrateReader::new(&sess, &cstore, &defs, &krate, &name).read_crates(&dep_graph);\n \n     // Lower ast -> hir and resolve.\n     let (analysis, resolutions, mut hir_forest) = {\n-        let defs = &mut *defs.borrow_mut();\n-        driver::lower_and_resolve(&sess, &name, defs, &krate, dep_graph, resolve::MakeGlobMap::No)\n+        driver::lower_and_resolve(&sess, &name, &mut defs, &krate, dep_graph,\n+                                  resolve::MakeGlobMap::No)\n     };\n \n+    let defs = &RefCell::new(defs);\n     let arenas = ty::CtxtArenas::new();\n     let hir_map = hir_map::map_crate(&mut hir_forest, defs);\n "}, {"sha": "0d10f31556644109b0d781a8e8302692e06715bf", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e919f251800b792e15b3c72cdfb19e539cd74971/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=e919f251800b792e15b3c72cdfb19e539cd74971", "patch": "@@ -240,14 +240,15 @@ fn compile_program(input: &str, sysroot: PathBuf)\n \n         let dep_graph = DepGraph::new(sess.opts.build_dep_graph());\n         let krate = driver::assign_node_ids(&sess, krate);\n-        let defs = RefCell::new(ast_map::collect_definitions(&krate));\n-        LocalCrateReader::new(&sess, &cstore, &defs.borrow(), &krate, &id).read_crates(&dep_graph);\n+        let mut defs = ast_map::collect_definitions(&krate);\n+        LocalCrateReader::new(&sess, &cstore, &defs, &krate, &id).read_crates(&dep_graph);\n         let (analysis, resolutions, mut hir_forest) = {\n-            let defs = &mut *defs.borrow_mut();\n-            driver::lower_and_resolve(&sess, &id, defs, &krate, dep_graph, MakeGlobMap::No)\n+            driver::lower_and_resolve(&sess, &id, &mut defs, &krate, dep_graph, MakeGlobMap::No)\n         };\n+\n+        let defs = &RefCell::new(defs);\n         let arenas = ty::CtxtArenas::new();\n-        let ast_map = ast_map::map_crate(&mut hir_forest, &defs);\n+        let ast_map = ast_map::map_crate(&mut hir_forest, defs);\n \n         abort_on_err(driver::phase_3_run_analysis_passes(\n             &sess, ast_map, analysis, resolutions, &arenas, &id,"}]}