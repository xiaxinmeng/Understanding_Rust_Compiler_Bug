{"sha": "805e270910f892780b06f36f6c4a8bfd29474876", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNWUyNzA5MTBmODkyNzgwYjA2ZjM2ZjZjNGE4YmZkMjk0NzQ4NzY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-04T18:42:50Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-11T14:45:14Z"}, "message": "[WIP]", "tree": {"sha": "985afc428976e9581e81762530e7a4f189a9388c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/985afc428976e9581e81762530e7a4f189a9388c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/805e270910f892780b06f36f6c4a8bfd29474876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/805e270910f892780b06f36f6c4a8bfd29474876", "html_url": "https://github.com/rust-lang/rust/commit/805e270910f892780b06f36f6c4a8bfd29474876", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/805e270910f892780b06f36f6c4a8bfd29474876/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bea823069d5a56e560500e25f2f2d0a0cd23ece", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bea823069d5a56e560500e25f2f2d0a0cd23ece", "html_url": "https://github.com/rust-lang/rust/commit/1bea823069d5a56e560500e25f2f2d0a0cd23ece"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "567b2f04d2a070f5ce78745202e7128aad967348", "filename": "ar_test.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/805e270910f892780b06f36f6c4a8bfd29474876/ar_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/805e270910f892780b06f36f6c4a8bfd29474876/ar_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ar_test.rs?ref=805e270910f892780b06f36f6c4a8bfd29474876", "patch": "@@ -0,0 +1,45 @@\n+//! ```cargo\n+//! [dependencies]\n+//! ar = \"0.6.2\"\n+//! ```\n+\n+use std::io::Read;\n+\n+// 64 gives Invalid file size field in entry header\n+// 32 gives unexpected EOF in the middle of archive entry header\n+const METADATA_LEN: usize = 64;\n+\n+fn main() {\n+    let mut builder = ar::Builder::new(std::fs::File::create(\"test.a\").expect(\"create\"));\n+\n+    // Remove this append and there is no problem.\n+    let header = ar::Header::new(b\"core-fc675.rcgu.o\".to_vec(), 0);\n+    // Remove any of the characters in the filename and ! from will show up in the error message.\n+    // Making it shorter than 17 chars will fix the problem though.\n+\n+    builder.append(&header, &mut (&[] as &[u8])).expect(\"add rcgu\");\n+\n+    let mut buf: Vec<u8> = vec!['!' as u8; 28];\n+    buf.extend(b\"hello worl\");\n+    buf.extend(&['*' as u8; 26] as &[u8]);\n+    assert!(buf.len() >= METADATA_LEN);\n+\n+    let header = ar::Header::new(b\"rust.metadata.bin\".to_vec(), METADATA_LEN as u64);\n+    builder.append(&header, &mut (&buf[0..METADATA_LEN])).expect(\"add meta\");\n+\n+    std::mem::drop(builder);\n+\n+    // Remove this ranlib invocation and there is no problem.\n+    /*assert!(\n+        std::process::Command::new(\"ranlib\")\n+            .arg(\"test.a\")\n+            .status()\n+            .expect(\"Couldn't run ranlib\")\n+            .success()\n+    );*/\n+\n+    let mut archive = ar::Archive::new(std::fs::File::open(\"test.a\").expect(\"open\"));\n+    while let Some(entry) = archive.next_entry() {\n+        entry.unwrap();\n+    }\n+}"}]}