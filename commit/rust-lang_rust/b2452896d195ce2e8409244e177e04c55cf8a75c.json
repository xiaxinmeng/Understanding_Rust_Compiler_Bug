{"sha": "b2452896d195ce2e8409244e177e04c55cf8a75c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNDUyODk2ZDE5NWNlMmU4NDA5MjQ0ZTE3N2UwNGM1NWNmOGE3NWM=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-16T22:53:06Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-16T23:46:20Z"}, "message": "Don't use move, because it is less safe than the unsafe move_it macro.", "tree": {"sha": "db85445c2857595c802b402e56d8c5fd940090ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db85445c2857595c802b402e56d8c5fd940090ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2452896d195ce2e8409244e177e04c55cf8a75c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2452896d195ce2e8409244e177e04c55cf8a75c", "html_url": "https://github.com/rust-lang/rust/commit/b2452896d195ce2e8409244e177e04c55cf8a75c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2452896d195ce2e8409244e177e04c55cf8a75c/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "942649a26073bb84797f8831d39d0b35018e931b", "url": "https://api.github.com/repos/rust-lang/rust/commits/942649a26073bb84797f8831d39d0b35018e931b", "html_url": "https://github.com/rust-lang/rust/commit/942649a26073bb84797f8831d39d0b35018e931b"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "62039e4c66f4c5c9d195449441fc7cc937bc6ef3", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b2452896d195ce2e8409244e177e04c55cf8a75c/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2452896d195ce2e8409244e177e04c55cf8a75c/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=b2452896d195ce2e8409244e177e04c55cf8a75c", "patch": "@@ -1043,10 +1043,14 @@ struct port_set<T: send> : recv<T> {\n         let mut ports = ~[];\n         ports <-> self.ports;\n         while result == none && ports.len() > 0 {\n-            let i = wait_many(ports.map(|p| p.header()));\n+            let i = wait_many(ports);\n             match move ports[i].try_recv() {\n-                some(copy m) => {\n-                    result = some(move m);\n+                // FIXME (#2329): use this version once move from enum works.\n+                //some(copy m) => {\n+                //  result = some(move m);\n+                //}\n+                some(m) => {\n+                  result = some(move_it!(m));\n                 }\n                 none => {\n                     // Remove this port.\n@@ -1065,7 +1069,9 @@ struct port_set<T: send> : recv<T> {\n \n     fn recv() -> T {\n         match move self.try_recv() {\n-            some(copy x) => move x,\n+            // FIXME (#2329): use this version once move from enum works.\n+            //some(copy x) => move x,\n+            some(x) => move_it!(x),\n             none => fail ~\"port_set: endpoints closed\"\n         }\n     }"}]}