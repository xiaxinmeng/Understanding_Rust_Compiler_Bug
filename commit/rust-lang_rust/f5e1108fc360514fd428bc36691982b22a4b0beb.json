{"sha": "f5e1108fc360514fd428bc36691982b22a4b0beb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZTExMDhmYzM2MDUxNGZkNDI4YmMzNjY5MTk4MmIyMmE0YjBiZWI=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-12T14:26:07Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-12T23:30:21Z"}, "message": "(core::str) comments and cleanup", "tree": {"sha": "41d3fb288200ceb9006d29049dd77e76dd10bd7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41d3fb288200ceb9006d29049dd77e76dd10bd7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5e1108fc360514fd428bc36691982b22a4b0beb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e1108fc360514fd428bc36691982b22a4b0beb", "html_url": "https://github.com/rust-lang/rust/commit/f5e1108fc360514fd428bc36691982b22a4b0beb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5e1108fc360514fd428bc36691982b22a4b0beb/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faa513b1f616fd831ca7ba2d3a8ad987f83d4a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/faa513b1f616fd831ca7ba2d3a8ad987f83d4a16", "html_url": "https://github.com/rust-lang/rust/commit/faa513b1f616fd831ca7ba2d3a8ad987f83d4a16"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "5d39fb72b7e950d625e86d9e161569ba4bf00ecf", "filename": "src/libcore/str.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f5e1108fc360514fd428bc36691982b22a4b0beb/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e1108fc360514fd428bc36691982b22a4b0beb/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=f5e1108fc360514fd428bc36691982b22a4b0beb", "patch": "@@ -889,7 +889,7 @@ Returns:\n \n The index of the first occurance of `needle`, or -1 if not found.\n \n-FIXME: UTF-8\n+FIXME: return an option<char position uint> instead\n */\n fn find(haystack: str, needle: str) -> int {\n     let haystack_len: int = len_bytes(haystack) as int;\n@@ -1003,7 +1003,6 @@ fn is_whitespace(s: str) -> bool {\n // Function: len_bytes\n //\n // Returns the string length in bytes\n-// (Synonym: byte_len)\n pure fn len_bytes(s: str) -> uint unsafe {\n     as_bytes(s) { |v|\n         let vlen = vec::len(v);\n@@ -1013,22 +1012,16 @@ pure fn len_bytes(s: str) -> uint unsafe {\n     }\n }\n \n-// FIXME: remove\n-pure fn byte_len(s: str) -> uint unsafe { len_bytes(s) }\n-\n // Function: len\n //\n // String length or size in characters.\n-// (Synonyms: len_chars, char_len)\n+// (Synonym: len_chars)\n fn len(s: str) -> uint {\n     substr_len_chars(s, 0u, len_bytes(s))\n }\n \n fn len_chars(s: str) -> uint { len(s) }\n \n-// FIXME: remove\n-fn char_len(s: str) -> uint { len(s) }\n-\n /*\n Section: Misc\n */"}]}