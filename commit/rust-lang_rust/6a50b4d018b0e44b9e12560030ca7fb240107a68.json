{"sha": "6a50b4d018b0e44b9e12560030ca7fb240107a68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNTBiNGQwMThiMGU0NGI5ZTEyNTYwMDMwY2E3ZmIyNDAxMDdhNjg=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-10-22T14:42:47Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-10-25T22:53:30Z"}, "message": "Prevent some vector reallocations", "tree": {"sha": "ab6b058b3e3c29a971d440d7266c4f6623851994", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab6b058b3e3c29a971d440d7266c4f6623851994"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a50b4d018b0e44b9e12560030ca7fb240107a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a50b4d018b0e44b9e12560030ca7fb240107a68", "html_url": "https://github.com/rust-lang/rust/commit/6a50b4d018b0e44b9e12560030ca7fb240107a68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a50b4d018b0e44b9e12560030ca7fb240107a68/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec3f0201e76b5cf689f3e8e6418435c3e6d9271c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3f0201e76b5cf689f3e8e6418435c3e6d9271c", "html_url": "https://github.com/rust-lang/rust/commit/ec3f0201e76b5cf689f3e8e6418435c3e6d9271c"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "baba38d8cbb32cca96cab40d53b772c64a3a2872", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6a50b4d018b0e44b9e12560030ca7fb240107a68/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a50b4d018b0e44b9e12560030ca7fb240107a68/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=6a50b4d018b0e44b9e12560030ca7fb240107a68", "patch": "@@ -652,11 +652,10 @@ fn mk_tt(cx: &ExtCtxt, _: Span, tt: &ast::TokenTree) -> Vec<P<ast::Stmt>> {\n             vec!(cx.stmt_expr(e_push))\n         },\n         ast::TTDelimited(sp, ref open, ref tts, ref close) => {\n-            let mut stmts = vec![];\n-            stmts.extend(mk_tt(cx, sp, &open.to_tt()).into_iter());\n-            stmts.extend(tts.iter().flat_map(|tt| mk_tt(cx, sp, tt).into_iter()));\n-            stmts.extend(mk_tt(cx, sp, &close.to_tt()).into_iter());\n-            stmts\n+            mk_tt(cx, sp, &open.to_tt()).into_iter()\n+                .chain(tts.iter().flat_map(|tt| mk_tt(cx, sp, tt).into_iter()))\n+                .chain(mk_tt(cx, sp, &close.to_tt()).into_iter())\n+                .collect()\n         },\n         ast::TTSequence(..) => fail!(\"TTSequence in quote!\"),\n         ast::TTNonterminal(sp, ident) => {"}, {"sha": "c0b66851dfe3ff5ff13e35ef5d2892dca79f76fa", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6a50b4d018b0e44b9e12560030ca7fb240107a68/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a50b4d018b0e44b9e12560030ca7fb240107a68/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=6a50b4d018b0e44b9e12560030ca7fb240107a68", "patch": "@@ -202,14 +202,14 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n             (*frame.forest)[frame.idx].clone()\n         };\n         match t {\n-            TTDelimited(_, open, delimed_tts, close) => {\n-                let mut tts = vec![];\n-                tts.push(open.to_tt());\n-                tts.extend(delimed_tts.iter().map(|x| (*x).clone()));\n-                tts.push(close.to_tt());\n+            TTDelimited(_, open, tts, close) => {\n+                let mut forest = Vec::with_capacity(1 + tts.len() + 1);\n+                forest.push(open.to_tt());\n+                forest.extend(tts.iter().map(|x| (*x).clone()));\n+                forest.push(close.to_tt());\n \n                 r.stack.push(TtFrame {\n-                    forest: Rc::new(tts),\n+                    forest: Rc::new(forest),\n                     idx: 0,\n                     dotdotdoted: false,\n                     sep: None"}]}