{"sha": "ecae5bf785f8f018f7dd5a991912f18d818d2317", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYWU1YmY3ODVmOGYwMThmN2RkNWE5OTE5MTJmMThkODE4ZDIzMTc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-25T12:13:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-25T12:13:41Z"}, "message": "Rollup merge of #40064 - arielb1:virtual-enum, r=nikomatsakis\n\ntrans: don't ICE when trying to create ADT trans-items\n\nADTs are translated in-place from rustc_trans::callee, so no trans-items\nare needed.\n\nThis fix will be superseded by the shimmir branch, but I prefer not to\nbackport that to beta.\n\nFixes #39823.\n\nBeta-nominating because regression.\n\nr? @michaelwoerister", "tree": {"sha": "3acf116bf6e533fad7768c231e376d4c4b52f285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3acf116bf6e533fad7768c231e376d4c4b52f285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecae5bf785f8f018f7dd5a991912f18d818d2317", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecae5bf785f8f018f7dd5a991912f18d818d2317", "html_url": "https://github.com/rust-lang/rust/commit/ecae5bf785f8f018f7dd5a991912f18d818d2317", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecae5bf785f8f018f7dd5a991912f18d818d2317/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6", "html_url": "https://github.com/rust-lang/rust/commit/393d80dfdd97085381ec38bf6f4bb5df65a4e4f6"}, {"sha": "4e2c993bd3d894107e5165fc54f2f63f865f0d13", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e2c993bd3d894107e5165fc54f2f63f865f0d13", "html_url": "https://github.com/rust-lang/rust/commit/4e2c993bd3d894107e5165fc54f2f63f865f0d13"}], "stats": {"total": 69, "additions": 62, "deletions": 7}, "files": [{"sha": "83a38a529d006a36772eed0a54361dc932461b8d", "filename": "src/librustc_trans/collector.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ecae5bf785f8f018f7dd5a991912f18d818d2317/src%2Flibrustc_trans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecae5bf785f8f018f7dd5a991912f18d818d2317/src%2Flibrustc_trans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcollector.rs?ref=ecae5bf785f8f018f7dd5a991912f18d818d2317", "patch": "@@ -629,19 +629,13 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                                               def_id: DefId)\n                                               -> bool {\n             match tcx.item_type(def_id).sty {\n-                ty::TyFnDef(def_id, _, f) => {\n+                ty::TyFnDef(def_id, _, _) => {\n                     // Some constructors also have type TyFnDef but they are\n                     // always instantiated inline and don't result in a\n                     // translation item. Same for FFI functions.\n                     if let Some(hir_map::NodeForeignItem(_)) = tcx.hir.get_if_local(def_id) {\n                         return false;\n                     }\n-\n-                    if let Some(adt_def) = f.sig.output().skip_binder().ty_adt_def() {\n-                        if adt_def.variants.iter().any(|v| def_id == v.did) {\n-                            return false;\n-                        }\n-                    }\n                 }\n                 ty::TyClosure(..) => {}\n                 _ => return false\n@@ -703,6 +697,16 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n fn should_trans_locally<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                   def_id: DefId)\n                                   -> bool {\n+    if let ty::TyFnDef(_, _, f) = tcx.item_type(def_id).sty {\n+        if let Some(adt_def) = f.sig.output().skip_binder().ty_adt_def() {\n+            if adt_def.variants.iter().any(|v| def_id == v.did) {\n+                // HACK: ADT constructors are translated in-place and\n+                // do not have a trans-item.\n+                return false;\n+            }\n+        }\n+    }\n+\n     if def_id.is_local() {\n         true\n     } else {"}, {"sha": "5342601ac14ff9a937b00a9732eb8b04e6f868c9", "filename": "src/test/run-pass/auxiliary/issue_39823.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ecae5bf785f8f018f7dd5a991912f18d818d2317/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_39823.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecae5bf785f8f018f7dd5a991912f18d818d2317/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_39823.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue_39823.rs?ref=ecae5bf785f8f018f7dd5a991912f18d818d2317", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"rlib\"]\n+\n+#[derive(Debug, PartialEq)]\n+pub struct RemoteC(pub u32);\n+\n+#[derive(Debug, PartialEq)]\n+pub struct RemoteG<T>(pub T);"}, {"sha": "061a55b03b21884ba097dc0ea71dcff9c4a39f03", "filename": "src/test/run-pass/issue-39823.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ecae5bf785f8f018f7dd5a991912f18d818d2317/src%2Ftest%2Frun-pass%2Fissue-39823.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecae5bf785f8f018f7dd5a991912f18d818d2317/src%2Ftest%2Frun-pass%2Fissue-39823.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-39823.rs?ref=ecae5bf785f8f018f7dd5a991912f18d818d2317", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_39823.rs\n+\n+extern crate issue_39823;\n+use issue_39823::{RemoteC, RemoteG};\n+\n+#[derive(Debug, PartialEq)]\n+struct LocalC(u32);\n+\n+#[derive(Debug, PartialEq)]\n+struct LocalG<T>(T);\n+\n+fn main() {\n+    let virtual_localc : &Fn(_) -> LocalC = &LocalC;\n+    assert_eq!(virtual_localc(1), LocalC(1));\n+\n+    let virtual_localg : &Fn(_) -> LocalG<u32> = &LocalG;\n+    assert_eq!(virtual_localg(1), LocalG(1));\n+\n+    let virtual_remotec : &Fn(_) -> RemoteC = &RemoteC;\n+    assert_eq!(virtual_remotec(1), RemoteC(1));\n+\n+    let virtual_remoteg : &Fn(_) -> RemoteG<u32> = &RemoteG;\n+    assert_eq!(virtual_remoteg(1), RemoteG(1));\n+}"}]}