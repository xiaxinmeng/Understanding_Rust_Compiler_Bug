{"sha": "8b6ea1545f7f9beeacdd915c5f647510ec9af3ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNmVhMTU0NWY3ZjliZWVhY2RkOTE1YzVmNjQ3NTEwZWM5YWYzZWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-02T11:26:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-02T11:27:11Z"}, "message": "simplify", "tree": {"sha": "2bfa76f08a84941804036663d1b30edab531dca8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bfa76f08a84941804036663d1b30edab531dca8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b6ea1545f7f9beeacdd915c5f647510ec9af3ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b6ea1545f7f9beeacdd915c5f647510ec9af3ec", "html_url": "https://github.com/rust-lang/rust/commit/8b6ea1545f7f9beeacdd915c5f647510ec9af3ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b6ea1545f7f9beeacdd915c5f647510ec9af3ec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71cd67fe4708a83632a370f85a023d5938b586a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/71cd67fe4708a83632a370f85a023d5938b586a4", "html_url": "https://github.com/rust-lang/rust/commit/71cd67fe4708a83632a370f85a023d5938b586a4"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "0af282d83dbca8ecafd9db4bc1737391bb12f083", "filename": "crates/ide_completion/src/completions/unqualified_path.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b6ea1545f7f9beeacdd915c5f647510ec9af3ec/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b6ea1545f7f9beeacdd915c5f647510ec9af3ec/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs?ref=8b6ea1545f7f9beeacdd915c5f647510ec9af3ec", "patch": "@@ -84,13 +84,11 @@ pub(crate) fn complete_unqualified_path(acc: &mut Completions, ctx: &CompletionC\n     }\n \n     ctx.process_all_names(&mut |name, res| {\n-        if let ScopeDef::GenericParam(hir::GenericParam::LifetimeParam(_)) | ScopeDef::Label(_) =\n-            res\n-        {\n-            cov_mark::hit!(unqualified_skip_lifetime_completion);\n-            return;\n-        }\n         let add_resolution = match res {\n+            ScopeDef::GenericParam(hir::GenericParam::LifetimeParam(_)) | ScopeDef::Label(_) => {\n+                cov_mark::hit!(unqualified_skip_lifetime_completion);\n+                return;\n+            }\n             ScopeDef::ImplSelfType(_) => {\n                 !ctx.previous_token_is(syntax::T![impl]) && !ctx.previous_token_is(syntax::T![for])\n             }"}]}