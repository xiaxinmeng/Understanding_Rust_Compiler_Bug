{"sha": "e43a3755dd062c4e0ed5727bec764e84f2fb7690", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0M2EzNzU1ZGQwNjJjNGUwZWQ1NzI3YmVjNzY0ZTg0ZjJmYjc2OTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-17T19:32:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-17T19:32:18Z"}, "message": "rustc: Add a type_owns_heap_mem() predicate", "tree": {"sha": "4ab2c9086f0dd0b86b12c7981857858f97cdd642", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ab2c9086f0dd0b86b12c7981857858f97cdd642"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e43a3755dd062c4e0ed5727bec764e84f2fb7690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e43a3755dd062c4e0ed5727bec764e84f2fb7690", "html_url": "https://github.com/rust-lang/rust/commit/e43a3755dd062c4e0ed5727bec764e84f2fb7690", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e43a3755dd062c4e0ed5727bec764e84f2fb7690/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfb806b367ea87df6670568590b30aca84facd80", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfb806b367ea87df6670568590b30aca84facd80", "html_url": "https://github.com/rust-lang/rust/commit/dfb806b367ea87df6670568590b30aca84facd80"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "a1ed4f86dddccb77249339504b1713296df0e7ed", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e43a3755dd062c4e0ed5727bec764e84f2fb7690/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e43a3755dd062c4e0ed5727bec764e84f2fb7690/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=e43a3755dd062c4e0ed5727bec764e84f2fb7690", "patch": "@@ -986,6 +986,39 @@ fn type_is_signed(&ctxt cx, &t ty) -> bool {\n     }\n }\n \n+fn type_owns_heap_mem(&ctxt cx, &t ty) -> bool {\n+    alt (struct(cx, ty)) {\n+        case (ty_ivec(_)) { ret true; }\n+        case (ty_istr) { ret true; }\n+\n+        case (ty_nil) { ret false; }\n+        case (ty_bot) { ret false; }\n+        case (ty_bool) { ret false; }\n+        case (ty_int) { ret false; }\n+        case (ty_float) { ret false; }\n+        case (ty_uint) { ret false; }\n+        case (ty_machine(_)) { ret false; }\n+        case (ty_char) { ret false; }\n+        case (ty_str) { ret false; }\n+        case (ty_tag(_,_)) { ret false; }\n+        case (ty_box(_)) { ret false; }\n+        case (ty_vec(_)) { ret false; }\n+        case (ty_ptr(_)) { ret false; }\n+        case (ty_port(_)) { ret false; }\n+        case (ty_chan(_)) { ret false; }\n+        case (ty_task) { ret false; }\n+        case (ty_tup(_)) { ret false; }\n+        case (ty_rec(_)) { ret false; }\n+        case (ty_fn(_,_,_,_,_)) { ret false; }\n+        case (ty_native_fn(_,_,_)) { ret false; }\n+        case (ty_obj(_)) { ret false; }\n+        case (ty_var(_)) { fail \"ty_var in type_owns_heap_mem\"; }\n+        case (ty_param(_)) { ret false; }\n+        case (ty_type) { ret false; }\n+        case (ty_native) { ret false; }\n+    }\n+}\n+\n fn type_param(&ctxt cx, &t ty) -> option::t[uint] {\n     alt (struct(cx, ty)) {\n         case (ty_param(?id)) { ret some[uint](id); }"}]}