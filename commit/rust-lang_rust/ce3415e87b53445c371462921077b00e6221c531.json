{"sha": "ce3415e87b53445c371462921077b00e6221c531", "node_id": "C_kwDOAAsO6NoAKGNlMzQxNWU4N2I1MzQ0NWMzNzE0NjI5MjEwNzdiMDBlNjIyMWM1MzE", "commit": {"author": {"name": "Samuel \"Sam\" Tardieu", "email": "sam@rfc1149.net", "date": "2023-03-07T17:59:42Z"}, "committer": {"name": "Samuel \"Sam\" Tardieu", "email": "sam@rfc1149.net", "date": "2023-03-08T08:43:28Z"}, "message": "Add the `popular-crates` binary\n\nThis program downloads crates info from https://crates.io/ and builds\na TOML file that can be fed to `lintcheck`.", "tree": {"sha": "6a1d0bca112e6dfe410d2b1be10bb0622376e32f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a1d0bca112e6dfe410d2b1be10bb0622376e32f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3415e87b53445c371462921077b00e6221c531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3415e87b53445c371462921077b00e6221c531", "html_url": "https://github.com/rust-lang/rust/commit/ce3415e87b53445c371462921077b00e6221c531", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3415e87b53445c371462921077b00e6221c531/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41fa24cef89c71430040332b42036f4ec839c4e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/41fa24cef89c71430040332b42036f4ec839c4e0", "html_url": "https://github.com/rust-lang/rust/commit/41fa24cef89c71430040332b42036f4ec839c4e0"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "27d32f390035d624fdb9256427a538829cc1b775", "filename": "lintcheck/Cargo.toml", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ce3415e87b53445c371462921077b00e6221c531/lintcheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ce3415e87b53445c371462921077b00e6221c531/lintcheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2FCargo.toml?ref=ce3415e87b53445c371462921077b00e6221c531", "patch": "@@ -8,12 +8,16 @@ repository = \"https://github.com/rust-lang/rust-clippy\"\n categories = [\"development-tools\"]\n edition = \"2021\"\n publish = false\n+default-run = \"lintcheck\"\n \n [dependencies]\n+anyhow = \"1.0.69\"\n cargo_metadata = \"0.15.3\"\n clap = { version = \"4.1.8\", features = [\"derive\", \"env\"] }\n+crates_io_api = \"0.8.1\"\n crossbeam-channel = \"0.5.6\"\n flate2 = \"1.0\"\n+indicatif = \"0.17.3\"\n rayon = \"1.5.1\"\n serde = { version = \"1.0\", features = [\"derive\"] }\n serde_json = \"1.0.85\"\n@@ -24,3 +28,11 @@ walkdir = \"2.3\"\n \n [features]\n deny-warnings = []\n+\n+[[bin]]\n+name = \"lintcheck\"\n+path = \"src/main.rs\"\n+\n+[[bin]]\n+name = \"popular-crates\"\n+path = \"src/popular-crates.rs\""}, {"sha": "e997eb47e321f86766374e3234cbd640b91ef1c4", "filename": "lintcheck/README.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ce3415e87b53445c371462921077b00e6221c531/lintcheck%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce3415e87b53445c371462921077b00e6221c531/lintcheck%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2FREADME.md?ref=ce3415e87b53445c371462921077b00e6221c531", "patch": "@@ -25,6 +25,15 @@ the repo root.\n \n The results will then be saved to `lintcheck-logs/custom_logs.toml`.\n \n+The `custom.toml` file may be built using <https://crates.io> recently most\n+downloaded crates by using the `popular-crates` binary from the `lintcheck`\n+directory. For example, to retrieve the 100 recently most downloaded crates:\n+\n+```\n+cargo run --release --bin popular-crates -- -n 100 custom.toml\n+```\n+\n+\n ### Configuring the Crate Sources\n \n The sources to check are saved in a `toml` file. There are three types of"}, {"sha": "fdab984ad86cb3fe400e33644a8a33233c839d58", "filename": "lintcheck/src/popular-crates.rs", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/ce3415e87b53445c371462921077b00e6221c531/lintcheck%2Fsrc%2Fpopular-crates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3415e87b53445c371462921077b00e6221c531/lintcheck%2Fsrc%2Fpopular-crates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2Fsrc%2Fpopular-crates.rs?ref=ce3415e87b53445c371462921077b00e6221c531", "patch": "@@ -0,0 +1,65 @@\n+#![deny(clippy::pedantic)]\n+\n+use clap::Parser;\n+use crates_io_api::{CratesQueryBuilder, Sort, SyncClient};\n+use indicatif::ProgressBar;\n+use std::collections::HashSet;\n+use std::fs::File;\n+use std::io::{BufWriter, Write};\n+use std::path::PathBuf;\n+use std::time::Duration;\n+\n+#[derive(Parser)]\n+struct Opts {\n+    /// Output TOML file name\n+    output: PathBuf,\n+    /// Number of crate names to download\n+    #[clap(short, long, default_value_t = 100)]\n+    number: usize,\n+    /// Do not output progress\n+    #[clap(short, long)]\n+    quiet: bool,\n+}\n+\n+fn main() -> anyhow::Result<()> {\n+    let opts = Opts::parse();\n+    let mut output = BufWriter::new(File::create(opts.output)?);\n+    output.write_all(b\"[crates]\\n\")?;\n+    let client = SyncClient::new(\n+        \"clippy/lintcheck (github.com/rust-lang/rust-clippy/)\",\n+        Duration::from_secs(1),\n+    )?;\n+    let mut seen_crates = HashSet::new();\n+    let pb = if opts.quiet {\n+        None\n+    } else {\n+        Some(ProgressBar::new(opts.number as u64))\n+    };\n+    let mut query = CratesQueryBuilder::new()\n+        .sort(Sort::RecentDownloads)\n+        .page_size(100)\n+        .build();\n+    while seen_crates.len() < opts.number {\n+        let retrieved = client.crates(query.clone())?.crates;\n+        if retrieved.is_empty() {\n+            eprintln!(\"No more than {} crates available from API\", seen_crates.len());\n+            break;\n+        }\n+        for c in retrieved {\n+            if seen_crates.insert(c.name.clone()) {\n+                output.write_all(\n+                    format!(\n+                        \"{} = {{ name = '{}', versions = ['{}'] }}\\n\",\n+                        c.name, c.name, c.max_version\n+                    )\n+                    .as_bytes(),\n+                )?;\n+                if let Some(pb) = &pb {\n+                    pb.inc(1);\n+                }\n+            }\n+        }\n+        query.set_page(query.page() + 1);\n+    }\n+    Ok(())\n+}"}]}