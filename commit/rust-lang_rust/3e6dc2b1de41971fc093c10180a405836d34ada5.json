{"sha": "3e6dc2b1de41971fc093c10180a405836d34ada5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNmRjMmIxZGU0MTk3MWZjMDkzYzEwMTgwYTQwNTgzNmQzNGFkYTU=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-12-04T16:04:44Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-12-04T16:43:24Z"}, "message": "Forgot to update some test outputs", "tree": {"sha": "938f7a825940f0803da17d6b5b11e10d7b7ee933", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/938f7a825940f0803da17d6b5b11e10d7b7ee933"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e6dc2b1de41971fc093c10180a405836d34ada5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e6dc2b1de41971fc093c10180a405836d34ada5", "html_url": "https://github.com/rust-lang/rust/commit/3e6dc2b1de41971fc093c10180a405836d34ada5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e6dc2b1de41971fc093c10180a405836d34ada5/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40f434b8c5a0bbea8e87aeb2bc3a81b99fcb7a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/40f434b8c5a0bbea8e87aeb2bc3a81b99fcb7a64", "html_url": "https://github.com/rust-lang/rust/commit/40f434b8c5a0bbea8e87aeb2bc3a81b99fcb7a64"}], "stats": {"total": 110, "additions": 46, "deletions": 64}, "files": [{"sha": "802f20b4bed602509ddc2648577c289be51a8769", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum.rs?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -21,7 +21,7 @@ fn main() {\n     };\n \n     match enum_unit {};\n-    //~^ ERROR non-exhaustive patterns: multiple patterns of type `enums::NonExhaustiveEnum` are not handled [E0004]\n+    //~^ ERROR non-exhaustive patterns: `_` not covered [E0004]\n \n     // Everything below this is expected to compile successfully.\n "}, {"sha": "a2bdcbaa4478dfbeaca8695bfc3fbd6d74a1c82c", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum.stderr?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -14,11 +14,11 @@ LL |     match enum_unit {\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: multiple patterns of type `enums::NonExhaustiveEnum` are not handled\n+error[E0004]: non-exhaustive patterns: `_` not covered\n   --> $DIR/enum.rs:23:11\n    |\n LL |     match enum_unit {};\n-   |           ^^^^^^^^^\n+   |           ^^^^^^^^^ pattern `_` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n "}, {"sha": "afd6d996c15a8ba01dcdca666ef0fed62bbf47cb", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum_same_crate_empty_match.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.rs?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -3,20 +3,20 @@\n #[non_exhaustive]\n pub enum NonExhaustiveEnum {\n     Unit,\n-    //~^ variant not covered\n+    //~^ not covered\n     Tuple(u32),\n-    //~^ variant not covered\n+    //~^ not covered\n     Struct { field: u32 }\n-    //~^ variant not covered\n+    //~^ not covered\n }\n \n pub enum NormalEnum {\n     Unit,\n-    //~^ variant not covered\n+    //~^ not covered\n     Tuple(u32),\n-    //~^ variant not covered\n+    //~^ not covered\n     Struct { field: u32 }\n-    //~^ variant not covered\n+    //~^ not covered\n }\n \n #[non_exhaustive]\n@@ -25,13 +25,13 @@ pub enum EmptyNonExhaustiveEnum {}\n fn empty_non_exhaustive(x: EmptyNonExhaustiveEnum) {\n     match x {}\n     match x {\n-        _ => {} // FIXME: should be unreachable\n+        _ => {} // not detected as unreachable\n     }\n }\n \n fn main() {\n     match NonExhaustiveEnum::Unit {}\n-    //~^ ERROR multiple patterns of type `NonExhaustiveEnum` are not handled [E0004]\n+    //~^ ERROR `Unit`, `Tuple(_)` and `Struct { .. }` not covered [E0004]\n     match NormalEnum::Unit {}\n-    //~^ ERROR multiple patterns of type `NormalEnum` are not handled [E0004]\n+    //~^ ERROR `Unit`, `Tuple(_)` and `Struct { .. }` not covered [E0004]\n }"}, {"sha": "a99a690bc9e5a5a1bc8ddd2b38e8600da47977a8", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum_same_crate_empty_match.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum_same_crate_empty_match.stderr?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -1,42 +1,42 @@\n-error[E0004]: non-exhaustive patterns: multiple patterns of type `NonExhaustiveEnum` are not handled\n+error[E0004]: non-exhaustive patterns: `Unit`, `Tuple(_)` and `Struct { .. }` not covered\n   --> $DIR/enum_same_crate_empty_match.rs:33:11\n    |\n LL | / pub enum NonExhaustiveEnum {\n LL | |     Unit,\n-   | |     ---- variant not covered\n+   | |     ---- not covered\n LL | |\n LL | |     Tuple(u32),\n-   | |     ----- variant not covered\n+   | |     ----- not covered\n LL | |\n LL | |     Struct { field: u32 }\n-   | |     ------ variant not covered\n+   | |     ------ not covered\n LL | |\n LL | | }\n    | |_- `NonExhaustiveEnum` defined here\n ...\n LL |       match NonExhaustiveEnum::Unit {}\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^ patterns `Unit`, `Tuple(_)` and `Struct { .. }` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: multiple patterns of type `NormalEnum` are not handled\n+error[E0004]: non-exhaustive patterns: `Unit`, `Tuple(_)` and `Struct { .. }` not covered\n   --> $DIR/enum_same_crate_empty_match.rs:35:11\n    |\n LL | / pub enum NormalEnum {\n LL | |     Unit,\n-   | |     ---- variant not covered\n+   | |     ---- not covered\n LL | |\n LL | |     Tuple(u32),\n-   | |     ----- variant not covered\n+   | |     ----- not covered\n LL | |\n LL | |     Struct { field: u32 }\n-   | |     ------ variant not covered\n+   | |     ------ not covered\n LL | |\n LL | | }\n    | |_- `NormalEnum` defined here\n ...\n LL |       match NormalEnum::Unit {}\n-   |             ^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^ patterns `Unit`, `Tuple(_)` and `Struct { .. }` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n "}, {"sha": "0d669a9a4e9d906812ef066b3522ea29436a5940", "filename": "src/test/ui/rfc-2008-non-exhaustive/uninhabited/indirect_match.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Findirect_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Findirect_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Findirect_match.stderr?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -1,28 +1,28 @@\n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedEnum` of type `uninhabited::IndirectUninhabitedEnum` is not handled\n+error[E0004]: non-exhaustive patterns: type `uninhabited::IndirectUninhabitedEnum` is non-empty\n   --> $DIR/indirect_match.rs:18:11\n    |\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedStruct` of type `uninhabited::IndirectUninhabitedStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `uninhabited::IndirectUninhabitedStruct` is non-empty\n   --> $DIR/indirect_match.rs:22:11\n    |\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedTupleStruct` of type `uninhabited::IndirectUninhabitedTupleStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `uninhabited::IndirectUninhabitedTupleStruct` is non-empty\n   --> $DIR/indirect_match.rs:26:11\n    |\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedVariants` of type `uninhabited::IndirectUninhabitedVariants` is not handled\n+error[E0004]: non-exhaustive patterns: type `uninhabited::IndirectUninhabitedVariants` is non-empty\n   --> $DIR/indirect_match.rs:32:11\n    |\n LL |     match x {}"}, {"sha": "41a37cf6a036fb708928a36ab9587c2e9315d14b", "filename": "src/test/ui/rfc-2008-non-exhaustive/uninhabited/indirect_match_same_crate.stderr", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Findirect_match_same_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Findirect_match_same_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Findirect_match_same_crate.stderr?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -1,53 +1,41 @@\n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedEnum` of type `IndirectUninhabitedEnum` is not handled\n+error[E0004]: non-exhaustive patterns: type `IndirectUninhabitedEnum` is non-empty\n   --> $DIR/indirect_match_same_crate.rs:32:11\n    |\n LL | pub struct IndirectUninhabitedEnum(UninhabitedEnum);\n-   | ----------------------------------------------------\n-   | |          |\n-   | |          variant not covered\n-   | `IndirectUninhabitedEnum` defined here\n+   | ---------------------------------------------------- `IndirectUninhabitedEnum` defined here\n ...\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedStruct` of type `IndirectUninhabitedStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `IndirectUninhabitedStruct` is non-empty\n   --> $DIR/indirect_match_same_crate.rs:36:11\n    |\n LL | pub struct IndirectUninhabitedStruct(UninhabitedStruct);\n-   | --------------------------------------------------------\n-   | |          |\n-   | |          variant not covered\n-   | `IndirectUninhabitedStruct` defined here\n+   | -------------------------------------------------------- `IndirectUninhabitedStruct` defined here\n ...\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedTupleStruct` of type `IndirectUninhabitedTupleStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `IndirectUninhabitedTupleStruct` is non-empty\n   --> $DIR/indirect_match_same_crate.rs:40:11\n    |\n LL | pub struct IndirectUninhabitedTupleStruct(UninhabitedTupleStruct);\n-   | ------------------------------------------------------------------\n-   | |          |\n-   | |          variant not covered\n-   | `IndirectUninhabitedTupleStruct` defined here\n+   | ------------------------------------------------------------------ `IndirectUninhabitedTupleStruct` defined here\n ...\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `IndirectUninhabitedVariants` of type `IndirectUninhabitedVariants` is not handled\n+error[E0004]: non-exhaustive patterns: type `IndirectUninhabitedVariants` is non-empty\n   --> $DIR/indirect_match_same_crate.rs:46:11\n    |\n LL | pub struct IndirectUninhabitedVariants(UninhabitedVariants);\n-   | ------------------------------------------------------------\n-   | |          |\n-   | |          variant not covered\n-   | `IndirectUninhabitedVariants` defined here\n+   | ------------------------------------------------------------ `IndirectUninhabitedVariants` defined here\n ...\n LL |     match x {}\n    |           ^"}, {"sha": "10a456a5a879ad09249de29f85eab23f5f539f85", "filename": "src/test/ui/rfc-2008-non-exhaustive/uninhabited/match.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Fmatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Fmatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Fmatch.stderr?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -6,27 +6,27 @@ LL |     match x {}\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `UninhabitedStruct` of type `uninhabited::UninhabitedStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `uninhabited::UninhabitedStruct` is non-empty\n   --> $DIR/match.rs:22:11\n    |\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `UninhabitedTupleStruct` of type `uninhabited::UninhabitedTupleStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `uninhabited::UninhabitedTupleStruct` is non-empty\n   --> $DIR/match.rs:26:11\n    |\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: multiple patterns of type `uninhabited::UninhabitedVariants` are not handled\n+error[E0004]: non-exhaustive patterns: `Tuple(_)` and `Struct { .. }` not covered\n   --> $DIR/match.rs:30:11\n    |\n LL |     match x {}\n-   |           ^\n+   |           ^ patterns `Tuple(_)` and `Struct { .. }` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n "}, {"sha": "148af8c07b1c64951ae769bc783e4e4ec86c1fa4", "filename": "src/test/ui/rfc-2008-non-exhaustive/uninhabited/match_same_crate.stderr", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Fmatch_same_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e6dc2b1de41971fc093c10180a405836d34ada5/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Fmatch_same_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Funinhabited%2Fmatch_same_crate.stderr?ref=3e6dc2b1de41971fc093c10180a405836d34ada5", "patch": "@@ -1,10 +1,7 @@\n-error[E0004]: non-exhaustive patterns: pattern `UninhabitedStruct` of type `UninhabitedStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `UninhabitedStruct` is non-empty\n   --> $DIR/match_same_crate.rs:28:11\n    |\n-LL |   pub struct UninhabitedStruct {\n-   |   -          ----------------- variant not covered\n-   |  _|\n-   | |\n+LL | / pub struct UninhabitedStruct {\n LL | |     _priv: !,\n LL | | }\n    | |_- `UninhabitedStruct` defined here\n@@ -14,33 +11,30 @@ LL |       match x {}\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: pattern `UninhabitedTupleStruct` of type `UninhabitedTupleStruct` is not handled\n+error[E0004]: non-exhaustive patterns: type `UninhabitedTupleStruct` is non-empty\n   --> $DIR/match_same_crate.rs:32:11\n    |\n LL | pub struct UninhabitedTupleStruct(!);\n-   | -------------------------------------\n-   | |          |\n-   | |          variant not covered\n-   | `UninhabitedTupleStruct` defined here\n+   | ------------------------------------- `UninhabitedTupleStruct` defined here\n ...\n LL |     match x {}\n    |           ^\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: multiple patterns of type `UninhabitedVariants` are not handled\n+error[E0004]: non-exhaustive patterns: `Tuple(_)` and `Struct { .. }` not covered\n   --> $DIR/match_same_crate.rs:36:11\n    |\n LL | / pub enum UninhabitedVariants {\n LL | |     #[non_exhaustive] Tuple(!),\n-   | |                       ----- variant not covered\n+   | |                       ----- not covered\n LL | |     #[non_exhaustive] Struct { x: ! }\n-   | |                       ------ variant not covered\n+   | |                       ------ not covered\n LL | | }\n    | |_- `UninhabitedVariants` defined here\n ...\n LL |       match x {}\n-   |             ^\n+   |             ^ patterns `Tuple(_)` and `Struct { .. }` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n "}]}