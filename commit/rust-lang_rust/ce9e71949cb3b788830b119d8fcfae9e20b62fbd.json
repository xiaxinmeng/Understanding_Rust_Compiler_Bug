{"sha": "ce9e71949cb3b788830b119d8fcfae9e20b62fbd", "node_id": "C_kwDOAAsO6NoAKGNlOWU3MTk0OWNiM2I3ODg4MzBiMTE5ZDhmY2ZhZTllMjBiNjJmYmQ", "commit": {"author": {"name": "topjohnwu", "email": "topjohnwu@google.com", "date": "2022-06-21T08:31:16Z"}, "committer": {"name": "topjohnwu", "email": "topjohnwu@gmail.com", "date": "2022-07-04T06:49:21Z"}, "message": "Fix cross compiling on macOS\n\nWhen cross compiling LLVM on an arm64 machine to x86_64, CMake will\nproduce universal binaries by default, causing link errors. Explicitly\nset CMAKE_OSX_ARCHITECTURES to the one single target architecture.", "tree": {"sha": "5980afa5b35e703ca98b2e173440198faa2144de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5980afa5b35e703ca98b2e173440198faa2144de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce9e71949cb3b788830b119d8fcfae9e20b62fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce9e71949cb3b788830b119d8fcfae9e20b62fbd", "html_url": "https://github.com/rust-lang/rust/commit/ce9e71949cb3b788830b119d8fcfae9e20b62fbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce9e71949cb3b788830b119d8fcfae9e20b62fbd/comments", "author": {"login": "topjohnwu", "id": 7337301, "node_id": "MDQ6VXNlcjczMzczMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/7337301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topjohnwu", "html_url": "https://github.com/topjohnwu", "followers_url": "https://api.github.com/users/topjohnwu/followers", "following_url": "https://api.github.com/users/topjohnwu/following{/other_user}", "gists_url": "https://api.github.com/users/topjohnwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/topjohnwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topjohnwu/subscriptions", "organizations_url": "https://api.github.com/users/topjohnwu/orgs", "repos_url": "https://api.github.com/users/topjohnwu/repos", "events_url": "https://api.github.com/users/topjohnwu/events{/privacy}", "received_events_url": "https://api.github.com/users/topjohnwu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topjohnwu", "id": 7337301, "node_id": "MDQ6VXNlcjczMzczMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/7337301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topjohnwu", "html_url": "https://github.com/topjohnwu", "followers_url": "https://api.github.com/users/topjohnwu/followers", "following_url": "https://api.github.com/users/topjohnwu/following{/other_user}", "gists_url": "https://api.github.com/users/topjohnwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/topjohnwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topjohnwu/subscriptions", "organizations_url": "https://api.github.com/users/topjohnwu/orgs", "repos_url": "https://api.github.com/users/topjohnwu/repos", "events_url": "https://api.github.com/users/topjohnwu/events{/privacy}", "received_events_url": "https://api.github.com/users/topjohnwu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5c6a48aee84215a9200dfa1c4c6ad88f5721f56", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5c6a48aee84215a9200dfa1c4c6ad88f5721f56", "html_url": "https://github.com/rust-lang/rust/commit/a5c6a48aee84215a9200dfa1c4c6ad88f5721f56"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "c6d6c256c2879af338b3ccac7bbb622e339ba8a2", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ce9e71949cb3b788830b119d8fcfae9e20b62fbd/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce9e71949cb3b788830b119d8fcfae9e20b62fbd/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=ce9e71949cb3b788830b119d8fcfae9e20b62fbd", "patch": "@@ -429,7 +429,6 @@ impl Step for Llvm {\n             //        should use llvm-tblgen from there, also should verify that it\n             //        actually exists most of the time in normal installs of LLVM.\n             let host_bin = builder.llvm_out(builder.config.build).join(\"bin\");\n-            cfg.define(\"CMAKE_CROSSCOMPILING\", \"True\");\n             cfg.define(\"LLVM_TABLEGEN\", host_bin.join(\"llvm-tblgen\").with_extension(EXE_EXTENSION));\n             cfg.define(\"LLVM_NM\", host_bin.join(\"llvm-nm\").with_extension(EXE_EXTENSION));\n             cfg.define(\n@@ -547,6 +546,8 @@ fn configure_cmake(\n     cfg.target(&target.triple).host(&builder.config.build.triple);\n \n     if target != builder.config.build {\n+        cfg.define(\"CMAKE_CROSSCOMPILING\", \"True\");\n+\n         if target.contains(\"netbsd\") {\n             cfg.define(\"CMAKE_SYSTEM_NAME\", \"NetBSD\");\n         } else if target.contains(\"freebsd\") {\n@@ -564,6 +565,17 @@ fn configure_cmake(\n         // Since, the LLVM itself makes rather limited use of version checks in\n         // CMakeFiles (and then only in tests), and so far no issues have been\n         // reported, the system version is currently left unset.\n+\n+        if target.contains(\"darwin\") {\n+            // Make sure that CMake does not build universal binaries on macOS.\n+            // Explicitly specifiy the one single target architecture.\n+            if target.starts_with(\"aarch64\") {\n+                // macOS uses a different name for building arm64\n+                cfg.define(\"CMAKE_OSX_ARCHITECTURES\", \"arm64\");\n+            } else {\n+                cfg.define(\"CMAKE_OSX_ARCHITECTURES\", target.triple.split('-').next().unwrap());\n+            }\n+        }\n     }\n \n     let sanitize_cc = |cc: &Path| {"}]}