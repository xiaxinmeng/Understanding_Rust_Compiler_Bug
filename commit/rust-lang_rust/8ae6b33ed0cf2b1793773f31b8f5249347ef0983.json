{"sha": "8ae6b33ed0cf2b1793773f31b8f5249347ef0983", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZTZiMzNlZDBjZjJiMTc5Mzc3M2YzMWI4ZjUyNDkzNDdlZjA5ODM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-19T12:30:49Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-19T12:30:49Z"}, "message": "libcore: clarify documentation for char_at(_reverse)", "tree": {"sha": "187d15f4bb1886f7a8ba1810b29c8b0a2ec663ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/187d15f4bb1886f7a8ba1810b29c8b0a2ec663ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ae6b33ed0cf2b1793773f31b8f5249347ef0983", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae6b33ed0cf2b1793773f31b8f5249347ef0983", "html_url": "https://github.com/rust-lang/rust/commit/8ae6b33ed0cf2b1793773f31b8f5249347ef0983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ae6b33ed0cf2b1793773f31b8f5249347ef0983/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a58f37979496efdf15bf016ebccc17b007a6cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a58f37979496efdf15bf016ebccc17b007a6cc", "html_url": "https://github.com/rust-lang/rust/commit/d3a58f37979496efdf15bf016ebccc17b007a6cc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "cb362b2e6c09c3ba06773a1c06efeedb83724ce0", "filename": "src/libcore/str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ae6b33ed0cf2b1793773f31b8f5249347ef0983/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ae6b33ed0cf2b1793773f31b8f5249347ef0983/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8ae6b33ed0cf2b1793773f31b8f5249347ef0983", "patch": "@@ -1863,7 +1863,7 @@ pub fn char_range_at(s: &str, i: uint) -> CharRange {\n     return CharRange {ch: val as char, next: i};\n }\n \n-/// Plucks the `n`th character from the beginning of a string\n+/// Plucks the character starting at the `i`th byte of a string\n pub fn char_at(s: &str, i: uint) -> char {\n     return char_range_at(s, i).ch;\n }\n@@ -1874,11 +1874,11 @@ pub struct CharRange {\n }\n \n /**\n- * Given a byte position and a str, return the previous char and its position\n+ * Given a byte position and a str, return the previous char and its position.\n  *\n  * This function can be used to iterate over a unicode string in reverse.\n  *\n- * returns 0 for next index if called on start index 0\n+ * Returns 0 for next index if called on start index 0.\n  */\n pub fn char_range_at_reverse(ss: &str, start: uint) -> CharRange {\n     let mut prev = start;\n@@ -1900,7 +1900,7 @@ pub fn char_range_at_reverse(ss: &str, start: uint) -> CharRange {\n     return CharRange {ch:ch, next:prev};\n }\n \n-/// Plucks the `n`th character from the end of a string\n+/// Plucks the character ending at the `i`th byte of a string\n pub fn char_at_reverse(s: &str, i: uint) -> char {\n     char_range_at_reverse(s, i).ch\n }"}]}