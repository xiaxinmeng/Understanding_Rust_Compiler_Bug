{"sha": "8024e0df4b0128ca8e740db46a626a964e2eb084", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMjRlMGRmNGIwMTI4Y2E4ZTc0MGRiNDZhNjI2YTk2NGUyZWIwODQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-23T01:22:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-23T01:22:49Z"}, "message": "Rollup merge of #66583 - Phlosioneer:patch-2, r=Dylan-DPC\n\nClarify Step Documentation\n\nWhile the redesign is in progress (#62886), clarify the purpose of replace_zero and replace_one.\n\nFirst, \"returning itself\" is technically impossible due to the function signature of &mut self -> Self. A clone or copy operation must be used. So this is now explicitly stated in the documentation.\n\nSecond, the added docs give some guidance about the actual contract around implementation of replace_zero and replace one. Specifically, the only usage is to create a range with no more steps, by setting start to replace_one and end to replace_zero. So the only property that is actually used is `replace_one > replace_zero`. See https://github.com/rust-lang/rust/issues/42168#issuecomment-489554232\n\nThe new documentation does not say that is the *only* contract, and so it should not be considered an api change. It just highlights the most important detail for implementors.\n\nThe redesign doesn't seem to be landing any time soon, so this is a stopgap measure to reduce confusion in the meantime.", "tree": {"sha": "a929fa3e277649c8e390f5b44b68f0833951faa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a929fa3e277649c8e390f5b44b68f0833951faa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8024e0df4b0128ca8e740db46a626a964e2eb084", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd2InpCRBK7hj4Ov3rIwAAdHIIAIx9w0FjTkfazHYqWTVQyOCT\noGOBLGGOc5yWdwNnxYVR3KvoHsMpZcvFX9iCmWqakWBWJMVTliho5XfjtR7grsjm\n4snhgIXaSpXyxxUHY23AGH19Xh4iPph8L/pmjQaR8Ok7tFiyBqRaPLLwHk0TI57m\nh+nOa1CWsXsVQx1zVFNNkMQFIkZC78VDm1RkuhvXuybA3v34V6yCmKrRwvBVnz0b\nnI80qWUDAFIlcEsYfiq7ezNePh6l8k6d9NhJE8efxZmebKVlA7m1ZW0WnATbQacm\n1roUdG7QCBMZtFjSWRlkIsZJOHo55rgxmMDLWrmSX2LMbMicMhkKUhBHaw+K9kY=\n=cDqW\n-----END PGP SIGNATURE-----\n", "payload": "tree a929fa3e277649c8e390f5b44b68f0833951faa1\nparent e94f066b02623bf15a4293467d0761e23c2087c4\nparent 983cae77dd8681adfb021f841881185721087098\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1574472169 +0100\ncommitter GitHub <noreply@github.com> 1574472169 +0100\n\nRollup merge of #66583 - Phlosioneer:patch-2, r=Dylan-DPC\n\nClarify Step Documentation\n\nWhile the redesign is in progress (#62886), clarify the purpose of replace_zero and replace_one.\n\nFirst, \"returning itself\" is technically impossible due to the function signature of &mut self -> Self. A clone or copy operation must be used. So this is now explicitly stated in the documentation.\n\nSecond, the added docs give some guidance about the actual contract around implementation of replace_zero and replace one. Specifically, the only usage is to create a range with no more steps, by setting start to replace_one and end to replace_zero. So the only property that is actually used is `replace_one > replace_zero`. See https://github.com/rust-lang/rust/issues/42168#issuecomment-489554232\n\nThe new documentation does not say that is the *only* contract, and so it should not be considered an api change. It just highlights the most important detail for implementors.\n\nThe redesign doesn't seem to be landing any time soon, so this is a stopgap measure to reduce confusion in the meantime.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8024e0df4b0128ca8e740db46a626a964e2eb084", "html_url": "https://github.com/rust-lang/rust/commit/8024e0df4b0128ca8e740db46a626a964e2eb084", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8024e0df4b0128ca8e740db46a626a964e2eb084/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e94f066b02623bf15a4293467d0761e23c2087c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e94f066b02623bf15a4293467d0761e23c2087c4", "html_url": "https://github.com/rust-lang/rust/commit/e94f066b02623bf15a4293467d0761e23c2087c4"}, {"sha": "983cae77dd8681adfb021f841881185721087098", "url": "https://api.github.com/repos/rust-lang/rust/commits/983cae77dd8681adfb021f841881185721087098", "html_url": "https://github.com/rust-lang/rust/commit/983cae77dd8681adfb021f841881185721087098"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "63036f516a0a4fc1d4a15544bd431e761a999246", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8024e0df4b0128ca8e740db46a626a964e2eb084/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8024e0df4b0128ca8e740db46a626a964e2eb084/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=8024e0df4b0128ca8e740db46a626a964e2eb084", "patch": "@@ -20,10 +20,14 @@ pub trait Step: Clone + PartialOrd + Sized {\n     /// without overflow.\n     fn steps_between(start: &Self, end: &Self) -> Option<usize>;\n \n-    /// Replaces this step with `1`, returning itself.\n+    /// Replaces this step with `1`, returning a clone of itself.\n+    ///\n+    /// The output of this method should always be greater than the output of replace_zero.\n     fn replace_one(&mut self) -> Self;\n \n-    /// Replaces this step with `0`, returning itself.\n+    /// Replaces this step with `0`, returning a clone of itself.\n+    ///\n+    /// The output of this method should always be less than the output of replace_one.\n     fn replace_zero(&mut self) -> Self;\n \n     /// Adds one to this step, returning the result."}]}