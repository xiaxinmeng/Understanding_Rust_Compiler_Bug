{"sha": "4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMzM4MzVhMzRiNGNjZGZjNGVhMzRiOGYzZjhmZjYxZDA5MmE1NDM=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-27T10:47:09Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-27T10:47:09Z"}, "message": "Cargo fmt run", "tree": {"sha": "5e647c1a57a443c0b11ec6c7378e75137d25d34d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e647c1a57a443c0b11ec6c7378e75137d25d34d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543", "html_url": "https://github.com/rust-lang/rust/commit/4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02ce5bbf6b46a67c3fc12b964de204b8130f1b10", "url": "https://api.github.com/repos/rust-lang/rust/commits/02ce5bbf6b46a67c3fc12b964de204b8130f1b10", "html_url": "https://github.com/rust-lang/rust/commit/02ce5bbf6b46a67c3fc12b964de204b8130f1b10"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "d17edd77507e3507d5ffd19faab2d26ad2621b37", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=4d33835a34b4ccdfc4ea34b8f3f8ff61d092a543", "patch": "@@ -176,13 +176,7 @@ impl CheckWatcherState {\n         shared: Arc<RwLock<CheckWatcherSharedState>>,\n     ) -> CheckWatcherState {\n         let watcher = WatchThread::new(&options, &workspace_root);\n-        CheckWatcherState {\n-            options,\n-            workspace_root,\n-            watcher,\n-            last_update_req: None,\n-            shared,\n-        }\n+        CheckWatcherState { options, workspace_root, watcher, last_update_req: None, shared }\n     }\n \n     pub fn run(&mut self, task_send: &Sender<CheckTask>, cmd_recv: &Receiver<CheckCommand>) {"}]}