{"sha": "820ed30a85868683fc46a28f54fd73da36e27520", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMGVkMzBhODU4Njg2ODNmYzQ2YTI4ZjU0ZmQ3M2RhMzZlMjc1MjA=", "commit": {"author": {"name": "Jeff Crocker", "email": "crockagile@gmail.com", "date": "2017-12-05T22:44:52Z"}, "committer": {"name": "Jeff Crocker", "email": "crockagile@gmail.com", "date": "2017-12-05T22:44:52Z"}, "message": "Update inline asm fingerprint hash tests", "tree": {"sha": "db0397afd2fd891daac4bd9f3d66220093eb14ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db0397afd2fd891daac4bd9f3d66220093eb14ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/820ed30a85868683fc46a28f54fd73da36e27520", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJaJyFkAAoJEAWZfbCdMLzWAlgP/04NY2L/YCHS0uZuVZ4Y9HUD\nWB5B9hIN207SJ9TbgTJnB6LDMX2ya4tXmFWDM6Ovf1IrvYFvpfI9gtn5irWMoLeW\nvTdGp9FZudNspqmvnEgobIT4NnFwgb0Z+A5UHSjsLPujWjDBXu6m779Q50Gldhf6\n17EpcjM/0hLF2K2y+JZ8zLItM+oWaxItuSMJMOglsvKBMoxBJij68Fc0iwcHv4Il\nqbyjaF/s2m6rGeI5ZyhYlmlgTrQzys9MHsD7wsSgTVcIctnIOg6JspLhcBK3G49n\nbqHLKp2eqZcLJTlp/+rBe0AfiV9ay3AfiNT52r7589souaUx7cHLYeG4lCMZtB6q\nQ7gDL/iRA80mlYJmjdhxp+NbRR4jN701riB4250OOkCXXP7WRa2Sz9xJIFiklbSi\nuWjfFGnYYh5AcEB6LtsshU2bG67tQTzrRbPV3R3jisiW9iCc1voRIvp9pKY3lHjU\nj5BVw4TZVDO+4pL3VFDj15xJFwz+u8LnECA9IbVqV6n+hvLM6bvk8LBsZtupH8N0\nqMYY6fF6jf7ukhPy3/vpLdcjBMAiFIe3CjCQ5BvtQm8zS6F6X/CdyplCXz8VkYU0\n2X0hZYs0f2WDXaDUjA7ndsY/QVObooYw3qlawsVOkKWbxkwdKKf4hlQj6qj9knRL\nohs/FPu5JUGxNKwlKG62\n=Z1m+\n-----END PGP SIGNATURE-----", "payload": "tree db0397afd2fd891daac4bd9f3d66220093eb14ed\nparent bc1754216d880b22b054f4e4dbedb839caed423e\nauthor Jeff Crocker <crockagile@gmail.com> 1512513892 -0800\ncommitter Jeff Crocker <crockagile@gmail.com> 1512513892 -0800\n\nUpdate inline asm fingerprint hash tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/820ed30a85868683fc46a28f54fd73da36e27520", "html_url": "https://github.com/rust-lang/rust/commit/820ed30a85868683fc46a28f54fd73da36e27520", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/820ed30a85868683fc46a28f54fd73da36e27520/comments", "author": {"login": "CrockAgile", "id": 5395183, "node_id": "MDQ6VXNlcjUzOTUxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5395183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrockAgile", "html_url": "https://github.com/CrockAgile", "followers_url": "https://api.github.com/users/CrockAgile/followers", "following_url": "https://api.github.com/users/CrockAgile/following{/other_user}", "gists_url": "https://api.github.com/users/CrockAgile/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrockAgile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrockAgile/subscriptions", "organizations_url": "https://api.github.com/users/CrockAgile/orgs", "repos_url": "https://api.github.com/users/CrockAgile/repos", "events_url": "https://api.github.com/users/CrockAgile/events{/privacy}", "received_events_url": "https://api.github.com/users/CrockAgile/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CrockAgile", "id": 5395183, "node_id": "MDQ6VXNlcjUzOTUxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5395183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrockAgile", "html_url": "https://github.com/CrockAgile", "followers_url": "https://api.github.com/users/CrockAgile/followers", "following_url": "https://api.github.com/users/CrockAgile/following{/other_user}", "gists_url": "https://api.github.com/users/CrockAgile/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrockAgile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrockAgile/subscriptions", "organizations_url": "https://api.github.com/users/CrockAgile/orgs", "repos_url": "https://api.github.com/users/CrockAgile/repos", "events_url": "https://api.github.com/users/CrockAgile/events{/privacy}", "received_events_url": "https://api.github.com/users/CrockAgile/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc1754216d880b22b054f4e4dbedb839caed423e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1754216d880b22b054f4e4dbedb839caed423e", "html_url": "https://github.com/rust-lang/rust/commit/bc1754216d880b22b054f4e4dbedb839caed423e"}], "stats": {"total": 60, "additions": 24, "deletions": 36}, "files": [{"sha": "1d66d4ab9d3038f6a8fbd45795badc18c08440ba", "filename": "src/test/incremental/hashes/inline_asm.rs", "status": "modified", "additions": 24, "deletions": 36, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/820ed30a85868683fc46a28f54fd73da36e27520/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820ed30a85868683fc46a28f54fd73da36e27520/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs?ref=820ed30a85868683fc46a28f54fd73da36e27520", "patch": "@@ -30,7 +30,7 @@\n // Change template -------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_template(a: i32) -> i32 {\n+pub fn change_template(a: i32) -> i32 {\n     let c: i32;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -44,12 +44,10 @@ fn change_template(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_template(a: i32) -> i32 {\n+pub fn change_template(a: i32) -> i32 {\n     let c: i32;\n     unsafe {\n         asm!(\"add 2, $0\"\n@@ -67,7 +65,7 @@ fn change_template(a: i32) -> i32 {\n // Change output -------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_output(a: i32) -> i32 {\n+pub fn change_output(a: i32) -> i32 {\n     let mut _out1: i32 = 0;\n     let mut _out2: i32 = 0;\n     unsafe {\n@@ -82,12 +80,10 @@ fn change_output(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_output(a: i32) -> i32 {\n+pub fn change_output(a: i32) -> i32 {\n     let mut _out1: i32 = 0;\n     let mut _out2: i32 = 0;\n     unsafe {\n@@ -106,7 +102,7 @@ fn change_output(a: i32) -> i32 {\n // Change input -------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input(_a: i32, _b: i32) -> i32 {\n+pub fn change_input(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -120,12 +116,10 @@ fn change_input(_a: i32, _b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input(_a: i32, _b: i32) -> i32 {\n+pub fn change_input(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -143,7 +137,7 @@ fn change_input(_a: i32, _b: i32) -> i32 {\n // Change input constraint -----------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n+pub fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -157,12 +151,10 @@ fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n+pub fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -180,7 +172,7 @@ fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n // Change clobber --------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_clobber(_a: i32) -> i32 {\n+pub fn change_clobber(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -194,12 +186,10 @@ fn change_clobber(_a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_clobber(_a: i32) -> i32 {\n+pub fn change_clobber(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -217,7 +207,7 @@ fn change_clobber(_a: i32) -> i32 {\n // Change options --------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_options(_a: i32) -> i32 {\n+pub fn change_options(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -231,12 +221,10 @@ fn change_options(_a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_options(_a: i32) -> i32 {\n+pub fn change_options(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\""}]}