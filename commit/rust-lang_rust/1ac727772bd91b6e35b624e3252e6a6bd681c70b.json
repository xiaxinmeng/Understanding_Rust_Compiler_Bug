{"sha": "1ac727772bd91b6e35b624e3252e6a6bd681c70b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYzcyNzc3MmJkOTFiNmUzNWI2MjRlMzI1MmU2YTZiZDY4MWM3MGI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-06T21:47:09Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-01-26T23:34:05Z"}, "message": "Remove rustdoc old style files generation", "tree": {"sha": "f37d6c0d3d970720f4071c47490150e83a6d5ede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f37d6c0d3d970720f4071c47490150e83a6d5ede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ac727772bd91b6e35b624e3252e6a6bd681c70b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac727772bd91b6e35b624e3252e6a6bd681c70b", "html_url": "https://github.com/rust-lang/rust/commit/1ac727772bd91b6e35b624e3252e6a6bd681c70b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ac727772bd91b6e35b624e3252e6a6bd681c70b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19f8958f827e379be9b0ffc93fca580ec8ffac77", "url": "https://api.github.com/repos/rust-lang/rust/commits/19f8958f827e379be9b0ffc93fca580ec8ffac77", "html_url": "https://github.com/rust-lang/rust/commit/19f8958f827e379be9b0ffc93fca580ec8ffac77"}], "stats": {"total": 74, "additions": 24, "deletions": 50}, "files": [{"sha": "4f237dc85a5ee20ec769dc83547047c0a1a5b7c7", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -33,7 +33,7 @@ use std::default::Default;\n use std::error;\n use std::fmt::{self, Display, Formatter, Write as FmtWrite};\n use std::ffi::OsStr;\n-use std::fs::{self, File, OpenOptions};\n+use std::fs::{self, File};\n use std::io::prelude::*;\n use std::io::{self, BufWriter, BufReader};\n use std::mem;\n@@ -2229,26 +2229,6 @@ impl Context {\n                 if !self.render_redirect_pages {\n                     all.append(full_path(self, &item), &item_type);\n                 }\n-                // Redirect from a sane URL using the namespace to Rustdoc's\n-                // URL for the page.\n-                let redir_name = format!(\"{}.{}.html\", name, item_type.name_space());\n-                let redir_dst = self.dst.join(redir_name);\n-                if let Ok(redirect_out) = OpenOptions::new().create_new(true)\n-                                                            .write(true)\n-                                                            .open(&redir_dst) {\n-                    let mut redirect_out = BufWriter::new(redirect_out);\n-                    try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n-                }\n-\n-                // If the item is a macro, redirect from the old macro URL (with !)\n-                // to the new one (without).\n-                if item_type == ItemType::Macro {\n-                    let redir_name = format!(\"{}.{}!.html\", item_type, name);\n-                    let redir_dst = self.dst.join(redir_name);\n-                    let redirect_out = try_err!(File::create(&redir_dst), &redir_dst);\n-                    let mut redirect_out = BufWriter::new(redirect_out);\n-                    try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n-                }\n             }\n         }\n         Ok(())"}, {"sha": "4d3b76229702b4d6ea676eca309ef7116ced126d", "filename": "src/test/rustdoc/issue-19190.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-19190.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -13,9 +13,6 @@ impl Deref for Bar {\n     fn deref(&self) -> &Foo { loop {} }\n }\n \n-// @has issue_19190/Bar.t.html\n // @has issue_19190/struct.Bar.html\n-// @has - '//*[@id=\"foo.v\"]' 'fn foo(&self)'\n // @has - '//*[@id=\"method.foo\"]' 'fn foo(&self)'\n-// @!has - '//*[@id=\"static_foo.v\"]' 'fn static_foo()'\n // @!has - '//*[@id=\"method.static_foo\"]' 'fn static_foo()'"}, {"sha": "b054145a4831a6d681516b560c1c19ec072162bb", "filename": "src/test/rustdoc/issue-21092.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-21092.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -3,7 +3,6 @@\n \n extern crate issue_21092;\n \n-// @has issue_21092/Bar.t.html\n // @has issue_21092/struct.Bar.html\n // @has - '//*[@id=\"associatedtype.Bar\"]' 'type Bar = i32'\n pub use issue_21092::{Foo, Bar};"}, {"sha": "7dea268ec025885fc914626ee855f419a5e02704", "filename": "src/test/rustdoc/issue-35169-2.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -23,19 +23,11 @@ impl DerefMut for Bar {\n     fn deref_mut(&mut self) -> &mut Foo { loop {} }\n }\n \n-// @has issue_35169_2/Bar.t.html\n // @has issue_35169_2/struct.Bar.html\n-// @has - '//*[@id=\"by_ref.v\"]' 'fn by_ref(&self)'\n // @has - '//*[@id=\"method.by_ref\"]' 'fn by_ref(&self)'\n-// @has - '//*[@id=\"by_explicit_ref.v\"]' 'fn by_explicit_ref(self: &Foo)'\n // @has - '//*[@id=\"method.by_explicit_ref\"]' 'fn by_explicit_ref(self: &Foo)'\n-// @has - '//*[@id=\"by_mut_ref.v\"]' 'fn by_mut_ref(&mut self)'\n // @has - '//*[@id=\"method.by_mut_ref\"]' 'fn by_mut_ref(&mut self)'\n-// @has - '//*[@id=\"by_explicit_mut_ref.v\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n // @has - '//*[@id=\"method.by_explicit_mut_ref\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n-// @!has - '//*[@id=\"by_explicit_box.v\"]' 'fn by_explicit_box(self: Box<Foo>)'\n // @!has - '//*[@id=\"method.by_explicit_box\"]' 'fn by_explicit_box(self: Box<Foo>)'\n-// @!has - '//*[@id=\"by_explicit_self_box.v\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n // @!has - '//*[@id=\"method.by_explicit_self_box\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n-// @!has - '//*[@id=\"static_foo.v\"]' 'fn static_foo()'\n // @!has - '//*[@id=\"method.static_foo\"]' 'fn static_foo()'"}, {"sha": "883d5d0158d7ef687fb3536d92d309e568553865", "filename": "src/test/rustdoc/issue-35169.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-35169.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fissue-35169.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-35169.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -18,19 +18,11 @@ impl Deref for Bar {\n     fn deref(&self) -> &Foo { loop {} }\n }\n \n-// @has issue_35169/Bar.t.html\n // @has issue_35169/struct.Bar.html\n-// @has - '//*[@id=\"by_ref.v\"]' 'fn by_ref(&self)'\n // @has - '//*[@id=\"method.by_ref\"]' 'fn by_ref(&self)'\n-// @has - '//*[@id=\"by_explicit_ref.v\"]' 'fn by_explicit_ref(self: &Foo)'\n // @has - '//*[@id=\"method.by_explicit_ref\"]' 'fn by_explicit_ref(self: &Foo)'\n-// @!has - '//*[@id=\"by_mut_ref.v\"]' 'fn by_mut_ref(&mut self)'\n // @!has - '//*[@id=\"method.by_mut_ref\"]' 'fn by_mut_ref(&mut self)'\n-// @!has - '//*[@id=\"by_explicit_mut_ref.v\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n // @!has - '//*[@id=\"method.by_explicit_mut_ref\"]' 'fn by_explicit_mut_ref(self: &mut Foo)'\n-// @!has - '//*[@id=\"by_explicit_box.v\"]' 'fn by_explicit_box(self: Box<Foo>)'\n // @!has - '//*[@id=\"method.by_explicit_box\"]' 'fn by_explicit_box(self: Box<Foo>)'\n-// @!has - '//*[@id=\"by_explicit_self_box.v\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n // @!has - '//*[@id=\"method.by_explicit_self_box\"]' 'fn by_explicit_self_box(self: Box<Self>)'\n-// @!has - '//*[@id=\"static_foo.v\"]' 'fn static_foo()'\n // @!has - '//*[@id=\"method.static_foo\"]' 'fn static_foo()'"}, {"sha": "fb4f02ad16052a8bc3f0c746733f9df62fdd14e7", "filename": "src/test/rustdoc/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacros.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -2,8 +2,6 @@\n // @has - //pre '() => { ... };'\n // @has - //pre '($a:tt) => { ... };'\n // @has - //pre '($e:expr) => { ... };'\n-// @has macros/macro.my_macro!.html\n-// @has - //a 'macro.my_macro.html'\n #[macro_export]\n macro_rules! my_macro {\n     () => [];"}, {"sha": "fb6697e18fbc4facff6a254146ca30eb83fa91f5", "filename": "src/test/rustdoc/old-style-files.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fold-style-files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fold-style-files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fold-style-files.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/macro.bar.html\n+// @!has foo/macro.bar!.html\n+// @!has foo/bar.m.html\n+#[macro_export]\n+macro_rules! bar {\n+    () => {}\n+}\n+\n+// @has foo/struct.Bar.html\n+// @!has foo/Bar.t.html\n+pub struct Bar;"}, {"sha": "353ce10243e0055d8ee570b77bf4d9f8e786d076", "filename": "src/test/rustdoc/src-links.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fsrc-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fsrc-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -14,13 +14,11 @@ pub mod bar {\n     // @has foo/bar/baz/index.html '//a/@href' '../../../src/foo/src-links.rs.html'\n     pub mod baz {\n         /// Dox\n-        // @has foo/bar/baz/baz.v.html\n         // @has foo/bar/baz/fn.baz.html '//a/@href' '../../../src/foo/src-links.rs.html'\n         pub fn baz() { }\n     }\n \n     /// Dox\n-    // @has foo/bar/Foobar.t.html\n     // @has foo/bar/trait.Foobar.html '//a/@href' '../../src/foo/src-links.rs.html'\n     pub trait Foobar { fn dummy(&self) { } }\n "}, {"sha": "cd8957aa2ecb93bacd8d1f05bc17add9d9a6e74c", "filename": "src/test/rustdoc/structfields.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fstructfields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac727772bd91b6e35b624e3252e6a6bd681c70b/src%2Ftest%2Frustdoc%2Fstructfields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstructfields.rs?ref=1ac727772bd91b6e35b624e3252e6a6bd681c70b", "patch": "@@ -1,6 +1,5 @@\n // @has structfields/Foo.t.html\n // @has - struct.Foo.html\n-// @has structfields/struct.Foo.html\n pub struct Foo {\n     // @has - //pre \"pub a: ()\"\n     pub a: (),\n@@ -14,17 +13,13 @@ pub struct Foo {\n     pub d: usize,\n }\n \n-// @has structfields/Bar.t.html\n-// @has - struct.Bar.html\n // @has structfields/struct.Bar.html\n pub struct Bar {\n     // @has - //pre \"pub a: ()\"\n     pub a: (),\n     // @!has - //pre \"// some fields omitted\"\n }\n \n-// @has structfields/Qux.t.html\n-// @has - enum.Qux.html\n // @has structfields/enum.Qux.html\n pub enum Qux {\n     Quz {"}]}