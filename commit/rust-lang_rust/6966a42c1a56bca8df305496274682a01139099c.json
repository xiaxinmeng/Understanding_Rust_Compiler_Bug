{"sha": "6966a42c1a56bca8df305496274682a01139099c", "node_id": "C_kwDOAAsO6NoAKDY5NjZhNDJjMWE1NmJjYThkZjMwNTQ5NjI3NDY4MmEwMTEzOTA5OWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-09T09:09:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-09T09:09:58Z"}, "message": "Auto merge of #8404 - camsteffen:rm-ui-test, r=flip1995\n\nFactor out ui_test suite\n\nchangelog: none", "tree": {"sha": "a3a2320af49239701182c6b56f0ad3c5ab195272", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3a2320af49239701182c6b56f0ad3c5ab195272"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6966a42c1a56bca8df305496274682a01139099c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6966a42c1a56bca8df305496274682a01139099c", "html_url": "https://github.com/rust-lang/rust/commit/6966a42c1a56bca8df305496274682a01139099c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6966a42c1a56bca8df305496274682a01139099c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caeebd6b095d12f657cc1a9f176d5c9e1e372b21", "url": "https://api.github.com/repos/rust-lang/rust/commits/caeebd6b095d12f657cc1a9f176d5c9e1e372b21", "html_url": "https://github.com/rust-lang/rust/commit/caeebd6b095d12f657cc1a9f176d5c9e1e372b21"}, {"sha": "88fd0905315ec02cadb224d034cd017b6ffcd379", "url": "https://api.github.com/repos/rust-lang/rust/commits/88fd0905315ec02cadb224d034cd017b6ffcd379", "html_url": "https://github.com/rust-lang/rust/commit/88fd0905315ec02cadb224d034cd017b6ffcd379"}], "stats": {"total": 283, "additions": 134, "deletions": 149}, "files": [{"sha": "42955080c966e10d37ca00c6feb89009b2797c19", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6966a42c1a56bca8df305496274682a01139099c/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6966a42c1a56bca8df305496274682a01139099c/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=6966a42c1a56bca8df305496274682a01139099c", "patch": "@@ -2116,7 +2116,7 @@ fn with_test_item_names<'tcx>(tcx: TyCtxt<'tcx>, module: LocalDefId, f: impl Fn(\n \n /// Checks if the function containing the given `HirId` is a `#[test]` function\n ///\n-/// Note: If you use this function, please add a `#[test]` case in `tests/ui_test`.\n+/// Note: Add `// compile-flags: --test` to UI tests with a `#[test]` function\n pub fn is_in_test_function(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n     with_test_item_names(tcx, tcx.parent_module(id), |names| {\n         tcx.hir()\n@@ -2139,7 +2139,7 @@ pub fn is_in_test_function(tcx: TyCtxt<'_>, id: hir::HirId) -> bool {\n /// Checks whether item either has `test` attribute applied, or\n /// is a module with `test` in its name.\n ///\n-/// Note: If you use this function, please add a `#[test]` case in `tests/ui_test`.\n+/// Note: Add `// compile-flags: --test` to UI tests with a `#[test]` function\n pub fn is_test_module_or_function(tcx: TyCtxt<'_>, item: &Item<'_>) -> bool {\n     is_in_test_function(tcx, item.hir_id())\n         || matches!(item.kind, ItemKind::Mod(..))"}, {"sha": "a82ff182839314d625cd0078cbe2d17fda1fe670", "filename": "tests/compile-test.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6966a42c1a56bca8df305496274682a01139099c/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6966a42c1a56bca8df305496274682a01139099c/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=6966a42c1a56bca8df305496274682a01139099c", "patch": "@@ -165,14 +165,6 @@ fn run_ui() {\n     compiletest::run_tests(&config);\n }\n \n-fn run_ui_test() {\n-    let mut config = base_config(\"ui_test\");\n-    let _g = VarGuard::set(\"CARGO_MANIFEST_DIR\", fs::canonicalize(\"tests\").unwrap());\n-    let rustcflags = config.target_rustcflags.get_or_insert_with(Default::default);\n-    rustcflags.push_str(\" --test\");\n-    compiletest::run_tests(&config);\n-}\n-\n fn run_internal_tests() {\n     // only run internal tests with the internal-tests feature\n     if !RUN_INTERNAL_TESTS {\n@@ -328,7 +320,6 @@ fn run_ui_cargo() {\n fn compile_test() {\n     set_var(\"CLIPPY_DISABLE_DOCS_LINKS\", \"true\");\n     run_ui();\n-    run_ui_test();\n     run_ui_toml();\n     run_ui_cargo();\n     run_internal_tests();"}, {"sha": "422f9486503d2396a484653531936afe7aa18814", "filename": "tests/ui/eq_op.rs", "status": "modified", "additions": 52, "deletions": 41, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/6966a42c1a56bca8df305496274682a01139099c/tests%2Fui%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6966a42c1a56bca8df305496274682a01139099c/tests%2Fui%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.rs?ref=6966a42c1a56bca8df305496274682a01139099c", "patch": "@@ -1,58 +1,56 @@\n-// does not test any rustfixable lints\n-\n-#[rustfmt::skip]\n-#[warn(clippy::eq_op)]\n-#[allow(clippy::identity_op, clippy::double_parens)]\n-#[allow(clippy::no_effect, unused_variables, clippy::unnecessary_operation, clippy::short_circuit_statement)]\n-#[allow(clippy::nonminimal_bool)]\n-#[allow(unused)]\n-#[allow(clippy::unnecessary_cast)]\n+// compile-flags: --test\n+\n+#![warn(clippy::eq_op)]\n+#![allow(clippy::double_parens, clippy::identity_op, clippy::nonminimal_bool)]\n+\n fn main() {\n     // simple values and comparisons\n-    1 == 1;\n-    \"no\" == \"no\";\n+    let _ = 1 == 1;\n+    let _ = \"no\" == \"no\";\n     // even though I agree that no means no ;-)\n-    false != false;\n-    1.5 < 1.5;\n-    1u64 >= 1u64;\n+    let _ = false != false;\n+    let _ = 1.5 < 1.5;\n+    let _ = 1u64 >= 1u64;\n \n     // casts, methods, parentheses\n-    (1 as u64) & (1 as u64);\n-    1 ^ ((((((1))))));\n+    let _ = (1u32 as u64) & (1u32 as u64);\n+    #[rustfmt::skip]\n+    {\n+        let _ = 1 ^ ((((((1))))));\n+    };\n \n     // unary and binary operators\n-    (-(2) < -(2));\n-    ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n-    (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n+    let _ = (-(2) < -(2));\n+    let _ = ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n+    let _ = (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n \n     // various other things\n-    ([1] != [1]);\n-    ((1, 2) != (1, 2));\n-    vec![1, 2, 3] == vec![1, 2, 3]; //no error yet, as we don't match macros\n+    let _ = ([1] != [1]);\n+    let _ = ((1, 2) != (1, 2));\n+    let _ = vec![1, 2, 3] == vec![1, 2, 3]; //no error yet, as we don't match macros\n \n     // const folding\n-    1 + 1 == 2;\n-    1 - 1 == 0;\n+    let _ = 1 + 1 == 2;\n+    let _ = 1 - 1 == 0;\n \n-    1 - 1;\n-    1 / 1;\n-    true && true;\n-\n-    true || true;\n+    let _ = 1 - 1;\n+    let _ = 1 / 1;\n+    let _ = true && true;\n \n+    let _ = true || true;\n \n     let a: u32 = 0;\n     let b: u32 = 0;\n \n-    a == b && b == a;\n-    a != b && b != a;\n-    a < b && b > a;\n-    a <= b && b >= a;\n+    let _ = a == b && b == a;\n+    let _ = a != b && b != a;\n+    let _ = a < b && b > a;\n+    let _ = a <= b && b >= a;\n \n     let mut a = vec![1];\n-    a == a;\n-    2*a.len() == 2*a.len(); // ok, functions\n-    a.pop() == a.pop(); // ok, functions\n+    let _ = a == a;\n+    let _ = 2 * a.len() == 2 * a.len(); // ok, functions\n+    let _ = a.pop() == a.pop(); // ok, functions\n \n     check_ignore_macro();\n \n@@ -63,15 +61,14 @@ fn main() {\n     const D: u32 = A / A;\n }\n \n-#[rustfmt::skip]\n macro_rules! check_if_named_foo {\n-    ($expression:expr) => (\n+    ($expression:expr) => {\n         if stringify!($expression) == \"foo\" {\n             println!(\"foo!\");\n         } else {\n             println!(\"not foo.\");\n         }\n-    )\n+    };\n }\n \n macro_rules! bool_macro {\n@@ -80,11 +77,10 @@ macro_rules! bool_macro {\n     };\n }\n \n-#[allow(clippy::short_circuit_statement)]\n fn check_ignore_macro() {\n     check_if_named_foo!(foo);\n     // checks if the lint ignores macros with `!` operator\n-    !bool_macro!(1) && !bool_macro!(\"\");\n+    let _ = !bool_macro!(1) && !bool_macro!(\"\");\n }\n \n struct Nested {\n@@ -95,3 +91,18 @@ fn check_nested(n1: &Nested, n2: &Nested) -> bool {\n     // `n2.inner.0.0` mistyped as `n1.inner.0.0`\n     (n1.inner.0).0 == (n1.inner.0).0 && (n1.inner.1).0 == (n2.inner.1).0 && (n1.inner.2).0 == (n2.inner.2).0\n }\n+\n+#[test]\n+fn eq_op_shouldnt_trigger_in_tests() {\n+    let a = 1;\n+    let result = a + 1 == 1 + a;\n+    assert!(result);\n+}\n+\n+#[test]\n+fn eq_op_macros_shouldnt_trigger_in_tests() {\n+    let a = 1;\n+    let b = 2;\n+    assert_eq!(a, a);\n+    assert_eq!(a + b, b + a);\n+}"}, {"sha": "313ceed2b41facad2b115d1b36d0d77bbb4693a2", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 80, "deletions": 82, "changes": 162, "blob_url": "https://github.com/rust-lang/rust/blob/6966a42c1a56bca8df305496274682a01139099c/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6966a42c1a56bca8df305496274682a01139099c/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=6966a42c1a56bca8df305496274682a01139099c", "patch": "@@ -1,174 +1,172 @@\n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:12:5\n+  --> $DIR/eq_op.rs:8:13\n    |\n-LL |     1 == 1;\n-   |     ^^^^^^\n+LL |     let _ = 1 == 1;\n+   |             ^^^^^^\n    |\n    = note: `-D clippy::eq-op` implied by `-D warnings`\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:13:5\n+  --> $DIR/eq_op.rs:9:13\n    |\n-LL |     \"no\" == \"no\";\n-   |     ^^^^^^^^^^^^\n+LL |     let _ = \"no\" == \"no\";\n+   |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:15:5\n+  --> $DIR/eq_op.rs:11:13\n    |\n-LL |     false != false;\n-   |     ^^^^^^^^^^^^^^\n+LL |     let _ = false != false;\n+   |             ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n-  --> $DIR/eq_op.rs:16:5\n+  --> $DIR/eq_op.rs:12:13\n    |\n-LL |     1.5 < 1.5;\n-   |     ^^^^^^^^^\n+LL |     let _ = 1.5 < 1.5;\n+   |             ^^^^^^^^^\n \n error: equal expressions as operands to `>=`\n-  --> $DIR/eq_op.rs:17:5\n+  --> $DIR/eq_op.rs:13:13\n    |\n-LL |     1u64 >= 1u64;\n-   |     ^^^^^^^^^^^^\n+LL |     let _ = 1u64 >= 1u64;\n+   |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:20:5\n+  --> $DIR/eq_op.rs:16:13\n    |\n-LL |     (1 as u64) & (1 as u64);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let _ = (1u32 as u64) & (1u32 as u64);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `^`\n-  --> $DIR/eq_op.rs:21:5\n+  --> $DIR/eq_op.rs:19:17\n    |\n-LL |     1 ^ ((((((1))))));\n-   |     ^^^^^^^^^^^^^^^^^\n+LL |         let _ = 1 ^ ((((((1))))));\n+   |                 ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n-  --> $DIR/eq_op.rs:24:5\n+  --> $DIR/eq_op.rs:23:13\n    |\n-LL |     (-(2) < -(2));\n-   |     ^^^^^^^^^^^^^\n+LL |     let _ = (-(2) < -(2));\n+   |             ^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:25:5\n+  --> $DIR/eq_op.rs:24:13\n    |\n-LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let _ = ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:25:6\n+  --> $DIR/eq_op.rs:24:14\n    |\n-LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n-   |      ^^^^^^^^^^^^^^^^^\n+LL |     let _ = ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:25:27\n+  --> $DIR/eq_op.rs:24:35\n    |\n-LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n-   |                           ^^^^^^^^^^^^^^^^^\n+LL |     let _ = ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n+   |                                   ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:26:5\n+  --> $DIR/eq_op.rs:25:13\n    |\n-LL |     (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let _ = (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:29:5\n+  --> $DIR/eq_op.rs:28:13\n    |\n-LL |     ([1] != [1]);\n-   |     ^^^^^^^^^^^^\n+LL |     let _ = ([1] != [1]);\n+   |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:30:5\n+  --> $DIR/eq_op.rs:29:13\n    |\n-LL |     ((1, 2) != (1, 2));\n-   |     ^^^^^^^^^^^^^^^^^^\n+LL |     let _ = ((1, 2) != (1, 2));\n+   |             ^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:34:5\n+  --> $DIR/eq_op.rs:33:13\n    |\n-LL |     1 + 1 == 2;\n-   |     ^^^^^^^^^^\n+LL |     let _ = 1 + 1 == 2;\n+   |             ^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:35:5\n+  --> $DIR/eq_op.rs:34:13\n    |\n-LL |     1 - 1 == 0;\n-   |     ^^^^^^^^^^\n+LL |     let _ = 1 - 1 == 0;\n+   |             ^^^^^^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:35:5\n+  --> $DIR/eq_op.rs:34:13\n    |\n-LL |     1 - 1 == 0;\n-   |     ^^^^^\n+LL |     let _ = 1 - 1 == 0;\n+   |             ^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:37:5\n+  --> $DIR/eq_op.rs:36:13\n    |\n-LL |     1 - 1;\n-   |     ^^^^^\n+LL |     let _ = 1 - 1;\n+   |             ^^^^^\n \n error: equal expressions as operands to `/`\n-  --> $DIR/eq_op.rs:38:5\n+  --> $DIR/eq_op.rs:37:13\n    |\n-LL |     1 / 1;\n-   |     ^^^^^\n+LL |     let _ = 1 / 1;\n+   |             ^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:39:5\n+  --> $DIR/eq_op.rs:38:13\n    |\n-LL |     true && true;\n-   |     ^^^^^^^^^^^^\n+LL |     let _ = true && true;\n+   |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `||`\n-  --> $DIR/eq_op.rs:41:5\n+  --> $DIR/eq_op.rs:40:13\n    |\n-LL |     true || true;\n-   |     ^^^^^^^^^^^^\n+LL |     let _ = true || true;\n+   |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:47:5\n+  --> $DIR/eq_op.rs:45:13\n    |\n-LL |     a == b && b == a;\n-   |     ^^^^^^^^^^^^^^^^\n+LL |     let _ = a == b && b == a;\n+   |             ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:48:5\n+  --> $DIR/eq_op.rs:46:13\n    |\n-LL |     a != b && b != a;\n-   |     ^^^^^^^^^^^^^^^^\n+LL |     let _ = a != b && b != a;\n+   |             ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:49:5\n+  --> $DIR/eq_op.rs:47:13\n    |\n-LL |     a < b && b > a;\n-   |     ^^^^^^^^^^^^^^\n+LL |     let _ = a < b && b > a;\n+   |             ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:50:5\n+  --> $DIR/eq_op.rs:48:13\n    |\n-LL |     a <= b && b >= a;\n-   |     ^^^^^^^^^^^^^^^^\n+LL |     let _ = a <= b && b >= a;\n+   |             ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:53:5\n+  --> $DIR/eq_op.rs:51:13\n    |\n-LL |     a == a;\n-   |     ^^^^^^\n+LL |     let _ = a == a;\n+   |             ^^^^^^\n \n error: equal expressions as operands to `/`\n-  --> $DIR/eq_op.rs:63:20\n+  --> $DIR/eq_op.rs:61:20\n    |\n LL |     const D: u32 = A / A;\n    |                    ^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:96:5\n+  --> $DIR/eq_op.rs:92:5\n    |\n LL |     (n1.inner.0).0 == (n1.inner.0).0 && (n1.inner.1).0 == (n2.inner.1).0 && (n1.inner.2).0 == (n2.inner.2).0\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[deny(clippy::eq_op)]` on by default\n \n error: aborting due to 28 previous errors\n "}, {"sha": "f2f5f1e588ed408e8a252148e7c9f48b48001bda", "filename": "tests/ui_test/eq_op.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/caeebd6b095d12f657cc1a9f176d5c9e1e372b21/tests%2Fui_test%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caeebd6b095d12f657cc1a9f176d5c9e1e372b21/tests%2Fui_test%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui_test%2Feq_op.rs?ref=caeebd6b095d12f657cc1a9f176d5c9e1e372b21", "patch": "@@ -1,15 +0,0 @@\n-#[warn(clippy::eq_op)]\n-#[test]\n-fn eq_op_shouldnt_trigger_in_tests() {\n-    let a = 1;\n-    let result = a + 1 == 1 + a;\n-    assert!(result);\n-}\n-\n-#[test]\n-fn eq_op_macros_shouldnt_trigger_in_tests() {\n-    let a = 1;\n-    let b = 2;\n-    assert_eq!(a, a);\n-    assert_eq!(a + b, b + a);\n-}"}]}