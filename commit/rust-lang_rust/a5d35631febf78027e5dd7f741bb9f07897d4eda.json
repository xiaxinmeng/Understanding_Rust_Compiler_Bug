{"sha": "a5d35631febf78027e5dd7f741bb9f07897d4eda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZDM1NjMxZmViZjc4MDI3ZTVkZDdmNzQxYmI5ZjA3ODk3ZDRlZGE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-09T05:43:08Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-22T22:14:27Z"}, "message": "Reword and fix test", "tree": {"sha": "2a759a3e476d4379f89bec8ee4c930d0c8e5414b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a759a3e476d4379f89bec8ee4c930d0c8e5414b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5d35631febf78027e5dd7f741bb9f07897d4eda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d35631febf78027e5dd7f741bb9f07897d4eda", "html_url": "https://github.com/rust-lang/rust/commit/a5d35631febf78027e5dd7f741bb9f07897d4eda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5d35631febf78027e5dd7f741bb9f07897d4eda/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48fa974211990ec2dd2b8d8c6949d101fb51bb45", "url": "https://api.github.com/repos/rust-lang/rust/commits/48fa974211990ec2dd2b8d8c6949d101fb51bb45", "html_url": "https://github.com/rust-lang/rust/commit/48fa974211990ec2dd2b8d8c6949d101fb51bb45"}], "stats": {"total": 49, "additions": 26, "deletions": 23}, "files": [{"sha": "b583c0554e8214a23900722575038079c0175348", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -1066,7 +1066,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx>+'o {\n                 let assoc_item = tcx.associated_item(*item_def_id);\n                 err.span_label(\n                     span,\n-                    format!(\"missing associated type `{}` value\", assoc_item.ident),\n+                    format!(\"associated type `{}` must be specified\", assoc_item.ident),\n                 );\n                 err.span_label(\n                     tcx.def_span(*item_def_id),\n@@ -1084,8 +1084,13 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx>+'o {\n                 }\n             }\n             if !suggestions.is_empty() {\n+                let msg = if suggestions.len() == 1 {\n+                    \"if you meant to specify the associated type, write\"\n+                } else {\n+                    \"if you meant to specify the associated types, write\"\n+                };\n                 err.multipart_suggestion_with_applicability(\n-                    \"if you meant to assign the missing associated type, use the name\",\n+                    msg,\n                     suggestions,\n                     Applicability::MaybeIncorrect,\n                 );"}, {"sha": "1e615c4c0db80e9eb20a07365066c09d7d47710e", "filename": "src/test/compile-fail/issue-23595-1.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fcompile-fail%2Fissue-23595-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fcompile-fail%2Fissue-23595-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23595-1.rs?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -16,9 +16,7 @@ trait Hierarchy {\n     type Value;\n     type ChildKey;\n     type Children = Index<Self::ChildKey, Output=Hierarchy>;\n-    //~^ ERROR: the value of the associated type `ChildKey`\n-    //~^^ ERROR: the value of the associated type `Children`\n-    //~^^^ ERROR: the value of the associated type `Value`\n+    //~^ ERROR: the value of the associated types `Value` (from the trait `Hierarchy`), `ChildKey`\n \n     fn data(&self) -> Option<(Self::Value, Self::Children)>;\n }"}, {"sha": "b4285c0de29d5b09d4bf109ceba08ed7a8c5177a", "filename": "src/test/ui/associated-type/associated-type-projection-from-multiple-supertraits.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -29,7 +29,7 @@ LL |     type Color;\n    |     ----------- `Color` defined here\n ...\n LL | fn dent_object<COLOR>(c: BoxCar<Color=COLOR>) {\n-   |                          ^^^^^^^^^^^^^^^^^^^ missing associated type `Color` value\n+   |                          ^^^^^^^^^^^^^^^^^^^ associated type `Color` must be specified\n \n error[E0221]: ambiguous associated type `Color` in bounds of `C`\n   --> $DIR/associated-type-projection-from-multiple-supertraits.rs:38:29"}, {"sha": "eb8e6f998a534c84c58834107e54665158b26aea", "filename": "src/test/ui/associated-types/associated-types-incomplete-object.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-incomplete-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-incomplete-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-incomplete-object.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -5,7 +5,7 @@ LL |     type B;\n    |     ------- `B` defined here\n ...\n LL |     let b = &42isize as &Foo<A=usize>;\n-   |                          ^^^^^^^^^^^^ missing associated type `B` value\n+   |                          ^^^^^^^^^^^^ associated type `B` must be specified\n \n error[E0191]: the value of the associated type `A` (from the trait `Foo`) must be specified\n   --> $DIR/associated-types-incomplete-object.rs:36:26\n@@ -14,7 +14,7 @@ LL |     type A;\n    |     ------- `A` defined here\n ...\n LL |     let c = &42isize as &Foo<B=char>;\n-   |                          ^^^^^^^^^^^ missing associated type `A` value\n+   |                          ^^^^^^^^^^^ associated type `A` must be specified\n \n error[E0191]: the value of the associated types `A` (from the trait `Foo`), `B` (from the trait `Foo`) must be specified\n   --> $DIR/associated-types-incomplete-object.rs:39:26\n@@ -27,8 +27,8 @@ LL |     type B;\n LL |     let d = &42isize as &Foo;\n    |                          ^^^\n    |                          |\n-   |                          missing associated type `A` value\n-   |                          missing associated type `B` value\n+   |                          associated type `A` must be specified\n+   |                          associated type `B` must be specified\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f07529e7e9e1d82f1ea54acc1752308abf492885", "filename": "src/test/ui/error-codes/E0191.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Ferror-codes%2FE0191.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Ferror-codes%2FE0191.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0191.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -5,7 +5,7 @@ LL |     type Bar;\n    |     --------- `Bar` defined here\n ...\n LL | type Foo = Trait; //~ ERROR E0191\n-   |            ^^^^^ missing associated type `Bar` value\n+   |            ^^^^^ associated type `Bar` must be specified\n \n error: aborting due to previous error\n "}, {"sha": "d26e61fba8c6b6af1edc924196a4f8c3fd1046b5", "filename": "src/test/ui/error-codes/E0220.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -11,7 +11,7 @@ LL |     type Bar;\n    |     --------- `Bar` defined here\n ...\n LL | type Foo = Trait<F=i32>; //~ ERROR E0220\n-   |            ^^^^^^^^^^^^ missing associated type `Bar` value\n+   |            ^^^^^^^^^^^^ associated type `Bar` must be specified\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d125438b8517d45723f0a6275e2301220bb5d1b2", "filename": "src/test/ui/issues/issue-19482.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-19482.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-19482.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19482.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -5,7 +5,7 @@ LL |     type A;\n    |     ------- `A` defined here\n ...\n LL | fn bar(x: &Foo) {}\n-   |            ^^^ missing associated type `A` value\n+   |            ^^^ associated type `A` must be specified\n \n error: aborting due to previous error\n "}, {"sha": "2cc064dad1b8d830b3a340a4a09321b2f3a99b1f", "filename": "src/test/ui/issues/issue-21950.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -10,7 +10,7 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n   --> $DIR/issue-21950.rs:17:14\n    |\n LL |             &Add;\n-   |              ^^^ missing associated type `Output` value\n+   |              ^^^ associated type `Output` must be specified\n    | \n   ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL\n    |"}, {"sha": "3ba77346a1f8225da36b855ad668711fb8ea6bbb", "filename": "src/test/ui/issues/issue-22434.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-22434.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-22434.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22434.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -5,7 +5,7 @@ LL |     type A;\n    |     ------- `A` defined here\n ...\n LL | type I<'a> = &'a (Foo + 'a);\n-   |                   ^^^^^^^^ missing associated type `A` value\n+   |                   ^^^^^^^^ associated type `A` must be specified\n \n error: aborting due to previous error\n "}, {"sha": "bfce870196a8e6a56bf87a24574b5c8c00c1d4da", "filename": "src/test/ui/issues/issue-22560.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -28,7 +28,7 @@ LL |   type Test = Add +\n LL | |             //~^ ERROR E0393\n LL | |             //~| ERROR E0191\n LL | |             Sub;\n-   | |_______________^ missing associated type `Output` value\n+   | |_______________^ associated type `Output` must be specified\n    | \n   ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL\n    |"}, {"sha": "198469ca723d0e3df1c5286d4df8a0c005494d2c", "filename": "src/test/ui/issues/issue-23024.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -16,7 +16,7 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n   --> $DIR/issue-23024.rs:19:35\n    |\n LL |     println!(\"{:?}\",(vfnfer[0] as Fn)(3));\n-   |                                   ^^ missing associated type `Output` value\n+   |                                   ^^ associated type `Output` must be specified\n    | \n   ::: $SRC_DIR/libcore/ops/function.rs:LL:COL\n    |"}, {"sha": "824ba4b49cb465c470254102673e266dddfcee26", "filename": "src/test/ui/issues/issue-28344.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28344.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -2,7 +2,7 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n   --> $DIR/issue-28344.rs:14:17\n    |\n LL |     let x: u8 = BitXor::bitor(0 as u8, 0 as u8);\n-   |                 ^^^^^^^^^^^^^ missing associated type `Output` value\n+   |                 ^^^^^^^^^^^^^ associated type `Output` must be specified\n    | \n   ::: $SRC_DIR/libcore/ops/bit.rs:LL:COL\n    |\n@@ -21,7 +21,7 @@ error[E0191]: the value of the associated type `Output` (from the trait `std::op\n   --> $DIR/issue-28344.rs:18:13\n    |\n LL |     let g = BitXor::bitor;\n-   |             ^^^^^^^^^^^^^ missing associated type `Output` value\n+   |             ^^^^^^^^^^^^^ associated type `Output` must be specified\n    | \n   ::: $SRC_DIR/libcore/ops/bit.rs:LL:COL\n    |"}, {"sha": "b62b5d3b04ca072fa6b67b708245c9e6ee6b50b1", "filename": "src/test/ui/suggestions/use-type-argument-instead-of-assoc-type.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fuse-type-argument-instead-of-assoc-type.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -18,9 +18,9 @@ LL | }\n LL |  pub struct Foo { i: Box<T<usize, usize, usize, usize, B=usize>> }\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                          |\n-   |                          missing associated type `A` value\n-   |                          missing associated type `C` value\n-help: if you meant to assign the missing associated type, use the name\n+   |                          associated type `A` must be specified\n+   |                          associated type `C` must be specified\n+help: if you meant to specify the associated types, write\n    |\n LL |  pub struct Foo { i: Box<T<usize, usize, A = usize, C = usize, B=usize>> }\n    |                                          ^^^^^^^^^  ^^^^^^^^^"}, {"sha": "c316c4a6beb7fcbffae416e5608c3d6e84004461", "filename": "src/test/ui/traits/trait-alias-object.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5d35631febf78027e5dd7f741bb9f07897d4eda/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias-object.stderr?ref=a5d35631febf78027e5dd7f741bb9f07897d4eda", "patch": "@@ -10,7 +10,7 @@ error[E0191]: the value of the associated type `Item` (from the trait `std::iter\n   --> $DIR/trait-alias-object.rs:18:13\n    |\n LL |     let _: &dyn IteratorAlias = &vec![123].into_iter();\n-   |             ^^^^^^^^^^^^^^^^^ missing associated type `Item` value\n+   |             ^^^^^^^^^^^^^^^^^ associated type `Item` must be specified\n    | \n   ::: $SRC_DIR/libcore/iter/iterator.rs:LL:COL\n    |"}]}