{"sha": "b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "node_id": "C_kwDOAAsO6NoAKGIyZWVkNzJhNmZiZjI1NGU3ZDQ0OTQyZWFhMTIxZmNiZWQwNWQzZmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-22T19:16:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-22T19:16:17Z"}, "message": "Auto merge of #97281 - est31:remove_box, r=compiler-errors\n\nRemove box syntax from rustc_mir_dataflow and rustc_mir_transform\n\nContinuation of #87781, inspired by #97239. The usages that this PR removes have not appeared from nothing, instead the usage in `rustc_mir_dataflow` and `rustc_mir_transform` was from #80522 which split up `rustc_mir`, and which was filed before I filed #87781, so it was using the state from before my PR. But it was merged after my PR was merged, so the `box_syntax` uses were able to survive here. Outside of this introduction due to the code being outside of the master branch at the point of merging of my PR, there was only one other introduction of box syntax, in #95159. That box syntax was removed again though in #95555. Outside of that, `box_syntax` has not made its reoccurrance in compiler crates.", "tree": {"sha": "0a9da97c4c5fc3bb595d314ec921827e7c2302de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a9da97c4c5fc3bb595d314ec921827e7c2302de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "html_url": "https://github.com/rust-lang/rust/commit/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a437b2ca081bc12425a3318cb66aade9824cbae", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a437b2ca081bc12425a3318cb66aade9824cbae", "html_url": "https://github.com/rust-lang/rust/commit/0a437b2ca081bc12425a3318cb66aade9824cbae"}, {"sha": "99603ef0742176b0ae7980146318469cf8d59cb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/99603ef0742176b0ae7980146318469cf8d59cb2", "html_url": "https://github.com/rust-lang/rust/commit/99603ef0742176b0ae7980146318469cf8d59cb2"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "e4c130f0807dd0b8a5c20f10bd1f95b1fc0b9615", "filename": "compiler/rustc_mir_dataflow/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs?ref=b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "patch": "@@ -1,6 +1,5 @@\n #![feature(associated_type_defaults)]\n #![feature(box_patterns)]\n-#![feature(box_syntax)]\n #![feature(exact_size_is_empty)]\n #![feature(let_else)]\n #![feature(min_specialization)]"}, {"sha": "268ce1b2e8cfa64568e4c6982a94c56e9ef371b9", "filename": "compiler/rustc_mir_transform/src/instcombine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_transform%2Fsrc%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_transform%2Fsrc%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finstcombine.rs?ref=b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "patch": "@@ -192,12 +192,12 @@ impl<'tcx> InstCombineContext<'tcx, '_> {\n \n         statements.push(Statement {\n             source_info: terminator.source_info,\n-            kind: StatementKind::Assign(box (\n+            kind: StatementKind::Assign(Box::new((\n                 destination_place,\n                 Rvalue::Use(Operand::Copy(\n                     arg_place.project_deeper(&[ProjectionElem::Deref], self.tcx),\n                 )),\n-            )),\n+            ))),\n         });\n         terminator.kind = TerminatorKind::Goto { target: destination_block };\n     }"}, {"sha": "571f541072a38ac01ef634fd8f2ec956adfe05d5", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "patch": "@@ -1,6 +1,5 @@\n #![allow(rustc::potential_query_instability)]\n #![feature(box_patterns)]\n-#![feature(box_syntax)]\n #![feature(let_chains)]\n #![feature(let_else)]\n #![feature(map_try_insert)]"}, {"sha": "0f45711baa3ac8776e1492e452ab43b52a4a8891", "filename": "compiler/rustc_mir_transform/src/normalize_array_len.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs?ref=b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "patch": "@@ -125,7 +125,7 @@ impl<'tcx> Patcher<'_, 'tcx> {\n                             let assign_to = Place::from(local);\n                             let rvalue = Rvalue::Use(operand);\n                             make_copy_statement.kind =\n-                                StatementKind::Assign(box (assign_to, rvalue));\n+                                StatementKind::Assign(Box::new((assign_to, rvalue)));\n                             statements.push(make_copy_statement);\n \n                             // to reorder we have to copy and make NOP\n@@ -165,7 +165,8 @@ impl<'tcx> Patcher<'_, 'tcx> {\n                     if add_deref {\n                         place = self.tcx.mk_place_deref(place);\n                     }\n-                    len_statement.kind = StatementKind::Assign(box (*into, Rvalue::Len(place)));\n+                    len_statement.kind =\n+                        StatementKind::Assign(Box::new((*into, Rvalue::Len(place))));\n                     statements.push(len_statement);\n \n                     // make temporary dead"}]}