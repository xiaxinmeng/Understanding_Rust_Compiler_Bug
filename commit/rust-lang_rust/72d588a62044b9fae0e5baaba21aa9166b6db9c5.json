{"sha": "72d588a62044b9fae0e5baaba21aa9166b6db9c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZDU4OGE2MjA0NGI5ZmFlMGU1YmFhYmEyMWFhOTE2NmI2ZGI5YzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-06T17:08:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-06T17:08:36Z"}, "message": "Auto merge of #32055 - mitaa:rdoc-strip-priv-imports, r=alexcrichton\n\nfixes #27104\n\nr? @alexcrichton", "tree": {"sha": "59d7a400ed296240c854b2d39d64935b214878cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59d7a400ed296240c854b2d39d64935b214878cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72d588a62044b9fae0e5baaba21aa9166b6db9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72d588a62044b9fae0e5baaba21aa9166b6db9c5", "html_url": "https://github.com/rust-lang/rust/commit/72d588a62044b9fae0e5baaba21aa9166b6db9c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72d588a62044b9fae0e5baaba21aa9166b6db9c5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71f4658c14c63be2c9e6dbf85e46c10cf20fed71", "url": "https://api.github.com/repos/rust-lang/rust/commits/71f4658c14c63be2c9e6dbf85e46c10cf20fed71", "html_url": "https://github.com/rust-lang/rust/commit/71f4658c14c63be2c9e6dbf85e46c10cf20fed71"}, {"sha": "688e52201edb497453f33e098f23de136a0d64bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/688e52201edb497453f33e098f23de136a0d64bf", "html_url": "https://github.com/rust-lang/rust/commit/688e52201edb497453f33e098f23de136a0d64bf"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "6ff23943a98f83583158f2d7bb14a25a5d4aef12", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=72d588a62044b9fae0e5baaba21aa9166b6db9c5", "patch": "@@ -109,6 +109,8 @@ const PASSES: &'static [Pass] = &[\n      \"concatenates all document attributes into one document attribute\"),\n     (\"strip-private\", passes::strip_private,\n      \"strips all private items from a crate which cannot be seen externally\"),\n+    (\"strip-priv-imports\", passes::strip_priv_imports,\n+     \"strips all private import statements (`use`, `extern crate`) from a crate\"),\n ];\n \n const DEFAULT_PASSES: &'static [&'static str] = &["}, {"sha": "2eb82dec6daa472e27c74dad4819e0d8d2e5f537", "filename": "src/librustdoc/passes.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Flibrustdoc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Flibrustdoc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses.rs?ref=72d588a62044b9fae0e5baaba21aa9166b6db9c5", "patch": "@@ -106,7 +106,7 @@ pub fn strip_private(mut krate: clean::Crate) -> plugins::PluginResult {\n             retained: &mut retained,\n             access_levels: &access_levels,\n         };\n-        krate = stripper.fold_crate(krate);\n+        krate = ImportStripper.fold_crate(stripper.fold_crate(krate));\n     }\n \n     // strip all private implementations of traits\n@@ -144,12 +144,6 @@ impl<'a> fold::DocFolder for Stripper<'a> {\n                 }\n             }\n \n-            clean::ExternCrateItem(..) | clean::ImportItem(_) => {\n-                if i.visibility != Some(hir::Public) {\n-                    return None\n-                }\n-            }\n-\n             clean::StructFieldItem(..) => {\n                 if i.visibility != Some(hir::Public) {\n                     return Some(clean::Item {\n@@ -170,6 +164,9 @@ impl<'a> fold::DocFolder for Stripper<'a> {\n                     return None;\n                 }\n             }\n+            // handled in the `strip-priv-imports` pass\n+            clean::ExternCrateItem(..) | clean::ImportItem(_) => {}\n+\n             clean::DefaultImplItem(..) | clean::ImplItem(..) => {}\n \n             // tymethods/macros have no control over privacy\n@@ -239,6 +236,21 @@ impl<'a> fold::DocFolder for ImplStripper<'a> {\n     }\n }\n \n+// This stripper discards all private import statements (`use`, `extern crate`)\n+struct ImportStripper;\n+impl fold::DocFolder for ImportStripper {\n+    fn fold_item(&mut self, i: Item) -> Option<Item> {\n+        match i.inner {\n+            clean::ExternCrateItem(..) |\n+            clean::ImportItem(..) if i.visibility != Some(hir::Public) => None,\n+            _ => self.fold_item_recur(i)\n+        }\n+    }\n+}\n+\n+pub fn strip_priv_imports(krate: clean::Crate)  -> plugins::PluginResult {\n+    (ImportStripper.fold_crate(krate), None)\n+}\n \n pub fn unindent_comments(krate: clean::Crate) -> plugins::PluginResult {\n     struct CommentCleaner;"}, {"sha": "3066947052294caa54c41630fb3b7fed44de07ea", "filename": "src/test/auxiliary/empty.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Ftest%2Fauxiliary%2Fempty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Ftest%2Fauxiliary%2Fempty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fempty.rs?ref=72d588a62044b9fae0e5baaba21aa9166b6db9c5", "patch": "@@ -0,0 +1,9 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms."}, {"sha": "266a30891941dbfde7e88ccc05d2bb4df297cc59", "filename": "src/test/rustdoc/issue-15347.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Ftest%2Frustdoc%2Fissue-15347.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Ftest%2Frustdoc%2Fissue-15347.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-15347.rs?ref=72d588a62044b9fae0e5baaba21aa9166b6db9c5", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:--no-defaults --passes \"collapse-docs\" --passes \"unindent-comments\"\n+// compile-flags:--no-defaults --passes collapse-docs --passes unindent-comments\n \n // @has issue_15347/fn.foo.html\n #[doc(hidden)]"}, {"sha": "5fa093d8f299b565a9c85cbb5deccfc4c7c2a4fa", "filename": "src/test/rustdoc/issue-27104.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Ftest%2Frustdoc%2Fissue-27104.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d588a62044b9fae0e5baaba21aa9166b6db9c5/src%2Ftest%2Frustdoc%2Fissue-27104.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-27104.rs?ref=72d588a62044b9fae0e5baaba21aa9166b6db9c5", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--no-defaults --passes strip-priv-imports\n+// aux-build:empty.rs\n+// ignore-cross-compile\n+\n+// @has issue_27104/index.html\n+// @!has - 'extern crate std'\n+// @!has - 'use std::prelude::'\n+\n+// @has - 'pub extern crate empty'\n+pub extern crate empty;"}]}