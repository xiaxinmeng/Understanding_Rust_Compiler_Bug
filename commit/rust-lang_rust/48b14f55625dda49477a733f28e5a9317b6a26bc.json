{"sha": "48b14f55625dda49477a733f28e5a9317b6a26bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YjE0ZjU1NjI1ZGRhNDk0NzdhNzMzZjI4ZTVhOTMxN2I2YTI2YmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-07T06:06:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-08T06:37:58Z"}, "message": "librustc: Add #[link_args] to metadata", "tree": {"sha": "ac9065d6a8fbeaeaf35323422f82548dd6ff00c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac9065d6a8fbeaeaf35323422f82548dd6ff00c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48b14f55625dda49477a733f28e5a9317b6a26bc", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48b14f55625dda49477a733f28e5a9317b6a26bc", "html_url": "https://github.com/rust-lang/rust/commit/48b14f55625dda49477a733f28e5a9317b6a26bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48b14f55625dda49477a733f28e5a9317b6a26bc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d661711cc2fb1365ad9f25cbabe3c34550eaafbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d661711cc2fb1365ad9f25cbabe3c34550eaafbe", "html_url": "https://github.com/rust-lang/rust/commit/d661711cc2fb1365ad9f25cbabe3c34550eaafbe"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "eaac7dd1a0b54263680df892893fb06e0c26627f", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=48b14f55625dda49477a733f28e5a9317b6a26bc", "patch": "@@ -17,7 +17,7 @@ use lib::llvm::llvm;\n use lib::llvm::{ModuleRef, mk_pass_manager, mk_target_data, True, False};\n use lib;\n use metadata::common::LinkMeta;\n-use metadata::{encoder, cstore};\n+use metadata::{encoder, csearch, cstore};\n use middle::trans::common::CrateContext;\n use middle::ty;\n use util::ppaux;\n@@ -814,6 +814,14 @@ pub fn link_binary(sess: Session,\n     let ula = cstore::get_used_link_args(cstore);\n     for ula.each |arg| { cc_args.push(/*bad*/copy *arg); }\n \n+    // Add all the link args for external crates.\n+    do cstore::iter_crate_data(cstore) |crate_num, _| {\n+        let link_args = csearch::get_link_args_for_crate(cstore, crate_num);\n+        do vec::consume(link_args) |_, link_arg| {\n+            cc_args.push(link_arg);\n+        }\n+    }\n+\n     // # Extern library linking\n \n     // User-supplied library search paths (-L on the cammand line) These are"}, {"sha": "38b76c4ace29f3180e377268c4553298c50f0f79", "filename": "src/librustc/metadata/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcommon.rs?ref=48b14f55625dda49477a733f28e5a9317b6a26bc", "patch": "@@ -156,6 +156,9 @@ pub const tag_item_unnamed_field: uint = 0x76;\n pub const tag_items_data_item_struct_ctor: uint = 0x77;\n pub const tag_items_data_item_visibility: uint = 0x78;\n \n+pub const tag_link_args: uint = 0x79;\n+pub const tag_link_args_arg: uint = 0x7a;\n+\n pub struct LinkMeta {\n     name: @str,\n     vers: @str,"}, {"sha": "427867845fe73f6462e506edc6ed775b820f67aa", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=48b14f55625dda49477a733f28e5a9317b6a26bc", "patch": "@@ -237,6 +237,13 @@ pub fn get_method_visibility(cstore: @mut cstore::CStore,\n     decoder::get_method_visibility(cdata, def_id.node)\n }\n \n+pub fn get_link_args_for_crate(cstore: @mut cstore::CStore,\n+                               crate_num: ast::crate_num)\n+                            -> ~[~str] {\n+    let cdata = cstore::get_crate_data(cstore, crate_num);\n+    decoder::get_link_args_for_crate(cdata)\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}, {"sha": "6a2ba78bfe920f44e7e401c027a052f249ccf39c", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=48b14f55625dda49477a733f28e5a9317b6a26bc", "patch": "@@ -1131,6 +1131,15 @@ pub fn translate_def_id(cdata: cmd, did: ast::def_id) -> ast::def_id {\n     }\n }\n \n+pub fn get_link_args_for_crate(cdata: cmd) -> ~[~str] {\n+    let link_args = reader::get_doc(reader::Doc(cdata.data), tag_link_args);\n+    let mut result = ~[];\n+    for reader::tagged_docs(link_args, tag_link_args_arg) |arg_doc| {\n+        result.push(reader::doc_as_str(arg_doc));\n+    }\n+    result\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}, {"sha": "1b106cc121846262893107a18eeb3889cfabb643", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b14f55625dda49477a733f28e5a9317b6a26bc/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=48b14f55625dda49477a733f28e5a9317b6a26bc", "patch": "@@ -74,6 +74,7 @@ struct Stats {\n     attr_bytes: uint,\n     dep_bytes: uint,\n     lang_item_bytes: uint,\n+    link_args_bytes: uint,\n     item_bytes: uint,\n     index_bytes: uint,\n     zero_bytes: uint,\n@@ -1255,6 +1256,20 @@ fn encode_lang_items(ecx: @EncodeContext, ebml_w: writer::Encoder) {\n     ebml_w.end_tag();   // tag_lang_items\n }\n \n+fn encode_link_args(ecx: @EncodeContext,\n+                    ebml_w: writer::Encoder) {\n+    ebml_w.start_tag(tag_link_args);\n+\n+    let link_args = cstore::get_used_link_args(ecx.cstore);\n+    for link_args.each |link_arg| {\n+        ebml_w.start_tag(tag_link_args_arg);\n+        ebml_w.writer.write_str(link_arg.to_str());\n+        ebml_w.end_tag();\n+    }\n+\n+    ebml_w.end_tag();\n+}\n+\n fn encode_crate_dep(ecx: @EncodeContext, ebml_w: writer::Encoder,\n                     dep: decoder::crate_dep) {\n     ebml_w.start_tag(tag_crate_dep);\n@@ -1291,6 +1306,7 @@ pub fn encode_metadata(parms: EncodeParams, crate: &crate) -> ~[u8] {\n         attr_bytes: 0,\n         dep_bytes: 0,\n         lang_item_bytes: 0,\n+        link_args_bytes: 0,\n         item_bytes: 0,\n         index_bytes: 0,\n         zero_bytes: 0,\n@@ -1329,6 +1345,11 @@ pub fn encode_metadata(parms: EncodeParams, crate: &crate) -> ~[u8] {\n     encode_lang_items(ecx, ebml_w);\n     ecx.stats.lang_item_bytes = wr.pos - i;\n \n+    // Encode the link args.\n+    i = wr.pos;\n+    encode_link_args(ecx, ebml_w);\n+    ecx.stats.link_args_bytes = wr.pos - i;\n+\n     // Encode and index the items.\n     ebml_w.start_tag(tag_items);\n     i = wr.pos;\n@@ -1359,6 +1380,7 @@ pub fn encode_metadata(parms: EncodeParams, crate: &crate) -> ~[u8] {\n         io::println(fmt!(\" attribute bytes: %u\", ecx.stats.attr_bytes));\n         io::println(fmt!(\"       dep bytes: %u\", ecx.stats.dep_bytes));\n         io::println(fmt!(\" lang item bytes: %u\", ecx.stats.lang_item_bytes));\n+        io::println(fmt!(\" link args bytes: %u\", ecx.stats.link_args_bytes));\n         io::println(fmt!(\"      item bytes: %u\", ecx.stats.item_bytes));\n         io::println(fmt!(\"     index bytes: %u\", ecx.stats.index_bytes));\n         io::println(fmt!(\"      zero bytes: %u\", ecx.stats.zero_bytes));"}]}