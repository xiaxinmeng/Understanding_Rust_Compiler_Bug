{"sha": "4e4f8ab712fa80c07b1042b6cfa09b689ed23d56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNGY4YWI3MTJmYTgwYzA3YjEwNDJiNmNmYTA5YjY4OWVkMjNkNTY=", "commit": {"author": {"name": "John-John Tedro", "email": "udoprog@tedro.se", "date": "2017-11-25T23:30:33Z"}, "committer": {"name": "John-John Tedro", "email": "udoprog@tedro.se", "date": "2017-11-25T23:30:33Z"}, "message": "Check tail node in check_links", "tree": {"sha": "d28fd12545451ba2858a3172055a5bdb0ba53c74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d28fd12545451ba2858a3172055a5bdb0ba53c74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e4f8ab712fa80c07b1042b6cfa09b689ed23d56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4f8ab712fa80c07b1042b6cfa09b689ed23d56", "html_url": "https://github.com/rust-lang/rust/commit/4e4f8ab712fa80c07b1042b6cfa09b689ed23d56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e4f8ab712fa80c07b1042b6cfa09b689ed23d56/comments", "author": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e97ba83287a6f0f85cc9cc7a51ab309487e17038", "url": "https://api.github.com/repos/rust-lang/rust/commits/e97ba83287a6f0f85cc9cc7a51ab309487e17038", "html_url": "https://github.com/rust-lang/rust/commit/e97ba83287a6f0f85cc9cc7a51ab309487e17038"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "99ad424cc20b78b57a9002cacea8a9d1f94fbe36", "filename": "src/liballoc/linked_list.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4e4f8ab712fa80c07b1042b6cfa09b689ed23d56/src%2Fliballoc%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4f8ab712fa80c07b1042b6cfa09b689ed23d56/src%2Fliballoc%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flinked_list.rs?ref=4e4f8ab712fa80c07b1042b6cfa09b689ed23d56", "patch": "@@ -1288,6 +1288,8 @@ mod tests {\n             let mut node_ptr: &Node<T>;\n             match list.head {\n                 None => {\n+                    // tail node should also be None.\n+                    assert!(list.tail.is_none());\n                     assert_eq!(0, list.len);\n                     return;\n                 }\n@@ -1314,6 +1316,11 @@ mod tests {\n                     }\n                 }\n             }\n+\n+            // verify that the tail node points to the last node.\n+            let tail = list.tail.as_ref().expect(\"some tail node\").as_ref();\n+            assert_eq!(tail as *const Node<T>, node_ptr as *const Node<T>);\n+            // check that len matches interior links.\n             assert_eq!(len, list.len);\n         }\n     }"}]}