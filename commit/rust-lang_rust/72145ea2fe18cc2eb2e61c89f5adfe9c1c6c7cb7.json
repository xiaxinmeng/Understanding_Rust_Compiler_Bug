{"sha": "72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMTQ1ZWEyZmUxOGNjMmViMmU2MWM4OWY1YWRmZTljMWM2YzdjYjc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-25T07:11:20Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-25T07:11:20Z"}, "message": "MaybeUninit doctest: remove unnecessary type ascription", "tree": {"sha": "75d944f2c2ad5299d7fc4e524fefb6ecef4c6531", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75d944f2c2ad5299d7fc4e524fefb6ecef4c6531"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7", "html_url": "https://github.com/rust-lang/rust/commit/72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "524580312039e4fa5ccf91e8f7093cd755bc1aad", "url": "https://api.github.com/repos/rust-lang/rust/commits/524580312039e4fa5ccf91e8f7093cd755bc1aad", "html_url": "https://github.com/rust-lang/rust/commit/524580312039e4fa5ccf91e8f7093cd755bc1aad"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ce4aee7ebc54f8be0ceed6408e4642a18c4a5918", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=72145ea2fe18cc2eb2e61c89f5adfe9c1c6c7cb7", "patch": "@@ -982,7 +982,7 @@ impl<T: ?Sized> DerefMut for ManuallyDrop<T> {\n ///     out.write(vec![1, 2, 3]);\n /// }\n ///\n-/// let mut v: MaybeUninit<Vec<i32>> = MaybeUninit::uninit();\n+/// let mut v = MaybeUninit::uninit();\n /// unsafe { make_vec(v.as_mut_ptr()); }\n /// // Now we know `v` is initialized! This also makes sure the vector gets\n /// // properly dropped.\n@@ -1071,7 +1071,7 @@ impl<T: ?Sized> DerefMut for ManuallyDrop<T> {\n /// optimizations, potentially resulting in a larger size:\n ///\n /// ```rust\n-/// # use std::mem::{MaybeUninit, size_of, align_of};\n+/// # use std::mem::{MaybeUninit, size_of};\n /// assert_eq!(size_of::<Option<bool>>(), 1);\n /// assert_eq!(size_of::<Option<MaybeUninit<bool>>>(), 2);\n /// ```"}]}