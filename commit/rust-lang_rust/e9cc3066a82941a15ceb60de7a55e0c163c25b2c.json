{"sha": "e9cc3066a82941a15ceb60de7a55e0c163c25b2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5Y2MzMDY2YTgyOTQxYTE1Y2ViNjBkZTdhNTVlMGMxNjNjMjViMmM=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-11-30T20:49:37Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-12-01T03:26:53Z"}, "message": "Remove round, trunc tests\n\nThere are no platform intrinsics in the rustc for these functions yet,\nso this removes them as a distinct commit for later reversion.", "tree": {"sha": "d4e33a0984eb0c82c38f18293797789bd0d1ddb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e33a0984eb0c82c38f18293797789bd0d1ddb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9cc3066a82941a15ceb60de7a55e0c163c25b2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9cc3066a82941a15ceb60de7a55e0c163c25b2c", "html_url": "https://github.com/rust-lang/rust/commit/e9cc3066a82941a15ceb60de7a55e0c163c25b2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9cc3066a82941a15ceb60de7a55e0c163c25b2c/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7538ff810aa683a0c3694f20e749dee4a6469f39", "url": "https://api.github.com/repos/rust-lang/rust/commits/7538ff810aa683a0c3694f20e749dee4a6469f39", "html_url": "https://github.com/rust-lang/rust/commit/7538ff810aa683a0c3694f20e749dee4a6469f39"}], "stats": {"total": 36, "additions": 0, "deletions": 36}, "files": [{"sha": "fe347a5362daf85053e4f2d563390b9a92d15a94", "filename": "crates/core_simd/tests/ops_impl/float_macros.rs", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e9cc3066a82941a15ceb60de7a55e0c163c25b2c/crates%2Fcore_simd%2Ftests%2Fops_impl%2Ffloat_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9cc3066a82941a15ceb60de7a55e0c163c25b2c/crates%2Fcore_simd%2Ftests%2Fops_impl%2Ffloat_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fops_impl%2Ffloat_macros.rs?ref=e9cc3066a82941a15ceb60de7a55e0c163c25b2c", "patch": "@@ -353,42 +353,6 @@ macro_rules! float_tests {\n                 }\n             }\n \n-            #[test]\n-            #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n-            fn round_odd_floats() {\n-                for v in slice_chunks(&C) {\n-                    let expected = apply_unary_lanewise(v, <$scalar>::round);\n-                    assert_biteq!(v.round(), expected);\n-                }\n-            }\n-\n-            #[test]\n-            #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n-            fn round_mode() {\n-                assert_biteq!(core_simd::$vector::splat(1.5).round(), core_simd::$vector::splat(2.0));\n-                assert_biteq!(core_simd::$vector::splat(2.5).round(), core_simd::$vector::splat(3.0));\n-                assert_biteq!(core_simd::$vector::splat(-1.5).round(), core_simd::$vector::splat(-2.0));\n-                assert_biteq!(core_simd::$vector::splat(-2.5).round(), core_simd::$vector::splat(-3.0));\n-            }\n-\n-            #[test]\n-            #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n-            fn trunc_odd_floats() {\n-                for v in slice_chunks(&C) {\n-                    let expected = apply_unary_lanewise(v, <$scalar>::trunc);\n-                    assert_biteq!(v.trunc(), expected);\n-                }\n-            }\n-\n-            #[test]\n-            #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n-            fn fract_odd_floats() {\n-                for v in slice_chunks(&C) {\n-                    let expected = apply_unary_lanewise(v, <$scalar>::fract);\n-                    assert_biteq!(v.fract(), expected);\n-                }\n-            }\n-\n             #[test]\n             #[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n             fn to_int_unchecked() {"}]}