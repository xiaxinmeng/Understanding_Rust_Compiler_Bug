{"sha": "374ab25585f0a817fe7bd6986737f12347b12d0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NGFiMjU1ODVmMGE4MTdmZTdiZDY5ODY3MzdmMTIzNDdiMTJkMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-24T12:42:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-24T12:42:54Z"}, "message": "Auto merge of #70163 - nikic:llvm-10-preparation, r=cuviper\n\nPrepare for LLVM 10 upgrade\n\nThis is #67759 minus the submodule update.\n\n * Fix two compatibility issues in the rustllvm wrapper.\n * Update data layout strings in tests.\n * Fix LLVM version comparison (this become a problem because the major version has two digits now).\n\nr? @cuviper", "tree": {"sha": "60908a3b892fff185b7ac34e99636a1517bc9c7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60908a3b892fff185b7ac34e99636a1517bc9c7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/374ab25585f0a817fe7bd6986737f12347b12d0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/374ab25585f0a817fe7bd6986737f12347b12d0b", "html_url": "https://github.com/rust-lang/rust/commit/374ab25585f0a817fe7bd6986737f12347b12d0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/374ab25585f0a817fe7bd6986737f12347b12d0b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1add455ec6f81045e7651c6225902823f5d4fbfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/1add455ec6f81045e7651c6225902823f5d4fbfa", "html_url": "https://github.com/rust-lang/rust/commit/1add455ec6f81045e7651c6225902823f5d4fbfa"}, {"sha": "497f879b1e24c369362bcd821959ffabc50a8a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/497f879b1e24c369362bcd821959ffabc50a8a31", "html_url": "https://github.com/rust-lang/rust/commit/497f879b1e24c369362bcd821959ffabc50a8a31"}], "stats": {"total": 49, "additions": 37, "deletions": 12}, "files": [{"sha": "b52fbe4666eb3e5fff8c87bb56d7e7b78b91a68f", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=374ab25585f0a817fe7bd6986737f12347b12d0b", "patch": "@@ -1141,6 +1141,8 @@ impl Step for Compiletest {\n             let llvm_config = builder.ensure(native::Llvm { target: builder.config.build });\n             if !builder.config.dry_run {\n                 let llvm_version = output(Command::new(&llvm_config).arg(\"--version\"));\n+                // Remove trailing newline from llvm-config output.\n+                let llvm_version = llvm_version.trim_end();\n                 cmd.arg(\"--llvm-version\").arg(llvm_version);\n             }\n             if !builder.is_rust_llvm(target) {"}, {"sha": "9e8614e3b6d34930fbf9355d9b69d7e73a30d44e", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=374ab25585f0a817fe7bd6986737f12347b12d0b", "patch": "@@ -67,7 +67,11 @@ extern \"C\" void LLVMInitializePasses() {\n }\n \n extern \"C\" void LLVMTimeTraceProfilerInitialize() {\n-#if LLVM_VERSION_GE(9, 0)\n+#if LLVM_VERSION_GE(10, 0)\n+  timeTraceProfilerInitialize(\n+      /* TimeTraceGranularity */ 0,\n+      /* ProcName */ \"rustc\");\n+#elif LLVM_VERSION_GE(9, 0)\n   timeTraceProfilerInitialize();\n #endif\n }"}, {"sha": "799adb418822d7ff409b7e787b6eb8779f814386", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=374ab25585f0a817fe7bd6986737f12347b12d0b", "patch": "@@ -1333,8 +1333,13 @@ extern \"C\" LLVMValueRef LLVMRustBuildMemSet(LLVMBuilderRef B,\n                                             LLVMValueRef Dst, unsigned DstAlign,\n                                             LLVMValueRef Val,\n                                             LLVMValueRef Size, bool IsVolatile) {\n+#if LLVM_VERSION_GE(10, 0)\n+  return wrap(unwrap(B)->CreateMemSet(\n+      unwrap(Dst), unwrap(Val), unwrap(Size), MaybeAlign(DstAlign), IsVolatile));\n+#else\n   return wrap(unwrap(B)->CreateMemSet(\n       unwrap(Dst), unwrap(Val), unwrap(Size), DstAlign, IsVolatile));\n+#endif\n }\n \n extern \"C\" LLVMValueRef"}, {"sha": "00de3de05f07a66baaed0d82f89b2f4c97fa5a00", "filename": "src/test/run-make-fulldeps/target-specs/my-awesome-platform.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-awesome-platform.json", "raw_url": "https://github.com/rust-lang/rust/raw/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-awesome-platform.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-awesome-platform.json?ref=374ab25585f0a817fe7bd6986737f12347b12d0b", "patch": "@@ -1,5 +1,5 @@\n {\n-    \"data-layout\": \"e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128\",\n+    \"data-layout\": \"e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-f64:32:64-f80:32-n8:16:32-S128\",\n     \"linker-flavor\": \"gcc\",\n     \"llvm-target\": \"i686-unknown-linux-gnu\",\n     \"target-endian\": \"little\","}, {"sha": "6d5e964ed4fee41552661577c5ff2157763426b9", "filename": "src/test/run-make-fulldeps/target-specs/my-x86_64-unknown-linux-gnu-platform.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-x86_64-unknown-linux-gnu-platform.json", "raw_url": "https://github.com/rust-lang/rust/raw/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-x86_64-unknown-linux-gnu-platform.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftarget-specs%2Fmy-x86_64-unknown-linux-gnu-platform.json?ref=374ab25585f0a817fe7bd6986737f12347b12d0b", "patch": "@@ -1,6 +1,6 @@\n {\n     \"pre-link-args\": {\"gcc\": [\"-m64\"]},\n-    \"data-layout\": \"e-m:e-i64:64-f80:128-n8:16:32:64-S128\",\n+    \"data-layout\": \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\",\n     \"linker-flavor\": \"gcc\",\n     \"llvm-target\": \"x86_64-unknown-linux-gnu\",\n     \"target-endian\": \"little\","}, {"sha": "cb648db8830ef3fbd06bfd5081d161dcca7a05db", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=374ab25585f0a817fe7bd6986737f12347b12d0b", "patch": "@@ -191,6 +191,7 @@ impl EarlyProps {\n                 return true;\n             }\n             if let Some(ref actual_version) = config.llvm_version {\n+                let actual_version = version_to_int(actual_version);\n                 if line.starts_with(\"min-llvm-version\") {\n                     let min_version = line\n                         .trim_end()\n@@ -199,7 +200,7 @@ impl EarlyProps {\n                         .expect(\"Malformed llvm version directive\");\n                     // Ignore if actual version is smaller the minimum required\n                     // version\n-                    &actual_version[..] < min_version\n+                    actual_version < version_to_int(min_version)\n                 } else if line.starts_with(\"min-system-llvm-version\") {\n                     let min_version = line\n                         .trim_end()\n@@ -208,7 +209,7 @@ impl EarlyProps {\n                         .expect(\"Malformed llvm version directive\");\n                     // Ignore if using system LLVM and actual version\n                     // is smaller the minimum required version\n-                    config.system_llvm && &actual_version[..] < min_version\n+                    config.system_llvm && actual_version < version_to_int(min_version)\n                 } else if line.starts_with(\"ignore-llvm-version\") {\n                     // Syntax is: \"ignore-llvm-version <version1> [- <version2>]\"\n                     let range_components = line\n@@ -219,15 +220,15 @@ impl EarlyProps {\n                         .take(3) // 3 or more = invalid, so take at most 3.\n                         .collect::<Vec<&str>>();\n                     match range_components.len() {\n-                        1 => &actual_version[..] == range_components[0],\n+                        1 => actual_version == version_to_int(range_components[0]),\n                         2 => {\n-                            let v_min = range_components[0];\n-                            let v_max = range_components[1];\n+                            let v_min = version_to_int(range_components[0]);\n+                            let v_max = version_to_int(range_components[1]);\n                             if v_max < v_min {\n                                 panic!(\"Malformed LLVM version range: max < min\")\n                             }\n                             // Ignore if version lies inside of range.\n-                            &actual_version[..] >= v_min && &actual_version[..] <= v_max\n+                            actual_version >= v_min && actual_version <= v_max\n                         }\n                         _ => panic!(\"Malformed LLVM version directive\"),\n                     }\n@@ -238,6 +239,20 @@ impl EarlyProps {\n                 false\n             }\n         }\n+\n+        fn version_to_int(version: &str) -> u32 {\n+            let version_without_suffix = version.split('-').next().unwrap();\n+            let components: Vec<u32> = version_without_suffix\n+                .split('.')\n+                .map(|s| s.parse().expect(\"Malformed version component\"))\n+                .collect();\n+            match components.len() {\n+                1 => components[0] * 10000,\n+                2 => components[0] * 10000 + components[1] * 100,\n+                3 => components[0] * 10000 + components[1] * 100 + components[2],\n+                _ => panic!(\"Malformed version\"),\n+            }\n+        }\n     }\n }\n "}, {"sha": "31d991e0c2f87c9ad0a2e3efe40c3f7bda103ca3", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/374ab25585f0a817fe7bd6986737f12347b12d0b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=374ab25585f0a817fe7bd6986737f12347b12d0b", "patch": "@@ -122,9 +122,8 @@ fn llvm_version() {\n     config.llvm_version = Some(\"9.3.1-rust-1.43.0-dev\".to_owned());\n     assert!(!parse_rs(&config, \"// min-llvm-version 9.2\").ignore);\n \n-    // FIXME.\n-    // config.llvm_version = Some(\"10.0.0-rust\".to_owned());\n-    // assert!(!parse_rs(&config, \"// min-llvm-version 9.0\").ignore);\n+    config.llvm_version = Some(\"10.0.0-rust\".to_owned());\n+    assert!(!parse_rs(&config, \"// min-llvm-version 9.0\").ignore);\n }\n \n #[test]"}]}