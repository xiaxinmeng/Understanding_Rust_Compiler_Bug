{"sha": "022f188a08b11234b2a5fbce3484d233625371c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMmYxODhhMDhiMTEyMzRiMmE1ZmJjZTM0ODRkMjMzNjI1MzcxYzE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-25T03:57:35Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-25T03:57:35Z"}, "message": "Don't ever compress metadata", "tree": {"sha": "ab913e5f8046414ab3c878e787d56704e9570214", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab913e5f8046414ab3c878e787d56704e9570214"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/022f188a08b11234b2a5fbce3484d233625371c1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/022f188a08b11234b2a5fbce3484d233625371c1", "html_url": "https://github.com/rust-lang/rust/commit/022f188a08b11234b2a5fbce3484d233625371c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/022f188a08b11234b2a5fbce3484d233625371c1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39e8cb6df32afcba3de9a146192046400754d4ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/39e8cb6df32afcba3de9a146192046400754d4ea", "html_url": "https://github.com/rust-lang/rust/commit/39e8cb6df32afcba3de9a146192046400754d4ea"}], "stats": {"total": 59, "additions": 7, "deletions": 52}, "files": [{"sha": "a9a41a073d03366291a404187213a417cd608de6", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -107,12 +107,6 @@ else\n   CFG_GCCISH_CFLAGS += -DRUST_NDEBUG\n endif\n \n-ifndef CFG_ENABLE_COMPRESS_METADATA\n-  # XXX: After snapshots extend this to all stages\n-  RUSTFLAGS_STAGE1 += --no-compress-metadata\n-  RUSTFLAGS_STAGE2 += --no-compress-metadata\n-endif\n-\n ifdef SAVE_TEMPS\n   CFG_RUSTC_FLAGS += --save-temps\n endif"}, {"sha": "ed3042a1e71d70e156919e950369f3066920da87", "filename": "configure", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/configure", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -383,7 +383,6 @@ opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n opt pax-flags 0 \"apply PaX flags to rustc binaries (required for GRSecurity/PaX-patched\n  kernels)\"\n-opt compress-metadata 0 \"compress crate metadata\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n valopt local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n valopt llvm-root \"\" \"set LLVM root\""}, {"sha": "dd57be823ab692bb0481fcba73ca08d439b6f51e", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -718,8 +718,6 @@ pub fn build_session_options(binary: @str,\n     let android_cross_path = getopts::opt_maybe_str(\n         matches, \"android-cross-path\");\n \n-    let no_compress_metadata = opt_present(matches, \"no-compress-metadata\");\n-\n     let custom_passes = match getopts::opt_maybe_str(matches, \"passes\") {\n         None => ~[],\n         Some(s) => {\n@@ -755,7 +753,6 @@ pub fn build_session_options(binary: @str,\n         no_trans: no_trans,\n         debugging_opts: debugging_opts,\n         android_cross_path: android_cross_path,\n-        no_compress_metadata: no_compress_metadata\n     };\n     return sopts;\n }\n@@ -873,8 +870,6 @@ pub fn optgroups() -> ~[getopts::groups::OptGroup] {\n                           for details)\", \"FEATURE\"),\n   optopt(\"\", \"android-cross-path\",\n          \"The path to the Android NDK\", \"PATH\"),\n-  optflag(\"\", \"no-compress-metadata\",\n-          \"Do not compress crate metadata (make builds a little faster)\"),\n   optflagopt(\"W\", \"warn\",\n                         \"Set lint warnings\", \"OPT\"),\n   optmulti(\"A\", \"allow\","}, {"sha": "50b29ff16be1a5a456be92758cc2477a24b63af8", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -166,7 +166,6 @@ pub struct options {\n     no_trans: bool,\n     debugging_opts: uint,\n     android_cross_path: Option<~str>,\n-    no_compress_metadata: bool\n }\n \n pub struct crate_metadata {\n@@ -351,7 +350,6 @@ pub fn basic_options() -> @options {\n         no_trans: false,\n         debugging_opts: 0u,\n         android_cross_path: None,\n-        no_compress_metadata: false\n     }\n }\n "}, {"sha": "39ba64c5e26cb8f97d2037237a57f5e290c37449", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -20,7 +20,7 @@ use metadata::decoder;\n use metadata::tydecode::{parse_ty_data, parse_def_id,\n                          parse_type_param_def_data,\n                          parse_bare_fn_ty_data, parse_trait_ref_data};\n-use metadata::loader::{MetadataSection, CopiedSection, UnsafeSection};\n+use metadata::loader::{MetadataSection, UnsafeSection};\n use middle::ty;\n use middle::typeck;\n use middle::astencode::vtable_decoder_helpers;\n@@ -1195,7 +1195,6 @@ pub fn get_crate_attributes(data: MetadataSection) -> ~[ast::Attribute] {\n \n pub fn section_to_ebml_doc(data: MetadataSection) -> ebml::Doc {\n     match data {\n-        CopiedSection(data) => reader::Doc(data),\n         UnsafeSection(_, buf, len) => reader::unsafe_Doc(buf, len)\n     }\n }"}, {"sha": "38d2d3567bb7fc0c79c39199064fa175c4fb700d", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -26,7 +26,6 @@ use std::hashmap::{HashMap, HashSet};\n use std::io;\n use std::str;\n use std::vec;\n-use extra::flate;\n use extra::serialize::Encodable;\n use extra;\n use syntax::abi::AbiSet;\n@@ -64,7 +63,6 @@ pub struct EncodeParams<'self> {\n     cstore: @mut cstore::CStore,\n     encode_inlined_item: encode_inlined_item<'self>,\n     reachable: @mut HashSet<ast::NodeId>,\n-    compress: bool\n }\n \n struct Stats {\n@@ -1595,7 +1593,6 @@ pub fn encode_metadata(parms: EncodeParams, crate: &Crate) -> ~[u8] {\n         encode_inlined_item,\n         link_meta,\n         reachable,\n-        compress,\n         _\n     } = parms;\n     let type_abbrevs = @mut HashMap::new();\n@@ -1681,17 +1678,8 @@ pub fn encode_metadata(parms: EncodeParams, crate: &Crate) -> ~[u8] {\n     wr.write(&[0u8, 0u8, 0u8, 0u8]);\n \n     let writer_bytes: &mut ~[u8] = wr.bytes;\n-    let compression_flag = if compress { [1u8] } else { [0u8] };\n-\n-    if compress {\n-        metadata_encoding_version.to_owned() +\n-            compression_flag.to_owned() +\n-            flate::deflate_bytes(*writer_bytes)\n-    } else {\n-        metadata_encoding_version.to_owned() +\n-            compression_flag.to_owned() +\n-            *writer_bytes\n-    }\n+\n+    return metadata_encoding_version.to_owned() + *writer_bytes;\n }\n \n // Get the encoded string for a type"}, {"sha": "182acc68b1ee56f9009203b0c0eaa91c6f660924", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -32,7 +32,6 @@ use std::os::consts::{macos, freebsd, linux, android, win32};\n use std::ptr;\n use std::str;\n use std::vec;\n-use extra::flate;\n \n pub enum os {\n     os_macos,\n@@ -56,7 +55,8 @@ pub struct Context {\n \n #[deriving(Clone)]\n pub enum MetadataSection {\n-    CopiedSection(@~[u8]),\n+    // A pointer to the object file metadata section, along with\n+    // the ObjectFile handle that keeps it from being destructed\n     UnsafeSection(@ObjectFile, *u8, uint)\n }\n \n@@ -221,7 +221,6 @@ fn get_metadata_section(os: os,\n             if name == read_meta_section_name(os) {\n                 let cbuf = llvm::LLVMGetSectionContents(si.llsi);\n                 let csz = llvm::LLVMGetSectionSize(si.llsi) as uint;\n-                let mut found = None;\n                 let cvbuf: *u8 = cast::transmute(cbuf);\n                 let vlen = encoder::metadata_encoding_version.len();\n                 debug!(\"checking %u bytes of metadata-version stamp\",\n@@ -234,25 +233,9 @@ fn get_metadata_section(os: os,\n                 }\n                 if !version_ok { return None; }\n \n-                assert!(csz >= vlen + 1);\n+                let cvbuf1 = ptr::offset(cvbuf, vlen as int);\n \n-                let must_decompress = *ptr::offset(cvbuf, vlen as int) == 1;\n-                let cvbuf1 = ptr::offset(cvbuf, vlen as int + 1);\n-\n-                if must_decompress {\n-                    do vec::raw::buf_as_slice(cvbuf1, csz-vlen-1) |bytes| {\n-                        debug!(\"inflating %u bytes of compressed metadata\",\n-                               csz - vlen);\n-                        let inflated = flate::inflate_bytes(bytes);\n-                        found = Some(CopiedSection(@inflated));\n-                    }\n-                } else {\n-                    found = Some(UnsafeSection(of, cvbuf1, csz-vlen-1))\n-                }\n-\n-                if !found.is_none() {\n-                    return found;\n-                }\n+                return Some(UnsafeSection(of, cvbuf1, csz-vlen))\n             }\n             llvm::LLVMMoveToNextSection(si.llsi);\n         }"}, {"sha": "f19decaa38cde1b9f7e37d6eb9a4860c5ec3c150", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022f188a08b11234b2a5fbce3484d233625371c1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=022f188a08b11234b2a5fbce3484d233625371c1", "patch": "@@ -2907,7 +2907,6 @@ pub fn crate_ctxt_to_encode_parms<'r>(cx: &'r CrateContext, ie: encoder::encode_\n             cstore: cx.sess.cstore,\n             encode_inlined_item: ie,\n             reachable: cx.reachable,\n-            compress: !cx.sess.opts.no_compress_metadata\n         }\n }\n "}]}