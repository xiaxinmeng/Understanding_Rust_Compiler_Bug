{"sha": "35b5157db591539ffe8acaaae3438cc1d3ed9619", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YjUxNTdkYjU5MTUzOWZmZThhY2FhYWUzNDM4Y2MxZDNlZDk2MTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-18T11:36:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-18T11:36:47Z"}, "message": "Auto merge of #68170 - wesleywiser:stop_const_prop_ref_taking, r=oli-obk\n\nTurn off const propagation of ref taking\n\nFixes #67529\nFixes #67640\nFixes #67641\nFixes #67862\n\nr? @oli-obk", "tree": {"sha": "8bf417a7ee94565eeecd1fc242cd964b00d60bd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bf417a7ee94565eeecd1fc242cd964b00d60bd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35b5157db591539ffe8acaaae3438cc1d3ed9619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35b5157db591539ffe8acaaae3438cc1d3ed9619", "html_url": "https://github.com/rust-lang/rust/commit/35b5157db591539ffe8acaaae3438cc1d3ed9619", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35b5157db591539ffe8acaaae3438cc1d3ed9619/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b117d75461282617d13b66b0b64425fe0efb9ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b117d75461282617d13b66b0b64425fe0efb9ff", "html_url": "https://github.com/rust-lang/rust/commit/1b117d75461282617d13b66b0b64425fe0efb9ff"}, {"sha": "7f65475d00c9a3048d0d664a80314734a8c6989e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f65475d00c9a3048d0d664a80314734a8c6989e", "html_url": "https://github.com/rust-lang/rust/commit/7f65475d00c9a3048d0d664a80314734a8c6989e"}], "stats": {"total": 104, "additions": 82, "deletions": 22}, "files": [{"sha": "3afc7290ca9c84c26a12b235313208557147d25b", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=35b5157db591539ffe8acaaae3438cc1d3ed9619", "patch": "@@ -636,28 +636,11 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                 self.check_binary_op(*op, left, right, source_info, place_layout, overflow_check)?;\n             }\n \n-            // Work around: avoid ICE in miri. FIXME(wesleywiser)\n-            // The Miri engine ICEs when taking a reference to an uninitialized unsized\n-            // local. There's nothing it can do here: taking a reference needs an allocation\n-            // which needs to know the size. Normally that's okay as during execution\n-            // (e.g. for CTFE) it can never happen. But here in const_prop\n-            // unknown data is uninitialized, so if e.g. a function argument is unsized\n-            // and has a reference taken, we get an ICE.\n+            // Do not try creating references (#67862)\n             Rvalue::Ref(_, _, place_ref) => {\n-                trace!(\"checking Ref({:?})\", place_ref);\n+                trace!(\"skipping Ref({:?})\", place_ref);\n \n-                if let Some(local) = place_ref.as_local() {\n-                    let alive = if let LocalValue::Live(_) = self.ecx.frame().locals[local].value {\n-                        true\n-                    } else {\n-                        false\n-                    };\n-\n-                    if !alive {\n-                        trace!(\"skipping Ref({:?}) to uninitialized local\", place);\n-                        return None;\n-                    }\n-                }\n+                return None;\n             }\n \n             _ => {}"}, {"sha": "ca539fb7462a5eb176eabc7eef5686632748c428", "filename": "src/test/mir-opt/const_prop/ref_deref_project.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs?ref=35b5157db591539ffe8acaaae3438cc1d3ed9619", "patch": "@@ -1,5 +1,5 @@\n fn main() {\n-    *(&(4, 5).1);\n+    *(&(4, 5).1); // This does not currently propagate (#67862)\n }\n \n // END RUST SOURCE\n@@ -35,7 +35,7 @@ fn main() {\n //     ...\n //     _4 = const main::promoted[0];\n //     _2 = &((*_4).1: i32);\n-//     _1 = const 5i32;\n+//     _1 = (*_2);\n //     ...\n // }\n // END rustc.main.ConstProp.after.mir"}, {"sha": "df4bc668bee176d5276bd3e0cd599003f9fcecec", "filename": "src/test/ui/consts/issue-67529.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67529.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67529.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67529.rs?ref=35b5157db591539ffe8acaaae3438cc1d3ed9619", "patch": "@@ -0,0 +1,11 @@\n+// compile-flags: -Z mir-opt-level=2\n+// run-pass\n+\n+struct Baz<T: ?Sized> {\n+    a: T\n+}\n+\n+fn main() {\n+    let d : Baz<[i32; 4]> = Baz { a: [1,2,3,4] };\n+    assert_eq!([1, 2, 3, 4], d.a);\n+}"}, {"sha": "bc0ee8d386f0abb5df23d76b456406c4bbaca22a", "filename": "src/test/ui/consts/issue-67640.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67640.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67640.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67640.rs?ref=35b5157db591539ffe8acaaae3438cc1d3ed9619", "patch": "@@ -0,0 +1,24 @@\n+// compile-flags: -Z mir-opt-level=3\n+// run-pass\n+\n+struct X {\n+    x: isize\n+}\n+\n+fn f1(a: &mut X, b: &mut isize, c: isize) -> isize {\n+    let r = a.x + *b + c;\n+    a.x = 0;\n+    *b = 10;\n+    return r;\n+}\n+\n+fn f2<F>(a: isize, f: F) -> isize where F: FnOnce(isize) { f(1); return a; }\n+\n+pub fn main() {\n+    let mut a = X {x: 1};\n+    let mut b = 2;\n+    let c = 3;\n+    assert_eq!(f1(&mut a, &mut b, c), 6);\n+    assert_eq!(a.x, 0);\n+    assert_eq!(f2(a.x, |_| a.x = 50), 0);\n+}"}, {"sha": "f50fba287a2311c9a8483788ba242a3b0735449b", "filename": "src/test/ui/consts/issue-67641.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67641.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67641.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67641.rs?ref=35b5157db591539ffe8acaaae3438cc1d3ed9619", "patch": "@@ -0,0 +1,24 @@\n+// compile-flags: -Z mir-opt-level=2\n+// run-pass\n+\n+use std::cell::Cell;\n+\n+#[derive(Debug)]\n+struct B<'a> {\n+    a: [Cell<Option<&'a B<'a>>>; 2]\n+}\n+\n+impl<'a> B<'a> {\n+    fn new() -> B<'a> {\n+        B { a: [Cell::new(None), Cell::new(None)] }\n+    }\n+}\n+\n+fn f() {\n+    let b2 = B::new();\n+    b2.a[0].set(Some(&b2));\n+}\n+\n+fn main() {\n+    f();\n+}"}, {"sha": "84f72154d262f8815a6aec5675a5a74b92c0fe2b", "filename": "src/test/ui/consts/issue-67862.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67862.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b5157db591539ffe8acaaae3438cc1d3ed9619/src%2Ftest%2Fui%2Fconsts%2Fissue-67862.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67862.rs?ref=35b5157db591539ffe8acaaae3438cc1d3ed9619", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: -Z mir-opt-level=2\n+// run-pass\n+\n+fn e220() -> (i64, i64) {\n+    #[inline(never)]\n+    fn get_displacement() -> [i64; 2] {\n+        [139776, 963904]\n+    }\n+\n+    let res = get_displacement();\n+    match (&res[0], &res[1]) {\n+        (arg0, arg1) => (*arg0, *arg1),\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(e220(), (139776, 963904));\n+}"}]}