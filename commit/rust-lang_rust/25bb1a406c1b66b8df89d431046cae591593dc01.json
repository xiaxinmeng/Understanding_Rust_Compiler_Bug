{"sha": "25bb1a406c1b66b8df89d431046cae591593dc01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YmIxYTQwNmMxYjY2YjhkZjg5ZDQzMTA0NmNhZTU5MTU5M2RjMDE=", "commit": {"author": {"name": "Guillaume Pinot", "email": "texitoi@texitoi.eu", "date": "2013-12-01T17:19:39Z"}, "committer": {"name": "Guillaume Pinot", "email": "texitoi@texitoi.eu", "date": "2013-12-02T07:58:07Z"}, "message": "rename MutableVector::mut_split(at) to MutableVector::mut_split_at(at)", "tree": {"sha": "f64a85d0212db5b6150ddfaaac57fab033b6f572", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f64a85d0212db5b6150ddfaaac57fab033b6f572"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25bb1a406c1b66b8df89d431046cae591593dc01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25bb1a406c1b66b8df89d431046cae591593dc01", "html_url": "https://github.com/rust-lang/rust/commit/25bb1a406c1b66b8df89d431046cae591593dc01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25bb1a406c1b66b8df89d431046cae591593dc01/comments", "author": {"login": "TeXitoi", "id": 5787066, "node_id": "MDQ6VXNlcjU3ODcwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5787066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TeXitoi", "html_url": "https://github.com/TeXitoi", "followers_url": "https://api.github.com/users/TeXitoi/followers", "following_url": "https://api.github.com/users/TeXitoi/following{/other_user}", "gists_url": "https://api.github.com/users/TeXitoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TeXitoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TeXitoi/subscriptions", "organizations_url": "https://api.github.com/users/TeXitoi/orgs", "repos_url": "https://api.github.com/users/TeXitoi/repos", "events_url": "https://api.github.com/users/TeXitoi/events{/privacy}", "received_events_url": "https://api.github.com/users/TeXitoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TeXitoi", "id": 5787066, "node_id": "MDQ6VXNlcjU3ODcwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5787066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TeXitoi", "html_url": "https://github.com/TeXitoi", "followers_url": "https://api.github.com/users/TeXitoi/followers", "following_url": "https://api.github.com/users/TeXitoi/following{/other_user}", "gists_url": "https://api.github.com/users/TeXitoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TeXitoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TeXitoi/subscriptions", "organizations_url": "https://api.github.com/users/TeXitoi/orgs", "repos_url": "https://api.github.com/users/TeXitoi/repos", "events_url": "https://api.github.com/users/TeXitoi/events{/privacy}", "received_events_url": "https://api.github.com/users/TeXitoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61443dc1f5089df637edba83587b9f3020063266", "url": "https://api.github.com/repos/rust-lang/rust/commits/61443dc1f5089df637edba83587b9f3020063266", "html_url": "https://github.com/rust-lang/rust/commit/61443dc1f5089df637edba83587b9f3020063266"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "2274db6c63df4145c52f6b762b951c1e43829642", "filename": "src/libextra/ringbuf.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1a406c1b66b8df89d431046cae591593dc01/src%2Flibextra%2Fringbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1a406c1b66b8df89d431046cae591593dc01/src%2Flibextra%2Fringbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fringbuf.rs?ref=25bb1a406c1b66b8df89d431046cae591593dc01", "patch": "@@ -207,14 +207,14 @@ impl<T> RingBuf<T> {\n             //    start_index to self.elts.len()\n             // and then\n             //    0 to end_index\n-            let (temp, remaining1) = self.elts.mut_split(start_index);\n-            let (remaining2, _) = temp.mut_split(end_index);\n+            let (temp, remaining1) = self.elts.mut_split_at(start_index);\n+            let (remaining2, _) = temp.mut_split_at(end_index);\n             RingBufMutIterator { remaining1: remaining1,\n                                  remaining2: remaining2,\n                                  nelts: self.nelts }\n         } else {\n             // Items to iterate goes from start_index to end_index:\n-            let (empty, elts) = self.elts.mut_split(0);\n+            let (empty, elts) = self.elts.mut_split_at(0);\n             let remaining1 = elts.mut_slice(start_index, end_index);\n             RingBufMutIterator { remaining1: remaining1,\n                                  remaining2: empty,"}, {"sha": "5bd75dbdbd89ff016dff1b68d8d1ab9720f03edf", "filename": "src/librustc/middle/borrowck/doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1a406c1b66b8df89d431046cae591593dc01/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1a406c1b66b8df89d431046cae591593dc01/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fdoc.rs?ref=25bb1a406c1b66b8df89d431046cae591593dc01", "patch": "@@ -666,8 +666,8 @@ The current rules could use some correction:\n    function will fail to compile:\n \n        fn mut_shift_ref<'a,T>(x: &mut &'a mut [T]) -> &'a mut T {\n-           // `mut_split` will restrict mutation against *x:\n-           let (head, tail) = (*x).mut_split(1);\n+           // `mut_split_at` will restrict mutation against *x:\n+           let (head, tail) = (*x).mut_split_at(1);\n \n            // Hence mutating `*x` yields an error here:\n            *x = tail;"}, {"sha": "8cbdcbb36260bb03750d1dce9d81dfce12b0af7a", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1a406c1b66b8df89d431046cae591593dc01/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1a406c1b66b8df89d431046cae591593dc01/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=25bb1a406c1b66b8df89d431046cae591593dc01", "patch": "@@ -1995,7 +1995,7 @@ pub trait MutableVector<'self, T> {\n      * itself) and the second will contain all indices from\n      * `mid..len` (excluding the index `len` itself).\n      */\n-    fn mut_split(self, mid: uint) -> (&'self mut [T],\n+    fn mut_split_at(self, mid: uint) -> (&'self mut [T],\n                                       &'self mut [T]);\n \n     /// Reverse the order of elements in a vector, in place\n@@ -2052,7 +2052,7 @@ impl<'self,T> MutableVector<'self, T> for &'self mut [T] {\n     }\n \n     #[inline]\n-    fn mut_split(self, mid: uint) -> (&'self mut [T], &'self mut [T]) {\n+    fn mut_split_at(self, mid: uint) -> (&'self mut [T], &'self mut [T]) {\n         unsafe {\n             let len = self.len();\n             let self2: &'self mut [T] = cast::transmute_copy(&self);\n@@ -2592,7 +2592,7 @@ impl<'self, T> Iterator<&'self mut [T]> for MutChunkIter<'self, T> {\n         } else {\n             let sz = cmp::min(self.remaining, self.chunk_size);\n             let tmp = util::replace(&mut self.v, &mut []);\n-            let (head, tail) = tmp.mut_split(sz);\n+            let (head, tail) = tmp.mut_split_at(sz);\n             self.v = tail;\n             self.remaining -= sz;\n             Some(head)\n@@ -2620,7 +2620,7 @@ impl<'self, T> DoubleEndedIterator<&'self mut [T]> for MutChunkIter<'self, T> {\n             let remainder = self.remaining % self.chunk_size;\n             let sz = if remainder != 0 { remainder } else { self.chunk_size };\n             let tmp = util::replace(&mut self.v, &mut []);\n-            let (head, tail) = tmp.mut_split(self.remaining - sz);\n+            let (head, tail) = tmp.mut_split_at(self.remaining - sz);\n             self.v = head;\n             self.remaining -= sz;\n             Some(tail)\n@@ -3898,10 +3898,10 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_mut_split() {\n+    fn test_mut_split_at() {\n         let mut values = [1u8,2,3,4,5];\n         {\n-            let (left, right) = values.mut_split(2);\n+            let (left, right) = values.mut_split_at(2);\n             assert_eq!(left.slice(0, left.len()), [1, 2]);\n             for p in left.mut_iter() {\n                 *p += 1;"}]}