{"sha": "dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYjhjMGFiMjhjMzE3ZjdiOWUzNTBhMGJhODRmZDUxNzg3Zjg0ZDY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-05-13T15:46:38Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-05-15T21:09:15Z"}, "message": "Fix stability annotations for already stable bits of proc macro API 1.1\n\nRemove unnecessary proc-macro-related `feature`s", "tree": {"sha": "aa8949d9587d2bc785387b6fdfacab0033bd8ad1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa8949d9587d2bc785387b6fdfacab0033bd8ad1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "html_url": "https://github.com/rust-lang/rust/commit/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1061254317ac747d2bf5901329545f4cec5ebcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1061254317ac747d2bf5901329545f4cec5ebcb", "html_url": "https://github.com/rust-lang/rust/commit/c1061254317ac747d2bf5901329545f4cec5ebcb"}], "stats": {"total": 89, "additions": 41, "deletions": 48}, "files": [{"sha": "610a9a2a39486580743152b98967c55d6061ccba", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -73,9 +73,9 @@ use syntax_pos::hygiene::Mark;\n #[derive(Clone)]\n pub struct TokenStream(tokenstream::TokenStream);\n \n-#[unstable(feature = \"proc_macro\", issue = \"38356\")]\n+#[stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n impl !Send for TokenStream {}\n-#[unstable(feature = \"proc_macro\", issue = \"38356\")]\n+#[stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n impl !Sync for TokenStream {}\n \n /// Error returned from `TokenStream::from_str`.\n@@ -85,9 +85,9 @@ pub struct LexError {\n     _inner: (),\n }\n \n-#[unstable(feature = \"proc_macro\", issue = \"38356\")]\n+#[stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n impl !Send for LexError {}\n-#[unstable(feature = \"proc_macro\", issue = \"38356\")]\n+#[stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n impl !Sync for LexError {}\n \n impl TokenStream {\n@@ -167,7 +167,7 @@ impl iter::FromIterator<TokenTree> for TokenStream {\n \n /// A \"flattening\" operation on token streams, collects token trees\n /// from multiple token streams into a single stream.\n-#[unstable(feature = \"proc_macro\", issue = \"38356\")]\n+#[stable(feature = \"proc_macro_lib\", since = \"1.15.0\")]\n impl iter::FromIterator<TokenStream> for TokenStream {\n     fn from_iter<I: IntoIterator<Item = TokenStream>>(streams: I) -> Self {\n         let mut builder = tokenstream::TokenStreamBuilder::new();"}, {"sha": "e1a7ffaa26cb7851a3b31117fc7a299b78806661", "filename": "src/test/compile-fail-fulldeps/proc-macro/auxiliary/issue_38586.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fauxiliary%2Fissue_38586.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,6 @@\n // force-host\n // no-prefer-dynamic\n \n-#![feature(proc_macro, proc_macro_lib)]\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro;"}, {"sha": "2d843d0e466525784b466b8125b6df32d2079c26", "filename": "src/test/compile-fail-fulldeps/proc-macro/issue-38586.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-38586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-38586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fissue-38586.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,8 +11,6 @@\n // aux-build:issue_38586.rs\n // ignore-stage1\n \n-#![feature(proc_macro)]\n-\n #[macro_use]\n extern crate issue_38586;\n "}, {"sha": "98e50183097cce111dae113a677ad97defa18c50", "filename": "src/test/compile-fail-fulldeps/proc-macro/lints_in_proc_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Flints_in_proc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Flints_in_proc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Flints_in_proc_macros.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:bang_proc_macro2.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, proc_macro_non_items)]\n #![allow(unused_macros)]\n \n extern crate bang_proc_macro2;"}, {"sha": "be5b8c39f1ddecc802971392ee759e376459916b", "filename": "src/test/compile-fail-fulldeps/proc-macro/macro-use-bang.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fmacro-use-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fmacro-use-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fmacro-use-bang.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:bang_proc_macro.rs\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(proc_macro_non_items)]\n \n #[macro_use]\n extern crate bang_proc_macro;"}, {"sha": "ef6d4557f4cd746f7b59c6e107739929469fd91f", "filename": "src/test/compile-fail-fulldeps/proc-macro/proc-macro-gates2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates2.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:proc-macro-gates.rs\n \n-#![feature(proc_macro, stmt_expr_attributes)]\n+#![feature(use_extern_macros, stmt_expr_attributes)]\n \n extern crate proc_macro_gates as foo;\n "}, {"sha": "ec6f54fb1378f4d703bf1cb33edec5b78da1f725", "filename": "src/test/run-pass-fulldeps/auxiliary/cond_plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -33,7 +33,7 @@ pub fn cond(input: TokenStream) -> TokenStream {\n             panic!(\"Invalid macro usage in cond: {}\", cond);\n         }\n         let is_else = match test {\n-            TokenTree::Ident(word) => &*word.to_string() == \"else\",\n+            TokenTree::Ident(ref word) => &*word.to_string() == \"else\",\n             _ => false,\n         };\n         conds.push(if is_else || input.peek().is_none() {"}, {"sha": "f026d8e2365d9953ebc1b07ca2e6a88bf87379fe", "filename": "src/test/run-pass-fulldeps/auxiliary/hello_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fhello_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fhello_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fhello_macro.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro, proc_macro_lib, proc_macro_non_items)]\n+#![feature(proc_macro, proc_macro_non_items)]\n \n extern crate proc_macro;\n "}, {"sha": "9a5bffb92a4937112106c1fc937781d858df5d29", "filename": "src/test/run-pass-fulldeps/auxiliary/proc_macro_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro, proc_macro_lib, proc_macro_non_items)]\n+#![feature(proc_macro, proc_macro_non_items)]\n \n extern crate proc_macro;\n "}, {"sha": "f1dcec8af6906a5478fabcce97cc7a8c58a690fe", "filename": "src/test/run-pass-fulldeps/macro-quote-cond.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-cond.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:cond_plugin.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, proc_macro_non_items)]\n \n extern crate cond_plugin;\n "}, {"sha": "1f6a340c7e88bd93ace0b5e1b880cbc7a37581f2", "filename": "src/test/run-pass-fulldeps/macro-quote-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-test.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -13,7 +13,7 @@\n // aux-build:hello_macro.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, proc_macro_non_items)]\n \n extern crate hello_macro;\n "}, {"sha": "2b413579a9a0f4387ff64e9f5679db2101b050e5", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/derive-attr-cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-attr-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-attr-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-attr-cfg.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // no-prefer-dynamic\n-#![feature(proc_macro)]\n+\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro;"}, {"sha": "bac6524847a887f30f68918e2d398df5cee80a0f", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/hygiene_example.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(proc_macro)]\n+#![feature(use_extern_macros)]\n \n extern crate hygiene_example_codegen;\n "}, {"sha": "f9d17a9decbb6b5134775e8f0ca018dfdfb9f02f", "filename": "src/test/run-pass-fulldeps/proc-macro/bang-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fbang-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fbang-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fbang-macro.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:bang-macro.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, proc_macro_non_items)]\n \n extern crate bang_macro;\n use bang_macro::rewrite;"}, {"sha": "f4a51d0624ae6152af9ed255e8abda7eb365d3ba", "filename": "src/test/run-pass-fulldeps/proc-macro/count_compound_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcount_compound_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcount_compound_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcount_compound_ops.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:count_compound_ops.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, proc_macro_non_items)]\n \n extern crate count_compound_ops;\n use count_compound_ops::count_compound_ops;"}, {"sha": "6ef23bc772b5c26ab5cbce89ba9dfb1f2bcff5fe", "filename": "src/test/run-pass-fulldeps/proc-macro/derive-attr-cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-attr-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-attr-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-attr-cfg.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:derive-attr-cfg.rs\n // ignore-stage1\n \n-#![feature(proc_macro)]\n+#![feature(use_extern_macros)]\n \n extern crate derive_attr_cfg;\n use derive_attr_cfg::Foo;"}, {"sha": "5ee164415a1a583770f2f6aa1a21e674483e27e3", "filename": "src/test/run-pass-fulldeps/proc-macro/hygiene_example.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -12,7 +12,7 @@\n // aux-build:hygiene_example.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, proc_macro_non_items)]\n \n extern crate hygiene_example;\n use hygiene_example::hello;"}, {"sha": "5b7d8c2b05b69123bcf4c6d3929ba9225070d7b3", "filename": "src/test/run-pass-fulldeps/proc-macro/issue-39889.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fissue-39889.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fissue-39889.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fissue-39889.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:issue-39889.rs\n // ignore-stage1\n \n-#![feature(proc_macro)]\n+#![feature(use_extern_macros)]\n #![allow(unused)]\n \n extern crate issue_39889;"}, {"sha": "b828199883fa081108077eb6560e0d191a858fe5", "filename": "src/test/run-pass-fulldeps/proc-macro/issue-40001.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fissue-40001.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fissue-40001.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fissue-40001.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:issue-40001-plugin.rs\n // ignore-stage1\n \n-#![feature(proc_macro, plugin)]\n+#![feature(plugin)]\n #![plugin(issue_40001_plugin)]\n \n #[whitelisted_attr]"}, {"sha": "a793d069d1448b8551eca130d8258daaf4a55d1a", "filename": "src/test/run-pass-fulldeps/proc-macro/negative-token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fnegative-token.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fnegative-token.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fnegative-token.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:negative-token.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(proc_macro_non_items)]\n \n extern crate negative_token;\n "}, {"sha": "735e088b82a50354f72812dcda1e4949fb7d5522", "filename": "src/test/run-pass-fulldeps/proc-macro/span-api-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fspan-api-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fspan-api-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fspan-api-tests.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -13,7 +13,7 @@\n \n // ignore-pretty\n \n-#![feature(proc_macro)]\n+#![feature(use_extern_macros)]\n \n #[macro_use]\n extern crate span_test_macros;"}, {"sha": "7be909c3c9e87f6a4322719fa241f0a3fe989fc8", "filename": "src/test/ui-fulldeps/custom-derive/auxiliary/plugin.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fauxiliary%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fauxiliary%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fauxiliary%2Fplugin.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,6 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro, proc_macro_lib)]\n \n extern crate proc_macro;\n "}, {"sha": "5ec79a5520009a27c7801afd12a7925d86adcb6f", "filename": "src/test/ui-fulldeps/custom-derive/issue-36935.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,8 +11,6 @@\n // aux-build:plugin.rs\n // ignore-stage1\n \n-#![feature(proc_macro)]\n-\n #[macro_use] extern crate plugin;\n \n #[derive(Foo, Bar)] //~ ERROR proc-macro derive panicked"}, {"sha": "ecbe0a9a0c079e04e655428c9bb136c7b5546ab2", "filename": "src/test/ui-fulldeps/custom-derive/issue-36935.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcustom-derive%2Fissue-36935.stderr?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -1,5 +1,5 @@\n error: proc-macro derive panicked\n-  --> $DIR/issue-36935.rs:18:15\n+  --> $DIR/issue-36935.rs:16:15\n    |\n LL | #[derive(Foo, Bar)] //~ ERROR proc-macro derive panicked\n    |               ^^^"}, {"sha": "576c156c1059e01c7fc6e36b050eef6e4f93bffc", "filename": "src/test/ui-fulldeps/invalid-punct-ident-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-1.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:invalid-punct-ident.rs\n-#![feature(proc_macro)]\n+\n #[macro_use]\n extern crate invalid_punct_ident;\n "}, {"sha": "874a7d169d19dceec39638732336ab5e16198b00", "filename": "src/test/ui-fulldeps/invalid-punct-ident-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-2.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:invalid-punct-ident.rs\n-#![feature(proc_macro)]\n+\n #[macro_use]\n extern crate invalid_punct_ident;\n "}, {"sha": "f73bf500545d52f08032bbdfd53417dae40d0a52", "filename": "src/test/ui-fulldeps/invalid-punct-ident-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-3.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:invalid-punct-ident.rs\n-#![feature(proc_macro)]\n+\n #[macro_use]\n extern crate invalid_punct_ident;\n "}, {"sha": "1e93c69c6502c3dc840d94d1553c268f1e695314", "filename": "src/test/ui-fulldeps/invalid-punct-ident-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finvalid-punct-ident-4.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:invalid-punct-ident.rs\n-#![feature(proc_macro)]\n+\n #[macro_use]\n extern crate invalid_punct_ident;\n "}, {"sha": "8dfb9cb4fb751b6e971fa4d24379b36597db4b6a", "filename": "src/test/ui-fulldeps/proc-macro/auxiliary/three-equals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fthree-equals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fthree-equals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fthree-equals.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -27,7 +27,7 @@ fn parse(input: TokenStream) -> Result<(), Diagnostic> {\n                            .help(\"input must be: `===`\"))\n         }\n \n-        if let TokenTree::Punct(tt) = tree {\n+        if let TokenTree::Punct(ref tt) = tree {\n             if tt.as_char() == '=' {\n                 count += 1;\n                 last_span = span;"}, {"sha": "a60841d848c16363ac56f08e03cd04abf7d2e858", "filename": "src/test/ui-fulldeps/proc-macro/parent-source-spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fparent-source-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fparent-source-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fparent-source-spans.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:parent-source-spans.rs\n // ignore-stage1\n \n-#![feature(proc_macro, decl_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, decl_macro, proc_macro_non_items)]\n \n extern crate parent_source_spans;\n "}, {"sha": "ee5f3b33a0648c739473f33c12a4aac83985a6cd", "filename": "src/test/ui-fulldeps/proc-macro/three-equals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fthree-equals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fthree-equals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fthree-equals.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -11,7 +11,7 @@\n // aux-build:three-equals.rs\n // ignore-stage1\n \n-#![feature(proc_macro, proc_macro_non_items)]\n+#![feature(use_extern_macros, proc_macro_non_items)]\n \n extern crate three_equals;\n "}, {"sha": "9cc825fcddd7afad40c7cdcf1e1cda99a4dd1f72", "filename": "src/test/ui-fulldeps/resolve-error.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fresolve-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fresolve-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fresolve-error.rs?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -14,7 +14,6 @@\n // aux-build:bang_proc_macro.rs\n \n #![feature(proc_macro)]\n-#![allow(unused_macros)]\n \n #[macro_use]\n extern crate derive_foo;"}, {"sha": "caa7966461487211532de3f7e9d41194b2c283bf", "filename": "src/test/ui-fulldeps/resolve-error.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fresolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dab8c0ab28c317f7b9e350a0ba84fd51787f84d6/src%2Ftest%2Fui-fulldeps%2Fresolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fresolve-error.stderr?ref=dab8c0ab28c317f7b9e350a0ba84fd51787f84d6", "patch": "@@ -1,59 +1,59 @@\n error: cannot find derive macro `FooWithLongNan` in this scope\n-  --> $DIR/resolve-error.rs:37:10\n+  --> $DIR/resolve-error.rs:36:10\n    |\n LL | #[derive(FooWithLongNan)]\n    |          ^^^^^^^^^^^^^^ help: try: `FooWithLongName`\n \n error: cannot find attribute macro `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:41:3\n+  --> $DIR/resolve-error.rs:40:3\n    |\n LL | #[attr_proc_macra]\n    |   ^^^^^^^^^^^^^^^ help: try: `attr_proc_macro`\n \n error: cannot find attribute macro `FooWithLongNan` in this scope\n-  --> $DIR/resolve-error.rs:45:3\n+  --> $DIR/resolve-error.rs:44:3\n    |\n LL | #[FooWithLongNan]\n    |   ^^^^^^^^^^^^^^\n \n error: cannot find derive macro `Dlone` in this scope\n-  --> $DIR/resolve-error.rs:49:10\n+  --> $DIR/resolve-error.rs:48:10\n    |\n LL | #[derive(Dlone)]\n    |          ^^^^^ help: try: `Clone`\n \n error: cannot find derive macro `Dlona` in this scope\n-  --> $DIR/resolve-error.rs:53:10\n+  --> $DIR/resolve-error.rs:52:10\n    |\n LL | #[derive(Dlona)]\n    |          ^^^^^ help: try: `Clona`\n \n error: cannot find derive macro `attr_proc_macra` in this scope\n-  --> $DIR/resolve-error.rs:57:10\n+  --> $DIR/resolve-error.rs:56:10\n    |\n LL | #[derive(attr_proc_macra)]\n    |          ^^^^^^^^^^^^^^^\n \n error: cannot find macro `FooWithLongNama!` in this scope\n-  --> $DIR/resolve-error.rs:62:5\n+  --> $DIR/resolve-error.rs:61:5\n    |\n LL |     FooWithLongNama!();\n    |     ^^^^^^^^^^^^^^^ help: you could try the macro: `FooWithLongNam`\n \n error: cannot find macro `attr_proc_macra!` in this scope\n-  --> $DIR/resolve-error.rs:65:5\n+  --> $DIR/resolve-error.rs:64:5\n    |\n LL |     attr_proc_macra!();\n    |     ^^^^^^^^^^^^^^^ help: you could try the macro: `attr_proc_mac`\n \n error: cannot find macro `Dlona!` in this scope\n-  --> $DIR/resolve-error.rs:68:5\n+  --> $DIR/resolve-error.rs:67:5\n    |\n LL |     Dlona!();\n    |     ^^^^^\n \n error: cannot find macro `bang_proc_macrp!` in this scope\n-  --> $DIR/resolve-error.rs:71:5\n+  --> $DIR/resolve-error.rs:70:5\n    |\n LL |     bang_proc_macrp!();\n    |     ^^^^^^^^^^^^^^^ help: you could try the macro: `bang_proc_macro`"}]}