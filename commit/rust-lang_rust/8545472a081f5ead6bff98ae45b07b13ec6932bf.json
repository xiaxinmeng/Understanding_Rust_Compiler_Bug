{"sha": "8545472a081f5ead6bff98ae45b07b13ec6932bf", "node_id": "C_kwDOAAsO6NoAKDg1NDU0NzJhMDgxZjVlYWQ2YmZmOThhZTQ1YjA3YjEzZWM2OTMyYmY", "commit": {"author": {"name": "Clemens Wasser", "email": "clemens.wasser@gmail.com", "date": "2021-10-09T16:51:30Z"}, "committer": {"name": "Clemens Wasser", "email": "clemens.wasser@gmail.com", "date": "2021-10-09T16:56:01Z"}, "message": "Apply clippy suggestions", "tree": {"sha": "896d295f861688a8156d7ed16a2ff4c22538c345", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/896d295f861688a8156d7ed16a2ff4c22538c345"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8545472a081f5ead6bff98ae45b07b13ec6932bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8545472a081f5ead6bff98ae45b07b13ec6932bf", "html_url": "https://github.com/rust-lang/rust/commit/8545472a081f5ead6bff98ae45b07b13ec6932bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8545472a081f5ead6bff98ae45b07b13ec6932bf/comments", "author": {"login": "clemenswasser", "id": 26170289, "node_id": "MDQ6VXNlcjI2MTcwMjg5", "avatar_url": "https://avatars.githubusercontent.com/u/26170289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clemenswasser", "html_url": "https://github.com/clemenswasser", "followers_url": "https://api.github.com/users/clemenswasser/followers", "following_url": "https://api.github.com/users/clemenswasser/following{/other_user}", "gists_url": "https://api.github.com/users/clemenswasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/clemenswasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clemenswasser/subscriptions", "organizations_url": "https://api.github.com/users/clemenswasser/orgs", "repos_url": "https://api.github.com/users/clemenswasser/repos", "events_url": "https://api.github.com/users/clemenswasser/events{/privacy}", "received_events_url": "https://api.github.com/users/clemenswasser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clemenswasser", "id": 26170289, "node_id": "MDQ6VXNlcjI2MTcwMjg5", "avatar_url": "https://avatars.githubusercontent.com/u/26170289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clemenswasser", "html_url": "https://github.com/clemenswasser", "followers_url": "https://api.github.com/users/clemenswasser/followers", "following_url": "https://api.github.com/users/clemenswasser/following{/other_user}", "gists_url": "https://api.github.com/users/clemenswasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/clemenswasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clemenswasser/subscriptions", "organizations_url": "https://api.github.com/users/clemenswasser/orgs", "repos_url": "https://api.github.com/users/clemenswasser/repos", "events_url": "https://api.github.com/users/clemenswasser/events{/privacy}", "received_events_url": "https://api.github.com/users/clemenswasser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15491d7b6be1065217e09bd735e4ecffbe9838ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/15491d7b6be1065217e09bd735e4ecffbe9838ba", "html_url": "https://github.com/rust-lang/rust/commit/15491d7b6be1065217e09bd735e4ecffbe9838ba"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "2864e94f60f2c82ca542ac8fa890701bc340a0a9", "filename": "library/std/src/io/buffered/bufreader.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Fbufreader.rs?ref=8545472a081f5ead6bff98ae45b07b13ec6932bf", "patch": "@@ -242,14 +242,13 @@ impl<R: Seek> BufReader<R> {\n                 self.pos = new_pos as usize;\n                 return Ok(());\n             }\n-        } else {\n-            if let Some(new_pos) = pos.checked_add(offset as u64) {\n-                if new_pos <= self.cap as u64 {\n-                    self.pos = new_pos as usize;\n-                    return Ok(());\n-                }\n+        } else if let Some(new_pos) = pos.checked_add(offset as u64) {\n+            if new_pos <= self.cap as u64 {\n+                self.pos = new_pos as usize;\n+                return Ok(());\n             }\n         }\n+\n         self.seek(SeekFrom::Current(offset)).map(drop)\n     }\n }"}, {"sha": "ad550a823ae90e2596c26614d19c2911bbd953ad", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=8545472a081f5ead6bff98ae45b07b13ec6932bf", "patch": "@@ -558,7 +558,7 @@ impl IntoInner<Handle> for File {\n \n impl FromInner<Handle> for File {\n     fn from_inner(handle: Handle) -> File {\n-        File { handle: handle }\n+        File { handle }\n     }\n }\n \n@@ -672,7 +672,7 @@ impl FilePermissions {\n \n impl FileType {\n     fn new(attrs: c::DWORD, reparse_tag: c::DWORD) -> FileType {\n-        FileType { attributes: attrs, reparse_tag: reparse_tag }\n+        FileType { attributes: attrs, reparse_tag }\n     }\n     pub fn is_dir(&self) -> bool {\n         !self.is_symlink() && self.is_directory()"}, {"sha": "18a2a36ad2548e25c0bab340235d2fd41ac81646", "filename": "library/std/src/sys/windows/stack_overflow.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstack_overflow.rs?ref=8545472a081f5ead6bff98ae45b07b13ec6932bf", "patch": "@@ -9,10 +9,10 @@ impl Handler {\n     pub unsafe fn new() -> Handler {\n         // This API isn't available on XP, so don't panic in that case and just\n         // pray it works out ok.\n-        if c::SetThreadStackGuarantee(&mut 0x5000) == 0 {\n-            if c::GetLastError() as u32 != c::ERROR_CALL_NOT_IMPLEMENTED as u32 {\n-                panic!(\"failed to reserve stack space for exception handling\");\n-            }\n+        if c::SetThreadStackGuarantee(&mut 0x5000) == 0\n+            && c::GetLastError() as u32 != c::ERROR_CALL_NOT_IMPLEMENTED as u32\n+        {\n+            panic!(\"failed to reserve stack space for exception handling\");\n         }\n         Handler\n     }"}, {"sha": "d5e8f12414ff2d688007a157925030225d107518", "filename": "library/std/src/sys_common/backtrace.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8545472a081f5ead6bff98ae45b07b13ec6932bf/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fbacktrace.rs?ref=8545472a081f5ead6bff98ae45b07b13ec6932bf", "patch": "@@ -93,10 +93,8 @@ unsafe fn _print_fmt(fmt: &mut fmt::Formatter<'_>, print_fmt: PrintFmt) -> fmt::\n         if stop {\n             return false;\n         }\n-        if !hit {\n-            if start {\n-                res = bt_fmt.frame().print_raw(frame.ip(), None, None, None);\n-            }\n+        if !hit && start {\n+            res = bt_fmt.frame().print_raw(frame.ip(), None, None, None);\n         }\n \n         idx += 1;"}]}