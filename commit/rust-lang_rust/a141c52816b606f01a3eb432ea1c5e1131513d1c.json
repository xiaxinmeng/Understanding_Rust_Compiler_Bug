{"sha": "a141c52816b606f01a3eb432ea1c5e1131513d1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNDFjNTI4MTZiNjA2ZjAxYTNlYjQzMmVhMWM1ZTExMzE1MTNkMWM=", "commit": {"author": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2016-01-12T20:55:59Z"}, "committer": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2016-02-11T17:45:52Z"}, "message": "Use find_export_name_attr instead of string literal", "tree": {"sha": "f16bf3abbb652cc2aa48d7faa3eb4d39c5c9744d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f16bf3abbb652cc2aa48d7faa3eb4d39c5c9744d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a141c52816b606f01a3eb432ea1c5e1131513d1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a141c52816b606f01a3eb432ea1c5e1131513d1c", "html_url": "https://github.com/rust-lang/rust/commit/a141c52816b606f01a3eb432ea1c5e1131513d1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a141c52816b606f01a3eb432ea1c5e1131513d1c/comments", "author": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32328ac6ff13cf55b61dbfcf0c79aba1b7a8f429", "url": "https://api.github.com/repos/rust-lang/rust/commits/32328ac6ff13cf55b61dbfcf0c79aba1b7a8f429", "html_url": "https://github.com/rust-lang/rust/commit/32328ac6ff13cf55b61dbfcf0c79aba1b7a8f429"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5a3c5ced8045f29da6b9dfc9ce2de43c80cefcec", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a141c52816b606f01a3eb432ea1c5e1131513d1c/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a141c52816b606f01a3eb432ea1c5e1131513d1c/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=a141c52816b606f01a3eb432ea1c5e1131513d1c", "patch": "@@ -2727,7 +2727,7 @@ fn exported_name<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n         None => {}\n     }\n \n-    match attr::find_export_name_attr(ccx.sess().diagnostic(), attrs) {\n+    match attr::find_export_name_attr(Some(ccx.sess().diagnostic()), attrs) {\n         // Use provided name\n         Some(name) => name.to_string(),\n         _ => {"}, {"sha": "fca659e63b582da4ac079aef288c26e8ec5378ec", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a141c52816b606f01a3eb432ea1c5e1131513d1c/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a141c52816b606f01a3eb432ea1c5e1131513d1c/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=a141c52816b606f01a3eb432ea1c5e1131513d1c", "patch": "@@ -298,16 +298,16 @@ pub fn find_crate_name(attrs: &[Attribute]) -> Option<InternedString> {\n }\n \n /// Find the value of #[export_name=*] attribute and check its validity.\n-pub fn find_export_name_attr(diag: &Handler, attrs: &[Attribute]) -> Option<InternedString> {\n+pub fn find_export_name_attr(diag: Option<&Handler>, attrs: &[Attribute]) -> Option<InternedString> {\n     attrs.iter().fold(None, |ia,attr| {\n         if attr.check_name(\"export_name\") {\n             if let s@Some(_) = attr.value_str() {\n                 s\n             } else {\n-                diag.struct_span_err(attr.span,\n+                diag.map(|d| d.struct_span_err(attr.span,\n                                      \"export_name attribute has invalid format\")\n                     .help(\"use #[export_name=\\\"*\\\"]\")\n-                    .emit();\n+                    .emit());\n                 None\n             }\n         } else {\n@@ -318,7 +318,7 @@ pub fn find_export_name_attr(diag: &Handler, attrs: &[Attribute]) -> Option<Inte\n \n pub fn contains_extern_indicator(attrs: &[Attribute]) -> bool {\n     contains_name(attrs, \"no_mangle\") ||\n-        contains_name(attrs, \"export_name\")\n+        find_export_name_attr(None, attrs).is_some()\n }\n \n #[derive(Copy, Clone, PartialEq)]"}]}