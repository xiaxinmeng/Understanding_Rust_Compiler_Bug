{"sha": "96444c11eee3a6d29d22056eee7e1d2ea73ebb19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NDQ0YzExZWVlM2E2ZDI5ZDIyMDU2ZWVlN2UxZDJlYTczZWJiMTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-31T14:34:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-31T14:34:22Z"}, "message": "remove too expensive debug assertion", "tree": {"sha": "4f35bd6780500a9473b01b6b68630d46026e484c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f35bd6780500a9473b01b6b68630d46026e484c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96444c11eee3a6d29d22056eee7e1d2ea73ebb19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96444c11eee3a6d29d22056eee7e1d2ea73ebb19", "html_url": "https://github.com/rust-lang/rust/commit/96444c11eee3a6d29d22056eee7e1d2ea73ebb19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96444c11eee3a6d29d22056eee7e1d2ea73ebb19/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec629cc0d54592d24dac95578f10377f03f8f64b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec629cc0d54592d24dac95578f10377f03f8f64b", "html_url": "https://github.com/rust-lang/rust/commit/ec629cc0d54592d24dac95578f10377f03f8f64b"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "289fab99ad64b06142a0af41068ef465380143b9", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/96444c11eee3a6d29d22056eee7e1d2ea73ebb19/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96444c11eee3a6d29d22056eee7e1d2ea73ebb19/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=96444c11eee3a6d29d22056eee7e1d2ea73ebb19", "patch": "@@ -346,23 +346,6 @@ impl<'tcx> Stack {\n         Ok(())\n     }\n \n-    /// `reborrow` helper function: test that the stack invariants are still maintained.\n-    fn test_invariants(&self) {\n-        let mut saw_shared_read_only = false;\n-        for item in self.borrows.iter() {\n-            match item.perm {\n-                Permission::SharedReadOnly => {\n-                    saw_shared_read_only = true;\n-                }\n-                // Otherwise, if we saw one before, that's a bug.\n-                perm if saw_shared_read_only => {\n-                    bug!(\"Found {:?} on top of a SharedReadOnly!\", perm);\n-                }\n-                _ => {}\n-            }\n-        }\n-    }\n-\n     /// Derived a new pointer from one with the given tag.\n     /// `weak` controls whether this operation is weak or strong: weak granting does not act as\n     /// an access, and they add the new item directly on top of the one it is derived\n@@ -418,11 +401,6 @@ impl<'tcx> Stack {\n             self.borrows.insert(new_idx, new);\n         }\n \n-        // Make sure that after all this, the stack's invariant is still maintained.\n-        if cfg!(debug_assertions) {\n-            self.test_invariants();\n-        }\n-\n         Ok(())\n     }\n }"}]}