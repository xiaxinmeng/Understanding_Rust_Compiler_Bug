{"sha": "f0de7df2048497cd701ee9a88ec44e9ac00e282e", "node_id": "C_kwDOAAsO6NoAKGYwZGU3ZGYyMDQ4NDk3Y2Q3MDFlZTlhODhlYzQ0ZTlhYzAwZTI4MmU", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-03-30T09:04:03Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-04-05T06:01:03Z"}, "message": "macros: update session diagnostic errors\n\nSmall commit adding backticks around types and annotations in the error\nmessages from the session diagnostic derive.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "f6b6fd76d486afe5f66c1381d7f421db72eb6803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6b6fd76d486afe5f66c1381d7f421db72eb6803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0de7df2048497cd701ee9a88ec44e9ac00e282e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0de7df2048497cd701ee9a88ec44e9ac00e282e", "html_url": "https://github.com/rust-lang/rust/commit/f0de7df2048497cd701ee9a88ec44e9ac00e282e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0de7df2048497cd701ee9a88ec44e9ac00e282e/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a52b5072ac9644ce4f8e336c9c1d79f7afe16f9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a52b5072ac9644ce4f8e336c9c1d79f7afe16f9f", "html_url": "https://github.com/rust-lang/rust/commit/a52b5072ac9644ce4f8e336c9c1d79f7afe16f9f"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "4430e1cdfc5168655c5f2e9e10a9213d0eb4e38a", "filename": "compiler/rustc_macros/src/session_diagnostic.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f0de7df2048497cd701ee9a88ec44e9ac00e282e/compiler%2Frustc_macros%2Fsrc%2Fsession_diagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0de7df2048497cd701ee9a88ec44e9ac00e282e/compiler%2Frustc_macros%2Fsrc%2Fsession_diagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fsession_diagnostic.rs?ref=f0de7df2048497cd701ee9a88ec44e9ac00e282e", "patch": "@@ -224,7 +224,7 @@ impl<'a> SessionDiagnosticDerive<'a> {\n                 match builder.kind {\n                     None => {\n                         span_err(ast.span().unwrap(), \"`code` not specified\")\n-                        .help(\"use the [code = \\\"...\\\"] attribute to set this diagnostic's error code \")\n+                        .help(\"use the `#[code = \\\"...\\\"]` attribute to set this diagnostic's error code \")\n                         .emit();\n                         SessionDiagnosticDeriveError::ErrorHandled.to_compile_error()\n                     }\n@@ -338,7 +338,7 @@ impl<'a> SessionDiagnosticDeriveBuilder<'a> {\n                     other => throw_span_err!(\n                         attr.span().unwrap(),\n                         &format!(\n-                            \"`#[{} = ...]` is not a valid SessionDiagnostic struct attribute\",\n+                            \"`#[{} = ...]` is not a valid `SessionDiagnostic` struct attribute\",\n                             other\n                         )\n                     ),\n@@ -429,7 +429,7 @@ impl<'a> SessionDiagnosticDeriveBuilder<'a> {\n                         } else {\n                             throw_span_err!(\n                                 attr.span().unwrap(),\n-                                \"the `#[message = \\\"...\\\"]` attribute can only be applied to fields of type Span\"\n+                                \"the `#[message = \\\"...\\\"]` attribute can only be applied to fields of type `Span`\"\n                             );\n                         }\n                     }\n@@ -441,14 +441,14 @@ impl<'a> SessionDiagnosticDeriveBuilder<'a> {\n                         } else {\n                             throw_span_err!(\n                                 attr.span().unwrap(),\n-                                \"The `#[label = ...]` attribute can only be applied to fields of type Span\"\n+                                \"The `#[label = ...]` attribute can only be applied to fields of type `Span`\"\n                             );\n                         }\n                     }\n                     other => throw_span_err!(\n                         attr.span().unwrap(),\n                         &format!(\n-                            \"`#[{} = ...]` is not a valid SessionDiagnostic field attribute\",\n+                            \"`#[{} = ...]` is not a valid `SessionDiagnostic` field attribute\",\n                             other\n                         )\n                     ),\n@@ -505,7 +505,7 @@ impl<'a> SessionDiagnosticDeriveBuilder<'a> {\n                                 list.span().unwrap(),\n                                 \"missing suggestion message\",\n                                 |diag| {\n-                                    diag.help(\"provide a suggestion message using #[suggestion(message = \\\"...\\\")]\")\n+                                    diag.help(\"provide a suggestion message using `#[suggestion(message = \\\"...\\\")]`\")\n                                 }\n                             );\n                         };\n@@ -549,7 +549,7 @@ impl<'a> SessionDiagnosticDeriveBuilder<'a> {\n                         } else {\n                             throw_span_err!(\n                                 info.span.unwrap(),\n-                                \"type of field annotated with `#[suggestion(...)]` contains more than one Span\"\n+                                \"type of field annotated with `#[suggestion(...)]` contains more than one `Span`\"\n                             );\n                         }\n                     } else if type_matches_path(elem, &[\"rustc_errors\", \"Applicability\"]) {\n@@ -575,12 +575,12 @@ impl<'a> SessionDiagnosticDeriveBuilder<'a> {\n                 }\n \n                 throw_span_err!(info.span.unwrap(), \"wrong types for suggestion\", |diag| {\n-                    diag.help(\"#[suggestion(...)] on a tuple field must be applied to fields of type `(Span, Applicability)`\")\n+                    diag.help(\"`#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`\")\n                 });\n             }\n             // If `ty` isn't a `Span` or `(Span, Applicability)` then emit an error.\n             _ => throw_span_err!(info.span.unwrap(), \"wrong field type for suggestion\", |diag| {\n-                diag.help(\"#[suggestion(...)] should be applied to fields of type `Span` or `(Span, Applicability)`\")\n+                diag.help(\"`#[suggestion(...)]` should be applied to fields of type `Span` or `(Span, Applicability)`\")\n             }),\n         }\n     }"}, {"sha": "05adb35951e38f57e74d36342a8a22c8f882983e", "filename": "src/test/ui-fulldeps/session-derive-errors.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f0de7df2048497cd701ee9a88ec44e9ac00e282e/src%2Ftest%2Fui-fulldeps%2Fsession-derive-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0de7df2048497cd701ee9a88ec44e9ac00e282e/src%2Ftest%2Fui-fulldeps%2Fsession-derive-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fsession-derive-errors.rs?ref=f0de7df2048497cd701ee9a88ec44e9ac00e282e", "patch": "@@ -41,14 +41,14 @@ enum SessionDiagnosticOnEnum {\n #[derive(SessionDiagnostic)]\n #[error = \"E0123\"]\n #[label = \"This is in the wrong place\"]\n-//~^ ERROR `#[label = ...]` is not a valid SessionDiagnostic struct attribute\n+//~^ ERROR `#[label = ...]` is not a valid `SessionDiagnostic` struct attribute\n struct WrongPlace {}\n \n #[derive(SessionDiagnostic)]\n #[error = \"E0123\"]\n struct WrongPlaceField {\n     #[suggestion = \"this is the wrong kind of attribute\"]\n-//~^ ERROR `#[suggestion = ...]` is not a valid SessionDiagnostic field attribute\n+    //~^ ERROR `#[suggestion = ...]` is not a valid `SessionDiagnostic` field attribute\n     sp: Span,\n }\n \n@@ -92,14 +92,14 @@ struct ErrorSpecifiedAfterLint {}\n struct ErrorWithField {\n     name: String,\n     #[message = \"This error has a field, and references {name}\"]\n-    span: Span\n+    span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n #[error = \"E0123\"]\n struct ErrorWithMessageAppliedToField {\n     #[message = \"this message is applied to a String field\"]\n-    //~^ ERROR the `#[message = \"...\"]` attribute can only be applied to fields of type Span\n+    //~^ ERROR the `#[message = \"...\"]` attribute can only be applied to fields of type `Span`\n     name: String,\n }\n \n@@ -134,15 +134,15 @@ struct ErrorMissingOpeningBrace {\n #[message = \"Something something\"]\n struct LabelOnSpan {\n     #[label = \"See here\"]\n-    sp: Span\n+    sp: Span,\n }\n \n #[derive(SessionDiagnostic)]\n #[error = \"E0123\"]\n #[message = \"Something something\"]\n struct LabelOnNonSpan {\n     #[label = \"See here\"]\n-    //~^ ERROR The `#[label = ...]` attribute can only be applied to fields of type Span\n+    //~^ ERROR The `#[label = ...]` attribute can only be applied to fields of type `Span`\n     id: u32,\n }\n \n@@ -204,7 +204,7 @@ struct SuggestWithWrongTypeApplicabilityOnly {\n \n #[derive(SessionDiagnostic)]\n #[error = \"E0123\"]\n-struct SuggestWithSpanOnly{\n+struct SuggestWithSpanOnly {\n     #[suggestion(message = \"This is a message\", code = \"This is suggested code\")]\n     suggestion: Span,\n }\n@@ -213,7 +213,7 @@ struct SuggestWithSpanOnly{\n #[error = \"E0123\"]\n struct SuggestWithDuplicateSpanAndApplicability {\n     #[suggestion(message = \"This is a message\", code = \"This is suggested code\")]\n-    //~^ ERROR type of field annotated with `#[suggestion(...)]` contains more than one Span\n+    //~^ ERROR type of field annotated with `#[suggestion(...)]` contains more than one `Span`\n     suggestion: (Span, Span, Applicability),\n }\n "}, {"sha": "afe941e252777e5f56b2d8fe4536930d18f30745", "filename": "src/test/ui-fulldeps/session-derive-errors.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f0de7df2048497cd701ee9a88ec44e9ac00e282e/src%2Ftest%2Fui-fulldeps%2Fsession-derive-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f0de7df2048497cd701ee9a88ec44e9ac00e282e/src%2Ftest%2Fui-fulldeps%2Fsession-derive-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fsession-derive-errors.stderr?ref=f0de7df2048497cd701ee9a88ec44e9ac00e282e", "patch": "@@ -9,13 +9,13 @@ LL | |     Bar,\n LL | | }\n    | |_^\n \n-error: `#[label = ...]` is not a valid SessionDiagnostic struct attribute\n+error: `#[label = ...]` is not a valid `SessionDiagnostic` struct attribute\n   --> $DIR/session-derive-errors.rs:43:1\n    |\n LL | #[label = \"This is in the wrong place\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: `#[suggestion = ...]` is not a valid SessionDiagnostic field attribute\n+error: `#[suggestion = ...]` is not a valid `SessionDiagnostic` field attribute\n   --> $DIR/session-derive-errors.rs:50:5\n    |\n LL |     #[suggestion = \"this is the wrong kind of attribute\"]\n@@ -39,9 +39,9 @@ error: `code` not specified\n LL | struct ErrorCodeNotProvided {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: use the [code = \"...\"] attribute to set this diagnostic's error code \n+   = help: use the `#[code = \"...\"]` attribute to set this diagnostic's error code \n \n-error: the `#[message = \"...\"]` attribute can only be applied to fields of type Span\n+error: the `#[message = \"...\"]` attribute can only be applied to fields of type `Span`\n   --> $DIR/session-derive-errors.rs:101:5\n    |\n LL |     #[message = \"this message is applied to a String field\"]\n@@ -78,7 +78,7 @@ LL | #[message = \"This is missing an opening brace: name}\"]\n    = note: if you intended to print `}`, you can escape it using `}}`\n    = note: this error originates in the derive macro `SessionDiagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: The `#[label = ...]` attribute can only be applied to fields of type Span\n+error: The `#[label = ...]` attribute can only be applied to fields of type `Span`\n   --> $DIR/session-derive-errors.rs:144:5\n    |\n LL |     #[label = \"See here\"]\n@@ -102,7 +102,7 @@ error: missing suggestion message\n LL |     #[suggestion(code = \"This is suggested code\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: provide a suggestion message using #[suggestion(message = \"...\")]\n+   = help: provide a suggestion message using `#[suggestion(message = \"...\")]`\n \n error: wrong field type for suggestion\n   --> $DIR/session-derive-errors.rs:200:5\n@@ -112,9 +112,9 @@ LL | |\n LL | |     suggestion: Applicability,\n    | |_____________________________^\n    |\n-   = help: #[suggestion(...)] should be applied to fields of type Span or (Span, Applicability)\n+   = help: `#[suggestion(...)]` should be applied to fields of type `Span` or `(Span, Applicability)`\n \n-error: type of field annotated with `#[suggestion(...)]` contains more than one Span\n+error: type of field annotated with `#[suggestion(...)]` contains more than one `Span`\n   --> $DIR/session-derive-errors.rs:215:5\n    |\n LL | /     #[suggestion(message = \"This is a message\", code = \"This is suggested code\")]"}]}