{"sha": "467b299e537cc94e29c1db252557cb7365924d9a", "node_id": "C_kwDOAAsO6NoAKDQ2N2IyOTllNTM3Y2M5NGUyOWMxZGIyNTI1NTdjYjczNjU5MjRkOWE", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-10-30T20:50:49Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-11-14T22:03:16Z"}, "message": "update str.contains benchmarks", "tree": {"sha": "66ddd6782f563f87f61ce803371b1b1a25121238", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66ddd6782f563f87f61ce803371b1b1a25121238"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/467b299e537cc94e29c1db252557cb7365924d9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/467b299e537cc94e29c1db252557cb7365924d9a", "html_url": "https://github.com/rust-lang/rust/commit/467b299e537cc94e29c1db252557cb7365924d9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/467b299e537cc94e29c1db252557cb7365924d9a/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4844e5162c33c743c9a7999ac781b13a829fc68c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4844e5162c33c743c9a7999ac781b13a829fc68c", "html_url": "https://github.com/rust-lang/rust/commit/4844e5162c33c743c9a7999ac781b13a829fc68c"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "54af389dedcd2000664c919b7fb776dc6c2d20dc", "filename": "library/alloc/benches/str.rs", "status": "modified", "additions": 54, "deletions": 3, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/467b299e537cc94e29c1db252557cb7365924d9a/library%2Falloc%2Fbenches%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/467b299e537cc94e29c1db252557cb7365924d9a/library%2Falloc%2Fbenches%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fstr.rs?ref=467b299e537cc94e29c1db252557cb7365924d9a", "patch": "@@ -1,3 +1,4 @@\n+use core::iter::Iterator;\n use test::{black_box, Bencher};\n \n #[bench]\n@@ -122,14 +123,13 @@ fn bench_contains_short_short(b: &mut Bencher) {\n     let haystack = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\";\n     let needle = \"sit\";\n \n+    b.bytes = haystack.len() as u64;\n     b.iter(|| {\n         assert!(black_box(haystack).contains(black_box(needle)));\n     })\n }\n \n-#[bench]\n-fn bench_contains_short_long(b: &mut Bencher) {\n-    let haystack = \"\\\n+static LONG_HAYSTACK: &str = \"\\\n Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse quis lorem sit amet dolor \\\n ultricies condimentum. Praesent iaculis purus elit, ac malesuada quam malesuada in. Duis sed orci \\\n eros. Suspendisse sit amet magna mollis, mollis nunc luctus, imperdiet mi. Integer fringilla non \\\n@@ -164,8 +164,46 @@ feugiat. Etiam quis mauris vel risus luctus mattis a a nunc. Nullam orci quam, i\n vehicula in, porttitor ut nibh. Duis sagittis adipiscing nisl vitae congue. Donec mollis risus eu \\\n leo suscipit, varius porttitor nulla porta. Pellentesque ut sem nec nisi euismod vehicula. Nulla \\\n malesuada sollicitudin quam eu fermentum.\";\n+\n+#[bench]\n+fn bench_contains_2b_repeated_long(b: &mut Bencher) {\n+    let haystack = LONG_HAYSTACK;\n+    let needle = \"::\";\n+\n+    b.bytes = haystack.len() as u64;\n+    b.iter(|| {\n+        assert!(!black_box(haystack).contains(black_box(needle)));\n+    })\n+}\n+\n+#[bench]\n+fn bench_contains_short_long(b: &mut Bencher) {\n+    let haystack = LONG_HAYSTACK;\n     let needle = \"english\";\n \n+    b.bytes = haystack.len() as u64;\n+    b.iter(|| {\n+        assert!(!black_box(haystack).contains(black_box(needle)));\n+    })\n+}\n+\n+#[bench]\n+fn bench_contains_16b_in_long(b: &mut Bencher) {\n+    let haystack = LONG_HAYSTACK;\n+    let needle = \"english language\";\n+\n+    b.bytes = haystack.len() as u64;\n+    b.iter(|| {\n+        assert!(!black_box(haystack).contains(black_box(needle)));\n+    })\n+}\n+\n+#[bench]\n+fn bench_contains_32b_in_long(b: &mut Bencher) {\n+    let haystack = LONG_HAYSTACK;\n+    let needle = \"the english language sample text\";\n+\n+    b.bytes = haystack.len() as u64;\n     b.iter(|| {\n         assert!(!black_box(haystack).contains(black_box(needle)));\n     })\n@@ -176,6 +214,18 @@ fn bench_contains_bad_naive(b: &mut Bencher) {\n     let haystack = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n     let needle = \"aaaaaaaab\";\n \n+    b.bytes = haystack.len() as u64;\n+    b.iter(|| {\n+        assert!(!black_box(haystack).contains(black_box(needle)));\n+    })\n+}\n+\n+#[bench]\n+fn bench_contains_bad_simd(b: &mut Bencher) {\n+    let haystack = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n+    let needle = \"aaabaaaa\";\n+\n+    b.bytes = haystack.len() as u64;\n     b.iter(|| {\n         assert!(!black_box(haystack).contains(black_box(needle)));\n     })\n@@ -186,6 +236,7 @@ fn bench_contains_equal(b: &mut Bencher) {\n     let haystack = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\";\n     let needle = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\";\n \n+    b.bytes = haystack.len() as u64;\n     b.iter(|| {\n         assert!(black_box(haystack).contains(black_box(needle)));\n     })"}]}