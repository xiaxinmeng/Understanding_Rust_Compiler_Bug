{"sha": "7d64c7cd024ac22e71df104577037d2e2fb42c49", "node_id": "C_kwDOAAsO6NoAKDdkNjRjN2NkMDI0YWMyMmU3MWRmMTA0NTc3MDM3ZDJlMmZiNDJjNDk", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-04-13T02:17:08Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-04-13T02:17:08Z"}, "message": "Add `libLLVM.so` to the target libdir when download-rustc is enabled\n\nPreviously, we would only add it to the host libdir, which meant it\ncouldn't be loaded by `ui-fulldeps` tests that used rustc_private.", "tree": {"sha": "9a5707976e5b302b87f17382850d49624b66f42e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a5707976e5b302b87f17382850d49624b66f42e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d64c7cd024ac22e71df104577037d2e2fb42c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d64c7cd024ac22e71df104577037d2e2fb42c49", "html_url": "https://github.com/rust-lang/rust/commit/7d64c7cd024ac22e71df104577037d2e2fb42c49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d64c7cd024ac22e71df104577037d2e2fb42c49/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4087deaccd8bceb458c9610d29744d5f3504c5c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4087deaccd8bceb458c9610d29744d5f3504c5c0", "html_url": "https://github.com/rust-lang/rust/commit/4087deaccd8bceb458c9610d29744d5f3504c5c0"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "aaed5cf2e32b24c169666b9950d4c58136f432d1", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7d64c7cd024ac22e71df104577037d2e2fb42c49/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d64c7cd024ac22e71df104577037d2e2fb42c49/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=7d64c7cd024ac22e71df104577037d2e2fb42c49", "patch": "@@ -1273,9 +1273,7 @@ impl Step for Sysroot {\n             }\n \n             // Copy the compiler into the correct sysroot.\n-            let ci_rustc_dir =\n-                builder.config.out.join(&*builder.config.build.triple).join(\"ci-rustc\");\n-            builder.cp_r(&ci_rustc_dir, &sysroot);\n+            builder.cp_r(&builder.ci_rustc_dir(builder.build.build), &sysroot);\n             return INTERNER.intern_path(sysroot);\n         }\n \n@@ -1377,7 +1375,10 @@ impl Step for Assemble {\n \n         // If we're downloading a compiler from CI, we can use the same compiler for all stages other than 0.\n         if builder.download_rustc() {\n-            builder.ensure(Sysroot { compiler: target_compiler });\n+            let sysroot = builder.ensure(Sysroot { compiler: target_compiler });\n+            // Ensure that `libLLVM.so` ends up in the newly created target directory,\n+            // so that tools using `rustc_private` can use it.\n+            dist::maybe_install_llvm_target(builder, target_compiler.host, &sysroot);\n             return target_compiler;\n         }\n "}, {"sha": "28478aca4039f2356a369fc973d1156c43ee5fa4", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7d64c7cd024ac22e71df104577037d2e2fb42c49/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d64c7cd024ac22e71df104577037d2e2fb42c49/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=7d64c7cd024ac22e71df104577037d2e2fb42c49", "patch": "@@ -1960,6 +1960,20 @@ fn maybe_install_llvm(builder: &Builder<'_>, target: TargetSelection, dst_libdir\n         }\n     }\n \n+    // FIXME: for reasons I don't understand, the LLVM so in the `rustc` component is different than the one in `rust-dev`.\n+    // Only the one in `rustc` works with the downloaded compiler.\n+    if builder.download_rustc() && target == builder.build.build {\n+        let src_libdir = builder.ci_rustc_dir(target).join(\"lib\");\n+        for entry in t!(std::fs::read_dir(&src_libdir)) {\n+            let entry = t!(entry);\n+            if entry.file_name().to_str().unwrap().starts_with(\"libLLVM-\") {\n+                install_llvm_file(builder, &entry.path(), dst_libdir);\n+                return !builder.config.dry_run();\n+            }\n+        }\n+        panic!(\"libLLVM.so not found in src_libdir {}!\", src_libdir.display());\n+    }\n+\n     // On macOS, rustc (and LLVM tools) link to an unversioned libLLVM.dylib\n     // instead of libLLVM-11-rust-....dylib, as on linux. It's not entirely\n     // clear why this is the case, though. llvm-config will emit the versioned"}, {"sha": "6296fdad8a1076a5289796eb1ebb968ac739ff0e", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7d64c7cd024ac22e71df104577037d2e2fb42c49/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d64c7cd024ac22e71df104577037d2e2fb42c49/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=7d64c7cd024ac22e71df104577037d2e2fb42c49", "patch": "@@ -805,6 +805,11 @@ impl Build {\n         self.stage_out(compiler, mode).join(&*target.triple).join(self.cargo_dir())\n     }\n \n+    /// Directory where the extracted `rustc-dev` component is stored.\n+    fn ci_rustc_dir(&self, target: TargetSelection) -> PathBuf {\n+        self.out.join(&*target.triple).join(\"ci-rustc\")\n+    }\n+\n     /// Root output directory for LLVM compiled for `target`\n     ///\n     /// Note that if LLVM is configured externally then the directory returned"}]}