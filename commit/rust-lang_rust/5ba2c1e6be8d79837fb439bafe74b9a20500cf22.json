{"sha": "5ba2c1e6be8d79837fb439bafe74b9a20500cf22", "node_id": "C_kwDOAAsO6NoAKDViYTJjMWU2YmU4ZDc5ODM3ZmI0MzliYWZlNzRiOWEyMDUwMGNmMjI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T13:06:35Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T13:45:00Z"}, "message": "posix_fadvise is not Linux-specific", "tree": {"sha": "e99fa96cea7f3f3eed47687a71eee00b45e51e4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e99fa96cea7f3f3eed47687a71eee00b45e51e4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ba2c1e6be8d79837fb439bafe74b9a20500cf22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba2c1e6be8d79837fb439bafe74b9a20500cf22", "html_url": "https://github.com/rust-lang/rust/commit/5ba2c1e6be8d79837fb439bafe74b9a20500cf22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ba2c1e6be8d79837fb439bafe74b9a20500cf22/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae51998191313b7191831e831d93a6d3fe0e4238", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae51998191313b7191831e831d93a6d3fe0e4238", "html_url": "https://github.com/rust-lang/rust/commit/ae51998191313b7191831e831d93a6d3fe0e4238"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "44147433c037e3e4b1c6304388b7372d2a8211c6", "filename": "src/shims/unix/foreign_items.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5ba2c1e6be8d79837fb439bafe74b9a20500cf22/src%2Fshims%2Funix%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba2c1e6be8d79837fb439bafe74b9a20500cf22/src%2Fshims%2Funix%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Fforeign_items.rs?ref=5ba2c1e6be8d79837fb439bafe74b9a20500cf22", "patch": "@@ -153,6 +153,16 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let result = this.readlink(pathname, buf, bufsize)?;\n                 this.write_scalar(Scalar::from_machine_isize(result, this), dest)?;\n             }\n+            \"posix_fadvise\" => {\n+                let [fd, offset, len, advice] =\n+                    this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;\n+                this.read_scalar(fd)?.to_i32()?;\n+                this.read_scalar(offset)?.to_machine_isize(this)?;\n+                this.read_scalar(len)?.to_machine_isize(this)?;\n+                this.read_scalar(advice)?.to_i32()?;\n+                // fadvise is only informational, we can ignore it.\n+                this.write_null(dest)?;\n+            }\n \n             // Time related shims\n             \"gettimeofday\" => {"}, {"sha": "bbdb1b8a31c451eb3f1fdbccb7326c8b33897d57", "filename": "src/shims/unix/linux/foreign_items.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5ba2c1e6be8d79837fb439bafe74b9a20500cf22/src%2Fshims%2Funix%2Flinux%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba2c1e6be8d79837fb439bafe74b9a20500cf22/src%2Fshims%2Funix%2Flinux%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Flinux%2Fforeign_items.rs?ref=5ba2c1e6be8d79837fb439bafe74b9a20500cf22", "patch": "@@ -36,16 +36,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(result, dest)?;\n             }\n             // Linux-only\n-            \"posix_fadvise\" => {\n-                let [fd, offset, len, advice] =\n-                    this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;\n-                this.read_scalar(fd)?.to_i32()?;\n-                this.read_scalar(offset)?.to_machine_isize(this)?;\n-                this.read_scalar(len)?.to_machine_isize(this)?;\n-                this.read_scalar(advice)?.to_i32()?;\n-                // fadvise is only informational, we can ignore it.\n-                this.write_null(dest)?;\n-            }\n             \"sync_file_range\" => {\n                 let [fd, offset, nbytes, flags] =\n                     this.check_shim(abi, Abi::C { unwind: false }, link_name, args)?;"}]}