{"sha": "dafbdeb384318227ec9e5117a022447bbd50467b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZmJkZWIzODQzMTgyMjdlYzllNTExN2EwMjI0NDdiYmQ1MDQ2N2I=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-04-26T19:03:08Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-05-04T18:24:36Z"}, "message": "Add idiom lint for bare extern crate", "tree": {"sha": "e8d0fd0b844e70d95a69f6a7e7c91c5494ff9156", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8d0fd0b844e70d95a69f6a7e7c91c5494ff9156"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dafbdeb384318227ec9e5117a022447bbd50467b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dafbdeb384318227ec9e5117a022447bbd50467b", "html_url": "https://github.com/rust-lang/rust/commit/dafbdeb384318227ec9e5117a022447bbd50467b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dafbdeb384318227ec9e5117a022447bbd50467b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bfe3072cb5d181e4f60bf1033c8d81239a28385", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bfe3072cb5d181e4f60bf1033c8d81239a28385", "html_url": "https://github.com/rust-lang/rust/commit/0bfe3072cb5d181e4f60bf1033c8d81239a28385"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "d08519d3703e089ff5c666f758d96f0c623c3dff", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/dafbdeb384318227ec9e5117a022447bbd50467b/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dafbdeb384318227ec9e5117a022447bbd50467b/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=dafbdeb384318227ec9e5117a022447bbd50467b", "patch": "@@ -1508,3 +1508,66 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedBrokenConst {\n         }\n     }\n }\n+\n+declare_lint! {\n+    pub UNNECESSARY_EXTERN_CRATE,\n+    Allow,\n+    \"suggest removing `extern crate` for the 2018 edition\"\n+}\n+\n+pub struct ExternCrate(/* depth */ u32);\n+\n+impl ExternCrate {\n+    pub fn new() -> Self {\n+        ExternCrate(0)\n+    }\n+}\n+\n+impl LintPass for ExternCrate {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(UNNECESSARY_EXTERN_CRATE)\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ExternCrate {\n+    fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n+        if let hir::ItemExternCrate(ref orig) =  it.node {\n+            if it.attrs.iter().any(|a| a.check_name(\"macro_use\")) {\n+                return\n+            }\n+            let mut err = cx.struct_span_lint(UNNECESSARY_EXTERN_CRATE,\n+                it.span, \"`extern crate` is unnecessary in the new edition\");\n+            if it.vis == hir::Visibility::Public || self.0 > 1 || orig.is_some() {\n+                let pub_ = if it.vis == hir::Visibility::Public {\n+                    \"pub \"\n+                } else {\n+                    \"\"\n+                };\n+\n+                let help = format!(\"use `{}use`\", pub_);\n+\n+                if let Some(orig) = orig {\n+                    err.span_suggestion(it.span, &help,\n+                        format!(\"{}use {} as {}\", pub_, orig, it.name));\n+                } else {\n+                    err.span_suggestion(it.span, &help,\n+                        format!(\"{}use {}\", pub_, it.name));\n+                }\n+            } else {\n+                err.span_suggestion(it.span, \"remove it\", \"\".into());\n+            }\n+\n+            err.emit();\n+        }\n+    }\n+\n+    fn check_mod(&mut self, _: &LateContext, _: &hir::Mod,\n+                 _: Span, _: ast::NodeId) {\n+        self.0 += 1;\n+    }\n+\n+    fn check_mod_post(&mut self, _: &LateContext, _: &hir::Mod,\n+                      _: Span, _: ast::NodeId) {\n+        self.0 += 1;\n+    }\n+}"}, {"sha": "39f550a4b459a7d0501d31e9d04845441af00cdb", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dafbdeb384318227ec9e5117a022447bbd50467b/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dafbdeb384318227ec9e5117a022447bbd50467b/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=dafbdeb384318227ec9e5117a022447bbd50467b", "patch": "@@ -143,6 +143,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                           TypeLimits,\n                           MissingDoc,\n                           MissingDebugImplementations,\n+                          ExternCrate,\n                           );\n \n     add_lint_group!(sess,\n@@ -180,7 +181,8 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n     add_lint_group!(sess,\n                     \"rust_2018_idioms\",\n                     BARE_TRAIT_OBJECT,\n-                    UNREACHABLE_PUB);\n+                    UNREACHABLE_PUB,\n+                    UNNECESSARY_EXTERN_CRATE);\n \n     // Guidelines for creating a future incompatibility lint:\n     //"}]}