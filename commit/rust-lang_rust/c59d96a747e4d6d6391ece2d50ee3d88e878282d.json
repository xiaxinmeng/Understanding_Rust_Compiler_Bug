{"sha": "c59d96a747e4d6d6391ece2d50ee3d88e878282d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1OWQ5NmE3NDdlNGQ2ZDYzOTFlY2UyZDUwZWUzZDg4ZTg3ODI4MmQ=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-06T20:31:23Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-06T20:31:23Z"}, "message": "Merge pull request #909 from srinivasreddy/refactor\n\nRefactoring so that we write some error messages to stderr rather than stdout.", "tree": {"sha": "0aa5e84b415281349f0a147bc82acd3ead439ae7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aa5e84b415281349f0a147bc82acd3ead439ae7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c59d96a747e4d6d6391ece2d50ee3d88e878282d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c59d96a747e4d6d6391ece2d50ee3d88e878282d", "html_url": "https://github.com/rust-lang/rust/commit/c59d96a747e4d6d6391ece2d50ee3d88e878282d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c59d96a747e4d6d6391ece2d50ee3d88e878282d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea766777efa6a38dc107cd21a543dee4d09e3f81", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea766777efa6a38dc107cd21a543dee4d09e3f81", "html_url": "https://github.com/rust-lang/rust/commit/ea766777efa6a38dc107cd21a543dee4d09e3f81"}, {"sha": "901c5b1a5d45be3b9fe449716f779e31520e5882", "url": "https://api.github.com/repos/rust-lang/rust/commits/901c5b1a5d45be3b9fe449716f779e31520e5882", "html_url": "https://github.com/rust-lang/rust/commit/901c5b1a5d45be3b9fe449716f779e31520e5882"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "b65cbaa7f59c866309f240c41ac9309ecc7f644b", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=c59d96a747e4d6d6391ece2d50ee3d88e878282d", "patch": "@@ -10,7 +10,7 @@\n \n #![cfg(not(test))]\n \n-#[macro_use]\n+\n extern crate log;\n extern crate rustfmt;\n extern crate toml;\n@@ -28,14 +28,6 @@ use std::str::FromStr;\n \n use getopts::{Matches, Options};\n \n-macro_rules! msg {\n-    ($($arg:tt)*) => (\n-        match writeln!(&mut ::std::io::stderr(), $($arg)* ) {\n-            Ok(_) => {},\n-            Err(x) => panic!(\"Unable to write to stderr: {}\", x),\n-        }\n-    )\n-}\n \n /// Rustfmt operations.\n enum Operation {"}, {"sha": "46c28322c922756b2980f6b5c1a3e105f584c5b0", "filename": "src/config.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=c59d96a747e4d6d6391ece2d50ee3d88e878282d", "patch": "@@ -11,6 +11,7 @@\n extern crate toml;\n \n use lists::{SeparatorTactic, ListTactic};\n+use std::io::Write;\n \n macro_rules! configuration_option_enum{\n     ($e:ident: $( $x:ident ),+ $(,)*) => {\n@@ -222,9 +223,9 @@ macro_rules! create_config {\n                 let parsed_config:ParsedConfig = match toml::decode(parsed) {\n                     Some(decoded) => decoded,\n                     None => {\n-                        println!(\"Decoding config file failed. Config:\\n{}\", toml);\n+                        msg!(\"Decoding config file failed. Config:\\n{}\", toml);\n                         let parsed: toml::Value = toml.parse().expect(\"Could not parse TOML\");\n-                        println!(\"\\n\\nParsed:\\n{:?}\", parsed);\n+                        msg!(\"\\n\\nParsed:\\n{:?}\", parsed);\n                         panic!();\n                     }\n                 };"}, {"sha": "b7af96ac5aa4fb5328d30237aefcb1897e870fd2", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c59d96a747e4d6d6391ece2d50ee3d88e878282d", "patch": "@@ -31,7 +31,7 @@ use syntax::errors::Handler;\n use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n use syntax::parse::{self, ParseSess};\n \n-use std::io::stdout;\n+use std::io::{stdout, Write};\n use std::ops::{Add, Sub};\n use std::path::{Path, PathBuf};\n use std::rc::Rc;\n@@ -456,7 +456,7 @@ pub fn run(input: Input, config: &Config) {\n \n     if let Err(msg) = write_result {\n         if !ignore_errors {\n-            println!(\"Error writing files: {}\", msg);\n+            msg!(\"Error writing files: {}\", msg);\n         }\n     }\n }"}, {"sha": "66b9880777f94cb16a4c69942f46f1025f0b48dc", "filename": "src/utils.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59d96a747e4d6d6391ece2d50ee3d88e878282d/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=c59d96a747e4d6d6391ece2d50ee3d88e878282d", "patch": "@@ -232,6 +232,16 @@ macro_rules! try_opt {\n     })\n }\n \n+macro_rules! msg {\n+    ($($arg:tt)*) => (\n+        match writeln!(&mut ::std::io::stderr(), $($arg)* ) {\n+            Ok(_) => {},\n+            Err(x) => panic!(\"Unable to write to stderr: {}\", x),\n+        }\n+    )\n+}\n+\n+\n // Wraps string-like values in an Option. Returns Some when the string adheres\n // to the Rewrite constraints defined for the Rewrite trait and else otherwise.\n pub fn wrap_str<S: AsRef<str>>(s: S, max_width: usize, width: usize, offset: Indent) -> Option<S> {"}]}