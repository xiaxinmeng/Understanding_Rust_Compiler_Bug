{"sha": "705b8807d531348d05ed3e941b3af695abc24f85", "node_id": "C_kwDOAAsO6NoAKDcwNWI4ODA3ZDUzMTM0OGQwNWVkM2U5NDFiM2FmNjk1YWJjMjRmODU", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-03-10T09:50:47Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-03-10T09:50:47Z"}, "message": "The `Clone::clone` call is now a `ConstantKind::Val`, not a `ConstantKind::Ty`", "tree": {"sha": "6535f13fe1ee844a1096c029010b0f7fdae6f9b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6535f13fe1ee844a1096c029010b0f7fdae6f9b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/705b8807d531348d05ed3e941b3af695abc24f85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/705b8807d531348d05ed3e941b3af695abc24f85", "html_url": "https://github.com/rust-lang/rust/commit/705b8807d531348d05ed3e941b3af695abc24f85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/705b8807d531348d05ed3e941b3af695abc24f85/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "697464a487f8ca8bc0bfadaf4108bb356eb157e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/697464a487f8ca8bc0bfadaf4108bb356eb157e0", "html_url": "https://github.com/rust-lang/rust/commit/697464a487f8ca8bc0bfadaf4108bb356eb157e0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "18c2dd71ad3d0bf11c7e2080f0a7cdcf1eaf87d5", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/705b8807d531348d05ed3e941b3af695abc24f85/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705b8807d531348d05ed3e941b3af695abc24f85/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=705b8807d531348d05ed3e941b3af695abc24f85", "patch": "@@ -2214,7 +2214,7 @@ impl<'tcx> Operand<'tcx> {\n     /// While this is unlikely in general, it's the normal case of what you'll\n     /// find as the `func` in a [`TerminatorKind::Call`].\n     pub fn const_fn_def(&self) -> Option<(DefId, SubstsRef<'tcx>)> {\n-        let const_ty = self.constant()?.literal.const_for_ty()?.ty();\n+        let const_ty = self.constant()?.literal.ty();\n         if let ty::FnDef(def_id, substs) = *const_ty.kind() { Some((def_id, substs)) } else { None }\n     }\n }"}]}