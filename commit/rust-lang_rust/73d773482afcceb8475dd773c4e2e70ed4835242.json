{"sha": "73d773482afcceb8475dd773c4e2e70ed4835242", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZDc3MzQ4MmFmY2NlYjg0NzVkZDc3M2M0ZTJlNzBlZDQ4MzUyNDI=", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2021-03-21T23:17:07Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2021-03-21T23:17:07Z"}, "message": "fmt, change to cold", "tree": {"sha": "0934fb48f775769db90fbd109a447072f293347e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0934fb48f775769db90fbd109a447072f293347e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73d773482afcceb8475dd773c4e2e70ed4835242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73d773482afcceb8475dd773c4e2e70ed4835242", "html_url": "https://github.com/rust-lang/rust/commit/73d773482afcceb8475dd773c4e2e70ed4835242", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73d773482afcceb8475dd773c4e2e70ed4835242/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5e37100d9c115ab327bafd42d0c4dad539d318f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e37100d9c115ab327bafd42d0c4dad539d318f", "html_url": "https://github.com/rust-lang/rust/commit/f5e37100d9c115ab327bafd42d0c4dad539d318f"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "dc02c9c883ea0ae1cad39ef99a5db3e5bb3e852c", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/73d773482afcceb8475dd773c4e2e70ed4835242/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73d773482afcceb8475dd773c4e2e70ed4835242/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=73d773482afcceb8475dd773c4e2e70ed4835242", "patch": "@@ -321,8 +321,12 @@ impl<T, A: Allocator> RawVec<T, A> {\n         // Therefore, we move all the resizing and error-handling logic from grow_amortized and\n         // handle_reserve behind a call, while making sure that the this function is likely to be\n         // inlined as just a comparison and a call if the comparison fails.\n-        #[inline(never)]\n-        fn do_reserve_and_handle<T, A: Allocator>(slf: &mut RawVec<T,A>, len: usize, additional: usize) {\n+        #[cold]\n+        fn do_reserve_and_handle<T, A: Allocator>(\n+            slf: &mut RawVec<T, A>,\n+            len: usize,\n+            additional: usize,\n+        ) {\n             handle_reserve(slf.grow_amortized(len, additional));\n         }\n "}]}