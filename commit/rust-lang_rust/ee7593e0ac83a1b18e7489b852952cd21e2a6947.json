{"sha": "ee7593e0ac83a1b18e7489b852952cd21e2a6947", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNzU5M2UwYWM4M2ExYjE4ZTc0ODliODUyOTUyY2QyMWUyYTY5NDc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-24T22:17:32Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-24T22:17:32Z"}, "message": "Revert changes that belong to separate PR", "tree": {"sha": "1cf1b4ebb2b880a99009c9d2428ac4e341136c52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cf1b4ebb2b880a99009c9d2428ac4e341136c52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee7593e0ac83a1b18e7489b852952cd21e2a6947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee7593e0ac83a1b18e7489b852952cd21e2a6947", "html_url": "https://github.com/rust-lang/rust/commit/ee7593e0ac83a1b18e7489b852952cd21e2a6947", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee7593e0ac83a1b18e7489b852952cd21e2a6947/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da57ac38a669573ab693546775eb3ee5dc5b3fc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/da57ac38a669573ab693546775eb3ee5dc5b3fc4", "html_url": "https://github.com/rust-lang/rust/commit/da57ac38a669573ab693546775eb3ee5dc5b3fc4"}], "stats": {"total": 55, "additions": 16, "deletions": 39}, "files": [{"sha": "c82936afa3d9f0f96d815a36eddb05c326901a2c", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=ee7593e0ac83a1b18e7489b852952cd21e2a6947", "patch": "@@ -94,17 +94,6 @@ impl<'a> StripUnconfigured<'a> {\n         if !attr.check_name(sym::cfg_attr) {\n             return vec![attr];\n         }\n-        if attr.tokens.len() == 0 {\n-            self.sess.span_diagnostic.struct_span_err(attr.span, \"bad `cfg_attr` attribute\")\n-                .span_label(attr.span, \"missing condition and attribute\")\n-                .note(\"`cfg_attr` must be of the form: \\\n-                       `#[cfg_attr(condition, attribute, other_attribute, ...)]`\")\n-                .note(\"for more information, visit \\\n-                       <https://doc.rust-lang.org/reference/conditional-compilation.html\\\n-                       #the-cfg_attr-attribute>\")\n-                .emit();\n-            return vec![];\n-        }\n \n         let (cfg_predicate, expanded_attrs) = match attr.parse(self.sess, |parser| {\n             parser.expect(&token::OpenDelim(token::Paren))?;\n@@ -128,7 +117,7 @@ impl<'a> StripUnconfigured<'a> {\n             Ok(result) => result,\n             Err(mut e) => {\n                 e.emit();\n-                return vec![];\n+                return Vec::new();\n             }\n         };\n "}, {"sha": "6e789c4c7086b71ad6036a0654573b2a02ee6b8e", "filename": "src/libsyntax/ext/derive.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Flibsyntax%2Fext%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Flibsyntax%2Fext%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderive.rs?ref=ee7593e0ac83a1b18e7489b852952cd21e2a6947", "patch": "@@ -17,11 +17,8 @@ pub fn collect_derives(cx: &mut ExtCtxt<'_>, attrs: &mut Vec<ast::Attribute>) ->\n             return true;\n         }\n         if !attr.is_meta_item_list() {\n-            cx.struct_span_err(attr.span, \"bad `derive` attribute\")\n-                .span_label(attr.span, \"missing traits to be derived\")\n-                .note(\"`derive` must be of the form: \\\n-                       `#[derive(Trait1, Trait2, ...)]`\")\n-                .emit();\n+            cx.span_err(attr.span,\n+                        \"attribute must be of the form `#[derive(Trait1, Trait2, ...)]`\");\n             return false;\n         }\n "}, {"sha": "810acc9cc923e25fc47c38600abceadc881f7818", "filename": "src/libsyntax/parse/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs?ref=ee7593e0ac83a1b18e7489b852952cd21e2a6947", "patch": "@@ -618,7 +618,7 @@ impl<'a> Parser<'a> {\n         let (span, msg) = match (&self.token, self.subparser_name) {\n             (&token::Token::Eof, Some(origin)) => {\n                 let sp = self.sess.source_map().next_point(self.span);\n-                (sp, format!( \"expected expression, found end of {}\", origin))\n+                (sp, format!(\"expected expression, found end of {}\", origin))\n             }\n             _ => (self.span, format!(\n                 \"expected expression, found {}\","}, {"sha": "36cc58f7e268e0b18d8a82a35db869c839fb76e0", "filename": "src/test/ui/malformed/malformed-derive-entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-derive-entry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-derive-entry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-derive-entry.rs?ref=ee7593e0ac83a1b18e7489b852952cd21e2a6947", "patch": "@@ -7,7 +7,7 @@ struct Test2;\n #[derive()] //~ WARNING empty trait list\n struct Test3;\n \n-#[derive] //~ ERROR bad `derive` attribute\n+#[derive] //~ ERROR attribute must be of the form `#[derive(Trait1, Trait2, ...)]`\n struct Test4;\n \n fn main() {}"}, {"sha": "0dc18f6811117db2aee44282bec634814a8fcb40", "filename": "src/test/ui/malformed/malformed-derive-entry.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-derive-entry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-derive-entry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-derive-entry.stderr?ref=ee7593e0ac83a1b18e7489b852952cd21e2a6947", "patch": "@@ -16,13 +16,11 @@ warning: empty trait list in `derive`\n LL | #[derive()]\n    | ^^^^^^^^^^^\n \n-error: bad `derive` attribute\n+error: attribute must be of the form `#[derive(Trait1, Trait2, ...)]`\n   --> $DIR/malformed-derive-entry.rs:10:1\n    |\n LL | #[derive]\n-   | ^^^^^^^^^ missing traits to be derived\n-   |\n-   = note: `derive` must be of the form: `#[derive(Trait1, Trait2, ...)]`\n+   | ^^^^^^^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "4d00755aea09df5175e75a3b18cbe22f1d42d519", "filename": "src/test/ui/malformed/malformed-special-attrs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-special-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-special-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-special-attrs.rs?ref=ee7593e0ac83a1b18e7489b852952cd21e2a6947", "patch": "@@ -1,13 +1,13 @@\n-#[cfg_attr] //~ ERROR bad `cfg_attr` attribute\n+#[cfg_attr] //~ ERROR expected `(`, found end of attribute\n struct S1;\n \n #[cfg_attr = \"\"] //~ ERROR expected `(`, found `=`\n struct S2;\n \n-#[derive] //~ ERROR bad `derive` attribute\n+#[derive] //~ ERROR attribute must be of the form\n struct S3;\n \n-#[derive = \"\"] //~ ERROR bad `derive` attribute\n+#[derive = \"\"] //~ ERROR attribute must be of the form\n struct S4;\n \n fn main() {}"}, {"sha": "a93f03589e383ce95ab6cbe588715e4d053c98c6", "filename": "src/test/ui/malformed/malformed-special-attrs.stderr", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-special-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee7593e0ac83a1b18e7489b852952cd21e2a6947/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-special-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-special-attrs.stderr?ref=ee7593e0ac83a1b18e7489b852952cd21e2a6947", "patch": "@@ -1,33 +1,26 @@\n-error: bad `cfg_attr` attribute\n+error: expected `(`, found end of attribute\n   --> $DIR/malformed-special-attrs.rs:1:1\n    |\n LL | #[cfg_attr]\n-   | ^^^^^^^^^^^ missing condition and attribute\n-   |\n-   = note: `cfg_attr` must be of the form: `#[cfg_attr(condition, attribute, other_attribute, ...)]`\n-   = note: for more information, visit <https://doc.rust-lang.org/reference/conditional-compilation.html#the-cfg_attr-attribute>\n+   | ^ expected `(`\n \n error: expected `(`, found `=`\n   --> $DIR/malformed-special-attrs.rs:4:12\n    |\n LL | #[cfg_attr = \"\"]\n    |            ^ expected `(`\n \n-error: bad `derive` attribute\n+error: attribute must be of the form `#[derive(Trait1, Trait2, ...)]`\n   --> $DIR/malformed-special-attrs.rs:7:1\n    |\n LL | #[derive]\n-   | ^^^^^^^^^ missing traits to be derived\n-   |\n-   = note: `derive` must be of the form: `#[derive(Trait1, Trait2, ...)]`\n+   | ^^^^^^^^^\n \n-error: bad `derive` attribute\n+error: attribute must be of the form `#[derive(Trait1, Trait2, ...)]`\n   --> $DIR/malformed-special-attrs.rs:10:1\n    |\n LL | #[derive = \"\"]\n-   | ^^^^^^^^^^^^^^ missing traits to be derived\n-   |\n-   = note: `derive` must be of the form: `#[derive(Trait1, Trait2, ...)]`\n+   | ^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}]}