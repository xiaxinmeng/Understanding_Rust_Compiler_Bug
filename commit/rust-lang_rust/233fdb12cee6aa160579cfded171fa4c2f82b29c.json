{"sha": "233fdb12cee6aa160579cfded171fa4c2f82b29c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzM2ZkYjEyY2VlNmFhMTYwNTc5Y2ZkZWQxNzFmYTRjMmY4MmIyOWM=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-11-16T20:10:13Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-11-16T20:10:13Z"}, "message": "Latest LSP 3.16 protocol\n\nPulls in https://github.com/gluon-lang/lsp-types/pull/186", "tree": {"sha": "e8a71e22de514f268501b62694aeb0343f355eb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8a71e22de514f268501b62694aeb0343f355eb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/233fdb12cee6aa160579cfded171fa4c2f82b29c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/233fdb12cee6aa160579cfded171fa4c2f82b29c", "html_url": "https://github.com/rust-lang/rust/commit/233fdb12cee6aa160579cfded171fa4c2f82b29c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/233fdb12cee6aa160579cfded171fa4c2f82b29c/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a658c4a973d934d622957a6fb03916271496385", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a658c4a973d934d622957a6fb03916271496385", "html_url": "https://github.com/rust-lang/rust/commit/0a658c4a973d934d622957a6fb03916271496385"}], "stats": {"total": 65, "additions": 32, "deletions": 33}, "files": [{"sha": "09215a37a2be110cfc2cb0ef610f446affb16e4f", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -852,9 +852,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-server\"\n-version = \"0.4.1\"\n+version = \"0.5.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9c85acaf36c53bf15da2b8b35afeea56747707261f59eb0b77229081dd72b04e\"\n+checksum = \"69b18dfe0e4a380b872aa79d8e0ee6c3d7a9682466e84b83ad807c88b3545f79\"\n dependencies = [\n  \"crossbeam-channel 0.5.0\",\n  \"log\",\n@@ -864,9 +864,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.83.0\"\n+version = \"0.83.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"25e0bd4b95038f2c23bda332ba0ca684e8dda765db1f9bdb63dc4c3e01f3b456\"\n+checksum = \"c4e79f39834b97271f9f5ecec573e42c7d9c5bdbd2620b30a851054ece6aab6d\"\n dependencies = [\n  \"base64\",\n  \"bitflags\","}, {"sha": "56c51486f2cfcfb1ce816c19187e217bd8bfcb56", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -21,7 +21,7 @@ env_logger = { version = \"0.8.1\", default-features = false }\n itertools = \"0.9.0\"\n jod-thread = \"0.1.0\"\n log = \"0.4.8\"\n-lsp-types = { version = \"0.83.0\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.83.1\", features = [\"proposed\"] }\n parking_lot = \"0.11.0\"\n pico-args = \"0.3.1\"\n oorandom = \"11.1.2\"\n@@ -31,7 +31,7 @@ serde_json = \"1.0.48\"\n threadpool = \"1.7.1\"\n rayon = \"1.5\"\n mimalloc = { version = \"0.1.19\", default-features = false, optional = true }\n-lsp-server = \"0.4.0\"\n+lsp-server = \"0.5.0\"\n tracing = \"0.1\"\n tracing-subscriber = { version = \"0.2\", default-features = false, features = [\"env-filter\", \"registry\"] }\n tracing-tree = { version = \"0.1.4\" }"}, {"sha": "c7203451ca6a700bcd9ce84318e3fb5f6ff1cb95", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -62,6 +62,7 @@ pub fn server_capabilities(client_caps: &ClientCapabilities) -> ServerCapabiliti\n             prepare_provider: Some(true),\n             work_done_progress_options: WorkDoneProgressOptions { work_done_progress: None },\n         })),\n+        on_type_rename_provider: None,\n         document_link_provider: None,\n         color_provider: None,\n         execute_command_provider: None,"}, {"sha": "93bef5c8b48a4bf62225645cf06cfc74594bfa98", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -55,8 +55,8 @@ fn location_naive(workspace_root: &Path, span: &DiagnosticSpan) -> lsp_types::Lo\n \n     // FIXME: this doesn't handle UTF16 offsets correctly\n     let range = lsp_types::Range::new(\n-        lsp_types::Position::new(span.line_start as u64 - 1, span.column_start as u64 - 1),\n-        lsp_types::Position::new(span.line_end as u64 - 1, span.column_end as u64 - 1),\n+        lsp_types::Position::new(span.line_start as u32 - 1, span.column_start as u32 - 1),\n+        lsp_types::Position::new(span.line_end as u32 - 1, span.column_end as u32 - 1),\n     );\n \n     lsp_types::Location { uri, range }"}, {"sha": "cf091510ffad1785f6d8a822636beaa4d8f1edae", "filename": "crates/rust-analyzer/src/document.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fdocument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fdocument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdocument.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -6,11 +6,11 @@\n /// client notifications.\n #[derive(Debug, Clone)]\n pub(crate) struct DocumentData {\n-    pub(crate) version: Option<i64>,\n+    pub(crate) version: i32,\n }\n \n impl DocumentData {\n-    pub(crate) fn new(version: i64) -> Self {\n-        DocumentData { version: Some(version) }\n+    pub(crate) fn new(version: i32) -> Self {\n+        DocumentData { version }\n     }\n }"}, {"sha": "defe11c553004a2f2be9689d6a3dbe22de178c89", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -263,9 +263,9 @@ impl GlobalStateSnapshot {\n         self.vfs.read().1[&id]\n     }\n \n-    pub(crate) fn url_file_version(&self, url: &Url) -> Option<i64> {\n+    pub(crate) fn url_file_version(&self, url: &Url) -> Option<i32> {\n         let path = from_proto::vfs_path(&url).ok()?;\n-        self.mem_docs.get(&path)?.version\n+        Some(self.mem_docs.get(&path)?.version)\n     }\n \n     pub(crate) fn anchored_path(&self, file_id: FileId, path: &str) -> Url {"}, {"sha": "93ac45415fbeb57dcb39658e64960cb616da933e", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -302,7 +302,7 @@ pub enum SnippetDocumentChangeOperation {\n #[derive(Debug, Eq, PartialEq, Clone, Deserialize, Serialize)]\n #[serde(rename_all = \"camelCase\")]\n pub struct SnippetTextDocumentEdit {\n-    pub text_document: lsp_types::VersionedTextDocumentIdentifier,\n+    pub text_document: lsp_types::OptionalVersionedTextDocumentIdentifier,\n     pub edits: Vec<SnippetTextEdit>,\n }\n "}, {"sha": "6427c73672d6fdcd311cfb32c1241e5876ff7507", "filename": "crates/rust-analyzer/src/lsp_utils.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -51,7 +51,7 @@ impl GlobalState {\n         }\n         let percentage = fraction.map(|f| {\n             assert!(0.0 <= f && f <= 1.0);\n-            f * 100.0\n+            (f * 100.0) as u32\n         });\n         let token = lsp_types::ProgressToken::String(format!(\"rustAnalyzer/{}\", title));\n         let work_done_progress = match state {\n@@ -98,11 +98,11 @@ pub(crate) fn apply_document_changes(\n     // The VFS will normalize the end of lines to `\\n`.\n     enum IndexValid {\n         All,\n-        UpToLineExclusive(u64),\n+        UpToLineExclusive(u32),\n     }\n \n     impl IndexValid {\n-        fn covers(&self, line: u64) -> bool {\n+        fn covers(&self, line: u32) -> bool {\n             match *self {\n                 IndexValid::UpToLineExclusive(to) => to > line,\n                 _ => true,"}, {"sha": "6ea08adcead7f788f36163a2d3a1a890935dcfd4", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -368,7 +368,7 @@ impl GlobalState {\n                 let url = file_id_to_url(&self.vfs.read().0, file_id);\n                 let diagnostics = self.diagnostics.diagnostics_for(file_id).cloned().collect();\n                 let version = from_proto::vfs_path(&url)\n-                    .map(|path| self.mem_docs.get(&path)?.version)\n+                    .map(|path| self.mem_docs.get(&path).map(|it| it.version))\n                     .unwrap_or_default();\n \n                 self.send_notification::<lsp_types::notification::PublishDiagnostics>(\n@@ -521,7 +521,7 @@ impl GlobalState {\n                 let mut version = None;\n                 if let Ok(path) = from_proto::vfs_path(&params.text_document.uri) {\n                     match this.mem_docs.remove(&path) {\n-                        Some(doc) => version = doc.version,\n+                        Some(doc) => version = Some(doc.version),\n                         None => log::error!(\"orphan DidCloseTextDocument: {}\", path),\n                     }\n "}, {"sha": "2f35425bbce39bd424a021a6b7f3150f662667a2", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -21,9 +21,7 @@ use crate::{\n \n pub(crate) fn position(line_index: &LineIndex, offset: TextSize) -> lsp_types::Position {\n     let line_col = line_index.line_col(offset);\n-    let line = u64::from(line_col.line);\n-    let character = u64::from(line_col.col_utf16);\n-    lsp_types::Position::new(line, character)\n+    lsp_types::Position::new(line_col.line, line_col.col_utf16)\n }\n \n pub(crate) fn range(line_index: &LineIndex, range: TextRange) -> lsp_types::Range {\n@@ -278,9 +276,9 @@ pub(crate) fn signature_help(\n                     label.push_str(\", \");\n                 }\n                 first = false;\n-                let start = label.len() as u64;\n+                let start = label.len() as u32;\n                 label.push_str(param);\n-                let end = label.len() as u64;\n+                let end = label.len() as u32;\n                 params.push(lsp_types::ParameterInformation {\n                     label: lsp_types::ParameterLabel::LabelOffsets([start, end]),\n                     documentation: None,\n@@ -302,7 +300,7 @@ pub(crate) fn signature_help(\n         })\n     };\n \n-    let active_parameter = call_info.active_parameter.map(|it| it as i64);\n+    let active_parameter = call_info.active_parameter.map(|it| it as u32);\n \n     let signature = lsp_types::SignatureInformation {\n         label,\n@@ -518,13 +516,13 @@ pub(crate) fn url_from_abs_path(path: &Path) -> lsp_types::Url {\n     lsp_types::Url::parse(&url).unwrap()\n }\n \n-pub(crate) fn versioned_text_document_identifier(\n+pub(crate) fn optional_versioned_text_document_identifier(\n     snap: &GlobalStateSnapshot,\n     file_id: FileId,\n-) -> lsp_types::VersionedTextDocumentIdentifier {\n+) -> lsp_types::OptionalVersionedTextDocumentIdentifier {\n     let url = url(snap, file_id);\n     let version = snap.url_file_version(&url);\n-    lsp_types::VersionedTextDocumentIdentifier { uri: url, version }\n+    lsp_types::OptionalVersionedTextDocumentIdentifier { uri: url, version }\n }\n \n pub(crate) fn location(\n@@ -613,7 +611,7 @@ pub(crate) fn snippet_text_document_edit(\n     is_snippet: bool,\n     source_file_edit: SourceFileEdit,\n ) -> Result<lsp_ext::SnippetTextDocumentEdit> {\n-    let text_document = versioned_text_document_identifier(snap, source_file_edit.file_id);\n+    let text_document = optional_versioned_text_document_identifier(snap, source_file_edit.file_id);\n     let line_index = snap.analysis.file_line_index(source_file_edit.file_id)?;\n     let line_endings = snap.file_line_endings(source_file_edit.file_id);\n     let edits = source_file_edit"}, {"sha": "456125789397811b4282f132f1f395797321660f", "filename": "crates/rust-analyzer/tests/rust-analyzer/support.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -108,7 +108,7 @@ pub(crate) fn project(fixture: &str) -> Server {\n }\n \n pub(crate) struct Server {\n-    req_id: Cell<u64>,\n+    req_id: Cell<i32>,\n     messages: RefCell<Vec<Message>>,\n     _thread: jod_thread::JoinHandle<()>,\n     client: Connection,\n@@ -165,7 +165,7 @@ impl Server {\n         R::Params: Serialize,\n     {\n         let id = self.req_id.get();\n-        self.req_id.set(id + 1);\n+        self.req_id.set(id.wrapping_add(1));\n \n         let r = Request::new(id.into(), R::METHOD.to_string(), params);\n         self.send_request_(r)"}, {"sha": "8c01db07c8496519960288f4947623b938a2a6ab", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/233fdb12cee6aa160579cfded171fa4c2f82b29c/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/233fdb12cee6aa160579cfded171fa4c2f82b29c/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=233fdb12cee6aa160579cfded171fa4c2f82b29c", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: 9d5daed5b25dc4f6\n+lsp_ext.rs hash: 203fdf79b21b5987\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this  issue:\n@@ -45,7 +45,7 @@ interface SnippetTextEdit extends TextEdit {\n \n ```typescript\n export interface TextDocumentEdit {\n-\ttextDocument: VersionedTextDocumentIdentifier;\n+\ttextDocument: OptionalVersionedTextDocumentIdentifier;\n \tedits: (TextEdit | SnippetTextEdit)[];\n }\n ```"}]}