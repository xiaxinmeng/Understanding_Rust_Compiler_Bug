{"sha": "dd223d5c6da0cfa822151dd706bb14dc1476e4dd", "node_id": "C_kwDOAAsO6NoAKGRkMjIzZDVjNmRhMGNmYTgyMjE1MWRkNzA2YmIxNGRjMTQ3NmU0ZGQ", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-05T06:56:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-05T06:56:17Z"}, "message": "Rollup merge of #88651 - AGSaidi:monotonize-inner-64b-aarch64, r=dtolnay\n\nUse the 64b inner:monotonize() implementation not the 128b one for aarch64\n\naarch64 prior to v8.4 (FEAT_LSE2) doesn't have an instruction that guarantees\nuntorn 128b reads except for completing a 128b load/store exclusive pair\n(ldxp/stxp) or compare-and-swap (casp) successfully. The requirement to\ncomplete a 128b read+write atomic is actually more expensive and more unfair\nthan the previous implementation of monotonize() which used a Mutex on aarch64,\nespecially at large core counts.  For aarch64 switch to the 64b atomic\nimplementation which is about 13x faster for a benchmark that involves many\ncalls to Instant::now().", "tree": {"sha": "dded31dd3b09e1ff1fd88e6c9f15244056ff7129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dded31dd3b09e1ff1fd88e6c9f15244056ff7129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd223d5c6da0cfa822151dd706bb14dc1476e4dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhW/cRCRBK7hj4Ov3rIwAAN0wIADHk+pZx8NgDBrzTtj8pkYuy\nByn+fAadsqLsGKLc6tpO+P7R76ad3NqS1gR2to4SdqmraEGfgCWE+EA30YmqGLpZ\no10D3uSxuAtClbIKdUgSMJuW1SxD92LTsz+M3/6C1cBdsy5ccnGWnj8tUL3jsL/O\nPXh5vYWsHHqzozRPbvUFfhbnRhV/5oCk4+z8bUMtjHebeSBHMP8tkWjhhgcgIOVq\nnO38Y0X9kmlWQtADk5uf3voEr0kQsDN1xexVGi+3cnnzMvY8wjBWHxfg6FMG2oEn\nbLv1I+mlJjNDQ2r/1gIZHf+B24jAVqbbOf5ri96fqNTJsWjaiG7h5knUqDMSPm0=\n=tguQ\n-----END PGP SIGNATURE-----\n", "payload": "tree dded31dd3b09e1ff1fd88e6c9f15244056ff7129\nparent 7a09755148c4b1543f25862e785e04834feb8b61\nparent ce450f893d551e25123e0bdb27acc9a85d15cb7f\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633416977 -0700\ncommitter GitHub <noreply@github.com> 1633416977 -0700\n\nRollup merge of #88651 - AGSaidi:monotonize-inner-64b-aarch64, r=dtolnay\n\nUse the 64b inner:monotonize() implementation not the 128b one for aarch64\n\naarch64 prior to v8.4 (FEAT_LSE2) doesn't have an instruction that guarantees\nuntorn 128b reads except for completing a 128b load/store exclusive pair\n(ldxp/stxp) or compare-and-swap (casp) successfully. The requirement to\ncomplete a 128b read+write atomic is actually more expensive and more unfair\nthan the previous implementation of monotonize() which used a Mutex on aarch64,\nespecially at large core counts.  For aarch64 switch to the 64b atomic\nimplementation which is about 13x faster for a benchmark that involves many\ncalls to Instant::now().\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd223d5c6da0cfa822151dd706bb14dc1476e4dd", "html_url": "https://github.com/rust-lang/rust/commit/dd223d5c6da0cfa822151dd706bb14dc1476e4dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd223d5c6da0cfa822151dd706bb14dc1476e4dd/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a09755148c4b1543f25862e785e04834feb8b61", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a09755148c4b1543f25862e785e04834feb8b61", "html_url": "https://github.com/rust-lang/rust/commit/7a09755148c4b1543f25862e785e04834feb8b61"}, {"sha": "ce450f893d551e25123e0bdb27acc9a85d15cb7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce450f893d551e25123e0bdb27acc9a85d15cb7f", "html_url": "https://github.com/rust-lang/rust/commit/ce450f893d551e25123e0bdb27acc9a85d15cb7f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "64f16245c2b1643f902afe8b0b3e67dc1402a5b9", "filename": "library/std/src/time/monotonic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd223d5c6da0cfa822151dd706bb14dc1476e4dd/library%2Fstd%2Fsrc%2Ftime%2Fmonotonic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd223d5c6da0cfa822151dd706bb14dc1476e4dd/library%2Fstd%2Fsrc%2Ftime%2Fmonotonic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime%2Fmonotonic.rs?ref=dd223d5c6da0cfa822151dd706bb14dc1476e4dd", "patch": "@@ -5,7 +5,7 @@ pub(super) fn monotonize(raw: time::Instant) -> time::Instant {\n     inner::monotonize(raw)\n }\n \n-#[cfg(all(target_has_atomic = \"64\", not(target_has_atomic = \"128\")))]\n+#[cfg(any(all(target_has_atomic = \"64\", not(target_has_atomic = \"128\")), target_arch = \"aarch64\"))]\n pub mod inner {\n     use crate::sync::atomic::AtomicU64;\n     use crate::sync::atomic::Ordering::*;\n@@ -71,7 +71,7 @@ pub mod inner {\n     }\n }\n \n-#[cfg(target_has_atomic = \"128\")]\n+#[cfg(all(target_has_atomic = \"128\", not(target_arch = \"aarch64\")))]\n pub mod inner {\n     use crate::sync::atomic::AtomicU128;\n     use crate::sync::atomic::Ordering::*;"}]}