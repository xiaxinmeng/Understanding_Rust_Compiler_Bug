{"sha": "a0567d4063bf092d7ca8f6375507d4bb897b7804", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNTY3ZDQwNjNiZjA5MmQ3Y2E4ZjYzNzU1MDdkNGJiODk3Yjc4MDQ=", "commit": {"author": {"name": "Vincent Esche", "email": "regexident@gmail.com", "date": "2016-03-01T15:39:43Z"}, "committer": {"name": "Vincent Esche", "email": "regexident@gmail.com", "date": "2016-03-01T15:39:43Z"}, "message": "Fix for issue #811 (falsely inserted \"::\" in paths with parameterized trait cast).", "tree": {"sha": "a8a540cfea15e8538a1c9dbe7c8e32bee53eac45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8a540cfea15e8538a1c9dbe7c8e32bee53eac45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0567d4063bf092d7ca8f6375507d4bb897b7804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0567d4063bf092d7ca8f6375507d4bb897b7804", "html_url": "https://github.com/rust-lang/rust/commit/a0567d4063bf092d7ca8f6375507d4bb897b7804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0567d4063bf092d7ca8f6375507d4bb897b7804/comments", "author": {"login": "regexident", "id": 138017, "node_id": "MDQ6VXNlcjEzODAxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/138017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regexident", "html_url": "https://github.com/regexident", "followers_url": "https://api.github.com/users/regexident/followers", "following_url": "https://api.github.com/users/regexident/following{/other_user}", "gists_url": "https://api.github.com/users/regexident/gists{/gist_id}", "starred_url": "https://api.github.com/users/regexident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regexident/subscriptions", "organizations_url": "https://api.github.com/users/regexident/orgs", "repos_url": "https://api.github.com/users/regexident/repos", "events_url": "https://api.github.com/users/regexident/events{/privacy}", "received_events_url": "https://api.github.com/users/regexident/received_events", "type": "User", "site_admin": false}, "committer": {"login": "regexident", "id": 138017, "node_id": "MDQ6VXNlcjEzODAxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/138017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regexident", "html_url": "https://github.com/regexident", "followers_url": "https://api.github.com/users/regexident/followers", "following_url": "https://api.github.com/users/regexident/following{/other_user}", "gists_url": "https://api.github.com/users/regexident/gists{/gist_id}", "starred_url": "https://api.github.com/users/regexident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regexident/subscriptions", "organizations_url": "https://api.github.com/users/regexident/orgs", "repos_url": "https://api.github.com/users/regexident/repos", "events_url": "https://api.github.com/users/regexident/events{/privacy}", "received_events_url": "https://api.github.com/users/regexident/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65bc5c242de86f0651b34fd913ca338a880696e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/65bc5c242de86f0651b34fd913ca338a880696e8", "html_url": "https://github.com/rust-lang/rust/commit/65bc5c242de86f0651b34fd913ca338a880696e8"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "4f930f22cadeb4e8e5b30b103f885e270f386fa6", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0567d4063bf092d7ca8f6375507d4bb897b7804/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0567d4063bf092d7ca8f6375507d4bb897b7804/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=a0567d4063bf092d7ca8f6375507d4bb897b7804", "patch": "@@ -53,7 +53,7 @@ pub fn rewrite_path(context: &RewriteContext,\n             // 3 = \">::\".len()\n             let budget = try_opt!(width.checked_sub(extra_offset + 3));\n \n-            result = try_opt!(rewrite_path_segments(expr_context,\n+            result = try_opt!(rewrite_path_segments(false,\n                                                     result,\n                                                     path.segments.iter().take(skip_count),\n                                                     span_lo,"}, {"sha": "b7a89b5d0f9dc3a10abced001a68abd4d9e864c8", "filename": "tests/source/issue-811.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a0567d4063bf092d7ca8f6375507d4bb897b7804/tests%2Fsource%2Fissue-811.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0567d4063bf092d7ca8f6375507d4bb897b7804/tests%2Fsource%2Fissue-811.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-811.rs?ref=a0567d4063bf092d7ca8f6375507d4bb897b7804", "patch": "@@ -0,0 +1,19 @@\n+trait FooTrait<T>: Sized {\n+    type Bar: BarTrait<T>;\n+}\n+\n+trait BarTrait<T>: Sized {\n+    type Baz;\n+    fn foo();\n+}\n+\n+type Foo<T: FooTrait> = <<T as FooTrait<U>>::Bar as BarTrait<U>>::Baz;\n+type Bar<T: BarTrait> = <T as BarTrait<U>>::Baz;\n+\n+fn some_func<T: FooTrait<U>, U>() {\n+    <<T as FooTrait<U>>::Bar as BarTrait<U>>::foo();\n+}\n+\n+fn some_func<T: BarTrait<U>>() {\n+    <T as BarTrait<U>>::foo();\n+}"}, {"sha": "2b58c06941d93709d72880b03644b7bf481fdabe", "filename": "tests/target/issue-811.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a0567d4063bf092d7ca8f6375507d4bb897b7804/tests%2Ftarget%2Fissue-811.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0567d4063bf092d7ca8f6375507d4bb897b7804/tests%2Ftarget%2Fissue-811.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-811.rs?ref=a0567d4063bf092d7ca8f6375507d4bb897b7804", "patch": "@@ -0,0 +1,20 @@\n+trait FooTrait<T>: Sized {\n+    type Bar: BarTrait<T>;\n+}\n+\n+trait BarTrait<T>: Sized {\n+    type Baz;\n+    fn foo();\n+}\n+\n+type Foo<T: FooTrait> =\n+    <<T as FooTrait<U>>::Bar as BarTrait<U>>::Baz;\n+type Bar<T: BarTrait> = <T as BarTrait<U>>::Baz;\n+\n+fn some_func<T: FooTrait<U>, U>() {\n+    <<T as FooTrait<U>>::Bar as BarTrait<U>>::foo();\n+}\n+\n+fn some_func<T: BarTrait<U>>() {\n+    <T as BarTrait<U>>::foo();\n+}"}]}