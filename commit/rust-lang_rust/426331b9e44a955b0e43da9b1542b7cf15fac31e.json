{"sha": "426331b9e44a955b0e43da9b1542b7cf15fac31e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNjMzMWI5ZTQ0YTk1NWIwZTQzZGE5YjE1NDJiN2NmMTVmYWMzMWU=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-06-24T01:29:30Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-06-24T02:34:28Z"}, "message": "remove unused parameters from LintStore.find_lint\n\nLong ago, in the before-time, the find_lint method was created with the\nunused_variables (\"unused_variable\" in the singular, as it was called at\nthe time) attribute in anticipation of using the session and span in the\nhandling of renamed lints (31b7d64fd), and indeed, the session and span\ncame to be used in this method, while the unused_variables attribute\nremained (1ad1e2e29). In modern times, the session and span are again no\nlonger used (ca81d3dd); it seems we can safely prune them from the\nmethod signature, for justice, and mercy.", "tree": {"sha": "ec2a7b7e83f328f598efab11dab31718fe7fc1d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec2a7b7e83f328f598efab11dab31718fe7fc1d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/426331b9e44a955b0e43da9b1542b7cf15fac31e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/426331b9e44a955b0e43da9b1542b7cf15fac31e", "html_url": "https://github.com/rust-lang/rust/commit/426331b9e44a955b0e43da9b1542b7cf15fac31e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/426331b9e44a955b0e43da9b1542b7cf15fac31e/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "229d0d3266002d343cdd2f4a3bf7f2fe9da15f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/229d0d3266002d343cdd2f4a3bf7f2fe9da15f38", "html_url": "https://github.com/rust-lang/rust/commit/229d0d3266002d343cdd2f4a3bf7f2fe9da15f38"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "a550db34d6f23692f3a51a1293dcee810be3d1a1", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/426331b9e44a955b0e43da9b1542b7cf15fac31e/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426331b9e44a955b0e43da9b1542b7cf15fac31e/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=426331b9e44a955b0e43da9b1542b7cf15fac31e", "patch": "@@ -291,16 +291,13 @@ impl LintStore {\n         self.by_name.insert(name.into(), Removed(reason.into()));\n     }\n \n-    #[allow(unused_variables)]\n-    fn find_lint(&self, lint_name: &str, sess: &Session, span: Option<Span>)\n-                 -> Result<LintId, FindLintError>\n-    {\n+    fn find_lint(&self, lint_name: &str) -> Result<LintId, FindLintError> {\n         match self.by_name.get(lint_name) {\n             Some(&Id(lint_id)) => Ok(lint_id),\n             Some(&Renamed(_, lint_id)) => {\n                 Ok(lint_id)\n             },\n-            Some(&Removed(ref reason)) => {\n+            Some(&Removed(_)) => {\n                 Err(FindLintError::Removed)\n             },\n             None => Err(FindLintError::NotFound)\n@@ -313,7 +310,7 @@ impl LintStore {\n                                     &lint_name[..], level);\n \n             let lint_flag_val = Symbol::intern(&lint_name);\n-            match self.find_lint(&lint_name[..], sess, None) {\n+            match self.find_lint(&lint_name[..]) {\n                 Ok(lint_id) => self.levels.set(lint_id, (level, CommandLine(lint_flag_val))),\n                 Err(FindLintError::Removed) => { }\n                 Err(_) => {\n@@ -731,7 +728,7 @@ pub trait LintContext<'tcx>: Sized {\n                     continue;\n                 }\n                 Ok((lint_name, level, span)) => {\n-                    match self.lints().find_lint(&lint_name.as_str(), &self.sess(), Some(span)) {\n+                    match self.lints().find_lint(&lint_name.as_str()) {\n                         Ok(lint_id) => vec![(lint_id, level, span)],\n                         Err(FindLintError::NotFound) => {\n                             match self.lints().lint_groups.get(&*lint_name.as_str()) {\n@@ -1420,7 +1417,7 @@ impl Decodable for LintId {\n     fn decode<D: Decoder>(d: &mut D) -> Result<LintId, D::Error> {\n         let s = d.read_str()?;\n         ty::tls::with(|tcx| {\n-            match tcx.sess.lint_store.borrow().find_lint(&s, tcx.sess, None) {\n+            match tcx.sess.lint_store.borrow().find_lint(&s) {\n                 Ok(id) => Ok(id),\n                 Err(_) => panic!(\"invalid lint-id `{}`\", s),\n             }"}]}