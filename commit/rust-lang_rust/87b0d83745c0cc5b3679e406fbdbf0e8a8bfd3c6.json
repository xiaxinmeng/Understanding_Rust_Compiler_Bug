{"sha": "87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YjBkODM3NDVjMGNjNWIzNjc5ZTQwNmZiZGJmMGU4YThiZmQzYzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-23T12:52:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-23T12:52:48Z"}, "message": "Auto merge of #69351 - mati865:mingw-ultimate-fix, r=cramertj\n\nImprove external MinGW detection\n\nFixes #68872", "tree": {"sha": "dc9a33c0ca3fc29cde9fdbd382674069dc81c5ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc9a33c0ca3fc29cde9fdbd382674069dc81c5ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6", "html_url": "https://github.com/rust-lang/rust/commit/87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c230f39c159cf7645bc4dbab511b9586d033021", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c230f39c159cf7645bc4dbab511b9586d033021", "html_url": "https://github.com/rust-lang/rust/commit/9c230f39c159cf7645bc4dbab511b9586d033021"}, {"sha": "4904b9c228317a9cba963afb87425754a586acf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4904b9c228317a9cba963afb87425754a586acf2", "html_url": "https://github.com/rust-lang/rust/commit/4904b9c228317a9cba963afb87425754a586acf2"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "78aacc56ea42e02927c7748384569eff36b83eee", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=87b0d83745c0cc5b3679e406fbdbf0e8a8bfd3c6", "patch": "@@ -1002,20 +1002,26 @@ fn get_crt_libs_path(sess: &Session) -> Option<PathBuf> {\n                     x if x == \"x86\" => \"i686\",\n                     x => x,\n                 };\n+                let mingw_bits = &sess.target.target.target_pointer_width;\n                 let mingw_dir = format!(\"{}-w64-mingw32\", mingw_arch);\n                 // Here we have path/bin/gcc but we need path/\n                 let mut path = linker_path;\n                 path.pop();\n                 path.pop();\n-                // Based on Clang MinGW driver\n-                let probe_path = path.join(&mingw_dir).join(\"lib\");\n-                if probe_path.exists() {\n-                    return Some(probe_path);\n-                };\n-                let probe_path = path.join(&mingw_dir).join(\"sys-root/mingw/lib\");\n-                if probe_path.exists() {\n-                    return Some(probe_path);\n-                };\n+                // Loosely based on Clang MinGW driver\n+                let probe_paths = vec![\n+                    path.join(&mingw_dir).join(\"lib\"),                // Typical path\n+                    path.join(&mingw_dir).join(\"sys-root/mingw/lib\"), // Rare path\n+                    path.join(format!(\n+                        \"lib/mingw/tools/install/mingw{}/{}/lib\",\n+                        &mingw_bits, &mingw_dir\n+                    )), // Chocolatey is creative\n+                ];\n+                for probe_path in probe_paths {\n+                    if probe_path.join(\"crt2.o\").exists() {\n+                        return Some(probe_path);\n+                    };\n+                }\n             };\n         };\n         None"}]}