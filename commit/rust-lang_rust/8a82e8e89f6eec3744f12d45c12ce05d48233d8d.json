{"sha": "8a82e8e89f6eec3744f12d45c12ce05d48233d8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhODJlOGU4OWY2ZWVjMzc0NGYxMmQ0NWMxMmNlMDVkNDgyMzNkOGQ=", "commit": {"author": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-01-09T20:58:41Z"}, "committer": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-01-13T10:18:58Z"}, "message": "Mention in the exact_chunks docs that this can often be optimized better by the compiler\n\nAnd also link from the normal chunks iterator to the exact_chunks one.", "tree": {"sha": "54f43d2a63290907bfba5f0caf2c3552c19292a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54f43d2a63290907bfba5f0caf2c3552c19292a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a82e8e89f6eec3744f12d45c12ce05d48233d8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a82e8e89f6eec3744f12d45c12ce05d48233d8d", "html_url": "https://github.com/rust-lang/rust/commit/8a82e8e89f6eec3744f12d45c12ce05d48233d8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a82e8e89f6eec3744f12d45c12ce05d48233d8d/comments", "author": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bf1dfdd76625ba753de0d1b87a2825606cf6f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf1dfdd76625ba753de0d1b87a2825606cf6f2b", "html_url": "https://github.com/rust-lang/rust/commit/6bf1dfdd76625ba753de0d1b87a2825606cf6f2b"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "f8980b8777e93e3cfe2490c9b051c42904a66772", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8a82e8e89f6eec3744f12d45c12ce05d48233d8d/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a82e8e89f6eec3744f12d45c12ce05d48233d8d/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=8a82e8e89f6eec3744f12d45c12ce05d48233d8d", "patch": "@@ -613,6 +613,9 @@ impl<T> [T] {\n     /// not divide the length of the slice, then the last chunk will\n     /// not have length `chunk_size`.\n     ///\n+    /// See [`exact_chunks`] for a variant of this iterator that returns chunks\n+    /// of always exactly `chunk_size` elements.\n+    ///\n     /// # Panics\n     ///\n     /// Panics if `chunk_size` is 0.\n@@ -638,6 +641,10 @@ impl<T> [T] {\n     /// not divide the length of the slice, then the last up to `chunk_size-1`\n     /// elements will be omitted.\n     ///\n+    /// Due to each chunk having exactly `chunk_size` elements, the compiler\n+    /// can often optimize the resulting code better than in the case of\n+    /// [`chunks`].\n+    ///\n     /// # Panics\n     ///\n     /// Panics if `chunk_size` is 0.\n@@ -664,6 +671,9 @@ impl<T> [T] {\n     /// not divide the length of the slice, then the last chunk will not\n     /// have length `chunk_size`.\n     ///\n+    /// See [`exact_chunks_mut`] for a variant of this iterator that returns chunks\n+    /// of always exactly `chunk_size` elements.\n+    ///\n     /// # Panics\n     ///\n     /// Panics if `chunk_size` is 0.\n@@ -693,6 +703,11 @@ impl<T> [T] {\n     /// not divide the length of the slice, then the last up to `chunk_size-1`\n     /// elements will be omitted.\n     ///\n+    ///\n+    /// Due to each chunk having exactly `chunk_size` elements, the compiler\n+    /// can often optimize the resulting code better than in the case of\n+    /// [`chunks_mut`].\n+    ///\n     /// # Panics\n     ///\n     /// Panics if `chunk_size` is 0."}]}