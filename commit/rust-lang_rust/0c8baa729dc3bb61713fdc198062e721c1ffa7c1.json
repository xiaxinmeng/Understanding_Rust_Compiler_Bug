{"sha": "0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjOGJhYTcyOWRjM2JiNjE3MTNmZGMxOTgwNjJlNzIxYzFmZmE3YzE=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-07-19T11:06:24Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-07-19T14:15:48Z"}, "message": "refactor gating of dist docs", "tree": {"sha": "9150106e1f3393382ccea878bafafe7bfc8478f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9150106e1f3393382ccea878bafafe7bfc8478f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmD1iRYACgkQzXazX3c0\ndp6+xxAAkgJz7LpRanXZwgx6t515+ltW9T/HU/PHqFxqvEBIIAXqUIqOJp9jBEcm\n4/jMa0/I5uj1VWb52j0DanQ8lFaWNmv3KGut1RgADGw6wxtbrum2K2fiGYX/S4yy\nZVZTs8+1lVX8yP+IvaWoYR3ILOmpYfNyTov3e73+XBibHSj2ncmv5iHee0VlNVrn\nuIqvhmzC2Dl5NdnPT2J7Gb0JB2lBzL7yhxKkhQC9KRZK0lUbToO8i/+rmesC3RgS\nMzlOQZ+vsQnS5iFwz2g47w+ve0kZ879RmkK6ZAWV5soLrhvLfEA5eTgdMt3jMBdS\nC6Ry4himE9dBG3kplLF8pCe41AqRcXFsqiFLHik+Gzr85z1bfkHLaMwFnwtRmT3D\nvQDLsXS9tD6V9RQ9ydbLHvNrQQG77yBJfwvbnQ4dnG5wSqXP3OcpyBTAl7p3l06g\np9s1izDgbmLBfxDLl7Eq+4Kq8GG2Kh5rgoSugp5ZvI2ndT+Ov7JFBM6Fd4nyWwu8\naNAL+1cdLLKB8t4o9gwEdw3XV/ElQNvTf/E2kHKEgOhcwt+seSX3REy6CxQUD3/Y\nnn6KuXbxXNbOc1NCXnblzS+V4q5eAP5iQPg8q9/bPR+6g9C8IFV1PxtCbbErVCxF\nY3bwu0Q8tSfjKWaIHF5LB2vpGOkoo+xoOGn0lAzessuTljca8Sg=\n=0iEB\n-----END PGP SIGNATURE-----", "payload": "tree 9150106e1f3393382ccea878bafafe7bfc8478f3\nparent 8f3844ff07449ebd045ba8fd9adcac62e957cfe8\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1626692784 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1626704148 +0200\n\nrefactor gating of dist docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "html_url": "https://github.com/rust-lang/rust/commit/0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c8baa729dc3bb61713fdc198062e721c1ffa7c1/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f3844ff07449ebd045ba8fd9adcac62e957cfe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f3844ff07449ebd045ba8fd9adcac62e957cfe8", "html_url": "https://github.com/rust-lang/rust/commit/8f3844ff07449ebd045ba8fd9adcac62e957cfe8"}], "stats": {"total": 29, "additions": 11, "deletions": 18}, "files": [{"sha": "b0764791907b3add64d0d8009aa87fc07e9610ce", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0c8baa729dc3bb61713fdc198062e721c1ffa7c1/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c8baa729dc3bb61713fdc198062e721c1ffa7c1/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "patch": "@@ -51,23 +51,21 @@ pub struct Docs {\n }\n \n impl Step for Docs {\n-    type Output = Option<GeneratedTarball>;\n+    type Output = GeneratedTarball;\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/doc\")\n+        let default = run.builder.config.docs;\n+        run.path(\"src/doc\").default_condition(default)\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n         run.builder.ensure(Docs { host: run.target });\n     }\n \n     /// Builds the `rust-docs` installer component.\n-    fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {\n+    fn run(self, builder: &Builder<'_>) -> GeneratedTarball {\n         let host = self.host;\n-        if !builder.config.docs {\n-            return None;\n-        }\n         builder.default_doc(&[]);\n \n         let dest = \"share/doc/rust/html\";\n@@ -76,7 +74,7 @@ impl Step for Docs {\n         tarball.set_product_name(\"Rust Documentation\");\n         tarball.add_bulk_dir(&builder.doc_out(host), dest);\n         tarball.add_file(&builder.src.join(\"src/doc/robots.txt\"), dest, 0o644);\n-        Some(tarball.generate())\n+        tarball.generate()\n     }\n }\n \n@@ -1354,6 +1352,10 @@ impl Step for Extended {\n         tarballs.push(builder.ensure(Rustc { compiler: builder.compiler(stage, target) }));\n         tarballs.push(builder.ensure(Std { compiler, target }).expect(\"missing std\"));\n \n+        if builder.config.docs {\n+            tarballs.push(builder.ensure(Docs { host: target }));\n+        }\n+\n         let cargo_installer = builder.ensure(Cargo { compiler, target });\n         let rustfmt_installer = builder.ensure(Rustfmt { compiler, target });\n         let rust_demangler_installer = builder.ensure(RustDemangler { compiler, target });\n@@ -1365,8 +1367,6 @@ impl Step for Extended {\n         let mingw_installer = builder.ensure(Mingw { host: target });\n         let analysis_installer = builder.ensure(Analysis { compiler, target });\n \n-        let docs_installer = builder.ensure(Docs { host: target });\n-\n         let etc = builder.src.join(\"src/etc/installer\");\n \n         // Avoid producing tarballs during a dry run.\n@@ -1385,9 +1385,6 @@ impl Step for Extended {\n         if let Some(analysis_installer) = analysis_installer {\n             tarballs.push(analysis_installer);\n         }\n-        if let Some(docs_installer) = docs_installer {\n-            tarballs.push(docs_installer);\n-        }\n         if target.contains(\"pc-windows-gnu\") {\n             tarballs.push(mingw_installer.unwrap());\n         }"}, {"sha": "1eb516fb77125d575101f17dcf5141141f3f99fe", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c8baa729dc3bb61713fdc198062e721c1ffa7c1/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c8baa729dc3bb61713fdc198062e721c1ffa7c1/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=0c8baa729dc3bb61713fdc198062e721c1ffa7c1", "patch": "@@ -139,12 +139,8 @@ macro_rules! install {\n \n install!((self, builder, _config),\n     Docs, \"src/doc\", _config.docs, only_hosts: false, {\n-        if let Some(tarball) = builder.ensure(dist::Docs { host: self.target }) {\n-            install_sh(builder, \"docs\", self.compiler.stage, Some(self.target), &tarball);\n-        } else {\n-            panic!(\"docs are not available to install, \\\n-                check that `build.docs` is true in `config.toml`\");\n-        }\n+        let tarball = builder.ensure(dist::Docs { host: self.target });\n+        install_sh(builder, \"docs\", self.compiler.stage, Some(self.target), &tarball);\n     };\n     Std, \"library/std\", true, only_hosts: false, {\n         for target in &builder.targets {"}]}