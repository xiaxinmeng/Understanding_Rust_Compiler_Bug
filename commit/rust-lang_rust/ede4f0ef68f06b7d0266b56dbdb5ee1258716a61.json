{"sha": "ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "node_id": "C_kwDOAAsO6NoAKGVkZTRmMGVmNjhmMDZiN2QwMjY2YjU2ZGJkYjVlZTEyNTg3MTZhNjE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-15T16:41:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-15T16:41:26Z"}, "message": "Rollup merge of #97042 - GuillaumeGomez:eslint-brace-style, r=notriddle\n\nAdd new eslint rule about brace style\n\nIt also prevents one liners.\n\nr? `@notriddle`", "tree": {"sha": "0ac8f6c83dd9819ba95d07a8ff6b86f2ce3f0336", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ac8f6c83dd9819ba95d07a8ff6b86f2ce3f0336"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJigS03CRBK7hj4Ov3rIwAAAeQIAJfq8gWpuU64w7S2d0at9Omp\nH9iAciuUk7ZO7nn99WanqTn8lwEoKgCsMobYEdCCB7lQbR20Secy0pUpZHOqPkQ1\nL1Lrjrh6J+LEuxaNuQJ2RjHDqrtbYxj3YKl8PEEc+PrOSh40aaeXLsm7VqkETQm/\nrxbvxHUGD1x2FOe5p0Zn1AEPn9FTkbjb5enHui7rYb3pdEp1Wnw+ga7LiAkj7qXK\nZCMYXDYpWfu6UxjhuCzqOqi+Lg3CYotgJ8lvpSnqGUNXY9dFHNJEiUUyJ6SbgM2A\nojicV2+AVnTaJrAy7lQCFxxLeNQt6DChjjGDi2Ym11VCaUQ1hWhrMhuqR4m9QBc=\n=d6gr\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ac8f6c83dd9819ba95d07a8ff6b86f2ce3f0336\nparent e8e7555c344b7c76cdf430e0c2e9e8070df07b5a\nparent 5d84c0c569792e3dd2cb5b5beeba99ff09b22d1e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1652632886 +0200\ncommitter GitHub <noreply@github.com> 1652632886 +0200\n\nRollup merge of #97042 - GuillaumeGomez:eslint-brace-style, r=notriddle\n\nAdd new eslint rule about brace style\n\nIt also prevents one liners.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "html_url": "https://github.com/rust-lang/rust/commit/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8e7555c344b7c76cdf430e0c2e9e8070df07b5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e7555c344b7c76cdf430e0c2e9e8070df07b5a", "html_url": "https://github.com/rust-lang/rust/commit/e8e7555c344b7c76cdf430e0c2e9e8070df07b5a"}, {"sha": "5d84c0c569792e3dd2cb5b5beeba99ff09b22d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d84c0c569792e3dd2cb5b5beeba99ff09b22d1e", "html_url": "https://github.com/rust-lang/rust/commit/5d84c0c569792e3dd2cb5b5beeba99ff09b22d1e"}], "stats": {"total": 90, "additions": 57, "deletions": 33}, "files": [{"sha": "7634a15b9bd19ed6993f84e0c985424747fd42fa", "filename": "src/librustdoc/html/static/.eslintrc.js", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "raw_url": "https://github.com/rust-lang/rust/raw/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2F.eslintrc.js?ref=ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "patch": "@@ -29,5 +29,10 @@ module.exports = {\n         \"no-var\": [\"error\"],\n         \"prefer-const\": [\"error\"],\n         \"prefer-arrow-callback\": [\"error\"],\n+        \"brace-style\": [\n+            \"error\",\n+            \"1tbs\",\n+            { \"allowSingleLine\": false }\n+        ],\n     }\n };"}, {"sha": "454c7f557b9bcf8512590bdb5d83ad760407f374", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "patch": "@@ -709,8 +709,8 @@ function loadCss(cssFileName) {\n             onEachLazy(document.getElementsByClassName(\"rustdoc-toggle\"), e => {\n                 if (e.parentNode.id !== \"implementations-list\" ||\n                     (!hasClass(e, \"implementors-toggle\") &&\n-                     !hasClass(e, \"type-contents-toggle\")))\n-                {\n+                     !hasClass(e, \"type-contents-toggle\"))\n+                ) {\n                     e.open = false;\n                 }\n             });"}, {"sha": "7b9d86a851b1983039b8166979c64a0afb616319", "filename": "src/librustdoc/html/static/js/scrape-examples.js", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "raw_url": "https://github.com/rust-lang/rust/raw/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js?ref=ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "patch": "@@ -98,7 +98,9 @@\n             // visible. This is necessary since updateScrapedExample calls scrollToLoc which\n             // depends on offsetHeight, a property that requires an element to be visible to\n             // compute correctly.\n-            setTimeout(() => { onEachLazy(moreExamples, updateScrapedExample); });\n+            setTimeout(() => {\n+                onEachLazy(moreExamples, updateScrapedExample);\n+            });\n         }, {once: true});\n     });\n })();"}, {"sha": "0be70d77d06e4e75b27e2a4e7e7acfdf3f9c5520", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 45, "deletions": 28, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "patch": "@@ -320,8 +320,8 @@ window.initSearch = rawSearchIndex => {\n                     if (foundExclamation) {\n                         throw new Error(\"Cannot have more than one `!` in an ident\");\n                     } else if (parserState.pos + 1 < parserState.length &&\n-                        isIdentCharacter(parserState.userQuery[parserState.pos + 1]))\n-                    {\n+                        isIdentCharacter(parserState.userQuery[parserState.pos + 1])\n+                    ) {\n                         throw new Error(\"`!` can only be at the end of an ident\");\n                     }\n                     foundExclamation = true;\n@@ -330,12 +330,10 @@ window.initSearch = rawSearchIndex => {\n                 } else if (\n                     isStopCharacter(c) ||\n                     isSpecialStartCharacter(c) ||\n-                    isSeparatorCharacter(c))\n-                {\n+                    isSeparatorCharacter(c)\n+                ) {\n                     break;\n-                }\n-                // If we allow paths (\"str::string\" for example).\n-                else if (c === \":\") {\n+                } else if (c === \":\") { // If we allow paths (\"str::string\" for example).\n                     if (!isPathStart(parserState)) {\n                         break;\n                     }\n@@ -372,8 +370,8 @@ window.initSearch = rawSearchIndex => {\n             end = getIdentEndPosition(parserState);\n         }\n         if (parserState.pos < parserState.length &&\n-            parserState.userQuery[parserState.pos] === \"<\")\n-        {\n+            parserState.userQuery[parserState.pos] === \"<\"\n+        ) {\n             if (isInGenerics) {\n                 throw new Error(\"Unexpected `<` after `<`\");\n             } else if (start >= end) {\n@@ -592,8 +590,8 @@ window.initSearch = rawSearchIndex => {\n \n         if (elem &&\n             elem.value !== \"All crates\" &&\n-            hasOwnPropertyRustdoc(rawSearchIndex, elem.value))\n-        {\n+            hasOwnPropertyRustdoc(rawSearchIndex, elem.value)\n+        ) {\n             return elem.value;\n         }\n         return null;\n@@ -786,37 +784,51 @@ window.initSearch = rawSearchIndex => {\n                 // sort by exact match with regard to the last word (mismatch goes later)\n                 a = (aaa.word !== userQuery);\n                 b = (bbb.word !== userQuery);\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n \n                 // Sort by non levenshtein results and then levenshtein results by the distance\n                 // (less changes required to match means higher rankings)\n                 a = (aaa.lev);\n                 b = (bbb.lev);\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n \n                 // sort by crate (non-current crate goes later)\n                 a = (aaa.item.crate !== window.currentCrate);\n                 b = (bbb.item.crate !== window.currentCrate);\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n \n                 // sort by item name length (longer goes later)\n                 a = aaa.word.length;\n                 b = bbb.word.length;\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n \n                 // sort by item name (lexicographically larger goes later)\n                 a = aaa.word;\n                 b = bbb.word;\n-                if (a !== b) { return (a > b ? +1 : -1); }\n+                if (a !== b) {\n+                    return (a > b ? +1 : -1);\n+                }\n \n                 // sort by index of keyword in item name (no literal occurrence goes later)\n                 a = (aaa.index < 0);\n                 b = (bbb.index < 0);\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n                 // (later literal occurrence, if any, goes later)\n                 a = aaa.index;\n                 b = bbb.index;\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n \n                 // special precedence for primitive and keyword pages\n                 if ((aaa.item.ty === TY_PRIMITIVE && bbb.item.ty !== TY_KEYWORD) ||\n@@ -831,17 +843,23 @@ window.initSearch = rawSearchIndex => {\n                 // sort by description (no description goes later)\n                 a = (aaa.item.desc === \"\");\n                 b = (bbb.item.desc === \"\");\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n \n                 // sort by type (later occurrence in `itemTypes` goes later)\n                 a = aaa.item.ty;\n                 b = bbb.item.ty;\n-                if (a !== b) { return a - b; }\n+                if (a !== b) {\n+                    return a - b;\n+                }\n \n                 // sort by path (lexicographically larger goes later)\n                 a = aaa.item.path;\n                 b = bbb.item.path;\n-                if (a !== b) { return (a > b ? +1 : -1); }\n+                if (a !== b) {\n+                    return (a > b ? +1 : -1);\n+                }\n \n                 // que sera, sera\n                 return 0;\n@@ -1315,16 +1333,15 @@ window.initSearch = rawSearchIndex => {\n             }\n \n             if (searchWord.indexOf(elem.pathLast) > -1 ||\n-                row.normalizedName.indexOf(elem.pathLast) > -1)\n-            {\n+                row.normalizedName.indexOf(elem.pathLast) > -1\n+            ) {\n                 // filter type: ... queries\n                 if (!results_others[fullId] !== undefined) {\n                     index = row.normalizedName.indexOf(elem.pathLast);\n                 }\n             }\n             lev = levenshtein(searchWord, elem.pathLast);\n-            if (lev > 0 && elem.pathLast.length > 2 && searchWord.indexOf(elem.pathLast) > -1)\n-            {\n+            if (lev > 0 && elem.pathLast.length > 2 && searchWord.indexOf(elem.pathLast) > -1) {\n                 if (elem.pathLast.length < 6) {\n                     lev = 1;\n                 } else {\n@@ -1670,8 +1687,8 @@ window.initSearch = rawSearchIndex => {\n             // By default, the search DOM element is \"empty\" (meaning it has no children not\n             // text content). Once a search has been run, it won't be empty, even if you press\n             // ESC or empty the search input (which also \"cancels\" the search).\n-            && (!search.firstChild || search.firstChild.innerText !== searchState.loadingText)))\n-        {\n+            && (!search.firstChild || search.firstChild.innerText !== searchState.loadingText))\n+        ) {\n             const elem = document.createElement(\"a\");\n             elem.href = results.others[0].href;\n             removeClass(elem, \"active\");\n@@ -1766,7 +1783,7 @@ window.initSearch = rawSearchIndex => {\n         let i = 0;\n         for (const elem of elems) {\n             const j = i;\n-            elem.onclick = () => { printTab(j); };\n+            elem.onclick = () => printTab(j);\n             searchState.focusedByTab.push(null);\n             i += 1;\n         }"}, {"sha": "2e2305029cdddb723021748d5cd48624f57ad49c", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/ede4f0ef68f06b7d0266b56dbdb5ee1258716a61/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=ede4f0ef68f06b7d0266b56dbdb5ee1258716a61", "patch": "@@ -254,8 +254,8 @@\n     function blurHandler(event) {\n         const settingsButton = getSettingsButton();\n         if (!elemIsInParent(document.activeElement, settingsButton) &&\n-            !elemIsInParent(event.relatedTarget, settingsButton))\n-        {\n+            !elemIsInParent(event.relatedTarget, settingsButton)\n+        ) {\n             window.hideSettings();\n         }\n     }"}]}