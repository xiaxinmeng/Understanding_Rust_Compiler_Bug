{"sha": "cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542", "node_id": "C_kwDOAAsO6NoAKGNkN2JkOGJmMGE0ZDIyZWQ3OGFiMGRkODIxN2Q5NDBiNDFlN2Q1NDI", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-30T17:35:50Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-30T17:35:50Z"}, "message": "rustdoc: filter '_ lifetimes from ty::PolyTraitRef\n\nFixes #98697", "tree": {"sha": "de0604b0f7e8be1068021692e752cd8770e37d89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de0604b0f7e8be1068021692e752cd8770e37d89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542", "html_url": "https://github.com/rust-lang/rust/commit/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7425fb293f510a6f138e82a963a3bc599a5b9e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7425fb293f510a6f138e82a963a3bc599a5b9e1c", "html_url": "https://github.com/rust-lang/rust/commit/7425fb293f510a6f138e82a963a3bc599a5b9e1c"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "6ee725edcfc1d87202afeddd99c4e7e036b8c5be", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542", "patch": "@@ -167,7 +167,7 @@ fn clean_poly_trait_ref_with_bindings<'tcx>(\n         .collect_referenced_late_bound_regions(&poly_trait_ref)\n         .into_iter()\n         .filter_map(|br| match br {\n-            ty::BrNamed(_, name) => Some(GenericParamDef {\n+            ty::BrNamed(_, name) if name != kw::UnderscoreLifetime => Some(GenericParamDef {\n                 name,\n                 kind: GenericParamDefKind::Lifetime { outlives: vec![] },\n             }),"}, {"sha": "22cbeae72662ae697b093992c358ad425c64dd9a", "filename": "src/test/rustdoc/auxiliary/issue-98697-reexport-with-anonymous-lifetime.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-98697-reexport-with-anonymous-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-98697-reexport-with-anonymous-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-98697-reexport-with-anonymous-lifetime.rs?ref=cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542", "patch": "@@ -0,0 +1,9 @@\n+/// When reexporting this function, make sure the anonymous lifetimes are not rendered.\n+///\n+/// https://github.com/rust-lang/rust/issues/98697\n+pub fn repro<F>()\n+where\n+    F: Fn(&str),\n+{\n+    unimplemented!()\n+}"}, {"sha": "25ab55acd7747bea71ae95e08495b86bcfc9286f", "filename": "src/test/rustdoc/issue-98697.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542/src%2Ftest%2Frustdoc%2Fissue-98697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542/src%2Ftest%2Frustdoc%2Fissue-98697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-98697.rs?ref=cd7bd8bf0a4d22ed78ab0dd8217d940b41e7d542", "patch": "@@ -0,0 +1,13 @@\n+// aux-build:issue-98697-reexport-with-anonymous-lifetime.rs\n+// ignore-cross-compile\n+\n+// When reexporting a function with a HRTB with anonymous lifetimes,\n+// make sure the anonymous lifetimes are not rendered.\n+//\n+// https://github.com/rust-lang/rust/issues/98697\n+\n+extern crate issue_98697_reexport_with_anonymous_lifetime;\n+\n+// @has issue_98697/fn.repro.html '//pre[@class=\"rust fn\"]/code' 'fn repro<F>() where F: Fn(&str)'\n+// @!has issue_98697/fn.repro.html '//pre[@class=\"rust fn\"]/code' 'for<'\n+pub use issue_98697_reexport_with_anonymous_lifetime::repro;"}]}