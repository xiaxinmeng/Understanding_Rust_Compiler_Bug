{"sha": "57239460813806d74f6e5404876a6f3fc8f9262b", "node_id": "C_kwDOAAsO6NoAKDU3MjM5NDYwODEzODA2ZDc0ZjZlNTQwNDg3NmE2ZjNmYzhmOTI2MmI", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2022-01-26T03:39:14Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2022-02-23T06:08:06Z"}, "message": "rustc_errors: take `self` by value in `DiagnosticBuilder::cancel`.", "tree": {"sha": "ca2852cde50360700704a5a14abdacd8ee019be3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca2852cde50360700704a5a14abdacd8ee019be3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57239460813806d74f6e5404876a6f3fc8f9262b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57239460813806d74f6e5404876a6f3fc8f9262b", "html_url": "https://github.com/rust-lang/rust/commit/57239460813806d74f6e5404876a6f3fc8f9262b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57239460813806d74f6e5404876a6f3fc8f9262b/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7592663e85fe82de5f346a77a22772230b1378a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7592663e85fe82de5f346a77a22772230b1378a1", "html_url": "https://github.com/rust-lang/rust/commit/7592663e85fe82de5f346a77a22772230b1378a1"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "d4bddd957858ff30eb732c8999ada0f28b9faed0", "filename": "src/modules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=57239460813806d74f6e5404876a6f3fc8f9262b", "patch": "@@ -439,7 +439,7 @@ impl<'ast, 'sess, 'c> ModResolver<'ast, 'sess> {\n                 }\n             }\n             Err(mod_err) if !mods_outside_ast.is_empty() => {\n-                if let ModError::ParserError(mut e) = mod_err {\n+                if let ModError::ParserError(e) = mod_err {\n                     e.cancel();\n                 }\n                 Ok(Some(SubModKind::MultiExternal(mods_outside_ast)))"}, {"sha": "306b6bb745ee6d0221571f17ccc32fdad0986336", "filename": "src/parse/macros/cfg_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fmacros%2Fcfg_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fmacros%2Fcfg_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fmacros%2Fcfg_if.rs?ref=57239460813806d74f6e5404876a6f3fc8f9262b", "patch": "@@ -57,7 +57,7 @@ fn parse_cfg_if_inner<'a>(\n             let item = match parser.parse_item(ForceCollect::No) {\n                 Ok(Some(item_ptr)) => item_ptr.into_inner(),\n                 Ok(None) => continue,\n-                Err(mut err) => {\n+                Err(err) => {\n                     err.cancel();\n                     parser.sess.span_diagnostic.reset_err_count();\n                     return Err("}, {"sha": "4c541de04be0894d4a53ef53890043105b345630", "filename": "src/parse/macros/lazy_static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fmacros%2Flazy_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fmacros%2Flazy_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fmacros%2Flazy_static.rs?ref=57239460813806d74f6e5404876a6f3fc8f9262b", "patch": "@@ -23,7 +23,7 @@ pub(crate) fn parse_lazy_static(\n                         val\n                     }\n                 }\n-                Err(mut err) => {\n+                Err(err) => {\n                     err.cancel();\n                     parser.sess.span_diagnostic.reset_err_count();\n                     return None;"}, {"sha": "fd738908170f86ef5264737ae24ab466228c146e", "filename": "src/parse/macros/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fmacros%2Fmod.rs?ref=57239460813806d74f6e5404876a6f3fc8f9262b", "patch": "@@ -36,7 +36,7 @@ fn parse_macro_arg<'a, 'b: 'a>(parser: &'a mut Parser<'b>) -> Option<MacroArg> {\n                         return Some(MacroArg::$macro_arg($f(x)?));\n                     }\n                 }\n-                Err(mut e) => {\n+                Err(e) => {\n                     e.cancel();\n                     parser.sess.span_diagnostic.reset_err_count();\n                 }"}, {"sha": "f0944a88d2f2222be8cb519efd2c7c5f70b46aee", "filename": "src/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fparser.rs?ref=57239460813806d74f6e5404876a6f3fc8f9262b", "patch": "@@ -115,7 +115,7 @@ impl<'a> Parser<'a> {\n             match parser.parse_mod(&TokenKind::Eof) {\n                 Ok(result) => Some(result),\n                 Err(mut e) => {\n-                    sess.emit_or_cancel_diagnostic(&mut e);\n+                    e.emit();\n                     if sess.can_reset_errors() {\n                         sess.reset_errors();\n                     }"}, {"sha": "40a6d708d8cccb25911c89b0cf85295481c698ad", "filename": "src/parse/session.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57239460813806d74f6e5404876a6f3fc8f9262b/src%2Fparse%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fsession.rs?ref=57239460813806d74f6e5404876a6f3fc8f9262b", "patch": "@@ -230,17 +230,6 @@ impl ParseSess {\n         }\n     }\n \n-    pub(crate) fn emit_or_cancel_diagnostic(&self, diagnostic: &mut Diagnostic) {\n-        self.parse_sess.span_diagnostic.emit_diagnostic(diagnostic);\n-        // The Handler will check whether the diagnostic should be emitted\n-        // based on the user's rustfmt configuration and the originating file\n-        // that caused the parser error. If the Handler determined it should skip\n-        // emission then we need to ensure the diagnostic is cancelled.\n-        if !diagnostic.cancelled() {\n-            diagnostic.cancel();\n-        }\n-    }\n-\n     pub(super) fn can_reset_errors(&self) -> bool {\n         self.can_reset_errors.load(Ordering::Acquire)\n     }"}]}