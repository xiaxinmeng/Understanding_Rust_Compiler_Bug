{"sha": "4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "node_id": "C_kwDOAAsO6NoAKDRjOTc1NjlhNTQ2YzFmMWQ5YmJmYmI2ZjJlNmE3NTQ2NmNkOWZhYWQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-05T17:26:54Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-05T18:14:40Z"}, "message": "Move patched sysroot from build_sysroot/ to download/", "tree": {"sha": "ca4903a1ecc569a1469ed043343f007fc0bc19a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca4903a1ecc569a1469ed043343f007fc0bc19a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "html_url": "https://github.com/rust-lang/rust/commit/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "571405deea18bc71c1376db2625f66301def846e", "url": "https://api.github.com/repos/rust-lang/rust/commits/571405deea18bc71c1376db2625f66301def846e", "html_url": "https://github.com/rust-lang/rust/commit/571405deea18bc71c1376db2625f66301def846e"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "8012e93f6a90ebdee2747548145a52b8f2e3f45c", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -1,4 +1,4 @@\n-target\n+/target\n **/*.rs.bk\n *.rlib\n *.o\n@@ -11,9 +11,6 @@ perf.data.old\n /y.exe\n /y.pdb\n /build\n-/build_sysroot/sysroot_src\n-/build_sysroot/compiler-builtins\n-/build_sysroot/rustc_version\n /dist\n /rust\n /download"}, {"sha": "711d4ccc55bfb5ffea53f3527f6fe5a84e5250ff", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -146,10 +146,11 @@ pub(crate) fn build_sysroot(\n     }\n }\n \n-// FIXME move to download/ or dist/\n-pub(crate) static SYSROOT_RUSTC_VERSION: RelPath = RelPath::BUILD_SYSROOT.join(\"rustc_version\");\n-pub(crate) static SYSROOT_SRC: RelPath = RelPath::BUILD_SYSROOT.join(\"sysroot_src\");\n-static STANDARD_LIBRARY: CargoProject = CargoProject::new(&RelPath::BUILD_SYSROOT, \"build_sysroot\");\n+pub(crate) static ORIG_BUILD_SYSROOT: RelPath = RelPath::SOURCE.join(\"build_sysroot\");\n+pub(crate) static BUILD_SYSROOT: RelPath = RelPath::DOWNLOAD.join(\"sysroot\");\n+pub(crate) static SYSROOT_RUSTC_VERSION: RelPath = BUILD_SYSROOT.join(\"rustc_version\");\n+pub(crate) static SYSROOT_SRC: RelPath = BUILD_SYSROOT.join(\"sysroot_src\");\n+static STANDARD_LIBRARY: CargoProject = CargoProject::new(&BUILD_SYSROOT, \"build_sysroot\");\n \n fn build_clif_sysroot_for_triple(\n     dirs: &Dirs,"}, {"sha": "35ab6f111fef40a2fedd4909a2f08af3769c8f20", "filename": "build_system/path.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fpath.rs?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -42,7 +42,6 @@ impl RelPath {\n     pub(crate) const DIST: RelPath = RelPath::Base(PathBase::Dist);\n \n     pub(crate) const SCRIPTS: RelPath = RelPath::SOURCE.join(\"scripts\");\n-    pub(crate) const BUILD_SYSROOT: RelPath = RelPath::SOURCE.join(\"build_sysroot\");\n     pub(crate) const PATCHES: RelPath = RelPath::SOURCE.join(\"patches\");\n \n     pub(crate) const fn join(&'static self, suffix: &'static str) -> RelPath {"}, {"sha": "f9ef29849eb7e7cf22b8f9b847db3338de77d249", "filename": "build_system/prepare.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -3,9 +3,11 @@ use std::fs;\n use std::path::{Path, PathBuf};\n use std::process::Command;\n \n-use super::build_sysroot::{SYSROOT_RUSTC_VERSION, SYSROOT_SRC};\n+use crate::build_system::rustc_info::get_default_sysroot;\n+\n+use super::build_sysroot::{BUILD_SYSROOT, ORIG_BUILD_SYSROOT, SYSROOT_RUSTC_VERSION, SYSROOT_SRC};\n use super::path::{Dirs, RelPath};\n-use super::rustc_info::{get_file_name, get_rustc_path, get_rustc_version};\n+use super::rustc_info::{get_file_name, get_rustc_version};\n use super::utils::{copy_dir_recursively, spawn_and_wait, Compiler};\n \n pub(crate) fn prepare(dirs: &Dirs) {\n@@ -49,27 +51,27 @@ pub(crate) fn prepare(dirs: &Dirs) {\n }\n \n fn prepare_sysroot(dirs: &Dirs) {\n-    let rustc_path = get_rustc_path();\n-    let sysroot_src_orig = rustc_path.parent().unwrap().join(\"../lib/rustlib/src/rust\");\n-    let sysroot_src = SYSROOT_SRC;\n-\n+    let sysroot_src_orig = get_default_sysroot().join(\"lib/rustlib/src/rust\");\n     assert!(sysroot_src_orig.exists());\n \n-    sysroot_src.ensure_fresh(dirs);\n-    fs::create_dir_all(sysroot_src.to_path(dirs).join(\"library\")).unwrap();\n     eprintln!(\"[COPY] sysroot src\");\n+\n+    BUILD_SYSROOT.ensure_fresh(dirs);\n+    copy_dir_recursively(&ORIG_BUILD_SYSROOT.to_path(dirs), &BUILD_SYSROOT.to_path(dirs));\n+\n+    fs::create_dir_all(SYSROOT_SRC.to_path(dirs).join(\"library\")).unwrap();\n     copy_dir_recursively(\n         &sysroot_src_orig.join(\"library\"),\n-        &sysroot_src.to_path(dirs).join(\"library\"),\n+        &SYSROOT_SRC.to_path(dirs).join(\"library\"),\n     );\n \n     let rustc_version = get_rustc_version();\n     fs::write(SYSROOT_RUSTC_VERSION.to_path(dirs), &rustc_version).unwrap();\n \n     eprintln!(\"[GIT] init\");\n-    init_git_repo(&sysroot_src.to_path(dirs));\n+    init_git_repo(&SYSROOT_SRC.to_path(dirs));\n \n-    apply_patches(dirs, \"sysroot\", &sysroot_src.to_path(dirs));\n+    apply_patches(dirs, \"sysroot\", &SYSROOT_SRC.to_path(dirs));\n }\n \n pub(crate) struct GitRepo {"}, {"sha": "bc112910ce6be276ff7346dc466df87aecff51f3", "filename": "build_system/tests.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -1,3 +1,5 @@\n+use crate::build_system::build_sysroot::SYSROOT_SRC;\n+\n use super::build_sysroot;\n use super::config;\n use super::path::{Dirs, RelPath};\n@@ -262,7 +264,7 @@ pub(crate) static SIMPLE_RAYTRACER: CargoProject =\n     CargoProject::new(&SIMPLE_RAYTRACER_REPO.source_dir(), \"simple_raytracer\");\n \n static LIBCORE_TESTS: CargoProject =\n-    CargoProject::new(&RelPath::BUILD_SYSROOT.join(\"sysroot_src/library/core/tests\"), \"core_tests\");\n+    CargoProject::new(&SYSROOT_SRC.join(\"library/core/tests\"), \"core_tests\");\n \n const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n     TestCase::new(\"test.rust-random/rand\", &|runner| {"}, {"sha": "34cb081e375373ed0771fb82c5991917ee9ac370", "filename": "clean_all.sh", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/clean_all.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/clean_all.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clean_all.sh?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -1,10 +1,9 @@\n #!/usr/bin/env bash\n set -e\n \n-rm -rf build_sysroot/{sysroot_src/,target/,compiler-builtins/,rustc_version}\n-rm -rf target/ build/ dist/ perf.data{,.old} y.bin\n-rm -rf download/\n+rm -rf target/ download/ build/ dist/ y.bin y.exe\n \n # Kept for now in case someone updates their checkout of cg_clif before running clean_all.sh\n # FIXME remove at some point in the future\n rm -rf rand/ regex/ simple-raytracer/ portable-simd/ abi-checker/ abi-cafe/\n+rm -rf build_sysroot/{sysroot_src/,target/,compiler-builtins/,rustc_version}"}, {"sha": "6111c2054446387142b4b27dd21e7ff460162ca0", "filename": "scripts/rustup.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/scripts%2Frustup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/scripts%2Frustup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Frustup.sh?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -17,10 +17,10 @@ case $1 in\n         done\n \n         ./clean_all.sh\n-        ./y.rs prepare\n \n         (cd build_sysroot && cargo update)\n \n+        ./y.rs prepare\n         ;;\n     \"commit\")\n         git add rust-toolchain build_sysroot/Cargo.lock"}, {"sha": "88bc64455030eeb321448302a1617a071ede89f0", "filename": "scripts/setup_rust_fork.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/scripts%2Fsetup_rust_fork.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad/scripts%2Fsetup_rust_fork.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fsetup_rust_fork.sh?ref=4c97569a546c1f1d9bbfbb6f2e6a75466cd9faad", "patch": "@@ -51,7 +51,7 @@ popd\n # FIXME remove once inline asm is fully supported\n export RUSTFLAGS=\"$RUSTFLAGS --cfg=rustix_use_libc\"\n \n-export CFG_VIRTUAL_RUST_SOURCE_BASE_DIR=\"$(cd build_sysroot/sysroot_src; pwd)\"\n+export CFG_VIRTUAL_RUST_SOURCE_BASE_DIR=\"$(cd download/sysroot/sysroot_src; pwd)\"\n \n # Allow the testsuite to use llvm tools\n host_triple=$(rustc -vV | grep host | cut -d: -f2 | tr -d \" \")"}]}