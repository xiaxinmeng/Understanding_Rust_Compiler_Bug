{"sha": "f78ce412ef7b5137f91976dd93fb18865118ebae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3OGNlNDEyZWY3YjUxMzdmOTE5NzZkZDkzZmIxODg2NTExOGViYWU=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-01-22T19:23:51Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-01-22T19:27:34Z"}, "message": "astconv: don't use as_local_node_id for ids in a Def\n\nFixes #30535", "tree": {"sha": "71a977bd966ee505587f03c940fdd2babfe7d946", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71a977bd966ee505587f03c940fdd2babfe7d946"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f78ce412ef7b5137f91976dd93fb18865118ebae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f78ce412ef7b5137f91976dd93fb18865118ebae", "html_url": "https://github.com/rust-lang/rust/commit/f78ce412ef7b5137f91976dd93fb18865118ebae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f78ce412ef7b5137f91976dd93fb18865118ebae/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6ba7fee97e6834f3a72281f88621c10bd562669", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6ba7fee97e6834f3a72281f88621c10bd562669", "html_url": "https://github.com/rust-lang/rust/commit/c6ba7fee97e6834f3a72281f88621c10bd562669"}], "stats": {"total": 68, "additions": 38, "deletions": 30}, "files": [{"sha": "d67f5f9db5ee4f3bc70f1adae480e017aeef4c7b", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=f78ce412ef7b5137f91976dd93fb18865118ebae", "patch": "@@ -1513,7 +1513,7 @@ fn base_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n                         &base_segments[base_segments.len()-2],\n                         base_segments.last().unwrap())\n         }\n-        Def::Mod(id) => {\n+        Def::Mod(..) => {\n             // Used as sentinel by callers to indicate the `<T>::A::B::C` form.\n             // FIXME(#22519) This part of the resolution logic should be\n             // avoided entirely for that form, once we stop needed a Def\n@@ -1522,15 +1522,7 @@ fn base_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n             // resolve Self::Foo, at the moment we can't resolve the former because\n             // we don't have the trait information around, which is just sad.\n \n-            if !base_segments.is_empty() {\n-                let id_node = tcx.map.as_local_node_id(id).unwrap();\n-                span_err!(tcx.sess,\n-                          span,\n-                          E0247,\n-                          \"found module name used as a type: {}\",\n-                          tcx.map.node_to_user_string(id_node));\n-                return this.tcx().types.err;\n-            }\n+            assert!(base_segments.is_empty());\n \n             opt_self_ty.expect(\"missing T in <T>::a::b::c\")\n         }\n@@ -1541,10 +1533,9 @@ fn base_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n             return this.tcx().types.err;\n         }\n         _ => {\n-            let id_node = tcx.map.as_local_node_id(def.def_id()).unwrap();\n             span_err!(tcx.sess, span, E0248,\n                       \"found value `{}` used as a type\",\n-                      tcx.map.path_to_string(id_node));\n+                      tcx.item_path_str(def.def_id()));\n             return this.tcx().types.err;\n         }\n     }"}, {"sha": "fdc23f89de23779c444e63c7f9d1b1c6a9206364", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=f78ce412ef7b5137f91976dd93fb18865118ebae", "patch": "@@ -2565,24 +2565,6 @@ struct Bar<S, T> { x: Foo<S, T> }\n ```\n \"##,\n \n-//NB: not currently reachable\n-E0247: r##\"\n-This error indicates an attempt to use a module name where a type is expected.\n-For example:\n-\n-```\n-mod MyMod {\n-    mod MySubMod { }\n-}\n-\n-fn do_something(x: MyMod::MySubMod) { }\n-```\n-\n-In this example, we're attempting to take a parameter of type `MyMod::MySubMod`\n-in the do_something function. This is not legal: `MyMod::MySubMod` is a module\n-name, not a type.\n-\"##,\n-\n E0248: r##\"\n This error indicates an attempt to use a value where a type is expected. For\n example:\n@@ -3438,6 +3420,7 @@ register_diagnostics! {\n     E0242, // internal error looking up a definition\n     E0245, // not a trait\n //  E0246, // invalid recursive type\n+//  E0247,\n //  E0319, // trait impls for defaulted traits allowed just for structs/enums\n     E0320, // recursive overflow during dropck\n     E0328, // cannot implement Unsize explicitly"}, {"sha": "8d44e8d1016169a8c50a9c96d09017f6cdc16ebd", "filename": "src/test/auxiliary/issue-30535.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Ftest%2Fauxiliary%2Fissue-30535.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Ftest%2Fauxiliary%2Fissue-30535.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-30535.rs?ref=f78ce412ef7b5137f91976dd93fb18865118ebae", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub enum Foo {\n+    FooV { data: () }\n+}"}, {"sha": "93f3086d05771980741232610f1008ee9c8c98bc", "filename": "src/test/compile-fail/issue-30535.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Ftest%2Fcompile-fail%2Fissue-30535.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78ce412ef7b5137f91976dd93fb18865118ebae/src%2Ftest%2Fcompile-fail%2Fissue-30535.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30535.rs?ref=f78ce412ef7b5137f91976dd93fb18865118ebae", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-30535.rs\n+\n+extern crate issue_30535 as foo;\n+\n+fn bar(\n+    _: foo::Foo::FooV //~ ERROR value `foo::Foo::FooV` used as a type\n+) {}\n+\n+fn main() {}"}]}