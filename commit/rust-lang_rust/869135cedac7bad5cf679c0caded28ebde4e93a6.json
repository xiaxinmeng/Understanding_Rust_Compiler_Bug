{"sha": "869135cedac7bad5cf679c0caded28ebde4e93a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OTEzNWNlZGFjN2JhZDVjZjY3OWMwY2FkZWQyOGViZGU0ZTkzYTY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-08T23:15:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-08T23:15:58Z"}, "message": "Rollup merge of #58257 - taiki-e:librustc_target-2018, r=Centril\n\nlibrustc_target => 2018\n\nTransitions `librustc_target` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "64166635d69d9f5fdb9db736a10fbbfea1cb0662", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64166635d69d9f5fdb9db736a10fbbfea1cb0662"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/869135cedac7bad5cf679c0caded28ebde4e93a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXg2uCRBK7hj4Ov3rIwAAdHIIAKE3uNcDfZnYikaloA3UjuS/\nwj2KN4mq2zi8FsI5y75lzta035HzS48ZryyvrzR7dS0tpJwCDK/Wfo9ufLzmhWnj\nbYiHN+WlRnsy6G0qlEtSSHsb4/W2NL++8/86OVH4+vsb1qTHyqSx/sA2yTP9d8xU\nx2AvVri1mlIJS3M6z427D4JEC1KofMYIGI7UE8CDchJJuH5HNd59eILZIOEkWpNu\nooVkN+nsalthGGhzRZXgw+wkkL40ZaPuKCzLm18sNnl/9J2nuEUxNB1ZUIh1mlOQ\ncbFzFd1vIt4xeOtOKb0+IUdlTtBKg+TfzZdfYsltRUwCSxod3yfdfv36x1La6h4=\n=Btd1\n-----END PGP SIGNATURE-----\n", "payload": "tree 64166635d69d9f5fdb9db736a10fbbfea1cb0662\nparent 21509b81fadfbf6af524c2a99063ba5e3de990e9\nparent a7241c8ca6e37d4861c0ddc5639aee9d66fdbe8f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1549667758 +0100\ncommitter GitHub <noreply@github.com> 1549667758 +0100\n\nRollup merge of #58257 - taiki-e:librustc_target-2018, r=Centril\n\nlibrustc_target => 2018\n\nTransitions `librustc_target` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/869135cedac7bad5cf679c0caded28ebde4e93a6", "html_url": "https://github.com/rust-lang/rust/commit/869135cedac7bad5cf679c0caded28ebde4e93a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/869135cedac7bad5cf679c0caded28ebde4e93a6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21509b81fadfbf6af524c2a99063ba5e3de990e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/21509b81fadfbf6af524c2a99063ba5e3de990e9", "html_url": "https://github.com/rust-lang/rust/commit/21509b81fadfbf6af524c2a99063ba5e3de990e9"}, {"sha": "a7241c8ca6e37d4861c0ddc5639aee9d66fdbe8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7241c8ca6e37d4861c0ddc5639aee9d66fdbe8f", "html_url": "https://github.com/rust-lang/rust/commit/a7241c8ca6e37d4861c0ddc5639aee9d66fdbe8f"}], "stats": {"total": 441, "additions": 221, "deletions": 220}, "files": [{"sha": "ecea15a992250427a3bc6e8d7e161b8153e2e1bf", "filename": "src/librustc_target/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2FCargo.toml?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc_target\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_target\""}, {"sha": "f50ec6c2e7e3aa2d270374bcae9e41a01c0bd848", "filename": "src/librustc_target/abi/call/aarch64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Faarch64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,5 +1,5 @@\n-use abi::call::{FnType, ArgType, Reg, RegKind, Uniform};\n-use abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::abi::call::{FnType, ArgType, Reg, RegKind, Uniform};\n+use crate::abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n \n fn is_homogeneous_aggregate<'a, Ty, C>(cx: &C, arg: &mut ArgType<'a, Ty>)\n                                      -> Option<Uniform>"}, {"sha": "6bfd1f4387385252428aede04aaf43de8dc6fda5", "filename": "src/librustc_target/abi/call/amdgpu.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Famdgpu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Famdgpu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Famdgpu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,5 +1,5 @@\n-use abi::call::{ArgType, FnType, };\n-use abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::abi::call::{ArgType, FnType, };\n+use crate::abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n \n fn classify_ret_ty<'a, Ty, C>(_cx: &C, ret: &mut ArgType<'a, Ty>)\n   where Ty: TyLayoutMethods<'a, C> + Copy,"}, {"sha": "52d7f3ac3dcbf5363b2e9c09de79ad2284150dd0", "filename": "src/librustc_target/abi/call/arm.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Farm.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,6 +1,6 @@\n-use abi::call::{Conv, FnType, ArgType, Reg, RegKind, Uniform};\n-use abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n-use spec::HasTargetSpec;\n+use crate::abi::call::{Conv, FnType, ArgType, Reg, RegKind, Uniform};\n+use crate::abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::spec::HasTargetSpec;\n \n fn is_homogeneous_aggregate<'a, Ty, C>(cx: &C, arg: &mut ArgType<'a, Ty>)\n                                      -> Option<Uniform>"}, {"sha": "92c86372a86f331c5b7a0ab137958e1996fe9b1f", "filename": "src/librustc_target/abi/call/asmjs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fasmjs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fasmjs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fasmjs.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,5 +1,5 @@\n-use abi::call::{FnType, ArgType, Uniform};\n-use abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::abi::call::{FnType, ArgType, Uniform};\n+use crate::abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n \n // Data layout: e-p:32:32-i64:64-v128:32:128-n32-S128\n \n@@ -26,7 +26,7 @@ fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<'a, Ty>)\n     }\n }\n \n-fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>) {\n+fn classify_arg_ty<Ty>(arg: &mut ArgType<'_, Ty>) {\n     if arg.layout.is_aggregate() {\n         arg.make_indirect_byval();\n     }"}, {"sha": "db8c915cdb4bdb4c490b87ed30f0c1884163e611", "filename": "src/librustc_target/abi/call/hexagon.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fhexagon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fhexagon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fhexagon.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,24 +1,24 @@\n #![allow(non_upper_case_globals)]\n \n-use abi::call::{FnType, ArgType};\n+use crate::abi::call::{FnType, ArgType};\n \n-fn classify_ret_ty<Ty>(ret: &mut ArgType<Ty>) {\n+fn classify_ret_ty<Ty>(ret: &mut ArgType<'_, Ty>) {\n     if ret.layout.is_aggregate() && ret.layout.size.bits() > 64 {\n         ret.make_indirect();\n     } else {\n         ret.extend_integer_width_to(32);\n     }\n }\n \n-fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>) {\n+fn classify_arg_ty<Ty>(arg: &mut ArgType<'_, Ty>) {\n     if arg.layout.is_aggregate() && arg.layout.size.bits() > 64 {\n         arg.make_indirect();\n     } else {\n         arg.extend_integer_width_to(32);\n     }\n }\n \n-pub fn compute_abi_info<Ty>(fty: &mut FnType<Ty>) {\n+pub fn compute_abi_info<Ty>(fty: &mut FnType<'_,Ty>) {\n     if !fty.ret.is_ignore() {\n         classify_ret_ty(&mut fty.ret);\n     }"}, {"sha": "d496abf8e8b286c1c7d1d278fac38d73bcb7bb73", "filename": "src/librustc_target/abi/call/mips.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fmips.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n-use abi::call::{ArgType, FnType, Reg, Uniform};\n-use abi::{HasDataLayout, LayoutOf, Size, TyLayoutMethods};\n+use crate::abi::call::{ArgType, FnType, Reg, Uniform};\n+use crate::abi::{HasDataLayout, LayoutOf, Size, TyLayoutMethods};\n \n-fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<Ty>, offset: &mut Size)\n+fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<'_, Ty>, offset: &mut Size)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     if !ret.layout.is_aggregate() {\n@@ -12,7 +12,7 @@ fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<Ty>, offset: &mut Size)\n     }\n }\n \n-fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<Ty>, offset: &mut Size)\n+fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<'_, Ty>, offset: &mut Size)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     let dl = cx.data_layout();\n@@ -34,7 +34,7 @@ fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<Ty>, offset: &mut Size)\n     *offset = offset.align_to(align) + size.align_to(align);\n }\n \n-pub fn compute_abi_info<'a, Ty, C>(cx: &C, fty: &mut FnType<Ty>)\n+pub fn compute_abi_info<'a, Ty, C>(cx: &C, fty: &mut FnType<'_, Ty>)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     let mut offset = Size::ZERO;"}, {"sha": "5ba05c6bcde377c915f75815dc8a05ef3552f5c2", "filename": "src/librustc_target/abi/call/mips64.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmips64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmips64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fmips64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n-use abi::call::{ArgAttribute, ArgType, CastTarget, FnType, PassMode, Reg, RegKind, Uniform};\n-use abi::{self, HasDataLayout, LayoutOf, Size, TyLayout, TyLayoutMethods};\n+use crate::abi::call::{ArgAttribute, ArgType, CastTarget, FnType, PassMode, Reg, RegKind, Uniform};\n+use crate::abi::{self, HasDataLayout, LayoutOf, Size, TyLayout, TyLayoutMethods};\n \n-fn extend_integer_width_mips<Ty>(arg: &mut ArgType<Ty>, bits: u64) {\n+fn extend_integer_width_mips<Ty>(arg: &mut ArgType<'_, Ty>, bits: u64) {\n     // Always sign extend u32 values on 64-bit mips\n     if let abi::Abi::Scalar(ref scalar) = arg.layout.abi {\n         if let abi::Int(i, signed) = scalar.value {"}, {"sha": "839c9a857e64aaa1a8cfce5dd8e130b55fc8bc2c", "filename": "src/librustc_target/abi/call/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,6 +1,6 @@\n-use abi::{self, Abi, Align, FieldPlacement, Size};\n-use abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n-use spec::HasTargetSpec;\n+use crate::abi::{self, Abi, Align, FieldPlacement, Size};\n+use crate::abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::spec::{self, HasTargetSpec};\n \n mod aarch64;\n mod amdgpu;\n@@ -42,13 +42,13 @@ pub enum PassMode {\n \n // Hack to disable non_upper_case_globals only for the bitflags! and not for the rest\n // of this module\n-pub use self::attr_impl::ArgAttribute;\n+pub use attr_impl::ArgAttribute;\n \n #[allow(non_upper_case_globals)]\n #[allow(unused)]\n mod attr_impl {\n     // The subset of llvm::Attribute needed for arguments, packed into a bitfield.\n-    bitflags! {\n+    bitflags::bitflags! {\n         #[derive(Default)]\n         pub struct ArgAttribute: u16 {\n             const ByVal     = 1 << 0;\n@@ -526,22 +526,22 @@ pub struct FnType<'a, Ty> {\n }\n \n impl<'a, Ty> FnType<'a, Ty> {\n-    pub fn adjust_for_cabi<C>(&mut self, cx: &C, abi: ::spec::abi::Abi) -> Result<(), String>\n+    pub fn adjust_for_cabi<C>(&mut self, cx: &C, abi: spec::abi::Abi) -> Result<(), String>\n         where Ty: TyLayoutMethods<'a, C> + Copy,\n               C: LayoutOf<Ty = Ty, TyLayout = TyLayout<'a, Ty>> + HasDataLayout + HasTargetSpec\n     {\n         match &cx.target_spec().arch[..] {\n             \"x86\" => {\n-                let flavor = if abi == ::spec::abi::Abi::Fastcall {\n+                let flavor = if abi == spec::abi::Abi::Fastcall {\n                     x86::Flavor::Fastcall\n                 } else {\n                     x86::Flavor::General\n                 };\n                 x86::compute_abi_info(cx, self, flavor);\n             },\n-            \"x86_64\" => if abi == ::spec::abi::Abi::SysV64 {\n+            \"x86_64\" => if abi == spec::abi::Abi::SysV64 {\n                 x86_64::compute_abi_info(cx, self);\n-            } else if abi == ::spec::abi::Abi::Win64 || cx.target_spec().options.is_like_windows {\n+            } else if abi == spec::abi::Abi::Win64 || cx.target_spec().options.is_like_windows {\n                 x86_win64::compute_abi_info(self);\n             } else {\n                 x86_64::compute_abi_info(cx, self);"}, {"sha": "7ae1116cba847fcfb58929bb47cf0b4d2532fa74", "filename": "src/librustc_target/abi/call/msp430.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmsp430.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fmsp430.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fmsp430.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,31 +1,31 @@\n // Reference: MSP430 Embedded Application Binary Interface\n // http://www.ti.com/lit/an/slaa534/slaa534.pdf\n \n-use abi::call::{ArgType, FnType};\n+use crate::abi::call::{ArgType, FnType};\n \n // 3.5 Structures or Unions Passed and Returned by Reference\n //\n // \"Structures (including classes) and unions larger than 32 bits are passed and\n // returned by reference. To pass a structure or union by reference, the caller\n // places its address in the appropriate location: either in a register or on\n // the stack, according to its position in the argument list. (..)\"\n-fn classify_ret_ty<Ty>(ret: &mut ArgType<Ty>) {\n+fn classify_ret_ty<Ty>(ret: &mut ArgType<'_, Ty>) {\n     if ret.layout.is_aggregate() && ret.layout.size.bits() > 32 {\n         ret.make_indirect();\n     } else {\n         ret.extend_integer_width_to(16);\n     }\n }\n \n-fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>) {\n+fn classify_arg_ty<Ty>(arg: &mut ArgType<'_, Ty>) {\n     if arg.layout.is_aggregate() && arg.layout.size.bits() > 32 {\n         arg.make_indirect();\n     } else {\n         arg.extend_integer_width_to(16);\n     }\n }\n \n-pub fn compute_abi_info<Ty>(fty: &mut FnType<Ty>) {\n+pub fn compute_abi_info<Ty>(fty: &mut FnType<'_, Ty>) {\n     if !fty.ret.is_ignore() {\n         classify_ret_ty(&mut fty.ret);\n     }"}, {"sha": "4722249f73007148c2b54d262ec33500b0289af5", "filename": "src/librustc_target/abi/call/nvptx.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fnvptx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fnvptx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fnvptx.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,25 +1,25 @@\n // Reference: PTX Writer's Guide to Interoperability\n // http://docs.nvidia.com/cuda/ptx-writers-guide-to-interoperability\n \n-use abi::call::{ArgType, FnType};\n+use crate::abi::call::{ArgType, FnType};\n \n-fn classify_ret_ty<Ty>(ret: &mut ArgType<Ty>) {\n+fn classify_ret_ty<Ty>(ret: &mut ArgType<'_, Ty>) {\n     if ret.layout.is_aggregate() && ret.layout.size.bits() > 32 {\n         ret.make_indirect();\n     } else {\n         ret.extend_integer_width_to(32);\n     }\n }\n \n-fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>) {\n+fn classify_arg_ty<Ty>(arg: &mut ArgType<'_, Ty>) {\n     if arg.layout.is_aggregate() && arg.layout.size.bits() > 32 {\n         arg.make_indirect();\n     } else {\n         arg.extend_integer_width_to(32);\n     }\n }\n \n-pub fn compute_abi_info<Ty>(fty: &mut FnType<Ty>) {\n+pub fn compute_abi_info<Ty>(fty: &mut FnType<'_, Ty>) {\n     if !fty.ret.is_ignore() {\n         classify_ret_ty(&mut fty.ret);\n     }"}, {"sha": "51c00ae007c3c8244d68fa213cc0fcf4a2266177", "filename": "src/librustc_target/abi/call/nvptx64.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fnvptx64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fnvptx64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fnvptx64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,25 +1,25 @@\n // Reference: PTX Writer's Guide to Interoperability\n // http://docs.nvidia.com/cuda/ptx-writers-guide-to-interoperability\n \n-use abi::call::{ArgType, FnType};\n+use crate::abi::call::{ArgType, FnType};\n \n-fn classify_ret_ty<Ty>(ret: &mut ArgType<Ty>) {\n+fn classify_ret_ty<Ty>(ret: &mut ArgType<'_, Ty>) {\n     if ret.layout.is_aggregate() && ret.layout.size.bits() > 64 {\n         ret.make_indirect();\n     } else {\n         ret.extend_integer_width_to(64);\n     }\n }\n \n-fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>) {\n+fn classify_arg_ty<Ty>(arg: &mut ArgType<'_, Ty>) {\n     if arg.layout.is_aggregate() && arg.layout.size.bits() > 64 {\n         arg.make_indirect();\n     } else {\n         arg.extend_integer_width_to(64);\n     }\n }\n \n-pub fn compute_abi_info<Ty>(fty: &mut FnType<Ty>) {\n+pub fn compute_abi_info<Ty>(fty: &mut FnType<'_, Ty>) {\n     if !fty.ret.is_ignore() {\n         classify_ret_ty(&mut fty.ret);\n     }"}, {"sha": "d496abf8e8b286c1c7d1d278fac38d73bcb7bb73", "filename": "src/librustc_target/abi/call/powerpc.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n-use abi::call::{ArgType, FnType, Reg, Uniform};\n-use abi::{HasDataLayout, LayoutOf, Size, TyLayoutMethods};\n+use crate::abi::call::{ArgType, FnType, Reg, Uniform};\n+use crate::abi::{HasDataLayout, LayoutOf, Size, TyLayoutMethods};\n \n-fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<Ty>, offset: &mut Size)\n+fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<'_, Ty>, offset: &mut Size)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     if !ret.layout.is_aggregate() {\n@@ -12,7 +12,7 @@ fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<Ty>, offset: &mut Size)\n     }\n }\n \n-fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<Ty>, offset: &mut Size)\n+fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<'_, Ty>, offset: &mut Size)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     let dl = cx.data_layout();\n@@ -34,7 +34,7 @@ fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<Ty>, offset: &mut Size)\n     *offset = offset.align_to(align) + size.align_to(align);\n }\n \n-pub fn compute_abi_info<'a, Ty, C>(cx: &C, fty: &mut FnType<Ty>)\n+pub fn compute_abi_info<'a, Ty, C>(cx: &C, fty: &mut FnType<'_, Ty>)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     let mut offset = Size::ZERO;"}, {"sha": "a9683104d164e5b7e5d410ce7287127fb8db8193", "filename": "src/librustc_target/abi/call/powerpc64.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fpowerpc64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -2,16 +2,16 @@\n // Alignment of 128 bit types is not currently handled, this will\n // need to be fixed when PowerPC vector support is added.\n \n-use abi::call::{FnType, ArgType, Reg, RegKind, Uniform};\n-use abi::{Endian, HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n-use spec::HasTargetSpec;\n+use crate::abi::call::{FnType, ArgType, Reg, RegKind, Uniform};\n+use crate::abi::{Endian, HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::spec::HasTargetSpec;\n \n #[derive(Debug, Clone, Copy, PartialEq)]\n enum ABI {\n     ELFv1, // original ABI used for powerpc64 (big-endian)\n     ELFv2, // newer ABI used for powerpc64le and musl (both endians)\n }\n-use self::ABI::*;\n+use ABI::*;\n \n fn is_homogeneous_aggregate<'a, Ty, C>(cx: &C, arg: &mut ArgType<'a, Ty>, abi: ABI)\n                                        -> Option<Uniform>"}, {"sha": "ba82e49ddb03ef75576dc301bd90d39f921de484", "filename": "src/librustc_target/abi/call/riscv.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Friscv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Friscv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Friscv.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,9 +1,9 @@\n // Reference: RISC-V ELF psABI specification\n // https://github.com/riscv/riscv-elf-psabi-doc\n \n-use abi::call::{ArgType, FnType};\n+use crate::abi::call::{ArgType, FnType};\n \n-fn classify_ret_ty<Ty>(arg: &mut ArgType<Ty>, xlen: u64) {\n+fn classify_ret_ty<Ty>(arg: &mut ArgType<'_, Ty>, xlen: u64) {\n     // \"Scalars wider than 2\u2715XLEN are passed by reference and are replaced in\n     // the argument list with the address.\"\n     // \"Aggregates larger than 2\u2715XLEN bits are passed by reference and are\n@@ -19,7 +19,7 @@ fn classify_ret_ty<Ty>(arg: &mut ArgType<Ty>, xlen: u64) {\n     arg.extend_integer_width_to(xlen); // this method only affects integer scalars\n }\n \n-fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>, xlen: u64) {\n+fn classify_arg_ty<Ty>(arg: &mut ArgType<'_, Ty>, xlen: u64) {\n     // \"Scalars wider than 2\u2715XLEN are passed by reference and are replaced in\n     // the argument list with the address.\"\n     // \"Aggregates larger than 2\u2715XLEN bits are passed by reference and are\n@@ -35,7 +35,7 @@ fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>, xlen: u64) {\n     arg.extend_integer_width_to(xlen); // this method only affects integer scalars\n }\n \n-pub fn compute_abi_info<Ty>(fty: &mut FnType<Ty>, xlen: u64) {\n+pub fn compute_abi_info<Ty>(fty: &mut FnType<'_, Ty>, xlen: u64) {\n     if !fty.ret.is_ignore() {\n         classify_ret_ty(&mut fty.ret, xlen);\n     }"}, {"sha": "c2717b1bcb815c91025e2620965d6805b4ad7330", "filename": "src/librustc_target/abi/call/s390x.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fs390x.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fs390x.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fs390x.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,10 +1,10 @@\n // FIXME: The assumes we're using the non-vector ABI, i.e., compiling\n // for a pre-z13 machine or using -mno-vx.\n \n-use abi::call::{FnType, ArgType, Reg};\n-use abi::{self, HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::abi::call::{FnType, ArgType, Reg};\n+use crate::abi::{self, HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n \n-fn classify_ret_ty<'a, Ty, C>(ret: &mut ArgType<Ty>)\n+fn classify_ret_ty<'a, Ty, C>(ret: &mut ArgType<'_, Ty>)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     if !ret.layout.is_aggregate() && ret.layout.size.bits() <= 64 {"}, {"sha": "d496abf8e8b286c1c7d1d278fac38d73bcb7bb73", "filename": "src/librustc_target/abi/call/sparc.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n-use abi::call::{ArgType, FnType, Reg, Uniform};\n-use abi::{HasDataLayout, LayoutOf, Size, TyLayoutMethods};\n+use crate::abi::call::{ArgType, FnType, Reg, Uniform};\n+use crate::abi::{HasDataLayout, LayoutOf, Size, TyLayoutMethods};\n \n-fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<Ty>, offset: &mut Size)\n+fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<'_, Ty>, offset: &mut Size)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     if !ret.layout.is_aggregate() {\n@@ -12,7 +12,7 @@ fn classify_ret_ty<'a, Ty, C>(cx: &C, ret: &mut ArgType<Ty>, offset: &mut Size)\n     }\n }\n \n-fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<Ty>, offset: &mut Size)\n+fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<'_, Ty>, offset: &mut Size)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     let dl = cx.data_layout();\n@@ -34,7 +34,7 @@ fn classify_arg_ty<'a, Ty, C>(cx: &C, arg: &mut ArgType<Ty>, offset: &mut Size)\n     *offset = offset.align_to(align) + size.align_to(align);\n }\n \n-pub fn compute_abi_info<'a, Ty, C>(cx: &C, fty: &mut FnType<Ty>)\n+pub fn compute_abi_info<'a, Ty, C>(cx: &C, fty: &mut FnType<'_, Ty>)\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> + HasDataLayout\n {\n     let mut offset = Size::ZERO;"}, {"sha": "d8930a875efbce9048e7ed79221f0d46839c20eb", "filename": "src/librustc_target/abi/call/sparc64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fsparc64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n // FIXME: This needs an audit for correctness and completeness.\n \n-use abi::call::{FnType, ArgType, Reg, RegKind, Uniform};\n-use abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::abi::call::{FnType, ArgType, Reg, RegKind, Uniform};\n+use crate::abi::{HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n \n fn is_homogeneous_aggregate<'a, Ty, C>(cx: &C, arg: &mut ArgType<'a, Ty>)\n                                      -> Option<Uniform>"}, {"sha": "1fdcbb8e39bdff0397f0aaa6a3599d6dcc301f3c", "filename": "src/librustc_target/abi/call/wasm32.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fwasm32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fwasm32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fwasm32.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,14 +1,14 @@\n-use abi::call::{FnType, ArgType};\n+use crate::abi::call::{FnType, ArgType};\n \n-fn classify_ret_ty<Ty>(ret: &mut ArgType<Ty>) {\n+fn classify_ret_ty<Ty>(ret: &mut ArgType<'_, Ty>) {\n     ret.extend_integer_width_to(32);\n }\n \n-fn classify_arg_ty<Ty>(arg: &mut ArgType<Ty>) {\n+fn classify_arg_ty<Ty>(arg: &mut ArgType<'_, Ty>) {\n     arg.extend_integer_width_to(32);\n }\n \n-pub fn compute_abi_info<Ty>(fty: &mut FnType<Ty>) {\n+pub fn compute_abi_info<Ty>(fty: &mut FnType<'_, Ty>) {\n     if !fty.ret.is_ignore() {\n         classify_ret_ty(&mut fty.ret);\n     }"}, {"sha": "2e809571ab18b60fc87e40dc08961133f9133366", "filename": "src/librustc_target/abi/call/x86.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,6 +1,6 @@\n-use abi::call::{ArgAttribute, FnType, PassMode, Reg, RegKind};\n-use abi::{self, HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n-use spec::HasTargetSpec;\n+use crate::abi::call::{ArgAttribute, FnType, PassMode, Reg, RegKind};\n+use crate::abi::{self, HasDataLayout, LayoutOf, TyLayout, TyLayoutMethods};\n+use crate::spec::HasTargetSpec;\n \n #[derive(PartialEq)]\n pub enum Flavor {"}, {"sha": "680e529b108e0fed1ba62c1ab345692811b22eb1", "filename": "src/librustc_target/abi/call/x86_64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,8 +1,8 @@\n // The classification code for the x86_64 ABI is taken from the clay language\n // https://github.com/jckarter/clay/blob/master/compiler/src/externals.cpp\n \n-use abi::call::{ArgType, CastTarget, FnType, Reg, RegKind};\n-use abi::{self, Abi, HasDataLayout, LayoutOf, Size, TyLayout, TyLayoutMethods};\n+use crate::abi::call::{ArgType, CastTarget, FnType, Reg, RegKind};\n+use crate::abi::{self, Abi, HasDataLayout, LayoutOf, Size, TyLayout, TyLayoutMethods};\n \n /// Classification of \"eightbyte\" components.\n // N.B., the order of the variants is from general to specific,"}, {"sha": "ebdeb63150a46960c39621211197189958a7eac4", "filename": "src/librustc_target/abi/call/x86_win64.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_win64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_win64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fx86_win64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,10 +1,10 @@\n-use abi::call::{ArgType, FnType, Reg};\n-use abi::Abi;\n+use crate::abi::call::{ArgType, FnType, Reg};\n+use crate::abi::Abi;\n \n // Win64 ABI: http://msdn.microsoft.com/en-us/library/zthk2dkh.aspx\n \n-pub fn compute_abi_info<Ty>(fty: &mut FnType<Ty>) {\n-    let fixup = |a: &mut ArgType<Ty>| {\n+pub fn compute_abi_info<Ty>(fty: &mut FnType<'_, Ty>) {\n+    let fixup = |a: &mut ArgType<'_, Ty>| {\n         match a.layout.abi {\n             Abi::Uninhabited => {}\n             Abi::ScalarPair(..) |"}, {"sha": "bb194d5bb1285095de6fb88332daea6aee6f9077", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n-pub use self::Integer::*;\n-pub use self::Primitive::*;\n+pub use Integer::*;\n+pub use Primitive::*;\n \n-use spec::Target;\n+use crate::spec::Target;\n \n use std::fmt;\n use std::ops::{Add, Deref, Sub, Mul, AddAssign, Range, RangeInclusive};\n@@ -533,13 +533,13 @@ pub enum FloatTy {\n }\n \n impl fmt::Debug for FloatTy {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         fmt::Display::fmt(self, f)\n     }\n }\n \n impl fmt::Display for FloatTy {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"{}\", self.ty_to_string())\n     }\n }"}, {"sha": "e831eb41410bbaa114363c9e3335683710b8b4f6", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -15,11 +15,11 @@\n #![feature(slice_patterns)]\n #![feature(step_trait)]\n \n-#[macro_use]\n-extern crate bitflags;\n-extern crate serialize;\n+#![deny(rust_2018_idioms)]\n+\n #[macro_use] extern crate log;\n \n+#[allow(unused_extern_crates)]\n extern crate serialize as rustc_serialize; // used by deriving\n \n // See librustc_cratesio_shim/Cargo.toml for a comment explaining this."}, {"sha": "8bdc08c788d01a1e0c04aa8f00b6296e09428a1f", "filename": "src/librustc_target/spec/aarch64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_apple_ios.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "308954d56f8bf4b9c67f00b5bd5a74f5511e32ee", "filename": "src/librustc_target/spec/aarch64_fuchsia.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_fuchsia.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LldFlavor, LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LldFlavor, LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();"}, {"sha": "65160f6231e8c1216a72fa369b05149be4908dac", "filename": "src/librustc_target/spec/aarch64_linux_android.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_linux_android.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#arm64-v8a\n // for target ABI requirements."}, {"sha": "1aee381d604c3d186792fe536f0bef6360551b32", "filename": "src/librustc_target/spec/aarch64_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_pc_windows_msvc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult, PanicStrategy};\n+use crate::spec::{LinkerFlavor, Target, TargetResult, PanicStrategy};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();"}, {"sha": "7141954306769a6fcb6155ccf37241c7d70ac5a7", "filename": "src/librustc_target/spec/aarch64_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_cloudabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "36860649c53ad63ff5ea08ea54b409659232a49c", "filename": "src/librustc_target/spec/aarch64_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_freebsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();"}, {"sha": "7b020605102b1f8d7e55a048e9a38369d769668e", "filename": "src/librustc_target/spec/aarch64_unknown_hermit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_hermit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_hermit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_hermit.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::hermit_base::opts();"}, {"sha": "e772d8b532cb077229ec5298dc37f5b13374a78e", "filename": "src/librustc_target/spec/aarch64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "8123ee82ed524ff133144a77f4b591210fd82cbb", "filename": "src/librustc_target/spec/aarch64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "47ae08ade9a6be4689b2717708d2adb5ffe79cee", "filename": "src/librustc_target/spec/aarch64_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_netbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "c9cd64c3a84af3a88011f83f413238f2b0e27f33", "filename": "src/librustc_target/spec/aarch64_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_openbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::openbsd_base::opts();"}, {"sha": "c9c41f10922401785ac0f1f8f2aac30dc004abba", "filename": "src/librustc_target/spec/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -96,7 +96,7 @@ impl Abi {\n }\n \n impl fmt::Display for Abi {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"\\\"{}\\\"\", self.name())\n     }\n }"}, {"sha": "684c059b414827f4b75ba7b186c3f0465ba2048a", "filename": "src/librustc_target/spec/android_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fandroid_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, TargetOptions};\n+use crate::spec::{LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();"}, {"sha": "c21f7f38ca5a3767572b87961a4d8b64b9d2abad", "filename": "src/librustc_target/spec/apple_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,6 +1,6 @@\n use std::env;\n \n-use spec::{LinkArgs, TargetOptions};\n+use crate::spec::{LinkArgs, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     // ELF TLS is only available in macOS 10.7+. If you try to compile for 10.6"}, {"sha": "3068ed8d206cdc236bf01fef36b27d43308f8d70", "filename": "src/librustc_target/spec/apple_ios_base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,8 +1,8 @@\n use std::io;\n use std::process::Command;\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n \n-use self::Arch::*;\n+use Arch::*;\n \n #[allow(non_camel_case_types)]\n #[derive(Copy, Clone)]"}, {"sha": "77e7bfac62d58596fb7046727f8c80e4d7b8828b", "filename": "src/librustc_target/spec/arm_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::abi::Abi;\n+use crate::spec::abi::Abi;\n \n // All the calling conventions trigger an assertion(Unsupported calling convention) in llvm on arm\n pub fn abi_blacklist() -> Vec<Abi> {"}, {"sha": "bb066dc9ad833fb0d1026f9ad267fe67d170e1ce", "filename": "src/librustc_target/spec/arm_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_linux_androideabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();"}, {"sha": "f291818ba80f502fb98e3aa93030df7e8da9b415", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "32b509d9721efa6e503021d01acca0080ed87b60", "filename": "src/librustc_target/spec/arm_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_gnueabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "7637577e7e848c1c3dae5478e41db035c76a0db0", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "9def151b3ef2910ddf406253fe94be641b0b85c5", "filename": "src/librustc_target/spec/arm_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farm_unknown_linux_musleabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "86c62daa6180a018e97064b6dd058a32de9124ba", "filename": "src/librustc_target/spec/armebv7r_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n // Targets the Big endian Cortex-R4/R5 processor (ARMv7-R)\n \n use std::default::Default;\n-use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "50ee76414ef9a4e122ab28f1b350285ff605fe91", "filename": "src/librustc_target/spec/armebv7r_none_eabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmebv7r_none_eabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n // Targets the Cortex-R4F/R5F processor (ARMv7-R)\n \n use std::default::Default;\n-use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "7cd4b14cdebc8b31d309cb764474c18eb7b9ee8d", "filename": "src/librustc_target/spec/armv4t_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv4t_unknown_linux_gnueabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();"}, {"sha": "15f614827718b29b4b8375db5334d86180c5e6ea", "filename": "src/librustc_target/spec/armv5te_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_gnueabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();"}, {"sha": "74915b942ea4f5e8f0a093f802a5f4ace67f4dfe", "filename": "src/librustc_target/spec/armv5te_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_musl_base::opts();"}, {"sha": "e460b6c574a26463fed30c436972ae945727a903", "filename": "src/librustc_target/spec/armv6_unknown_netbsd_eabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv6_unknown_netbsd_eabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "2052d17403dfde9a6104338d8f2bbe142a9be539", "filename": "src/librustc_target/spec/armv7_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_apple_ios.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "92f1a55e024d7f57509d0135c1d9eec0b1d30709", "filename": "src/librustc_target/spec/armv7_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_linux_androideabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // This target if is for the baseline of the Android v7a ABI\n // in thumb mode. It's named armv7-* instead of thumbv7-*"}, {"sha": "a6c7fb537c7854b7accb11788b0673a4adfd8fc0", "filename": "src/librustc_target/spec/armv7_unknown_cloudabi_eabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_cloudabi_eabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "f16215433c766211adfd4bc3f45ca016ceeb4067", "filename": "src/librustc_target/spec/armv7_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_gnueabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // This target is for glibc Linux on ARMv7 without NEON or\n // thumb-mode. See the thumbv7neon variant for enabling both."}, {"sha": "45a26966b716b905161df3d43fb8a4c1d60034ad", "filename": "src/librustc_target/spec/armv7_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_linux_musleabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // This target is for musl Linux on ARMv7 without thumb-mode or NEON.\n "}, {"sha": "44e2636e9188ed6aa47e92b64206c7d2c90fc60c", "filename": "src/librustc_target/spec/armv7_unknown_netbsd_eabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7_unknown_netbsd_eabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::netbsd_base::opts();"}, {"sha": "19d332467dec50d73f8dad81fc894e087d4d29a5", "filename": "src/librustc_target/spec/armv7r_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n // Targets the Little-endian Cortex-R4/R5 processor (ARMv7-R)\n \n use std::default::Default;\n-use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "06ef9f3ec4e37892480acaeb4ad3fd6a5f80ac19", "filename": "src/librustc_target/spec/armv7r_none_eabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7r_none_eabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n // Targets the Little-endian Cortex-R4F/R5F processor (ARMv7-R)\n \n use std::default::Default;\n-use spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "29e290285e4a9ecc4472fa29b8af466c6b3ae680", "filename": "src/librustc_target/spec/armv7s_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7s_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Farmv7s_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7s_apple_ios.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "9b34119fc00c9f9484f7aed38989d6b20003d410", "filename": "src/librustc_target/spec/bitrig_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fbitrig_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fbitrig_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fbitrig_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{TargetOptions, RelroLevel};\n+use crate::spec::{TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "a34122d3e0fe29a1811371a608b507c522782749", "filename": "src/librustc_target/spec/cloudabi_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fcloudabi_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n \n pub fn opts() -> TargetOptions {\n     let mut args = LinkArgs::new();"}, {"sha": "766030e8015d09942a647467accd358fd92dc0c2", "filename": "src/librustc_target/spec/dragonfly_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fdragonfly_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "51f030f59084dc8863d308900a58ce02a667df9f", "filename": "src/librustc_target/spec/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffreebsd_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "4e4f2fa0cf34c9178c3dc97794f8471b3af19086", "filename": "src/librustc_target/spec/fuchsia_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LldFlavor, LinkArgs, LinkerFlavor, TargetOptions};\n+use crate::spec::{LldFlavor, LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "d07106270530666271341964fae157fc183aa7a9", "filename": "src/librustc_target/spec/haiku_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fhaiku_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fhaiku_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fhaiku_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{TargetOptions, RelroLevel};\n+use crate::spec::{TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "ee753393ddb3d59bd84287015b2a95b4a9c347f7", "filename": "src/librustc_target/spec/hermit_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fhermit_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fhermit_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fhermit_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, PanicStrategy, TargetOptions};\n+use crate::spec::{LinkArgs, LinkerFlavor, PanicStrategy, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "78e9cbb61ef58c10a1368a1270dc5028ccfa3c5f", "filename": "src/librustc_target/spec/i386_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi386_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi386_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi386_apple_ios.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "ba712aced8474b2bd28a9722e6d2b32e79a6fad4", "filename": "src/librustc_target/spec/i586_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi586_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi586_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi586_pc_windows_msvc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::TargetResult;\n+use crate::spec::TargetResult;\n \n pub fn target() -> TargetResult {\n     let mut base = super::i686_pc_windows_msvc::target()?;"}, {"sha": "49f4f2cb6b999c3e595ffc54dc50836d85548cd6", "filename": "src/librustc_target/spec/i586_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::TargetResult;\n+use crate::spec::TargetResult;\n \n pub fn target() -> TargetResult {\n     let mut base = super::i686_unknown_linux_gnu::target()?;"}, {"sha": "0f2ccebd6dacefe265c8d7ff1dba1dc5ff2253ec", "filename": "src/librustc_target/spec/i586_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi586_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::TargetResult;\n+use crate::spec::TargetResult;\n \n pub fn target() -> TargetResult {\n     let mut base = super::i686_unknown_linux_musl::target()?;"}, {"sha": "c8a61296d33d2b22857969a4df6eed9f489d9f46", "filename": "src/librustc_target/spec/i686_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_apple_darwin.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();"}, {"sha": "3f73d24ee848b90d00505b071eb909fc55816bbd", "filename": "src/librustc_target/spec/i686_linux_android.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_linux_android.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#x86\n // for target ABI requirements."}, {"sha": "12214a7d53119b6108d4c3cde10792c71a6594d3", "filename": "src/librustc_target/spec/i686_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_base::opts();"}, {"sha": "1967834819ab251f7522576ee521b3b93fbeb0ed", "filename": "src/librustc_target/spec/i686_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_pc_windows_msvc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();"}, {"sha": "f3b40633b40073b31bf31667e319ffc1df19660a", "filename": "src/librustc_target/spec/i686_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_cloudabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "20315e7145c732874e916fda0256780a6721f53b", "filename": "src/librustc_target/spec/i686_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_dragonfly.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::dragonfly_base::opts();"}, {"sha": "71f05a140f3df13f513f04388b5c536724e92f02", "filename": "src/librustc_target/spec/i686_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_freebsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();"}, {"sha": "b807e4eee39a5756119e8616535d7d7e464de2f7", "filename": "src/librustc_target/spec/i686_unknown_haiku.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_haiku.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::haiku_base::opts();"}, {"sha": "5875cbf78bfe632b011c03e0b12b8a3ef6526511", "filename": "src/librustc_target/spec/i686_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "732949034e824a429880804ddd08998b85501e26", "filename": "src/librustc_target/spec/i686_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "e8a9f29ea5f4c48f6b71a84663bfb1d4e32a74bc", "filename": "src/librustc_target/spec/i686_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_netbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "d7c323e0d8a8a46283238952d3705141b97861ba", "filename": "src/librustc_target/spec/i686_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fi686_unknown_openbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::openbsd_base::opts();"}, {"sha": "9317f053efe7050047e4f5b612099a9ec2981e97", "filename": "src/librustc_target/spec/l4re_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fl4re_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fl4re_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fl4re_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, PanicStrategy, TargetOptions};\n+use crate::spec::{LinkArgs, LinkerFlavor, PanicStrategy, TargetOptions};\n use std::default::Default;\n //use std::process::Command;\n "}, {"sha": "195fba3915f94fee1e5b271bfb5da55ef5321393", "filename": "src/librustc_target/spec/linux_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Flinux_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "e294e63982de45380348b7a16b97ea1214722f9a", "filename": "src/librustc_target/spec/linux_musl_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Flinux_musl_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, TargetOptions};\n+use crate::spec::{LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();"}, {"sha": "3b38e64050f3b215bcdcc971de9afb247afd575c", "filename": "src/librustc_target/spec/mips64_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64_unknown_linux_gnuabi64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "0f6cd86d616d8b09232eff5a6afb2c159ca741dd", "filename": "src/librustc_target/spec/mips64el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips64el_unknown_linux_gnuabi64.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "b4d29c5fbeaf472c54fb1f34cb87550777b89ca7", "filename": "src/librustc_target/spec/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "c56c6e3822959fa3689bd6365f20c17424fb4db6", "filename": "src/librustc_target/spec/mips_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "cb02769c7dfe49edbc4a3b2f6ed72e9ddcb80b85", "filename": "src/librustc_target/spec/mips_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmips_unknown_linux_uclibc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "ed49ddd49937f9ac214a7978722b1930211d4d0e", "filename": "src/librustc_target/spec/mipsel_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "bcc49cf5ffe4f874a221c88c4ecd772a133dc6be", "filename": "src/librustc_target/spec/mipsel_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "205f328a24cec449ebbc4a6c49b2c3a4b41a02f8", "filename": "src/librustc_target/spec/mipsel_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_unknown_linux_uclibc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "107583e4fc0a06dbc539bcf54f729affd3c2f345", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -40,7 +40,7 @@ use std::default::Default;\n use std::{fmt, io};\n use std::path::{Path, PathBuf};\n use std::str::FromStr;\n-use spec::abi::{Abi, lookup as lookup_abi};\n+use crate::spec::abi::{Abi, lookup as lookup_abi};\n \n pub mod abi;\n mod android_base;\n@@ -1408,7 +1408,7 @@ impl TargetTriple {\n }\n \n impl fmt::Display for TargetTriple {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"{}\", self.debug_triple())\n     }\n }"}, {"sha": "90af5898089b84f751ee4f158c53e28f6cd6a842", "filename": "src/librustc_target/spec/msp430_none_elf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmsp430_none_elf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "e9cd98c0e71512afff06e5dc04bb905422118020", "filename": "src/librustc_target/spec/netbsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fnetbsd_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "db9d6a7409ee540a6c72c62c4711b7d9043dc916", "filename": "src/librustc_target/spec/nvptx64_nvidia_cuda.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fnvptx64_nvidia_cuda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fnvptx64_nvidia_cuda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fnvptx64_nvidia_cuda.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,5 +1,5 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult, PanicStrategy, MergeFunctions};\n-use spec::abi::Abi;\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult, PanicStrategy, MergeFunctions};\n+use crate::spec::abi::Abi;\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "5bcfd62d75bd423b440e9ddd0d84987f21a56ab2", "filename": "src/librustc_target/spec/openbsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fopenbsd_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "360876b9ff5573f83e0ae55211e1f1e316e668a9", "filename": "src/librustc_target/spec/powerpc64_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_freebsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();"}, {"sha": "c16db7583f32bb14fe4c6dc98e2af6a4b6fdb202", "filename": "src/librustc_target/spec/powerpc64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult, RelroLevel};\n+use crate::spec::{LinkerFlavor, Target, TargetResult, RelroLevel};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "ac0b7431f91a4210efd32a47f5f4e8a027ad8956", "filename": "src/librustc_target/spec/powerpc64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "038b925a28692d2f2237aa1f760e6e46072a1e09", "filename": "src/librustc_target/spec/powerpc64le_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "57103345f0a0ced41fa011aed223e0068ca14df4", "filename": "src/librustc_target/spec/powerpc64le_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc64le_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "38a801d5ab507fa3cb08646fb73dd414760c7a61", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "675b2c749d6487ac0b7f8efee1d54da98c9b5925", "filename": "src/librustc_target/spec/powerpc_unknown_linux_gnuspe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_gnuspe.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "240443aa98db4f4d1725657a150d35ac64683c5c", "filename": "src/librustc_target/spec/powerpc_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "10e7089cf1c4c6fba33c235651ea03cbcd4a0dea", "filename": "src/librustc_target/spec/powerpc_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fpowerpc_unknown_netbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "dc51aeb58391ffa6e9905c0e69ccdeb607602609", "filename": "src/librustc_target/spec/redox_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fredox_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "5064393d31135b89800afa9bf499a1c4783ca2a2", "filename": "src/librustc_target/spec/riscv32imac_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, LldFlavor, PanicStrategy,\n+use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy,\n            Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {"}, {"sha": "31e74c5920cf9207396d06662dd39e587ff6a1ac", "filename": "src/librustc_target/spec/riscv32imc_unknown_none_elf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32imc_unknown_none_elf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, LldFlavor, PanicStrategy,\n+use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy,\n            Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {"}, {"sha": "ec1dc9b4918bde92920ced456544ebfb9201bc30", "filename": "src/librustc_target/spec/riscv_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Friscv_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Friscv_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::abi::Abi;\n+use crate::spec::abi::Abi;\n \n // All the calling conventions trigger an assertion(Unsupported calling\n // convention) in llvm on RISCV"}, {"sha": "f259787e1d54d507eac0f9bab9a15fb096c9227a", "filename": "src/librustc_target/spec/s390x_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fs390x_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fs390x_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fs390x_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "0dfbb13b7731795f72acaa729e32fce1cd48b352", "filename": "src/librustc_target/spec/solaris_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsolaris_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::TargetOptions;\n+use crate::spec::TargetOptions;\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "c842b22d4e16e6c8af3f5a734420caf03dfb7bf3", "filename": "src/librustc_target/spec/sparc64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "78d53e69e8b5237193f3be2deb2ea3a96491e08e", "filename": "src/librustc_target/spec/sparc64_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc64_unknown_netbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "162cd311a3826b7479f537ffc298701970adf52a", "filename": "src/librustc_target/spec/sparc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparc_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "acc03fd0d79eec7d5411a411339e98bd7bcc8db6", "filename": "src/librustc_target/spec/sparcv9_sun_solaris.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparcv9_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fsparcv9_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fsparcv9_sun_solaris.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::solaris_base::opts();"}, {"sha": "ed0dbb766a8357a955179ba32d13eab5924e08a7", "filename": "src/librustc_target/spec/thumb_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumb_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -28,7 +28,7 @@\n // build scripts / gcc flags.\n \n use std::default::Default;\n-use spec::{PanicStrategy, TargetOptions};\n+use crate::spec::{PanicStrategy, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     // See rust-lang/rfcs#1645 for a discussion about these defaults"}, {"sha": "2ab61b57f6bb66504c3d428e6094a58f72e1cbf4", "filename": "src/librustc_target/spec/thumbv6m_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv6m_none_eabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,6 +1,6 @@\n // Targets the Cortex-M0, Cortex-M0+ and Cortex-M1 processors (ARMv6-M architecture)\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "310fac31c0c5b44851398f5807c6ed90e345ce66", "filename": "src/librustc_target/spec/thumbv7a_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7a_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7a_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7a_pc_windows_msvc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult, PanicStrategy};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult, PanicStrategy};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();"}, {"sha": "97114c342cdc7a72c72e28e18cc003363e94ac46", "filename": "src/librustc_target/spec/thumbv7em_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -9,7 +9,7 @@\n // To opt-in to hardware accelerated floating point operations, you can use, for example,\n // `-C target-feature=+vfp4` or `-C target-cpu=cortex-m4`.\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "e4358bdd7991eba3645ab111b7b4d6b076ee1f33", "filename": "src/librustc_target/spec/thumbv7em_none_eabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7em_none_eabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -8,7 +8,7 @@\n //\n // To opt into double precision hardware support, use the `-C target-feature=-fp-only-sp` flag.\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "daf25b16d58d64a7f9156ccdcca4bbcc0a3810de", "filename": "src/librustc_target/spec/thumbv7m_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7m_none_eabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,6 +1,6 @@\n // Targets the Cortex-M3 processor (ARMv7-M)\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "e248b930e6e4cb52a32c480a5ce3821303f95a9c", "filename": "src/librustc_target/spec/thumbv7neon_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_linux_androideabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // This target if is for the Android v7a ABI in thumb mode with\n // NEON unconditionally enabled and, therefore, with 32 FPU registers"}, {"sha": "bef62b0a2ebe65e83126979fe319b4e6051d2be0", "filename": "src/librustc_target/spec/thumbv7neon_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv7neon_unknown_linux_gnueabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // This target is for glibc Linux on ARMv7 with thumb mode enabled\n // (for consistency with Android and Debian-based distributions)"}, {"sha": "be8a476db4dbc4b928a20e7fcfefbde57d399613", "filename": "src/librustc_target/spec/thumbv8m_base_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv8m_base_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv8m_base_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv8m_base_none_eabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,6 +1,6 @@\n // Targets the Cortex-M23 processor (Baseline ARMv8-M)\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "49ab643d484bc3d53713443397e4a7e33278d44b", "filename": "src/librustc_target/spec/thumbv8m_main_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n // Targets the Cortex-M33 processor (Armv8-M Mainline architecture profile),\n // without the Floating Point extension.\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "6a3d8e61d7fe861c9a518105c31ff73f1770dd93", "filename": "src/librustc_target/spec/thumbv8m_main_none_eabihf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fthumbv8m_main_none_eabihf.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,7 +1,7 @@\n // Targets the Cortex-M33 processor (Armv8-M Mainline architecture profile),\n // with the Floating Point extension.\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "5078d500679d13ed806cca0c1c4be564f0cd1d99", "filename": "src/librustc_target/spec/uefi_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fuefi_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fuefi_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fuefi_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -9,7 +9,7 @@\n // the timer-interrupt. Device-drivers are required to use polling-based models. Furthermore, all\n // code runs in the same environment, no process separation is supported.\n \n-use spec::{LinkArgs, LinkerFlavor, LldFlavor, PanicStrategy, TargetOptions};\n+use crate::spec::{LinkArgs, LinkerFlavor, LldFlavor, PanicStrategy, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "38db9cd356cd86b749db17c2d1d604e0aa3291c6", "filename": "src/librustc_target/spec/windows_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "fdd747cdb865a5dcefa3a3db5b2a0d56d9a73c7f", "filename": "src/librustc_target/spec/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_msvc_base.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n+use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "0911ce06c13d7e19a22f64fef7f6ec1c85c096f0", "filename": "src/librustc_target/spec/x86_64_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_darwin.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();"}, {"sha": "1f9594b906282fe584f31fa63470f608aa52d9cc", "filename": "src/librustc_target/spec/x86_64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "a24d432c591d2ede64cdf4130337c1fac3b86b59", "filename": "src/librustc_target/spec/x86_64_fuchsia.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_fuchsia.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LldFlavor, LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LldFlavor, LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();"}, {"sha": "c3c6c7bf56fef92808915cc6a6f6ca16be1e2aaf", "filename": "src/librustc_target/spec/x86_64_linux_android.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_linux_android.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();"}, {"sha": "35e0d55cd045e183c6edc958c51d8ece5008ad92", "filename": "src/librustc_target/spec/x86_64_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_base::opts();"}, {"sha": "073d49be5a9ab5b93f5bbea484b9235fe3b4791e", "filename": "src/librustc_target/spec/x86_64_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_pc_windows_msvc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();"}, {"sha": "a2c706c4c723231d05bfdba06511f0b20c149560", "filename": "src/librustc_target/spec/x86_64_rumprun_netbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_rumprun_netbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "3bf3f51ae2512e53a7031da07090a55edc459e37", "filename": "src/librustc_target/spec/x86_64_sun_solaris.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_sun_solaris.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::solaris_base::opts();"}, {"sha": "999d93a7e60902d876692819bb78db70fdaa68a9", "filename": "src/librustc_target/spec/x86_64_unknown_bitrig.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_bitrig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_bitrig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_bitrig.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::bitrig_base::opts();"}, {"sha": "d48120c5401c28af99dc0354127d7914bd8e2180", "filename": "src/librustc_target/spec/x86_64_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_cloudabi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "f55ee6969092b6e3c3c1822a0d26d8131a141a41", "filename": "src/librustc_target/spec/x86_64_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_dragonfly.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::dragonfly_base::opts();"}, {"sha": "1d9c5cce3f729628294edccf407a1dfc50d864d7", "filename": "src/librustc_target/spec/x86_64_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_freebsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();"}, {"sha": "4ab15fa4e90f5dc791ed87f09794d6e8a67f8e3e", "filename": "src/librustc_target/spec/x86_64_unknown_haiku.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_haiku.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::haiku_base::opts();"}, {"sha": "a696ee16d7c9ef7c2a08763f214449c7c7ba036c", "filename": "src/librustc_target/spec/x86_64_unknown_hermit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_hermit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_hermit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_hermit.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::hermit_base::opts();"}, {"sha": "e5fdb386ef3017aa8b3a7add485bf814b5d0d1b3", "filename": "src/librustc_target/spec/x86_64_unknown_l4re_uclibc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::l4re_base::opts();"}, {"sha": "cb279e86f149886e136120f323ab2f32a2a29716", "filename": "src/librustc_target/spec/x86_64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnu.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "0b2d7aacc4ddf79160293087a3c40fff1bb6fd9a", "filename": "src/librustc_target/spec/x86_64_unknown_linux_gnux32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnux32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_gnux32.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "2e1bc839873c7279da9ad8563fb50980ca1c827c", "filename": "src/librustc_target/spec/x86_64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_linux_musl.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "ffc4f1d5c49b713004f0887220cc5b8c7378b5ba", "filename": "src/librustc_target/spec/x86_64_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_netbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "f2abd1071227ebfeed10bbcd0f4063b7f2244bc7", "filename": "src/librustc_target/spec/x86_64_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_openbsd.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::openbsd_base::opts();"}, {"sha": "f0a4519f59548cc633e4daf2d13cbbac725d374c", "filename": "src/librustc_target/spec/x86_64_unknown_redox.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_redox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_redox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_redox.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -1,4 +1,4 @@\n-use spec::{LinkerFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::redox_base::opts();"}, {"sha": "9ac17a1693fb5503c5aed3cb86add86a97f0ae03", "filename": "src/librustc_target/spec/x86_64_unknown_uefi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_uefi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869135cedac7bad5cf679c0caded28ebde4e93a6/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_uefi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_unknown_uefi.rs?ref=869135cedac7bad5cf679c0caded28ebde4e93a6", "patch": "@@ -5,7 +5,7 @@\n // The win64 ABI is used. It differs from the sysv64 ABI, so we must use a windows target with\n // LLVM. \"x86_64-unknown-windows\" is used to get the minimal subset of windows-specific features.\n \n-use spec::{LinkerFlavor, LldFlavor, Target, TargetResult};\n+use crate::spec::{LinkerFlavor, LldFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::uefi_base::opts();"}]}