{"sha": "c9d099d60d8be7327fb90f2d1228436f0b403b20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ZDA5OWQ2MGQ4YmU3MzI3ZmI5MGYyZDEyMjg0MzZmMGI0MDNiMjA=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-27T02:42:34Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-04-27T02:42:34Z"}, "message": "Fix copy-paste mistakes", "tree": {"sha": "66e11683709a4893f373c51e16e4f6de8774cc3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66e11683709a4893f373c51e16e4f6de8774cc3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9d099d60d8be7327fb90f2d1228436f0b403b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9d099d60d8be7327fb90f2d1228436f0b403b20", "html_url": "https://github.com/rust-lang/rust/commit/c9d099d60d8be7327fb90f2d1228436f0b403b20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9d099d60d8be7327fb90f2d1228436f0b403b20/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35f33c17f7d242bce031a9e648e6c3f31dd59ef6", "url": "https://api.github.com/repos/rust-lang/rust/commits/35f33c17f7d242bce031a9e648e6c3f31dd59ef6", "html_url": "https://github.com/rust-lang/rust/commit/35f33c17f7d242bce031a9e648e6c3f31dd59ef6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7a44bfdf16038ab7b087850a63668042c2caf86c", "filename": "src/libcore/num/int-template/int.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c9d099d60d8be7327fb90f2d1228436f0b403b20/src%2Flibcore%2Fnum%2Fint-template%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9d099d60d8be7327fb90f2d1228436f0b403b20/src%2Flibcore%2Fnum%2Fint-template%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fint-template%2Fint.rs?ref=c9d099d60d8be7327fb90f2d1228436f0b403b20", "patch": "@@ -36,15 +36,15 @@ mod inst {\n     impl BitCount for int {\n         /// Counts the number of bits set. Wraps LLVM's `ctpop` intrinsic.\n         #[inline(always)]\n-        fn population_count(&self) -> int { (*self as i32).population_count() as uint }\n+        fn population_count(&self) -> int { (*self as i32).population_count() as int }\n \n         /// Counts the number of leading zeros. Wraps LLVM's `ctlz` intrinsic.\n         #[inline(always)]\n-        fn leading_zeros(&self) -> int { (*self as i32).leading_zeros() as uint }\n+        fn leading_zeros(&self) -> int { (*self as i32).leading_zeros() as int }\n \n         /// Counts the number of trailing zeros. Wraps LLVM's `cttz` intrinsic.\n         #[inline(always)]\n-        fn trailing_zeros(&self) -> int { (*self as i32).trailing_zeros() as uint }\n+        fn trailing_zeros(&self) -> int { (*self as i32).trailing_zeros() as int }\n     }\n \n     #[cfg(target_word_size = \"64\")]\n@@ -60,7 +60,7 @@ mod inst {\n \n         /// Counts the number of trailing zeros. Wraps LLVM's `cttz` intrinsic.\n         #[inline(always)]\n-        fn trailing_zeros(&self) -> int { (*self as i32).trailing_zeros() as int }\n+        fn trailing_zeros(&self) -> int { (*self as i64).trailing_zeros() as int }\n     }\n \n     /// Returns `base` raised to the power of `exponent`"}, {"sha": "6a8567451e6e0ee45c1d5deb63b408f1dd12d3d8", "filename": "src/libcore/num/uint-template/uint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9d099d60d8be7327fb90f2d1228436f0b403b20/src%2Flibcore%2Fnum%2Fuint-template%2Fuint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9d099d60d8be7327fb90f2d1228436f0b403b20/src%2Flibcore%2Fnum%2Fuint-template%2Fuint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fuint-template%2Fuint.rs?ref=c9d099d60d8be7327fb90f2d1228436f0b403b20", "patch": "@@ -74,7 +74,7 @@ pub mod inst {\n \n         /// Counts the number of trailing zeros. Wraps LLVM's `cttz` intrinsic.\n         #[inline(always)]\n-        fn trailing_zeros(&self) -> uint { (*self as i32).trailing_zeros() as uint }\n+        fn trailing_zeros(&self) -> uint { (*self as i64).trailing_zeros() as uint }\n     }\n \n     ///"}]}