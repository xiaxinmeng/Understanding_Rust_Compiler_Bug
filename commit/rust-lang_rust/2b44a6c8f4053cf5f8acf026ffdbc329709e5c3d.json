{"sha": "2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNDRhNmM4ZjQwNTNjZjVmOGFjZjAyNmZmZGJjMzI5NzA5ZTVjM2Q=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-05T09:35:40Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-11T02:26:16Z"}, "message": "move {rustc -> rustc_session}::lint::builtin", "tree": {"sha": "304a1f97a2d30dbd76af4758ec6df3b93ebb594b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/304a1f97a2d30dbd76af4758ec6df3b93ebb594b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "html_url": "https://github.com/rust-lang/rust/commit/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45f27643db6e25d4377d1b7050e55c07a02a0cec", "url": "https://api.github.com/repos/rust-lang/rust/commits/45f27643db6e25d4377d1b7050e55c07a02a0cec", "html_url": "https://github.com/rust-lang/rust/commit/45f27643db6e25d4377d1b7050e55c07a02a0cec"}], "stats": {"total": 57, "additions": 29, "deletions": 28}, "files": [{"sha": "4f35ef673efa1dc426d50496eb649a95d0838925", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "patch": "@@ -38,6 +38,7 @@ pub use crate::lint::context::{\n     LintContext, LintStore,\n };\n \n+pub use rustc_session::lint::builtin;\n pub use rustc_session::lint::{BufferedEarlyLint, FutureIncompatibleInfo, Level, Lint, LintId};\n pub use rustc_session::lint::{LintArray, LintPass};\n \n@@ -331,7 +332,6 @@ pub enum LintSource {\n \n pub type LevelSource = (Level, LintSource);\n \n-pub mod builtin;\n mod context;\n pub mod internal;\n mod levels;"}, {"sha": "2ba3932c7d97e31eefc441cb3aff7be962e76a65", "filename": "src/librustc_session/lint.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibrustc_session%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibrustc_session%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint.rs?ref=2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "patch": "@@ -4,6 +4,8 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHas\n use rustc_span::edition::Edition;\n use rustc_span::{sym, symbol::Ident, MultiSpan, Span, Symbol};\n \n+pub mod builtin;\n+\n /// Setting for how to handle a lint.\n #[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash)]\n pub enum Level {"}, {"sha": "3e8503ef661f05dc97f443c7bbabaf32a69261e8", "filename": "src/librustc_session/lint/builtin.rs", "status": "renamed", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint%2Fbuiltin.rs?ref=2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "patch": "@@ -4,10 +4,31 @@\n //! compiler code, rather than using their own custom pass. Those\n //! lints are all available in `rustc_lint::builtin`.\n \n-use rustc_session::lint::FutureIncompatibleInfo;\n-use rustc_session::{declare_lint, declare_lint_pass};\n+use crate::lint::FutureIncompatibleInfo;\n+use crate::{declare_lint, declare_lint_pass};\n use rustc_span::edition::Edition;\n-use syntax::early_buffered_lints::{ILL_FORMED_ATTRIBUTE_INPUT, META_VARIABLE_MISUSE};\n+\n+declare_lint! {\n+    pub ILL_FORMED_ATTRIBUTE_INPUT,\n+    Deny,\n+    \"ill-formed attribute inputs that were previously accepted and used in practice\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reference: \"issue #57571 <https://github.com/rust-lang/rust/issues/57571>\",\n+        edition: None,\n+    };\n+}\n+\n+declare_lint! {\n+    pub META_VARIABLE_MISUSE,\n+    Allow,\n+    \"possible meta-variable misuse at macro definition\"\n+}\n+\n+declare_lint! {\n+    pub INCOMPLETE_INCLUDE,\n+    Deny,\n+    \"trailing content in included file\"\n+}\n \n declare_lint! {\n     pub EXCEEDING_BITSHIFTS,", "previous_filename": "src/librustc/lint/builtin.rs"}, {"sha": "8df4eb6c9ace461db0912cfb973046836acb8439", "filename": "src/libsyntax/early_buffered_lints.rs", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibsyntax%2Fearly_buffered_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d/src%2Flibsyntax%2Fearly_buffered_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fearly_buffered_lints.rs?ref=2b44a6c8f4053cf5f8acf026ffdbc329709e5c3d", "patch": "@@ -3,28 +3,6 @@\n //! Since we cannot have a dependency on `librustc`, we implement some types here that are somewhat\n //! redundant. Later, these types can be converted to types for use by the rest of the compiler.\n \n-use rustc_session::declare_lint;\n+pub use rustc_session::lint::builtin::ILL_FORMED_ATTRIBUTE_INPUT;\n+pub use rustc_session::lint::builtin::{INCOMPLETE_INCLUDE, META_VARIABLE_MISUSE};\n pub use rustc_session::lint::BufferedEarlyLint;\n-use rustc_session::lint::FutureIncompatibleInfo;\n-\n-declare_lint! {\n-    pub ILL_FORMED_ATTRIBUTE_INPUT,\n-    Deny,\n-    \"ill-formed attribute inputs that were previously accepted and used in practice\",\n-    @future_incompatible = FutureIncompatibleInfo {\n-        reference: \"issue #57571 <https://github.com/rust-lang/rust/issues/57571>\",\n-        edition: None,\n-    };\n-}\n-\n-declare_lint! {\n-    pub META_VARIABLE_MISUSE,\n-    Allow,\n-    \"possible meta-variable misuse at macro definition\"\n-}\n-\n-declare_lint! {\n-    pub INCOMPLETE_INCLUDE,\n-    Deny,\n-    \"trailing content in included file\"\n-}"}]}