{"sha": "9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljM2ZhNGQzZWY0NjMxN2RjODEyZGJkNDNjOGM0MzM1NWRjN2M3MjY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-09-25T19:01:55Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-09-25T20:25:54Z"}, "message": "Point at signature on unused lint", "tree": {"sha": "db84f8c911c9ecd87d86f5c1ef1c39366ab57096", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db84f8c911c9ecd87d86f5c1ef1c39366ab57096"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "html_url": "https://github.com/rust-lang/rust/commit/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14039a42ac6365afc842214989613f9a688c9a66", "url": "https://api.github.com/repos/rust-lang/rust/commits/14039a42ac6365afc842214989613f9a688c9a66", "html_url": "https://github.com/rust-lang/rust/commit/14039a42ac6365afc842214989613f9a688c9a66"}], "stats": {"total": 118, "additions": 102, "deletions": 16}, "files": [{"sha": "a9d9f6f28ec0d3cb8f8a36caf214b4c45c38b469", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "patch": "@@ -553,9 +553,22 @@ impl<'a, 'tcx> Visitor<'tcx> for DeadVisitor<'a, 'tcx> {\n \n     fn visit_item(&mut self, item: &'tcx hir::Item) {\n         if self.should_warn_about_item(item) {\n+            // For items that have a definition with a signature followed by a\n+            // block, point only at the signature.\n+            let span = match item.node {\n+                hir::ItemFn(..) |\n+                hir::ItemMod(..) |\n+                hir::ItemEnum(..) |\n+                hir::ItemStruct(..) |\n+                hir::ItemUnion(..) |\n+                hir::ItemTrait(..) |\n+                hir::ItemDefaultImpl(..) |\n+                hir::ItemImpl(..) => self.tcx.sess.codemap().def_span(item.span),\n+                _ => item.span,\n+            };\n             self.warn_dead_code(\n                 item.id,\n-                item.span,\n+                span,\n                 item.name,\n                 item.node.descriptive_variant()\n             );\n@@ -570,8 +583,7 @@ impl<'a, 'tcx> Visitor<'tcx> for DeadVisitor<'a, 'tcx> {\n                      g: &'tcx hir::Generics,\n                      id: ast::NodeId) {\n         if self.should_warn_about_variant(&variant.node) {\n-            self.warn_dead_code(variant.node.data.id(), variant.span,\n-                                variant.node.name, \"variant\");\n+            self.warn_dead_code(variant.node.data.id(), variant.span, variant.node.name, \"variant\");\n         } else {\n             intravisit::walk_variant(self, variant, g, id);\n         }\n@@ -596,15 +608,17 @@ impl<'a, 'tcx> Visitor<'tcx> for DeadVisitor<'a, 'tcx> {\n         match impl_item.node {\n             hir::ImplItemKind::Const(_, body_id) => {\n                 if !self.symbol_is_live(impl_item.id, None) {\n-                    self.warn_dead_code(impl_item.id, impl_item.span,\n-                                        impl_item.name, \"associated const\");\n+                    self.warn_dead_code(impl_item.id,\n+                                        impl_item.span,\n+                                        impl_item.name,\n+                                        \"associated const\");\n                 }\n                 self.visit_nested_body(body_id)\n             }\n             hir::ImplItemKind::Method(_, body_id) => {\n                 if !self.symbol_is_live(impl_item.id, None) {\n-                    self.warn_dead_code(impl_item.id, impl_item.span,\n-                                        impl_item.name, \"method\");\n+                    let span = self.tcx.sess.codemap().def_span(impl_item.span);\n+                    self.warn_dead_code(impl_item.id, span, impl_item.name, \"method\");\n                 }\n                 self.visit_nested_body(body_id)\n             }"}, {"sha": "0cc3a5b6bf31dd8337017458f6d636b86ce61bb0", "filename": "src/test/ui-fulldeps/lint-plugin-cmdline-allow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-cmdline-allow.stderr?ref=9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "patch": "@@ -2,7 +2,7 @@ warning: function is never used: `lintme`\n   --> $DIR/lint-plugin-cmdline-allow.rs:20:1\n    |\n 20 | fn lintme() { }\n-   | ^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/lint-plugin-cmdline-allow.rs:17:9"}, {"sha": "1d4ab35046b4861d45fe89f51265371c5b66a292", "filename": "src/test/ui/path-lookahead.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpath-lookahead.stderr?ref=9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "patch": "@@ -9,10 +9,8 @@ warning: unnecessary parentheses around `return` value\n warning: function is never used: `with_parens`\n   --> $DIR/path-lookahead.rs:17:1\n    |\n-17 | / fn with_parens<T: ToString>(arg: T) -> String { //~WARN function is never used: `with_parens`\n-18 | |   return (<T as ToString>::to_string(&arg)); //~WARN unnecessary parentheses around `return` value\n-19 | | }\n-   | |_^\n+17 | fn with_parens<T: ToString>(arg: T) -> String { //~WARN function is never used: `with_parens`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/path-lookahead.rs:13:9\n@@ -24,8 +22,6 @@ note: lint level defined here\n warning: function is never used: `no_parens`\n   --> $DIR/path-lookahead.rs:21:1\n    |\n-21 | / fn no_parens<T: ToString>(arg: T) -> String { //~WARN function is never used: `no_parens`\n-22 | |   return <T as ToString>::to_string(&arg);\n-23 | | }\n-   | |_^\n+21 | fn no_parens<T: ToString>(arg: T) -> String { //~WARN function is never used: `no_parens`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n "}, {"sha": "eb659d08da0c9fa83d905490d7b7eceaacae4906", "filename": "src/test/ui/span/unused-warning-point-at-signature.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.rs?ref=9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// run-pass\n+\n+#![warn(unused)]\n+\n+enum Enum {\n+    A,\n+    B,\n+    C,\n+    D,\n+}\n+\n+struct Struct {\n+    a: usize,\n+    b: usize,\n+    c: usize,\n+    d: usize,\n+}\n+\n+fn func() -> usize {\n+    3\n+}\n+\n+fn\n+func_complete_span()\n+-> usize\n+{\n+    3\n+}\n+\n+fn main() {}"}, {"sha": "8e658670e9c0c9b14af5706a97f638f7a18d3a68", "filename": "src/test/ui/span/unused-warning-point-at-signature.stderr", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c3fa4d3ef46317dc812dbd43c8c43355dc7c726/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.stderr?ref=9c3fa4d3ef46317dc812dbd43c8c43355dc7c726", "patch": "@@ -0,0 +1,36 @@\n+warning: enum is never used: `Enum`\n+  --> $DIR/unused-warning-point-at-signature.rs:15:1\n+   |\n+15 | enum Enum {\n+   | ^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/unused-warning-point-at-signature.rs:13:9\n+   |\n+13 | #![warn(unused)]\n+   |         ^^^^^^\n+   = note: #[warn(dead_code)] implied by #[warn(unused)]\n+\n+warning: struct is never used: `Struct`\n+  --> $DIR/unused-warning-point-at-signature.rs:22:1\n+   |\n+22 | struct Struct {\n+   | ^^^^^^^^^^^^^\n+\n+warning: function is never used: `func`\n+  --> $DIR/unused-warning-point-at-signature.rs:29:1\n+   |\n+29 | fn func() -> usize {\n+   | ^^^^^^^^^^^^^^^^^^\n+\n+warning: function is never used: `func_complete_span`\n+  --> $DIR/unused-warning-point-at-signature.rs:33:1\n+   |\n+33 | / fn\n+34 | | func_complete_span()\n+35 | | -> usize\n+36 | | {\n+37 | |     3\n+38 | | }\n+   | |_^\n+"}]}