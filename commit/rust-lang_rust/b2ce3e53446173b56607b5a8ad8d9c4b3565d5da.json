{"sha": "b2ce3e53446173b56607b5a8ad8d9c4b3565d5da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyY2UzZTUzNDQ2MTczYjU2NjA3YjVhOGFkOGQ5YzRiMzU2NWQ1ZGE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-09-30T18:29:19Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-09-30T18:52:42Z"}, "message": "Remove trailing space in error message", "tree": {"sha": "812bd48e06966eff5ba850a0bf96672de9e2d3fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/812bd48e06966eff5ba850a0bf96672de9e2d3fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da", "html_url": "https://github.com/rust-lang/rust/commit/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05d0b969d9e1c3da6a2651a2ded45f662842a3f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/05d0b969d9e1c3da6a2651a2ded45f662842a3f9", "html_url": "https://github.com/rust-lang/rust/commit/05d0b969d9e1c3da6a2651a2ded45f662842a3f9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "82d698b37ab1d4a2d97fc04f8663729a4f0cd059", "filename": "compiler/rustc_middle/src/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs?ref=b2ce3e53446173b56607b5a8ad8d9c4b3565d5da", "patch": "@@ -232,7 +232,7 @@ impl<'tcx> ty::TyS<'tcx> {\n                 let n = tcx.lift(&n).unwrap();\n                 match n.try_eval_usize(tcx, ty::ParamEnv::empty()) {\n                     _ if t.is_simple_ty() => format!(\"array `{}`\", self).into(),\n-                    Some(n) => format!(\"array of {} element{} \", n, pluralize!(n)).into(),\n+                    Some(n) => format!(\"array of {} element{}\", n, pluralize!(n)).into(),\n                     None => \"array\".into(),\n                 }\n             }"}, {"sha": "e3b3b040f66444e8e47c52198edd57b7340ecda7", "filename": "src/test/ui/slice-to-vec-comparison.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da/src%2Ftest%2Fui%2Fslice-to-vec-comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2ce3e53446173b56607b5a8ad8d9c4b3565d5da/src%2Ftest%2Fui%2Fslice-to-vec-comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fslice-to-vec-comparison.stderr?ref=b2ce3e53446173b56607b5a8ad8d9c4b3565d5da", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/slice-to-vec-comparison.rs:4:9\n    |\n LL |     a > b;\n-   |         ^ expected array of 0 elements , found struct `Vec`\n+   |         ^ expected array of 0 elements, found struct `Vec`\n    |\n    = note: expected reference `&[_; 0]`\n               found reference `&Vec<u8>`"}]}