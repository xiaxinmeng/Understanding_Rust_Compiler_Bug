{"sha": "e93a8f989c1c947e63583924e81c9589128661d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5M2E4Zjk4OWMxYzk0N2U2MzU4MzkyNGU4MWM5NTg5MTI4NjYxZDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-28T14:26:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-28T14:26:02Z"}, "message": "Auto merge of #4747 - matthiaskrgr:rustup_19, r=flip1995\n\nrustup https://github.com/rust-lang/rust/pull/65792/\n\nchangelog: none", "tree": {"sha": "3abf8e39111444cc6ad1634095a20bb100520c74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3abf8e39111444cc6ad1634095a20bb100520c74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e93a8f989c1c947e63583924e81c9589128661d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e93a8f989c1c947e63583924e81c9589128661d8", "html_url": "https://github.com/rust-lang/rust/commit/e93a8f989c1c947e63583924e81c9589128661d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e93a8f989c1c947e63583924e81c9589128661d8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66df92aeba64547f3e9600635a30df34b12a11d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/66df92aeba64547f3e9600635a30df34b12a11d8", "html_url": "https://github.com/rust-lang/rust/commit/66df92aeba64547f3e9600635a30df34b12a11d8"}, {"sha": "407e5a000a9efe00d4cba3d9f37198ae7dd6bcf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/407e5a000a9efe00d4cba3d9f37198ae7dd6bcf9", "html_url": "https://github.com/rust-lang/rust/commit/407e5a000a9efe00d4cba3d9f37198ae7dd6bcf9"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "862a6a79cc09a8ef12a5a081bef112017cc74117", "filename": ".travis.yml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e93a8f989c1c947e63583924e81c9589128661d8/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/e93a8f989c1c947e63583924e81c9589128661d8/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=e93a8f989c1c947e63583924e81c9589128661d8", "patch": "@@ -63,8 +63,9 @@ matrix:\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=Geal/nom\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-    - env: INTEGRATION=rust-lang/rustfmt\n-      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n+    # FIXME blocked on https://github.com/rust-lang/rust-clippy/issues/4742\n+    #- env: INTEGRATION=rust-lang/rustfmt\n+    #  if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=hyperium/hyper\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=bluss/rust-itertools"}, {"sha": "817575092cc5c480523804ceaedfa87042610117", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e93a8f989c1c947e63583924e81c9589128661d8", "patch": "@@ -37,8 +37,6 @@ extern crate rustc_typeck;\n #[allow(unused_extern_crates)]\n extern crate syntax;\n #[allow(unused_extern_crates)]\n-extern crate syntax_expand;\n-#[allow(unused_extern_crates)]\n extern crate syntax_pos;\n \n use rustc::lint::{self, LintId};"}, {"sha": "e7197b671c9e893d3bd1c665d9a6a75f1d8581f7", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=e93a8f989c1c947e63583924e81c9589128661d8", "patch": "@@ -596,7 +596,7 @@ fn is_used(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n /// Tests whether an expression is in a macro expansion (e.g., something\n /// generated by `#[derive(...)]` or the like).\n fn in_attributes_expansion(expr: &Expr) -> bool {\n-    use syntax_expand::hygiene::MacroKind;\n+    use syntax_pos::hygiene::MacroKind;\n     if expr.span.from_expansion() {\n         let data = expr.span.ctxt().outer_expn_data();\n "}, {"sha": "6c1e0b808d9fd1d89334380397977bb0deb37121", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=e93a8f989c1c947e63583924e81c9589128661d8", "patch": "@@ -19,8 +19,7 @@ use syntax::ast::{FloatTy, IntTy, LitIntType, LitKind, UintTy};\n use syntax::errors::DiagnosticBuilder;\n use syntax::source_map::Span;\n use syntax::symbol::{sym, Symbol};\n-use syntax_expand::base::MacroKind;\n-use syntax_expand::hygiene::ExpnKind;\n+use syntax_pos::hygiene::{ExpnKind, MacroKind};\n \n use crate::consts::{constant, Constant};\n use crate::utils::paths;"}, {"sha": "5729c8c2967a8c5a421f6d4fc811dc203a8cec86", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e93a8f989c1c947e63583924e81c9589128661d8/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=e93a8f989c1c947e63583924e81c9589128661d8", "patch": "@@ -45,7 +45,7 @@ use syntax::ast::{self, LitKind};\n use syntax::attr;\n use syntax::source_map::{Span, DUMMY_SP};\n use syntax::symbol::{kw, Symbol};\n-use syntax_expand::hygiene::ExpnKind;\n+use syntax_pos::hygiene::ExpnKind;\n \n use crate::consts::{constant, Constant};\n use crate::reexport::*;"}]}