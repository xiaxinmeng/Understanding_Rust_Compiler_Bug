{"sha": "e62f6a0e872d6016320586195f06447408fb15e1", "node_id": "C_kwDOAAsO6NoAKGU2MmY2YTBlODcyZDYwMTYzMjA1ODYxOTVmMDY0NDc0MDhmYjE1ZTE", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-10T22:08:55Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-07-29T17:30:23Z"}, "message": "Remove box syntax from Box<rustdoc::clean::types::ItemKind> construction\n\nThe type has 240 bytes according to compiler internal rustdoc.", "tree": {"sha": "1705cdd78c62498e359615b948261628e63a33d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1705cdd78c62498e359615b948261628e63a33d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e62f6a0e872d6016320586195f06447408fb15e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e62f6a0e872d6016320586195f06447408fb15e1", "html_url": "https://github.com/rust-lang/rust/commit/e62f6a0e872d6016320586195f06447408fb15e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e62f6a0e872d6016320586195f06447408fb15e1/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fa62f2d853d9d475601c5150193901207188052", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fa62f2d853d9d475601c5150193901207188052", "html_url": "https://github.com/rust-lang/rust/commit/9fa62f2d853d9d475601c5150193901207188052"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d5dd040eceda4dcc96894ad8aed0adf4354e5f52", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=e62f6a0e872d6016320586195f06447408fb15e1", "patch": "@@ -538,7 +538,7 @@ fn build_module(\n                     attrs: Box::new(clean::Attributes::default()),\n                     item_id: ItemId::Primitive(prim_ty, did.krate),\n                     visibility: clean::Public,\n-                    kind: box clean::ImportItem(clean::Import::new_simple(\n+                    kind: Box::new(clean::ImportItem(clean::Import::new_simple(\n                         item.ident.name,\n                         clean::ImportSource {\n                             path: clean::Path {\n@@ -554,7 +554,7 @@ fn build_module(\n                             did: None,\n                         },\n                         true,\n-                    )),\n+                    ))),\n                     cfg: None,\n                 });\n             } else if let Some(i) = try_inline(cx, did, None, res, item.ident.name, None, visited) {"}, {"sha": "f4d66907b7ae265e1023085bc9d11a0f11b6f921", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=e62f6a0e872d6016320586195f06447408fb15e1", "patch": "@@ -2108,7 +2108,7 @@ fn clean_extern_crate<'tcx>(\n         attrs: Box::new(attrs.clean(cx)),\n         item_id: crate_def_id.into(),\n         visibility: clean_visibility(ty_vis),\n-        kind: box ExternCrateItem { src: orig_name },\n+        kind: Box::new(ExternCrateItem { src: orig_name }),\n         cfg: attrs.cfg(cx.tcx, &cx.cache.hidden_cfg),\n     }]\n }"}, {"sha": "09438c40dc1d76d1396df48c5c7f89ed3a21a94a", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=e62f6a0e872d6016320586195f06447408fb15e1", "patch": "@@ -502,7 +502,7 @@ impl Item {\n             clean_visibility(cx.tcx.visibility(def_id))\n         };\n \n-        Item { item_id: def_id.into(), kind: box kind, name, attrs, visibility, cfg }\n+        Item { item_id: def_id.into(), kind: Box::new(kind), name, attrs, visibility, cfg }\n     }\n \n     /// Finds all `doc` attributes as NameValues and returns their corresponding values, joined"}, {"sha": "6b7e67e2ce34269eca68fdf136a10016c10a4587", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62f6a0e872d6016320586195f06447408fb15e1/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=e62f6a0e872d6016320586195f06447408fb15e1", "patch": "@@ -2,7 +2,7 @@ use crate::clean::*;\n \n pub(crate) fn strip_item(mut item: Item) -> Item {\n     if !matches!(*item.kind, StrippedItem(..)) {\n-        item.kind = box StrippedItem(item.kind);\n+        item.kind = Box::new(StrippedItem(item.kind));\n     }\n     item\n }\n@@ -75,10 +75,10 @@ pub(crate) trait DocFolder: Sized {\n \n     /// don't override!\n     fn fold_item_recur(&mut self, mut item: Item) -> Item {\n-        item.kind = box match *item.kind {\n-            StrippedItem(box i) => StrippedItem(box self.fold_inner_recur(i)),\n+        item.kind = Box::new(match *item.kind {\n+            StrippedItem(box i) => StrippedItem(Box::new(self.fold_inner_recur(i))),\n             _ => self.fold_inner_recur(*item.kind),\n-        };\n+        });\n         item\n     }\n "}]}