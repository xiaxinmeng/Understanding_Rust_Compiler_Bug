{"sha": "302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMmRkZWYxYWM3YTJjYzdkMmQ5YjhhZGRhYTQ2NzQ5NGE5YTBjNWM=", "commit": {"author": {"name": "David Craven", "email": "david@craven.ch", "date": "2018-07-26T12:01:24Z"}, "committer": {"name": "David Craven", "email": "david@craven.ch", "date": "2018-08-01T13:34:56Z"}, "message": "[RISCV] Add built-in target riscv32imac-unknown-none-elf.", "tree": {"sha": "6d067349b301c8278b7b35e32cd4248375cb5e20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d067349b301c8278b7b35e32cd4248375cb5e20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEX0O2gQQ3L0uomKZLM7np/eKNLCMFAlthtwEACgkQM7np/eKN\nLCMjKgf+MCxH4rnIE7lKuvAkzWplCJjkywvDW+9RFEw4388sRtTBXZPBtnc5RJO9\ntmKvWLu9frekbznAuZxHPMqm3NN4f0mPI3PYUV9/vBWTzbF9PtQynhaWj1E71udQ\nQMgiFB4brAEFLBo99wj2IOCUAS76UPOChOaud+fO4MIYsoQdTf5VmT3r2HQt9PTD\nF6J7XfAvo8PRH4i/UKebfoPuGQ13lh9yDUN+luZCvEhj89BMZBBPKIyMO+tHeiVo\n95FNzHcj+5LedpW0O4TwFakrVtI0y6njJ5ow+SI2sYJk1TVLzD03yqcQ6qnlFwD+\njiSr0WQ/fwjFkei+kSsdW5xSRxz76w==\n=FP0G\n-----END PGP SIGNATURE-----", "payload": "tree 6d067349b301c8278b7b35e32cd4248375cb5e20\nparent a6bd5ae57eb0421373a4f3aa69ac56fb5c549383\nauthor David Craven <david@craven.ch> 1532606484 +0200\ncommitter David Craven <david@craven.ch> 1533130496 +0200\n\n[RISCV] Add built-in target riscv32imac-unknown-none-elf.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c", "html_url": "https://github.com/rust-lang/rust/commit/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c/comments", "author": {"login": "dvc94ch", "id": 741807, "node_id": "MDQ6VXNlcjc0MTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/741807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvc94ch", "html_url": "https://github.com/dvc94ch", "followers_url": "https://api.github.com/users/dvc94ch/followers", "following_url": "https://api.github.com/users/dvc94ch/following{/other_user}", "gists_url": "https://api.github.com/users/dvc94ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvc94ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvc94ch/subscriptions", "organizations_url": "https://api.github.com/users/dvc94ch/orgs", "repos_url": "https://api.github.com/users/dvc94ch/repos", "events_url": "https://api.github.com/users/dvc94ch/events{/privacy}", "received_events_url": "https://api.github.com/users/dvc94ch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dvc94ch", "id": 741807, "node_id": "MDQ6VXNlcjc0MTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/741807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvc94ch", "html_url": "https://github.com/dvc94ch", "followers_url": "https://api.github.com/users/dvc94ch/followers", "following_url": "https://api.github.com/users/dvc94ch/following{/other_user}", "gists_url": "https://api.github.com/users/dvc94ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvc94ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvc94ch/subscriptions", "organizations_url": "https://api.github.com/users/dvc94ch/orgs", "repos_url": "https://api.github.com/users/dvc94ch/repos", "events_url": "https://api.github.com/users/dvc94ch/events{/privacy}", "received_events_url": "https://api.github.com/users/dvc94ch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6bd5ae57eb0421373a4f3aa69ac56fb5c549383", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6bd5ae57eb0421373a4f3aa69ac56fb5c549383", "html_url": "https://github.com/rust-lang/rust/commit/a6bd5ae57eb0421373a4f3aa69ac56fb5c549383"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "6faab77d7709f3cc7d320f12f742f928dde72e6c", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c", "patch": "@@ -377,6 +377,8 @@ supported_targets! {\n \n     (\"aarch64-unknown-hermit\", aarch64_unknown_hermit),\n     (\"x86_64-unknown-hermit\", x86_64_unknown_hermit),\n+\n+    (\"riscv32imac-unknown-none-elf\", riscv32imac_unknown_none_elf),\n }\n \n /// Everything `rustc` knows about how to compile for a specific target."}, {"sha": "eacb3fbfcde08679088f2753cafa1397c5d867fe", "filename": "src/librustc_target/spec/riscv32imac_unknown_none_elf.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Friscv32imac_unknown_none_elf.rs?ref=302ddef1ac7a2cc7d2d9b8addaa467494a9a0c5c", "patch": "@@ -0,0 +1,51 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use spec::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n+use spec::abi::{Abi};\n+\n+pub fn target() -> TargetResult {\n+    Ok(Target {\n+        data_layout: \"e-m:e-p:32:32-i64:64-n32-S128\".to_string(),\n+        llvm_target: \"riscv32\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: \"\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        arch: \"riscv32\".to_string(),\n+        linker_flavor: LinkerFlavor::Ld,\n+\n+        options: TargetOptions {\n+            linker: Some(\"riscv32-unknown-elf-ld\".to_string()),\n+            cpu: \"generic-rv32\".to_string(),\n+            max_atomic_width: Some(32),\n+            features: \"+m,+a,+c\".to_string(),\n+            executables: true,\n+            panic_strategy: PanicStrategy::Abort,\n+            relocation_model: \"static\".to_string(),\n+            abi_blacklist: vec![\n+                Abi::Cdecl,\n+                Abi::Stdcall,\n+                Abi::Fastcall,\n+                Abi::Vectorcall,\n+                Abi::Thiscall,\n+                Abi::Aapcs,\n+                Abi::Win64,\n+                Abi::SysV64,\n+                Abi::PtxKernel,\n+                Abi::Msp430Interrupt,\n+                Abi::X86Interrupt,\n+            ],\n+            .. Default::default()\n+        },\n+    })\n+}"}]}