{"sha": "5a49918f36adc9fb176a9be59b6fc2afd46c3572", "node_id": "C_kwDOAAsO6NoAKDVhNDk5MThmMzZhZGM5ZmIxNzZhOWJlNTliNmZjMmFmZDQ2YzM1NzI", "commit": {"author": {"name": "DevAccentor", "email": "dev.accentor@gmail.com", "date": "2022-06-04T09:03:11Z"}, "committer": {"name": "DevAccentor", "email": "dev.accentor@gmail.com", "date": "2022-06-04T09:11:00Z"}, "message": "improve for_loops_over_fallibles to detect the usage of iter, iter_mut and into_iterator", "tree": {"sha": "a7ed24f790eda3c4184cd0f3ad6a813a85d73563", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7ed24f790eda3c4184cd0f3ad6a813a85d73563"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a49918f36adc9fb176a9be59b6fc2afd46c3572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a49918f36adc9fb176a9be59b6fc2afd46c3572", "html_url": "https://github.com/rust-lang/rust/commit/5a49918f36adc9fb176a9be59b6fc2afd46c3572", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a49918f36adc9fb176a9be59b6fc2afd46c3572/comments", "author": {"login": "DevAccentor", "id": 106545343, "node_id": "U_kgDOBlnAvw", "avatar_url": "https://avatars.githubusercontent.com/u/106545343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevAccentor", "html_url": "https://github.com/DevAccentor", "followers_url": "https://api.github.com/users/DevAccentor/followers", "following_url": "https://api.github.com/users/DevAccentor/following{/other_user}", "gists_url": "https://api.github.com/users/DevAccentor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevAccentor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevAccentor/subscriptions", "organizations_url": "https://api.github.com/users/DevAccentor/orgs", "repos_url": "https://api.github.com/users/DevAccentor/repos", "events_url": "https://api.github.com/users/DevAccentor/events{/privacy}", "received_events_url": "https://api.github.com/users/DevAccentor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevAccentor", "id": 106545343, "node_id": "U_kgDOBlnAvw", "avatar_url": "https://avatars.githubusercontent.com/u/106545343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevAccentor", "html_url": "https://github.com/DevAccentor", "followers_url": "https://api.github.com/users/DevAccentor/followers", "following_url": "https://api.github.com/users/DevAccentor/following{/other_user}", "gists_url": "https://api.github.com/users/DevAccentor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevAccentor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevAccentor/subscriptions", "organizations_url": "https://api.github.com/users/DevAccentor/orgs", "repos_url": "https://api.github.com/users/DevAccentor/repos", "events_url": "https://api.github.com/users/DevAccentor/events{/privacy}", "received_events_url": "https://api.github.com/users/DevAccentor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebd357e4ab7a011a98630559d723658f902163f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd357e4ab7a011a98630559d723658f902163f3", "html_url": "https://github.com/rust-lang/rust/commit/ebd357e4ab7a011a98630559d723658f902163f3"}], "stats": {"total": 153, "additions": 110, "deletions": 43}, "files": [{"sha": "77de90fd7b94ac7fb196f388f21e29c097ba8e65", "filename": "clippy_lints/src/loops/for_loops_over_fallibles.rs", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5a49918f36adc9fb176a9be59b6fc2afd46c3572/clippy_lints%2Fsrc%2Floops%2Ffor_loops_over_fallibles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a49918f36adc9fb176a9be59b6fc2afd46c3572/clippy_lints%2Fsrc%2Floops%2Ffor_loops_over_fallibles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Ffor_loops_over_fallibles.rs?ref=5a49918f36adc9fb176a9be59b6fc2afd46c3572", "patch": "@@ -7,9 +7,22 @@ use rustc_lint::LateContext;\n use rustc_span::symbol::sym;\n \n /// Checks for `for` loops over `Option`s and `Result`s.\n-pub(super) fn check(cx: &LateContext<'_>, pat: &Pat<'_>, arg: &Expr<'_>) {\n+pub(super) fn check(cx: &LateContext<'_>, pat: &Pat<'_>, arg: &Expr<'_>, method_name: Option<&str>) {\n     let ty = cx.typeck_results().expr_ty(arg);\n     if is_type_diagnostic_item(cx, ty, sym::Option) {\n+        let help_string = if let Some(method_name) = method_name {\n+            format!(\n+                \"consider replacing `for {0} in {1}.{method_name}()` with `if let Some({0}) = {1}`\",\n+                snippet(cx, pat.span, \"_\"),\n+                snippet(cx, arg.span, \"_\")\n+            )\n+        } else {\n+            format!(\n+                \"consider replacing `for {0} in {1}` with `if let Some({0}) = {1}`\",\n+                snippet(cx, pat.span, \"_\"),\n+                snippet(cx, arg.span, \"_\")\n+            )\n+        };\n         span_lint_and_help(\n             cx,\n             FOR_LOOPS_OVER_FALLIBLES,\n@@ -20,13 +33,22 @@ pub(super) fn check(cx: &LateContext<'_>, pat: &Pat<'_>, arg: &Expr<'_>) {\n                 snippet(cx, arg.span, \"_\")\n             ),\n             None,\n-            &format!(\n-                \"consider replacing `for {0} in {1}` with `if let Some({0}) = {1}`\",\n-                snippet(cx, pat.span, \"_\"),\n-                snippet(cx, arg.span, \"_\")\n-            ),\n+            &help_string,\n         );\n     } else if is_type_diagnostic_item(cx, ty, sym::Result) {\n+        let help_string = if let Some(method_name) = method_name {\n+            format!(\n+                \"consider replacing `for {0} in {1}.{method_name}()` with `if let Ok({0}) = {1}`\",\n+                snippet(cx, pat.span, \"_\"),\n+                snippet(cx, arg.span, \"_\")\n+            )\n+        } else {\n+            format!(\n+                \"consider replacing `for {0} in {1}` with `if let Ok({0}) = {1}`\",\n+                snippet(cx, pat.span, \"_\"),\n+                snippet(cx, arg.span, \"_\")\n+            )\n+        };\n         span_lint_and_help(\n             cx,\n             FOR_LOOPS_OVER_FALLIBLES,\n@@ -37,11 +59,7 @@ pub(super) fn check(cx: &LateContext<'_>, pat: &Pat<'_>, arg: &Expr<'_>) {\n                 snippet(cx, arg.span, \"_\")\n             ),\n             None,\n-            &format!(\n-                \"consider replacing `for {0} in {1}` with `if let Ok({0}) = {1}`\",\n-                snippet(cx, pat.span, \"_\"),\n-                snippet(cx, arg.span, \"_\")\n-            ),\n+            &help_string,\n         );\n     }\n }"}, {"sha": "e32b228e104c29fd0e6676f90d0de7ed9c97bc30", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5a49918f36adc9fb176a9be59b6fc2afd46c3572/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a49918f36adc9fb176a9be59b6fc2afd46c3572/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=5a49918f36adc9fb176a9be59b6fc2afd46c3572", "patch": "@@ -188,6 +188,10 @@ declare_clippy_lint! {\n     /// for x in &res {\n     ///     // ..\n     /// }\n+    ///\n+    /// for x in res.iter() {\n+    ///     // ..\n+    /// }\n     /// ```\n     ///\n     /// Use instead:\n@@ -695,10 +699,14 @@ fn check_for_loop_arg(cx: &LateContext<'_>, pat: &Pat<'_>, arg: &Expr<'_>) {\n         let method_name = method.ident.as_str();\n         // check for looping over x.iter() or x.iter_mut(), could use &x or &mut x\n         match method_name {\n-            \"iter\" | \"iter_mut\" => explicit_iter_loop::check(cx, self_arg, arg, method_name),\n+            \"iter\" | \"iter_mut\" => {\n+                explicit_iter_loop::check(cx, self_arg, arg, method_name);\n+                for_loops_over_fallibles::check(cx, pat, self_arg, Some(method_name));\n+            },\n             \"into_iter\" => {\n                 explicit_iter_loop::check(cx, self_arg, arg, method_name);\n                 explicit_into_iter_loop::check(cx, self_arg, arg);\n+                for_loops_over_fallibles::check(cx, pat, self_arg, Some(method_name));\n             },\n             \"next\" => {\n                 next_loop_linted = iter_next_loop::check(cx, arg);\n@@ -708,6 +716,6 @@ fn check_for_loop_arg(cx: &LateContext<'_>, pat: &Pat<'_>, arg: &Expr<'_>) {\n     }\n \n     if !next_loop_linted {\n-        for_loops_over_fallibles::check(cx, pat, arg);\n+        for_loops_over_fallibles::check(cx, pat, arg, None);\n     }\n }"}, {"sha": "bde78a9fd4ae9318373ccd079dbaee66b98e1042", "filename": "tests/ui/for_loops_over_fallibles.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Ffor_loops_over_fallibles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Ffor_loops_over_fallibles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loops_over_fallibles.rs?ref=5a49918f36adc9fb176a9be59b6fc2afd46c3572", "patch": "@@ -2,19 +2,34 @@\n \n fn for_loops_over_fallibles() {\n     let option = Some(1);\n-    let result = option.ok_or(\"x not found\");\n+    let mut result = option.ok_or(\"x not found\");\n     let v = vec![0, 1, 2];\n \n     // check over an `Option`\n     for x in option {\n         println!(\"{}\", x);\n     }\n \n+    // check over an `Option`\n+    for x in option.iter() {\n+        println!(\"{}\", x);\n+    }\n+\n     // check over a `Result`\n     for x in result {\n         println!(\"{}\", x);\n     }\n \n+    // check over a `Result`\n+    for x in result.into_iter() {\n+        println!(\"{}\", x);\n+    }\n+\n+    // check over a `Result`\n+    for x in result.iter_mut() {\n+        println!(\"{}\", x);\n+    }\n+\n     for x in option.ok_or(\"x not found\") {\n         println!(\"{}\", x);\n     }"}, {"sha": "635e08182d5b5571292c36fac13c171fbfad134b", "filename": "tests/ui/for_loops_over_fallibles.stderr", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Ffor_loops_over_fallibles.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Ffor_loops_over_fallibles.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loops_over_fallibles.stderr?ref=5a49918f36adc9fb176a9be59b6fc2afd46c3572", "patch": "@@ -7,48 +7,72 @@ LL |     for x in option {\n    = note: `-D clippy::for-loops-over-fallibles` implied by `-D warnings`\n    = help: consider replacing `for x in option` with `if let Some(x) = option`\n \n-error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement\n+error: for loop over `option`, which is an `Option`. This is more readably written as an `if let` statement\n   --> $DIR/for_loops_over_fallibles.rs:14:14\n    |\n+LL |     for x in option.iter() {\n+   |              ^^^^^^\n+   |\n+   = help: consider replacing `for x in option.iter()` with `if let Some(x) = option`\n+\n+error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement\n+  --> $DIR/for_loops_over_fallibles.rs:19:14\n+   |\n LL |     for x in result {\n    |              ^^^^^^\n    |\n    = help: consider replacing `for x in result` with `if let Ok(x) = result`\n \n+error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement\n+  --> $DIR/for_loops_over_fallibles.rs:24:14\n+   |\n+LL |     for x in result.into_iter() {\n+   |              ^^^^^^\n+   |\n+   = help: consider replacing `for x in result.into_iter()` with `if let Ok(x) = result`\n+\n+error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement\n+  --> $DIR/for_loops_over_fallibles.rs:29:14\n+   |\n+LL |     for x in result.iter_mut() {\n+   |              ^^^^^^\n+   |\n+   = help: consider replacing `for x in result.iter_mut()` with `if let Ok(x) = result`\n+\n error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:18:14\n+  --> $DIR/for_loops_over_fallibles.rs:33:14\n    |\n LL |     for x in option.ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in option.ok_or(\"x not found\")` with `if let Ok(x) = option.ok_or(\"x not found\")`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-  --> $DIR/for_loops_over_fallibles.rs:24:14\n+  --> $DIR/for_loops_over_fallibles.rs:39:14\n    |\n LL |     for x in v.iter().next() {\n    |              ^^^^^^^^^^^^^^^\n    |\n    = note: `#[deny(clippy::iter_next_loop)]` on by default\n \n error: for loop over `v.iter().next().and(Some(0))`, which is an `Option`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:29:14\n+  --> $DIR/for_loops_over_fallibles.rs:44:14\n    |\n LL |     for x in v.iter().next().and(Some(0)) {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in v.iter().next().and(Some(0))` with `if let Some(x) = v.iter().next().and(Some(0))`\n \n error: for loop over `v.iter().next().ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement\n-  --> $DIR/for_loops_over_fallibles.rs:33:14\n+  --> $DIR/for_loops_over_fallibles.rs:48:14\n    |\n LL |     for x in v.iter().next().ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider replacing `for x in v.iter().next().ok_or(\"x not found\")` with `if let Ok(x) = v.iter().next().ok_or(\"x not found\")`\n \n error: this loop never actually loops\n-  --> $DIR/for_loops_over_fallibles.rs:45:5\n+  --> $DIR/for_loops_over_fallibles.rs:60:5\n    |\n LL | /     while let Some(x) = option {\n LL | |         println!(\"{}\", x);\n@@ -59,13 +83,13 @@ LL | |     }\n    = note: `#[deny(clippy::never_loop)]` on by default\n \n error: this loop never actually loops\n-  --> $DIR/for_loops_over_fallibles.rs:51:5\n+  --> $DIR/for_loops_over_fallibles.rs:66:5\n    |\n LL | /     while let Ok(x) = result {\n LL | |         println!(\"{}\", x);\n LL | |         break;\n LL | |     }\n    | |_____^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 11 previous errors\n "}, {"sha": "a59da4ae10bceb6e4c2a7cf318970b856b19f72c", "filename": "tests/ui/manual_map_option.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Fmanual_map_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Fmanual_map_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.fixed?ref=5a49918f36adc9fb176a9be59b6fc2afd46c3572", "patch": "@@ -7,6 +7,7 @@\n     clippy::unit_arg,\n     clippy::match_ref_pats,\n     clippy::redundant_pattern_matching,\n+    clippy::for_loops_over_fallibles,\n     dead_code\n )]\n "}, {"sha": "0bdbefa51e8b4eedf65d1cf98a944ae7105d7442", "filename": "tests/ui/manual_map_option.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Fmanual_map_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Fmanual_map_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.rs?ref=5a49918f36adc9fb176a9be59b6fc2afd46c3572", "patch": "@@ -7,6 +7,7 @@\n     clippy::unit_arg,\n     clippy::match_ref_pats,\n     clippy::redundant_pattern_matching,\n+    clippy::for_loops_over_fallibles,\n     dead_code\n )]\n "}, {"sha": "cdc2c0e62a9b9434838946240bbbc1f44e3a7f5c", "filename": "tests/ui/manual_map_option.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Fmanual_map_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a49918f36adc9fb176a9be59b6fc2afd46c3572/tests%2Fui%2Fmanual_map_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option.stderr?ref=5a49918f36adc9fb176a9be59b6fc2afd46c3572", "patch": "@@ -1,5 +1,5 @@\n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:14:5\n+  --> $DIR/manual_map_option.rs:15:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(_) => Some(2),\n@@ -10,7 +10,7 @@ LL | |     };\n    = note: `-D clippy::manual-map` implied by `-D warnings`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:19:5\n+  --> $DIR/manual_map_option.rs:20:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(x + 1),\n@@ -19,7 +19,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + 1)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:24:5\n+  --> $DIR/manual_map_option.rs:25:5\n    |\n LL | /     match Some(\"\") {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -28,7 +28,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(\"\").map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:29:5\n+  --> $DIR/manual_map_option.rs:30:5\n    |\n LL | /     if let Some(x) = Some(0) {\n LL | |         Some(!x)\n@@ -38,7 +38,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| !x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:36:5\n+  --> $DIR/manual_map_option.rs:37:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => { Some(std::convert::identity(x)) }\n@@ -47,7 +47,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(std::convert::identity)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:41:5\n+  --> $DIR/manual_map_option.rs:42:5\n    |\n LL | /     match Some(&String::new()) {\n LL | |         Some(x) => Some(str::len(x)),\n@@ -56,7 +56,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(&String::new()).map(|x| str::len(x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:51:5\n+  --> $DIR/manual_map_option.rs:52:5\n    |\n LL | /     match &Some([0, 1]) {\n LL | |         Some(x) => Some(x[0]),\n@@ -65,7 +65,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([0, 1]).as_ref().map(|x| x[0])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:56:5\n+  --> $DIR/manual_map_option.rs:57:5\n    |\n LL | /     match &Some(0) {\n LL | |         &Some(x) => Some(x * 2),\n@@ -74,7 +74,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x * 2)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:61:5\n+  --> $DIR/manual_map_option.rs:62:5\n    |\n LL | /     match Some(String::new()) {\n LL | |         Some(ref x) => Some(x.is_empty()),\n@@ -83,7 +83,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:66:5\n+  --> $DIR/manual_map_option.rs:67:5\n    |\n LL | /     match &&Some(String::new()) {\n LL | |         Some(x) => Some(x.len()),\n@@ -92,7 +92,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:71:5\n+  --> $DIR/manual_map_option.rs:72:5\n    |\n LL | /     match &&Some(0) {\n LL | |         &&Some(x) => Some(x + x),\n@@ -101,7 +101,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| x + x)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:84:9\n+  --> $DIR/manual_map_option.rs:85:9\n    |\n LL | /         match &mut Some(String::new()) {\n LL | |             Some(x) => Some(x.push_str(\"\")),\n@@ -110,7 +110,7 @@ LL | |         };\n    | |_________^ help: try this: `Some(String::new()).as_mut().map(|x| x.push_str(\"\"))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:90:5\n+  --> $DIR/manual_map_option.rs:91:5\n    |\n LL | /     match &mut Some(String::new()) {\n LL | |         Some(ref x) => Some(x.len()),\n@@ -119,7 +119,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.len())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:95:5\n+  --> $DIR/manual_map_option.rs:96:5\n    |\n LL | /     match &mut &Some(String::new()) {\n LL | |         Some(x) => Some(x.is_empty()),\n@@ -128,7 +128,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(String::new()).as_ref().map(|x| x.is_empty())`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:100:5\n+  --> $DIR/manual_map_option.rs:101:5\n    |\n LL | /     match Some((0, 1, 2)) {\n LL | |         Some((x, y, z)) => Some(x + y + z),\n@@ -137,7 +137,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((0, 1, 2)).map(|(x, y, z)| x + y + z)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:105:5\n+  --> $DIR/manual_map_option.rs:106:5\n    |\n LL | /     match Some([1, 2, 3]) {\n LL | |         Some([first, ..]) => Some(first),\n@@ -146,7 +146,7 @@ LL | |     };\n    | |_____^ help: try this: `Some([1, 2, 3]).map(|[first, ..]| first)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:110:5\n+  --> $DIR/manual_map_option.rs:111:5\n    |\n LL | /     match &Some((String::new(), \"test\")) {\n LL | |         Some((x, y)) => Some((y, x)),\n@@ -155,7 +155,7 @@ LL | |     };\n    | |_____^ help: try this: `Some((String::new(), \"test\")).as_ref().map(|(x, y)| (y, x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:168:5\n+  --> $DIR/manual_map_option.rs:169:5\n    |\n LL | /     match Some(0) {\n LL | |         Some(x) => Some(vec![x]),\n@@ -164,7 +164,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| vec![x])`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:173:5\n+  --> $DIR/manual_map_option.rs:174:5\n    |\n LL | /     match option_env!(\"\") {\n LL | |         Some(x) => Some(String::from(x)),\n@@ -173,7 +173,7 @@ LL | |     };\n    | |_____^ help: try this: `option_env!(\"\").map(String::from)`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:193:12\n+  --> $DIR/manual_map_option.rs:194:12\n    |\n LL |       } else if let Some(x) = Some(0) {\n    |  ____________^\n@@ -184,7 +184,7 @@ LL | |     };\n    | |_____^ help: try this: `{ Some(0).map(|x| x + 1) }`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option.rs:201:12\n+  --> $DIR/manual_map_option.rs:202:12\n    |\n LL |       } else if let Some(x) = Some(0) {\n    |  ____________^"}]}