{"sha": "30650f867bb0a94b3378942487e78f3eb7eb868f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNjUwZjg2N2JiMGE5NGIzMzc4OTQyNDg3ZTc4ZjNlYjdlYjg2OGY=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-03-05T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-03-05T19:13:01Z"}, "message": "debuginfo: Use is unsigned flag when emitting enumerators", "tree": {"sha": "d73edbe0b0402df56e63bccb630af617f74a2817", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d73edbe0b0402df56e63bccb630af617f74a2817"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30650f867bb0a94b3378942487e78f3eb7eb868f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30650f867bb0a94b3378942487e78f3eb7eb868f", "html_url": "https://github.com/rust-lang/rust/commit/30650f867bb0a94b3378942487e78f3eb7eb868f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30650f867bb0a94b3378942487e78f3eb7eb868f/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebd941b890e4731aed0ea1f76f056c8a6394f251", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd941b890e4731aed0ea1f76f056c8a6394f251", "html_url": "https://github.com/rust-lang/rust/commit/ebd941b890e4731aed0ea1f76f056c8a6394f251"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "67529a82532ce022796aa5e12b6ec7537c2a57b1", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/30650f867bb0a94b3378942487e78f3eb7eb868f/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30650f867bb0a94b3378942487e78f3eb7eb868f/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=30650f867bb0a94b3378942487e78f3eb7eb868f", "patch": "@@ -1780,14 +1780,19 @@ fn prepare_enum_metadata(\n                 .zip(&def.variants)\n                 .map(|((_, discr), v)| {\n                     let name = v.ident.as_str();\n+                    let is_unsigned = match discr.ty.kind {\n+                        ty::Int(_) => false,\n+                        ty::Uint(_) => true,\n+                        _ => bug!(\"non integer discriminant\"),\n+                    };\n                     unsafe {\n                         Some(llvm::LLVMRustDIBuilderCreateEnumerator(\n                             DIB(cx),\n                             name.as_ptr().cast(),\n                             name.len(),\n                             // FIXME: what if enumeration has i128 discriminant?\n                             discr.val as i64,\n-                            false, // FIXME: IsUnsigned.\n+                            is_unsigned,\n                         ))\n                     }\n                 })"}, {"sha": "f9da987765f9cd58c60fe86a6171304aa8453738", "filename": "src/test/codegen/enum-discriminant-value.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/30650f867bb0a94b3378942487e78f3eb7eb868f/src%2Ftest%2Fcodegen%2Fenum-discriminant-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30650f867bb0a94b3378942487e78f3eb7eb868f/src%2Ftest%2Fcodegen%2Fenum-discriminant-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fenum-discriminant-value.rs?ref=30650f867bb0a94b3378942487e78f3eb7eb868f", "patch": "@@ -0,0 +1,27 @@\n+// Verify that DIEnumerator uses isUnsigned flag when appropriate.\n+//\n+// compile-flags: -g -C no-prepopulate-passes\n+\n+#[repr(i64)]\n+pub enum I64 {\n+    I64Min = std::i64::MIN,\n+    I64Max = std::i64::MAX,\n+}\n+\n+#[repr(u64)]\n+pub enum U64 {\n+    U64Min = std::u64::MIN,\n+    U64Max = std::u64::MAX,\n+}\n+\n+fn main() {\n+    let _a = I64::I64Min;\n+    let _b = I64::I64Max;\n+    let _c = U64::U64Min;\n+    let _d = U64::U64Max;\n+}\n+\n+// CHECK: !DIEnumerator(name: \"I64Min\", value: -9223372036854775808)\n+// CHECK: !DIEnumerator(name: \"I64Max\", value: 9223372036854775807)\n+// CHECK: !DIEnumerator(name: \"U64Min\", value: 0, isUnsigned: true)\n+// CHECK: !DIEnumerator(name: \"U64Max\", value: 18446744073709551615, isUnsigned: true)"}]}