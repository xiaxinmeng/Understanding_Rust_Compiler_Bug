{"sha": "07957ffb2eace00019c2bb07fe5fc03191a476c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OTU3ZmZiMmVhY2UwMDAxOWMyYmIwN2ZlNWZjMDMxOTFhNDc2Yzc=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-25T05:23:50Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-26T00:37:27Z"}, "message": "Refactor Module's field extern_crate_did: Option<DefId> to extern_crate_id: Option<NodeId>", "tree": {"sha": "d5e56c6fce8dc284331753a90d61b4d2ad2a5e72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5e56c6fce8dc284331753a90d61b4d2ad2a5e72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07957ffb2eace00019c2bb07fe5fc03191a476c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07957ffb2eace00019c2bb07fe5fc03191a476c7", "html_url": "https://github.com/rust-lang/rust/commit/07957ffb2eace00019c2bb07fe5fc03191a476c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07957ffb2eace00019c2bb07fe5fc03191a476c7/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f32fdecfbc56b7ddd39a418632a1149792e9033", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f32fdecfbc56b7ddd39a418632a1149792e9033", "html_url": "https://github.com/rust-lang/rust/commit/8f32fdecfbc56b7ddd39a418632a1149792e9033"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "e59960ed4bd015a6e9bdd20c84db24d581c1b282", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07957ffb2eace00019c2bb07fe5fc03191a476c7/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07957ffb2eace00019c2bb07fe5fc03191a476c7/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=07957ffb2eace00019c2bb07fe5fc03191a476c7", "patch": "@@ -293,10 +293,8 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n                     self.external_exports.insert(def_id);\n                     let parent_link = ModuleParentLink(parent, name);\n                     let def = Def::Mod(def_id);\n-                    let local_def_id = self.ast_map.local_def_id(item.id);\n-                    let external_module =\n-                        self.new_extern_crate_module(parent_link, def, is_public, local_def_id);\n-                    self.define(parent, name, TypeNS, (external_module, sp));\n+                    let module = self.new_extern_crate_module(parent_link, def, is_public, item.id);\n+                    self.define(parent, name, TypeNS, (module, sp));\n \n                     if is_public {\n                         let export = Export { name: name, def_id: def_id };\n@@ -306,7 +304,7 @@ impl<'a, 'b:'a, 'tcx:'b> GraphBuilder<'a, 'b, 'tcx> {\n                         }\n                     }\n \n-                    self.build_reduced_graph_for_external_crate(external_module);\n+                    self.build_reduced_graph_for_external_crate(module);\n                 }\n                 parent\n             }"}, {"sha": "47e4da53f334259a77f8de7df0ca62c1e9c27224", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/07957ffb2eace00019c2bb07fe5fc03191a476c7/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07957ffb2eace00019c2bb07fe5fc03191a476c7/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=07957ffb2eace00019c2bb07fe5fc03191a476c7", "patch": "@@ -807,9 +807,9 @@ pub struct ModuleS<'a> {\n     def: Option<Def>,\n     is_public: bool,\n \n-    // If the module is an extern crate, `def` is root of the external crate and `extern_crate_did`\n-    // is the DefId of the local `extern crate` item (otherwise, `extern_crate_did` is None).\n-    extern_crate_did: Option<DefId>,\n+    // If the module is an extern crate, `def` is root of the external crate and `extern_crate_id`\n+    // is the NodeId of the local `extern crate` item (otherwise, `extern_crate_id` is None).\n+    extern_crate_id: Option<NodeId>,\n \n     resolutions: RefCell<HashMap<(Name, Namespace), NameResolution<'a>>>,\n     unresolved_imports: RefCell<Vec<ImportDirective>>,\n@@ -856,7 +856,7 @@ impl<'a> ModuleS<'a> {\n             parent_link: parent_link,\n             def: def,\n             is_public: is_public,\n-            extern_crate_did: None,\n+            extern_crate_id: None,\n             resolutions: RefCell::new(HashMap::new()),\n             unresolved_imports: RefCell::new(Vec::new()),\n             module_children: RefCell::new(NodeMap()),\n@@ -1039,7 +1039,7 @@ impl<'a> NameBinding<'a> {\n     }\n \n     fn is_extern_crate(&self) -> bool {\n-        self.module().and_then(|module| module.extern_crate_did).is_some()\n+        self.module().and_then(|module| module.extern_crate_id).is_some()\n     }\n \n     fn is_import(&self) -> bool {\n@@ -1237,10 +1237,10 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                parent_link: ParentLink<'a>,\n                                def: Def,\n                                is_public: bool,\n-                               local_def: DefId)\n+                               local_node_id: NodeId)\n                                -> Module<'a> {\n         let mut module = ModuleS::new(parent_link, Some(def), false, is_public);\n-        module.extern_crate_did = Some(local_def);\n+        module.extern_crate_id = Some(local_node_id);\n         self.arenas.modules.alloc(module)\n     }\n "}]}