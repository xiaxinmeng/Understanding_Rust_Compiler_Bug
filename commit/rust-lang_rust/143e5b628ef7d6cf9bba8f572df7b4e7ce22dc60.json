{"sha": "143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0M2U1YjYyOGVmN2Q2Y2Y5YmJhOGY1NzJkZjdiNGU3Y2UyMmRjNjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-17T17:58:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-17T17:58:28Z"}, "message": "remove overlay removes overlay", "tree": {"sha": "d60d6056fee7a38853a760839f684aae3ab50371", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d60d6056fee7a38853a760839f684aae3ab50371"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60", "html_url": "https://github.com/rust-lang/rust/commit/143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf", "html_url": "https://github.com/rust-lang/rust/commit/e8bc29f122813bb3c69d1f8cd60dd6ab4dd9a4bf"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7e45f0a7387c80e7f57b8c6920e747f5fd47e6a4", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=143e5b628ef7d6cf9bba8f572df7b4e7ce22dc60", "patch": "@@ -143,7 +143,7 @@ impl Vfs {\n         let file = file.expect(\"can't remove a file which wasn't added\");\n         let full_path = rel_path.to_path(&self.roots.path(root));\n         if let Ok(text) = fs::read_to_string(&full_path) {\n-            self.do_change_file(file, text, true);\n+            self.do_change_file(file, text, false);\n         } else {\n             self.do_remove_file(root, rel_path, file);\n         }\n@@ -183,11 +183,11 @@ impl Vfs {\n                 self.pending_changes.push(change);\n             }\n             TaskResult::SingleFile { root, path, text } => {\n-                let file = self.find_file(root, &path);\n-                if file.map(|file| self.files[file].is_overlayed) == Some(true) {\n+                let existing_file = self.find_file(root, &path);\n+                if existing_file.map(|file| self.files[file].is_overlayed) == Some(true) {\n                     return;\n                 }\n-                match (file, text) {\n+                match (existing_file, text) {\n                     (Some(file), None) => {\n                         self.do_remove_file(root, path, file);\n                     }"}]}