{"sha": "e7b0e0adbbb9f41f79592822ffe1e5834222a96b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YjBlMGFkYmJiOWY0MWY3OTU5MjgyMmZmZTFlNTgzNDIyMmE5NmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-16T09:16:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-16T09:16:29Z"}, "message": "auto merge of #10994 : ktt3ja/rust/issue-10956, r=alexcrichton\n\nTypes used inside live struct or enum are now marked live.\r\n\r\nFix #10956 and #10993.", "tree": {"sha": "c45f89350c6f25141be7d6b3bf595e65493c03ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c45f89350c6f25141be7d6b3bf595e65493c03ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7b0e0adbbb9f41f79592822ffe1e5834222a96b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b0e0adbbb9f41f79592822ffe1e5834222a96b", "html_url": "https://github.com/rust-lang/rust/commit/e7b0e0adbbb9f41f79592822ffe1e5834222a96b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7b0e0adbbb9f41f79592822ffe1e5834222a96b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc7a2e12223c297695d12ce6e428c44075ed080e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc7a2e12223c297695d12ce6e428c44075ed080e", "html_url": "https://github.com/rust-lang/rust/commit/dc7a2e12223c297695d12ce6e428c44075ed080e"}, {"sha": "fb4a1d88f580a138cae7530313b6d5a05c5ff5bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4a1d88f580a138cae7530313b6d5a05c5ff5bd", "html_url": "https://github.com/rust-lang/rust/commit/fb4a1d88f580a138cae7530313b6d5a05c5ff5bd"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "1b1270577147534350b464a0930059d65d286369", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7b0e0adbbb9f41f79592822ffe1e5834222a96b/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b0e0adbbb9f41f79592822ffe1e5834222a96b/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=e7b0e0adbbb9f41f79592822ffe1e5834222a96b", "patch": "@@ -107,6 +107,8 @@ impl MarkSymbolVisitor {\n                 match item.node {\n                     ast::item_fn(..)\n                     | ast::item_ty(..)\n+                    | ast::item_enum(..)\n+                    | ast::item_struct(..)\n                     | ast::item_static(..) => {\n                         visit::walk_item(self, item, ());\n                     }"}, {"sha": "5e5c12391d6f2a1de99dca997c2e544eb11be7f8", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7b0e0adbbb9f41f79592822ffe1e5834222a96b/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b0e0adbbb9f41f79592822ffe1e5834222a96b/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=e7b0e0adbbb9f41f79592822ffe1e5834222a96b", "patch": "@@ -290,6 +290,10 @@ pub fn walk_variant<E:Clone, V:Visitor<E>>(visitor:&mut V,\n                                      env.clone())\n         }\n     }\n+    match variant.node.disr_expr {\n+        Some(expr) => visitor.visit_expr(expr, env),\n+        None => ()\n+    }\n }\n \n pub fn skip_ty<E, V:Visitor<E>>(_: &mut V, _: &Ty, _: E) {"}, {"sha": "cedc25eb15054c95ef0b9e342352cbfb5ea9e5e0", "filename": "src/test/compile-fail/lint-dead-code-1.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7b0e0adbbb9f41f79592822ffe1e5834222a96b/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b0e0adbbb9f41f79592822ffe1e5834222a96b/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs?ref=e7b0e0adbbb9f41f79592822ffe1e5834222a96b", "patch": "@@ -27,6 +27,7 @@ static priv_static: int = 0; //~ ERROR: code is never used\n static used_static: int = 0;\n pub static used_static2: int = used_static;\n static USED_STATIC: int = 0;\n+static STATIC_USED_IN_ENUM_DISCRIMINANT: uint = 10;\n \n pub type typ = ~UsedStruct4;\n pub struct PubStruct();\n@@ -41,8 +42,15 @@ struct SemiUsedStruct;\n impl SemiUsedStruct {\n     fn la_la_la() {}\n }\n+struct StructUsedAsField;\n+struct StructUsedInEnum;\n+pub struct PubStruct2 {\n+    struct_used_as_field: *StructUsedAsField\n+}\n \n pub enum pub_enum { foo1, bar1 }\n+pub enum pub_enum2 { a(~StructUsedInEnum) }\n+pub enum pub_enum3 { Foo = STATIC_USED_IN_ENUM_DISCRIMINANT }\n enum priv_enum { foo2, bar2 } //~ ERROR: code is never used\n enum used_enum { foo3, bar3 }\n "}]}