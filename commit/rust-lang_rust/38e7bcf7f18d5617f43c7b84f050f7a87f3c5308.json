{"sha": "38e7bcf7f18d5617f43c7b84f050f7a87f3c5308", "node_id": "C_kwDOAAsO6NoAKDM4ZTdiY2Y3ZjE4ZDU2MTdmNDNjN2I4NGYwNTBmN2E4N2YzYzUzMDg", "commit": {"author": {"name": "Aleksei Trifonov", "email": "avrong@avrong.me", "date": "2022-07-29T02:25:59Z"}, "committer": {"name": "Aleksei Trifonov", "email": "avrong@avrong.me", "date": "2022-07-29T02:25:59Z"}, "message": "Use cargo_metadata in cargo-miri", "tree": {"sha": "c60a1c4ab3d43fc89b31fbff315c34b0ca18a6e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c60a1c4ab3d43fc89b31fbff315c34b0ca18a6e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308", "html_url": "https://github.com/rust-lang/rust/commit/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308/comments", "author": {"login": "avrong", "id": 6342851, "node_id": "MDQ6VXNlcjYzNDI4NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6342851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avrong", "html_url": "https://github.com/avrong", "followers_url": "https://api.github.com/users/avrong/followers", "following_url": "https://api.github.com/users/avrong/following{/other_user}", "gists_url": "https://api.github.com/users/avrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/avrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avrong/subscriptions", "organizations_url": "https://api.github.com/users/avrong/orgs", "repos_url": "https://api.github.com/users/avrong/repos", "events_url": "https://api.github.com/users/avrong/events{/privacy}", "received_events_url": "https://api.github.com/users/avrong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "avrong", "id": 6342851, "node_id": "MDQ6VXNlcjYzNDI4NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6342851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avrong", "html_url": "https://github.com/avrong", "followers_url": "https://api.github.com/users/avrong/followers", "following_url": "https://api.github.com/users/avrong/following{/other_user}", "gists_url": "https://api.github.com/users/avrong/gists{/gist_id}", "starred_url": "https://api.github.com/users/avrong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avrong/subscriptions", "organizations_url": "https://api.github.com/users/avrong/orgs", "repos_url": "https://api.github.com/users/avrong/repos", "events_url": "https://api.github.com/users/avrong/events{/privacy}", "received_events_url": "https://api.github.com/users/avrong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a719c058162804480358ef16c9e3ca1c8f5e3957", "url": "https://api.github.com/repos/rust-lang/rust/commits/a719c058162804480358ef16c9e3ca1c8f5e3957", "html_url": "https://github.com/rust-lang/rust/commit/a719c058162804480358ef16c9e3ca1c8f5e3957"}], "stats": {"total": 121, "additions": 73, "deletions": 48}, "files": [{"sha": "95c2bda505c5bc206c12ad3f749ab59371fcfb7c", "filename": "cargo-miri/Cargo.lock", "status": "modified", "additions": 55, "deletions": 20, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308/cargo-miri%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308/cargo-miri%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2FCargo.lock?ref=38e7bcf7f18d5617f43c7b84f050f7a87f3c5308", "patch": "@@ -20,10 +20,20 @@ version = \"1.3.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n \n+[[package]]\n+name = \"camino\"\n+version = \"1.0.9\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"869119e97797867fd90f5e22af7d0bd274bd4635ebb9eb68c04f3f513ae6c412\"\n+dependencies = [\n+ \"serde\",\n+]\n+\n [[package]]\n name = \"cargo-miri\"\n version = \"0.1.0\"\n dependencies = [\n+ \"cargo_metadata\",\n  \"directories\",\n  \"rustc-workspace-hack\",\n  \"rustc_version\",\n@@ -32,6 +42,28 @@ dependencies = [\n  \"vergen\",\n ]\n \n+[[package]]\n+name = \"cargo-platform\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"cbdb825da8a5df079a43676dbe042702f1707b1109f713a01420fbb4cc71fa27\"\n+dependencies = [\n+ \"serde\",\n+]\n+\n+[[package]]\n+name = \"cargo_metadata\"\n+version = \"0.15.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"3abb7553d5b9b8421c6de7cb02606ff15e0c6eea7d8eadd75ef013fd636bec36\"\n+dependencies = [\n+ \"camino\",\n+ \"cargo-platform\",\n+ \"semver\",\n+ \"serde\",\n+ \"serde_json\",\n+]\n+\n [[package]]\n name = \"cc\"\n version = \"1.0.72\"\n@@ -274,11 +306,11 @@ dependencies = [\n \n [[package]]\n name = \"proc-macro2\"\n-version = \"1.0.33\"\n+version = \"1.0.42\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fb37d2df5df740e582f28f8560cf425f52bb267d872fe58358eadb554909f07a\"\n+checksum = \"c278e965f1d8cf32d6e0e96de3d3e79712178ae67986d9cf9151f51e95aac89b\"\n dependencies = [\n- \"unicode-xid\",\n+ \"unicode-ident\",\n ]\n \n [[package]]\n@@ -338,24 +370,27 @@ checksum = \"73b4b750c782965c211b42f022f59af1fbceabdd026623714f104152f1ec149f\"\n \n [[package]]\n name = \"semver\"\n-version = \"1.0.4\"\n+version = \"1.0.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"568a8e6258aa33c13358f81fd834adb854c6f7c9468520910a9b1e8fac068012\"\n+checksum = \"a2333e6df6d6598f2b1974829f853c2b4c5f4a6e503c10af918081aa6f8564e1\"\n+dependencies = [\n+ \"serde\",\n+]\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.131\"\n+version = \"1.0.140\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b4ad69dfbd3e45369132cc64e6748c2d65cdfb001a2b1c232d128b4ad60561c1\"\n+checksum = \"fc855a42c7967b7c369eb5860f7164ef1f6f81c20c7cc1141f2a604e18723b03\"\n dependencies = [\n  \"serde_derive\",\n ]\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.131\"\n+version = \"1.0.140\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b710a83c4e0dff6a3d511946b95274ad9ca9e5d3ae497b63fda866ac955358d2\"\n+checksum = \"6f2122636b9fe3b81f1cb25099fcf2d3f542cdb1d45940d56c713158884a05da\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -364,9 +399,9 @@ dependencies = [\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.73\"\n+version = \"1.0.82\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bcbd0344bc6533bc7ec56df11d42fb70f1b912351c0825ccb7211b59d8af7cf5\"\n+checksum = \"82c2c1fdcd807d1098552c5b9a36e425e42e9fbd7c6a37a8425f390f781f7fa7\"\n dependencies = [\n  \"itoa\",\n  \"ryu\",\n@@ -375,13 +410,13 @@ dependencies = [\n \n [[package]]\n name = \"syn\"\n-version = \"1.0.82\"\n+version = \"1.0.98\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8daf5dd0bb60cbd4137b1b587d2fc0ae729bc07cf01cd70b36a1ed5ade3b9d59\"\n+checksum = \"c50aef8a904de4c23c788f104b7dddc7d6f79c647c7c8ce4cc8f73eb0ca773dd\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n- \"unicode-xid\",\n+ \"unicode-ident\",\n ]\n \n [[package]]\n@@ -435,6 +470,12 @@ version = \"0.3.7\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"1a01404663e3db436ed2746d9fefef640d868edae3cceb81c3b8d5732fda678f\"\n \n+[[package]]\n+name = \"unicode-ident\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"15c61ba63f9235225a22310255a29b806b907c9b8c964bcbd0a2c70f3f2deea7\"\n+\n [[package]]\n name = \"unicode-normalization\"\n version = \"0.1.19\"\n@@ -444,12 +485,6 @@ dependencies = [\n  \"tinyvec\",\n ]\n \n-[[package]]\n-name = \"unicode-xid\"\n-version = \"0.2.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8ccb82d61f80a663efe1f787a51b16b5a51e3314d6ac365b08639f52387b33f3\"\n-\n [[package]]\n name = \"url\"\n version = \"2.2.2\""}, {"sha": "8bcd77c70b013eb6350912bfa62c7417669e5a17", "filename": "cargo-miri/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308/cargo-miri%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308/cargo-miri%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2FCargo.toml?ref=38e7bcf7f18d5617f43c7b84f050f7a87f3c5308", "patch": "@@ -17,6 +17,7 @@ doctest = false # and no doc tests\n directories = \"3\"\n rustc_version = \"0.4\"\n serde_json = \"1.0.40\"\n+cargo_metadata = \"0.15.0\"\n \n # A noop dependency that changes in the Rust repository, it's a bit of a hack.\n # See the `src/tools/rustc-workspace-hack/README.md` file in `rust-lang/rust`"}, {"sha": "d11d3f15b885523def0c7433c09077b2123734ec", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 17, "deletions": 28, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e7bcf7f18d5617f43c7b84f050f7a87f3c5308/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=38e7bcf7f18d5617f43c7b84f050f7a87f3c5308", "patch": "@@ -16,6 +16,7 @@ use std::process::{self, Command};\n \n use rustc_version::VersionMeta;\n use serde::{Deserialize, Serialize};\n+use cargo_metadata::{MetadataCommand, Metadata};\n \n use version::*;\n \n@@ -582,41 +583,29 @@ path = \"lib.rs\"\n     }\n }\n \n-#[derive(Deserialize)]\n-struct Metadata {\n-    target_directory: PathBuf,\n-    workspace_members: Vec<String>,\n-}\n-\n fn get_cargo_metadata() -> Metadata {\n-    let mut cmd = cargo();\n-    // `-Zunstable-options` is required by `--config`.\n-    cmd.args([\"metadata\", \"--no-deps\", \"--format-version=1\", \"-Zunstable-options\"]);\n     // The `build.target-dir` config can be passed by `--config` flags, so forward them to\n     // `cargo metadata`.\n+    let mut additional_options = Vec::new();\n+    // `-Zunstable-options` is required by `--config`.\n+    additional_options.push(\"-Zunstable-options\".to_string());\n+\n     let config_flag = \"--config\";\n     for arg in ArgSplitFlagValue::new(\n         env::args().skip(3), // skip the program name, \"miri\" and \"run\" / \"test\"\n         config_flag,\n-    )\n-    // Only look at `Ok`\n-    .flatten()\n-    {\n-        cmd.arg(config_flag).arg(arg);\n-    }\n-    let mut child = cmd\n-        .stdin(process::Stdio::null())\n-        .stdout(process::Stdio::piped())\n-        .spawn()\n-        .expect(\"failed ro run `cargo metadata`\");\n-    // Check this `Result` after `status.success()` is checked, so we don't print the error\n-    // to stderr if `cargo metadata` is also printing to stderr.\n-    let metadata: Result<Metadata, _> = serde_json::from_reader(child.stdout.take().unwrap());\n-    let status = child.wait().expect(\"failed to wait for `cargo metadata` to exit\");\n-    if !status.success() {\n-        std::process::exit(status.code().unwrap_or(-1));\n+    ).flatten() { // Only look at `Ok`\n+        additional_options.push(config_flag.to_string());\n+        additional_options.push(arg);\n     }\n-    metadata.unwrap_or_else(|e| show_error(format!(\"invalid `cargo metadata` output: {}\", e)))\n+\n+    let metadata = MetadataCommand::new()\n+        .no_deps()\n+        .other_options(additional_options)\n+        .exec()\n+        .unwrap();\n+\n+    metadata\n }\n \n /// Pulls all the crates in this workspace from the cargo metadata.\n@@ -627,7 +616,7 @@ fn local_crates(metadata: &Metadata) -> String {\n     assert!(!metadata.workspace_members.is_empty());\n     let mut local_crates = String::new();\n     for member in &metadata.workspace_members {\n-        let name = member.split(' ').next().unwrap();\n+        let name = member.repr.split(' ').next().unwrap();\n         let name = name.replace('-', \"_\");\n         local_crates.push_str(&name);\n         local_crates.push(',');"}]}