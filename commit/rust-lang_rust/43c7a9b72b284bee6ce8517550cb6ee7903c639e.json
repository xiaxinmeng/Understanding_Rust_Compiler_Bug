{"sha": "43c7a9b72b284bee6ce8517550cb6ee7903c639e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYzdhOWI3MmIyODRiZWU2Y2U4NTE3NTUwY2I2ZWU3OTAzYzYzOWU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-09T16:56:16Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-09T16:56:16Z"}, "message": "Fix broken doc links in MaybeUninit.", "tree": {"sha": "dd2e88de3b4722fa04981f08099bb065332941cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd2e88de3b4722fa04981f08099bb065332941cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43c7a9b72b284bee6ce8517550cb6ee7903c639e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43c7a9b72b284bee6ce8517550cb6ee7903c639e", "html_url": "https://github.com/rust-lang/rust/commit/43c7a9b72b284bee6ce8517550cb6ee7903c639e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43c7a9b72b284bee6ce8517550cb6ee7903c639e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a94b2cb034c2521d52e54632b775e181eb7e0bc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a94b2cb034c2521d52e54632b775e181eb7e0bc7", "html_url": "https://github.com/rust-lang/rust/commit/a94b2cb034c2521d52e54632b775e181eb7e0bc7"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "f68e2b8208982c9852a85c96b02e338598d01f47", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43c7a9b72b284bee6ce8517550cb6ee7903c639e/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43c7a9b72b284bee6ce8517550cb6ee7903c639e/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=43c7a9b72b284bee6ce8517550cb6ee7903c639e", "patch": "@@ -472,6 +472,8 @@ impl<T> MaybeUninit<T> {\n     /// *immediate* undefined behavior, but will cause undefined behavior with most\n     /// safe operations (including dropping it).\n     ///\n+    /// [`Vec<T>`]: ../../std/vec/struct.Vec.html\n+    ///\n     /// # Examples\n     ///\n     /// Correct usage of this method:\n@@ -593,6 +595,7 @@ impl<T> MaybeUninit<T> {\n     /// `Vec<T>` however will cause undefined behaviour.\n     ///\n     /// [`assume_init`]: MaybeUninit::assume_init\n+    /// [`Vec<T>`]: ../../std/vec/struct.Vec.html\n     #[unstable(feature = \"maybe_uninit_extra\", issue = \"63567\")]\n     pub unsafe fn assume_init_drop(&mut self) {\n         // SAFETY: the caller must guarantee that `self` is initialized and"}]}