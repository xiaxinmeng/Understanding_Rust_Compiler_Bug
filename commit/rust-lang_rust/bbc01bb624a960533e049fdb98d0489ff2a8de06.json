{"sha": "bbc01bb624a960533e049fdb98d0489ff2a8de06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYzAxYmI2MjRhOTYwNTMzZTA0OWZkYjk4ZDA0ODlmZjJhOGRlMDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-22T10:12:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-22T10:12:05Z"}, "message": "Auto merge of #80558 - lcnr:gat-variance, r=matthewjasper\n\nrequire gat substs to be invariant\n\nfixes #69184, fixes #80766\n\nr? `@matthewjasper` probably", "tree": {"sha": "7c3071c605946aadde8c72cabb20c45d67cc51f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c3071c605946aadde8c72cabb20c45d67cc51f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbc01bb624a960533e049fdb98d0489ff2a8de06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc01bb624a960533e049fdb98d0489ff2a8de06", "html_url": "https://github.com/rust-lang/rust/commit/bbc01bb624a960533e049fdb98d0489ff2a8de06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbc01bb624a960533e049fdb98d0489ff2a8de06/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25f39fe80293f77bd86f64a1261a3e2c0ca23847", "url": "https://api.github.com/repos/rust-lang/rust/commits/25f39fe80293f77bd86f64a1261a3e2c0ca23847", "html_url": "https://github.com/rust-lang/rust/commit/25f39fe80293f77bd86f64a1261a3e2c0ca23847"}, {"sha": "f32a6acdab446d7fd018bb2a975769ae995aa4c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f32a6acdab446d7fd018bb2a975769ae995aa4c7", "html_url": "https://github.com/rust-lang/rust/commit/f32a6acdab446d7fd018bb2a975769ae995aa4c7"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "339eb5f9afc74a8fae14342f4995c08fd248cecc", "filename": "compiler/rustc_typeck/src/variance/constraints.rs", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bbc01bb624a960533e049fdb98d0489ff2a8de06/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fconstraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbc01bb624a960533e049fdb98d0489ff2a8de06/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fconstraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fvariance%2Fconstraints.rs?ref=bbc01bb624a960533e049fdb98d0489ff2a8de06", "patch": "@@ -207,27 +207,13 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n         }\n     }\n \n-    fn add_constraints_from_trait_ref(\n-        &mut self,\n-        current: &CurrentItem,\n-        trait_ref: ty::TraitRef<'tcx>,\n-        variance: VarianceTermPtr<'a>,\n-    ) {\n-        debug!(\"add_constraints_from_trait_ref: trait_ref={:?} variance={:?}\", trait_ref, variance);\n-        self.add_constraints_from_invariant_substs(current, trait_ref.substs, variance);\n-    }\n-\n+    #[instrument(skip(self, current))]\n     fn add_constraints_from_invariant_substs(\n         &mut self,\n         current: &CurrentItem,\n         substs: SubstsRef<'tcx>,\n         variance: VarianceTermPtr<'a>,\n     ) {\n-        debug!(\n-            \"add_constraints_from_invariant_substs: substs={:?} variance={:?}\",\n-            substs, variance\n-        );\n-\n         // Trait are always invariant so we can take advantage of that.\n         let variance_i = self.invariant(variance);\n \n@@ -300,8 +286,7 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n             }\n \n             ty::Projection(ref data) => {\n-                let tcx = self.tcx();\n-                self.add_constraints_from_trait_ref(current, data.trait_ref(tcx), variance);\n+                self.add_constraints_from_invariant_substs(current, data.substs, variance);\n             }\n \n             ty::Opaque(_, substs) => {"}, {"sha": "36db80706b4999cd0b3470def52b629d7f3833c1", "filename": "src/test/ui/generic-associated-types/variance_constraints.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bbc01bb624a960533e049fdb98d0489ff2a8de06/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fvariance_constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbc01bb624a960533e049fdb98d0489ff2a8de06/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fvariance_constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fvariance_constraints.rs?ref=bbc01bb624a960533e049fdb98d0489ff2a8de06", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+// issue #69184\n+#![feature(generic_associated_types)]\n+#![allow(incomplete_features)]\n+\n+trait A {\n+    type B<'a>;\n+\n+    fn make_b<'a>(&'a self) -> Self::B<'a>;\n+}\n+\n+struct S {}\n+impl A for S {\n+    type B<'a> = &'a S;\n+    fn make_b<'a>(&'a self) -> &'a Self {\n+        self\n+    }\n+}\n+\n+enum E<'a> {\n+    S(<S as A>::B<'a>),\n+}\n+\n+fn main() {}"}]}