{"sha": "d21378488740097dd6c6759b3803c21cae733ee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMTM3ODQ4ODc0MDA5N2RkNmM2NzU5YjM4MDNjMjFjYWU3MzNlZTY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-16T21:56:02Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-24T02:53:44Z"}, "message": "xpy fmt", "tree": {"sha": "554509a2531c8fd74476a28e9e368447229c8cf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/554509a2531c8fd74476a28e9e368447229c8cf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d21378488740097dd6c6759b3803c21cae733ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d21378488740097dd6c6759b3803c21cae733ee6", "html_url": "https://github.com/rust-lang/rust/commit/d21378488740097dd6c6759b3803c21cae733ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d21378488740097dd6c6759b3803c21cae733ee6/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6782dc0fcecccc2747d39ff7496b35d11dcc556c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6782dc0fcecccc2747d39ff7496b35d11dcc556c", "html_url": "https://github.com/rust-lang/rust/commit/6782dc0fcecccc2747d39ff7496b35d11dcc556c"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "81241e00f91197ba485b41ae8c7ad1d69073cdc3", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d21378488740097dd6c6759b3803c21cae733ee6/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d21378488740097dd6c6759b3803c21cae733ee6/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=d21378488740097dd6c6759b3803c21cae733ee6", "patch": "@@ -32,8 +32,8 @@ use std::rc::Rc;\n \n use crate::clean;\n use crate::clean::{AttributesExt, MAX_DEF_ID};\n-use crate::config::{RenderInfo, OutputFormat};\n use crate::config::{Options as RustdocOptions, RenderOptions};\n+use crate::config::{OutputFormat, RenderInfo};\n use crate::passes::{self, Condition::*, ConditionalPass};\n \n pub use rustc_session::config::{CodegenOptions, DebuggingOptions, Input, Options};\n@@ -457,14 +457,30 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n \n             let mut global_ctxt = abort_on_err(queries.global_ctxt(), sess).take();\n \n-            sess.time(\"run_global_ctxt\", || global_ctxt.enter(|tcx| run_global_ctxt(tcx, resolver, default_passes, manual_passes, render_options, output_format)))\n+            sess.time(\"run_global_ctxt\", || {\n+                global_ctxt.enter(|tcx| {\n+                    run_global_ctxt(\n+                        tcx,\n+                        resolver,\n+                        default_passes,\n+                        manual_passes,\n+                        render_options,\n+                        output_format,\n+                    )\n+                })\n+            })\n         })\n     })\n }\n \n-fn run_global_ctxt(tcx: TyCtxt<'_>, resolver: Rc<RefCell<interface::BoxedResolver>>,\n-    mut default_passes: passes::DefaultPassOption, mut manual_passes: Vec<String>,\n-    render_options: RenderOptions, output_format: Option<OutputFormat>) -> (clean::Crate, RenderInfo, RenderOptions) {\n+fn run_global_ctxt(\n+    tcx: TyCtxt<'_>,\n+    resolver: Rc<RefCell<interface::BoxedResolver>>,\n+    mut default_passes: passes::DefaultPassOption,\n+    mut manual_passes: Vec<String>,\n+    render_options: RenderOptions,\n+    output_format: Option<OutputFormat>,\n+) -> (clean::Crate, RenderInfo, RenderOptions) {\n                 // Certain queries assume that some checks were run elsewhere\n                 // (see https://github.com/rust-lang/rust/pull/73566#issuecomment-656954425),\n                 // so type-check everything other than function bodies in this crate before running lints.\n@@ -543,9 +559,8 @@ fn run_global_ctxt(tcx: TyCtxt<'_>, resolver: Rc<RefCell<interface::BoxedResolve\n                             rustc_lint::builtin::MISSING_CRATE_LEVEL_DOCS,\n                             ctxt.as_local_hir_id(m.def_id).unwrap(),\n                             |lint| {\n-                                let mut diag = lint.build(\n-                                    \"no documentation found for this crate's top-level module\",\n-                                );\n+                    let mut diag =\n+                        lint.build(\"no documentation found for this crate's top-level module\");\n                                 diag.help(help);\n                                 diag.emit();\n                             },\n@@ -554,10 +569,8 @@ fn run_global_ctxt(tcx: TyCtxt<'_>, resolver: Rc<RefCell<interface::BoxedResolve\n                 }\n \n                 fn report_deprecated_attr(name: &str, diag: &rustc_errors::Handler) {\n-                    let mut msg = diag.struct_warn(&format!(\n-                        \"the `#![doc({})]` attribute is considered deprecated\",\n-                        name\n-                    ));\n+        let mut msg = diag\n+            .struct_warn(&format!(\"the `#![doc({})]` attribute is considered deprecated\", name));\n                     msg.warn(\n                         \"see issue #44136 <https://github.com/rust-lang/rust/issues/44136> \\\n                          for more information\","}]}