{"sha": "d9e64301856354cc22aaf5b92bfc6ac8b1beb50e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZTY0MzAxODU2MzU0Y2MyMmFhZjViOTJiZmM2YWM4YjFiZWI1MGU=", "commit": {"author": {"name": "Abhishek Chanda", "email": "abhishek.becs@gmail.com", "date": "2016-09-27T00:16:34Z"}, "committer": {"name": "Abhishek Chanda", "email": "abhishek.becs@gmail.com", "date": "2016-10-04T04:12:37Z"}, "message": "Add two functions to check type of SockAddr\n\nThese can be used to determine the type of the underlying IP\naddress", "tree": {"sha": "c5eeab72fbcb01d4d9a6ea4c3d3513cc129366b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5eeab72fbcb01d4d9a6ea4c3d3513cc129366b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9e64301856354cc22aaf5b92bfc6ac8b1beb50e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e64301856354cc22aaf5b92bfc6ac8b1beb50e", "html_url": "https://github.com/rust-lang/rust/commit/d9e64301856354cc22aaf5b92bfc6ac8b1beb50e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9e64301856354cc22aaf5b92bfc6ac8b1beb50e/comments", "author": {"login": "achanda", "id": 2165463, "node_id": "MDQ6VXNlcjIxNjU0NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2165463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achanda", "html_url": "https://github.com/achanda", "followers_url": "https://api.github.com/users/achanda/followers", "following_url": "https://api.github.com/users/achanda/following{/other_user}", "gists_url": "https://api.github.com/users/achanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/achanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achanda/subscriptions", "organizations_url": "https://api.github.com/users/achanda/orgs", "repos_url": "https://api.github.com/users/achanda/repos", "events_url": "https://api.github.com/users/achanda/events{/privacy}", "received_events_url": "https://api.github.com/users/achanda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "achanda", "id": 2165463, "node_id": "MDQ6VXNlcjIxNjU0NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2165463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achanda", "html_url": "https://github.com/achanda", "followers_url": "https://api.github.com/users/achanda/followers", "following_url": "https://api.github.com/users/achanda/following{/other_user}", "gists_url": "https://api.github.com/users/achanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/achanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achanda/subscriptions", "organizations_url": "https://api.github.com/users/achanda/orgs", "repos_url": "https://api.github.com/users/achanda/repos", "events_url": "https://api.github.com/users/achanda/events{/privacy}", "received_events_url": "https://api.github.com/users/achanda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2769285ad6d078c9a4499ad9e11278e4b78023c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2769285ad6d078c9a4499ad9e11278e4b78023c", "html_url": "https://github.com/rust-lang/rust/commit/c2769285ad6d078c9a4499ad9e11278e4b78023c"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "3fa917cbf9e19bd4c6ac516cb863a27e5dabf692", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d9e64301856354cc22aaf5b92bfc6ac8b1beb50e/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e64301856354cc22aaf5b92bfc6ac8b1beb50e/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=d9e64301856354cc22aaf5b92bfc6ac8b1beb50e", "patch": "@@ -93,6 +93,26 @@ impl SocketAddr {\n             SocketAddr::V6(ref mut a) => a.set_port(new_port),\n         }\n     }\n+\n+    /// Returns true if the IP in this `SocketAddr` is a valid IPv4 address,\n+    /// false if it's a valid IPv6 address.\n+    #[unstable(feature = \"sockaddr_checker\", issue = \"36949\")]\n+    pub fn is_ipv4(&self) -> bool {\n+        match *self {\n+            SocketAddr::V4(_) => true,\n+            SocketAddr::V6(_) => false,\n+        }\n+    }\n+\n+    /// Returns true if the IP in this `SocketAddr` is a valid IPv6 address,\n+    /// false if it's a valid IPv4 address.\n+    #[unstable(feature = \"sockaddr_checker\", issue = \"36949\")]\n+    pub fn is_ipv6(&self) -> bool {\n+        match *self {\n+            SocketAddr::V4(_) => false,\n+            SocketAddr::V6(_) => true,\n+        }\n+    }\n }\n \n impl SocketAddrV4 {\n@@ -631,4 +651,19 @@ mod tests {\n         v6.set_scope_id(20);\n         assert_eq!(v6.scope_id(), 20);\n     }\n+\n+    #[test]\n+    fn is_v4() {\n+        let v4 = SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(77, 88, 21, 11), 80));\n+        assert!(v4.is_ipv4());\n+        assert!(!v4.is_ipv6());\n+    }\n+\n+    #[test]\n+    fn is_v6() {\n+        let v6 = SocketAddr::V6(SocketAddrV6::new(\n+                Ipv6Addr::new(0x2a02, 0x6b8, 0, 1, 0, 0, 0, 1), 80, 10, 0));\n+        assert!(!v6.is_ipv4());\n+        assert!(v6.is_ipv6());\n+    }\n }"}]}