{"sha": "46ed39ec200a3bd0e402c994203a9d67d62b0c6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZWQzOWVjMjAwYTNiZDBlNDAyYzk5NDIwM2E5ZDY3ZDYyYjBjNmM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-17T12:43:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-07-20T11:30:49Z"}, "message": "adjust for PointerOutOfBounds change", "tree": {"sha": "995d1563ae2f3506b8ab5864a9b3bfbcf06e9130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/995d1563ae2f3506b8ab5864a9b3bfbcf06e9130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46ed39ec200a3bd0e402c994203a9d67d62b0c6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46ed39ec200a3bd0e402c994203a9d67d62b0c6c", "html_url": "https://github.com/rust-lang/rust/commit/46ed39ec200a3bd0e402c994203a9d67d62b0c6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46ed39ec200a3bd0e402c994203a9d67d62b0c6c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37974e617e22f46d14f1e2bd5ffde077cc3fd86c", "url": "https://api.github.com/repos/rust-lang/rust/commits/37974e617e22f46d14f1e2bd5ffde077cc3fd86c", "html_url": "https://github.com/rust-lang/rust/commit/37974e617e22f46d14f1e2bd5ffde077cc3fd86c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e04de65ac3fd58b245e51bd603c9af1bfa69479e", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/46ed39ec200a3bd0e402c994203a9d67d62b0c6c/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46ed39ec200a3bd0e402c994203a9d67d62b0c6c/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=46ed39ec200a3bd0e402c994203a9d67d62b0c6c", "patch": "@@ -623,14 +623,14 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let orig_tag = ptr.provenance.sb;\n \n         // Ensure we bail out if the pointer goes out-of-bounds (see miri#1050).\n-        let (allocation_size, _) =\n+        let (alloc_size, _) =\n             this.memory.get_size_and_align(alloc_id, AllocCheck::Dereferenceable)?;\n-        if base_offset + size > allocation_size {\n+        if base_offset + size > alloc_size {\n             throw_ub!(PointerOutOfBounds {\n                 alloc_id,\n-                offset: base_offset,\n-                size,\n-                allocation_size,\n+                alloc_size,\n+                ptr_offset: this.machine_usize_to_isize(base_offset.bytes()),\n+                ptr_size: size,\n                 msg: CheckInAllocMsg::InboundsTest\n             });\n         }"}]}