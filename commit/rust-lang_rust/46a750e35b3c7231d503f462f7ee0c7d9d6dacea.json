{"sha": "46a750e35b3c7231d503f462f7ee0c7d9d6dacea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YTc1MGUzNWIzYzcyMzFkNTAzZjQ2MmY3ZWUwYzdkOWQ2ZGFjZWE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-25T21:15:48Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-25T21:15:48Z"}, "message": "Fixup compiler docs\n\nThe sublist was being rendered as a code block because it was indented 4\nspaces.", "tree": {"sha": "a35c9436d849e79f265ce0122dc07293d2242140", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a35c9436d849e79f265ce0122dc07293d2242140"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46a750e35b3c7231d503f462f7ee0c7d9d6dacea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46a750e35b3c7231d503f462f7ee0c7d9d6dacea", "html_url": "https://github.com/rust-lang/rust/commit/46a750e35b3c7231d503f462f7ee0c7d9d6dacea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46a750e35b3c7231d503f462f7ee0c7d9d6dacea/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db79d2f63780613e700cb58b4339c48287555ae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/db79d2f63780613e700cb58b4339c48287555ae0", "html_url": "https://github.com/rust-lang/rust/commit/db79d2f63780613e700cb58b4339c48287555ae0"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "e9528557b3337d9d2e96a41681fe29325e57f68c", "filename": "compiler/rustc_mir/src/transform/coverage/debug.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/46a750e35b3c7231d503f462f7ee0c7d9d6dacea/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46a750e35b3c7231d503f462f7ee0c7d9d6dacea/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fdebug.rs?ref=46a750e35b3c7231d503f462f7ee0c7d9d6dacea", "patch": "@@ -95,18 +95,18 @@\n //!\n //!     Depending on the values and combinations, counters can be labeled by:\n //!\n-//!         * `id` - counter or expression ID (ascending counter IDs, starting at 1, or descending\n-//!           expression IDs, starting at `u32:MAX`)\n-//!         * `block` - the `BasicCoverageBlock` label (for example, `bcb0`) or edge label (for\n-//!           example `bcb0->bcb1`), for counters or expressions assigned to count a\n-//!           `BasicCoverageBlock` or edge. Intermediate expressions (not directly associated with\n-//!           a BCB or edge) will be labeled by their expression ID, unless `operation` is also\n-//!           specified.\n-//!         * `operation` - applied to expressions only, labels include the left-hand-side counter\n-//!           or expression label (lhs operand), the operator (`+` or `-`), and the right-hand-side\n-//!           counter or expression (rhs operand). Expression operand labels are generated\n-//!           recursively, generating labels with nested operations, enclosed in parentheses\n-//!           (for example: `bcb2 + (bcb0 - bcb1)`).\n+//!       * `id` - counter or expression ID (ascending counter IDs, starting at 1, or descending\n+//!         expression IDs, starting at `u32:MAX`)\n+//!       * `block` - the `BasicCoverageBlock` label (for example, `bcb0`) or edge label (for\n+//!         example `bcb0->bcb1`), for counters or expressions assigned to count a\n+//!         `BasicCoverageBlock` or edge. Intermediate expressions (not directly associated with\n+//!         a BCB or edge) will be labeled by their expression ID, unless `operation` is also\n+//!         specified.\n+//!       * `operation` - applied to expressions only, labels include the left-hand-side counter\n+//!         or expression label (lhs operand), the operator (`+` or `-`), and the right-hand-side\n+//!         counter or expression (rhs operand). Expression operand labels are generated\n+//!         recursively, generating labels with nested operations, enclosed in parentheses\n+//!         (for example: `bcb2 + (bcb0 - bcb1)`).\n \n use super::graph::{BasicCoverageBlock, BasicCoverageBlockData, CoverageGraph};\n use super::spans::CoverageSpan;"}]}