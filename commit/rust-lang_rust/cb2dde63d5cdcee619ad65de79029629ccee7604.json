{"sha": "cb2dde63d5cdcee619ad65de79029629ccee7604", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMmRkZTYzZDVjZGNlZTYxOWFkNjVkZTc5MDI5NjI5Y2NlZTc2MDQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-03-24T07:32:52Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-03-24T11:00:10Z"}, "message": "Rollup merge of #59328 - koalatux:iter-nth-back, r=scottmcm\n\nImplement specialized nth_back() for Box and Windows.\n\nHi there, this is my first pull request to rust :-)\n\nI started implementing some specializations for DoubleEndedIterator::nth_back() and these are the first two. The problem has been discussed in #54054 and nth_back() is tracked in #56995.\n\nI'm stuck with the next implementation so I though I do a PR for the ones I'm confident with to get some feedback.", "tree": {"sha": "8872664023450cea7a751b0f445e63e2b60379d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8872664023450cea7a751b0f445e63e2b60379d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb2dde63d5cdcee619ad65de79029629ccee7604", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlyXYzsACgkQ/vbIBR0O\nATw4/BAAu1Kha1TJLvbv6/YQuZySbbFftjef+DDA0INxcn1VbrGDWMKR/rsJbxu0\n4X5Vysup+rKx3I41ay+oFY3B92D/+G8SPyy5g1jB2UOdOFE7Zkp+rR+EuLZBKEnr\n8nJkFxiddfx4itdTiLYZuvsrCiKjR2Z+1Oav/TlsDkAl2pDZwRWv/3pYCeIgd8KX\n5tSIVEsdBRamXrzjy4vJA7IiPSm/mmQ7ezKTUBEjRzc/smkWFsxY3dZbl32uJwuG\nJH34g3lbqLSQrrChFVeqDwh0xFBOCOVI6YGTxfgHsQu76/pxK4PMGBkQcoQmCytj\nD1J7l8v4xb3CtOeUJioDKePySIyhB44K22xfcu4KDdNFxgSk5/O1JTLjY4EX9hyy\n7h6Bd401gjkabggAczSfcYf1TKIss1WE7urlgqi/Kf0oRhACD47uStLhf6/DGXxh\nIaGWbudK/JHi3KlRK0qlTYyx+V5v6gqzynNcdSZMXNSks1TMa5n/xiEQHeiRvDYn\nSY+yXAzoEfsBYLucaHrgvEtaWocKqgr0zWeC0FG1UaxIOoyeyrnBNTsSQuQM4Cw0\ndpchwN5joK+hcBkbLr0n9APDekP6y1fDFsLaTUIqqS8Rx3dXk+VERNPWwjFnCrw0\n6wVxWJNVnVW4HEmxVI/tN84sFTZz7+NbE0uWIZsFXX7ugzIwkns=\n=G85v\n-----END PGP SIGNATURE-----", "payload": "tree 8872664023450cea7a751b0f445e63e2b60379d2\nparent 1d286f7918307f1b2bfa9a157070cc99c0465f30\nparent 739ba0417ae6477ffc9c5e8298b5075725d52420\nauthor kennytm <kennytm@gmail.com> 1553412772 +0800\ncommitter kennytm <kennytm@gmail.com> 1553425210 +0800\n\nRollup merge of #59328 - koalatux:iter-nth-back, r=scottmcm\n\nImplement specialized nth_back() for Box and Windows.\n\nHi there, this is my first pull request to rust :-)\n\nI started implementing some specializations for DoubleEndedIterator::nth_back() and these are the first two. The problem has been discussed in #54054 and nth_back() is tracked in #56995.\n\nI'm stuck with the next implementation so I though I do a PR for the ones I'm confident with to get some feedback.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2dde63d5cdcee619ad65de79029629ccee7604", "html_url": "https://github.com/rust-lang/rust/commit/cb2dde63d5cdcee619ad65de79029629ccee7604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb2dde63d5cdcee619ad65de79029629ccee7604/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d286f7918307f1b2bfa9a157070cc99c0465f30", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d286f7918307f1b2bfa9a157070cc99c0465f30", "html_url": "https://github.com/rust-lang/rust/commit/1d286f7918307f1b2bfa9a157070cc99c0465f30"}, {"sha": "739ba0417ae6477ffc9c5e8298b5075725d52420", "url": "https://api.github.com/repos/rust-lang/rust/commits/739ba0417ae6477ffc9c5e8298b5075725d52420", "html_url": "https://github.com/rust-lang/rust/commit/739ba0417ae6477ffc9c5e8298b5075725d52420"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "b2315c6a7390795bd3a71bc957e8f9014b637dde", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=cb2dde63d5cdcee619ad65de79029629ccee7604", "patch": "@@ -677,6 +677,9 @@ impl<I: DoubleEndedIterator + ?Sized> DoubleEndedIterator for Box<I> {\n     fn next_back(&mut self) -> Option<I::Item> {\n         (**self).next_back()\n     }\n+    fn nth_back(&mut self, n: usize) -> Option<I::Item> {\n+        (**self).nth_back(n)\n+    }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<I: ExactSizeIterator + ?Sized> ExactSizeIterator for Box<I> {"}, {"sha": "90ff56814fbb153b97dd4452dd53aee29bccfc27", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=cb2dde63d5cdcee619ad65de79029629ccee7604", "patch": "@@ -115,6 +115,7 @@\n #![feature(maybe_uninit, maybe_uninit_slice, maybe_uninit_array)]\n #![feature(alloc_layout_extra)]\n #![feature(try_trait)]\n+#![feature(iter_nth_back)]\n \n // Allow testing this library\n "}, {"sha": "4eb5bddb5d2f469d7bb74ae410facfe7907dca8c", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=cb2dde63d5cdcee619ad65de79029629ccee7604", "patch": "@@ -3867,6 +3867,19 @@ impl<'a, T> DoubleEndedIterator for Windows<'a, T> {\n             ret\n         }\n     }\n+\n+    #[inline]\n+    fn nth_back(&mut self, n: usize) -> Option<Self::Item> {\n+        let (end, overflow) = self.v.len().overflowing_sub(n);\n+        if end < self.size || overflow {\n+            self.v = &[];\n+            None\n+        } else {\n+            let ret = &self.v[end-self.size..end];\n+            self.v = &self.v[..end-1];\n+            Some(ret)\n+        }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "4946fd52a7e12d7c914e842d1f6cd45347753355", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2dde63d5cdcee619ad65de79029629ccee7604/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=cb2dde63d5cdcee619ad65de79029629ccee7604", "patch": "@@ -578,6 +578,19 @@ fn test_windows_nth() {\n     assert_eq!(c2.next(), None);\n }\n \n+#[test]\n+fn test_windows_nth_back() {\n+    let v: &[i32] = &[0, 1, 2, 3, 4, 5];\n+    let mut c = v.windows(2);\n+    assert_eq!(c.nth_back(2).unwrap()[0], 2);\n+    assert_eq!(c.next_back().unwrap()[1], 2);\n+\n+    let v2: &[i32] = &[0, 1, 2, 3, 4];\n+    let mut c2 = v2.windows(4);\n+    assert_eq!(c2.nth_back(1).unwrap()[1], 1);\n+    assert_eq!(c2.next_back(), None);\n+}\n+\n #[test]\n fn test_windows_last() {\n     let v: &[i32] = &[0, 1, 2, 3, 4, 5];"}]}