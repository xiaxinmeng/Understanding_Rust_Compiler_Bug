{"sha": "291bd81e74742472572c88ccf3d2cf9cf70af6b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MWJkODFlNzQ3NDI0NzI1NzJjODhjY2YzZDJjZjljZjcwYWY2YjI=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-02T18:56:27Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-02T18:56:27Z"}, "message": "Relax trait solving more for completion", "tree": {"sha": "8ff6738a892419c8480fcd572b091eb4a4f8b811", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ff6738a892419c8480fcd572b091eb4a4f8b811"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/291bd81e74742472572c88ccf3d2cf9cf70af6b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/291bd81e74742472572c88ccf3d2cf9cf70af6b2", "html_url": "https://github.com/rust-lang/rust/commit/291bd81e74742472572c88ccf3d2cf9cf70af6b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/291bd81e74742472572c88ccf3d2cf9cf70af6b2/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab7774545cb5e45064c907429417bdee8d89f4d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7774545cb5e45064c907429417bdee8d89f4d4", "html_url": "https://github.com/rust-lang/rust/commit/ab7774545cb5e45064c907429417bdee8d89f4d4"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "aa625a01364ef2f0bc5d0d0fae63c09b3c576631", "filename": "crates/ra_hir/src/ty/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/291bd81e74742472572c88ccf3d2cf9cf70af6b2/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/291bd81e74742472572c88ccf3d2cf9cf70af6b2/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs?ref=291bd81e74742472572c88ccf3d2cf9cf70af6b2", "patch": "@@ -266,13 +266,7 @@ pub(crate) fn implements_trait(\n     let goal = generic_implements_goal(db, env.clone(), trait_, ty.clone());\n     let solution = db.trait_solve(krate, goal);\n \n-    if let Some(solution) = solution {\n-        if let Solution::Unique(_) = solution {\n-            return true;\n-        }\n-    }\n-\n-    false\n+    solution.is_some()\n }\n \n impl Ty {"}]}