{"sha": "a48d2e178385a031eb4875deb09d728344d2912f", "node_id": "C_kwDOAAsO6NoAKGE0OGQyZTE3ODM4NWEwMzFlYjQ4NzVkZWIwOWQ3MjgzNDRkMjkxMmY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-23T14:49:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-23T14:49:23Z"}, "message": "fix one more unaligned self.ptr, and add tests", "tree": {"sha": "c64cf0ad3c1706109fd365268653663dc300b3d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c64cf0ad3c1706109fd365268653663dc300b3d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a48d2e178385a031eb4875deb09d728344d2912f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a48d2e178385a031eb4875deb09d728344d2912f", "html_url": "https://github.com/rust-lang/rust/commit/a48d2e178385a031eb4875deb09d728344d2912f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a48d2e178385a031eb4875deb09d728344d2912f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0f404d77a4efefa132346c507738d9a5c6e69b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f404d77a4efefa132346c507738d9a5c6e69b4", "html_url": "https://github.com/rust-lang/rust/commit/d0f404d77a4efefa132346c507738d9a5c6e69b4"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "b207b3210f1aa22ae6edcf989ab68b7f5b14bff1", "filename": "library/alloc/src/vec/into_iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a48d2e178385a031eb4875deb09d728344d2912f/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a48d2e178385a031eb4875deb09d728344d2912f/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs?ref=a48d2e178385a031eb4875deb09d728344d2912f", "patch": "@@ -251,7 +251,7 @@ impl<T, A: Allocator> Iterator for IntoIter<T, A> {\n                 return Err(unsafe { array::IntoIter::new_unchecked(raw_ary, 0..len) });\n             }\n \n-            self.ptr = self.ptr.wrapping_byte_add(N);\n+            self.end = self.end.wrapping_byte_sub(N);\n             // Safety: ditto\n             return Ok(unsafe { raw_ary.transpose().assume_init() });\n         }"}, {"sha": "fb1d8e306f293acd0eba42a2b31ddb09eda476bb", "filename": "src/tools/miri/tests/pass/vec.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a48d2e178385a031eb4875deb09d728344d2912f/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a48d2e178385a031eb4875deb09d728344d2912f/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fvec.rs?ref=a48d2e178385a031eb4875deb09d728344d2912f", "patch": "@@ -1,4 +1,6 @@\n //@compile-flags: -Zmiri-strict-provenance\n+#![feature(iter_advance_by, iter_next_chunk)]\n+\n // Gather all references from a mutable iterator and make sure Miri notices if\n // using them is dangerous.\n fn test_all_refs<'a, T: 'a>(dummy: &mut T, iter: impl Iterator<Item = &'a mut T>) {\n@@ -44,6 +46,18 @@ fn vec_into_iter_zst() {\n     for _ in vec![[0u64; 0]].into_iter() {}\n     let v = vec![[0u64; 0], [0u64; 0]].into_iter().map(|x| x.len()).sum::<usize>();\n     assert_eq!(v, 0);\n+\n+    let mut it = vec![[0u64; 0], [0u64; 0]].into_iter();\n+    it.advance_by(1);\n+    drop(it);\n+\n+    let mut it = vec![[0u64; 0], [0u64; 0]].into_iter();\n+    it.next_chunk::<1>().unwrap();\n+    drop(it);\n+\n+    let mut it = vec![[0u64; 0], [0u64; 0]].into_iter();\n+    it.next_chunk::<4>().unwrap_err();\n+    drop(it);\n }\n \n fn vec_into_iter_rev_zst() {"}]}