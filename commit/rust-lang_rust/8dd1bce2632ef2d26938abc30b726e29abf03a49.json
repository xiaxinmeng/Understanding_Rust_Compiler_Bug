{"sha": "8dd1bce2632ef2d26938abc30b726e29abf03a49", "node_id": "C_kwDOAAsO6NoAKDhkZDFiY2UyNjMyZWYyZDI2OTM4YWJjMzBiNzI2ZTI5YWJmMDNhNDk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-18T11:31:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-18T11:31:49Z"}, "message": "Auto merge of #7994 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: none", "tree": {"sha": "c2f22a9d04263f51c75ac1dd0e55a0a5d4d1278c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2f22a9d04263f51c75ac1dd0e55a0a5d4d1278c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dd1bce2632ef2d26938abc30b726e29abf03a49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dd1bce2632ef2d26938abc30b726e29abf03a49", "html_url": "https://github.com/rust-lang/rust/commit/8dd1bce2632ef2d26938abc30b726e29abf03a49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dd1bce2632ef2d26938abc30b726e29abf03a49/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8536647e61fec74f0aab68bb3bdced2eca9806fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8536647e61fec74f0aab68bb3bdced2eca9806fd", "html_url": "https://github.com/rust-lang/rust/commit/8536647e61fec74f0aab68bb3bdced2eca9806fd"}, {"sha": "4bccd59a69666ec68a0f72ceee7d51d3984b806f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bccd59a69666ec68a0f72ceee7d51d3984b806f", "html_url": "https://github.com/rust-lang/rust/commit/4bccd59a69666ec68a0f72ceee7d51d3984b806f"}], "stats": {"total": 401, "additions": 262, "deletions": 139}, "files": [{"sha": "c1ce851a67d7e07dd48ef753b430bbb3649b81c5", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -5,7 +5,7 @@ use clippy_utils::ty::{implements_trait, is_type_diagnostic_item};\n use clippy_utils::{is_entrypoint_fn, is_expn_of, match_panic_def_id, method_chain_args, return_ty};\n use if_chain::if_chain;\n use itertools::Itertools;\n-use rustc_ast::ast::{Async, AttrKind, Attribute, FnKind, FnRetTy, ItemKind};\n+use rustc_ast::ast::{Async, AttrKind, Attribute, Fn, FnRetTy, ItemKind};\n use rustc_ast::token::CommentKind;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n@@ -644,7 +644,9 @@ fn check_code(cx: &LateContext<'_>, text: &str, edition: Edition, span: Span) {\n                             | ItemKind::ExternCrate(..)\n                             | ItemKind::ForeignMod(..) => return false,\n                             // We found a main function ...\n-                            ItemKind::Fn(box FnKind(_, sig, _, Some(block))) if item.ident.name == sym::main => {\n+                            ItemKind::Fn(box Fn {\n+                                sig, body: Some(block), ..\n+                            }) if item.ident.name == sym::main => {\n                                 let is_async = matches!(sig.header.asyncness, Async::Yes { .. });\n                                 let returns_nothing = match &sig.decl.output {\n                                     FnRetTy::Default(..) => true,"}, {"sha": "245a4fc12fd4c04c6e305e83103fcc43bbbc0af9", "filename": "clippy_lints/src/excessive_bools.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_bools.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n-use rustc_ast::ast::{AssocItemKind, Extern, FnKind, FnSig, ImplKind, Item, ItemKind, TraitKind, Ty, TyKind};\n+use rustc_ast::ast::{AssocItemKind, Extern, Fn, FnSig, Impl, Item, ItemKind, Trait, Ty, TyKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{sym, Span};\n@@ -163,17 +163,17 @@ impl EarlyLintPass for ExcessiveBools {\n                     );\n                 }\n             },\n-            ItemKind::Impl(box ImplKind {\n+            ItemKind::Impl(box Impl {\n                 of_trait: None, items, ..\n             })\n-            | ItemKind::Trait(box TraitKind(.., items)) => {\n+            | ItemKind::Trait(box Trait { items, .. }) => {\n                 for item in items {\n-                    if let AssocItemKind::Fn(box FnKind(_, fn_sig, _, _)) = &item.kind {\n-                        self.check_fn_sig(cx, fn_sig, item.span);\n+                    if let AssocItemKind::Fn(box Fn { sig, .. }) = &item.kind {\n+                        self.check_fn_sig(cx, sig, item.span);\n                     }\n                 }\n             },\n-            ItemKind::Fn(box FnKind(_, fn_sig, _, _)) => self.check_fn_sig(cx, fn_sig, item.span),\n+            ItemKind::Fn(box Fn { sig, .. }) => self.check_fn_sig(cx, sig, item.span),\n             _ => (),\n         }\n     }"}, {"sha": "fefdcfed42f5465fd1235a96a46596368e0b6194", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -78,13 +78,13 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n             if is_future {\n                 let send_trait = cx.tcx.get_diagnostic_item(sym::Send).unwrap();\n                 let span = decl.output.span();\n-                let send_result = cx.tcx.infer_ctxt().enter(|infcx| {\n+                let send_errors = cx.tcx.infer_ctxt().enter(|infcx| {\n                     let cause = traits::ObligationCause::misc(span, hir_id);\n                     let mut fulfillment_cx = traits::FulfillmentContext::new();\n                     fulfillment_cx.register_bound(&infcx, cx.param_env, ret_ty, send_trait, cause);\n                     fulfillment_cx.select_all_or_error(&infcx)\n                 });\n-                if let Err(send_errors) = send_result {\n+                if !send_errors.is_empty() {\n                     span_lint_and_then(\n                         cx,\n                         FUTURE_NOT_SEND,"}, {"sha": "2445a0aeed08a054a3d58494ea294ae7eabfb1f6", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -2,7 +2,6 @@\n \n #![feature(box_patterns)]\n #![feature(drain_filter)]\n-#![feature(format_args_capture)]\n #![feature(in_band_lifetimes)]\n #![feature(iter_zip)]\n #![feature(once_cell)]"}, {"sha": "08c23ca6d32bb00c58c68c44fdf260911c12362a", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1073,7 +1073,10 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n                 PatKind::Path(path) => {\n                     #[allow(clippy::match_same_arms)]\n                     let id = match cx.qpath_res(path, pat.hir_id) {\n-                        Res::Def(DefKind::Const | DefKind::ConstParam | DefKind::AnonConst, _) => return,\n+                        Res::Def(\n+                            DefKind::Const | DefKind::ConstParam | DefKind::AnonConst | DefKind::InlineConst,\n+                            _,\n+                        ) => return,\n                         Res::Def(_, id) => id,\n                         _ => return,\n                     };"}, {"sha": "5559fac0a8a1e7954e45d84e2809864ccd701f9f", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::{span_lint, span_lint_and_then};\n use rustc_ast::ast::{\n-    Arm, AssocItem, AssocItemKind, Attribute, Block, FnDecl, FnKind, Item, ItemKind, Local, Pat, PatKind,\n+    self, Arm, AssocItem, AssocItemKind, Attribute, Block, FnDecl, Item, ItemKind, Local, Pat, PatKind,\n };\n use rustc_ast::visit::{walk_block, walk_expr, walk_pat, Visitor};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n@@ -360,7 +360,12 @@ impl EarlyLintPass for NonExpressiveNames {\n             return;\n         }\n \n-        if let ItemKind::Fn(box FnKind(_, ref sig, _, Some(ref blk))) = item.kind {\n+        if let ItemKind::Fn(box ast::Fn {\n+            ref sig,\n+            body: Some(ref blk),\n+            ..\n+        }) = item.kind\n+        {\n             do_check(self, cx, &item.attrs, &sig.decl, blk);\n         }\n     }\n@@ -370,7 +375,12 @@ impl EarlyLintPass for NonExpressiveNames {\n             return;\n         }\n \n-        if let AssocItemKind::Fn(box FnKind(_, ref sig, _, Some(ref blk))) = item.kind {\n+        if let AssocItemKind::Fn(box ast::Fn {\n+            ref sig,\n+            body: Some(ref blk),\n+            ..\n+        }) = item.kind\n+        {\n             do_check(self, cx, &item.attrs, &sig.decl, blk);\n         }\n     }"}, {"sha": "bfa9407285b54ae07f3d1240c593605857e6fbeb", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -4,7 +4,7 @@ use std::ops::{Deref, Range};\n \n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::{snippet_opt, snippet_with_applicability};\n-use rustc_ast::ast::{Expr, ExprKind, ImplKind, Item, ItemKind, MacCall, Path, StrLit, StrStyle};\n+use rustc_ast::ast::{Expr, ExprKind, Impl, Item, ItemKind, MacCall, Path, StrLit, StrStyle};\n use rustc_ast::token::{self, LitKind};\n use rustc_ast::tokenstream::TokenStream;\n use rustc_errors::Applicability;\n@@ -252,7 +252,7 @@ impl_lint_pass!(Write => [\n \n impl EarlyLintPass for Write {\n     fn check_item(&mut self, _: &EarlyContext<'_>, item: &Item) {\n-        if let ItemKind::Impl(box ImplKind {\n+        if let ItemKind::Impl(box Impl {\n             of_trait: Some(trait_ref),\n             ..\n         }) = &item.kind"}, {"sha": "8400bfbbd99d2550d09021754a61ffc8e4cf5f9b", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 103, "deletions": 9, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -243,14 +243,28 @@ pub fn eq_item<K>(l: &Item<K>, r: &Item<K>, mut eq_kind: impl FnMut(&K, &K) -> b\n     eq_id(l.ident, r.ident) && over(&l.attrs, &r.attrs, eq_attr) && eq_vis(&l.vis, &r.vis) && eq_kind(&l.kind, &r.kind)\n }\n \n+#[allow(clippy::too_many_lines)] // Just a big match statement\n pub fn eq_item_kind(l: &ItemKind, r: &ItemKind) -> bool {\n     use ItemKind::*;\n     match (l, r) {\n         (ExternCrate(l), ExternCrate(r)) => l == r,\n         (Use(l), Use(r)) => eq_use_tree(l, r),\n         (Static(lt, lm, le), Static(rt, rm, re)) => lm == rm && eq_ty(lt, rt) && eq_expr_opt(le, re),\n         (Const(ld, lt, le), Const(rd, rt, re)) => eq_defaultness(*ld, *rd) && eq_ty(lt, rt) && eq_expr_opt(le, re),\n-        (Fn(box FnKind(ld, lf, lg, lb)), Fn(box FnKind(rd, rf, rg, rb))) => {\n+        (\n+            Fn(box ast::Fn {\n+                defaultness: ld,\n+                sig: lf,\n+                generics: lg,\n+                body: lb,\n+            }),\n+            Fn(box ast::Fn {\n+                defaultness: rd,\n+                sig: rf,\n+                generics: rg,\n+                body: rb,\n+            }),\n+        ) => {\n             eq_defaultness(*ld, *rd) && eq_fn_sig(lf, rf) && eq_generics(lg, rg) && both(lb, rb, |l, r| eq_block(l, r))\n         },\n         (Mod(lu, lmk), Mod(ru, rmk)) => {\n@@ -266,7 +280,20 @@ pub fn eq_item_kind(l: &ItemKind, r: &ItemKind) -> bool {\n         (ForeignMod(l), ForeignMod(r)) => {\n             both(&l.abi, &r.abi, eq_str_lit) && over(&l.items, &r.items, |l, r| eq_item(l, r, eq_foreign_item_kind))\n         },\n-        (TyAlias(box TyAliasKind(ld, lg, lb, lt)), TyAlias(box TyAliasKind(rd, rg, rb, rt))) => {\n+        (\n+            TyAlias(box ast::TyAlias {\n+                defaultness: ld,\n+                generics: lg,\n+                bounds: lb,\n+                ty: lt,\n+            }),\n+            TyAlias(box ast::TyAlias {\n+                defaultness: rd,\n+                generics: rg,\n+                bounds: rb,\n+                ty: rt,\n+            }),\n+        ) => {\n             eq_defaultness(*ld, *rd)\n                 && eq_generics(lg, rg)\n                 && over(lb, rb, eq_generic_bound)\n@@ -276,7 +303,22 @@ pub fn eq_item_kind(l: &ItemKind, r: &ItemKind) -> bool {\n         (Struct(lv, lg), Struct(rv, rg)) | (Union(lv, lg), Union(rv, rg)) => {\n             eq_variant_data(lv, rv) && eq_generics(lg, rg)\n         },\n-        (Trait(box TraitKind(la, lu, lg, lb, li)), Trait(box TraitKind(ra, ru, rg, rb, ri))) => {\n+        (\n+            Trait(box ast::Trait {\n+                is_auto: la,\n+                unsafety: lu,\n+                generics: lg,\n+                bounds: lb,\n+                items: li,\n+            }),\n+            Trait(box ast::Trait {\n+                is_auto: ra,\n+                unsafety: ru,\n+                generics: rg,\n+                bounds: rb,\n+                items: ri,\n+            }),\n+        ) => {\n             la == ra\n                 && matches!(lu, Unsafe::No) == matches!(ru, Unsafe::No)\n                 && eq_generics(lg, rg)\n@@ -285,7 +327,7 @@ pub fn eq_item_kind(l: &ItemKind, r: &ItemKind) -> bool {\n         },\n         (TraitAlias(lg, lb), TraitAlias(rg, rb)) => eq_generics(lg, rg) && over(lb, rb, eq_generic_bound),\n         (\n-            Impl(box ImplKind {\n+            Impl(box ast::Impl {\n                 unsafety: lu,\n                 polarity: lp,\n                 defaultness: ld,\n@@ -295,7 +337,7 @@ pub fn eq_item_kind(l: &ItemKind, r: &ItemKind) -> bool {\n                 self_ty: lst,\n                 items: li,\n             }),\n-            Impl(box ImplKind {\n+            Impl(box ast::Impl {\n                 unsafety: ru,\n                 polarity: rp,\n                 defaultness: rd,\n@@ -325,10 +367,36 @@ pub fn eq_foreign_item_kind(l: &ForeignItemKind, r: &ForeignItemKind) -> bool {\n     use ForeignItemKind::*;\n     match (l, r) {\n         (Static(lt, lm, le), Static(rt, rm, re)) => lm == rm && eq_ty(lt, rt) && eq_expr_opt(le, re),\n-        (Fn(box FnKind(ld, lf, lg, lb)), Fn(box FnKind(rd, rf, rg, rb))) => {\n+        (\n+            Fn(box ast::Fn {\n+                defaultness: ld,\n+                sig: lf,\n+                generics: lg,\n+                body: lb,\n+            }),\n+            Fn(box ast::Fn {\n+                defaultness: rd,\n+                sig: rf,\n+                generics: rg,\n+                body: rb,\n+            }),\n+        ) => {\n             eq_defaultness(*ld, *rd) && eq_fn_sig(lf, rf) && eq_generics(lg, rg) && both(lb, rb, |l, r| eq_block(l, r))\n         },\n-        (TyAlias(box TyAliasKind(ld, lg, lb, lt)), TyAlias(box TyAliasKind(rd, rg, rb, rt))) => {\n+        (\n+            TyAlias(box ast::TyAlias {\n+                defaultness: ld,\n+                generics: lg,\n+                bounds: lb,\n+                ty: lt,\n+            }),\n+            TyAlias(box ast::TyAlias {\n+                defaultness: rd,\n+                generics: rg,\n+                bounds: rb,\n+                ty: rt,\n+            }),\n+        ) => {\n             eq_defaultness(*ld, *rd)\n                 && eq_generics(lg, rg)\n                 && over(lb, rb, eq_generic_bound)\n@@ -343,10 +411,36 @@ pub fn eq_assoc_item_kind(l: &AssocItemKind, r: &AssocItemKind) -> bool {\n     use AssocItemKind::*;\n     match (l, r) {\n         (Const(ld, lt, le), Const(rd, rt, re)) => eq_defaultness(*ld, *rd) && eq_ty(lt, rt) && eq_expr_opt(le, re),\n-        (Fn(box FnKind(ld, lf, lg, lb)), Fn(box FnKind(rd, rf, rg, rb))) => {\n+        (\n+            Fn(box ast::Fn {\n+                defaultness: ld,\n+                sig: lf,\n+                generics: lg,\n+                body: lb,\n+            }),\n+            Fn(box ast::Fn {\n+                defaultness: rd,\n+                sig: rf,\n+                generics: rg,\n+                body: rb,\n+            }),\n+        ) => {\n             eq_defaultness(*ld, *rd) && eq_fn_sig(lf, rf) && eq_generics(lg, rg) && both(lb, rb, |l, r| eq_block(l, r))\n         },\n-        (TyAlias(box TyAliasKind(ld, lg, lb, lt)), TyAlias(box TyAliasKind(rd, rg, rb, rt))) => {\n+        (\n+            TyAlias(box ast::TyAlias {\n+                defaultness: ld,\n+                generics: lg,\n+                bounds: lb,\n+                ty: lt,\n+            }),\n+            TyAlias(box ast::TyAlias {\n+                defaultness: rd,\n+                generics: rg,\n+                bounds: rb,\n+                ty: rt,\n+            }),\n+        ) => {\n             eq_defaultness(*ld, *rd)\n                 && eq_generics(lg, rg)\n                 && over(lb, rb, eq_generic_bound)"}, {"sha": "733cc97c84596546bd0005ab6608749270564f7c", "filename": "clippy_utils/src/higher.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_utils%2Fsrc%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/clippy_utils%2Fsrc%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fhigher.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -3,12 +3,12 @@\n #![deny(clippy::missing_docs_in_private_items)]\n \n use crate::ty::is_type_diagnostic_item;\n-use crate::{is_expn_of, last_path_segment, match_def_path, path_to_local_id, paths};\n+use crate::{is_expn_of, last_path_segment, match_def_path, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::{self, LitKind};\n use rustc_hir as hir;\n use rustc_hir::{\n-    Arm, Block, BorrowKind, Expr, ExprKind, HirId, LoopSource, MatchSource, Node, Pat, PatKind, QPath, StmtKind, UnOp,\n+    Arm, Block, BorrowKind, Expr, ExprKind, HirId, LoopSource, MatchSource, Node, Pat, QPath, StmtKind, UnOp,\n };\n use rustc_lint::LateContext;\n use rustc_span::{sym, symbol, ExpnKind, Span, Symbol};\n@@ -513,8 +513,6 @@ pub struct FormatArgsExpn<'tcx> {\n     pub format_string_parts: &'tcx [Expr<'tcx>],\n     /// Symbols corresponding to [`Self::format_string_parts`]\n     pub format_string_symbols: Vec<Symbol>,\n-    /// Match arm patterns, the `arg0`, etc. from the next field `args`\n-    pub arg_names: &'tcx [Pat<'tcx>],\n     /// Expressions like `ArgumentV1::new(arg0, Debug::fmt)`\n     pub args: &'tcx [Expr<'tcx>],\n     /// The final argument passed to `Arguments::new_v1_formatted`, if applicable\n@@ -559,15 +557,13 @@ impl FormatArgsExpn<'tcx> {\n                     _ => None,\n                 })\n                 .collect();\n-            if let PatKind::Tuple(arg_names, None) = arm.pat.kind;\n             if let ExprKind::Array(args) = arm.body.kind;\n             then {\n                 Some(FormatArgsExpn {\n                     format_string_span: strs_ref.span,\n                     value_args,\n                     format_string_parts,\n                     format_string_symbols,\n-                    arg_names,\n                     args,\n                     fmt_expr,\n                 })\n@@ -594,10 +590,8 @@ impl FormatArgsExpn<'tcx> {\n                             if let Ok(i) = usize::try_from(position);\n                             let arg = &self.args[i];\n                             if let ExprKind::Call(_, [arg_name, _]) = arg.kind;\n-                            if let Some(j) = self\n-                                .arg_names\n-                                .iter()\n-                                .position(|pat| path_to_local_id(arg_name, pat.hir_id));\n+                            if let ExprKind::Field(_, j) = arg_name.kind;\n+                            if let Ok(j) = j.name.as_str().parse::<usize>();\n                             then {\n                                 Some(FormatArgsArg { value: self.value_args[j], arg, fmt: Some(fmt) })\n                             } else {"}, {"sha": "db66cfd9e2765102fe61f53dd27bcce4cf6e6af4", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2021-11-04\"\n+channel = \"nightly-2021-11-18\"\n components = [\"llvm-tools-preview\", \"rustc-dev\", \"rust-src\", \"rustfmt\"]"}, {"sha": "2498672d77fb04526208e6ec42d9eb8f2772156c", "filename": "tests/ui-toml/lint_decimal_readability/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui-toml%2Flint_decimal_readability%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui-toml%2Flint_decimal_readability%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Flint_decimal_readability%2Ftest.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,3 +1,4 @@\n+#![allow(clippy::excessive_precision)]\n #[deny(clippy::unreadable_literal)]\n \n fn allow_inconsistent_digit_grouping() {"}, {"sha": "be505bda4792c757982e7c51566cbe6d672740d2", "filename": "tests/ui-toml/lint_decimal_readability/test.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui-toml%2Flint_decimal_readability%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui-toml%2Flint_decimal_readability%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Flint_decimal_readability%2Ftest.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: digits grouped inconsistently by underscores\n-  --> $DIR/test.rs:18:18\n+  --> $DIR/test.rs:19:18\n    |\n LL |     let _fail1 = 100_200_300.123456789;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider: `100_200_300.123_456_789`"}, {"sha": "9a150c67a21ea583cadad59326c607f33cb8b318", "filename": "tests/ui/deref_addrof.fixed", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fderef_addrof.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fderef_addrof.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.fixed?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -52,12 +52,14 @@ macro_rules! m_mut {\n     };\n }\n \n+#[derive(Copy, Clone)]\n pub struct S;\n impl S {\n     pub fn f(&self) -> &Self {\n         m!(self)\n     }\n-    pub fn f_mut(&self) -> &Self {\n+    #[allow(unused_mut)] // mut will be unused, once the macro is fixed\n+    pub fn f_mut(mut self) -> Self {\n         m_mut!(self)\n     }\n }"}, {"sha": "80ba7e9bd0b8202cbe9202343e3dd227000ff95f", "filename": "tests/ui/deref_addrof.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fderef_addrof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fderef_addrof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderef_addrof.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -52,12 +52,14 @@ macro_rules! m_mut {\n     };\n }\n \n+#[derive(Copy, Clone)]\n pub struct S;\n impl S {\n     pub fn f(&self) -> &Self {\n         m!(self)\n     }\n-    pub fn f_mut(&self) -> &Self {\n+    #[allow(unused_mut)] // mut will be unused, once the macro is fixed\n+    pub fn f_mut(mut self) -> Self {\n         m_mut!(self)\n     }\n }"}, {"sha": "38a8fbd74dcf61b540b16b34a496b9005d5ba800", "filename": "tests/ui/double_neg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fdouble_neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fdouble_neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,4 +1,5 @@\n #[warn(clippy::double_neg)]\n+#[allow(clippy::no_effect)]\n fn main() {\n     let x = 1;\n     -x;"}, {"sha": "7cdb040b6873937266598277e48d240d796c95ca", "filename": "tests/ui/double_neg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fdouble_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fdouble_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: `--x` could be misinterpreted as pre-decrement by C programmers, is usually a no-op\n-  --> $DIR/double_neg.rs:6:5\n+  --> $DIR/double_neg.rs:7:5\n    |\n LL |     --x;\n    |     ^^^"}, {"sha": "1442ee08e7546aa20056ccb5b3f27e894b6c4cb8", "filename": "tests/ui/fn_params_excessive_bools.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Ffn_params_excessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Ffn_params_excessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_params_excessive_bools.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::fn_params_excessive_bools)]\n+#![allow(clippy::too_many_arguments)]\n \n extern \"C\" {\n     fn f(_: bool, _: bool, _: bool, _: bool);"}, {"sha": "cd9d07fa115d6d3bca7d24f8250925cb0a0aa879", "filename": "tests/ui/fn_params_excessive_bools.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Ffn_params_excessive_bools.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Ffn_params_excessive_bools.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_params_excessive_bools.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:17:1\n+  --> $DIR/fn_params_excessive_bools.rs:18:1\n    |\n LL | fn g(_: bool, _: bool, _: bool, _: bool) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,31 +8,31 @@ LL | fn g(_: bool, _: bool, _: bool, _: bool) {}\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:20:1\n+  --> $DIR/fn_params_excessive_bools.rs:21:1\n    |\n LL | fn t(_: S, _: S, _: Box<S>, _: Vec<u32>, _: bool, _: bool, _: bool, _: bool) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:24:5\n+  --> $DIR/fn_params_excessive_bools.rs:25:5\n    |\n LL |     fn f(_: bool, _: bool, _: bool, _: bool);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:29:5\n+  --> $DIR/fn_params_excessive_bools.rs:30:5\n    |\n LL |     fn f(&self, _: bool, _: bool, _: bool, _: bool) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:41:5\n+  --> $DIR/fn_params_excessive_bools.rs:42:5\n    |\n LL | /     fn n(_: bool, _: u32, _: bool, _: Box<u32>, _: bool, _: bool) {\n LL | |         fn nn(_: bool, _: bool, _: bool, _: bool) {}\n@@ -42,7 +42,7 @@ LL | |     }\n    = help: consider refactoring bools into two-variant enums\n \n error: more than 3 bools in function parameters\n-  --> $DIR/fn_params_excessive_bools.rs:42:9\n+  --> $DIR/fn_params_excessive_bools.rs:43:9\n    |\n LL |         fn nn(_: bool, _: bool, _: bool, _: bool) {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "471a8e0de6e193047e17ffa3e4273dce9799ac62", "filename": "tests/ui/formatting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -3,6 +3,7 @@\n #![allow(unused_assignments)]\n #![allow(clippy::if_same_then_else)]\n #![allow(clippy::deref_addrof)]\n+#![allow(clippy::nonminimal_bool)]\n \n fn foo() -> bool {\n     true"}, {"sha": "9272cd6048441790c403e0750193c78fa6c56049", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\n-  --> $DIR/formatting.rs:15:6\n+  --> $DIR/formatting.rs:16:6\n    |\n LL |     a =- 35;\n    |      ^^^^\n@@ -8,23 +8,23 @@ LL |     a =- 35;\n    = note: to remove this lint, use either `-=` or `= -`\n \n error: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`\n-  --> $DIR/formatting.rs:16:6\n+  --> $DIR/formatting.rs:17:6\n    |\n LL |     a =* &191;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `*=` or `= *`\n \n error: this looks like you are trying to use `.. != ..`, but you really are doing `.. = (! ..)`\n-  --> $DIR/formatting.rs:19:6\n+  --> $DIR/formatting.rs:20:6\n    |\n LL |     b =! false;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `!=` or `= !`\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:28:19\n+  --> $DIR/formatting.rs:29:19\n    |\n LL |         -1, -2, -3 // <= no comma here\n    |                   ^\n@@ -33,15 +33,15 @@ LL |         -1, -2, -3 // <= no comma here\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:32:19\n+  --> $DIR/formatting.rs:33:19\n    |\n LL |         -1, -2, -3 // <= no comma here\n    |                   ^\n    |\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:69:11\n+  --> $DIR/formatting.rs:70:11\n    |\n LL |         -1\n    |           ^"}, {"sha": "0cadd5a3da1983e4436d9f946808a84aa45a55b7", "filename": "tests/ui/literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -4,7 +4,7 @@\n #![warn(clippy::zero_prefixed_literal)]\n #![warn(clippy::unseparated_literal_suffix)]\n #![warn(clippy::separated_literal_suffix)]\n-#![allow(dead_code)]\n+#![allow(dead_code, overflowing_literals)]\n \n fn main() {\n     let ok1 = 0xABCD;"}, {"sha": "88fcce66873aa3a73b6194eeddcacc88762bffb7", "filename": "tests/ui/many_single_char_names.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmany_single_char_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmany_single_char_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmany_single_char_names.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,3 +1,4 @@\n+#![allow(clippy::too_many_arguments, clippy::diverging_sub_expression)]\n #![warn(clippy::many_single_char_names)]\n \n fn bla() {"}, {"sha": "ade0f84bc50653be1b7f4574e7ff5fc9afd35cd3", "filename": "tests/ui/many_single_char_names.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmany_single_char_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmany_single_char_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmany_single_char_names.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: 5 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:4:9\n+  --> $DIR/many_single_char_names.rs:5:9\n    |\n LL |     let a: i32;\n    |         ^\n@@ -12,7 +12,7 @@ LL |             let e: i32;\n    = note: `-D clippy::many-single-char-names` implied by `-D warnings`\n \n error: 6 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:4:9\n+  --> $DIR/many_single_char_names.rs:5:9\n    |\n LL |     let a: i32;\n    |         ^\n@@ -25,7 +25,7 @@ LL |             let f: i32;\n    |                 ^\n \n error: 5 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:4:9\n+  --> $DIR/many_single_char_names.rs:5:9\n    |\n LL |     let a: i32;\n    |         ^\n@@ -36,13 +36,13 @@ LL |             e => panic!(),\n    |             ^\n \n error: 8 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:29:13\n+  --> $DIR/many_single_char_names.rs:30:13\n    |\n LL | fn bindings(a: i32, b: i32, c: i32, d: i32, e: i32, f: i32, g: i32, h: i32) {}\n    |             ^       ^       ^       ^       ^       ^       ^       ^\n \n error: 8 bindings with single-character names in scope\n-  --> $DIR/many_single_char_names.rs:32:10\n+  --> $DIR/many_single_char_names.rs:33:10\n    |\n LL |     let (a, b, c, d, e, f, g, h): (bool, bool, bool, bool, bool, bool, bool, bool) = unimplemented!();\n    |          ^  ^  ^  ^  ^  ^  ^  ^"}, {"sha": "5d57638af43495bea12bce75b930aa600ae51343", "filename": "tests/ui/mistyped_literal_suffix.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmistyped_literal_suffix.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmistyped_literal_suffix.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmistyped_literal_suffix.fixed?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -3,6 +3,7 @@\n #![allow(\n     dead_code,\n     unused_variables,\n+    overflowing_literals,\n     clippy::excessive_precision,\n     clippy::inconsistent_digit_grouping\n )]\n@@ -21,7 +22,6 @@ fn main() {\n     let fail25 = 1E2_f32;\n     let fail26 = 43E7_f64;\n     let fail27 = 243E17_f32;\n-    #[allow(overflowing_literals)]\n     let fail28 = 241_251_235E723_f64;\n     let ok29 = 42279.911_32;\n "}, {"sha": "12171452885d2b009bdb0e0373abe765a0c29a04", "filename": "tests/ui/mistyped_literal_suffix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmistyped_literal_suffix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmistyped_literal_suffix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmistyped_literal_suffix.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -3,6 +3,7 @@\n #![allow(\n     dead_code,\n     unused_variables,\n+    overflowing_literals,\n     clippy::excessive_precision,\n     clippy::inconsistent_digit_grouping\n )]\n@@ -21,7 +22,6 @@ fn main() {\n     let fail25 = 1E2_32;\n     let fail26 = 43E7_64;\n     let fail27 = 243E17_32;\n-    #[allow(overflowing_literals)]\n     let fail28 = 241251235E723_64;\n     let ok29 = 42279.911_32;\n "}, {"sha": "d24543c26e4b0d7e48cbb4647f03ebcd2abf3cb0", "filename": "tests/ui/mistyped_literal_suffix.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmistyped_literal_suffix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fmistyped_literal_suffix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmistyped_literal_suffix.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,55 +1,55 @@\n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:11:18\n+  --> $DIR/mistyped_literal_suffix.rs:12:18\n    |\n LL |     let fail14 = 2_32;\n    |                  ^^^^ help: did you mean to write: `2_i32`\n    |\n    = note: `#[deny(clippy::mistyped_literal_suffixes)]` on by default\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:12:18\n+  --> $DIR/mistyped_literal_suffix.rs:13:18\n    |\n LL |     let fail15 = 4_64;\n    |                  ^^^^ help: did you mean to write: `4_i64`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:13:18\n+  --> $DIR/mistyped_literal_suffix.rs:14:18\n    |\n LL |     let fail16 = 7_8; //\n    |                  ^^^ help: did you mean to write: `7_i8`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:14:18\n+  --> $DIR/mistyped_literal_suffix.rs:15:18\n    |\n LL |     let fail17 = 23_16; //\n    |                  ^^^^^ help: did you mean to write: `23_i16`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:17:18\n+  --> $DIR/mistyped_literal_suffix.rs:18:18\n    |\n LL |     let fail20 = 2__8; //\n    |                  ^^^^ help: did you mean to write: `2_i8`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:18:18\n+  --> $DIR/mistyped_literal_suffix.rs:19:18\n    |\n LL |     let fail21 = 4___16; //\n    |                  ^^^^^^ help: did you mean to write: `4_i16`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:21:18\n+  --> $DIR/mistyped_literal_suffix.rs:22:18\n    |\n LL |     let fail25 = 1E2_32;\n    |                  ^^^^^^ help: did you mean to write: `1E2_f32`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:22:18\n+  --> $DIR/mistyped_literal_suffix.rs:23:18\n    |\n LL |     let fail26 = 43E7_64;\n    |                  ^^^^^^^ help: did you mean to write: `43E7_f64`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:23:18\n+  --> $DIR/mistyped_literal_suffix.rs:24:18\n    |\n LL |     let fail27 = 243E17_32;\n    |                  ^^^^^^^^^ help: did you mean to write: `243E17_f32`"}, {"sha": "ad0d694a2174a3a125393790d5767a81afd9c98d", "filename": "tests/ui/needless_arbitrary_self_type_unfixable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_arbitrary_self_type_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_arbitrary_self_type_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_arbitrary_self_type_unfixable.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -38,6 +38,7 @@ mod issue_6089 {\n     //  fn call_with_mut_self<'life0>(self: &'life0 mut Self) {}\n     #[rename_my_lifetimes]\n     impl T2 for S2 {\n+        #[allow(clippy::needless_lifetimes)]\n         fn call_with_mut_self(self: &mut Self) {}\n     }\n }"}, {"sha": "b2edbfe4323e16ce6ec4407158daa60f143b335f", "filename": "tests/ui/needless_arbitrary_self_type_unfixable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_arbitrary_self_type_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_arbitrary_self_type_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_arbitrary_self_type_unfixable.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: the type of the `self` parameter does not need to be arbitrary\n-  --> $DIR/needless_arbitrary_self_type_unfixable.rs:41:31\n+  --> $DIR/needless_arbitrary_self_type_unfixable.rs:42:31\n    |\n LL |         fn call_with_mut_self(self: &mut Self) {}\n    |                               ^^^^^^^^^^^^^^^ help: consider to change this parameter to: `&'_ mut self`"}, {"sha": "f105d3d659ac7fb199e5c4fc593ca224c86447e1", "filename": "tests/ui/needless_continue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -12,6 +12,7 @@ macro_rules! nonzero {\n     };\n }\n \n+#[allow(clippy::nonminimal_bool)]\n fn main() {\n     let mut i = 1;\n     while i < 10 {"}, {"sha": "b8657c74caa6930c9408ecc4079a9fd7b5893e0d", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: this `else` block is redundant\n-  --> $DIR/needless_continue.rs:28:16\n+  --> $DIR/needless_continue.rs:29:16\n    |\n LL |           } else {\n    |  ________________^\n@@ -35,7 +35,7 @@ LL | |         }\n                    }\n \n error: there is no need for an explicit `else` block for this `if` expression\n-  --> $DIR/needless_continue.rs:43:9\n+  --> $DIR/needless_continue.rs:44:9\n    |\n LL | /         if (zero!(i % 2) || nonzero!(i % 5)) && i % 3 != 0 {\n LL | |             continue;\n@@ -55,39 +55,39 @@ LL | |         }\n                    }\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:56:9\n+  --> $DIR/needless_continue.rs:57:9\n    |\n LL |         continue; // should lint here\n    |         ^^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:63:9\n+  --> $DIR/needless_continue.rs:64:9\n    |\n LL |         continue; // should lint here\n    |         ^^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:70:9\n+  --> $DIR/needless_continue.rs:71:9\n    |\n LL |         continue // should lint here\n    |         ^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `continue` expression is redundant\n-  --> $DIR/needless_continue.rs:78:9\n+  --> $DIR/needless_continue.rs:79:9\n    |\n LL |         continue // should lint here\n    |         ^^^^^^^^\n    |\n    = help: consider dropping the `continue` expression\n \n error: this `else` block is redundant\n-  --> $DIR/needless_continue.rs:128:24\n+  --> $DIR/needless_continue.rs:129:24\n    |\n LL |                   } else {\n    |  ________________________^\n@@ -110,7 +110,7 @@ LL | |                 }\n                            }\n \n error: there is no need for an explicit `else` block for this `if` expression\n-  --> $DIR/needless_continue.rs:134:17\n+  --> $DIR/needless_continue.rs:135:17\n    |\n LL | /                 if condition() {\n LL | |                     continue; // should lint here"}, {"sha": "9937005d68d8ae43092952b1a4f307d8f21f816c", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::all)]\n-#![allow(unused, clippy::println_empty_string)]\n+#![allow(unused, clippy::println_empty_string, non_snake_case)]\n \n #[derive(Clone, Debug)]\n enum MaybeInst {\n@@ -14,6 +14,7 @@ struct InstSplit {\n \n impl MaybeInst {\n     fn fill(&mut self) {\n+        #[allow(non_fmt_panics)]\n         let filled = match *self {\n             MaybeInst::Split1(goto1) => panic!(\"1\"),\n             MaybeInst::Split2(goto2) => panic!(\"2\"),\n@@ -36,6 +37,7 @@ fn issue2927() {\n }\n \n fn issue3078() {\n+    #[allow(clippy::single_match)]\n     match \"a\" {\n         stringify!(a) => {},\n         _ => {},"}, {"sha": "116d5da8729c0f2d334d91a4966483158f52bd53", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,37 +1,37 @@\n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:27:9\n+  --> $DIR/non_expressive_names.rs:28:9\n    |\n LL |     let _1 = 1; //~ERROR Consider a more descriptive name\n    |         ^^\n    |\n    = note: `-D clippy::just-underscores-and-digits` implied by `-D warnings`\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:28:9\n+  --> $DIR/non_expressive_names.rs:29:9\n    |\n LL |     let ____1 = 1; //~ERROR Consider a more descriptive name\n    |         ^^^^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:29:9\n+  --> $DIR/non_expressive_names.rs:30:9\n    |\n LL |     let __1___2 = 12; //~ERROR Consider a more descriptive name\n    |         ^^^^^^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:49:13\n+  --> $DIR/non_expressive_names.rs:51:13\n    |\n LL |         let _1 = 1;\n    |             ^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:50:13\n+  --> $DIR/non_expressive_names.rs:52:13\n    |\n LL |         let ____1 = 1;\n    |             ^^^^^\n \n error: consider choosing a more descriptive name\n-  --> $DIR/non_expressive_names.rs:51:13\n+  --> $DIR/non_expressive_names.rs:53:13\n    |\n LL |         let __1___2 = 12;\n    |             ^^^^^^^"}, {"sha": "5649d8dd14c4899fde03e7a75d78bf5309aa4728", "filename": "tests/ui/redundant_closure_call_early.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fredundant_closure_call_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fredundant_closure_call_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_early.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -15,5 +15,6 @@ fn main() {\n     #[allow(clippy::needless_return)]\n     (|| return 2)();\n     (|| -> Option<i32> { None? })();\n+    #[allow(clippy::try_err)]\n     (|| -> Result<i32, i32> { Err(2)? })();\n }"}, {"sha": "e8a6e940c01cdbebd76dfcceb066bafea11d97cc", "filename": "tests/ui/redundant_else.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fredundant_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fredundant_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_else.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::redundant_else)]\n-#![allow(clippy::needless_return)]\n+#![allow(clippy::needless_return, clippy::if_same_then_else)]\n \n fn main() {\n     loop {\n@@ -105,7 +105,7 @@ fn main() {\n         1\n     };\n     // assign\n-    let a;\n+    let mut a;\n     a = if foo() {\n         return;\n     } else {"}, {"sha": "76f6ce9ee6b47f3826824a35e2495c0513d80c23", "filename": "tests/ui/similar_names.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsimilar_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsimilar_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsimilar_names.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,10 @@\n #![warn(clippy::similar_names)]\n-#![allow(unused, clippy::println_empty_string)]\n+#![allow(\n+    unused,\n+    clippy::println_empty_string,\n+    clippy::empty_loop,\n+    clippy::diverging_sub_expression\n+)]\n \n struct Foo {\n     apple: i32,"}, {"sha": "faf572b0c6bc27010c8af554b37cd863e295ab2a", "filename": "tests/ui/similar_names.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsimilar_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsimilar_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsimilar_names.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,84 +1,84 @@\n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:15:9\n+  --> $DIR/similar_names.rs:20:9\n    |\n LL |     let bpple: i32;\n    |         ^^^^^\n    |\n    = note: `-D clippy::similar-names` implied by `-D warnings`\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:13:9\n+  --> $DIR/similar_names.rs:18:9\n    |\n LL |     let apple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:17:9\n+  --> $DIR/similar_names.rs:22:9\n    |\n LL |     let cpple: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:13:9\n+  --> $DIR/similar_names.rs:18:9\n    |\n LL |     let apple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:41:9\n+  --> $DIR/similar_names.rs:46:9\n    |\n LL |     let bluby: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:40:9\n+  --> $DIR/similar_names.rs:45:9\n    |\n LL |     let blubx: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:45:9\n+  --> $DIR/similar_names.rs:50:9\n    |\n LL |     let coke: i32;\n    |         ^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:43:9\n+  --> $DIR/similar_names.rs:48:9\n    |\n LL |     let cake: i32;\n    |         ^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:63:9\n+  --> $DIR/similar_names.rs:68:9\n    |\n LL |     let xyzeabc: i32;\n    |         ^^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:61:9\n+  --> $DIR/similar_names.rs:66:9\n    |\n LL |     let xyz1abc: i32;\n    |         ^^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:67:9\n+  --> $DIR/similar_names.rs:72:9\n    |\n LL |     let parsee: i32;\n    |         ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:65:9\n+  --> $DIR/similar_names.rs:70:9\n    |\n LL |     let parser: i32;\n    |         ^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:88:16\n+  --> $DIR/similar_names.rs:93:16\n    |\n LL |         bpple: sprang,\n    |                ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:87:16\n+  --> $DIR/similar_names.rs:92:16\n    |\n LL |         apple: spring,\n    |                ^^^^^^"}, {"sha": "fcd827a91c7f62d843bfd47a30016a58e9dbbf2d", "filename": "tests/ui/suspicious_else_formatting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_else_formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_else_formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_else_formatting.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,6 +1,7 @@\n // aux-build:proc_macro_suspicious_else_formatting.rs\n \n #![warn(clippy::suspicious_else_formatting)]\n+#![allow(clippy::if_same_then_else)]\n \n extern crate proc_macro_suspicious_else_formatting;\n use proc_macro_suspicious_else_formatting::DeriveBadSpan;"}, {"sha": "ee68eb5a791c45d5ea2c5c3ab4edc2fe8810fc35", "filename": "tests/ui/suspicious_else_formatting.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_else_formatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_else_formatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_else_formatting.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,5 +1,5 @@\n error: this looks like an `else {..}` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:16:6\n+  --> $DIR/suspicious_else_formatting.rs:17:6\n    |\n LL |     } {\n    |      ^\n@@ -8,31 +8,31 @@ LL |     } {\n    = note: to remove this lint, add the missing `else` or add a new line before the next block\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:20:6\n+  --> $DIR/suspicious_else_formatting.rs:21:6\n    |\n LL |     } if foo() {\n    |      ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:27:10\n+  --> $DIR/suspicious_else_formatting.rs:28:10\n    |\n LL |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/suspicious_else_formatting.rs:35:10\n+  --> $DIR/suspicious_else_formatting.rs:36:10\n    |\n LL |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this is an `else {..}` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:44:6\n+  --> $DIR/suspicious_else_formatting.rs:45:6\n    |\n LL |       } else\n    |  ______^\n@@ -42,7 +42,7 @@ LL | |     {\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `{..}`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:56:6\n+  --> $DIR/suspicious_else_formatting.rs:57:6\n    |\n LL |       } else\n    |  ______^\n@@ -52,7 +52,7 @@ LL | |     if foo() { // the span of the above error should continue here\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:61:6\n+  --> $DIR/suspicious_else_formatting.rs:62:6\n    |\n LL |       }\n    |  ______^\n@@ -63,7 +63,7 @@ LL | |     if foo() { // the span of the above error should continue here\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else {..}` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:88:6\n+  --> $DIR/suspicious_else_formatting.rs:89:6\n    |\n LL |       }\n    |  ______^\n@@ -75,7 +75,7 @@ LL | |     {\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `{..}`\n \n error: this is an `else {..}` but the formatting might hide it\n-  --> $DIR/suspicious_else_formatting.rs:96:6\n+  --> $DIR/suspicious_else_formatting.rs:97:6\n    |\n LL |       }\n    |  ______^"}, {"sha": "3201d5de0f35620663dea65c8903b481d8ac9eb6", "filename": "tests/ui/suspicious_operation_groupings.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_operation_groupings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_operation_groupings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_operation_groupings.rs?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::suspicious_operation_groupings)]\n+#![allow(clippy::eq_op)]\n \n struct Vec3 {\n     x: f64,\n@@ -187,7 +188,7 @@ fn inside_fn_with_similar_expression(s1: &S, s2: &S, strict: bool) -> bool {\n     }\n }\n \n-fn inside_an_if_statement(s1: &S, s2: &S) {\n+fn inside_an_if_statement(s1: &mut S, s2: &S) {\n     // There's no `s1.b`\n     if s1.a < s2.a && s1.a < s2.b {\n         s1.c = s2.c;"}, {"sha": "baf9bc74b000ec30468a9e08112d1decaed61346", "filename": "tests/ui/suspicious_operation_groupings.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_operation_groupings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8dd1bce2632ef2d26938abc30b726e29abf03a49/tests%2Fui%2Fsuspicious_operation_groupings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_operation_groupings.stderr?ref=8dd1bce2632ef2d26938abc30b726e29abf03a49", "patch": "@@ -1,157 +1,157 @@\n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:14:9\n+  --> $DIR/suspicious_operation_groupings.rs:15:9\n    |\n LL |         self.x == other.y && self.y == other.y && self.z == other.z\n    |         ^^^^^^^^^^^^^^^^^ help: did you mean: `self.x == other.x`\n    |\n    = note: `-D clippy::suspicious-operation-groupings` implied by `-D warnings`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:27:20\n+  --> $DIR/suspicious_operation_groupings.rs:28:20\n    |\n LL |     s1.a < s2.a && s1.a < s2.b\n    |                    ^^^^^^^^^^^ help: did you mean: `s1.b < s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:75:33\n+  --> $DIR/suspicious_operation_groupings.rs:76:33\n    |\n LL |     s1.a * s2.a + s1.b * s2.b + s1.c * s2.b + s1.d * s2.d\n    |                                 ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:80:19\n+  --> $DIR/suspicious_operation_groupings.rs:81:19\n    |\n LL |     s1.a * s2.a + s1.b * s2.c + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:80:19\n+  --> $DIR/suspicious_operation_groupings.rs:81:19\n    |\n LL |     s1.a * s2.a + s1.b * s2.c + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:85:19\n+  --> $DIR/suspicious_operation_groupings.rs:86:19\n    |\n LL |     s1.a * s2.a + s2.b * s2.b + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:90:19\n+  --> $DIR/suspicious_operation_groupings.rs:91:19\n    |\n LL |     s1.a * s2.a + s1.b * s1.b + s1.c * s2.c\n    |                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:95:5\n+  --> $DIR/suspicious_operation_groupings.rs:96:5\n    |\n LL |     s1.a * s1.a + s1.b * s2.b + s1.c * s2.c\n    |     ^^^^^^^^^^^ help: did you mean: `s1.a * s2.a`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:100:33\n+  --> $DIR/suspicious_operation_groupings.rs:101:33\n    |\n LL |     s1.a * s2.a + s1.b * s2.b + s1.c * s1.c\n    |                                 ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:113:20\n+  --> $DIR/suspicious_operation_groupings.rs:114:20\n    |\n LL |     (s1.a * s2.a + s1.b * s1.b)\n    |                    ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:118:34\n+  --> $DIR/suspicious_operation_groupings.rs:119:34\n    |\n LL |     (s1.a * s2.a + s1.b * s2.b + s1.c * s2.b + s1.d * s2.d)\n    |                                  ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:123:38\n+  --> $DIR/suspicious_operation_groupings.rs:124:38\n    |\n LL |     (s1.a * s2.a) + (s1.b * s2.b) + (s1.c * s2.b) + (s1.d * s2.d)\n    |                                      ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:128:39\n+  --> $DIR/suspicious_operation_groupings.rs:129:39\n    |\n LL |     ((s1.a * s2.a) + (s1.b * s2.b) + (s1.c * s2.b) + (s1.d * s2.d))\n    |                                       ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:133:42\n+  --> $DIR/suspicious_operation_groupings.rs:134:42\n    |\n LL |     (((s1.a * s2.a) + (s1.b * s2.b)) + ((s1.c * s2.b) + (s1.d * s2.d)))\n    |                                          ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:133:42\n+  --> $DIR/suspicious_operation_groupings.rs:134:42\n    |\n LL |     (((s1.a * s2.a) + (s1.b * s2.b)) + ((s1.c * s2.b) + (s1.d * s2.d)))\n    |                                          ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:138:40\n+  --> $DIR/suspicious_operation_groupings.rs:139:40\n    |\n LL |     (((s1.a * s2.a) + (s1.b * s2.b) + (s1.c * s2.b)) + (s1.d * s2.d))\n    |                                        ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:143:40\n+  --> $DIR/suspicious_operation_groupings.rs:144:40\n    |\n LL |     ((s1.a * s2.a) + ((s1.b * s2.b) + (s1.c * s2.b) + (s1.d * s2.d)))\n    |                                        ^^^^^^^^^^^ help: did you mean: `s1.c * s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:148:20\n+  --> $DIR/suspicious_operation_groupings.rs:149:20\n    |\n LL |     (s1.a * s2.a + s2.b * s2.b) / 2\n    |                    ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:153:35\n+  --> $DIR/suspicious_operation_groupings.rs:154:35\n    |\n LL |     i32::swap_bytes(s1.a * s2.a + s2.b * s2.b)\n    |                                   ^^^^^^^^^^^ help: did you mean: `s1.b * s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:158:29\n+  --> $DIR/suspicious_operation_groupings.rs:159:29\n    |\n LL |     s1.a > 0 && s1.b > 0 && s1.d == s2.c && s1.d == s2.d\n    |                             ^^^^^^^^^^^^ help: did you mean: `s1.c == s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:163:17\n+  --> $DIR/suspicious_operation_groupings.rs:164:17\n    |\n LL |     s1.a > 0 && s1.d == s2.c && s1.b > 0 && s1.d == s2.d\n    |                 ^^^^^^^^^^^^ help: did you mean: `s1.c == s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:172:77\n+  --> $DIR/suspicious_operation_groupings.rs:173:77\n    |\n LL |     (n1.inner.0).0 == (n2.inner.0).0 && (n1.inner.1).0 == (n2.inner.1).0 && (n1.inner.2).0 == (n2.inner.1).0\n    |                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: did you mean: `(n1.inner.2).0 == (n2.inner.2).0`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:186:25\n+  --> $DIR/suspicious_operation_groupings.rs:187:25\n    |\n LL |         s1.a <= s2.a && s1.a <= s2.b\n    |                         ^^^^^^^^^^^^ help: did you mean: `s1.b <= s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:192:23\n+  --> $DIR/suspicious_operation_groupings.rs:193:23\n    |\n LL |     if s1.a < s2.a && s1.a < s2.b {\n    |                       ^^^^^^^^^^^ help: did you mean: `s1.b < s2.b`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:199:48\n+  --> $DIR/suspicious_operation_groupings.rs:200:48\n    |\n LL |     -(-(-s1.a * -s2.a) + (-(-s1.b * -s2.b) + -(-s1.c * -s2.b) + -(-s1.d * -s2.d)))\n    |                                                ^^^^^^^^^^^^^ help: did you mean: `-s1.c * -s2.c`\n \n error: this sequence of operators looks suspiciously like a bug\n-  --> $DIR/suspicious_operation_groupings.rs:204:27\n+  --> $DIR/suspicious_operation_groupings.rs:205:27\n    |\n LL |     -(if -s1.a < -s2.a && -s1.a < -s2.b { s1.c } else { s2.a })\n    |                           ^^^^^^^^^^^^^ help: did you mean: `-s1.b < -s2.b`"}]}