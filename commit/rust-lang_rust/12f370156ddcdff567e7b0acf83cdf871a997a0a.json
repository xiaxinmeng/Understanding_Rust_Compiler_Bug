{"sha": "12f370156ddcdff567e7b0acf83cdf871a997a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZjM3MDE1NmRkY2RmZjU2N2U3YjBhY2Y4M2NkZjg3MWE5OTdhMGE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-05-20T21:21:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-05-20T21:34:37Z"}, "message": "Only execute conditional steps on success\n\nMake sure `succeeded()` is in all the conditionals", "tree": {"sha": "8a83ed50634e3c66a22ec40a9729e931efc1f2ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a83ed50634e3c66a22ec40a9729e931efc1f2ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12f370156ddcdff567e7b0acf83cdf871a997a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12f370156ddcdff567e7b0acf83cdf871a997a0a", "html_url": "https://github.com/rust-lang/rust/commit/12f370156ddcdff567e7b0acf83cdf871a997a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12f370156ddcdff567e7b0acf83cdf871a997a0a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b8af0608f0817caabbe15ec25c9ebedbb670245", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b8af0608f0817caabbe15ec25c9ebedbb670245", "html_url": "https://github.com/rust-lang/rust/commit/9b8af0608f0817caabbe15ec25c9ebedbb670245"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "26a223282cd87a8666ee5f4ccb8472675242d135", "filename": ".azure-pipelines/steps/install-clang.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Finstall-clang.yml", "raw_url": "https://github.com/rust-lang/rust/raw/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Finstall-clang.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Finstall-clang.yml?ref=12f370156ddcdff567e7b0acf83cdf871a997a0a", "patch": "@@ -14,7 +14,7 @@ steps:\n     # `clang-ar` by accident.\n     echo \"##vso[task.setvariable variable=AR]ar\"\n   displayName: Install clang (OSX)\n-  condition: eq(variables['Agent.OS'], 'Darwin')\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))\n \n # If we're compiling for MSVC then we, like most other distribution builders,\n # switch to clang as the compiler. This'll allow us eventually to enable LTO\n@@ -32,7 +32,7 @@ steps:\n     %TEMP%\\LLVM-7.0.0-win64.exe /S /NCRC /D=%CLANG_DIR%\n     set RUST_CONFIGURE_ARGS=%RUST_CONFIGURE_ARGS% --set llvm.clang-cl=%CLANG_DIR%\\bin\\clang-cl.exe\n     echo ##vso[task.setvariable variable=RUST_CONFIGURE_ARGS]%RUST_CONFIGURE_ARGS%\n-  condition: and(eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['MINGW_URL'],''))\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['MINGW_URL'],''))\n   displayName: Install clang (Windows)\n \n # Note that we don't install clang on Linux since its compiler story is just so"}, {"sha": "39f58002a7358d18b90aea4ba504d726b524ac07", "filename": ".azure-pipelines/steps/install-sccache.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Finstall-sccache.yml", "raw_url": "https://github.com/rust-lang/rust/raw/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Finstall-sccache.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Finstall-sccache.yml?ref=12f370156ddcdff567e7b0acf83cdf871a997a0a", "patch": "@@ -5,14 +5,14 @@ steps:\n     curl -fo /usr/local/bin/sccache https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror/2018-04-02-sccache-x86_64-apple-darwin\n     chmod +x /usr/local/bin/sccache\n   displayName: Install sccache (OSX)\n-  condition: eq(variables['Agent.OS'], 'Darwin')\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))\n \n - script: |\n     md sccache\n     powershell -Command \"iwr -outf sccache\\sccache.exe https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror/2018-04-26-sccache-x86_64-pc-windows-msvc\"\n     echo ##vso[task.prependpath]%CD%\\sccache\n   displayName: Install sccache (Windows)\n-  condition: eq(variables['Agent.OS'], 'Windows_NT')\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n \n # Note that we don't install sccache on Linux since it's installed elsewhere\n # through all the containers."}, {"sha": "45ce01fee758e8191ebd4862c0b1230915535efa", "filename": ".azure-pipelines/steps/install-windows-build-deps.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "raw_url": "https://github.com/rust-lang/rust/raw/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml?ref=12f370156ddcdff567e7b0acf83cdf871a997a0a", "patch": "@@ -29,7 +29,7 @@ steps:\n     echo ##vso[task.setvariable variable=MSYS_PATH]%MSYS_PATH%\n     echo ##vso[task.prependpath]%MSYS_PATH%\\usr\\bin\n   displayName: Install msys2\n-  condition: eq(variables['Agent.OS'], 'Windows_NT')\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n \n # If we need to download a custom MinGW, do so here and set the path\n # appropriately."}, {"sha": "2d98efd586e7747535ecd63dbd90063a70ded654", "filename": ".azure-pipelines/steps/run.yml", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/12f370156ddcdff567e7b0acf83cdf871a997a0a/.azure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Frun.yml?ref=12f370156ddcdff567e7b0acf83cdf871a997a0a", "patch": "@@ -12,12 +12,18 @@ steps:\n # images, etc.\n - bash: |\n     set -e\n-    pip install setuptools\n-    pip install awscli\n-  displayName: Install awscli\n+    sudo apt-get install -y python3-setuptools\n+    pip3 install awscli --upgrade --user\n+    echo \"##vso[task.prependpath]$HOME/.local/bin\"\n+  displayName: Install awscli (Linux)\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))\n+- script: pip install awscli\n+  displayName: Install awscli (non-Linux)\n+  condition: and(succeeded(), ne(variables['Agent.OS'], 'Linux'))\n \n - bash: aws s3 help\n - bash: exit 1\n+\n - checkout: self\n   fetchDepth: 2\n \n@@ -30,7 +36,7 @@ steps:\n     du . | sort -nr | head -n100\n   displayName: Show disk usage\n   # FIXME: this hasn't been tested, but maybe it works on Windows? Should test!\n-  condition: ne(variables['Agent.OS'], 'Windows_NT')\n+  condition: and(succeeded(), ne(variables['Agent.OS'], 'Windows_NT'))\n \n - template: install-sccache.yml\n - template: install-clang.yml\n@@ -43,7 +49,7 @@ steps:\n     brew install xz\n     brew install swig\n   displayName: Install build dependencies (OSX)\n-  condition: and(eq(variables['Agent.OS'], 'Darwin'), eq(variables['RUST_CHECK_TARGET'],'dist'))\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'), eq(variables['RUST_CHECK_TARGET'],'dist'))\n \n - template: install-windows-build-deps.yml\n \n@@ -53,12 +59,12 @@ steps:\n     set -e\n     mkdir -p $HOME/rustsrc\n     $BUILD_SOURCESDIRECTORY/src/ci/init_repo.sh . $HOME/rustsrc\n-  condition: ne(variables['Agent.OS'], 'Windows_NT')\n+  condition: and(succeeded(), ne(variables['Agent.OS'], 'Windows_NT'))\n   displayName: Check out submodules (Unix)\n - script: |\n     if not exist D:\\cache\\rustsrc\\NUL mkdir D:\\cache\\rustsrc\n     sh src/ci/init_repo.sh . /d/cache/rustsrc\n-  condition: eq(variables['Agent.OS'], 'Windows_NT')\n+  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n   displayName: Check out submodules (Windows)\n \n # Configure our CI_JOB_NAME variable which log analyzers can use for the main"}]}