{"sha": "45334326127285e9442ae1c3e9f4ba9c428ec3c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MzM0MzI2MTI3Mjg1ZTk0NDJhZTFjM2U5ZjRiYTljNDI4ZWMzYzY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-21T06:21:39Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-21T08:17:03Z"}, "message": "expose new floating point intrinsics\n\ncopysign, ring, nearbyint, round", "tree": {"sha": "e6e1794f298950644475bd53dfef3aff68bee54a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6e1794f298950644475bd53dfef3aff68bee54a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45334326127285e9442ae1c3e9f4ba9c428ec3c6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45334326127285e9442ae1c3e9f4ba9c428ec3c6", "html_url": "https://github.com/rust-lang/rust/commit/45334326127285e9442ae1c3e9f4ba9c428ec3c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45334326127285e9442ae1c3e9f4ba9c428ec3c6/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd59a7c464811e164f3a1c87d8fa31fdaa5fbafa", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd59a7c464811e164f3a1c87d8fa31fdaa5fbafa", "html_url": "https://github.com/rust-lang/rust/commit/cd59a7c464811e164f3a1c87d8fa31fdaa5fbafa"}], "stats": {"total": 92, "additions": 69, "deletions": 23}, "files": [{"sha": "f6a70a373c684a32a7a391d26786b79315d6e086", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=45334326127285e9442ae1c3e9f4ba9c428ec3c6", "patch": "@@ -2797,13 +2797,23 @@ pub fn declare_intrinsics(llmod: ModuleRef) -> HashMap<&'static str, ValueRef> {\n \n     ifn!(intrinsics, \"llvm.fabs.f32\", [Type::f32()], Type::f32());\n     ifn!(intrinsics, \"llvm.fabs.f64\", [Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.copysign.f32\", [Type::f32()], Type::f32());\n+    ifn!(intrinsics, \"llvm.copysign.f64\", [Type::f64()], Type::f64());\n+\n     ifn!(intrinsics, \"llvm.floor.f32\",[Type::f32()], Type::f32());\n     ifn!(intrinsics, \"llvm.floor.f64\",[Type::f64()], Type::f64());\n     ifn!(intrinsics, \"llvm.ceil.f32\", [Type::f32()], Type::f32());\n     ifn!(intrinsics, \"llvm.ceil.f64\", [Type::f64()], Type::f64());\n     ifn!(intrinsics, \"llvm.trunc.f32\",[Type::f32()], Type::f32());\n     ifn!(intrinsics, \"llvm.trunc.f64\",[Type::f64()], Type::f64());\n \n+    ifn!(intrinsics, \"llvm.rint.f32\",[Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.rint.f64\",[Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.nearbyint.f32\",[Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.nearbyint.f64\",[Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.round.f32\",[Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.round.f64\",[Type::f64()], Type::f64());\n+\n     ifn!(intrinsics, \"llvm.ctpop.i8\", [Type::i8()], Type::i8());\n     ifn!(intrinsics, \"llvm.ctpop.i16\",[Type::i16()], Type::i16());\n     ifn!(intrinsics, \"llvm.ctpop.i32\",[Type::i32()], Type::i32());"}, {"sha": "a37ec29973a8e9acbd2396e1cc0da0b4738942a5", "filename": "src/librustc/middle/trans/intrinsic.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs?ref=45334326127285e9442ae1c3e9f4ba9c428ec3c6", "patch": "@@ -460,12 +460,20 @@ pub fn trans_intrinsic(ccx: @mut CrateContext,\n         \"fmaf64\" => simple_llvm_intrinsic(bcx, \"llvm.fma.f64\", 3),\n         \"fabsf32\" => simple_llvm_intrinsic(bcx, \"llvm.fabs.f32\", 1),\n         \"fabsf64\" => simple_llvm_intrinsic(bcx, \"llvm.fabs.f64\", 1),\n+        \"copysignf32\" => simple_llvm_intrinsic(bcx, \"llvm.copysign.f32\", 1),\n+        \"copysignf64\" => simple_llvm_intrinsic(bcx, \"llvm.copysign.f64\", 1),\n         \"floorf32\" => simple_llvm_intrinsic(bcx, \"llvm.floor.f32\", 1),\n         \"floorf64\" => simple_llvm_intrinsic(bcx, \"llvm.floor.f64\", 1),\n         \"ceilf32\" => simple_llvm_intrinsic(bcx, \"llvm.ceil.f32\", 1),\n         \"ceilf64\" => simple_llvm_intrinsic(bcx, \"llvm.ceil.f64\", 1),\n         \"truncf32\" => simple_llvm_intrinsic(bcx, \"llvm.trunc.f32\", 1),\n         \"truncf64\" => simple_llvm_intrinsic(bcx, \"llvm.trunc.f64\", 1),\n+        \"rintf64\" => simple_llvm_intrinsic(bcx, \"llvm.rint.f64\", 1),\n+        \"rintf32\" => simple_llvm_intrinsic(bcx, \"llvm.rint.f32\", 1),\n+        \"nearbyintf32\" => simple_llvm_intrinsic(bcx, \"llvm.nearbyint.f64\", 1),\n+        \"nearbyintf64\" => simple_llvm_intrinsic(bcx, \"llvm.nearbyint.f32\", 1),\n+        \"roundf32\" => simple_llvm_intrinsic(bcx, \"llvm.round.f64\", 1),\n+        \"roundf64\" => simple_llvm_intrinsic(bcx, \"llvm.round.f32\", 1),\n         \"ctpop8\" => simple_llvm_intrinsic(bcx, \"llvm.ctpop.i8\", 1),\n         \"ctpop16\" => simple_llvm_intrinsic(bcx, \"llvm.ctpop.i16\", 1),\n         \"ctpop32\" => simple_llvm_intrinsic(bcx, \"llvm.ctpop.i32\", 1),"}, {"sha": "fce24e15bdc20413c4c8477b42c308417fb2e91c", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=45334326127285e9442ae1c3e9f4ba9c428ec3c6", "patch": "@@ -3807,29 +3807,37 @@ pub fn check_intrinsic_type(ccx: @mut CrateCtxt, it: @ast::foreign_item) {\n                  ~[ ty::mk_f64(), ty::mk_f64(), ty::mk_f64() ],\n                  ty::mk_f64())\n             }\n-            \"fabsf32\"  => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n-            \"fabsf64\"  => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n-            \"floorf32\" => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n-            \"floorf64\" => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n-            \"ceilf32\"  => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n-            \"ceilf64\"  => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n-            \"truncf32\" => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n-            \"truncf64\" => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n-            \"ctpop8\"   => (0, ~[ ty::mk_i8()  ], ty::mk_i8()),\n-            \"ctpop16\"  => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n-            \"ctpop32\"  => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n-            \"ctpop64\"  => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n-            \"ctlz8\"    => (0, ~[ ty::mk_i8()  ], ty::mk_i8()),\n-            \"ctlz16\"   => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n-            \"ctlz32\"   => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n-            \"ctlz64\"   => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n-            \"cttz8\"    => (0, ~[ ty::mk_i8()  ], ty::mk_i8()),\n-            \"cttz16\"   => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n-            \"cttz32\"   => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n-            \"cttz64\"   => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n-            \"bswap16\"  => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n-            \"bswap32\"  => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n-            \"bswap64\"  => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n+            \"fabsf32\"      => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"fabsf64\"      => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"copysignf32\"  => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"copysignf64\"  => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"floorf32\"     => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"floorf64\"     => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"ceilf32\"      => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"ceilf64\"      => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"truncf32\"     => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"truncf64\"     => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"rintf32\"      => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"rintf64\"      => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"nearbyintf32\" => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"nearbyintf64\" => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"roundf32\"     => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n+            \"roundf64\"     => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"ctpop8\"       => (0, ~[ ty::mk_i8()  ], ty::mk_i8()),\n+            \"ctpop16\"      => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n+            \"ctpop32\"      => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n+            \"ctpop64\"      => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n+            \"ctlz8\"        => (0, ~[ ty::mk_i8()  ], ty::mk_i8()),\n+            \"ctlz16\"       => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n+            \"ctlz32\"       => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n+            \"ctlz64\"       => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n+            \"cttz8\"        => (0, ~[ ty::mk_i8()  ], ty::mk_i8()),\n+            \"cttz16\"       => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n+            \"cttz32\"       => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n+            \"cttz64\"       => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n+            \"bswap16\"      => (0, ~[ ty::mk_i16() ], ty::mk_i16()),\n+            \"bswap32\"      => (0, ~[ ty::mk_i32() ], ty::mk_i32()),\n+            \"bswap64\"      => (0, ~[ ty::mk_i64() ], ty::mk_i64()),\n \n             \"i8_add_with_overflow\" | \"i8_sub_with_overflow\" | \"i8_mul_with_overflow\" =>\n                 (0, ~[ty::mk_i8(), ty::mk_i8()],"}, {"sha": "8959d591c37ebdfa6dbd0c6042f3ca5ef5d75dc3", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45334326127285e9442ae1c3e9f4ba9c428ec3c6/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=45334326127285e9442ae1c3e9f4ba9c428ec3c6", "patch": "@@ -413,6 +413,11 @@ extern \"rust-intrinsic\" {\n     pub fn fabsf32(x: f32) -> f32;\n     pub fn fabsf64(x: f64) -> f64;\n \n+    #[cfg(not(stage0))]\n+    pub fn copysignf32(x: f32) -> f32;\n+    #[cfg(not(stage0))]\n+    pub fn copysignf64(x: f64) -> f64;\n+\n     pub fn floorf32(x: f32) -> f32;\n     pub fn floorf64(x: f64) -> f64;\n \n@@ -422,6 +427,21 @@ extern \"rust-intrinsic\" {\n     pub fn truncf32(x: f32) -> f32;\n     pub fn truncf64(x: f64) -> f64;\n \n+    #[cfg(not(stage0))]\n+    pub fn rintf32(x: f32) -> f32;\n+    #[cfg(not(stage0))]\n+    pub fn rintf64(x: f64) -> f64;\n+\n+    #[cfg(not(stage0))]\n+    pub fn nearbyintf32(x: f32) -> f32;\n+    #[cfg(not(stage0))]\n+    pub fn nearbyintf64(x: f64) -> f64;\n+\n+    #[cfg(not(stage0))]\n+    pub fn roundf32(x: f32) -> f32;\n+    #[cfg(not(stage0))]\n+    pub fn roundf64(x: f64) -> f64;\n+\n     pub fn ctpop8(x: i8) -> i8;\n     pub fn ctpop16(x: i16) -> i16;\n     pub fn ctpop32(x: i32) -> i32;"}]}