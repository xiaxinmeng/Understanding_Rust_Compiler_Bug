{"sha": "54596c9b560472b682eaf2487672e135809b7583", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NTk2YzliNTYwNDcyYjY4MmVhZjI0ODc2NzJlMTM1ODA5Yjc1ODM=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-10-06T20:53:12Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-10-16T20:14:31Z"}, "message": "Add inline const tests", "tree": {"sha": "2c4b26bc55167b4f06ae03be01ea6197f7ca0499", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c4b26bc55167b4f06ae03be01ea6197f7ca0499"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54596c9b560472b682eaf2487672e135809b7583", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl+J/ygACgkQgTGiTgx5\n768GLw//SQQMSXJiQKKBaivK4DurZMiLRCbSZb7vvtE+zHA2W86X9hFeOG/AAFZN\n+pRErKhseh8q82Q3Vd6FiCnpKsUkkjLc48Sjn8Fn8y70YAYYZmytkAoQ71JXBRSq\n0cFJ2fVh8rt1tBhtOsyTv087gr09d0+jLE8HzPkEReFuuF0KvDrmb7FvyZ/CY1d7\nPmsP9/67xb9hDnlR9v7FbYtTet024Mu5jPCQc9fUmrHspOETqnSW5xUaLeoigFIf\n63vWp9bapo69meXch/YQ4RqsyWnrYJfqO8TisEqcGXqGQqESZAbxWyKGJ84FDNk0\nalYWbqT7iAYkAgopSy2jbr9DnFzCs3OfnSp+qehkxYZLS8m4dcaInbV4KWPRjPBs\nJ0e0lGMSI+Ew7mr7JpjLK721Krb9MD/kXMOq+sz47PtEnmfoC2c0+FtB22c5Bq8E\nGQZ/pes57rVTeisz1z1PtvP9NV8+fwkdZ7y7Bl2wOQRmHv1MRnVa8lRagav923tQ\nxo/OX2PEVQllgVzdk4m4bzU3nNIJmqCInc2JY7b6BNnCta7/c5KkD4D8oSr/35oi\n/eSUrVTGp00H39vLRTvVUiRi4W+Xajp4SedrA6onqIoPzl/Kzh93JghwL1wap/h2\nBeumyi5AfOfNDuUmIehGW8Whz35eDCVEQpd3e6hYobr5emLre1M=\n=iLiE\n-----END PGP SIGNATURE-----", "payload": "tree 2c4b26bc55167b4f06ae03be01ea6197f7ca0499\nparent 85b5ce264324c75eb4c67849bc42de5526ed9208\nauthor Santiago Pastorino <spastorino@gmail.com> 1602017592 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1602879271 -0300\n\nAdd inline const tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54596c9b560472b682eaf2487672e135809b7583", "html_url": "https://github.com/rust-lang/rust/commit/54596c9b560472b682eaf2487672e135809b7583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54596c9b560472b682eaf2487672e135809b7583/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85b5ce264324c75eb4c67849bc42de5526ed9208", "url": "https://api.github.com/repos/rust-lang/rust/commits/85b5ce264324c75eb4c67849bc42de5526ed9208", "html_url": "https://github.com/rust-lang/rust/commit/85b5ce264324c75eb4c67849bc42de5526ed9208"}], "stats": {"total": 80, "additions": 55, "deletions": 25}, "files": [{"sha": "43ff90d234cb7e86266667297e188623cbf425b6", "filename": "src/test/ui/feature-gate-inline_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Ffeature-gate-inline_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Ffeature-gate-inline_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-inline_const.rs?ref=54596c9b560472b682eaf2487672e135809b7583", "patch": "@@ -1,6 +1,6 @@\n fn main() {\n     let _ = const {\n-        //~^ ERROR expected expression, found keyword `const`\n+        //~^ ERROR inline-const is experimental [E0658]\n         true\n     };\n }"}, {"sha": "be2f567155c3dc290c95dbddbc101b54b181fb7f", "filename": "src/test/ui/feature-gate-inline_const.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Ffeature-gate-inline_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Ffeature-gate-inline_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-inline_const.stderr?ref=54596c9b560472b682eaf2487672e135809b7583", "patch": "@@ -1,8 +1,12 @@\n-error: expected expression, found keyword `const`\n+error[E0658]: inline-const is experimental\n   --> $DIR/feature-gate-inline_const.rs:2:13\n    |\n LL |     let _ = const {\n-   |             ^^^^^ expected expression\n+   |             ^^^^^\n+   |\n+   = note: see issue #76001 <https://github.com/rust-lang/rust/issues/76001> for more information\n+   = help: add `#![feature(inline_const)]` to the crate attributes to enable\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "8a92cdbc0f9811975808fa07199033501016a27c", "filename": "src/test/ui/inline-const/const-expr-array-init.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-array-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-array-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-array-init.rs?ref=54596c9b560472b682eaf2487672e135809b7583", "patch": "@@ -0,0 +1,9 @@\n+// build-pass\n+\n+#![feature(inline_const)]\n+\n+use std::cell::Cell;\n+\n+fn main() {\n+    let _x = [const { Cell::new(0) }; 20];\n+}"}, {"sha": "9349cee62d696f8543367bd6532061d7811c6cde", "filename": "src/test/ui/inline-const/const-expr-basic.rs", "status": "renamed", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-basic.rs?ref=54596c9b560472b682eaf2487672e135809b7583", "patch": "@@ -1,5 +1,4 @@\n-// check-pass\n-// compile-flags: -Z parse-only\n+// run-pass\n \n #![feature(inline_const)]\n fn foo() -> i32 {\n@@ -8,3 +7,7 @@ fn foo() -> i32 {\n         x / 3\n     }\n }\n+\n+fn main() {\n+    assert_eq!(5, foo());\n+}", "previous_filename": "src/test/ui/parser/inline_const/const_expr_parses.rs"}, {"sha": "a54d879f69d748134340cda1d6506f2072ed6848", "filename": "src/test/ui/inline-const/const-expr-reference.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-expr-reference.rs?ref=54596c9b560472b682eaf2487672e135809b7583", "patch": "@@ -0,0 +1,14 @@\n+// run-pass\n+\n+#![feature(inline_const)]\n+\n+const fn bar() -> i32 {\n+    const {\n+        2 + 3\n+    }\n+}\n+\n+fn main() {\n+    let x: &'static i32 = &const{bar()};\n+    assert_eq!(&5, x);\n+}"}, {"sha": "d4761398d7320a19b5ecea493c2190a5b21c493f", "filename": "src/test/ui/inline-const/const-match-pat.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54596c9b560472b682eaf2487672e135809b7583/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat.rs?ref=54596c9b560472b682eaf2487672e135809b7583", "patch": "@@ -0,0 +1,20 @@\n+// run-pass\n+\n+#![feature(inline_const)]\n+const MMIO_BIT1: u8 = 4;\n+const MMIO_BIT2: u8 = 5;\n+\n+fn main() {\n+    let s = match read_mmio() {\n+        0 => \"FOO\",\n+        const { 1 << MMIO_BIT1 } => \"BAR\",\n+        const { 1 << MMIO_BIT2 } => \"BAZ\",\n+        _ => unreachable!(),\n+    };\n+\n+    assert_eq!(\"BAZ\", s);\n+}\n+\n+fn read_mmio() -> i32 {\n+    1 << 5\n+}"}, {"sha": "97b05b0a1f210bef61662191a33a4f627931f772", "filename": "src/test/ui/parser/inline_const/const_match_pat_parses.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/85b5ce264324c75eb4c67849bc42de5526ed9208/src%2Ftest%2Fui%2Fparser%2Finline_const%2Fconst_match_pat_parses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b5ce264324c75eb4c67849bc42de5526ed9208/src%2Ftest%2Fui%2Fparser%2Finline_const%2Fconst_match_pat_parses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finline_const%2Fconst_match_pat_parses.rs?ref=85b5ce264324c75eb4c67849bc42de5526ed9208", "patch": "@@ -1,20 +0,0 @@\n-// check-pass\n-// compile-flags: -Z parse-only\n-\n-#![feature(inline_const)]\n-const MMIO_BIT1: u8 = 4;\n-const MMIO_BIT2: u8 = 5;\n-\n-fn main() {\n-    match read_mmio() {\n-        0 => {}\n-        const { 1 << MMIO_BIT1 } => println!(\"FOO\"),\n-        const { 1 << MMIO_BIT2 } => println!(\"BAR\"),\n-\n-        _ => unreachable!(),\n-    }\n-}\n-\n-fn read_mmio() -> u8 {\n-    1 << 5\n-}"}]}