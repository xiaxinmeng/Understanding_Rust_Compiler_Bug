{"sha": "a2d55d70c4c6ef24e114a48864c9483ed92687f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZDU1ZDcwYzRjNmVmMjRlMTE0YTQ4ODY0Yzk0ODNlZDkyNjg3Zjc=", "commit": {"author": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-31T10:57:40Z"}, "committer": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-31T10:57:40Z"}, "message": "Add an extra example to the two methods", "tree": {"sha": "65f67e0c3e75e725dcceb3f270bc82ca8c4c89eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65f67e0c3e75e725dcceb3f270bc82ca8c4c89eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2d55d70c4c6ef24e114a48864c9483ed92687f7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEAUNXpSBlykwfjB4xkq2k6TXnH6QFAl/trqQACgkQkq2k6TXn\nH6T0og/9HeriudUjesU7M9A+mNYK+mhyFw2kgPMCazJoq1nBYuy9fMvUKYAC6HYc\n5RZu36fwK45GvgL0hHBsckuiSzusDtzZEYLahkGLMNrRqskeVC6Eo6aeYGHm+gc4\nLOx0lNg/giR21Ab4/oYKoDiNLxyh4sM4MOgky/ub41vswTr5253t7KxxHAhzX4DR\nSCwtfAw+OT3hW6U36qXzlS0Dfil+r2OtMHTZ5JIr4whhyx6TwvfheyPeVoZ5O5sS\nzynuGTqV9+Qxr767Ri7+R9qKSYQUvogaX5sxRrEg8wX9V3IxG+6bQo35dDhl8xuy\nY8/OSbjGYLFEE1C0F33+N2OtlyuC09CgEfZAGxp3xNDN0VtquR00joDgt0IxWtPK\nyGyISi3JhfhPEyJL+QoaN8xdli7Y7gcTysRUmU4kw/QU5z0/KPeg25bxUgcCCke9\ndMx/1bSrv78JU2Ym+eMQjDLy22RHS9cmD5qCvjvGhaqGweLl0xHHA0NZoFOJYRtb\n59OGHiSdt8RwH3i0KJULIKUw28O1JapTPzWuKH9arTZ6dcuUgrXm9Z6OkT9KiEtT\nFOrZoNSZj7eIXA9RbV0w7rElPcZP7kCXRDOJQcu47udczc+1daZwul8VnjXLbTow\ncrrbIhdI56Ddi9ltclc2Y10j7T0TswlsBfTLth+OfaJBUocLmzE=\n=pcyh\n-----END PGP SIGNATURE-----", "payload": "tree 65f67e0c3e75e725dcceb3f270bc82ca8c4c89eb\nparent b2a7076b10d69ede61092a62a9d5245f5077d184\nauthor Cl\u00e9ment Renault <clement@meilisearch.com> 1609412260 +0100\ncommitter Cl\u00e9ment Renault <clement@meilisearch.com> 1609412260 +0100\n\nAdd an extra example to the two methods\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d55d70c4c6ef24e114a48864c9483ed92687f7", "html_url": "https://github.com/rust-lang/rust/commit/a2d55d70c4c6ef24e114a48864c9483ed92687f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2d55d70c4c6ef24e114a48864c9483ed92687f7/comments", "author": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2a7076b10d69ede61092a62a9d5245f5077d184", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2a7076b10d69ede61092a62a9d5245f5077d184", "html_url": "https://github.com/rust-lang/rust/commit/b2a7076b10d69ede61092a62a9d5245f5077d184"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "b4dd057eef0f53313d712658b445bf536c161d1e", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a2d55d70c4c6ef24e114a48864c9483ed92687f7/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d55d70c4c6ef24e114a48864c9483ed92687f7/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=a2d55d70c4c6ef24e114a48864c9483ed92687f7", "patch": "@@ -1231,6 +1231,21 @@ impl<T> [T] {\n     /// assert_eq!(iter.next(), Some(&[2, 2, 2][..]));\n     /// assert_eq!(iter.next(), None);\n     /// ```\n+    ///\n+    /// This method can be used to extract the sorted subslices:\n+    ///\n+    /// ```\n+    /// #![feature(slice_group_by)]\n+    ///\n+    /// let slice = &[1, 1, 2, 3, 2, 3, 2, 3, 4];\n+    ///\n+    /// let mut iter = slice.group_by(|a, b| a <= b);\n+    ///\n+    /// assert_eq!(iter.next(), Some(&[1, 1, 2, 3][..]));\n+    /// assert_eq!(iter.next(), Some(&[2, 3][..]));\n+    /// assert_eq!(iter.next(), Some(&[2, 3, 4][..]));\n+    /// assert_eq!(iter.next(), None);\n+    /// ```\n     #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n     #[inline]\n     pub fn group_by<F>(&self, pred: F) -> GroupBy<'_, T, F>\n@@ -1261,6 +1276,21 @@ impl<T> [T] {\n     /// assert_eq!(iter.next(), Some(&mut [2, 2, 2][..]));\n     /// assert_eq!(iter.next(), None);\n     /// ```\n+    ///\n+    /// This method can be used to extract the sorted subslices:\n+    ///\n+    /// ```\n+    /// #![feature(slice_group_by)]\n+    ///\n+    /// let slice = &mut [1, 1, 2, 3, 2, 3, 2, 3, 4];\n+    ///\n+    /// let mut iter = slice.group_by_mut(|a, b| a <= b);\n+    ///\n+    /// assert_eq!(iter.next(), Some(&mut [1, 1, 2, 3][..]));\n+    /// assert_eq!(iter.next(), Some(&mut [2, 3][..]));\n+    /// assert_eq!(iter.next(), Some(&mut [2, 3, 4][..]));\n+    /// assert_eq!(iter.next(), None);\n+    /// ```\n     #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n     #[inline]\n     pub fn group_by_mut<F>(&mut self, pred: F) -> GroupByMut<'_, T, F>"}]}