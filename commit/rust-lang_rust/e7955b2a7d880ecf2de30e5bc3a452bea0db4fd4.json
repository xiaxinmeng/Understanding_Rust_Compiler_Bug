{"sha": "e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3OTU1YjJhN2Q4ODBlY2YyZGUzMGU1YmMzYTQ1MmJlYTBkYjRmZDQ=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-30T18:00:11Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-30T18:06:26Z"}, "message": "std::iterator: Add tests for .next_back() on Zip and Enumerate", "tree": {"sha": "ab702cab0418e49159eea21a0ae1a09d4a298f31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab702cab0418e49159eea21a0ae1a09d4a298f31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4", "html_url": "https://github.com/rust-lang/rust/commit/e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4/comments", "author": null, "committer": null, "parents": [{"sha": "ed607dd24aa1e041e4077b356e6bfa88c56b7fcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed607dd24aa1e041e4077b356e6bfa88c56b7fcf", "html_url": "https://github.com/rust-lang/rust/commit/ed607dd24aa1e041e4077b356e6bfa88c56b7fcf"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "e2ac9f0339575cec5b4028ab97108d0fd584c8e6", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=e7955b2a7d880ecf2de30e5bc3a452bea0db4fd4", "patch": "@@ -2273,6 +2273,33 @@ mod tests {\n         assert_eq!(it.next(), None);\n     }\n \n+    #[test]\n+    fn test_double_ended_enumerate() {\n+        let xs = [1, 2, 3, 4, 5, 6];\n+        let mut it = xs.iter().map(|&x| x).enumerate();\n+        assert_eq!(it.next(), Some((0, 1)));\n+        assert_eq!(it.next(), Some((1, 2)));\n+        assert_eq!(it.next_back(), Some((5, 6)));\n+        assert_eq!(it.next_back(), Some((4, 5)));\n+        assert_eq!(it.next_back(), Some((3, 4)));\n+        assert_eq!(it.next_back(), Some((2, 3)));\n+        assert_eq!(it.next(), None);\n+    }\n+\n+    #[test]\n+    fn test_double_ended_zip() {\n+        let xs = [1, 2, 3, 4, 5, 6];\n+        let ys = [1, 2, 3, 7];\n+        let a = xs.iter().map(|&x| x);\n+        let b = ys.iter().map(|&x| x);\n+        let mut it = a.zip(b);\n+        assert_eq!(it.next(), Some((1, 1)));\n+        assert_eq!(it.next(), Some((2, 2)));\n+        assert_eq!(it.next_back(), Some((4, 7)));\n+        assert_eq!(it.next_back(), Some((3, 3)));\n+        assert_eq!(it.next(), None);\n+    }\n+\n     #[test]\n     fn test_double_ended_filter() {\n         let xs = [1, 2, 3, 4, 5, 6];"}]}