{"sha": "a1135cc9463437ed806876b2406379c25321e7d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMTM1Y2M5NDYzNDM3ZWQ4MDY4NzZiMjQwNjM3OWMyNTMyMWU3ZDM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-14T20:07:35Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-15T18:33:52Z"}, "message": "Remove newtype for qualifs in `rustc_metadata`\n\nWe have a proper type for these now, so the wrapper is no longer\nnecessary.", "tree": {"sha": "d8ddcee22f4fb8271ff889d2abf9efdd7a588749", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8ddcee22f4fb8271ff889d2abf9efdd7a588749"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1135cc9463437ed806876b2406379c25321e7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1135cc9463437ed806876b2406379c25321e7d3", "html_url": "https://github.com/rust-lang/rust/commit/a1135cc9463437ed806876b2406379c25321e7d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1135cc9463437ed806876b2406379c25321e7d3/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea95e94f518ccdd84483e59dfbb5db31a83fe016", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea95e94f518ccdd84483e59dfbb5db31a83fe016", "html_url": "https://github.com/rust-lang/rust/commit/ea95e94f518ccdd84483e59dfbb5db31a83fe016"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "fc0a0010240ad9b165d0598956dfb0c08e3956a8", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1135cc9463437ed806876b2406379c25321e7d3/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1135cc9463437ed806876b2406379c25321e7d3/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=a1135cc9463437ed806876b2406379c25321e7d3", "patch": "@@ -957,7 +957,7 @@ impl<'a, 'tcx> CrateMetadata {\n             EntryKind::Const(qualif, _) |\n             EntryKind::AssocConst(AssocContainer::ImplDefault, qualif, _) |\n             EntryKind::AssocConst(AssocContainer::ImplFinal, qualif, _) => {\n-                qualif.mir\n+                qualif\n             }\n             _ => bug!(),\n         }"}, {"sha": "483915f654dddd59810e95b9a127d8d78133e05e", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a1135cc9463437ed806876b2406379c25321e7d3/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1135cc9463437ed806876b2406379c25321e7d3/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=a1135cc9463437ed806876b2406379c25321e7d3", "patch": "@@ -877,7 +877,7 @@ impl EncodeContext<'tcx> {\n \n                 EntryKind::AssocConst(\n                     container,\n-                    ConstQualif { mir: Default::default() },\n+                    Default::default(),\n                     rendered_const,\n                 )\n             }\n@@ -959,10 +959,11 @@ impl EncodeContext<'tcx> {\n         record!(self.per_def.kind[def_id] <- match impl_item.kind {\n             ty::AssocKind::Const => {\n                 if let hir::ImplItemKind::Const(_, body_id) = ast_item.kind {\n-                    let mir = self.tcx.at(ast_item.span).mir_const_qualif(def_id);\n+                    let qualifs = self.tcx.at(ast_item.span).mir_const_qualif(def_id);\n \n-                    EntryKind::AssocConst(container,\n-                        ConstQualif { mir },\n+                    EntryKind::AssocConst(\n+                        container,\n+                        qualifs,\n                         self.encode_rendered_const_for_body(body_id))\n                 } else {\n                     bug!()\n@@ -1093,9 +1094,9 @@ impl EncodeContext<'tcx> {\n             hir::ItemKind::Static(_, hir::Mutability::Mutable, _) => EntryKind::MutStatic,\n             hir::ItemKind::Static(_, hir::Mutability::Immutable, _) => EntryKind::ImmStatic,\n             hir::ItemKind::Const(_, body_id) => {\n-                let mir = self.tcx.at(item.span).mir_const_qualif(def_id);\n+                let qualifs = self.tcx.at(item.span).mir_const_qualif(def_id);\n                 EntryKind::Const(\n-                    ConstQualif { mir },\n+                    qualifs,\n                     self.encode_rendered_const_for_body(body_id)\n                 )\n             }\n@@ -1372,9 +1373,9 @@ impl EncodeContext<'tcx> {\n         let id = self.tcx.hir().as_local_hir_id(def_id).unwrap();\n         let body_id = self.tcx.hir().body_owned_by(id);\n         let const_data = self.encode_rendered_const_for_body(body_id);\n-        let mir = self.tcx.mir_const_qualif(def_id);\n+        let qualifs = self.tcx.mir_const_qualif(def_id);\n \n-        record!(self.per_def.kind[def_id] <- EntryKind::Const(ConstQualif { mir }, const_data));\n+        record!(self.per_def.kind[def_id] <- EntryKind::Const(qualifs, const_data));\n         record!(self.per_def.visibility[def_id] <- ty::Visibility::Public);\n         record!(self.per_def.span[def_id] <- self.tcx.def_span(def_id));\n         self.encode_item_type(def_id);"}, {"sha": "850ee5afbc808479fb8685d2b1d42ae0e9826c43", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1135cc9463437ed806876b2406379c25321e7d3/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1135cc9463437ed806876b2406379c25321e7d3/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=a1135cc9463437ed806876b2406379c25321e7d3", "patch": "@@ -260,7 +260,7 @@ crate struct LazyPerDefTables<'tcx> {\n \n #[derive(Copy, Clone, RustcEncodable, RustcDecodable)]\n enum EntryKind<'tcx> {\n-    Const(ConstQualif, Lazy<RenderedConst>),\n+    Const(mir::ConstQualifs, Lazy<RenderedConst>),\n     ImmStatic,\n     MutStatic,\n     ForeignImmStatic,\n@@ -288,16 +288,10 @@ enum EntryKind<'tcx> {\n     Method(Lazy<MethodData>),\n     AssocType(AssocContainer),\n     AssocOpaqueTy(AssocContainer),\n-    AssocConst(AssocContainer, ConstQualif, Lazy<RenderedConst>),\n+    AssocConst(AssocContainer, mir::ConstQualifs, Lazy<RenderedConst>),\n     TraitAlias,\n }\n \n-/// Additional data for EntryKind::Const and EntryKind::AssocConst\n-#[derive(Clone, Copy, RustcEncodable, RustcDecodable)]\n-struct ConstQualif {\n-    mir: mir::ConstQualifs,\n-}\n-\n /// Contains a constant which has been rendered to a String.\n /// Used by rustdoc.\n #[derive(RustcEncodable, RustcDecodable)]"}]}