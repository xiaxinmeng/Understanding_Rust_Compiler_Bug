{"sha": "0c8a009dc993e8bad278bacba425f3daf3edfa96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjOGEwMDlkYzk5M2U4YmFkMjc4YmFjYmE0MjVmM2RhZjNlZGZhOTY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-21T23:35:47Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-21T23:35:47Z"}, "message": "libcore: fix build breakage on win32 stat.", "tree": {"sha": "69116985f72ebb175acb6df2039f928b7fcb1dbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69116985f72ebb175acb6df2039f928b7fcb1dbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c8a009dc993e8bad278bacba425f3daf3edfa96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c8a009dc993e8bad278bacba425f3daf3edfa96", "html_url": "https://github.com/rust-lang/rust/commit/0c8a009dc993e8bad278bacba425f3daf3edfa96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c8a009dc993e8bad278bacba425f3daf3edfa96/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef833d41014481acdfc19bfd50f27f662dba8a2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef833d41014481acdfc19bfd50f27f662dba8a2b", "html_url": "https://github.com/rust-lang/rust/commit/ef833d41014481acdfc19bfd50f27f662dba8a2b"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "03ff6ac0be91e71cefbce680a5d0997b9f5ee597", "filename": "src/libcore/libc.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0c8a009dc993e8bad278bacba425f3daf3edfa96/src%2Flibcore%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c8a009dc993e8bad278bacba425f3daf3edfa96/src%2Flibcore%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flibc.rs?ref=0c8a009dc993e8bad278bacba425f3daf3edfa96", "patch": "@@ -13,10 +13,17 @@\n * * ISO 9945:2001 / IEEE 1003.1-2001 ('POSIX:2001', 'SUSv3').\n * * ISO 9945:2008 / IEEE 1003.1-2008 ('POSIX:2008', 'SUSv4').\n *\n+* Note that any reference to the 1996 revision of POSIX, or any revs\n+* between 1990 (when '88 was approved at ISO) and 2001 (when the next\n+* actual revision-revision happened), are merely additions of other\n+* chapters (1b and 1c) outside the core interfaces.\n+*\n * Despite having several names each, these are *reasonably* coherent\n * point-in-time, list-of-definition sorts of specs. You can get each under a\n * variety of names but will wind up with the same definition in each case.\n *\n+* See standards(7) in linux-manpages for more details.\n+*\n * Our interface to these libraries is complicated by the non-universality of\n * conformance to any of them. About the only thing universally supported is\n * the first (C95), beyond that definitions quickly become absent on various\n@@ -124,7 +131,7 @@ pub use open, creat;\n pub use access, chdir, close, dup, dup2, execv, execve, execvp, getcwd,\n getpid, isatty, lseek, pipe, read, rmdir, unlink, write;\n \n-pub use fstat, lstat, stat;\n+pub use fstat, stat;\n \n \n mod types {\n@@ -392,6 +399,8 @@ mod types {\n     pub mod os {\n         pub mod common {\n             pub mod posix01 {\n+                // Note: this is the struct called stat64 in win32. Not stat,\n+                // nor stati64.\n                 pub struct stat {\n                     st_dev: dev_t,\n                     st_ino: ino_t,\n@@ -403,7 +412,7 @@ mod types {\n                     st_size: int64_t,\n                     st_atime: time64_t,\n                     st_mtime: time64_t,\n-                    st_c_time: time64_t,\n+                    st_ctime: time64_t,\n                 }\n             }\n         }\n@@ -479,6 +488,8 @@ mod types {\n                 pub type PBOOL = *mut BOOL;\n                 pub type WCHAR = wchar_t;\n                 pub type WORD = u16;\n+\n+                pub type time64_t = i64;\n             }\n         }\n     }\n@@ -1025,6 +1036,12 @@ pub mod funcs {\n \n             #[link_name = \"_mkdir\"]\n             fn mkdir(path: *c_char) -> c_int;\n+\n+            #[link_name = \"_fstat64\"]\n+            fn fstat(fildes: c_int, buf: *mut stat) -> c_int;\n+\n+            #[link_name = \"_stat64\"]\n+            fn stat(path: *c_char, buf: *mut stat) -> c_int;\n         }\n \n         #[nolink]"}, {"sha": "8b5e383ed946f69f0f91267b33c7e4bfab28ea28", "filename": "src/libcore/path.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0c8a009dc993e8bad278bacba425f3daf3edfa96/src%2Flibcore%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c8a009dc993e8bad278bacba425f3daf3edfa96/src%2Flibcore%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpath.rs?ref=0c8a009dc993e8bad278bacba425f3daf3edfa96", "patch": "@@ -190,7 +190,7 @@ mod stat {\n     }\n }\n \n-#[cfg(target_os = \"windows\")]\n+#[cfg(target_os = \"win32\")]\n mod stat {\n     pub mod arch {\n         pub fn default_stat() -> libc::stat {\n@@ -222,6 +222,7 @@ impl Path {\n         }\n     }\n \n+    #[cfg(unix)]\n     fn lstat(&self) -> Option<libc::stat> {\n          do str::as_c_str(self.to_str()) |buf| {\n             let mut st = stat::arch::default_stat();"}]}