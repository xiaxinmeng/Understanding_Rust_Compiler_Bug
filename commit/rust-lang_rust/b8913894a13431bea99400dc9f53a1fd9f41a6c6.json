{"sha": "b8913894a13431bea99400dc9f53a1fd9f41a6c6", "node_id": "C_kwDOAAsO6NoAKGI4OTEzODk0YTEzNDMxYmVhOTk0MDBkYzlmNTNhMWZkOWY0MWE2YzY", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-12-15T10:25:47Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-12-15T10:25:47Z"}, "message": "Expand `is_clone_like` comment", "tree": {"sha": "fa0c4f45b7d51dc4d4d3b158e78fbcc59d9c56eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa0c4f45b7d51dc4d4d3b158e78fbcc59d9c56eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8913894a13431bea99400dc9f53a1fd9f41a6c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8913894a13431bea99400dc9f53a1fd9f41a6c6", "html_url": "https://github.com/rust-lang/rust/commit/b8913894a13431bea99400dc9f53a1fd9f41a6c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8913894a13431bea99400dc9f53a1fd9f41a6c6/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef", "html_url": "https://github.com/rust-lang/rust/commit/3beb6b1908e03bbf645ecdac7d56a772b5d8a8ef"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "90492ffda3cc6e626706dde8ee340b459ff7bd38", "filename": "clippy_lints/src/methods/implicit_clone.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b8913894a13431bea99400dc9f53a1fd9f41a6c6/clippy_lints%2Fsrc%2Fmethods%2Fimplicit_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8913894a13431bea99400dc9f53a1fd9f41a6c6/clippy_lints%2Fsrc%2Fmethods%2Fimplicit_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fimplicit_clone.rs?ref=b8913894a13431bea99400dc9f53a1fd9f41a6c6", "patch": "@@ -32,6 +32,9 @@ pub fn check(cx: &LateContext<'_>, method_name: &str, expr: &hir::Expr<'_>, recv\n }\n \n /// Returns true if the named method can be used to clone the receiver.\n+/// Note that `to_string` is not flagged by `implicit_clone`. So other lints that call\n+/// `is_clone_like` and that do flag `to_string` must handle it separately. See, e.g.,\n+/// `is_to_owned_like` in `unnecessary_to_owned.rs`.\n pub fn is_clone_like(cx: &LateContext<'_>, method_name: &str, method_def_id: hir::def_id::DefId) -> bool {\n     match method_name {\n         \"to_os_string\" => is_diag_item_method(cx, method_def_id, sym::OsStr),"}]}