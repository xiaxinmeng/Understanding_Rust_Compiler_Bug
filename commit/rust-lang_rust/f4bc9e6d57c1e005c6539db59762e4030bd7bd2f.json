{"sha": "f4bc9e6d57c1e005c6539db59762e4030bd7bd2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YmM5ZTZkNTdjMWUwMDVjNjUzOWRiNTk3NjJlNDAzMGJkN2JkMmY=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T19:39:45Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-01-07T22:22:01Z"}, "message": "fmt: simplify parse_flags", "tree": {"sha": "d9c50bcfdc8fe1e77c5624b67cac592436604dc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9c50bcfdc8fe1e77c5624b67cac592436604dc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f", "html_url": "https://github.com/rust-lang/rust/commit/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51b141e3e499558ddfece1f00dd6714f442c2404", "url": "https://api.github.com/repos/rust-lang/rust/commits/51b141e3e499558ddfece1f00dd6714f442c2404", "html_url": "https://github.com/rust-lang/rust/commit/51b141e3e499558ddfece1f00dd6714f442c2404"}], "stats": {"total": 41, "additions": 17, "deletions": 24}, "files": [{"sha": "25e349f0dc321a24029d659505bbc9e9fce88020", "filename": "src/libcore/extfmt.rs", "status": "modified", "additions": 17, "deletions": 24, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f/src%2Flibcore%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bc9e6d57c1e005c6539db59762e4030bd7bd2f/src%2Flibcore%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fextfmt.rs?ref=f4bc9e6d57c1e005c6539db59762e4030bd7bd2f", "patch": "@@ -243,31 +243,24 @@ pub mod ct {\n     }\n     pub fn parse_flags(s: &str, i: uint, lim: uint) ->\n        Parsed<~[Flag]> {\n-        let noflags: ~[Flag] = ~[];\n-        if i >= lim { return Parsed::new(move noflags, i); }\n-\n-        fn more(f: Flag, s: &str, i: uint, lim: uint) ->\n-           Parsed<~[Flag]> {\n-            let next = parse_flags(s, i + 1u, lim);\n-            let rest = copy next.val;\n-            let j = next.next;\n-            let curr: ~[Flag] = ~[f];\n-            return Parsed::new(vec::append(move curr, rest), j);\n+        let mut i = i;\n+        let mut flags = ~[];\n+\n+        while i < lim {\n+            let f = match s[i] {\n+                '-' as u8 => FlagLeftJustify,\n+                '0' as u8 => FlagLeftZeroPad,\n+                ' ' as u8 => FlagSpaceForSign,\n+                '+' as u8 => FlagSignAlways,\n+                '#' as u8 => FlagAlternate,\n+                _ => break\n+            };\n+\n+            flags.push(f);\n+            i += 1;\n         }\n-        // Unfortunate, but because s is borrowed, can't use a closure\n-     //   fn more(f: Flag, s: &str) { more_(f, s, i, lim); }\n-        let f = s[i];\n-        return if f == '-' as u8 {\n-                more(FlagLeftJustify, s, i, lim)\n-            } else if f == '0' as u8 {\n-                more(FlagLeftZeroPad, s, i, lim)\n-            } else if f == ' ' as u8 {\n-                more(FlagSpaceForSign, s, i, lim)\n-            } else if f == '+' as u8 {\n-                more(FlagSignAlways, s, i, lim)\n-            } else if f == '#' as u8 {\n-                more(FlagAlternate, s, i, lim)\n-            } else { Parsed::new(move noflags, i) };\n+\n+        Parsed::new(flags, i)\n     }\n         pub fn parse_count(s: &str, i: uint, lim: uint)\n         -> Parsed<Count> {"}]}