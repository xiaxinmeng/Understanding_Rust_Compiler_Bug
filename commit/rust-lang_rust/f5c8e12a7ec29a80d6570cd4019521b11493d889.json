{"sha": "f5c8e12a7ec29a80d6570cd4019521b11493d889", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YzhlMTJhN2VjMjlhODBkNjU3MGNkNDAxOTUyMWIxMTQ5M2Q4ODk=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-06T04:55:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-06T04:55:07Z"}, "message": "Rollup merge of #65123 - Centril:mac-invoc-in-mut-pat, r=estebank\n\nAccount for macro invocation in `let mut $pat` diagnostic.\n\nFixes https://github.com/rust-lang/rust/issues/65122.\n\nr? @estebank", "tree": {"sha": "6286bc16e31edf6d3a519d1f65ea5e23d0be9a41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6286bc16e31edf6d3a519d1f65ea5e23d0be9a41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5c8e12a7ec29a80d6570cd4019521b11493d889", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdmXOrCRBK7hj4Ov3rIwAAdHIIAGohBFjpUnhYt39SnRcl8frA\nIB4YBhjeKa3PU7EpPhGyImejbXqIfPtS0PDIQGubWXDEOLhiIgopX/AeJWpczOHQ\n8laLFfzSdY+YlbW84cXE0N+ucgP+dWW9/ChI+9EwRXXajV25OrvGUJ/XKxawZVBG\nNpd7tYePaK40XlOr99iBHEZKpOv8UVz7zo5GdKjntRyWyHwiYYNugMuHUs2I/yxh\nJWr6ihkfyLRhoO00OKqEdCFsTg7DYSnhT2Xk8zHB5Gf61iIihahRkpxnqoyayci/\nMQeIw88+e6poLJMISp5d15oIoC4tg4xT9cADvJuo+12BoWJt3M2iEWTX5AM8aSU=\n=Citv\n-----END PGP SIGNATURE-----\n", "payload": "tree 6286bc16e31edf6d3a519d1f65ea5e23d0be9a41\nparent a1eac17e70fa49fd4a1051630b6b303c33e4db50\nparent 5f94a53d1a4e03787886b8bca750566d80255f85\nauthor Tyler Mandry <tmandry@gmail.com> 1570337707 -0700\ncommitter GitHub <noreply@github.com> 1570337707 -0700\n\nRollup merge of #65123 - Centril:mac-invoc-in-mut-pat, r=estebank\n\nAccount for macro invocation in `let mut $pat` diagnostic.\n\nFixes https://github.com/rust-lang/rust/issues/65122.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c8e12a7ec29a80d6570cd4019521b11493d889", "html_url": "https://github.com/rust-lang/rust/commit/f5c8e12a7ec29a80d6570cd4019521b11493d889", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5c8e12a7ec29a80d6570cd4019521b11493d889/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1eac17e70fa49fd4a1051630b6b303c33e4db50", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1eac17e70fa49fd4a1051630b6b303c33e4db50", "html_url": "https://github.com/rust-lang/rust/commit/a1eac17e70fa49fd4a1051630b6b303c33e4db50"}, {"sha": "5f94a53d1a4e03787886b8bca750566d80255f85", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f94a53d1a4e03787886b8bca750566d80255f85", "html_url": "https://github.com/rust-lang/rust/commit/5f94a53d1a4e03787886b8bca750566d80255f85"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "48f9e30161031948dcadbce9e40bd106e8a3aaea", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5c8e12a7ec29a80d6570cd4019521b11493d889/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c8e12a7ec29a80d6570cd4019521b11493d889/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=f5c8e12a7ec29a80d6570cd4019521b11493d889", "patch": "@@ -4,7 +4,7 @@ use crate::{maybe_recover_from_interpolated_ty_qpath, maybe_whole};\n use crate::ptr::P;\n use crate::ast::{self, Attribute, Pat, PatKind, FieldPat, RangeEnd, RangeSyntax, Mac};\n use crate::ast::{BindingMode, Ident, Mutability, Path, QSelf, Expr, ExprKind};\n-use crate::mut_visit::{noop_visit_pat, MutVisitor};\n+use crate::mut_visit::{noop_visit_pat, noop_visit_mac, MutVisitor};\n use crate::parse::token::{self};\n use crate::print::pprust;\n use crate::source_map::{respan, Span, Spanned};\n@@ -481,6 +481,10 @@ impl<'a> Parser<'a> {\n     fn make_all_value_bindings_mutable(pat: &mut P<Pat>) -> bool {\n         struct AddMut(bool);\n         impl MutVisitor for AddMut {\n+            fn visit_mac(&mut self, mac: &mut Mac) {\n+                noop_visit_mac(mac, self);\n+            }\n+\n             fn visit_pat(&mut self, pat: &mut P<Pat>) {\n                 if let PatKind::Ident(BindingMode::ByValue(ref mut m @ Mutability::Immutable), ..)\n                     = pat.kind"}, {"sha": "97a405b6999c3e779427365e933f4547dba106d4", "filename": "src/test/ui/parser/issue-65122-mac-invoc-in-mut-patterns.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f5c8e12a7ec29a80d6570cd4019521b11493d889/src%2Ftest%2Fui%2Fparser%2Fissue-65122-mac-invoc-in-mut-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c8e12a7ec29a80d6570cd4019521b11493d889/src%2Ftest%2Fui%2Fparser%2Fissue-65122-mac-invoc-in-mut-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-65122-mac-invoc-in-mut-patterns.rs?ref=f5c8e12a7ec29a80d6570cd4019521b11493d889", "patch": "@@ -0,0 +1,26 @@\n+// Regression test; used to ICE with 'visit_mac disabled by default' due to a\n+// `MutVisitor` in `fn make_all_value_bindings_mutable` (`parse/parser/pat.rs`).\n+\n+macro_rules! mac1 {\n+    ($eval:expr) => {\n+        let mut $eval = ();\n+        //~^ ERROR `mut` must be followed by a named binding\n+    };\n+}\n+\n+macro_rules! mac2 {\n+    ($eval:pat) => {\n+        let mut $eval = ();\n+        //~^ ERROR `mut` must be followed by a named binding\n+        //~| ERROR expected identifier, found `does_not_exist!()`\n+    };\n+}\n+\n+fn foo() {\n+    mac1! { does_not_exist!() }\n+    //~^ ERROR cannot find macro `does_not_exist` in this scope\n+    mac2! { does_not_exist!() }\n+    //~^ ERROR cannot find macro `does_not_exist` in this scope\n+}\n+\n+fn main() {}"}, {"sha": "dd193d6a86ebdfbe1d2bd23b29cfdd22caab7dea", "filename": "src/test/ui/parser/issue-65122-mac-invoc-in-mut-patterns.stderr", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f5c8e12a7ec29a80d6570cd4019521b11493d889/src%2Ftest%2Fui%2Fparser%2Fissue-65122-mac-invoc-in-mut-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5c8e12a7ec29a80d6570cd4019521b11493d889/src%2Ftest%2Fui%2Fparser%2Fissue-65122-mac-invoc-in-mut-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-65122-mac-invoc-in-mut-patterns.stderr?ref=f5c8e12a7ec29a80d6570cd4019521b11493d889", "patch": "@@ -0,0 +1,45 @@\n+error: `mut` must be followed by a named binding\n+  --> $DIR/issue-65122-mac-invoc-in-mut-patterns.rs:6:13\n+   |\n+LL |         let mut $eval = ();\n+   |             ^^^^^^^^^ help: remove the `mut` prefix: `does_not_exist!()`\n+...\n+LL |     mac1! { does_not_exist!() }\n+   |     --------------------------- in this macro invocation\n+   |\n+   = note: `mut` may be followed by `variable` and `variable @ pattern`\n+\n+error: expected identifier, found `does_not_exist!()`\n+  --> $DIR/issue-65122-mac-invoc-in-mut-patterns.rs:13:17\n+   |\n+LL |         let mut $eval = ();\n+   |                 ^^^^^ expected identifier\n+...\n+LL |     mac2! { does_not_exist!() }\n+   |     --------------------------- in this macro invocation\n+\n+error: `mut` must be followed by a named binding\n+  --> $DIR/issue-65122-mac-invoc-in-mut-patterns.rs:13:13\n+   |\n+LL |         let mut $eval = ();\n+   |             ^^^ help: remove the `mut` prefix: `does_not_exist!()`\n+...\n+LL |     mac2! { does_not_exist!() }\n+   |     --------------------------- in this macro invocation\n+   |\n+   = note: `mut` may be followed by `variable` and `variable @ pattern`\n+\n+error: cannot find macro `does_not_exist` in this scope\n+  --> $DIR/issue-65122-mac-invoc-in-mut-patterns.rs:20:13\n+   |\n+LL |     mac1! { does_not_exist!() }\n+   |             ^^^^^^^^^^^^^^\n+\n+error: cannot find macro `does_not_exist` in this scope\n+  --> $DIR/issue-65122-mac-invoc-in-mut-patterns.rs:22:13\n+   |\n+LL |     mac2! { does_not_exist!() }\n+   |             ^^^^^^^^^^^^^^\n+\n+error: aborting due to 5 previous errors\n+"}]}