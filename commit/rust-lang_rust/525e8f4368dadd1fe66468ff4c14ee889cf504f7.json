{"sha": "525e8f4368dadd1fe66468ff4c14ee889cf504f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNWU4ZjQzNjhkYWRkMWZlNjY0NjhmZjRjMTRlZTg4OWNmNTA0Zjc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-10T10:02:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-23T21:50:20Z"}, "message": "use MaybeUninit in core::slice::rotate\n\nCode by @japaric, I just split it into individual commits", "tree": {"sha": "44509e6facd1305ec5582be775e231522d911295", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44509e6facd1305ec5582be775e231522d911295"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/525e8f4368dadd1fe66468ff4c14ee889cf504f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/525e8f4368dadd1fe66468ff4c14ee889cf504f7", "html_url": "https://github.com/rust-lang/rust/commit/525e8f4368dadd1fe66468ff4c14ee889cf504f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/525e8f4368dadd1fe66468ff4c14ee889cf504f7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f950c2cbd522ed7a6da18a1e98b8ce46d80e1133", "url": "https://api.github.com/repos/rust-lang/rust/commits/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133", "html_url": "https://github.com/rust-lang/rust/commit/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "07153735300b89ccc376e472aac7f0bcbfb51f80", "filename": "src/libcore/slice/rotate.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/525e8f4368dadd1fe66468ff4c14ee889cf504f7/src%2Flibcore%2Fslice%2Frotate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/525e8f4368dadd1fe66468ff4c14ee889cf504f7/src%2Flibcore%2Fslice%2Frotate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Frotate.rs?ref=525e8f4368dadd1fe66468ff4c14ee889cf504f7", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use cmp;\n-use mem;\n+use mem::{self, MaybeUninit};\n use ptr;\n \n /// Rotation is much faster if it has access to a little bit of memory. This\n@@ -26,12 +26,6 @@ union RawArray<T> {\n }\n \n impl<T> RawArray<T> {\n-    fn new() -> Self {\n-        unsafe { mem::uninitialized() }\n-    }\n-    fn ptr(&self) -> *mut T {\n-        unsafe { &self.typed as *const T as *mut T }\n-    }\n     fn cap() -> usize {\n         if mem::size_of::<T>() == 0 {\n             usize::max_value()\n@@ -88,8 +82,8 @@ pub unsafe fn ptr_rotate<T>(mut left: usize, mid: *mut T, mut right: usize) {\n         }\n     }\n \n-    let rawarray = RawArray::new();\n-    let buf = rawarray.ptr();\n+    let mut rawarray = MaybeUninit::<RawArray<T>>::uninitialized();\n+    let buf = &mut (*rawarray.as_mut_ptr()).typed as *mut [T; 2] as *mut T;\n \n     let dim = mid.sub(left).add(right);\n     if left <= right {"}]}