{"sha": "3b5df014390dcef66cc35f968fe51e9558e6ca13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNWRmMDE0MzkwZGNlZjY2Y2MzNWY5NjhmZTUxZTk1NThlNmNhMTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-17T04:18:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-17T04:18:55Z"}, "message": "Auto merge of #87119 - jyn514:rustfmt-doc-private, r=Mark-Simulacrum\n\nDocument private items for rustfmt\n\nThis is possible now that https://github.com/rust-lang/rust/pull/73936 has been merged.", "tree": {"sha": "642e21f8d8f6da7b692123aeaed9898845cb75e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/642e21f8d8f6da7b692123aeaed9898845cb75e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b5df014390dcef66cc35f968fe51e9558e6ca13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b5df014390dcef66cc35f968fe51e9558e6ca13", "html_url": "https://github.com/rust-lang/rust/commit/3b5df014390dcef66cc35f968fe51e9558e6ca13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b5df014390dcef66cc35f968fe51e9558e6ca13/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a183141e2d0f0af7f12946ff1a81615fa35e8099", "url": "https://api.github.com/repos/rust-lang/rust/commits/a183141e2d0f0af7f12946ff1a81615fa35e8099", "html_url": "https://github.com/rust-lang/rust/commit/a183141e2d0f0af7f12946ff1a81615fa35e8099"}, {"sha": "6216b4ece4468b139d6a09d731ff402533f628c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6216b4ece4468b139d6a09d731ff402533f628c3", "html_url": "https://github.com/rust-lang/rust/commit/6216b4ece4468b139d6a09d731ff402533f628c3"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "c871411793073ee3c50f7fe0c42311510cbdfc27", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=3b5df014390dcef66cc35f968fe51e9558e6ca13", "patch": "@@ -619,7 +619,7 @@ impl Step for Rustc {\n }\n \n macro_rules! tool_doc {\n-    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?], binary=$bin:expr) => {\n+    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?] $(,)?) => {\n         #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n         pub struct $tool {\n             stage: u32,\n@@ -688,9 +688,7 @@ macro_rules! tool_doc {\n                     cargo.arg(\"-p\").arg($krate);\n                 )+\n \n-                if !$bin {\n-                    cargo.rustdocflag(\"--document-private-items\");\n-                }\n+                cargo.rustdocflag(\"--document-private-items\");\n                 cargo.rustdocflag(\"--enable-index-page\");\n                 cargo.rustdocflag(\"--show-type-layout\");\n                 cargo.rustdocflag(\"-Zunstable-options\");\n@@ -700,19 +698,12 @@ macro_rules! tool_doc {\n     }\n }\n \n-tool_doc!(\n-    Rustdoc,\n-    \"rustdoc-tool\",\n-    \"src/tools/rustdoc\",\n-    [\"rustdoc\", \"rustdoc-json-types\"],\n-    binary = false\n-);\n+tool_doc!(Rustdoc, \"rustdoc-tool\", \"src/tools/rustdoc\", [\"rustdoc\", \"rustdoc-json-types\"]);\n tool_doc!(\n     Rustfmt,\n     \"rustfmt-nightly\",\n     \"src/tools/rustfmt\",\n     [\"rustfmt-nightly\", \"rustfmt-config_proc_macro\"],\n-    binary = true\n );\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]"}, {"sha": "58a2b5e6aecf32fb0e1e67b98b4d1edda93238d9", "filename": "src/tools/rustfmt/src/comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Ftools%2Frustfmt%2Fsrc%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Ftools%2Frustfmt%2Fsrc%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fcomment.rs?ref=3b5df014390dcef66cc35f968fe51e9558e6ca13", "patch": "@@ -393,7 +393,7 @@ fn identify_comment(\n }\n \n /// Attributes for code blocks in rustdoc.\n-/// See https://doc.rust-lang.org/rustdoc/print.html#attributes\n+/// See <https://doc.rust-lang.org/rustdoc/print.html#attributes>.\n enum CodeBlockAttribute {\n     Rust,\n     Ignore,"}, {"sha": "c8ee590b6cc17b4a12499c67b8c27d0a54d284b5", "filename": "src/tools/rustfmt/src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Ftools%2Frustfmt%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Ftools%2Frustfmt%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fmacros.rs?ref=3b5df014390dcef66cc35f968fe51e9558e6ca13", "patch": "@@ -1417,7 +1417,7 @@ impl MacroBranch {\n     }\n }\n \n-/// Format `lazy_static!` from https://crates.io/crates/lazy_static.\n+/// Format `lazy_static!` from <https://crates.io/crates/lazy_static>.\n ///\n /// # Expected syntax\n ///"}, {"sha": "0501e76d2772725ad724f26e9374262ae4316a60", "filename": "src/tools/rustfmt/src/patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Ftools%2Frustfmt%2Fsrc%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5df014390dcef66cc35f968fe51e9558e6ca13/src%2Ftools%2Frustfmt%2Fsrc%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fpatterns.rs?ref=3b5df014390dcef66cc35f968fe51e9558e6ca13", "patch": "@@ -22,11 +22,11 @@ use crate::utils::{format_mutability, mk_sp, mk_sp_lo_plus_one, rewrite_ident};\n /// Returns `true` if the given pattern is \"short\".\n /// A short pattern is defined by the following grammar:\n ///\n-/// [small, ntp]:\n+/// `[small, ntp]`:\n ///     - single token\n ///     - `&[single-line, ntp]`\n ///\n-/// [small]:\n+/// `[small]`:\n ///     - `[small, ntp]`\n ///     - unary tuple constructor `([small, ntp])`\n ///     - `&[small]`"}]}