{"sha": "5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZmI1Y2FkM2E4ZDVmOWMxODE5NDcyYmNkMTY2ZjhlZDg5NzJiNmQ=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-05T17:11:25Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-05T17:11:25Z"}, "message": "Remove create_lock in favor of lock_and_signal() (issue #2780)", "tree": {"sha": "be4809e50d070e86ca561eca25dbb8e02b59884f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be4809e50d070e86ca561eca25dbb8e02b59884f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d", "html_url": "https://github.com/rust-lang/rust/commit/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27cecbf1cf4f87b12b43dd9ae253c20598858ced", "url": "https://api.github.com/repos/rust-lang/rust/commits/27cecbf1cf4f87b12b43dd9ae253c20598858ced", "html_url": "https://github.com/rust-lang/rust/commit/27cecbf1cf4f87b12b43dd9ae253c20598858ced"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "ea67f132377f088d4c24348c0b22f51a8b686d98", "filename": "src/libcore/arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d/src%2Flibcore%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d/src%2Flibcore%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farc.rs?ref=5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d", "patch": "@@ -88,7 +88,7 @@ type ex_data<T: send> = {lock: sys::lock_and_signal, data: T};\n type exclusive<T: send> = arc_destruct<ex_data<T>>;\n \n fn exclusive<T:send >(-data: T) -> exclusive<T> {\n-    let data = ~{mut count: 1, data: {lock: sys::create_lock(),\n+    let data = ~{mut count: 1, data: {lock: sys::lock_and_signal(),\n                                       data: data}};\n     unsafe {\n         let ptr = unsafe::reinterpret_cast(data);"}, {"sha": "a24c41338c48595ff2b6a871fafb7aac454cd17f", "filename": "src/libcore/sys.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d/src%2Flibcore%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d/src%2Flibcore%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsys.rs?ref=5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d", "patch": "@@ -7,7 +7,7 @@ export min_align_of;\n export pref_align_of;\n export refcount;\n export log_str;\n-export create_lock, lock_and_signal, condition, methods;\n+export lock_and_signal, condition, methods;\n \n enum type_desc = {\n     first_param: **libc::c_int,\n@@ -87,7 +87,9 @@ pure fn log_str<T>(t: T) -> str {\n \n class lock_and_signal {\n     let lock: rust_cond_lock;\n-    new(lock: rust_cond_lock) { self.lock = lock; }\n+    new() {\n+        self.lock = rustrt::rust_create_cond_lock();\n+    }\n     drop { rustrt::rust_destroy_cond_lock(self.lock); }\n }\n \n@@ -101,10 +103,6 @@ class unlock {\n     drop { rustrt::rust_unlock_cond_lock(self.lock); }\n }\n \n-fn create_lock() -> lock_and_signal {\n-    lock_and_signal(rustrt::rust_create_cond_lock())\n-}\n-\n impl methods for lock_and_signal {\n     unsafe fn lock<T>(f: fn() -> T) -> T {\n         rustrt::rust_lock_cond_lock(self.lock);\n@@ -180,7 +178,7 @@ mod tests {\n     #[test]\n     #[ignore] // this can go into infinite loops\n     fn condition_variable() {\n-        let lock = arc::arc(create_lock());\n+        let lock = arc::arc(lock_and_signal());\n         let lock2 = arc::clone(&lock);\n \n         do task::spawn |move lock2| {"}]}