{"sha": "eb18ddd8f4fede5e12a97f724014a8406dd75881", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMThkZGQ4ZjRmZWRlNWUxMmE5N2Y3MjQwMTRhODQwNmRkNzU4ODE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-17T14:36:06Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-17T16:50:37Z"}, "message": "Don't auto-inline `const fn`", "tree": {"sha": "8747bf00768b84bcb530ce6b4ae2e7da655a32ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8747bf00768b84bcb530ce6b4ae2e7da655a32ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb18ddd8f4fede5e12a97f724014a8406dd75881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb18ddd8f4fede5e12a97f724014a8406dd75881", "html_url": "https://github.com/rust-lang/rust/commit/eb18ddd8f4fede5e12a97f724014a8406dd75881", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb18ddd8f4fede5e12a97f724014a8406dd75881/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1", "html_url": "https://github.com/rust-lang/rust/commit/ef99b57b13f9ab04f44dd9c5c325be8f0b6b9dc1"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "411a6e7e6238ef470973ce9ede3a8ec9556a52b4", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=eb18ddd8f4fede5e12a97f724014a8406dd75881", "patch": "@@ -173,10 +173,7 @@ impl<'tcx> InstanceDef<'tcx> {\n             // available to normal end-users.\n             return true\n         }\n-        let codegen_fn_attrs = tcx.codegen_fn_attrs(self.def_id());\n-        // need to use `is_const_fn_raw` since we don't really care if the user can use it as a\n-        // const fn, just whether the function should be inlined\n-        codegen_fn_attrs.requests_inline() || tcx.is_const_fn_raw(self.def_id())\n+        tcx.codegen_fn_attrs(self.def_id()).requests_inline()\n     }\n }\n "}, {"sha": "5e181870fed657b7dc8f553eaf16dbdc1cef9f48", "filename": "src/test/codegen-units/item-collection/unreferenced-const-fn.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs?ref=eb18ddd8f4fede5e12a97f724014a8406dd75881", "patch": "@@ -11,11 +11,10 @@\n // ignore-tidy-linelength\n // compile-flags:-Zprint-mono-items=lazy\n \n-// NB: We do not expect *any* monomorphization to be generated here.\n-\n #![deny(dead_code)]\n #![crate_type = \"rlib\"]\n \n+//~ MONO_ITEM fn unreferenced_const_fn::foo[0] @@ unreferenced_const_fn-cgu.0[External]\n pub const fn foo(x: u32) -> u32 {\n     x + 0xf00\n }"}, {"sha": "72369aae97ce30ab8558555cb6cf8c71222bb88b", "filename": "src/test/ui/consts/auxiliary/const_fn_lib.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fconst_fn_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fconst_fn_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fconst_fn_lib.rs?ref=eb18ddd8f4fede5e12a97f724014a8406dd75881", "patch": "@@ -10,6 +10,24 @@\n \n // Crate that exports a const fn. Used for testing cross-crate.\n \n+#![feature(const_fn)]\n #![crate_type=\"rlib\"]\n \n-pub const fn foo() -> usize { 22 } //~ ERROR const fn is unstable\n+pub const fn foo() -> usize { 22 }\n+\n+pub const fn bar() -> fn() {\n+    fn x() {}\n+    x\n+}\n+\n+#[inline]\n+pub const fn bar_inlined() -> fn() {\n+    fn x() {}\n+    x\n+}\n+\n+#[inline(always)]\n+pub const fn bar_inlined_always() -> fn() {\n+    fn x() {}\n+    x\n+}"}, {"sha": "c7617c9c7ad0342e0152fe28618a22582ac3567f", "filename": "src/test/ui/consts/const_fn_return_nested_fn_ptr.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_return_nested_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb18ddd8f4fede5e12a97f724014a8406dd75881/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_return_nested_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_return_nested_fn_ptr.rs?ref=eb18ddd8f4fede5e12a97f724014a8406dd75881", "patch": "@@ -0,0 +1,10 @@\n+// compile-pass\n+// aux-build:const_fn_lib.rs\n+\n+extern crate const_fn_lib;\n+\n+fn main() {\n+    const_fn_lib::bar()();\n+    const_fn_lib::bar_inlined()();\n+    const_fn_lib::bar_inlined_always()();\n+}"}]}