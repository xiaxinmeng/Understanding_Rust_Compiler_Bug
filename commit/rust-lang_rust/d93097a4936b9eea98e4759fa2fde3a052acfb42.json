{"sha": "d93097a4936b9eea98e4759fa2fde3a052acfb42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MzA5N2E0OTM2YjllZWE5OGU0NzU5ZmEyZmRlM2EwNTJhY2ZiNDI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-18T13:20:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-18T13:20:12Z"}, "message": "better comments", "tree": {"sha": "6c77bfc9ae120e8741ccd3a354c942e8e15b759b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c77bfc9ae120e8741ccd3a354c942e8e15b759b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d93097a4936b9eea98e4759fa2fde3a052acfb42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d93097a4936b9eea98e4759fa2fde3a052acfb42", "html_url": "https://github.com/rust-lang/rust/commit/d93097a4936b9eea98e4759fa2fde3a052acfb42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d93097a4936b9eea98e4759fa2fde3a052acfb42/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "def7bc0ec55a0afb2cb577e2e80d95b33a1cf115", "url": "https://api.github.com/repos/rust-lang/rust/commits/def7bc0ec55a0afb2cb577e2e80d95b33a1cf115", "html_url": "https://github.com/rust-lang/rust/commit/def7bc0ec55a0afb2cb577e2e80d95b33a1cf115"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "5969ee0d06191e9d2206e694884472c59c5f2dee", "filename": "crates/ra_vfs/src/io.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d93097a4936b9eea98e4759fa2fde3a052acfb42/crates%2Fra_vfs%2Fsrc%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d93097a4936b9eea98e4759fa2fde3a052acfb42/crates%2Fra_vfs%2Fsrc%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fio.rs?ref=d93097a4936b9eea98e4759fa2fde3a052acfb42", "patch": "@@ -50,7 +50,7 @@ const WATCHER_DELAY: Duration = Duration::from_millis(250);\n // Like thread::JoinHandle, but joins the thread on drop.\n //\n // This is useful because it guarantees the absence of run-away threads, even if\n-// code panics. This is important, because we might seem panics in the test and\n+// code panics. This is important, because we might see panics in the test and\n // we might be used in an IDE context, where a failed component is just\n // restarted.\n //\n@@ -75,7 +75,13 @@ impl Drop for ScopedThread {\n }\n \n pub(crate) struct Worker {\n-    // XXX: it's important to drop `sender` before `_thread` to avoid deadlock.\n+    // XXX: field order is significant here.\n+    //\n+    // In Rust, fields are dropped in the declaration order, and we rely on this\n+    // here. We must close sender first, so that the  `thread` (who holds the\n+    // opposite side of the channel) noticed shutdown. Then, we must join the\n+    // thread, but we must keep receiver alive so that the thread does not\n+    // panic.\n     pub(crate) sender: Sender<Task>,\n     _thread: ScopedThread,\n     pub(crate) receiver: Receiver<VfsTask>,"}]}