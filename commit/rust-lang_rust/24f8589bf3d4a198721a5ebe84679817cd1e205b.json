{"sha": "24f8589bf3d4a198721a5ebe84679817cd1e205b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0Zjg1ODliZjNkNGExOTg3MjFhNWViZTg0Njc5ODE3Y2QxZTIwNWI=", "commit": {"author": {"name": "ubsan", "email": "npmazzuca@gmail.com", "date": "2016-07-21T19:57:42Z"}, "committer": {"name": "ubsan", "email": "npmazzuca@gmail.com", "date": "2016-07-21T19:57:42Z"}, "message": "Fix nits", "tree": {"sha": "145ed33401391eacbef86fdb92e98d0f2409ce43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/145ed33401391eacbef86fdb92e98d0f2409ce43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24f8589bf3d4a198721a5ebe84679817cd1e205b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24f8589bf3d4a198721a5ebe84679817cd1e205b", "html_url": "https://github.com/rust-lang/rust/commit/24f8589bf3d4a198721a5ebe84679817cd1e205b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24f8589bf3d4a198721a5ebe84679817cd1e205b/comments", "author": {"login": "ubsan", "id": 60298436, "node_id": "MDQ6VXNlcjYwMjk4NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/60298436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubsan", "html_url": "https://github.com/ubsan", "followers_url": "https://api.github.com/users/ubsan/followers", "following_url": "https://api.github.com/users/ubsan/following{/other_user}", "gists_url": "https://api.github.com/users/ubsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubsan/subscriptions", "organizations_url": "https://api.github.com/users/ubsan/orgs", "repos_url": "https://api.github.com/users/ubsan/repos", "events_url": "https://api.github.com/users/ubsan/events{/privacy}", "received_events_url": "https://api.github.com/users/ubsan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubsan", "id": 60298436, "node_id": "MDQ6VXNlcjYwMjk4NDM2", "avatar_url": "https://avatars.githubusercontent.com/u/60298436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubsan", "html_url": "https://github.com/ubsan", "followers_url": "https://api.github.com/users/ubsan/followers", "following_url": "https://api.github.com/users/ubsan/following{/other_user}", "gists_url": "https://api.github.com/users/ubsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubsan/subscriptions", "organizations_url": "https://api.github.com/users/ubsan/orgs", "repos_url": "https://api.github.com/users/ubsan/repos", "events_url": "https://api.github.com/users/ubsan/events{/privacy}", "received_events_url": "https://api.github.com/users/ubsan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0bee60adbf979ae624cfcdc7610044c357794a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0bee60adbf979ae624cfcdc7610044c357794a0", "html_url": "https://github.com/rust-lang/rust/commit/c0bee60adbf979ae624cfcdc7610044c357794a0"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "6a1d94a2e44d8eda98c66a992d3e4e06c55b9eb9", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/24f8589bf3d4a198721a5ebe84679817cd1e205b/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f8589bf3d4a198721a5ebe84679817cd1e205b/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=24f8589bf3d4a198721a5ebe84679817cd1e205b", "patch": "@@ -284,8 +284,8 @@ extern \"rust-intrinsic\" {\n     ///\n     /// `transmute` is semantically equivalent to a bitwise move of one type\n     /// into another. It copies the bits from the destination type into the\n-    /// source type, then forgets the original. If you know C or C++, it's like\n-    /// `memcpy` under the hood.\n+    /// source type, then forgets the original. It's equivalent to C's `memcpy`\n+    /// under the hood, just like `transmute_copy`.\n     ///\n     /// `transmute` is incredibly unsafe. There are a vast number of ways to\n     /// cause undefined behavior with this function. `transmute` should be\n@@ -299,7 +299,7 @@ extern \"rust-intrinsic\" {\n     /// There are a few things that `transmute` is really useful for.\n     ///\n     /// Getting the bitpattern of a floating point type (or, more generally,\n-    /// type punning, when T and U aren't pointers):\n+    /// type punning, when `T` and `U` aren't pointers):\n     ///\n     /// ```\n     /// let bitpattern = unsafe {\n@@ -339,11 +339,10 @@ extern \"rust-intrinsic\" {\n     /// # Alternatives\n     ///\n     /// However, many uses of `transmute` can be achieved through other means.\n-    /// `transmute` can transform\n-    /// any type into any other, with just the caveat that they're the same\n-    /// size, and it sometimes results in interesting results. Below are common\n-    /// applications of `transmute` which can be replaced with safe applications\n-    /// of `as`:\n+    /// `transmute` can transform any type into any other, with just the caveat\n+    /// that they're the same size, and often interesting results occur. Below\n+    /// are common applications of `transmute` which can be replaced with safe\n+    /// applications of `as`:\n     ///\n     /// Turning a pointer into a `usize`:\n     ///"}]}