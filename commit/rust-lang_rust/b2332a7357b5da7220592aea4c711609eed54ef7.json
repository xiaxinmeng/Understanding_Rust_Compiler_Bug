{"sha": "b2332a7357b5da7220592aea4c711609eed54ef7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMzMyYTczNTdiNWRhNzIyMDU5MmFlYTRjNzExNjA5ZWVkNTRlZjc=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-02T17:47:17Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-02T17:52:17Z"}, "message": "Change lint to use const sym", "tree": {"sha": "67fbc95528f75d36f370a2ab8adf01b0d5135b8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67fbc95528f75d36f370a2ab8adf01b0d5135b8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2332a7357b5da7220592aea4c711609eed54ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2332a7357b5da7220592aea4c711609eed54ef7", "html_url": "https://github.com/rust-lang/rust/commit/b2332a7357b5da7220592aea4c711609eed54ef7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2332a7357b5da7220592aea4c711609eed54ef7/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22cc77a232a0ec73475ff54b5116adf9defc8667", "url": "https://api.github.com/repos/rust-lang/rust/commits/22cc77a232a0ec73475ff54b5116adf9defc8667", "html_url": "https://github.com/rust-lang/rust/commit/22cc77a232a0ec73475ff54b5116adf9defc8667"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "8b59a9541a736fb8d18da04bd7f523ad4add84e4", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2332a7357b5da7220592aea4c711609eed54ef7/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2332a7357b5da7220592aea4c711609eed54ef7/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=b2332a7357b5da7220592aea4c711609eed54ef7", "patch": "@@ -225,7 +225,7 @@ declare_clippy_lint! {\n     ///\n     /// Good:\n     /// ```rust,ignore\n-    /// utils::is_type_diagnostic_item(cx, ty, sym!(vec_type))\n+    /// utils::is_type_diagnostic_item(cx, ty, sym::vec_type)\n     /// ```\n     pub MATCH_TYPE_ON_DIAGNOSTIC_ITEM,\n     internal,\n@@ -724,7 +724,7 @@ impl<'tcx> LateLintPass<'tcx> for MatchTypeOnDiagItem {\n                     expr.span,\n                     \"usage of `utils::match_type()` on a type diagnostic item\",\n                     \"try\",\n-                    format!(\"utils::is_type_diagnostic_item({}, {}, sym!({}))\", cx_snippet, ty_snippet, item_name),\n+                    format!(\"utils::is_type_diagnostic_item({}, {}, sym::{})\", cx_snippet, ty_snippet, item_name),\n                     Applicability::MaybeIncorrect,\n                 );\n             }"}, {"sha": "82465dbaf6ecc9d9e61b5f99e25f62948da7ebc7", "filename": "tests/ui/match_type_on_diag_item.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2332a7357b5da7220592aea4c711609eed54ef7/tests%2Fui%2Fmatch_type_on_diag_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2332a7357b5da7220592aea4c711609eed54ef7/tests%2Fui%2Fmatch_type_on_diag_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_type_on_diag_item.stderr?ref=b2332a7357b5da7220592aea4c711609eed54ef7", "patch": "@@ -2,7 +2,7 @@ error: usage of `utils::match_type()` on a type diagnostic item\n   --> $DIR/match_type_on_diag_item.rs:41:17\n    |\n LL |         let _ = match_type(cx, ty, &paths::VEC);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym!(vec_type))`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym::vec_type)`\n    |\n note: the lint level is defined here\n   --> $DIR/match_type_on_diag_item.rs:1:9\n@@ -15,19 +15,19 @@ error: usage of `utils::match_type()` on a type diagnostic item\n   --> $DIR/match_type_on_diag_item.rs:42:17\n    |\n LL |         let _ = match_type(cx, ty, &OPTION);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym!(option_type))`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym::option_type)`\n \n error: usage of `utils::match_type()` on a type diagnostic item\n   --> $DIR/match_type_on_diag_item.rs:43:17\n    |\n LL |         let _ = match_type(cx, ty, &[\"core\", \"result\", \"Result\"]);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym!(result_type))`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym::result_type)`\n \n error: usage of `utils::match_type()` on a type diagnostic item\n   --> $DIR/match_type_on_diag_item.rs:46:17\n    |\n LL |         let _ = utils::match_type(cx, ty, rc_path);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym!(Rc))`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `utils::is_type_diagnostic_item(cx, ty, sym::Rc)`\n \n error: aborting due to 4 previous errors\n "}]}