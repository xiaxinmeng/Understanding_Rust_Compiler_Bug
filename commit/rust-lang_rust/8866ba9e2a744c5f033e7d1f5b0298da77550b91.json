{"sha": "8866ba9e2a744c5f033e7d1f5b0298da77550b91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NjZiYTllMmE3NDRjNWYwMzNlN2QxZjViMDI5OGRhNzc1NTBiOTE=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@cs.washington.edu", "date": "2016-04-21T16:36:39Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@cs.washington.edu", "date": "2016-04-21T16:36:39Z"}, "message": "Fixed destructor detection in mem_forget", "tree": {"sha": "498faf45593843ab584a801ee6796d0b65c5560f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/498faf45593843ab584a801ee6796d0b65c5560f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8866ba9e2a744c5f033e7d1f5b0298da77550b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8866ba9e2a744c5f033e7d1f5b0298da77550b91", "html_url": "https://github.com/rust-lang/rust/commit/8866ba9e2a744c5f033e7d1f5b0298da77550b91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8866ba9e2a744c5f033e7d1f5b0298da77550b91/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77427b6ead79c54648c47f5048953590a59615bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/77427b6ead79c54648c47f5048953590a59615bb", "html_url": "https://github.com/rust-lang/rust/commit/77427b6ead79c54648c47f5048953590a59615bb"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "1f627d614ff3ec92a363a546aad40a4bb819fff7", "filename": "src/mem_forget.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8866ba9e2a744c5f033e7d1f5b0298da77550b91/src%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8866ba9e2a744c5f033e7d1f5b0298da77550b91/src%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmem_forget.rs?ref=8866ba9e2a744c5f033e7d1f5b0298da77550b91", "patch": "@@ -1,6 +1,6 @@\n use rustc::lint::*;\n use rustc::hir::{Expr, ExprCall, ExprPath};\n-use utils::{get_trait_def_id, implements_trait, match_def_path, paths, span_lint};\n+use utils::{match_def_path, paths, span_lint};\n \n /// **What it does:** This lint checks for usage of `std::mem::forget(t)` where `t` is `Drop`.\n ///\n@@ -29,12 +29,13 @@ impl LateLintPass for MemForget {\n             if let ExprPath(None, _) = path_expr.node {\n                 let def_id = cx.tcx.def_map.borrow()[&path_expr.id].def_id();\n                 if match_def_path(cx, def_id, &paths::MEM_FORGET) {\n-                    if let Some(drop_trait_id) = get_trait_def_id(cx, &paths::DROP) {\n-                        let forgot_ty = cx.tcx.expr_ty(&args[0]);\n+                    let forgot_ty = cx.tcx.expr_ty(&args[0]);\n \n-                        if implements_trait(cx, forgot_ty, drop_trait_id, Vec::new()) {\n-                            span_lint(cx, MEM_FORGET, e.span, \"usage of mem::forget on Drop type\");\n-                        }\n+                    if match forgot_ty.ty_adt_def() {\n+                        Some(def) => def.has_dtor(),\n+                        _ => false\n+                    } {\n+                        span_lint(cx, MEM_FORGET, e.span, \"usage of mem::forget on Drop type\");\n                     }\n                 }\n             }"}]}