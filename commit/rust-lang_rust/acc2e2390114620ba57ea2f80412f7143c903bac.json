{"sha": "acc2e2390114620ba57ea2f80412f7143c903bac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYzJlMjM5MDExNDYyMGJhNTdlYTJmODA0MTJmNzE0M2M5MDNiYWM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-19T22:58:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-19T22:58:37Z"}, "message": "Rollup merge of #79177 - fanzier:drop-order-test, r=RalfJung\n\nTest drop order for (destructuring) assignments\n\nAdd a test that checks whether the drop order of `let` bindings is consistent with the drop order of the corresponding destructuring assignments.\n\nThanks to ```@RalfJung``` for the suggesting this test ([here](https://github.com/rust-lang/rust/pull/79016#issuecomment-727608732)) and an implementation!\n\nr? ```@RalfJung```", "tree": {"sha": "806cab6fd38e719df1179ba0f0d5efacde5f4d9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/806cab6fd38e719df1179ba0f0d5efacde5f4d9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acc2e2390114620ba57ea2f80412f7143c903bac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJftvidCRBK7hj4Ov3rIwAAdHIIADMywtp4QXDbrGpIs639wMGj\nYN8QQLej5mBoWkVRJwghNnOKdRJX81DLfszW6jKq9vUdWh2bb+AMvXDVq0cwCBOc\ndp6dE6Lbg1NFNPuf0HV+Yl7UfuJ1zojKK3G/K7SYPMQtWGdqS8mFXHtro1sPTHmk\nAryaBawqUoILKwxGO+fo09BYDFMMX+MZi/QF5JcVpSe2DGoPOMmsqxbZ9V9zoWc0\nOi5lFCWA1R/+pcD68JqGqgnoYUa7YkI/ShREvb956pprjuFm06t4wWa4PwNMUm3c\nH+8IA/vBMzO0hx6KZOiNSE341/IvywwwBj0qBEeqSqRQ7zILMfvUDvgzuWoZq9s=\n=i6C8\n-----END PGP SIGNATURE-----\n", "payload": "tree 806cab6fd38e719df1179ba0f0d5efacde5f4d9c\nparent c2a277c11df99f091217d5e35ca3d548606cf15b\nparent 1094f97da0bc3ce63130eac88adc997c68ce59cd\nauthor Dylan DPC <dylan.dpc@gmail.com> 1605826717 +0100\ncommitter GitHub <noreply@github.com> 1605826717 +0100\n\nRollup merge of #79177 - fanzier:drop-order-test, r=RalfJung\n\nTest drop order for (destructuring) assignments\n\nAdd a test that checks whether the drop order of `let` bindings is consistent with the drop order of the corresponding destructuring assignments.\n\nThanks to ```@RalfJung``` for the suggesting this test ([here](https://github.com/rust-lang/rust/pull/79016#issuecomment-727608732)) and an implementation!\n\nr? ```@RalfJung```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acc2e2390114620ba57ea2f80412f7143c903bac", "html_url": "https://github.com/rust-lang/rust/commit/acc2e2390114620ba57ea2f80412f7143c903bac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acc2e2390114620ba57ea2f80412f7143c903bac/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2a277c11df99f091217d5e35ca3d548606cf15b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a277c11df99f091217d5e35ca3d548606cf15b", "html_url": "https://github.com/rust-lang/rust/commit/c2a277c11df99f091217d5e35ca3d548606cf15b"}, {"sha": "1094f97da0bc3ce63130eac88adc997c68ce59cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1094f97da0bc3ce63130eac88adc997c68ce59cd", "html_url": "https://github.com/rust-lang/rust/commit/1094f97da0bc3ce63130eac88adc997c68ce59cd"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "d06b31c7f270224d66628222b9dd9e3603ca85fe", "filename": "src/test/ui/destructuring-assignment/drop-order.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/acc2e2390114620ba57ea2f80412f7143c903bac/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acc2e2390114620ba57ea2f80412f7143c903bac/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fdrop-order.rs?ref=acc2e2390114620ba57ea2f80412f7143c903bac", "patch": "@@ -0,0 +1,44 @@\n+// run-pass\n+\n+//! Test that let bindings and destructuring assignments have consistent drop orders\n+\n+#![feature(destructuring_assignment)]\n+#![allow(unused_variables, unused_assignments)]\n+\n+use std::cell::RefCell;\n+\n+thread_local! {\n+    static DROP_ORDER: RefCell<Vec<usize>> = RefCell::new(Vec::new());\n+}\n+\n+struct DropRecorder(usize);\n+impl Drop for DropRecorder {\n+    fn drop(&mut self) {\n+        DROP_ORDER.with(|d| d.borrow_mut().push(self.0));\n+    }\n+}\n+\n+fn main() {\n+    let expected_drop_order = vec![1, 4, 5, 3, 2];\n+    // Check the drop order for let bindings:\n+    {\n+        let _ = DropRecorder(1);\n+        let _val = DropRecorder(2);\n+        let (x, _) = (DropRecorder(3), DropRecorder(4));\n+        drop(DropRecorder(5));\n+    }\n+    DROP_ORDER.with(|d| {\n+        assert_eq!(&*d.borrow(), &expected_drop_order);\n+        d.borrow_mut().clear();\n+    });\n+    // Check that the drop order for destructuring assignment is the same:\n+    {\n+        let _val;\n+        let x;\n+        _ = DropRecorder(1);\n+        _val = DropRecorder(2);\n+        (x, _) = (DropRecorder(3), DropRecorder(4));\n+        drop(DropRecorder(5));\n+    }\n+    DROP_ORDER.with(|d| assert_eq!(&*d.borrow(), &expected_drop_order));\n+}"}]}