{"sha": "eefd790d3b84d051f124222b9948d4a29fb0decf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZmQ3OTBkM2I4NGQwNTFmMTI0MjIyYjk5NDhkNGEyOWZiMGRlY2Y=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-27T18:46:01Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-08-07T17:03:08Z"}, "message": "impl const From<num> for num", "tree": {"sha": "4d8aae92d1dd74e3349787e8e2581a781f70319d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d8aae92d1dd74e3349787e8e2581a781f70319d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eefd790d3b84d051f124222b9948d4a29fb0decf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEeQ9lb2ZjsXFBDRuFH1AezRu9cKcFAmEOvMwACgkQH1AezRu9\ncKfNAw//Q/We/KyakQF+1ZnDmBe9+tjRBfk76NYoJCJkO1ToaZ0rHQyvTe1dkhS+\nevMj4fvO7mHy2Yt24+1jAwNu2VyyYwSXi2i8cjwZj0EriqXv0wPew+Eehe8CfEGv\nYWh4zlXSKS7v1x8KX2glb9hWo2ZWge+lTXEr/7WJu71zC8xXWP5P/YLI6TgwOcx2\nvvLUEhUtsb2XQw2f3cPgw/s7bEMZ92kVoHKU1JJW84GQDVXLOdyR7Nbk+EYJVAg5\nqkkSODrwREWfNI5isnrrv8UJkw2TokL/TDYWZblCG9n+J/XiRmCzua16f8iQcmvu\n13E5nV3Eyxk5TA39mIGZSuPpRT551Ejqn+2IaK2j5nhURQM8cat+4FXuB7pZWJxP\n8P55u6AT4LqZL5aHuCKqIeVRfy2KE3sCwXJvenbl4EfvBZfKvtVT1sLysaPBDTvM\nd/AxySVBekC+mcYr9EggWsw2PmRGG0hIes02+fOWcAJ/2USEdJyO7Zp+ZLiKlTs4\n7kfJU7YagXfxIM00FmpzE8fcZ2Y9vWKgRb5sHMP6Ig4oOughGwJT8Hpy1CKKMN0W\n1sC/RqJO3jBkfv0+hzfeg9pr3qw3OLHFUVaARPliETR2t3VxY7raB/cppDUDRzRW\nWn0EZtv0OeSqhV5j+Z/kIaUYWFQmMyDDrEjzitTaMvzPHjbMqsc=\n=JjTt\n-----END PGP SIGNATURE-----", "payload": "tree 4d8aae92d1dd74e3349787e8e2581a781f70319d\nparent 508b328c398b84126011f6fe74d018fe855bc242\nauthor Albin Hedman <albin9604@gmail.com> 1609094761 +0100\ncommitter Albin Hedman <albin9604@gmail.com> 1628355788 +0200\n\nimpl const From<num> for num\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eefd790d3b84d051f124222b9948d4a29fb0decf", "html_url": "https://github.com/rust-lang/rust/commit/eefd790d3b84d051f124222b9948d4a29fb0decf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eefd790d3b84d051f124222b9948d4a29fb0decf/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "508b328c398b84126011f6fe74d018fe855bc242", "url": "https://api.github.com/repos/rust-lang/rust/commits/508b328c398b84126011f6fe74d018fe855bc242", "html_url": "https://github.com/rust-lang/rust/commit/508b328c398b84126011f6fe74d018fe855bc242"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "75ef873abc965f40f2bf53258d1e4ab352de5565", "filename": "library/core/src/convert/num.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eefd790d3b84d051f124222b9948d4a29fb0decf/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eefd790d3b84d051f124222b9948d4a29fb0decf/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs?ref=eefd790d3b84d051f124222b9948d4a29fb0decf", "patch": "@@ -45,7 +45,8 @@ impl_float_to_int!(f64 => u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize);\n macro_rules! impl_from {\n     ($Small: ty, $Large: ty, #[$attr:meta], $doc: expr) => {\n         #[$attr]\n-        impl From<$Small> for $Large {\n+        #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n+        impl const From<$Small> for $Large {\n             // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n             // Rustdocs on functions do not.\n             #[doc = $doc]\n@@ -172,7 +173,8 @@ impl_from! { f32, f64, #[stable(feature = \"lossless_float_conv\", since = \"1.6.0\"\n macro_rules! try_from_unbounded {\n     ($source:ty, $($target:ty),*) => {$(\n         #[stable(feature = \"try_from\", since = \"1.34.0\")]\n-        impl TryFrom<$source> for $target {\n+        #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n+        impl const TryFrom<$source> for $target {\n             type Error = TryFromIntError;\n \n             /// Try to create the target number type from a source\n@@ -190,7 +192,8 @@ macro_rules! try_from_unbounded {\n macro_rules! try_from_lower_bounded {\n     ($source:ty, $($target:ty),*) => {$(\n         #[stable(feature = \"try_from\", since = \"1.34.0\")]\n-        impl TryFrom<$source> for $target {\n+        #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n+        impl const TryFrom<$source> for $target {\n             type Error = TryFromIntError;\n \n             /// Try to create the target number type from a source\n@@ -212,7 +215,8 @@ macro_rules! try_from_lower_bounded {\n macro_rules! try_from_upper_bounded {\n     ($source:ty, $($target:ty),*) => {$(\n         #[stable(feature = \"try_from\", since = \"1.34.0\")]\n-        impl TryFrom<$source> for $target {\n+        #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n+        impl const TryFrom<$source> for $target {\n             type Error = TryFromIntError;\n \n             /// Try to create the target number type from a source\n@@ -234,7 +238,8 @@ macro_rules! try_from_upper_bounded {\n macro_rules! try_from_both_bounded {\n     ($source:ty, $($target:ty),*) => {$(\n         #[stable(feature = \"try_from\", since = \"1.34.0\")]\n-        impl TryFrom<$source> for $target {\n+        #[rustc_const_unstable(feature = \"const_num_from_num\", issue = \"87852\")]\n+        impl const TryFrom<$source> for $target {\n             type Error = TryFromIntError;\n \n             /// Try to create the target number type from a source"}, {"sha": "37c3f8d4c16abfbe12370ead005d77639c839858", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eefd790d3b84d051f124222b9948d4a29fb0decf/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eefd790d3b84d051f124222b9948d4a29fb0decf/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=eefd790d3b84d051f124222b9948d4a29fb0decf", "patch": "@@ -99,6 +99,7 @@\n #![feature(const_slice_from_raw_parts)]\n #![feature(const_slice_ptr_len)]\n #![feature(const_swap)]\n+#![feature(const_trait_impl)]\n #![feature(const_type_id)]\n #![feature(const_type_name)]\n #![feature(const_unreachable_unchecked)]"}]}