{"sha": "218b90f6438b775e9626ac37f26e9f1dbd2be945", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxOGI5MGY2NDM4Yjc3NWU5NjI2YWMzN2YyNmU5ZjFkYmQyYmU5NDU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-06-20T02:42:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-20T02:42:47Z"}, "message": "Rollup merge of #72689 - lcnr:common_str, r=estebank\n\nadd str to common types\n\nI already expected this to be the case and it may slightly improve perf.\n\nAfaict if we ever want to change str into a lang item this would have to get reverted.\nAs that would be fairly simple I don't believe this to cause any problems in the future.", "tree": {"sha": "20e00640812b59bc2c14a836cc9afbdff4e08a9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e00640812b59bc2c14a836cc9afbdff4e08a9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/218b90f6438b775e9626ac37f26e9f1dbd2be945", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7XenCRBK7hj4Ov3rIwAAdHIIAFKYHSq3CU5rLmFBwf6ZBfAj\npF+nJ9kFUHi4iftHjPqwItxWErwxwHT6qMQIqLJdWMdi8NeZk0jIl43+h3oHRGlZ\nHca4MsnvhizxaqxnkDIdbuajMJBM1ire5DDPbSlGHLUDWi4lC0WzK70mAB+EdHU4\n0GbePuhvBFefDgUEdsTNmcmvyK6E/Fs7pAipbBgFpZQ1Huo245ZEWd3jVNcJrh/d\nTY+YwiO0F1FoTb3alZnVPWO5435kOXtCK7/KmegngEgGUADYjAdSWbeS16R9LrNF\nOBX3Oh4zBtloaHFaJcETyejicHAAam53GZ9qh4jywaGJQGPzqwTkNUDmLVA3eog=\n=EIep\n-----END PGP SIGNATURE-----\n", "payload": "tree 20e00640812b59bc2c14a836cc9afbdff4e08a9f\nparent 5c9cd82454e099b368275292f214daa11541879e\nparent b3aa5e38107df9e9b16a0a003afaa3d12d80bb86\nauthor Manish Goregaokar <manishsmail@gmail.com> 1592620967 -0700\ncommitter GitHub <noreply@github.com> 1592620967 -0700\n\nRollup merge of #72689 - lcnr:common_str, r=estebank\n\nadd str to common types\n\nI already expected this to be the case and it may slightly improve perf.\n\nAfaict if we ever want to change str into a lang item this would have to get reverted.\nAs that would be fairly simple I don't believe this to cause any problems in the future.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/218b90f6438b775e9626ac37f26e9f1dbd2be945", "html_url": "https://github.com/rust-lang/rust/commit/218b90f6438b775e9626ac37f26e9f1dbd2be945", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/218b90f6438b775e9626ac37f26e9f1dbd2be945/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c9cd82454e099b368275292f214daa11541879e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9cd82454e099b368275292f214daa11541879e", "html_url": "https://github.com/rust-lang/rust/commit/5c9cd82454e099b368275292f214daa11541879e"}, {"sha": "b3aa5e38107df9e9b16a0a003afaa3d12d80bb86", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3aa5e38107df9e9b16a0a003afaa3d12d80bb86", "html_url": "https://github.com/rust-lang/rust/commit/b3aa5e38107df9e9b16a0a003afaa3d12d80bb86"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "64140747871fec68ca8b27a2ebdb516ad2f004e7", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/218b90f6438b775e9626ac37f26e9f1dbd2be945/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/218b90f6438b775e9626ac37f26e9f1dbd2be945/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=218b90f6438b775e9626ac37f26e9f1dbd2be945", "patch": "@@ -206,7 +206,7 @@ impl ConstMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         let len = s.as_str().len();\n         let cs = consts::ptrcast(\n             self.const_cstr(s, false),\n-            self.type_ptr_to(self.layout_of(self.tcx.mk_str()).llvm_type(self)),\n+            self.type_ptr_to(self.layout_of(self.tcx.types.str_).llvm_type(self)),\n         );\n         (cs, self.const_usize(len as u64))\n     }"}, {"sha": "672a3a484e537a67c7c057a5edd9481ecfb7e9a4", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/218b90f6438b775e9626ac37f26e9f1dbd2be945/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/218b90f6438b775e9626ac37f26e9f1dbd2be945/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=218b90f6438b775e9626ac37f26e9f1dbd2be945", "patch": "@@ -143,6 +143,7 @@ pub struct CommonTypes<'tcx> {\n     pub u128: Ty<'tcx>,\n     pub f32: Ty<'tcx>,\n     pub f64: Ty<'tcx>,\n+    pub str_: Ty<'tcx>,\n     pub never: Ty<'tcx>,\n     pub self_param: Ty<'tcx>,\n \n@@ -816,6 +817,7 @@ impl<'tcx> CommonTypes<'tcx> {\n             u128: mk(Uint(ast::UintTy::U128)),\n             f32: mk(Float(ast::FloatTy::F32)),\n             f64: mk(Float(ast::FloatTy::F64)),\n+            str_: mk(Str),\n             self_param: mk(ty::Param(ty::ParamTy { index: 0, name: kw::SelfUpper })),\n \n             trait_object_dummy_self: mk(Infer(ty::FreshTy(0))),\n@@ -2149,14 +2151,9 @@ impl<'tcx> TyCtxt<'tcx> {\n         }\n     }\n \n-    #[inline]\n-    pub fn mk_str(self) -> Ty<'tcx> {\n-        self.mk_ty(Str)\n-    }\n-\n     #[inline]\n     pub fn mk_static_str(self) -> Ty<'tcx> {\n-        self.mk_imm_ref(self.lifetimes.re_static, self.mk_str())\n+        self.mk_imm_ref(self.lifetimes.re_static, self.types.str_)\n     }\n \n     #[inline]"}, {"sha": "b592d30c37d3cc0c422c1aa9320359b494c908ef", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/218b90f6438b775e9626ac37f26e9f1dbd2be945/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/218b90f6438b775e9626ac37f26e9f1dbd2be945/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=218b90f6438b775e9626ac37f26e9f1dbd2be945", "patch": "@@ -2787,7 +2787,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     hir::PrimTy::Int(it) => tcx.mk_mach_int(it),\n                     hir::PrimTy::Uint(uit) => tcx.mk_mach_uint(uit),\n                     hir::PrimTy::Float(ft) => tcx.mk_mach_float(ft),\n-                    hir::PrimTy::Str => tcx.mk_str(),\n+                    hir::PrimTy::Str => tcx.types.str_,\n                 }\n             }\n             Res::Err => {"}]}