{"sha": "261bbd7dbaaeb3a4f3d25610b6f93aac874bd910", "node_id": "C_kwDOAAsO6NoAKDI2MWJiZDdkYmFhZWIzYTRmM2QyNTYxMGI2ZjkzYWFjODc0YmQ5MTA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-01-19T14:12:29Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-01-23T10:35:21Z"}, "message": "Store the gctxt instead of fetching it twice.", "tree": {"sha": "e63e6568484e1f4b160292ea52bff8a186191599", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e63e6568484e1f4b160292ea52bff8a186191599"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910", "html_url": "https://github.com/rust-lang/rust/commit/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "html_url": "https://github.com/rust-lang/rust/commit/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "ccefd6adaf14b6012a614e96368d46b83919a3ad", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=261bbd7dbaaeb3a4f3d25610b6f93aac874bd910", "patch": "@@ -327,12 +327,14 @@ fn run_compiler(\n                 }\n             }\n \n-            queries.global_ctxt()?;\n+            let mut gctxt = queries.global_ctxt()?;\n             if callbacks.after_expansion(compiler, queries) == Compilation::Stop {\n                 return early_exit();\n             }\n \n-            queries.global_ctxt()?.enter(|tcx| tcx.output_filenames(()));\n+            // Make sure the `output_filenames` query is run for its side\n+            // effects of writing the dep-info and reporting errors.\n+            gctxt.enter(|tcx| tcx.output_filenames(()));\n \n             if sess.opts.output_types.contains_key(&OutputType::DepInfo)\n                 && sess.opts.output_types.len() == 1\n@@ -344,7 +346,7 @@ fn run_compiler(\n                 return early_exit();\n             }\n \n-            queries.global_ctxt()?.enter(|tcx| {\n+            gctxt.enter(|tcx| {\n                 let result = tcx.analysis(());\n                 if sess.opts.unstable_opts.save_analysis {\n                     let crate_name = tcx.crate_name(LOCAL_CRATE);\n@@ -361,6 +363,8 @@ fn run_compiler(\n                 result\n             })?;\n \n+            drop(gctxt);\n+\n             if callbacks.after_analysis(compiler, queries) == Compilation::Stop {\n                 return early_exit();\n             }"}, {"sha": "4b0180741c19df0af11d84b6c6d388bc5b1ffc42", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=261bbd7dbaaeb3a4f3d25610b6f93aac874bd910", "patch": "@@ -65,7 +65,7 @@ impl<'a, T> std::ops::DerefMut for QueryResult<'a, T> {\n }\n \n impl<'a, 'tcx> QueryResult<'a, QueryContext<'tcx>> {\n-    pub fn enter<T>(mut self, f: impl FnOnce(TyCtxt<'tcx>) -> T) -> T {\n+    pub fn enter<T>(&mut self, f: impl FnOnce(TyCtxt<'tcx>) -> T) -> T {\n         (*self.0).get_mut().enter(f)\n     }\n }"}, {"sha": "a689b502f0fccb1d3fe8fd81059c9dcecba64b90", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/261bbd7dbaaeb3a4f3d25610b6f93aac874bd910/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=261bbd7dbaaeb3a4f3d25610b6f93aac874bd910", "patch": "@@ -815,7 +815,7 @@ fn main_args(at_args: &[String]) -> MainResult {\n                 sess.fatal(\"Compilation failed, aborting rustdoc\");\n             }\n \n-            let global_ctxt = abort_on_err(queries.global_ctxt(), sess);\n+            let mut global_ctxt = abort_on_err(queries.global_ctxt(), sess);\n \n             global_ctxt.enter(|tcx| {\n                 let (krate, render_opts, mut cache) = sess.time(\"run_global_ctxt\", || {"}]}