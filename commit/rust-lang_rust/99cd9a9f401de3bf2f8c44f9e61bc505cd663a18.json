{"sha": "99cd9a9f401de3bf2f8c44f9e61bc505cd663a18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5Y2Q5YTlmNDAxZGUzYmYyZjhjNDRmOWU2MWJjNTA1Y2Q2NjNhMTg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-09T10:17:13Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-09T12:29:49Z"}, "message": "Rollup merge of #49523 - Aaronepower:master, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.26.0\n\n[Rendered](https://github.com/Aaronepower/rust/blob/master/RELEASES.md)", "tree": {"sha": "af5a99bdfb479ee083a98e8f13e5dab963735b75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af5a99bdfb479ee083a98e8f13e5dab963735b75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99cd9a9f401de3bf2f8c44f9e61bc505cd663a18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlry6b0ACgkQ/vbIBR0O\nATy3+g/+OURr69X0XJpyTtkqAwccf0biG2jnx731BCidiJPCHzTilde7xYJVN8xh\navTQTXiTXBaQGaiS9jyzQ1Ipjh6sbA8KoELQoR7midS4NUH1IPlQ2/wT4Kg6unmn\nDnMsGCI5lOP+14BM02FlCnSFK7llDUaZqlYj8CQutLcx93kbonD7/tGo2MvBVKDV\ncH74Rrm+BpW0Sh5yc57maYadeXLwCseX9UrL/I3OPVZEiP6TLY2aU49K5os1f+k/\nGeDAyNXcAunO62fb1O7Q9UEYs6ePPJPyZahShr6drp5NpwlVlq4gan39Asq4azXG\nyudIxIQ4vWdbOFbnzOUEVjhX/YFruTvlcJYdjAMokfYI7ueimz9vm+Xr7BUnyAlp\npRbKflFjVTVpkruBCxh+Td2VhG7lpG05gAE74sj8giaIjfe5bzonfz9mcXuyVDNz\nrWlDn3VmQ+de941dM4935WPAptCGxVnSyrRpAlH5BcB5r3A75QAa1UqeXl2ZK9l8\naqaxVeFQcYCjnM7DLSlg0WAzQD+CU9KVs/9LubrayN7eOt9GSwAWvZappaO/TpJO\nrCGYY4e2KpEMOeWquu6twK/Lds9WX18cJTj1QfPHqr9DLfAn0+YihP4vo8E8rKXz\ncaIY1kHVZWl1KCjS05mFipdDz+Ye69vku1DBJifgogJUJLQ+3nc=\n=82eU\n-----END PGP SIGNATURE-----", "payload": "tree af5a99bdfb479ee083a98e8f13e5dab963735b75\nparent 553d25eb50a735e1732815dca8520e663d1fa146\nparent 111786d30e346f356e87d5ec4e6da218d66a85e2\nauthor kennytm <kennytm@gmail.com> 1525861033 +0800\ncommitter kennytm <kennytm@gmail.com> 1525868989 +0800\n\nRollup merge of #49523 - Aaronepower:master, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.26.0\n\n[Rendered](https://github.com/Aaronepower/rust/blob/master/RELEASES.md)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99cd9a9f401de3bf2f8c44f9e61bc505cd663a18", "html_url": "https://github.com/rust-lang/rust/commit/99cd9a9f401de3bf2f8c44f9e61bc505cd663a18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99cd9a9f401de3bf2f8c44f9e61bc505cd663a18/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "553d25eb50a735e1732815dca8520e663d1fa146", "url": "https://api.github.com/repos/rust-lang/rust/commits/553d25eb50a735e1732815dca8520e663d1fa146", "html_url": "https://github.com/rust-lang/rust/commit/553d25eb50a735e1732815dca8520e663d1fa146"}, {"sha": "111786d30e346f356e87d5ec4e6da218d66a85e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/111786d30e346f356e87d5ec4e6da218d66a85e2", "html_url": "https://github.com/rust-lang/rust/commit/111786d30e346f356e87d5ec4e6da218d66a85e2"}], "stats": {"total": 206, "additions": 206, "deletions": 0}, "files": [{"sha": "26dd5a5c7f6376b70690d58b259311b048078672", "filename": "RELEASES.md", "status": "modified", "additions": 206, "deletions": 0, "changes": 206, "blob_url": "https://github.com/rust-lang/rust/blob/99cd9a9f401de3bf2f8c44f9e61bc505cd663a18/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/99cd9a9f401de3bf2f8c44f9e61bc505cd663a18/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=99cd9a9f401de3bf2f8c44f9e61bc505cd663a18", "patch": "@@ -1,3 +1,209 @@\n+Version 1.26.0 (2018-05-10)\n+==========================\n+\n+Language\n+--------\n+- [Closures now implement `Copy` and/or `Clone` if all captured variables\n+  implement either or both traits.][49299]\n+- [The inclusive range syntax e.g. `for x in 0..=10` is now stable.][47813]\n+- [Stablise `'_`. The underscore lifetime can be used anywhere where a\n+  lifetime can be elided.][49458]\n+- [`impl Trait` is now stable allowing you to have abstract types in returns\n+   or in function parameters.][49255] e.g. `fn foo() -> impl Iterator<Item=u8>` or\n+  `fn open(path: impl AsRef<Path>)`.\n+- [Pattern matching will now automatically apply dereferences.][49394]\n+- [128-bit integers in the form of `u128` and `i128` are now stable.][49101]\n+- [`main` can now return `Result<(), E: Debug>`][49162] in addition to `()`.\n+- [A lot of operations are now available in a const context.][46882] E.g. You\n+  can now index into constant arrays, reference and dereference into constants,\n+  and use Tuple struct constructors.\n+- [Fixed entry slice patterns are now stable.][48516] e.g.\n+  ```rust\n+  let points = [1, 2, 3, 4];\n+  match points {\n+      [1, 2, 3, 4] => println!(\"All points were sequential.\"),\n+      _ => println!(\"Not all points were sequential.\"),\n+  }\n+  ```\n+\n+\n+Compiler\n+--------\n+- [LLD is now used as the default linker for `wasm32-unknown-unknown`.][48125]\n+- [Fixed exponential projection complexity on nested types.][48296]\n+  This can provide up to a ~12% reduction in compile times for certain crates.\n+- [Added the `--remap-path-prefix` option to rustc.][48359] Allowing you\n+  to remap path prefixes outputted by the compiler.\n+- [Added `powerpc-unknown-netbsd` target.][48281]\n+\n+Libraries\n+---------\n+- [Implemented `From<u16> for usize` & `From<{u8, i16}> for isize`.][49305]\n+- [Added hexadecimal formatting for integers with fmt::Debug][48978]\n+  e.g. `assert!(format!(\"{:02x?}\", b\"Foo\\0\") == \"[46, 6f, 6f, 00]\")`\n+- [Implemented `Default, Hash` for `cmp::Reverse`.][48628]\n+- [Optimized `str::repeat` being 8x faster in large cases.][48657]\n+- [`ascii::escape_default` is now available in libcore.][48735]\n+- [Trailing commas are now supported in std and core macros.][48056]\n+- [Implemented `Copy, Clone` for `cmp::Reverse`][47379]\n+- [Implemented `Clone` for `char::{ToLowercase, ToUppercase}`.][48629]\n+\n+Stabilized APIs\n+---------------\n+- [`*const T::add`]\n+- [`*const T::copy_to_nonoverlapping`]\n+- [`*const T::copy_to`]\n+- [`*const T::read_unaligned`]\n+- [`*const T::read_volatile`]\n+- [`*const T::read`]\n+- [`*const T::sub`]\n+- [`*const T::wrapping_add`]\n+- [`*const T::wrapping_sub`]\n+- [`*mut T::add`]\n+- [`*mut T::copy_to_nonoverlapping`]\n+- [`*mut T::copy_to`]\n+- [`*mut T::read_unaligned`]\n+- [`*mut T::read_volatile`]\n+- [`*mut T::read`]\n+- [`*mut T::replace`]\n+- [`*mut T::sub`]\n+- [`*mut T::swap`]\n+- [`*mut T::wrapping_add`]\n+- [`*mut T::wrapping_sub`]\n+- [`*mut T::write_bytes`]\n+- [`*mut T::write_unaligned`]\n+- [`*mut T::write_volatile`]\n+- [`*mut T::write`]\n+- [`Box::leak`]\n+- [`FromUtf8Error::as_bytes`]\n+- [`LocalKey::try_with`]\n+- [`Option::cloned`]\n+- [`btree_map::Entry::and_modify`]\n+- [`fs::read_to_string`]\n+- [`fs::read`]\n+- [`fs::write`]\n+- [`hash_map::Entry::and_modify`]\n+- [`iter::FusedIterator`]\n+- [`ops::RangeInclusive`]\n+- [`ops::RangeToInclusive`]\n+- [`process::id`]\n+- [`slice::rotate_left`]\n+- [`slice::rotate_right`]\n+- [`String::retain`]\n+\n+\n+Cargo\n+-----\n+- [Cargo will now output path to custom commands when `-v` is\n+  passed with `--list`][cargo/5041]\n+- [The Cargo binary version is now the same as the Rust version][cargo/5083]\n+- [`Cargo.lock` files are now included in published crates.][cargo/5093]\n+\n+Misc\n+----\n+- [The second edition of \"The Rust Programming Language\" book is now recommended\n+  over the first.][48404]\n+\n+Compatibility Notes\n+-------------------\n+\n+- [aliasing a `Fn` trait as `dyn` no longer works.][48481] E.g. the following\n+  syntax is now invalid.\n+  ```\n+  use std::ops::Fn as dyn;\n+  fn g(_: Box<dyn(std::fmt::Debug)>) {}\n+  ```\n+- [The result of dereferences are no longer promoted to `'static`.][47408]\n+  e.g.\n+  ```rust\n+  fn main() {\n+      const PAIR: &(i32, i32) = &(0, 1);\n+      let _reversed_pair: &'static _ = &(PAIR.1, PAIR.0); // Doesn't work\n+  }\n+  ```\n+- [Deprecate `AsciiExt` trait in favor of inherent methods.][49109]\n+- [`\".e0\"` will now no longer parse as `0.0` and will instead cause\n+  an error.][48235]\n+- [Removed hoedown from rustdoc.][48274]\n+- [Bounds on higher-kinded lifetimes a hard error.][48326]\n+\n+[46882]: https://github.com/rust-lang/rust/pull/46882\n+[47379]: https://github.com/rust-lang/rust/pull/47379\n+[47408]: https://github.com/rust-lang/rust/pull/47408\n+[47813]: https://github.com/rust-lang/rust/pull/47813\n+[48056]: https://github.com/rust-lang/rust/pull/48056\n+[48125]: https://github.com/rust-lang/rust/pull/48125\n+[48166]: https://github.com/rust-lang/rust/pull/48166\n+[48235]: https://github.com/rust-lang/rust/pull/48235\n+[48274]: https://github.com/rust-lang/rust/pull/48274\n+[48281]: https://github.com/rust-lang/rust/pull/48281\n+[48296]: https://github.com/rust-lang/rust/pull/48296\n+[48326]: https://github.com/rust-lang/rust/pull/48326\n+[48359]: https://github.com/rust-lang/rust/pull/48359\n+[48404]: https://github.com/rust-lang/rust/pull/48404\n+[48481]: https://github.com/rust-lang/rust/pull/48481\n+[48516]: https://github.com/rust-lang/rust/pull/48516\n+[48628]: https://github.com/rust-lang/rust/pull/48628\n+[48629]: https://github.com/rust-lang/rust/pull/48629\n+[48657]: https://github.com/rust-lang/rust/pull/48657\n+[48735]: https://github.com/rust-lang/rust/pull/48735\n+[48978]: https://github.com/rust-lang/rust/pull/48978\n+[49101]: https://github.com/rust-lang/rust/pull/49101\n+[49109]: https://github.com/rust-lang/rust/pull/49109\n+[49121]: https://github.com/rust-lang/rust/pull/49121\n+[49162]: https://github.com/rust-lang/rust/pull/49162\n+[49184]: https://github.com/rust-lang/rust/pull/49184\n+[49234]: https://github.com/rust-lang/rust/pull/49234\n+[49255]: https://github.com/rust-lang/rust/pull/49255\n+[49299]: https://github.com/rust-lang/rust/pull/49299\n+[49305]: https://github.com/rust-lang/rust/pull/49305\n+[49394]: https://github.com/rust-lang/rust/pull/49394\n+[49458]: https://github.com/rust-lang/rust/pull/49458\n+[`*const T::add`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.add\n+[`*const T::copy_to_nonoverlapping`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to_nonoverlapping\n+[`*const T::copy_to`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to\n+[`*const T::read_unaligned`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.read_unaligned\n+[`*const T::read_volatile`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.read_volatile\n+[`*const T::read`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.read\n+[`*const T::sub`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.sub\n+[`*const T::wrapping_add`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_add\n+[`*const T::wrapping_sub`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_sub\n+[`*mut T::add`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.add-1\n+[`*mut T::copy_to_nonoverlapping`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to_nonoverlapping-1\n+[`*mut T::copy_to`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to-1\n+[`*mut T::read_unaligned`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.read_unaligned-1\n+[`*mut T::read_volatile`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.read_volatile-1\n+[`*mut T::read`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.read-1\n+[`*mut T::replace`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.replace\n+[`*mut T::sub`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.sub-1\n+[`*mut T::swap`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.swap\n+[`*mut T::wrapping_add`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_add-1\n+[`*mut T::wrapping_sub`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_sub-1\n+[`*mut T::write_bytes`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.write_bytes\n+[`*mut T::write_unaligned`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.write_unaligned\n+[`*mut T::write_volatile`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.write_volatile\n+[`*mut T::write`]: https://doc.rust-lang.org/std/primitive.pointer.html#method.write\n+[`Box::leak`]: https://doc.rust-lang.org/std/boxed/struct.Box.html#method.leak\n+[`FromUtf8Error::as_bytes`]: https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html#method.as_bytes\n+[`LocalKey::try_with`]: https://doc.rust-lang.org/std/thread/struct.LocalKey.html#method.try_with\n+[`Option::cloned`]: https://doc.rust-lang.org/std/option/enum.Option.html#method.cloned\n+[`btree_map::Entry::and_modify`]: https://doc.rust-lang.org/std/collections/btree_map/enum.Entry.html#method.and_modify\n+[`fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html\n+[`fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html\n+[`fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html\n+[`hash_map::Entry::and_modify`]: https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.and_modify\n+[`iter::FusedIterator`]: https://doc.rust-lang.org/std/iter/trait.FusedIterator.html\n+[`ops::RangeInclusive`]: https://doc.rust-lang.org/std/ops/struct.RangeInclusive.html\n+[`ops::RangeToInclusive`]: https://doc.rust-lang.org/std/ops/struct.RangeToInclusive.html\n+[`process::id`]: https://doc.rust-lang.org/std/process/fn.id.html\n+[`slice::rotate_left`]: https://doc.rust-lang.org/std/primitive.slice.html#method.rotate_left\n+[`slice::rotate_right`]: https://doc.rust-lang.org/std/primitive.slice.html#method.rotate_right\n+[`String::retain`]: https://doc.rust-lang.org/std/string/struct.String.html#method.retain\n+[cargo/5041]: https://github.com/rust-lang/cargo/pull/5041\n+[cargo/5083]: https://github.com/rust-lang/cargo/pull/5083\n+[cargo/5093]: https://github.com/rust-lang/cargo/pull/5093\n+\n+\n Version 1.25.0 (2018-03-29)\n ==========================\n "}]}