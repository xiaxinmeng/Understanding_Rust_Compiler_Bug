{"sha": "5271c628be9eda5f0a4e3a5700d057ce95cf9da8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNzFjNjI4YmU5ZWRhNWYwYTRlM2E1NzAwZDA1N2NlOTVjZjlkYTg=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-02-07T21:32:50Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-02-08T19:37:16Z"}, "message": "Remove RCs from Borrows", "tree": {"sha": "873d4f4e68d203c6c21edaf408a822065415e383", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/873d4f4e68d203c6c21edaf408a822065415e383"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5271c628be9eda5f0a4e3a5700d057ce95cf9da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5271c628be9eda5f0a4e3a5700d057ce95cf9da8", "html_url": "https://github.com/rust-lang/rust/commit/5271c628be9eda5f0a4e3a5700d057ce95cf9da8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5271c628be9eda5f0a4e3a5700d057ce95cf9da8/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46f30455f42e6c908c21650b181a2aa5ffd7b981", "url": "https://api.github.com/repos/rust-lang/rust/commits/46f30455f42e6c908c21650b181a2aa5ffd7b981", "html_url": "https://github.com/rust-lang/rust/commit/46f30455f42e6c908c21650b181a2aa5ffd7b981"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "84f5e3146c85415c2dc4fc56980360cec77feb94", "filename": "Cargo.lock", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5271c628be9eda5f0a4e3a5700d057ce95cf9da8/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/5271c628be9eda5f0a4e3a5700d057ce95cf9da8/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=5271c628be9eda5f0a4e3a5700d057ce95cf9da8", "patch": "@@ -1330,9 +1330,9 @@ dependencies = [\n \n [[package]]\n name = \"git2\"\n-version = \"0.13.14\"\n+version = \"0.13.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"186dd99cc77576e58344ad614fa9bb27bad9d048f85de3ca850c1f4e8b048260\"\n+checksum = \"1d250f5f82326884bd39c2853577e70a121775db76818ffa452ed1e80de12986\"\n dependencies = [\n  \"bitflags\",\n  \"libc\",\n@@ -1759,9 +1759,9 @@ dependencies = [\n \n [[package]]\n name = \"libgit2-sys\"\n-version = \"0.12.16+1.1.0\"\n+version = \"0.12.18+1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9f91b2f931ee975a98155195be8cd82d02e8e029d7d793d2bac1b8181ac97020\"\n+checksum = \"3da6a42da88fc37ee1ecda212ffa254c25713532980005d5f7c0b0fbe7e6e885\"\n dependencies = [\n  \"cc\",\n  \"libc\",\n@@ -5346,7 +5346,7 @@ dependencies = [\n  \"chrono\",\n  \"lazy_static\",\n  \"matchers\",\n- \"parking_lot 0.11.0\",\n+ \"parking_lot 0.9.0\",\n  \"regex\",\n  \"serde\",\n  \"serde_json\","}, {"sha": "d92db85284b782a5ce1ac35deb0c745279b4de5f", "filename": "compiler/rustc_mir/src/borrow_check/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5271c628be9eda5f0a4e3a5700d057ce95cf9da8/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5271c628be9eda5f0a4e3a5700d057ce95cf9da8/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs?ref=5271c628be9eda5f0a4e3a5700d057ce95cf9da8", "patch": "@@ -259,7 +259,7 @@ fn do_mir_borrowck<'a, 'tcx>(\n \n     let regioncx = Rc::new(regioncx);\n \n-    let flow_borrows = Borrows::new(tcx, &body, regioncx.clone(), Rc::clone(borrow_set))\n+    let flow_borrows = Borrows::new(tcx, &body, &regioncx, &borrow_set)\n         .into_engine(tcx, &body)\n         .pass_name(\"borrowck\")\n         .iterate_to_fixpoint();\n@@ -303,7 +303,7 @@ fn do_mir_borrowck<'a, 'tcx>(\n                 regioncx: regioncx.clone(),\n                 used_mut: Default::default(),\n                 used_mut_upvars: SmallVec::new(),\n-                borrow_set: borrow_set.clone(),\n+                borrow_set: Rc::clone(&borrow_set),\n                 dominators,\n                 upvars: Vec::new(),\n                 local_names: IndexVec::from_elem(None, &promoted_body.local_decls),\n@@ -333,10 +333,10 @@ fn do_mir_borrowck<'a, 'tcx>(\n         move_error_reported: BTreeMap::new(),\n         uninitialized_error_reported: Default::default(),\n         errors_buffer,\n-        regioncx,\n+        regioncx: Rc::clone(&regioncx),\n         used_mut: Default::default(),\n         used_mut_upvars: SmallVec::new(),\n-        borrow_set,\n+        borrow_set: Rc::clone(&borrow_set),\n         dominators,\n         upvars,\n         local_names,"}, {"sha": "b149ffa9667a3ef0b1fcbe9747289d616fd5f6be", "filename": "compiler/rustc_mir/src/dataflow/impls/borrows.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5271c628be9eda5f0a4e3a5700d057ce95cf9da8/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5271c628be9eda5f0a4e3a5700d057ce95cf9da8/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fimpls%2Fborrows.rs?ref=5271c628be9eda5f0a4e3a5700d057ce95cf9da8", "patch": "@@ -11,7 +11,6 @@ use crate::borrow_check::{\n use crate::dataflow::{self, fmt::DebugWithContext, GenKill};\n \n use std::fmt;\n-use std::rc::Rc;\n \n rustc_index::newtype_index! {\n     pub struct BorrowIndex {\n@@ -30,11 +29,8 @@ pub struct Borrows<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,\n     body: &'a Body<'tcx>,\n \n-    borrow_set: Rc<BorrowSet<'tcx>>,\n+    borrow_set: &'a BorrowSet<'tcx>,\n     borrows_out_of_scope_at_location: FxHashMap<Location, Vec<BorrowIndex>>,\n-\n-    /// NLL region inference context with which NLL queries should be resolved\n-    _nonlexical_regioncx: Rc<RegionInferenceContext<'tcx>>,\n }\n \n struct StackEntry {\n@@ -47,12 +43,12 @@ struct OutOfScopePrecomputer<'a, 'tcx> {\n     visited: BitSet<mir::BasicBlock>,\n     visit_stack: Vec<StackEntry>,\n     body: &'a Body<'tcx>,\n-    regioncx: Rc<RegionInferenceContext<'tcx>>,\n+    regioncx: &'a RegionInferenceContext<'tcx>,\n     borrows_out_of_scope_at_location: FxHashMap<Location, Vec<BorrowIndex>>,\n }\n \n impl<'a, 'tcx> OutOfScopePrecomputer<'a, 'tcx> {\n-    fn new(body: &'a Body<'tcx>, regioncx: Rc<RegionInferenceContext<'tcx>>) -> Self {\n+    fn new(body: &'a Body<'tcx>, regioncx: &'a RegionInferenceContext<'tcx>) -> Self {\n         OutOfScopePrecomputer {\n             visited: BitSet::new_empty(body.basic_blocks().len()),\n             visit_stack: vec![],\n@@ -147,10 +143,10 @@ impl<'a, 'tcx> Borrows<'a, 'tcx> {\n     crate fn new(\n         tcx: TyCtxt<'tcx>,\n         body: &'a Body<'tcx>,\n-        nonlexical_regioncx: Rc<RegionInferenceContext<'tcx>>,\n-        borrow_set: Rc<BorrowSet<'tcx>>,\n+        nonlexical_regioncx: &'a RegionInferenceContext<'tcx>,\n+        borrow_set: &'a BorrowSet<'tcx>,\n     ) -> Self {\n-        let mut prec = OutOfScopePrecomputer::new(body, nonlexical_regioncx.clone());\n+        let mut prec = OutOfScopePrecomputer::new(body, nonlexical_regioncx);\n         for (borrow_index, borrow_data) in borrow_set.iter_enumerated() {\n             let borrow_region = borrow_data.region.to_region_vid();\n             let location = borrow_data.reserve_location;\n@@ -163,7 +159,6 @@ impl<'a, 'tcx> Borrows<'a, 'tcx> {\n             body,\n             borrow_set,\n             borrows_out_of_scope_at_location: prec.borrows_out_of_scope_at_location,\n-            _nonlexical_regioncx: nonlexical_regioncx,\n         }\n     }\n "}]}