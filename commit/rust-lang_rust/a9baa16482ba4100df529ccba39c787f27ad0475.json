{"sha": "a9baa16482ba4100df529ccba39c787f27ad0475", "node_id": "C_kwDOAAsO6NoAKGE5YmFhMTY0ODJiYTQxMDBkZjUyOWNjYmEzOWM3ODdmMjdhZDA0NzU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-02T14:03:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-02T14:03:37Z"}, "message": "Auto merge of #112152 - jyn514:doc-msg, r=clubby789\n\nFix the progress message for `x doc rustc`\n\nThis makes it more clear that we're using stage 0 *to document* rustc, not that we're documenting stage0 rustc itself.\n\nIt also fixes a bug in `msg_sysroot_tool` that would print `Docing`, and removes the `Debug` impl for `Kind` to make sure it doesn't happen again.\n\nBefore:\n```\nDocumenting stage0 compiler {rustc-main} (aarch64-apple-darwin)\n```\n\nAfter:\n```\nDocumenting compiler {rustc-main} (stage0 -> stage1, aarch64-apple-darwin)\n```\n\nthanks `@BoxyUwU` for catching this!", "tree": {"sha": "9328392819b9315913aad38787ebcf34682c8156", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9328392819b9315913aad38787ebcf34682c8156"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9baa16482ba4100df529ccba39c787f27ad0475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9baa16482ba4100df529ccba39c787f27ad0475", "html_url": "https://github.com/rust-lang/rust/commit/a9baa16482ba4100df529ccba39c787f27ad0475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9baa16482ba4100df529ccba39c787f27ad0475/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0939ec13d88dfafcbb7f25314bd0d2f1519bf0d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0939ec13d88dfafcbb7f25314bd0d2f1519bf0d5", "html_url": "https://github.com/rust-lang/rust/commit/0939ec13d88dfafcbb7f25314bd0d2f1519bf0d5"}, {"sha": "38c0ba7d0dbb2ad69650e959050987a628037344", "url": "https://api.github.com/repos/rust-lang/rust/commits/38c0ba7d0dbb2ad69650e959050987a628037344", "html_url": "https://github.com/rust-lang/rust/commit/38c0ba7d0dbb2ad69650e959050987a628037344"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "3b9270f563c1ab4371981be5eab3cbb16df92b47", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a9baa16482ba4100df529ccba39c787f27ad0475/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9baa16482ba4100df529ccba39c787f27ad0475/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=a9baa16482ba4100df529ccba39c787f27ad0475", "patch": "@@ -571,7 +571,7 @@ impl<'a> ShouldRun<'a> {\n     }\n }\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug, ValueEnum)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, ValueEnum)]\n pub enum Kind {\n     #[clap(alias = \"b\")]\n     Build,\n@@ -642,7 +642,10 @@ impl Kind {\n             Kind::Doc => \"Documenting\",\n             Kind::Run => \"Running\",\n             Kind::Suggest => \"Suggesting\",\n-            _ => return format!(\"{self:?}\"),\n+            _ => {\n+                let title_letter = self.as_str()[0..1].to_ascii_uppercase();\n+                return format!(\"{title_letter}{}ing\", &self.as_str()[1..]);\n+            }\n         }\n         .to_owned()\n     }"}, {"sha": "2e715fce945e1d0354896b278c3203daa97d3186", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9baa16482ba4100df529ccba39c787f27ad0475/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9baa16482ba4100df529ccba39c787f27ad0475/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=a9baa16482ba4100df529ccba39c787f27ad0475", "patch": "@@ -680,7 +680,7 @@ impl Step for Rustc {\n         let compiler = builder.compiler(stage, builder.config.build);\n         builder.ensure(compile::Std::new(compiler, builder.config.build));\n \n-        let _guard = builder.msg(\n+        let _guard = builder.msg_sysroot_tool(\n             Kind::Doc,\n             stage,\n             &format!(\"compiler{}\", crate_description(&self.crates)),"}, {"sha": "aa5d1bdd37f99ed6e7e885239030d4f8d398f745", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a9baa16482ba4100df529ccba39c787f27ad0475/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9baa16482ba4100df529ccba39c787f27ad0475/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=a9baa16482ba4100df529ccba39c787f27ad0475", "patch": "@@ -1045,8 +1045,8 @@ impl Build {\n         what: impl Display,\n         target: TargetSelection,\n     ) -> Option<gha::Group> {\n-        let action = action.into();\n-        let msg = format!(\"{action:?}ing {what} for {target}\");\n+        let action = action.into().description();\n+        let msg = format!(\"{action} {what} for {target}\");\n         self.group(&msg)\n     }\n \n@@ -1058,8 +1058,8 @@ impl Build {\n         host: TargetSelection,\n         target: TargetSelection,\n     ) -> Option<gha::Group> {\n-        let action = action.into();\n-        let msg = |fmt| format!(\"{action:?}ing {what} {fmt}\");\n+        let action = action.into().description();\n+        let msg = |fmt| format!(\"{action} {what} {fmt}\");\n         let msg = if host == target {\n             msg(format_args!(\"(stage{stage} -> stage{}, {target})\", stage + 1))\n         } else {"}]}