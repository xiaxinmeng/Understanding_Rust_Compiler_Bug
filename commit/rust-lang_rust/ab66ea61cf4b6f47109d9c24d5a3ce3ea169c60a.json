{"sha": "ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a", "node_id": "C_kwDOAAsO6NoAKGFiNjZlYTYxY2Y0YjZmNDcxMDlkOWMyNGQ1YTNjZTNlYTE2OWM2MGE", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-10-05T12:23:00Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T22:07:25Z"}, "message": "add: `emit{,_spanned}_lint` for `LintLevelsBuilder`\n\nadd: `emit_spanned_lint` and `emit_lint` for `LintLevelsBuilder`\nmigrate: `DeprecatedLintName`", "tree": {"sha": "04118315f2b0ea3ea15c299b51e0794c35818dbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04118315f2b0ea3ea15c299b51e0794c35818dbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a", "html_url": "https://github.com/rust-lang/rust/commit/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9289c35fb0a6e1ddde9200423cdd7d5dafb0886", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886", "html_url": "https://github.com/rust-lang/rust/commit/f9289c35fb0a6e1ddde9200423cdd7d5dafb0886"}], "stats": {"total": 62, "additions": 43, "deletions": 19}, "files": [{"sha": "78b8f6aaae9e2cd8adfc81a1617fd19f11a94c56", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a", "patch": "@@ -16,6 +16,10 @@ lint_enum_intrinsics_mem_variant =\n lint_expectation = this lint expectation is unfulfilled\n     .note = the `unfulfilled_lint_expectations` lint can't be expected and will always produce this message\n \n+lint_deprecated_lint_name =\n+    lint name `{$name}` is deprecated and may not have an effect in the future.\n+    .suggestion = change it to\n+\n lint_hidden_unicode_codepoints = unicode codepoint changing visible direction of text present in {$label}\n     .label = this {$label} contains {$count ->\n         [one] an invisible"}, {"sha": "edbf0c6f37a093580271bffe9547ce2ae6f8e694", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a", "patch": "@@ -1,9 +1,12 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n+use crate::lints::DeprecatedLintName;\n use rustc_ast as ast;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, DiagnosticMessage, MultiSpan};\n+use rustc_errors::{\n+    Applicability, DecorateLint, Diagnostic, DiagnosticBuilder, DiagnosticMessage, MultiSpan,\n+};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::HirId;\n@@ -858,25 +861,13 @@ impl<'s, P: LintLevelsProvider> LintLevelsBuilder<'s, P> {\n                             }\n                             Err((Some(ids), ref new_lint_name)) => {\n                                 let lint = builtin::RENAMED_AND_REMOVED_LINTS;\n-                                let (lvl, src) = self.provider.get_lint_level(lint, &sess);\n-                                struct_lint_level(\n-                                    self.sess,\n+                                self.emit_spanned_lint(\n                                     lint,\n-                                    lvl,\n-                                    src,\n-                                    Some(sp.into()),\n-                                    format!(\n-                                        \"lint name `{}` is deprecated \\\n-                                         and may not have an effect in the future.\",\n-                                        name\n-                                    ),\n-                                    |lint| {\n-                                        lint.span_suggestion(\n-                                            sp,\n-                                            \"change it to\",\n-                                            new_lint_name,\n-                                            Applicability::MachineApplicable,\n-                                        )\n+                                    sp.into(),\n+                                    DeprecatedLintName {\n+                                        name,\n+                                        suggestion: sp,\n+                                        replace: &new_lint_name,\n                                     },\n                                 );\n \n@@ -1086,6 +1077,25 @@ impl<'s, P: LintLevelsProvider> LintLevelsBuilder<'s, P> {\n         let (level, src) = self.lint_level(lint);\n         struct_lint_level(self.sess, lint, level, src, span, msg, decorate)\n     }\n+\n+    pub fn emit_spanned_lint(\n+        &self,\n+        lint: &'static Lint,\n+        span: MultiSpan,\n+        decorate: impl for<'a> DecorateLint<'a, ()>,\n+    ) {\n+        let (level, src) = self.lint_level(lint);\n+        struct_lint_level(self.sess, lint, level, src, Some(span), decorate.msg(), |lint| {\n+            decorate.decorate_lint(lint)\n+        });\n+    }\n+\n+    pub fn emit_lint(&self, lint: &'static Lint, decorate: impl for<'a> DecorateLint<'a, ()>) {\n+        let (level, src) = self.lint_level(lint);\n+        struct_lint_level(self.sess, lint, level, src, None, decorate.msg(), |lint| {\n+            decorate.decorate_lint(lint)\n+        });\n+    }\n }\n \n pub(crate) fn provide(providers: &mut Providers) {"}, {"sha": "942497a1d57a7c9dd9a4bbfed13d1cf4f40a7755", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=ab66ea61cf4b6f47109d9c24d5a3ce3ea169c60a", "patch": "@@ -49,6 +49,16 @@ pub struct EnumIntrinsicsMemVariant<'a> {\n     pub ty_param: Ty<'a>,\n }\n \n+// levels.rs\n+#[derive(LintDiagnostic)]\n+#[diag(lint::deprecated_lint_name)]\n+pub struct DeprecatedLintName<'a> {\n+    pub name: String,\n+    #[suggestion(code = \"{replace}\", applicability = \"machine-applicable\")]\n+    pub suggestion: Span,\n+    pub replace: &'a str,\n+}\n+\n // methods.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_cstring_ptr)]"}]}