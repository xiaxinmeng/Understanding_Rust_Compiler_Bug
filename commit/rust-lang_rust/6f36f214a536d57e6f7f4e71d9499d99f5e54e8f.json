{"sha": "6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMzZmMjE0YTUzNmQ1N2U2ZjdmNGU3MWQ5NDk5ZDk5ZjVlNTRlOGY=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-10-03T11:28:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-03T11:28:53Z"}, "message": "Merge pull request #2065 from rust-lang-nursery/cargo_clippy\n\nCargo clippy refactoring", "tree": {"sha": "d9f1458dc7920d31a4f59f36da2d43f2e3cf56a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9f1458dc7920d31a4f59f36da2d43f2e3cf56a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "html_url": "https://github.com/rust-lang/rust/commit/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "html_url": "https://github.com/rust-lang/rust/commit/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee"}, {"sha": "50ffaca4c9686af96ab86a8ec201f5b31dd62a32", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ffaca4c9686af96ab86a8ec201f5b31dd62a32", "html_url": "https://github.com/rust-lang/rust/commit/50ffaca4c9686af96ab86a8ec201f5b31dd62a32"}], "stats": {"total": 1750, "additions": 649, "deletions": 1101}, "files": [{"sha": "8fe1be2ddfaf6bf01686426fafeb9a9fde99438d", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -28,6 +28,7 @@ script:\n  - cargo test --features debugging\n  - mkdir -p ~/rust/cargo/bin\n  - cp target/debug/cargo-clippy ~/rust/cargo/bin/cargo-clippy\n+ - cp target/debug/clippy-driver ~/rust/cargo/bin/clippy-driver\n  - PATH=$PATH:~/rust/cargo/bin cargo clippy --all -- -D clippy\n  - cd clippy_workspace_tests && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy && cd ..\n  - cd clippy_workspace_tests/src && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy && cd ../.."}, {"sha": "3d3b8abaa7695882dab812dad70819c6a751c9cf", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -14,6 +14,7 @@ readme = \"README.md\"\n license = \"MPL-2.0\"\n keywords = [\"clippy\", \"lint\", \"plugin\"]\n categories = [\"development-tools\", \"development-tools::cargo-plugins\"]\n+build = \"build.rs\"\n \n [badges]\n travis-ci = { repository = \"rust-lang-nursery/rust-clippy\" }\n@@ -29,6 +30,11 @@ name = \"cargo-clippy\"\n test = false\n path = \"src/main.rs\"\n \n+[[bin]]\n+name = \"clippy-driver\"\n+test = false\n+path = \"src/driver.rs\"\n+\n [dependencies]\n # begin automatic update\n clippy_lints = { version = \"0.0.165\", path = \"clippy_lints\" }"}, {"sha": "1c930c1b2c95e531928f002e295c50f0eb31d782", "filename": "build.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -0,0 +1,8 @@\n+use std::env;\n+\n+fn main() {\n+    // Forward the profile to the main compilation\n+    println!(\"cargo:rustc-env=PROFILE={}\", env::var(\"PROFILE\").unwrap());\n+    // Don't rebuild even if nothing changed\n+    println!(\"cargo:rerun-if-changed=build.rs\");\n+}"}, {"sha": "ab5e90141a9a82037573817d63e031048561ded3", "filename": "src/driver.rs", "status": "added", "additions": 198, "deletions": 0, "changes": 198, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -0,0 +1,198 @@\n+// error-pattern:yummy\n+#![feature(box_syntax)]\n+#![feature(rustc_private)]\n+#![allow(unknown_lints, missing_docs_in_private_items)]\n+\n+extern crate clippy_lints;\n+extern crate getopts;\n+extern crate rustc;\n+extern crate rustc_driver;\n+extern crate rustc_errors;\n+extern crate rustc_plugin;\n+extern crate syntax;\n+\n+use rustc_driver::{driver, Compilation, CompilerCalls, RustcDefaultCalls};\n+use rustc::session::{config, CompileIncomplete, Session};\n+use rustc::session::config::{ErrorOutputType, Input};\n+use std::path::PathBuf;\n+use std::process::Command;\n+use syntax::ast;\n+\n+struct ClippyCompilerCalls {\n+    default: RustcDefaultCalls,\n+    run_lints: bool,\n+}\n+\n+impl ClippyCompilerCalls {\n+    fn new(run_lints: bool) -> Self {\n+        Self {\n+            default: RustcDefaultCalls,\n+            run_lints: run_lints,\n+        }\n+    }\n+}\n+\n+impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n+    fn early_callback(\n+        &mut self,\n+        matches: &getopts::Matches,\n+        sopts: &config::Options,\n+        cfg: &ast::CrateConfig,\n+        descriptions: &rustc_errors::registry::Registry,\n+        output: ErrorOutputType,\n+    ) -> Compilation {\n+        self.default\n+            .early_callback(matches, sopts, cfg, descriptions, output)\n+    }\n+    fn no_input(\n+        &mut self,\n+        matches: &getopts::Matches,\n+        sopts: &config::Options,\n+        cfg: &ast::CrateConfig,\n+        odir: &Option<PathBuf>,\n+        ofile: &Option<PathBuf>,\n+        descriptions: &rustc_errors::registry::Registry,\n+    ) -> Option<(Input, Option<PathBuf>)> {\n+        self.default\n+            .no_input(matches, sopts, cfg, odir, ofile, descriptions)\n+    }\n+    fn late_callback(\n+        &mut self,\n+        matches: &getopts::Matches,\n+        sess: &Session,\n+        crate_stores: &rustc::middle::cstore::CrateStore,\n+        input: &Input,\n+        odir: &Option<PathBuf>,\n+        ofile: &Option<PathBuf>,\n+    ) -> Compilation {\n+        self.default\n+            .late_callback(matches, sess, crate_stores, input, odir, ofile)\n+    }\n+    fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> driver::CompileController<'a> {\n+        let mut control = self.default.build_controller(sess, matches);\n+\n+        if self.run_lints {\n+            let old = std::mem::replace(&mut control.after_parse.callback, box |_| {});\n+            control.after_parse.callback = Box::new(move |state| {\n+                {\n+                    let mut registry = rustc_plugin::registry::Registry::new(\n+                        state.session,\n+                        state\n+                            .krate\n+                            .as_ref()\n+                            .expect(\n+                                \"at this compilation stage \\\n+                                 the krate must be parsed\",\n+                            )\n+                            .span,\n+                    );\n+                    registry.args_hidden = Some(Vec::new());\n+                    clippy_lints::register_plugins(&mut registry);\n+\n+                    let rustc_plugin::registry::Registry {\n+                        early_lint_passes,\n+                        late_lint_passes,\n+                        lint_groups,\n+                        llvm_passes,\n+                        attributes,\n+                        ..\n+                    } = registry;\n+                    let sess = &state.session;\n+                    let mut ls = sess.lint_store.borrow_mut();\n+                    for pass in early_lint_passes {\n+                        ls.register_early_pass(Some(sess), true, pass);\n+                    }\n+                    for pass in late_lint_passes {\n+                        ls.register_late_pass(Some(sess), true, pass);\n+                    }\n+\n+                    for (name, to) in lint_groups {\n+                        ls.register_group(Some(sess), true, name, to);\n+                    }\n+\n+                    sess.plugin_llvm_passes.borrow_mut().extend(llvm_passes);\n+                    sess.plugin_attributes.borrow_mut().extend(attributes);\n+                }\n+                old(state);\n+            });\n+        }\n+\n+        control\n+    }\n+}\n+\n+#[allow(print_stdout)]\n+fn show_version() {\n+    println!(\"{}\", env!(\"CARGO_PKG_VERSION\"));\n+}\n+\n+pub fn main() {\n+    use std::env;\n+\n+    if env::var(\"CLIPPY_DOGFOOD\").map(|_| true).unwrap_or(false) {\n+        panic!(\"yummy\");\n+    }\n+\n+    if std::env::args().any(|a| a == \"--version\" || a == \"-V\") {\n+        show_version();\n+        return;\n+    }\n+\n+    let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n+    let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n+    let sys_root = if let (Some(home), Some(toolchain)) = (home, toolchain) {\n+        format!(\"{}/toolchains/{}\", home, toolchain)\n+    } else {\n+        option_env!(\"SYSROOT\")\n+            .map(|s| s.to_owned())\n+            .or_else(|| {\n+                Command::new(\"rustc\")\n+                    .arg(\"--print\")\n+                    .arg(\"sysroot\")\n+                    .output()\n+                    .ok()\n+                    .and_then(|out| String::from_utf8(out.stdout).ok())\n+                    .map(|s| s.trim().to_owned())\n+            })\n+            .expect(\n+                \"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\",\n+            )\n+    };\n+\n+    rustc_driver::in_rustc_thread(|| {\n+        // Setting RUSTC_WRAPPER causes Cargo to pass 'rustc' as the first argument.\n+        // We're invoking the compiler programatically, so we ignore this/\n+        let mut orig_args: Vec<String> = env::args().collect();\n+        if orig_args[1] == \"rustc\" {\n+            // we still want to be able to invoke it normally though\n+            orig_args.remove(1);\n+        }\n+        // this conditional check for the --sysroot flag is there so users can call\n+        // `clippy_driver` directly\n+        // without having to pass --sysroot or anything\n+        let mut args: Vec<String> = if orig_args.iter().any(|s| s == \"--sysroot\") {\n+            orig_args.clone()\n+        } else {\n+            orig_args.clone().into_iter()\n+                .chain(Some(\"--sysroot\".to_owned()))\n+                .chain(Some(sys_root))\n+                .collect()\n+        };\n+\n+        // this check ensures that dependencies are built but not linted and the final\n+        // crate is\n+        // linted but not built\n+        let clippy_enabled = env::var(\"CLIPPY_TESTS\").ok().map_or(false, |val| val == \"true\") ||\n+            orig_args.iter().any(|s| s == \"--emit=metadata\");\n+\n+        if clippy_enabled {\n+            args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-clippy\"\"#.to_owned()]);\n+        }\n+\n+        let mut ccc = ClippyCompilerCalls::new(clippy_enabled);\n+        let (result, _) = rustc_driver::run_compiler(&args, &mut ccc, None, None);\n+        if let Err(CompileIncomplete::Errored(_)) = result {\n+            std::process::exit(1);\n+        }\n+    }).expect(\"rustc_thread failed\");\n+}"}, {"sha": "69f416e20925f62e08f83e46c2b086d77ce8ad69", "filename": "src/main.rs", "status": "modified", "additions": 89, "deletions": 264, "changes": 353, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -3,128 +3,12 @@\n #![feature(rustc_private)]\n #![allow(unknown_lints, missing_docs_in_private_items)]\n \n-extern crate clippy_lints;\n-extern crate getopts;\n-extern crate rustc;\n-extern crate rustc_driver;\n-extern crate rustc_errors;\n-extern crate rustc_plugin;\n-extern crate syntax;\n-\n-use rustc_driver::{driver, Compilation, CompilerCalls, RustcDefaultCalls};\n-use rustc::session::{config, CompileIncomplete, Session};\n-use rustc::session::config::{ErrorOutputType, Input};\n use std::collections::HashMap;\n-use std::path::PathBuf;\n-use std::process::{self, Command};\n-use syntax::ast;\n+use std::process;\n use std::io::{self, Write};\n \n extern crate cargo_metadata;\n \n-struct ClippyCompilerCalls {\n-    default: RustcDefaultCalls,\n-    run_lints: bool,\n-}\n-\n-impl ClippyCompilerCalls {\n-    fn new(run_lints: bool) -> Self {\n-        Self {\n-            default: RustcDefaultCalls,\n-            run_lints: run_lints,\n-        }\n-    }\n-}\n-\n-impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n-    fn early_callback(\n-        &mut self,\n-        matches: &getopts::Matches,\n-        sopts: &config::Options,\n-        cfg: &ast::CrateConfig,\n-        descriptions: &rustc_errors::registry::Registry,\n-        output: ErrorOutputType,\n-    ) -> Compilation {\n-        self.default\n-            .early_callback(matches, sopts, cfg, descriptions, output)\n-    }\n-    fn no_input(\n-        &mut self,\n-        matches: &getopts::Matches,\n-        sopts: &config::Options,\n-        cfg: &ast::CrateConfig,\n-        odir: &Option<PathBuf>,\n-        ofile: &Option<PathBuf>,\n-        descriptions: &rustc_errors::registry::Registry,\n-    ) -> Option<(Input, Option<PathBuf>)> {\n-        self.default\n-            .no_input(matches, sopts, cfg, odir, ofile, descriptions)\n-    }\n-    fn late_callback(\n-        &mut self,\n-        matches: &getopts::Matches,\n-        sess: &Session,\n-        crate_stores: &rustc::middle::cstore::CrateStore,\n-        input: &Input,\n-        odir: &Option<PathBuf>,\n-        ofile: &Option<PathBuf>,\n-    ) -> Compilation {\n-        self.default\n-            .late_callback(matches, sess, crate_stores, input, odir, ofile)\n-    }\n-    fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> driver::CompileController<'a> {\n-        let mut control = self.default.build_controller(sess, matches);\n-\n-        if self.run_lints {\n-            let old = std::mem::replace(&mut control.after_parse.callback, box |_| {});\n-            control.after_parse.callback = Box::new(move |state| {\n-                {\n-                    let mut registry = rustc_plugin::registry::Registry::new(\n-                        state.session,\n-                        state\n-                            .krate\n-                            .as_ref()\n-                            .expect(\n-                                \"at this compilation stage \\\n-                                 the krate must be parsed\",\n-                            )\n-                            .span,\n-                    );\n-                    registry.args_hidden = Some(Vec::new());\n-                    clippy_lints::register_plugins(&mut registry);\n-\n-                    let rustc_plugin::registry::Registry {\n-                        early_lint_passes,\n-                        late_lint_passes,\n-                        lint_groups,\n-                        llvm_passes,\n-                        attributes,\n-                        ..\n-                    } = registry;\n-                    let sess = &state.session;\n-                    let mut ls = sess.lint_store.borrow_mut();\n-                    for pass in early_lint_passes {\n-                        ls.register_early_pass(Some(sess), true, pass);\n-                    }\n-                    for pass in late_lint_passes {\n-                        ls.register_late_pass(Some(sess), true, pass);\n-                    }\n-\n-                    for (name, to) in lint_groups {\n-                        ls.register_group(Some(sess), true, name, to);\n-                    }\n-\n-                    sess.plugin_llvm_passes.borrow_mut().extend(llvm_passes);\n-                    sess.plugin_attributes.borrow_mut().extend(attributes);\n-                }\n-                old(state);\n-            });\n-        }\n-\n-        control\n-    }\n-}\n-\n use std::path::Path;\n \n const CARGO_CLIPPY_HELP: &str = r#\"Checks a package to catch common mistakes and improve your Rust code.\n@@ -181,166 +65,105 @@ pub fn main() {\n         return;\n     }\n \n-    if \"clippy\" == std::env::args().nth(1).as_ref().expect(\"cargo-clippy should be called with at least one argument!\") {\n-        // this arm is executed on the initial call to `cargo clippy`\n-\n-        let manifest_path_arg = std::env::args()\n-            .skip(2)\n-            .find(|val| val.starts_with(\"--manifest-path=\"));\n-\n-        let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref))\n-        {\n-            metadata\n-        } else {\n-            let _ = io::stderr().write_fmt(format_args!(\"error: Could not obtain cargo metadata.\\n\"));\n-            process::exit(101);\n-        };\n+    let manifest_path_arg = std::env::args()\n+        .skip(2)\n+        .find(|val| val.starts_with(\"--manifest-path=\"));\n \n-        let manifest_path = manifest_path_arg.map(|arg| {\n-            Path::new(&arg[\"--manifest-path=\".len()..])\n-                .canonicalize()\n-                .expect(\"manifest path could not be canonicalized\")\n-        });\n-\n-        let packages = if std::env::args().any(|a| a == \"--all\") {\n-            metadata.packages\n-        } else {\n-            let package_index = {\n-                if let Some(manifest_path) = manifest_path {\n-                    metadata.packages.iter().position(|package| {\n+    let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref))\n+    {\n+        metadata\n+    } else {\n+        let _ = io::stderr().write_fmt(format_args!(\"error: Could not obtain cargo metadata.\\n\"));\n+        process::exit(101);\n+    };\n+\n+    let manifest_path = manifest_path_arg.map(|arg| {\n+        Path::new(&arg[\"--manifest-path=\".len()..])\n+            .canonicalize()\n+            .expect(\"manifest path could not be canonicalized\")\n+    });\n+\n+    let packages = if std::env::args().any(|a| a == \"--all\") {\n+        metadata.packages\n+    } else {\n+        let package_index = {\n+            if let Some(manifest_path) = manifest_path {\n+                metadata.packages.iter().position(|package| {\n+                    let package_manifest_path = Path::new(&package.manifest_path)\n+                        .canonicalize()\n+                        .expect(\"package manifest path could not be canonicalized\");\n+                    package_manifest_path == manifest_path\n+                })\n+            } else {\n+                let package_manifest_paths: HashMap<_, _> = metadata\n+                    .packages\n+                    .iter()\n+                    .enumerate()\n+                    .map(|(i, package)| {\n                         let package_manifest_path = Path::new(&package.manifest_path)\n+                            .parent()\n+                            .expect(\"could not find parent directory of package manifest\")\n                             .canonicalize()\n-                            .expect(\"package manifest path could not be canonicalized\");\n-                        package_manifest_path == manifest_path\n+                            .expect(\"package directory cannot be canonicalized\");\n+                        (package_manifest_path, i)\n                     })\n-                } else {\n-                    let package_manifest_paths: HashMap<_, _> = metadata\n-                        .packages\n-                        .iter()\n-                        .enumerate()\n-                        .map(|(i, package)| {\n-                            let package_manifest_path = Path::new(&package.manifest_path)\n-                                .parent()\n-                                .expect(\"could not find parent directory of package manifest\")\n-                                .canonicalize()\n-                                .expect(\"package directory cannot be canonicalized\");\n-                            (package_manifest_path, i)\n-                        })\n-                        .collect();\n-\n-                    let current_dir = std::env::current_dir()\n-                        .expect(\"could not read current directory\")\n-                        .canonicalize()\n-                        .expect(\"current directory cannot be canonicalized\");\n-\n-                    let mut current_path: &Path = &current_dir;\n-\n-                    // This gets the most-recent parent (the one that takes the fewest `cd ..`s to\n-                    // reach).\n-                    loop {\n-                        if let Some(&package_index) = package_manifest_paths.get(current_path) {\n-                            break Some(package_index);\n-                        } else {\n-                            // We'll never reach the filesystem root, because to get to this point in the\n-                            // code\n-                            // the call to `cargo_metadata::metadata` must have succeeded. So it's okay to\n-                            // unwrap the current path's parent.\n-                            current_path = current_path\n-                                .parent()\n-                                .unwrap_or_else(|| panic!(\"could not find parent of path {}\", current_path.display()));\n-                        }\n+                    .collect();\n+\n+                let current_dir = std::env::current_dir()\n+                    .expect(\"could not read current directory\")\n+                    .canonicalize()\n+                    .expect(\"current directory cannot be canonicalized\");\n+\n+                let mut current_path: &Path = &current_dir;\n+\n+                // This gets the most-recent parent (the one that takes the fewest `cd ..`s to\n+                // reach).\n+                loop {\n+                    if let Some(&package_index) = package_manifest_paths.get(current_path) {\n+                        break Some(package_index);\n+                    } else {\n+                        // We'll never reach the filesystem root, because to get to this point in the\n+                        // code\n+                        // the call to `cargo_metadata::metadata` must have succeeded. So it's okay to\n+                        // unwrap the current path's parent.\n+                        current_path = current_path\n+                            .parent()\n+                            .unwrap_or_else(|| panic!(\"could not find parent of path {}\", current_path.display()));\n                     }\n                 }\n-            }.expect(\"could not find matching package\");\n+            }\n+        }.expect(\"could not find matching package\");\n \n-            vec![metadata.packages.remove(package_index)]\n-        };\n+        vec![metadata.packages.remove(package_index)]\n+    };\n \n-        for package in packages {\n-            let manifest_path = package.manifest_path;\n+    for package in packages {\n+        let manifest_path = package.manifest_path;\n \n-            for target in package.targets {\n-                let args = std::env::args()\n-                    .skip(2)\n-                    .filter(|a| a != \"--all\" && !a.starts_with(\"--manifest-path=\"));\n+        for target in package.targets {\n+            let args = std::env::args()\n+                .skip(2)\n+                .filter(|a| a != \"--all\" && !a.starts_with(\"--manifest-path=\"));\n \n-                let args = std::iter::once(format!(\"--manifest-path={}\", manifest_path)).chain(args);\n-                if let Some(first) = target.kind.get(0) {\n-                    if target.kind.len() > 1 || first.ends_with(\"lib\") {\n-                        if let Err(code) = process(std::iter::once(\"--lib\".to_owned()).chain(args)) {\n-                            std::process::exit(code);\n-                        }\n-                    } else if [\"bin\", \"example\", \"test\", \"bench\"].contains(&&**first) {\n-                        if let Err(code) = process(\n-                            vec![format!(\"--{}\", first), target.name]\n-                                .into_iter()\n-                                .chain(args),\n-                        ) {\n-                            std::process::exit(code);\n-                        }\n+            let args = std::iter::once(format!(\"--manifest-path={}\", manifest_path)).chain(args);\n+            if let Some(first) = target.kind.get(0) {\n+                if target.kind.len() > 1 || first.ends_with(\"lib\") {\n+                    if let Err(code) = process(std::iter::once(\"--lib\".to_owned()).chain(args)) {\n+                        std::process::exit(code);\n+                    }\n+                } else if [\"bin\", \"example\", \"test\", \"bench\"].contains(&&**first) {\n+                    if let Err(code) = process(\n+                        vec![format!(\"--{}\", first), target.name]\n+                            .into_iter()\n+                            .chain(args),\n+                    ) {\n+                        std::process::exit(code);\n                     }\n-                } else {\n-                    panic!(\"badly formatted cargo metadata: target::kind is an empty array\");\n                 }\n-            }\n-        }\n-    } else {\n-        // this arm is executed when cargo-clippy runs `cargo rustc` with the `RUSTC_WRAPPER`\n-        // env var set to itself\n-\n-        let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n-        let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-        let sys_root = if let (Some(home), Some(toolchain)) = (home, toolchain) {\n-            format!(\"{}/toolchains/{}\", home, toolchain)\n-        } else {\n-            option_env!(\"SYSROOT\")\n-                .map(|s| s.to_owned())\n-                .or_else(|| {\n-                    Command::new(\"rustc\")\n-                        .arg(\"--print\")\n-                        .arg(\"sysroot\")\n-                        .output()\n-                        .ok()\n-                        .and_then(|out| String::from_utf8(out.stdout).ok())\n-                        .map(|s| s.trim().to_owned())\n-                })\n-                .expect(\n-                    \"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\",\n-                )\n-        };\n-\n-        rustc_driver::in_rustc_thread(|| {\n-            // Setting RUSTC_WRAPPER causes Cargo to pass 'rustc' as the first argument.\n-            // We're invoking the compiler programatically, so we ignore this/\n-            let orig_args: Vec<String> = env::args().skip(1).collect();\n-\n-            // this conditional check for the --sysroot flag is there so users can call\n-            // `cargo-clippy` directly\n-            // without having to pass --sysroot or anything\n-            let mut args: Vec<String> = if orig_args.iter().any(|s| s == \"--sysroot\") {\n-                orig_args.clone()\n             } else {\n-                orig_args.clone().into_iter()\n-                    .chain(Some(\"--sysroot\".to_owned()))\n-                    .chain(Some(sys_root))\n-                    .collect()\n-            };\n-\n-            // this check ensures that dependencies are built but not linted and the final\n-            // crate is\n-            // linted but not built\n-            let clippy_enabled = orig_args.iter().any(|s| s == \"--emit=metadata\");\n-\n-            if clippy_enabled {\n-                args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-clippy\"\"#.to_owned()]);\n+                panic!(\"badly formatted cargo metadata: target::kind is an empty array\");\n             }\n-\n-            let mut ccc = ClippyCompilerCalls::new(clippy_enabled);\n-            let (result, _) = rustc_driver::run_compiler(&args, &mut ccc, None, None);\n-            if let Err(CompileIncomplete::Errored(_)) = result {\n-                std::process::exit(1);\n-            }\n-        }).expect(\"rustc_thread failed\");\n+        }\n     }\n }\n \n@@ -362,7 +185,9 @@ where\n     args.push(\"--cfg\".to_owned());\n     args.push(r#\"feature=\"cargo-clippy\"\"#.to_owned());\n \n-    let path = std::env::current_exe().expect(\"current executable path invalid\");\n+    let path = std::env::current_exe()\n+        .expect(\"current executable path invalid\")\n+        .with_file_name(\"clippy-driver\");\n     let exit_status = std::process::Command::new(\"cargo\")\n         .args(&args)\n         .env(\"RUSTC_WRAPPER\", path)"}, {"sha": "be8793215dc21704a01dbd521f399c68560b7ec7", "filename": "tests/compile-test.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -3,6 +3,14 @@ extern crate compiletest_rs as compiletest;\n use std::path::PathBuf;\n use std::env::{set_var, var};\n \n+fn clippy_driver_path() -> PathBuf {\n+    if let Some(path) = option_env!(\"CLIPPY_DRIVER_PATH\") {\n+        PathBuf::from(path)\n+    } else {\n+        PathBuf::from(concat!(\"target/\", env!(\"PROFILE\"), \"/clippy-driver\"))\n+    }\n+}\n+\n fn run_mode(dir: &'static str, mode: &'static str) {\n     let mut config = compiletest::Config::default();\n \n@@ -16,21 +24,20 @@ fn run_mode(dir: &'static str, mode: &'static str) {\n     config.mode = cfg_mode;\n     config.build_base = PathBuf::from(\"target/debug/test_build_base\");\n     config.src_base = PathBuf::from(format!(\"tests/{}\", dir));\n+    config.rustc_path = clippy_driver_path();\n \n     compiletest::run_tests(&config);\n }\n \n fn prepare_env() {\n     set_var(\"CLIPPY_DISABLE_DOCS_LINKS\", \"true\");\n+    set_var(\"CLIPPY_TESTS\", \"true\");\n+    set_var(\"RUST_BACKTRACE\", \"0\");\n }\n \n #[test]\n fn compile_test() {\n     prepare_env();\n     run_mode(\"run-pass\", \"run-pass\");\n     run_mode(\"ui\", \"ui\");\n-    #[cfg(target_os = \"windows\")]\n-    run_mode(\"ui-windows\", \"ui\");\n-    #[cfg(not(target_os = \"windows\"))]\n-    run_mode(\"ui-posix\", \"ui\");\n }"}, {"sha": "198bf465bd57486e007cdb52746c73634b6af275", "filename": "tests/conf_whitelisted.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fconf_whitelisted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fconf_whitelisted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconf_whitelisted.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,4 +1,3 @@\n #![feature(plugin)]\n #![plugin(clippy(conf_file=\"./tests/auxiliary/conf_whitelisted.toml\"))]\n \n-fn main() {}", "previous_filename": "tests/run-pass/conf_whitelisted.rs"}, {"sha": "744de9bcf384da5e405d67b3825f0d2b8d5d735d", "filename": "tests/run-pass/associated-constant-ice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fassociated-constant-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fassociated-constant-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fassociated-constant-ice.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n pub trait Trait {\n     const CONSTANT: u8;"}, {"sha": "21ed2dbf9910d4a582442358475a187598f799ef", "filename": "tests/run-pass/enum-glob-import-crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fenum-glob-import-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fenum-glob-import-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fenum-glob-import-crate.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![deny(clippy)]\n #![allow(unused_imports)]\n "}, {"sha": "780df52351154e0f149f84891d94a4288dfec40c", "filename": "tests/run-pass/ice-1588.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fice-1588.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fice-1588.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1588.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(clippy)]\n \n fn main() {"}, {"sha": "296339828480dc34bca63ba9b1cc2bb723d9e85e", "filename": "tests/run-pass/ice-1969.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fice-1969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fice-1969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1969.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(clippy)]\n \n fn main() { }"}, {"sha": "a1e3a6756e9e365fe5f7f8cc420402f9863711df", "filename": "tests/run-pass/ice-700.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fice-700.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fice-700.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-700.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![deny(clippy)]\n \n fn core() {}"}, {"sha": "adc308626b1b6202f89cf7830de15f8e4895a4f7", "filename": "tests/run-pass/mut_mut_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmut_mut_macro.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![deny(mut_mut, zero_ptr, cmp_nan)]\n #![allow(dead_code)]\n "}, {"sha": "0ebc1bf3c6c1d6e07e97d2c29aa53b119b0aa7ba", "filename": "tests/run-pass/needless_lifetimes_impl_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![feature(conservative_impl_trait)]\n #![deny(needless_lifetimes)]\n #![allow(dead_code)]"}, {"sha": "b185f6dc427734976ef1c0f8059ac9d5b3b1cc54", "filename": "tests/run-pass/procedural_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fprocedural_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fprocedural_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fprocedural_macro.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin)]\n-#![plugin(clippy, clippy_mini_macro_test)]\n+#![plugin(clippy_mini_macro_test)]\n \n #[deny(warnings)]\n fn main() {"}, {"sha": "d5e343c56c2077bc7490d4ffa354fe934248216f", "filename": "tests/run-pass/regressions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fregressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fregressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fregressions.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(blacklisted_name)]\n \n pub fn foo(bar: *const u8) {"}, {"sha": "b8fa7294dcde884b7ce22c42a852058ef929be1c", "filename": "tests/run-pass/single-match-else.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fsingle-match-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Frun-pass%2Fsingle-match-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsingle-match-else.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(single_match_else)]\n \n fn main() {"}, {"sha": "e287f7e02af932cc5f8ba849aaf8f18c89a9fc7b", "filename": "tests/ui-posix/conf_non_existant.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fconf_non_existant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fconf_non_existant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-posix%2Fconf_non_existant.rs?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,6 +0,0 @@\n-// error-pattern: error reading Clippy's configuration file\n-\n-#![feature(plugin)]\n-#![plugin(clippy(conf_file=\"./tests/auxiliary/non_existant_conf.toml\"))]\n-\n-fn main() {}"}, {"sha": "7920bd35589da9fe21b8bd22f98431949d299fbe", "filename": "tests/ui-posix/conf_non_existant.stderr", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fconf_non_existant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fconf_non_existant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-posix%2Fconf_non_existant.stderr?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,4 +0,0 @@\n-error: error reading Clippy's configuration file: No such file or directory (os error 2)\n-\n-error: aborting due to previous error\n-"}, {"sha": "d6aa69c7e8d3ecec149a1c3880b20ab18c8cabc2", "filename": "tests/ui-posix/update-all-references.sh", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-posix%2Fupdate-all-references.sh?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,28 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for all tests. The idea is that\n-# you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. You then\n-# run this script, which will copy those files over. If you find\n-# yourself manually editing a foo.stderr file, you're doing it wrong.\n-#\n-# See all `update-references.sh`, if you just want to update a single test.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" ]]; then\n-    echo \"usage: $0\"\n-fi\n-\n-BUILD_DIR=$PWD/target/debug/test_build_base\n-MY_DIR=$(dirname $0)\n-cd $MY_DIR\n-find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "aa99d35f7aa779924dd17c96675ee50449f3343f", "filename": "tests/ui-posix/update-references.sh", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-posix%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-posix%2Fupdate-references.sh?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,50 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for particular tests. The idea is\n-# that you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. This\n-# script will then copy that output and replace the \"expected output\"\n-# files. You can then commit the changes.\n-#\n-# If you find yourself manually editing a foo.stderr file, you're\n-# doing it wrong.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n-    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n-fi\n-\n-MYDIR=$(dirname $0)\n-\n-BUILD_DIR=\"$1\"\n-shift\n-\n-while [[ \"$1\" != \"\" ]]; do\n-    STDERR_NAME=\"${1/%.rs/.stderr}\"\n-    STDOUT_NAME=\"${1/%.rs/.stdout}\"\n-    shift\n-    if [ -f $BUILD_DIR/$STDOUT_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDOUT_NAME\n-        cp $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME\n-    fi\n-    if [ -f $BUILD_DIR/$STDERR_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDERR_NAME\n-        cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n-    fi\n-done\n-\n-"}, {"sha": "e287f7e02af932cc5f8ba849aaf8f18c89a9fc7b", "filename": "tests/ui-windows/conf_non_existant.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fconf_non_existant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fconf_non_existant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-windows%2Fconf_non_existant.rs?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,6 +0,0 @@\n-// error-pattern: error reading Clippy's configuration file\n-\n-#![feature(plugin)]\n-#![plugin(clippy(conf_file=\"./tests/auxiliary/non_existant_conf.toml\"))]\n-\n-fn main() {}"}, {"sha": "f21ae524f5eaafee1d82f7a66edbcb23a42594e8", "filename": "tests/ui-windows/conf_non_existant.stderr", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fconf_non_existant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fconf_non_existant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-windows%2Fconf_non_existant.stderr?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,4 +0,0 @@\n-error: error reading Clippy's configuration file: The system cannot find the file specified. (os error 2)\n-\n-error: aborting due to previous error\n-"}, {"sha": "d6aa69c7e8d3ecec149a1c3880b20ab18c8cabc2", "filename": "tests/ui-windows/update-all-references.sh", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-windows%2Fupdate-all-references.sh?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,28 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for all tests. The idea is that\n-# you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. You then\n-# run this script, which will copy those files over. If you find\n-# yourself manually editing a foo.stderr file, you're doing it wrong.\n-#\n-# See all `update-references.sh`, if you just want to update a single test.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" ]]; then\n-    echo \"usage: $0\"\n-fi\n-\n-BUILD_DIR=$PWD/target/debug/test_build_base\n-MY_DIR=$(dirname $0)\n-cd $MY_DIR\n-find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "aa99d35f7aa779924dd17c96675ee50449f3343f", "filename": "tests/ui-windows/update-references.sh", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui-windows%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-windows%2Fupdate-references.sh?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,50 +0,0 @@\n-#!/bin/bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for particular tests. The idea is\n-# that you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. This\n-# script will then copy that output and replace the \"expected output\"\n-# files. You can then commit the changes.\n-#\n-# If you find yourself manually editing a foo.stderr file, you're\n-# doing it wrong.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n-    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n-fi\n-\n-MYDIR=$(dirname $0)\n-\n-BUILD_DIR=\"$1\"\n-shift\n-\n-while [[ \"$1\" != \"\" ]]; do\n-    STDERR_NAME=\"${1/%.rs/.stderr}\"\n-    STDOUT_NAME=\"${1/%.rs/.stdout}\"\n-    shift\n-    if [ -f $BUILD_DIR/$STDOUT_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDOUT_NAME\n-        cp $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME\n-    fi\n-    if [ -f $BUILD_DIR/$STDERR_NAME ] && \\\n-           ! (diff $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME >& /dev/null); then\n-        echo updating $MYDIR/$STDERR_NAME\n-        cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n-    fi\n-done\n-\n-"}, {"sha": "1f88d94bd2ba683298fdd83ef471cace56507aa1", "filename": "tests/ui/absurd-extreme-comparisons.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(absurd_extreme_comparisons)]\n #![allow(unused, eq_op, no_effect, unnecessary_operation, needless_pass_by_value)]"}, {"sha": "a4b8839797c3a883384908f729d47cbed9050929", "filename": "tests/ui/absurd-extreme-comparisons.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -143,5 +143,3 @@ error: <-comparison of unit values detected. This will always be false\n    |\n    = note: `-D unit-cmp` implied by `-D warnings`\n \n-error: aborting due to 18 previous errors\n-"}, {"sha": "f2239ecb467ce004ccb5d512fa8308b0cf548ebc", "filename": "tests/ui/approx_const.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(approx_constant)]\n #[allow(unused, shadow_unrelated, similar_names)]"}, {"sha": "f102dc5b5dcae594cf480bb246bf77a831c4727f", "filename": "tests/ui/approx_const.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fapprox_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fapprox_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -114,5 +114,3 @@ error: approximate value of `f{32, 64}::consts::SQRT_2` found. Consider using it\n 55 |     let my_sq2 = 1.4142;\n    |                  ^^^^^^\n \n-error: aborting due to 19 previous errors\n-"}, {"sha": "7ed71b597074fec7767cc670f8b789f0a6c95668", "filename": "tests/ui/arithmetic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(integer_arithmetic, float_arithmetic)]\n #![allow(unused, shadow_reuse, shadow_unrelated, no_effect, unnecessary_operation)]"}, {"sha": "ea32a005219088bd0967fba2e3780add7732b5f9", "filename": "tests/ui/arithmetic.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -69,5 +69,3 @@ error: floating-point arithmetic detected\n 29 |     -f;\n    |     ^^\n \n-error: aborting due to 11 previous errors\n-"}, {"sha": "faafa9a7a0d25c7ae687e4b79c364b4bacc10940", "filename": "tests/ui/array_indexing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farray_indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farray_indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farray_indexing.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(inclusive_range_syntax, plugin)]\n-#![plugin(clippy)]\n+\n \n #![warn(indexing_slicing)]\n #![warn(out_of_bounds_indexing)]"}, {"sha": "dd11247243c2c2851e648f9e49952a4d0fd1509a", "filename": "tests/ui/array_indexing.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farray_indexing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Farray_indexing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farray_indexing.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -116,5 +116,3 @@ error: range is out of bounds\n 44 |     &empty[..4];\n    |      ^^^^^^^^^^\n \n-error: aborting due to 19 previous errors\n-"}, {"sha": "2b49f2146ba4d4e29296f38e7d63d1e26b43ad1b", "filename": "tests/ui/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(assign_ops)]\n #[allow(unused_assignments)]"}, {"sha": "c1cc5d24426c46fa48f8430802a7e6d1722d7948", "filename": "tests/ui/assign_ops.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -134,5 +134,3 @@ error: manual implementation of an assign operation\n 40 |     s = s + \"bla\";\n    |     ^^^^^^^^^^^^^ help: replace it with: `s += \"bla\"`\n \n-error: aborting due to 22 previous errors\n-"}, {"sha": "8d6ef827f52dbf208eb69338d7a71122b03a7757", "filename": "tests/ui/assign_ops2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[allow(unused_assignments)]\n #[warn(misrefactored_assign_op)]"}, {"sha": "47528c315d435df3eab857fd6eaddb70a1d1ff61", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -48,5 +48,3 @@ error: variable appears on both sides of an assignment operation\n 15 |     a &= a & 1;\n    |     ^^^^^^^^^^ help: replace it with: `a &= 1`\n \n-error: aborting due to 8 previous errors\n-"}, {"sha": "eb27b833aded0742735a78809017ddc4c31ba895", "filename": "tests/ui/attrs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(inline_always, deprecated_semver)]\n "}, {"sha": "9e4ac3d12834793eca07ea9fb2562c10f300578e", "filename": "tests/ui/attrs.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fattrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fattrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -20,5 +20,3 @@ error: the since field must contain a semver-compliant version\n 30 | #[deprecated(since = \"1\")]\n    |              ^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "4843b4eba0d4a7ac16be529c1567402b55d88035", "filename": "tests/ui/bit_masks.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbit_masks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbit_masks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n const THREE_BITS : i64 = 7;\n const EVEN_MORE_REDIRECTION : i64 = THREE_BITS;"}, {"sha": "9f2c2d0a2c4aaeb65975b4994c9b160f63d25c39", "filename": "tests/ui/bit_masks.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbit_masks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbit_masks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -92,5 +92,3 @@ error: ineffective bit mask: `x | 1` compared to `8`, is the same as x compared\n 55 |     x | 1 >= 8;\n    |     ^^^^^^^^^^\n \n-error: aborting due to 15 previous errors\n-"}, {"sha": "7baeb7bb75cbbc7d3d76a11e3a32f5ff0030c5af", "filename": "tests/ui/blacklisted_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(dead_code, similar_names, single_match, toplevel_ref_arg, unused_mut, unused_variables)]\n #![warn(blacklisted_name)]"}, {"sha": "a08a532689439e11522cc1368e65f14658f10e78", "filename": "tests/ui/blacklisted_name.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -84,5 +84,3 @@ error: use of a blacklisted/placeholder name `baz`\n 35 |     if let Some(ref mut baz) = Some(42) {}\n    |                         ^^^\n \n-error: aborting due to 14 previous errors\n-"}, {"sha": "9e65a127af288dc76f40cf976e490e2ebc5eedfe", "filename": "tests/ui/block_in_if_condition.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(block_in_if_condition_expr)]\n #![warn(block_in_if_condition_stmt)]"}, {"sha": "86a289c19a84101ee128ce2d3bec42f9314c44ef", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -50,5 +50,3 @@ error: this boolean expression can be simplified\n    |\n    = note: `-D nonminimal-bool` implied by `-D warnings`\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "f05b9894fea0e7a21514f3b118e9dcf6be895706", "filename": "tests/ui/bool_comparison.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbool_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbool_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(bool_comparison)]\n fn main() {"}, {"sha": "e5e062e0246d357c7f55711200ef6e9cb7685e6a", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -24,5 +24,3 @@ error: equality checks against false can be replaced by a negation\n 10 |     if false == x { \"yes\" } else { \"no\" };\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "0434285a523863656500a15bf46a5893d8f87aef", "filename": "tests/ui/booleans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(nonminimal_bool, logic_bug)]\n \n #[allow(unused, many_single_char_names)]"}, {"sha": "0311e95a4f11d68d7e1b9578d7b2486fbb0c9e39", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -130,5 +130,3 @@ help: try\n 39 |     let _ = !(a == b && c == d);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 13 previous errors\n-"}, {"sha": "394b810ed866fcc34c7f84fc30a1d40bd15a4c8d", "filename": "tests/ui/borrow_box.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fborrow_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fborrow_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![deny(borrowed_box)]\n #![allow(blacklisted_name)]"}, {"sha": "74134f4f2b18c898f578ea68072de3c26b14f3a4", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -28,5 +28,3 @@ error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n 22 |     fn test4(a: &Box<bool>);\n    |                 ^^^^^^^^^^ help: try: `&bool`\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "75b3b62643e8590e9a74c90858c66d7d42d73a5a", "filename": "tests/ui/box_vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbox_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbox_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(clippy)]\n #![allow(boxed_local, needless_pass_by_value)]"}, {"sha": "c1badd0dc9b47f323aba9379e83f022c99a3f338", "filename": "tests/ui/box_vec.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbox_vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbox_vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -7,5 +7,3 @@ error: you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\n    = note: `-D box-vec` implied by `-D warnings`\n    = help: `Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation.\n \n-error: aborting due to previous error\n-"}, {"sha": "4c4f5cbd3fe77ced71c03b8766e9490c9e2ef1d2", "filename": "tests/ui/builtin-type-shadow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbuiltin-type-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbuiltin-type-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(builtin_type_shadow)]\n \n fn foo<u32>(a: u32) -> u32 {"}, {"sha": "058813356cd0aada599146eb14b4538b9ae12203", "filename": "tests/ui/builtin-type-shadow.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbuiltin-type-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbuiltin-type-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -17,5 +17,3 @@ error[E0308]: mismatched types\n   = note: expected type `u32`\n              found type `{integer}`\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "fc94667d968faf51637e54716f5be60995baf516", "filename": "tests/ui/bytecount.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[deny(naive_bytecount)]\n fn main() {"}, {"sha": "c4f6b65a21ea37ed2c80a724ce6ce702a388c5d5", "filename": "tests/ui/bytecount.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbytecount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fbytecount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -22,5 +22,3 @@ error: You appear to be counting bytes the naive way\n 22 |     let _ = x.iter().filter(|a| b + 1 == **a).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, b + 1)`\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "1ad4630989dde4cd96ca31d5ca7a963a3c176a50", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(cast_precision_loss, cast_possible_truncation, cast_sign_loss, cast_possible_wrap, cast_lossless)]\n #[allow(no_effect, unnecessary_operation)]"}, {"sha": "5e7ed6fae99cad7e369da4a40ea89f8c78235475", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -460,5 +460,3 @@ error: casting to the same type is unnecessary (`bool` -> `bool`)\n 88 |     false as bool;\n    |     ^^^^^^^^^^^^^\n \n-error: aborting due to 75 previous errors\n-"}, {"sha": "c69181c7649327aa270d55a23fc36c5eb2f7f69b", "filename": "tests/ui/char_lit_as_u8.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fchar_lit_as_u8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fchar_lit_as_u8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(char_lit_as_u8)]\n #![allow(unused_variables)]"}, {"sha": "4e7c1866a9af7d5c9fceb4df3cd92effa1a2a2c1", "filename": "tests/ui/char_lit_as_u8.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fchar_lit_as_u8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fchar_lit_as_u8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -8,5 +8,3 @@ error: casting character literal to u8. `char`s are 4 bytes wide in rust, so cas\n   = help: Consider using a byte literal instead:\n           b'a'\n \n-error: aborting due to previous error\n-"}, {"sha": "71dfdd43da7cc0c745ff1a625d8f10762f0cbd6b", "filename": "tests/ui/cmp_nan.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(cmp_nan)]\n #[allow(float_cmp, no_effect, unnecessary_operation)]"}, {"sha": "9ea1a29d29daac963a601eb6db1a94d1cd1b7258", "filename": "tests/ui/cmp_nan.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -72,5 +72,3 @@ error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n 21 |     y >= std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 12 previous errors\n-"}, {"sha": "0f463bcfc30df74bcb051c56a7035699bec1e996", "filename": "tests/ui/cmp_null.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(cmp_null)]\n #![allow(unused_mut)]\n "}, {"sha": "51c0ceea4b1498bbda2c55ab91e10025e7299e68", "filename": "tests/ui/cmp_null.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: Comparing with null is better expressed by the .is_null() method\n 16 |     if m == ptr::null_mut() {\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "36d3140d246fb30697ccef5b49d551fa140edefc", "filename": "tests/ui/cmp_owned.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(cmp_owned)]\n #[allow(unnecessary_operation)]"}, {"sha": "e699624466422365bfcffe5a129e255639f91036", "filename": "tests/ui/cmp_owned.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -36,5 +36,3 @@ error: this creates an owned instance just for comparison\n 30 |         self.to_owned() == *other\n    |         ^^^^^^^^^^^^^^^ try calling implementing the comparison without allocating\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "3c5c38525fe7caee5f6257223a8f0fa5f07febf7", "filename": "tests/ui/collapsible_if.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(collapsible_if)]\n fn main() {"}, {"sha": "e726a36282b5728eb1d631595ee7128ac18620d4", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -252,5 +252,3 @@ help: try\n 112 | }\n     |\n \n-error: aborting due to 13 previous errors\n-"}, {"sha": "7719a7a86322b3d4cf57be14e32f6335bea4e136", "filename": "tests/ui/complex_types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcomplex_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcomplex_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n #![allow(unused, needless_pass_by_value)]\n #![feature(associated_type_defaults)]"}, {"sha": "8ce63652f0b6a7285476fa893c20f693a6eb2cdd", "filename": "tests/ui/complex_types.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcomplex_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcomplex_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -90,5 +90,3 @@ error: very complex type used. Consider factoring parts into `type` definitions\n 40 |     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 15 previous errors\n-"}, {"sha": "b988fdb13853bdf3f78b002a1df6509ac0174ca0", "filename": "tests/ui/conf_bad_arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_arg.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: `conf_file` must be a named value\n \n-#![feature(plugin)]\n+\n #![plugin(clippy(conf_file))]\n \n fn main() {}"}, {"sha": "d91729039b1913c733f0a0d9245b8fdf649215dc", "filename": "tests/ui/conf_bad_arg.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_arg.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,14 +1,8 @@\n-error: `conf_file` must be a named value\n- --> $DIR/conf_bad_arg.rs:4:18\n+error: compiler plugins are experimental and possibly buggy (see issue #29597)\n+ --> $DIR/conf_bad_arg.rs:4:1\n   |\n 4 | #![plugin(clippy(conf_file))]\n-  |                  ^^^^^^^^^\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-note: Clippy will use default configuration\n- --> $DIR/conf_bad_arg.rs:4:18\n-  |\n-4 | #![plugin(clippy(conf_file))]\n-  |                  ^^^^^^^^^\n-\n-error: aborting due to previous error\n+  = help: add #![feature(plugin)] to the crate attributes to enable\n "}, {"sha": "4de2cf6ae73c053fa4eac55c35a1a640ffb9a6a8", "filename": "tests/ui/conf_bad_toml.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_toml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_toml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_toml.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: error reading Clippy's configuration file\n \n-#![feature(plugin)]\n+\n #![plugin(clippy(conf_file=\"./tests/ui/conf_bad_toml.toml\"))]\n \n fn main() {}"}, {"sha": "5ddf8c14f70f566b420fe1a64534454f10c7b414", "filename": "tests/ui/conf_bad_toml.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_toml.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_toml.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_toml.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,4 +1,8 @@\n-error: error reading Clippy's configuration file: expected an equals, found an identifier at line 1\n-\n-error: aborting due to previous error\n+error: compiler plugins are experimental and possibly buggy (see issue #29597)\n+ --> $DIR/conf_bad_toml.rs:4:1\n+  |\n+4 | #![plugin(clippy(conf_file=\"./$DIR/conf_bad_toml.toml\"))]\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  |\n+  = help: add #![feature(plugin)] to the crate attributes to enable\n "}, {"sha": "4cb21b91582ef3ce8f8f05c7df66dc8d2fa314ae", "filename": "tests/ui/conf_bad_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_type.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: error reading Clippy's configuration file: `blacklisted-names` is expected to be a `Vec < String >` but is a `integer`\n \n-#![feature(plugin)]\n+\n #![plugin(clippy(conf_file=\"./tests/ui/conf_bad_type.toml\"))]\n \n fn main() {}"}, {"sha": "961df381c9910657a9ec74e4cfeb009c04eaeeea", "filename": "tests/ui/conf_bad_type.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_bad_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_bad_type.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,4 +1,8 @@\n-error: error reading Clippy's configuration file: invalid type: integer `42`, expected a sequence\n-\n-error: aborting due to previous error\n+error: compiler plugins are experimental and possibly buggy (see issue #29597)\n+ --> $DIR/conf_bad_type.rs:4:1\n+  |\n+4 | #![plugin(clippy(conf_file=\"./$DIR/conf_bad_type.toml\"))]\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  |\n+  = help: add #![feature(plugin)] to the crate attributes to enable\n "}, {"sha": "9f22ff659f23cc55335281ea4b9b4b87b488c8f8", "filename": "tests/ui/conf_french_blacklisted_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_french_blacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_french_blacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_french_blacklisted_name.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,4 +1,4 @@\n-#![feature(plugin)]\n+\n #![plugin(clippy(conf_file=\"./tests/auxiliary/conf_french_blacklisted_name.toml\"))]\n \n #![allow(dead_code)]"}, {"sha": "c98adb6029fafc844f8805a5a06f458a6478203d", "filename": "tests/ui/conf_french_blacklisted_name.stderr", "status": "modified", "additions": 5, "deletions": 43, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_french_blacklisted_name.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,46 +1,8 @@\n-error: use of a blacklisted/placeholder name `toto`\n- --> $DIR/conf_french_blacklisted_name.rs:9:9\n+error: compiler plugins are experimental and possibly buggy (see issue #29597)\n+ --> $DIR/conf_french_blacklisted_name.rs:2:1\n   |\n-9 | fn test(toto: ()) {}\n-  |         ^^^^\n+2 | #![plugin(clippy(conf_file=\"./tests/auxiliary/conf_french_blacklisted_name.toml\"))]\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-  = note: `-D blacklisted-name` implied by `-D warnings`\n-\n-error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:12:9\n-   |\n-12 |     let toto = 42;\n-   |         ^^^^\n-\n-error: use of a blacklisted/placeholder name `tata`\n-  --> $DIR/conf_french_blacklisted_name.rs:13:9\n-   |\n-13 |     let tata = 42;\n-   |         ^^^^\n-\n-error: use of a blacklisted/placeholder name `titi`\n-  --> $DIR/conf_french_blacklisted_name.rs:14:9\n-   |\n-14 |     let titi = 42;\n-   |         ^^^^\n-\n-error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:20:10\n-   |\n-20 |         (toto, Some(tata), titi @ Some(_)) => (),\n-   |          ^^^^\n-\n-error: use of a blacklisted/placeholder name `tata`\n-  --> $DIR/conf_french_blacklisted_name.rs:20:21\n-   |\n-20 |         (toto, Some(tata), titi @ Some(_)) => (),\n-   |                     ^^^^\n-\n-error: use of a blacklisted/placeholder name `titi`\n-  --> $DIR/conf_french_blacklisted_name.rs:20:28\n-   |\n-20 |         (toto, Some(tata), titi @ Some(_)) => (),\n-   |                            ^^^^\n-\n-error: aborting due to 7 previous errors\n+  = help: add #![feature(plugin)] to the crate attributes to enable\n "}, {"sha": "8d1f01358fc8f5b93699a41df350cc3dd87ff5b1", "filename": "tests/ui/conf_path_non_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_path_non_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_path_non_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_path_non_string.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(attr_literals)]\n-#![feature(plugin)]\n+\n #![plugin(clippy(conf_file=42))]\n \n fn main() {}"}, {"sha": "4b15b5d0e170c14b5c7e3da661f1b7a64aa43e44", "filename": "tests/ui/conf_path_non_string.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_path_non_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_path_non_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_path_non_string.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,14 +1,8 @@\n-error: `conf_file` value must be a string\n- --> $DIR/conf_path_non_string.rs:3:28\n+error: compiler plugins are experimental and possibly buggy (see issue #29597)\n+ --> $DIR/conf_path_non_string.rs:3:1\n   |\n 3 | #![plugin(clippy(conf_file=42))]\n-  |                            ^^\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n-note: Clippy will use default configuration\n- --> $DIR/conf_path_non_string.rs:3:28\n-  |\n-3 | #![plugin(clippy(conf_file=42))]\n-  |                            ^^\n-\n-error: aborting due to previous error\n+  = help: add #![feature(plugin)] to the crate attributes to enable\n "}, {"sha": "aec2c883367cd7d57cf02e56a34ebe78c9c578b8", "filename": "tests/ui/conf_unknown_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_unknown_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_unknown_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_unknown_key.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n // error-pattern: error reading Clippy's configuration file: unknown key `foobar`\n \n-#![feature(plugin)]\n+\n #![plugin(clippy(conf_file=\"./tests/auxiliary/conf_unknown_key.toml\"))]\n \n fn main() {}"}, {"sha": "9fc7dbea56344b5cd8ffd08965a4610203443124", "filename": "tests/ui/conf_unknown_key.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_unknown_key.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,4 +1,8 @@\n-error: error reading Clippy's configuration file: unknown field `foobar`, expected one of `blacklisted-names`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `third-party`\n-\n-error: aborting due to previous error\n+error: compiler plugins are experimental and possibly buggy (see issue #29597)\n+ --> $DIR/conf_unknown_key.rs:4:1\n+  |\n+4 | #![plugin(clippy(conf_file=\"./tests/auxiliary/conf_unknown_key.toml\"))]\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  |\n+  = help: add #![feature(plugin)] to the crate attributes to enable\n "}, {"sha": "4c4050c014fd148f4d14c3f938dc59ff499b570a", "filename": "tests/ui/copies.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,4 @@\n-#![feature(plugin, dotdoteq_in_patterns, inclusive_range_syntax)]\n-#![plugin(clippy)]\n+#![feature(dotdoteq_in_patterns, inclusive_range_syntax)]\n \n #![allow(dead_code, no_effect, unnecessary_operation)]\n #![allow(let_and_return)]"}, {"sha": "4457e2b7d73173e8bf8f2d1bab3cd5d326e9f2da", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,11 +1,11 @@\n error: This else block is redundant.\n \n-   --> $DIR/copies.rs:121:20\n+   --> $DIR/copies.rs:120:20\n     |\n-121 |               } else {\n+120 |               } else {\n     |  ____________________^\n-122 | |                 continue;\n-123 | |             }\n+121 | |                 continue;\n+122 | |             }\n     | |_____________^\n     |\n     = note: `-D needless-continue` implied by `-D warnings`\n@@ -18,12 +18,12 @@ error: This else block is redundant.\n \n error: This else block is redundant.\n \n-   --> $DIR/copies.rs:131:20\n+   --> $DIR/copies.rs:130:20\n     |\n-131 |               } else {\n+130 |               } else {\n     |  ____________________^\n-132 | |                 continue;\n-133 | |             }\n+131 | |                 continue;\n+132 | |             }\n     | |_____________^\n     |\n     = help: Consider dropping the else clause and merging the code that follows (in the loop) with the if block, like so:\n@@ -33,5 +33,3 @@ error: This else block is redundant.\n             }\n             \n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "0f5726e1ad739c563f51de3c8ce82c5906e2d48d", "filename": "tests/ui/cyclomatic_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, custom_attribute)]\n-#![plugin(clippy)]\n+\n #![allow(clippy)]\n #![warn(cyclomatic_complexity)]\n #![allow(unused)]"}, {"sha": "62fd5313ccb6150acd769e9c673c848d7630aaba", "filename": "tests/ui/cyclomatic_complexity.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -269,5 +269,3 @@ error: the function has a cyclomatic complexity of 8\n     |\n     = help: you could split it up into multiple smaller functions\n \n-error: aborting due to 20 previous errors\n-"}, {"sha": "5284d60a5245f719a6aa323304975a6283d73a2a", "filename": "tests/ui/cyclomatic_complexity_attr_used.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, custom_attribute)]\n-#![plugin(clippy)]\n+\n #![warn(cyclomatic_complexity)]\n #![warn(unused)]\n "}, {"sha": "a9cefe93e329eb06e21b3df9aab66c0e6fe2fa46", "filename": "tests/ui/cyclomatic_complexity_attr_used.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -13,5 +13,3 @@ error: the function has a cyclomatic complexity of 3\n    = note: `-D cyclomatic-complexity` implied by `-D warnings`\n    = help: you could split it up into multiple smaller functions\n \n-error: aborting due to previous error\n-"}, {"sha": "0598e174e50a6188ed1ef8430d5ed65fd4ea792f", "filename": "tests/ui/deprecated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(str_to_string)]\n "}, {"sha": "4255959675a9bcaf4e093c39f85c8728ba7ece34", "filename": "tests/ui/deprecated.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdeprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdeprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -24,5 +24,3 @@ error: lint unstable_as_mut_slice has been removed: `Vec::as_mut_slice` has been\n 10 | #[warn(unstable_as_mut_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "6440f73f31bddfd3b95a544a6dbb3c2ea8cd9b53", "filename": "tests/ui/derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![feature(untagged_unions)]\n "}, {"sha": "f336dc3a8e134f4278f46d6f8388591e0e41f20a", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -106,5 +106,3 @@ note: consider deriving `Clone` or removing `Copy`\n 87 | | }\n    | |_^\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "d2aea93a77d8efd55135226427c1727a9324a407", "filename": "tests/ui/diverging_sub_expression.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdiverging_sub_expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdiverging_sub_expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, never_type)]\n-#![plugin(clippy)]\n+\n #![warn(diverging_sub_expression)]\n #![allow(match_same_arms, logic_bug)]\n "}, {"sha": "b39d1ae07e5e5deaf03b505bf89fc4c788758d32", "filename": "tests/ui/diverging_sub_expression.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdiverging_sub_expression.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdiverging_sub_expression.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -36,5 +36,3 @@ error: sub-expression diverges\n 37 |             _ => true || break,\n    |                          ^^^^^\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "217a564742cf77bb4628012a857dcd45651ae6ad", "filename": "tests/ui/dlist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,7 +1,7 @@\n #![feature(plugin, alloc)]\n #![feature(associated_type_defaults)]\n \n-#![plugin(clippy)]\n+\n #![warn(clippy)]\n #![allow(dead_code, needless_pass_by_value)]\n "}, {"sha": "95872c02994f394868bbb8c7ad19dd42c820e079", "filename": "tests/ui/dlist.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdlist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdlist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -47,5 +47,3 @@ error: I see you're using a LinkedList! Perhaps you meant some other data struct\n    |\n    = help: a VecDeque might work\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "45e25409b128b50513482155609160cf8b8b42d6", "filename": "tests/ui/doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,7 +1,7 @@\n //! This file tests for the DOC_MARKDOWN lint\n \n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(dead_code)]\n #![warn(doc_markdown)]\n "}, {"sha": "fc036d01b8664cbf4250d6510848a9682af75a63", "filename": "tests/ui/doc.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -180,5 +180,3 @@ error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n 168 | /// Not ok: http://www.unicode.org/reports/tr9/#Reordering_Resolved_Levels\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 30 previous errors\n-"}, {"sha": "641e334fd1657ba5ad2d66c3d0ae4a0b072a383e", "filename": "tests/ui/double_neg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(double_neg)]\n fn main() {"}, {"sha": "8c64eb37e15448f5872eaa75ef23eec50287e4ad", "filename": "tests/ui/double_neg.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -6,5 +6,3 @@ error: `--x` could be misinterpreted as pre-decrement by C programmers, is usual\n   |\n   = note: `-D double-neg` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "19d1773286757c35a8165df95cded41ac7f5d7f9", "filename": "tests/ui/double_parens.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_parens.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(double_parens)]\n #![allow(dead_code)]"}, {"sha": "ab3e844d7a7f228b979d77ecfb1915d21dfd8ef6", "filename": "tests/ui/double_parens.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdouble_parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_parens.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -30,5 +30,3 @@ error: Consider removing unnecessary double parentheses\n 32 |     (())\n    |     ^^^^\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "9fef06b0edeffdf69215084cb4ebc99b0003260a", "filename": "tests/ui/drop_forget_copy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(drop_copy, forget_copy)]\n #![allow(toplevel_ref_arg, drop_ref, forget_ref, unused_mut)]"}, {"sha": "f399c5a125f8ba0106a2a6c8be0d3c869e79bdca", "filename": "tests/ui/drop_forget_copy.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -72,5 +72,3 @@ note: argument has type SomeStruct\n 42 |     forget(s4);\n    |            ^^\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "e8ab6a0d5d1370e4755484aa1fb68b169d732d30", "filename": "tests/ui/drop_forget_ref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_ref.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(drop_ref, forget_ref)]\n #![allow(toplevel_ref_arg, similar_names, needless_pass_by_value)]"}, {"sha": "6058b89c70f36926dac9c777a647378f74202b74", "filename": "tests/ui/drop_forget_ref.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fdrop_forget_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_ref.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -216,5 +216,3 @@ note: argument has type &SomeStruct\n 59 |     std::mem::forget(&SomeStruct);\n    |                      ^^^^^^^^^^^\n \n-error: aborting due to 18 previous errors\n-"}, {"sha": "df00f56aa62152c14f53000e60d351c8b99adeff", "filename": "tests/ui/duplicate_underscore_argument.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fduplicate_underscore_argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fduplicate_underscore_argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduplicate_underscore_argument.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(duplicate_underscore_argument)]\n #[allow(dead_code, unused)]"}, {"sha": "de9e6f1e056c291e11f57b79bd5218cabdb72863", "filename": "tests/ui/duplicate_underscore_argument.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fduplicate_underscore_argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fduplicate_underscore_argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduplicate_underscore_argument.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -6,5 +6,3 @@ error: `darth` already exists, having another argument having almost the same na\n   |\n   = note: `-D duplicate-underscore-argument` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "c6e6946de866ce3dc4e1667f4c059a847234f3fc", "filename": "tests/ui/empty_enum.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(dead_code)]\n #![warn(empty_enum)]"}, {"sha": "a0d491b6f96869c5f70d4e10e9729c991750991c", "filename": "tests/ui/empty_enum.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fempty_enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fempty_enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -11,5 +11,3 @@ help: consider using the uninhabited type `!` or a wrapper around it\n 7 | enum Empty {}\n   | ^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n-"}, {"sha": "ccbc7038f13600aa88b9b6ccd719cab2081c6c1c", "filename": "tests/ui/entry.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unused, needless_pass_by_value)]\n \n #![warn(map_entry)]"}, {"sha": "e60c158d7c068f1e925e7cbc2d30088439a6f6e9", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -42,5 +42,3 @@ error: usage of `contains_key` followed by `insert` on a `BTreeMap`\n 37 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "76d0d29bb5395b07ef5d2bf21af0901b115e2471", "filename": "tests/ui/enum_glob_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(clippy, clippy_pedantic)]\n #![allow(unused_imports, dead_code, missing_docs_in_private_items)]\n "}, {"sha": "1e0fffb9ac4422661e41ed7baf2d21afdede6e0b", "filename": "tests/ui/enum_glob_use.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_glob_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_glob_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: don't use glob imports for enum variants\n 12 | use self::Enum::*;\n    | ^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "9901baf9e1285ed4278db88360e4eff37a01343a", "filename": "tests/ui/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, non_ascii_idents)]\n-#![plugin(clippy)]\n+\n #![warn(clippy, pub_enum_variant_names)]\n \n enum FakeCallType {"}, {"sha": "7e2716b8ea20535289e464fd964de071c9bdad2e", "filename": "tests/ui/enum_variants.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenum_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -97,5 +97,3 @@ error: All variants have the same prefix: `With`\n    = note: `-D pub-enum-variant-names` implied by `-D warnings`\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n-error: aborting due to 10 previous errors\n-"}, {"sha": "618603683e83f69a4b379c71b12a2f575e6cf6ae", "filename": "tests/ui/enums_clike.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenums_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenums_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenums_clike.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n // ignore-x86\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n \n #![allow(unused)]"}, {"sha": "e0555bb02398914609853d1fb56b91f046a0de75", "filename": "tests/ui/enums_clike.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenums_clike.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fenums_clike.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenums_clike.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -48,5 +48,3 @@ error: Clike enum variant discriminant is not portable to 32-bit targets\n 37 |     A = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 8 previous errors\n-"}, {"sha": "89d85d1b3e9d11a277230799a1d17343cbfc3ef5", "filename": "tests/ui/eq_op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(eq_op)]\n #[allow(identity_op, double_parens, many_single_char_names)]"}, {"sha": "914a85719d0f72707b033424bca0ab4c7ab5d38b", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -204,5 +204,3 @@ error: taken reference of right operand\n    |\n    = note: `-D op-ref` implied by `-D warnings`\n \n-error: aborting due to 33 previous errors\n-"}, {"sha": "b99534d05e17077249e6a57f035947b875729a8a", "filename": "tests/ui/escape_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fescape_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fescape_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, box_syntax)]\n-#![plugin(clippy)]\n+\n #![allow(warnings, clippy)]\n \n #![warn(boxed_local)]"}, {"sha": "0ff02a0b2ccc37122cda3ec8ac5c15aff25998af", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unknown_lints, unused, no_effect, redundant_closure_call, many_single_char_names, needless_pass_by_value)]\n #![warn(redundant_closure)]\n "}, {"sha": "34a6217cd709fe75a3c57ba8051c7de9edcdffda", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -32,5 +32,3 @@ error: redundant closure found\n 18 |     let e = Some(1u8).map(|a| generic(a));\n    |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "e7ccb190d2c712a24610372d09a45f0a61883d89", "filename": "tests/ui/eval_order_dependence.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(eval_order_dependence)]\n #[allow(unused_assignments, unused_variables, many_single_char_names, no_effect, dead_code, blacklisted_name)]"}, {"sha": "e9bdc3b51d9db14f5270d4dd094bc0e92433bf83", "filename": "tests/ui/eval_order_dependence.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feval_order_dependence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Feval_order_dependence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -47,5 +47,3 @@ note: whether read occurs before this write depends on evaluation order\n 21 |         x += { x = 20; 2 };\n    |                ^^^^^^\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "29230c48ea3ed3876b8589b21f30e1a6760938fd", "filename": "tests/ui/filter_methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffilter_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffilter_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(clippy, clippy_pedantic)]\n #![allow(missing_docs_in_private_items)]"}, {"sha": "8f1853c3952b11088527675a24b967f054806a36", "filename": "tests/ui/filter_methods.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffilter_methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffilter_methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -36,5 +36,3 @@ error: called `filter_map(p).map(q)` on an `Iterator`. This is more succinctly e\n 25 | |                                 .map(|x| x.checked_mul(2))\n    | |__________________________________________________________^\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "9dd9ea9b04d557932fa79eab5400f350fc038ac8", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(float_cmp)]\n #![allow(unused, no_effect, unnecessary_operation, cast_lossless)]"}, {"sha": "d2903f501f5f001b38b16547ae075588939f2c54", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -95,5 +95,3 @@ note: std::f32::EPSILON and std::f64::EPSILON are available.\n 57 |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 8 previous errors\n-"}, {"sha": "083e6f9a6e5adec18220ad11d55688d6d196121d", "filename": "tests/ui/for_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, inclusive_range_syntax)]\n-#![plugin(clippy)]\n+\n \n use std::collections::*;\n use std::rc::Rc;"}, {"sha": "620c32b6ab50048d0749cad947ede1c431f35800", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -586,5 +586,3 @@ error: it looks like you're manually copying between slices\n 549 | |     }\n     | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n \n-error: aborting due to 59 previous errors\n-"}, {"sha": "e9379d0a05bdd4874e6faaadc8d9154e87e55bff", "filename": "tests/ui/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(useless_format)]\n \n fn main() {"}, {"sha": "67d97f295d8116826ad534d0a6ff53d458e146f4", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -18,5 +18,3 @@ error: useless use of `format!`\n 15 |     format!(\"{}\", arg);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "20b1c1655a7284a858a1320c212c8e912b1634e8", "filename": "tests/ui/formatting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(clippy)]\n #![allow(unused_variables)]"}, {"sha": "d121929d0c2dbcbfb77cce41b61eb83076f903b0", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -86,5 +86,3 @@ error: possibly missing a comma here\n    |\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n-error: aborting due to 10 previous errors\n-"}, {"sha": "5688c471d86b1630343a62d72062f79768f1c67f", "filename": "tests/ui/functions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(clippy)]\n #![allow(dead_code)]"}, {"sha": "c8b4db352457f42156a8aa09d4bedfaa4ae18227", "filename": "tests/ui/functions.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -75,5 +75,3 @@ error: this public function dereferences a raw pointer but is not marked `unsafe\n 63 |         unsafe { std::ptr::read(p) };\n    |                                 ^\n \n-error: aborting due to 12 previous errors\n-"}, {"sha": "9c5129654e416f109ce9e33ebc92e604a3413860", "filename": "tests/ui/ices.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui%2Fices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui%2Fices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fices.rs?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,5 +0,0 @@\n-\n-// this used to ICE\n-fubar!();\n-\n-fn main() {}"}, {"sha": "cadd7cd417d4cc8187ca1831f32ea2a9ffb0e91a", "filename": "tests/ui/ices.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui%2Fices.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebc9891fc63531f83f3524167ef6f5a60ea3e6ee/tests%2Fui%2Fices.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fices.stderr?ref=ebc9891fc63531f83f3524167ef6f5a60ea3e6ee", "patch": "@@ -1,8 +0,0 @@\n-error: cannot find macro `fubar!` in this scope\n- --> $DIR/ices.rs:3:1\n-  |\n-3 | fubar!();\n-  | ^^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "b474344977c8c1ea0fd6d93aae2c88927b25b489", "filename": "tests/ui/identity_op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n const ONE : i64 = 1;\n const NEG_ONE : i64 = -1;"}, {"sha": "30367c989ec883e0db1695cfdb3cfdc64b056ac9", "filename": "tests/ui/identity_op.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fidentity_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fidentity_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -42,5 +42,3 @@ error: the operation is ineffective. Consider reducing it to `x`\n 29 |     -1 & x;\n    |     ^^^^^^\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "0963caa62e284acac72c5cdc69080b04cce6c41c", "filename": "tests/ui/if_let_redundant_pattern_matching.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_let_redundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_let_redundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_redundant_pattern_matching.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n \n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n #![warn(if_let_redundant_pattern_matching)]\n "}, {"sha": "b15d17e372e0b59fb7b092abbed90344eb0d69d2", "filename": "tests/ui/if_let_redundant_pattern_matching.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -24,5 +24,3 @@ error: redundant pattern matching, consider using `is_some()`\n 17 |     if let Some(_) = Some(42) {\n    |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "9436af70cb8f6524ce1c7a2e13f3f5dc31158a57", "filename": "tests/ui/if_not_else.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_not_else.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n #![warn(if_not_else)]\n "}, {"sha": "f9462f422ea797378b347957cad579c2a1c775b8", "filename": "tests/ui/if_not_else.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_not_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fif_not_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_not_else.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -23,5 +23,3 @@ error: Unnecessary `!=` operation\n    |\n    = help: change to `==` and swap the blocks of the if/else\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "ed6dc06edb17db1eabc7cb1c6329be062c1ff891", "filename": "tests/ui/inconsistent_digit_grouping.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finconsistent_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finconsistent_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #[warn(inconsistent_digit_grouping)]\n #[allow(unused_variables)]\n fn main() {"}, {"sha": "2725d5f4ef7fd9d3ecd60d561879966741fa7bc5", "filename": "tests/ui/inconsistent_digit_grouping.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -39,5 +39,3 @@ error: digits grouped inconsistently by underscores\n   |\n   = help: consider: 1.234_567_8_f32\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "08596ff20169b1479a86bb45513cc2fd356e2cca", "filename": "tests/ui/infinite_iter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+#![feature(iterator_for_each)]\n+\n use std::iter::repeat;\n \n fn square_is_lower_64(x: &u32) -> bool { x * x < 64 }"}, {"sha": "87b7ca4932223f9ceb14757621ab4ebbd60ef216", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -96,5 +96,3 @@ error: possible infinite iteration detected\n 30 |     (0..).all(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 14 previous errors\n-"}, {"sha": "92b012bd104fa6ade0ea7308fc260ad6a0f9feaa", "filename": "tests/ui/int_plus_one.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fint_plus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fint_plus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fint_plus_one.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,3 +1,5 @@\n+warning: running cargo clippy on a crate that also imports the clippy plugin\n+\n error: Unnecessary `>= y + 1` or `x - 1 >=`\n   --> $DIR/int_plus_one.rs:10:5\n    |\n@@ -43,5 +45,3 @@ help: change `>= y + 1` to `> y` as shown\n 14 |     y < x;\n    |     ^^^^^\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "18064c91a017955292def3a804eb70d91b56f1b3", "filename": "tests/ui/invalid_ref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finvalid_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finvalid_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_ref.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,3 +1,5 @@\n+warning: running cargo clippy on a crate that also imports the clippy plugin\n+\n error: reference to zeroed memory\n   --> $DIR/invalid_ref.rs:27:24\n    |\n@@ -47,5 +49,3 @@ error: reference to uninitialized memory\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "5bf0bfdcb98340804960585333f39b6e0904c54e", "filename": "tests/ui/invalid_upcast_comparisons.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finvalid_upcast_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finvalid_upcast_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_upcast_comparisons.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(invalid_upcast_comparisons)]\n #![allow(unused, eq_op, no_effect, unnecessary_operation, cast_lossless)]"}, {"sha": "3f11c37307455fc3ec163da622be3e44105f175f", "filename": "tests/ui/invalid_upcast_comparisons.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_upcast_comparisons.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -162,5 +162,3 @@ error: because of the numeric bounds on `u8` prior to casting, this expression i\n 78 |     -5 >= (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 27 previous errors\n-"}, {"sha": "24a2587dc534441d19e4ea5b617fbcb4f985ed78", "filename": "tests/ui/is_unit_expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fis_unit_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fis_unit_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fis_unit_expr.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(unit_expr)]\n #[allow(unused_variables)]\n "}, {"sha": "5524f866488c281f50d4e2500004579ed12f3475", "filename": "tests/ui/is_unit_expr.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fis_unit_expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fis_unit_expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fis_unit_expr.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -51,5 +51,3 @@ note: Consider removing the trailing semicolon\n 42 |             x;\n    |             ^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "710a1adca565577f9ba464ed6d8b5526bb1a762f", "filename": "tests/ui/item_after_statement.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fitem_after_statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fitem_after_statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(items_after_statements)]\n \n fn ok() {"}, {"sha": "e98e7ee129d8dd5bae43d7a2b0f66901622ff6ba", "filename": "tests/ui/item_after_statement.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fitem_after_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fitem_after_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: adding items after statements is confusing, since items exist from the st\n 17 |     fn foo() { println!(\"foo\"); }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "5d0fb11dbea56167fdca0736a4b28b99baf37138", "filename": "tests/ui/large_digit_groups.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_digit_groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_digit_groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #[warn(large_digit_groups)]\n #[allow(unused_variables)]\n fn main() {"}, {"sha": "db49ded1d8a07c5127b114139a891aec3b0664b0", "filename": "tests/ui/large_digit_groups.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -47,5 +47,3 @@ error: digit groups should be smaller\n   |\n   = help: consider: 123_456.123_456_f32\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "aaf3e2924b310b71feef6c21afc1fd3ef4a70205", "filename": "tests/ui/large_enum_variant.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(dead_code)]\n #![allow(unused_variables)]"}, {"sha": "899a84edeaad0066193a36bf15220a033810754a", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -68,5 +68,3 @@ help: consider boxing the large fields to reduce the total size of the enum\n 49 |     StructLikeLarge2 { x: Box<[i32; 8000]> },\n    |                           ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "aba1dd3055af659b0d1633d9ef7c301ef1b61bc9", "filename": "tests/ui/len_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(len_without_is_empty, len_zero)]\n #![allow(dead_code, unused)]"}, {"sha": "d23a972dddcb86f5bf1643376198f6d0ecd3b14b", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -94,5 +94,3 @@ error: trait `DependsOnFoo` has a `len` method but no (possibly inherited) `is_e\n 191 | | }\n     | |_^\n \n-error: aborting due to 12 previous errors\n-"}, {"sha": "564a67d2c8ef0bec81b7d9e53e8124cbd5b17607", "filename": "tests/ui/let_if_seq.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(unused_variables, unused_assignments, similar_names, blacklisted_name)]\n #![warn(useless_let_if_seq)]"}, {"sha": "39686a9dd07ff03526652091b3434818b61c46d9", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -46,5 +46,3 @@ error: `if _ { .. } else { .. }` is an expression\n     |\n     = note: you might not need `mut` at all\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "1083603b2d63b65acb839b533271bf8cf23f49e6", "filename": "tests/ui/let_return.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_return.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unused)]\n \n #![warn(let_and_return)]"}, {"sha": "b38c9ab2e91367b20fd4a0e4caa8aee5f548722e", "filename": "tests/ui/let_return.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_return.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -23,5 +23,3 @@ note: this expression can be directly returned\n 15 |         let x = 5;\n    |                 ^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "032dc85f2cd580fc8f4d7811dc77f18b8d8d77d2", "filename": "tests/ui/let_unit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(let_unit_value)]\n #![allow(unused_variables)]"}, {"sha": "196afc0570cdb62b0fa27b657adbeb2a8883b0b2", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: this let-binding has unit value. Consider omitting `let _a =`\n 18 |         let _a = ();\n    |         ^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "dce9c23da686f14701ba06527613169464d0e82c", "filename": "tests/ui/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(needless_lifetimes, unused_lifetimes)]\n #![allow(dead_code, needless_pass_by_value)]"}, {"sha": "744e1ce21ec34951ed2851635bef635c14e66442", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -86,5 +86,3 @@ error: explicit lifetimes given in parameter types where they could be elided\n 120 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 14 previous errors\n-"}, {"sha": "1990e137e67842685a5b1d37232df6e47ef6958e", "filename": "tests/ui/lint_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_pass.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n+\n #![feature(rustc_private)]\n-#![plugin(clippy)]\n+\n \n #![warn(lint_without_lint_pass)]\n "}, {"sha": "66f2d62ed24a29c9ae209ea88b4abf76d7ff80d4", "filename": "tests/ui/lint_pass.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Flint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_pass.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -6,5 +6,3 @@ error: the lint `MISSING_LINT` is not added to any `LintPass`\n    |\n    = note: `-D lint-without-lint-pass` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "c11adc0b09042c850343042e7063d8f40681e72b", "filename": "tests/ui/literals.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(mixed_case_hex_literals)]\n #![warn(unseparated_literal_suffix)]\n #![warn(zero_prefixed_literal)]"}, {"sha": "82c651e629027c5ec4a50e3a4134b2bb6e45e810", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -87,5 +87,3 @@ help: if you mean to use an octal constant, use `0o`\n 30 |     let fail8 = 0o123;\n    |                 ^^^^^\n \n-error: aborting due to 11 previous errors\n-"}, {"sha": "f11d21d2dfafdada06da7379306e610fe46cad0b", "filename": "tests/ui/map_clone.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n \n-#![plugin(clippy)]\n+\n+\n #![warn(map_clone)]\n \n #![allow(clone_on_copy, unused)]"}, {"sha": "272b868a278a9ed2daaa4794cc4cfe82401fb429", "filename": "tests/ui/map_clone.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmap_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmap_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -98,5 +98,3 @@ error: you seem to be using .map() to clone the contents of an Option, consider\n    = help: try\n            x.as_ref().cloned()\n \n-error: aborting due to 11 previous errors\n-"}, {"sha": "f97038ca1f04f9c4fc8a69da05b5377f1b5071d5", "filename": "tests/ui/matches.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,7 +1,7 @@\n-#![feature(plugin)]\n+\n #![feature(exclusive_range_pattern)]\n \n-#![plugin(clippy)]\n+\n #![warn(clippy)]\n #![allow(unused, if_let_redundant_pattern_matching)]\n #![warn(single_match_else)]"}, {"sha": "1c2452c46ce64b0648f09b74f2d56063dc721b46", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -392,5 +392,3 @@ note: consider refactoring into `Ok(3) | Ok(_)`\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 33 previous errors\n-"}, {"sha": "991a402e2076c67fc536f76a65b5b4e5c2f846e7", "filename": "tests/ui/mem_forget.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n \n use std::sync::Arc;"}, {"sha": "c79afa829fe50b0a1999b3bc02fadd95158f88de", "filename": "tests/ui/mem_forget.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmem_forget.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmem_forget.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -18,5 +18,3 @@ error: usage of mem::forget on Drop type\n 24 |     forgetSomething(eight);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "08ff477142051b1b28689ef43b47f5c4f530f92c", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n+\n #![feature(const_fn)]\n-#![plugin(clippy)]\n+\n \n #![warn(clippy, clippy_pedantic)]\n #![allow(blacklisted_name, unused, print_stdout, non_ascii_literal, new_without_default, new_without_default_derive, missing_docs_in_private_items)]"}, {"sha": "c5fab711fe1f9b980d5298689f9e0cce2c9e1cef", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -836,5 +836,3 @@ error: you should use the `ends_with` method\n 578 |     Some(' ') != \"\".chars().next_back();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `!\"\".ends_with(' ')`\n \n-error: aborting due to 123 previous errors\n-"}, {"sha": "1199206e42c35fb6001dfe0be9e629436677761b", "filename": "tests/ui/min_max.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmin_max.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmin_max.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n \n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n \n use std::cmp::{min, max};"}, {"sha": "e9225f93b5e56994be0b181944afa7ed55e5cc4f", "filename": "tests/ui/min_max.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmin_max.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmin_max.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -42,5 +42,3 @@ error: this min/max combination leads to constant result\n 30 |     max(min(s, \"Apple\"), \"Zoo\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "cbd6439d47e8a5e41048f3a89e8a8324bd9148cb", "filename": "tests/ui/missing-doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmissing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmissing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -11,8 +11,8 @@\n  *   except according to those terms.\n  */\n \n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(missing_docs_in_private_items)]\n \n // When denying at the crate level, be sure to not get random warnings from the"}, {"sha": "55eab4f5d692e0b90c74f826b890a86abf508a67", "filename": "tests/ui/missing-doc.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmissing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmissing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -270,5 +270,3 @@ error: missing documentation for a function\n 202 | fn main() {}\n     | ^^^^^^^^^^^^\n \n-error: aborting due to 40 previous errors\n-"}, {"sha": "77bd446c569c45d80621e5e601e4462e68448c9b", "filename": "tests/ui/module_inception.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodule_inception.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodule_inception.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_inception.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(module_inception)]\n \n mod foo {"}, {"sha": "cb6ea951a17112848a58cfc44640e3309a79597d", "filename": "tests/ui/module_inception.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodule_inception.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodule_inception.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_inception.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -16,5 +16,3 @@ error: module has the same name as its containing module\n 14 | |     }\n    | |_____^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "847ea1d9ab64fa571656e2c89c69b012b4d18485", "filename": "tests/ui/modulo_one.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodulo_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodulo_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_one.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(modulo_one)]\n #![allow(no_effect, unnecessary_operation)]\n "}, {"sha": "48cfe6c38cc21f2b8cff0928759f281642ad20d4", "filename": "tests/ui/modulo_one.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodulo_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmodulo_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_one.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -6,5 +6,3 @@ error: any number modulo 1 will be 0\n   |\n   = note: `-D modulo-one` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "9e757155260caee185ce3b56dbd5bae108fa0067", "filename": "tests/ui/mut_from_ref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_from_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_from_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_from_ref.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unused)]\n #![warn(mut_from_ref)]\n "}, {"sha": "eacda70ce074fd5731d2fae03d68043edc10b84b", "filename": "tests/ui/mut_from_ref.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_from_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_from_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_from_ref.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -59,5 +59,3 @@ note: immutable borrow here\n 32 | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n    |                           ^^^^^^^     ^^^^^^^\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "54176cd6d55333559b67ad454f753e6e5385f6f7", "filename": "tests/ui/mut_mut.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(unused, no_effect, unnecessary_operation)]\n #![warn(mut_mut)]"}, {"sha": "31f9178aa2726210f8a19c02ea0d86aba4023a85", "filename": "tests/ui/mut_mut.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -81,5 +81,3 @@ error: generally you want to avoid `&mut &mut _` if possible\n 35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                      ^^^^^^^^^^^^^\n \n-error: aborting due to 13 previous errors\n-"}, {"sha": "f516ec9d95e315e0ffd08ede57b44da9c0c5e9f7", "filename": "tests/ui/mut_range_bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_range_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_range_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_range_bound.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,3 +1,5 @@\n+warning: running cargo clippy on a crate that also imports the clippy plugin\n+\n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n   --> $DIR/mut_range_bound.rs:18:21\n    |\n@@ -30,5 +32,3 @@ error: attempt to mutate range bound within loop; note that the range of the loo\n 40 |         let n = &mut m;  // warning\n    |                      ^\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "ac40bf2a1867711cfa642021694f66f3a79cb483", "filename": "tests/ui/mut_reference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_reference.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(unused_variables)]\n "}, {"sha": "6708bca8b2eeab36bba51d0ff762ac3e7f62825b", "filename": "tests/ui/mut_reference.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmut_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_reference.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -18,5 +18,3 @@ error: The function/method `takes_an_immutable_reference` doesn't need a mutable\n 28 |     my_struct.takes_an_immutable_reference(&mut 42);\n    |                                            ^^^^^^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "96502738456ccdfa98a2226af9fb445802949bc7", "filename": "tests/ui/mutex_atomic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n \n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n #![warn(mutex_integer)]\n "}, {"sha": "d46c713164aef8f588407f8e70fd46292a9257f1", "filename": "tests/ui/mutex_atomic.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmutex_atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fmutex_atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -44,5 +44,3 @@ error: Consider using an AtomicIsize instead of a Mutex here. If you just want t\n 16 |     Mutex::new(0i32);\n    |     ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "1213539c827626753bf2cd6730298e3259c1b7f0", "filename": "tests/ui/needless_bool.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(needless_bool)]\n \n #[allow(if_same_then_else)]"}, {"sha": "a25b34bfaafacf319b4e16bed8ed2d1805b224b7", "filename": "tests/ui/needless_bool.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -66,5 +66,3 @@ error: this if-then-else expression returns a bool literal\n 50 |     if x && y { return false } else { return true };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return !(x && y)`\n \n-error: aborting due to 11 previous errors\n-"}, {"sha": "78c1a125c94f13d3298f43d4e80f9adc06031231", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n fn x(y: &i32) -> i32 {\n     *y"}, {"sha": "16962bb48f1ce4a1836e45d418c91e7214a8c181", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -38,5 +38,3 @@ error: this pattern creates a reference to a reference\n 50 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                               ^^^^^ help: change this to: `a`\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "75ffa211180d5f790db27115cee93a4c1931dbb5", "filename": "tests/ui/needless_borrowed_ref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrowed_ref.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(needless_borrowed_reference)]\n #[allow(unused_variables)]"}, {"sha": "c85bf9f5a7c70d1ef2d248ef11168c05db871102", "filename": "tests/ui/needless_borrowed_ref.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrowed_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_borrowed_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrowed_ref.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -24,5 +24,3 @@ error: this pattern takes a reference on something that is being de-referenced\n 42 |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n    |                                      ^^^^^^ help: try removing the `&ref` part and just keep: `k`\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "3574b0fb3fdf7515889f445eea256aaf656fba25", "filename": "tests/ui/needless_continue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n macro_rules! zero {\n     ($x:expr) => ($x == 0);"}, {"sha": "f63f120fcc7e1873062558e34af1d1c19d486c45", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -55,5 +55,3 @@ error: There is no need for an explicit `else` block for this `if` expression\n            println!(\"Jabber\");\n            ...\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "6218bfb09206ede10430977af52904e57b6a91be", "filename": "tests/ui/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(needless_pass_by_value)]\n #![allow(dead_code, single_match, if_let_redundant_pattern_matching, many_single_char_names)]"}, {"sha": "c081574127af1d65e2220cfeb5fa8ffebfd35ed6", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -56,5 +56,3 @@ help: consider taking a reference instead\n 56 |     let Wrapper(_) = *y; // still not moved\n    |\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "652e11fee9d6382a6956094a26e21a841b9b2cea", "filename": "tests/ui/needless_pass_by_value_proc_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_pass_by_value_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_pass_by_value_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value_proc_macro.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![crate_type = \"proc-macro\"]\n #![warn(needless_pass_by_value)]\n "}, {"sha": "4739ded7b7ea21f02bf4f319d1cd3e7634423990", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(needless_return)]\n "}, {"sha": "68c2654c863515dbde388627ad382b813237b65f", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -48,5 +48,3 @@ error: unneeded return statement\n 39 |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n-error: aborting due to 8 previous errors\n-"}, {"sha": "35d5730dda1eb643d3a71fab109c3a8d7ad4f905", "filename": "tests/ui/needless_update.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_update.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(needless_update)]\n #![allow(no_effect)]"}, {"sha": "978fd8e625ba1eea3aa072e246c70f81611d9a63", "filename": "tests/ui/needless_update.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_update.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneedless_update.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_update.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -6,5 +6,3 @@ error: struct update has no effect, all the fields in the struct have already be\n    |\n    = note: `-D needless-update` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "367d2d5edfbdd5dcf330b4c9e5f1a711d3343c9f", "filename": "tests/ui/neg_multiply.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n \n-#![plugin(clippy)]\n+\n+\n #![warn(neg_multiply)]\n #![allow(no_effect, unnecessary_operation)]\n "}, {"sha": "6ed31d384a021d2649ed61886fe7abbba9c26b46", "filename": "tests/ui/neg_multiply.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneg_multiply.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fneg_multiply.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: Negation by multiplying with -1\n 32 |     -1 * x;\n    |     ^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "4866db1a54128623ef820b7301651d05fb98ba5e", "filename": "tests/ui/never_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnever_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnever_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(single_match, unused_assignments, unused_variables)]\n \n fn test1() {"}, {"sha": "1ecdb5030f93d1958d1166ba996e4f7f0aaa5152", "filename": "tests/ui/never_loop.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnever_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnever_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -68,5 +68,3 @@ error: this loop never actually loops\n 103 | |     }\n     | |_____^\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "9fd0fea137c817fe9792aeebffc3e93845614db9", "filename": "tests/ui/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, const_fn)]\n-#![plugin(clippy)]\n+\n \n #![allow(dead_code)]\n #![warn(new_without_default, new_without_default_derive)]"}, {"sha": "0ced183b1e070871a51bf64bef4915e99f376f9a", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -38,5 +38,3 @@ help: try this\n 69 | \n  ...\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "ba7826d653edd33150858e1f9d471afbfcee0b12", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, box_syntax, inclusive_range_syntax)]\n-#![plugin(clippy)]\n+\n \n #![warn(no_effect, unnecessary_operation)]\n #![allow(dead_code)]"}, {"sha": "43e7fbb360988244ff4358b2a46e3598e0e8edf9", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -266,5 +266,3 @@ error: statement can be reduced\n 83 |     {get_number()};\n    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n \n-error: aborting due to 44 previous errors\n-"}, {"sha": "9eb3e5a82a7c49657e9149161224c0ba03ca293d", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(clippy,similar_names)]\n #![allow(unused)]\n "}, {"sha": "014d45992712a49e6d1c509153b8f36e9415c3dd", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -129,5 +129,3 @@ error: 5th binding whose name is just one char\n 129 |             e => panic!(),\n     |             ^\n \n-error: aborting due to 11 previous errors\n-"}, {"sha": "fdc01bcc7bc0f329d6c5aa02bed4d8706e69834d", "filename": "tests/ui/ok_if_let.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(if_let_some_result)]\n "}, {"sha": "b696672d2fd047be1c5398341055e3fd1a7c0d6d", "filename": "tests/ui/ok_if_let.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fok_if_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fok_if_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -11,5 +11,3 @@ error: Matching on `Some` with `ok()` is redundant\n    = note: `-D if-let-some-result` implied by `-D warnings`\n    = help: Consider matching on `Ok(y)` and removing the call to `ok` instead\n \n-error: aborting due to previous error\n-"}, {"sha": "9eb697571b698a3a3fc64a4b23c54d997d49f586", "filename": "tests/ui/op_ref.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fop_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fop_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(unused_variables, blacklisted_name)]\n \n@@ -21,4 +21,4 @@ fn main() {\n     if b < &a {\n         println!(\"OK\");\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "dbe53933fd5e3f482265c28a79271953fe24868f", "filename": "tests/ui/op_ref.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fop_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fop_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -10,5 +10,3 @@ help: use the values directly\n 13 |     let foo = 5 - 6;\n    |               ^\n \n-error: aborting due to previous error\n-"}, {"sha": "514808d41f1eee4923bbaeac929e05f3ef489af2", "filename": "tests/ui/open_options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fopen_options.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n use std::fs::OpenOptions;\n \n #[allow(unused_must_use)]"}, {"sha": "2f4070c2868fe54d7a51e624889833191ca02c98", "filename": "tests/ui/open_options.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fopen_options.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fopen_options.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fopen_options.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -42,5 +42,3 @@ error: the method \"truncate\" is called more than once\n 15 |     OpenOptions::new().truncate(true).truncate(false).open(\"foo.txt\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "889c339c8fdac7a95e7b2db7ef01a91653a1aae1", "filename": "tests/ui/overflow_check_conditional.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foverflow_check_conditional.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(many_single_char_names)]\n #![warn(overflow_check_conditional)]"}, {"sha": "9f23e96c06557791d7103556f2050de690ef3843", "filename": "tests/ui/overflow_check_conditional.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Foverflow_check_conditional.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Foverflow_check_conditional.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foverflow_check_conditional.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -48,5 +48,3 @@ error: You are trying to use classic C underflow conditions that will fail in Ru\n 32 |  if a < a - b {\n    |     ^^^^^^^^^\n \n-error: aborting due to 8 previous errors\n-"}, {"sha": "f621a5f636df7c5e6df39653e23880917613391a", "filename": "tests/ui/panic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(panic_params)]\n "}, {"sha": "f2480dfea6ed7b5074802f3d2347c17b6e52a690", "filename": "tests/ui/panic.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpanic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpanic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanic.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -18,5 +18,3 @@ error: you probably are missing some parameter in your format string\n 12 |         assert!(true, \"here be missing values: {}\");\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "36dd4df8a6ecdb612221c658c18eb6cec8000adf", "filename": "tests/ui/partialeq_ne_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartialeq_ne_impl.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(dead_code)]\n "}, {"sha": "c332ce53c1a49910d21cdf6d721a95a4d386775b", "filename": "tests/ui/partialeq_ne_impl.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpartialeq_ne_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpartialeq_ne_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartialeq_ne_impl.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -6,5 +6,3 @@ error: re-implementing `PartialEq::ne` is unnecessary\n    |\n    = note: `-D partialeq-ne-impl` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "65e319e2f8811c3dfbfa8966d7b02318c99314bb", "filename": "tests/ui/patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unused)]\n #![warn(clippy)]\n "}, {"sha": "9a246c483b2b2d4f9069a3ca9623c4058a972b49", "filename": "tests/ui/patterns.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpatterns.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -6,5 +6,3 @@ error: the `y @ _` pattern can be written as just `y`\n    |\n    = note: `-D redundant-pattern` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "720637c94b56d7ed36f30cde5ee5bb86ef538f86", "filename": "tests/ui/precedence.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(precedence)]\n #[allow(identity_op)]"}, {"sha": "26fbd75164d1259a71ae35376f2f9c52ced16f67", "filename": "tests/ui/precedence.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -54,5 +54,3 @@ error: unary minus has lower precedence than method call\n 16 |     -1f32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent: `-(1f32.abs())`\n \n-error: aborting due to 9 previous errors\n-"}, {"sha": "91304d961a7a14a449b03f5c06d60a20f92fce04", "filename": "tests/ui/print.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(print_stdout, use_debug)]\n \n use std::fmt::{Debug, Display, Formatter, Result};"}, {"sha": "fa547949bdb5ca2304773b2a81183cb1284748d6", "filename": "tests/ui/print.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -50,5 +50,3 @@ error: use of `Debug`-based formatting\n 31 |     print!(\"Hello {:#?}\", \"#orld\");\n    |                           ^^^^^^^\n \n-error: aborting due to 8 previous errors\n-"}, {"sha": "5cc50dea81041953b50761e083a9d93698b67056", "filename": "tests/ui/print_with_newline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint_with_newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint_with_newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(print_with_newline)]\n \n fn main() {"}, {"sha": "2ade3ae4ef59cb396afd37025d5f49ae5ebf6ca8", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -24,5 +24,3 @@ error: using `print!()` with a format string that ends in a newline, consider us\n 9 |     print!(\"{}/n\", 1265);\n   |     ^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "14b26e168474717d8f52986deb05b3024409ffe8", "filename": "tests/ui/ptr_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unused, many_single_char_names)]\n #![warn(ptr_arg)]\n "}, {"sha": "13be68d4cd4273ec5ea9537d4b0b078e9961a842", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -79,5 +79,3 @@ help: change `y.as_str()` to\n 62 |     let c = y;\n    |             ^\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "71f2f2b219bd79ebfef7bd3dbfa1aa3107a1f009", "filename": "tests/ui/range.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,7 +1,7 @@\n #![feature(iterator_step_by)]\n #![feature(inclusive_range_syntax)]\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n struct NotARange;\n impl NotARange {"}, {"sha": "4098d32d08e3ea49aaef6371aa855ce6a70917e3", "filename": "tests/ui/range.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Frange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Frange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -38,5 +38,3 @@ error: Iterator::step_by(0) will panic at runtime\n 33 |     let _ = v1.iter().step_by(2/3);\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "ab3897bc3150d5e5f74fc64f565917ea8528083b", "filename": "tests/ui/redundant_closure_call.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fredundant_closure_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fredundant_closure_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(redundant_closure_call)]\n "}, {"sha": "d8ec72fda92aea813984c14af4d449af9f1b91df", "filename": "tests/ui/redundant_closure_call.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fredundant_closure_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fredundant_closure_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -30,5 +30,3 @@ error: Try not to call a closure in the expression where it is declared.\n 12 |  k = (|a,b| a*b)(1,5);\n    |      ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "0bd000082e83d39d1fe8c1e20e52044ab18a19ed", "filename": "tests/ui/reference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freference.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n fn get_number() -> usize {\n     10"}, {"sha": "2e6b23f6dc0ffc76808ab754662a24eb95a021fc", "filename": "tests/ui/reference.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Freference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Freference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freference.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -66,5 +66,3 @@ error: immediately dereferencing a reference\n 53 |         let y = **&mut &mut x;\n    |                  ^^^^^^^^^^^^ help: try this: `&mut x`\n \n-error: aborting due to 11 previous errors\n-"}, {"sha": "3dd1f64202c7643928740d8c52f924360dec650f", "filename": "tests/ui/regex.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregex.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(unused)]\n #![warn(invalid_regex, trivial_regex, regex_macro)]"}, {"sha": "1c244c1df127e57511d1d82794256726ce4e4301", "filename": "tests/ui/regex.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fregex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fregex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregex.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -149,5 +149,3 @@ error: trivial regex\n    |\n    = help: consider using consider using `str::is_empty`\n \n-error: aborting due to 21 previous errors\n-"}, {"sha": "792ebc9b0ea18b4ee232f2e9270559bb85e48b8f", "filename": "tests/ui/serde.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fserde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fserde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fserde.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(serde_api_misuse)]\n #![allow(dead_code)]\n "}, {"sha": "da0a96b2a3dc2dd2f192488879f26985eaad8ab4", "filename": "tests/ui/serde.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fserde.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fserde.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fserde.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -10,5 +10,3 @@ error: you should not implement `visit_string` without also implementing `visit_\n    |\n    = note: `-D serde-api-misuse` implied by `-D warnings`\n \n-error: aborting due to previous error\n-"}, {"sha": "fbe695a7657c797fccf0673dd53e0d6b02f8f329", "filename": "tests/ui/shadow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(clippy, clippy_pedantic)]\n #![allow(unused_parens, unused_variables, missing_docs_in_private_items)]"}, {"sha": "50f41627acbf228a56e27ba6f6e6fd6607b1713c", "filename": "tests/ui/shadow.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -134,5 +134,3 @@ note: previous binding is here\n 21 |     let x = y;\n    |         ^\n \n-error: aborting due to 9 previous errors\n-"}, {"sha": "0f5773623be347629c410ec615b109e1a9a72e54", "filename": "tests/ui/short_circuit_statement.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshort_circuit_statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshort_circuit_statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshort_circuit_statement.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(short_circuit_statement)]\n "}, {"sha": "d7a02d7b9c3c73c5cb60e465cf05068343fc2d71", "filename": "tests/ui/short_circuit_statement.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshort_circuit_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshort_circuit_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshort_circuit_statement.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -18,5 +18,3 @@ error: boolean short circuit operator in statement may be clearer using an expli\n 9 |     1 == 2 || g();\n   |     ^^^^^^^^^^^^^^ help: replace it with: `if !(1 == 2) { g(); }`\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "5814e9977530c06b08222bccd1b3d46f3665f07b", "filename": "tests/ui/should_assert_eq.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshould_assert_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshould_assert_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_assert_eq.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(needless_pass_by_value)]\n #![warn(should_assert_eq)]"}, {"sha": "5b393e1dbe870a00f7475793916f544d7c4ccb4c", "filename": "tests/ui/should_assert_eq.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshould_assert_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fshould_assert_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_assert_eq.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -55,5 +55,3 @@ error: use `assert_ne` for better reporting\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "66d24a3c0702ae0e130037a065f735acbe935d64", "filename": "tests/ui/strings.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(string_add)]\n #[allow(string_add_assign)]"}, {"sha": "a8fd59e12b27578a822aed98e944ba69b28e869d", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -72,5 +72,3 @@ error: manual implementation of an assign operation\n 65 |     ; x = x + 1;\n    |       ^^^^^^^^^ help: replace it with: `x += 1`\n \n-error: aborting due to 11 previous errors\n-"}, {"sha": "24612fd3b3ef26682935e3605a2f444df5fd92f1", "filename": "tests/ui/stutter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstutter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstutter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstutter.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(stutter)]\n #![allow(dead_code)]\n "}, {"sha": "38cbcaa32f59ea2e250ded8593a578611db6cf00", "filename": "tests/ui/stutter.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstutter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fstutter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstutter.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -24,5 +24,3 @@ error: item name ends with its containing module's name\n 11 |     pub enum CakeFoo {}\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "d1d12641c46afa4b9b8938d21022dac2ee2ea9de", "filename": "tests/ui/swap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(clippy)]\n #![allow(blacklisted_name, unused_assignments)]"}, {"sha": "0bda9bc8d2b96896398d52af6c3985278995e911", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -65,5 +65,3 @@ error: this looks like you are trying to swap `c.0` and `a`\n    |\n    = note: or maybe you should use `std::mem::replace`?\n \n-error: aborting due to 7 previous errors\n-"}, {"sha": "8f25aad72bb5c7e35d8c1e37e1aa5060746c9bf8", "filename": "tests/ui/temporary_assignment.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftemporary_assignment.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(temporary_assignment)]\n "}, {"sha": "73a4818ba16008393b3986863d223b807fb1eda2", "filename": "tests/ui/temporary_assignment.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftemporary_assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftemporary_assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftemporary_assignment.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: assignment to temporary\n 30 |     (0, 0).0 = 1;\n    |     ^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "a0d6dd2dabd593b464c2b7c24f3c66ac43f12631", "filename": "tests/ui/toplevel_ref_arg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftoplevel_ref_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftoplevel_ref_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n-#![feature(plugin)]\n \n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n #![allow(unused)]\n "}, {"sha": "525b181bf91adaa4a13f4d9787f4bea650525552", "filename": "tests/ui/toplevel_ref_arg.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftoplevel_ref_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftoplevel_ref_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -30,5 +30,3 @@ error: `ref` on an entire `let` pattern is discouraged, take a reference with `&\n 24 |   let ref mut z = 1 + 2;\n    |   ----^^^^^^^^^--------- help: try: `let z = &mut (1 + 2);`\n \n-error: aborting due to 5 previous errors\n-"}, {"sha": "6a7b6b05e7013d1c9586a6e4b60a503c2bd793ad", "filename": "tests/ui/trailing_zeros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftrailing_zeros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftrailing_zeros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_zeros.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin, custom_attribute, stmt_expr_attributes)]\n-#![plugin(clippy)]\n+\n #![allow(unused_parens)]\n \n fn main() {"}, {"sha": "0a4b5361d862b3777de33f9ea1e877bc2cc74490", "filename": "tests/ui/trailing_zeros.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftrailing_zeros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftrailing_zeros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrailing_zeros.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: bit mask could be simplified with a call to `trailing_zeros`\n 8 |     let _ = x & 0b1_1111 == 0; // suggest trailing_zeros\n   |             ^^^^^^^^^^^^^^^^^ help: try: `x.trailing_zeros() >= 5`\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "31cd8304eba7b56afd649160cd80ec3581ac0622", "filename": "tests/ui/transmute.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(dead_code)]\n "}, {"sha": "0c5aff11b0ce62f541acf59e3a2f2c308880f30f", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -154,5 +154,3 @@ error: transmute from a type (`Usize`) to a pointer to that type (`*mut Usize`)\n 117 |         let _: *mut Usize = core::intrinsics::transmute(my_int());\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 25 previous errors\n-"}, {"sha": "08866c63ec6fde25d38327ea23bda3ac26f6d089", "filename": "tests/ui/transmute_32bit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute_32bit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute_32bit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_32bit.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,6 +1,6 @@\n //ignore-x86_64\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(wrong_transmute)]\n fn main() {"}, {"sha": "65240c80a480d025e339f69fcb1318aeeba259d5", "filename": "tests/ui/transmute_64bit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute_64bit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute_64bit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_64bit.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,7 +1,7 @@\n //ignore-x86\n //no-ignore-x86_64\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(wrong_transmute)]\n fn main() {"}, {"sha": "b679b913877104afa64ec24f627af1edf69e0023", "filename": "tests/ui/transmute_64bit.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute_64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Ftransmute_64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_64bit.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: transmute from a `f64` to a pointer\n 11 |         let _: *mut usize = std::mem::transmute(6.0f64);\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "5bb0e7edfeda6e22806f4862fdd2bf6641b0cea5", "filename": "tests/ui/unicode.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #[warn(zero_width_space)]\n fn zero() {"}, {"sha": "73599235ea816b6e1519735dfee5e882e21389c2", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -28,5 +28,3 @@ error: literal non-ASCII character detected\n    = help: Consider replacing the string with:\n            \"\"/u{dc}ben!\"\"\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "2b6d757845fe156d9c2a05f6490faa026d60fc73", "filename": "tests/ui/unit_cmp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funit_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funit_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_cmp.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(unit_cmp)]\n #![allow(no_effect, unnecessary_operation)]"}, {"sha": "a85e4150a3eb0983b72f418b2c2d73791de0dd20", "filename": "tests/ui/unit_cmp.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funit_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funit_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_cmp.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -12,5 +12,3 @@ error: >-comparison of unit values detected. This will always be false\n 19 |     if { true; } > { false; } {\n    |        ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "8c9606022642eeddc588eeb8b5721baf62820fcc", "filename": "tests/ui/unneeded_field_pattern.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funneeded_field_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funneeded_field_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funneeded_field_pattern.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![warn(unneeded_field_pattern)]\n #[allow(dead_code, unused)]"}, {"sha": "ef1a8d75732e7c86e476964bb790a5a07baf792c", "filename": "tests/ui/unneeded_field_pattern.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funneeded_field_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funneeded_field_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funneeded_field_pattern.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -15,5 +15,3 @@ error: All the struct fields are matched to a wildcard pattern, consider using `\n    |\n    = help: Try with `Foo { .. }` instead\n \n-error: aborting due to 2 previous errors\n-"}, {"sha": "327fea254a8c1a46c0a836b558c28f7536573987", "filename": "tests/ui/unreadable_literal.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funreadable_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funreadable_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #[warn(unreadable_literal)]\n #[allow(unused_variables)]\n fn main() {"}, {"sha": "81b69937a6da50800554d94d35ec0107a23b26bf", "filename": "tests/ui/unreadable_literal.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -31,5 +31,3 @@ error: long literal lacking separators\n   |\n   = help: consider: 1.234_56_f32\n \n-error: aborting due to 4 previous errors\n-"}, {"sha": "29f34d31a8e98731081d9feed861c0aa1fdd13b0", "filename": "tests/ui/unsafe_removed_from_name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe_removed_from_name.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unused_imports)]\n #![allow(dead_code)]\n #![warn(unsafe_removed_from_name)]"}, {"sha": "7d455d31bcecfd438652c8913168326636f98e25", "filename": "tests/ui/unsafe_removed_from_name.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funsafe_removed_from_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funsafe_removed_from_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe_removed_from_name.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -18,5 +18,3 @@ error: removed \"unsafe\" from the name of `Unsafe` in use as `LieAboutModSafety`\n 23 | use mod_with_some_unsafe_things::Unsafe as LieAboutModSafety;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "ea72c1b1b70418b2a4997219c8b53f48421bfb37", "filename": "tests/ui/unused_io_amount.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n \n #![allow(dead_code)]\n #![warn(unused_io_amount)]"}, {"sha": "8739ac245a79d8290b850d8fc3470dbef205bb9c", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -39,5 +39,3 @@ error: handle read amount returned or use `Read::read_exact` instead\n 27 |     s.read(&mut buf).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "115121dc2757a8f29362199cc6682cdf4874f90a", "filename": "tests/ui/unused_labels.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_labels.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![plugin(clippy)]\n-#![feature(plugin)]\n+\n+\n \n #![allow(dead_code, items_after_statements, never_loop)]\n #![warn(unused_label)]"}, {"sha": "338eb2f1551f53c70aa5fb2e4d119e7382ebeb63", "filename": "tests/ui/unused_labels.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_labels.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -22,5 +22,3 @@ error: unused label `'same_label_in_two_fns`\n 34 | |     }\n    | |_____^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "91bca47eb12c544f5da50c2329a8cc07fe28522c", "filename": "tests/ui/unused_lt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_lt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_lt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_lt.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![allow(unused, dead_code, needless_lifetimes, needless_pass_by_value)]\n #![warn(unused_lifetimes)]\n "}, {"sha": "a4f01de18f7b56d432c7b2c50ec3eea26e51bdbb", "filename": "tests/ui/unused_lt.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_lt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Funused_lt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_lt.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -18,5 +18,3 @@ error: this lifetime isn't used in the function definition\n 50 |     fn x<'a>(&self) {}\n    |          ^^\n \n-error: aborting due to 3 previous errors\n-"}, {"sha": "b12900b7691a76d26b1ea6d8cd0f52d389b0159c", "filename": "tests/ui/use_self.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(use_self)]\n #![allow(dead_code)]\n #![allow(should_implement_trait)]"}, {"sha": "9d316dd3e083570afd941dcdda3d253a1e983ebd", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -36,5 +36,3 @@ error: unnecessary structure name repetition\n 24 |             Foo::new()\n    |             ^^^^^^^^ help: use the applicable keyword: `Self`\n \n-error: aborting due to 6 previous errors\n-"}, {"sha": "60a2c4e8b4c9a70458795046452cbdc56159ea57", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f36f214a536d57e6f7f4e71d9499d99f5e54e8f/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=6f36f214a536d57e6f7f4e71d9499d99f5e54e8f", "patch": "@@ -1,5 +1,5 @@\n-#![feature(plugin)]\n-#![plugin(clippy)]\n+\n+\n #![warn(clippy)]\n \n #![allow(blacklisted_name)]"}]}