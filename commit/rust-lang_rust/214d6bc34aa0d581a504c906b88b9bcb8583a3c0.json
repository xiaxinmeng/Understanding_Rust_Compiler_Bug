{"sha": "214d6bc34aa0d581a504c906b88b9bcb8583a3c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNGQ2YmMzNGFhMGQ1ODFhNTA0YzkwNmI4OGI5YmNiODU4M2EzYzA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-18T23:54:00Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:22Z"}, "message": "librustc: De-`@mut` the `trait_method_def_ids` table.", "tree": {"sha": "b9dcc28c57a0abfe323a7a990109f2acb473c59d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9dcc28c57a0abfe323a7a990109f2acb473c59d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/214d6bc34aa0d581a504c906b88b9bcb8583a3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/214d6bc34aa0d581a504c906b88b9bcb8583a3c0", "html_url": "https://github.com/rust-lang/rust/commit/214d6bc34aa0d581a504c906b88b9bcb8583a3c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/214d6bc34aa0d581a504c906b88b9bcb8583a3c0/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f15f9388dc62e61681e52c455adc46a48257fa6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f15f9388dc62e61681e52c455adc46a48257fa6a", "html_url": "https://github.com/rust-lang/rust/commit/f15f9388dc62e61681e52c455adc46a48257fa6a"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "399910a63c0c9c57f047d8a5364ae542303eb11e", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/214d6bc34aa0d581a504c906b88b9bcb8583a3c0/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214d6bc34aa0d581a504c906b88b9bcb8583a3c0/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=214d6bc34aa0d581a504c906b88b9bcb8583a3c0", "patch": "@@ -290,7 +290,7 @@ struct ctxt_ {\n     methods: RefCell<HashMap<DefId, @Method>>,\n \n     // Maps from a trait def-id to a list of the def-ids of its methods\n-    trait_method_def_ids: @mut HashMap<DefId, @~[DefId]>,\n+    trait_method_def_ids: RefCell<HashMap<DefId, @~[DefId]>>,\n \n     // A cache for the trait_methods() routine\n     trait_methods_cache: @mut HashMap<DefId, @~[@Method]>,\n@@ -999,7 +999,7 @@ pub fn mk_ctxt(s: session::Session,\n         ast_ty_to_ty_cache: @mut HashMap::new(),\n         enum_var_cache: @mut HashMap::new(),\n         methods: RefCell::new(HashMap::new()),\n-        trait_method_def_ids: @mut HashMap::new(),\n+        trait_method_def_ids: RefCell::new(HashMap::new()),\n         trait_methods_cache: @mut HashMap::new(),\n         impl_trait_cache: @mut HashMap::new(),\n         ty_param_defs: @mut HashMap::new(),\n@@ -3610,9 +3610,13 @@ pub fn method(cx: ctxt, id: ast::DefId) -> @Method {\n }\n \n pub fn trait_method_def_ids(cx: ctxt, id: ast::DefId) -> @~[DefId] {\n-    lookup_locally_or_in_crate_store(\n-        \"trait_method_def_ids\", id, cx.trait_method_def_ids,\n-        || @csearch::get_trait_method_def_ids(cx.cstore, id))\n+    let mut trait_method_def_ids = cx.trait_method_def_ids.borrow_mut();\n+    lookup_locally_or_in_crate_store(\"trait_method_def_ids\",\n+                                     id,\n+                                     trait_method_def_ids.get(),\n+                                     || {\n+        @csearch::get_trait_method_def_ids(cx.cstore, id)\n+    })\n }\n \n pub fn impl_trait_ref(cx: ctxt, id: ast::DefId) -> Option<@TraitRef> {"}, {"sha": "99f25d8e045c7579e18d95d3207daddd9a5e5e62", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/214d6bc34aa0d581a504c906b88b9bcb8583a3c0/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/214d6bc34aa0d581a504c906b88b9bcb8583a3c0/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=214d6bc34aa0d581a504c906b88b9bcb8583a3c0", "patch": "@@ -226,7 +226,9 @@ pub fn ensure_trait_methods(ccx: &CrateCtxt,\n             });\n \n             let trait_def_id = local_def(trait_id);\n-            tcx.trait_method_def_ids.insert(trait_def_id, method_def_ids);\n+            let mut trait_method_def_ids = tcx.trait_method_def_ids\n+                                              .borrow_mut();\n+            trait_method_def_ids.get().insert(trait_def_id, method_def_ids);\n         }\n         _ => { /* Ignore things that aren't traits */ }\n     }"}]}