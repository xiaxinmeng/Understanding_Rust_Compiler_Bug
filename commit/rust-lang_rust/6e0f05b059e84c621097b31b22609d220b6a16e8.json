{"sha": "6e0f05b059e84c621097b31b22609d220b6a16e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMGYwNWIwNTllODRjNjIxMDk3YjMxYjIyNjA5ZDIyMGI2YTE2ZTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-05T10:09:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-05T10:09:29Z"}, "message": "auto merge of #4790 : pcwalton/rust/at-readers, r=pcwalton", "tree": {"sha": "82c4f02a02d019dd6e370d1ba4b721e278f3d8e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82c4f02a02d019dd6e370d1ba4b721e278f3d8e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e0f05b059e84c621097b31b22609d220b6a16e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e0f05b059e84c621097b31b22609d220b6a16e8", "html_url": "https://github.com/rust-lang/rust/commit/6e0f05b059e84c621097b31b22609d220b6a16e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e0f05b059e84c621097b31b22609d220b6a16e8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e77526b9472e3e5840703cfd05dcd911b9e2956", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e77526b9472e3e5840703cfd05dcd911b9e2956", "html_url": "https://github.com/rust-lang/rust/commit/2e77526b9472e3e5840703cfd05dcd911b9e2956"}, {"sha": "7d5322cf09900816d40618b70d329b8bd386ee3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5322cf09900816d40618b70d329b8bd386ee3b", "html_url": "https://github.com/rust-lang/rust/commit/7d5322cf09900816d40618b70d329b8bd386ee3b"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e7d568c54331c545fc8a6d5390128c1b5b816c29", "filename": "src/libcore/io.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6e0f05b059e84c621097b31b22609d220b6a16e8/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e0f05b059e84c621097b31b22609d220b6a16e8/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=6e0f05b059e84c621097b31b22609d220b6a16e8", "patch": "@@ -490,25 +490,25 @@ pub fn FILERes(f: *libc::FILE) -> FILERes {\n     }\n }\n \n-pub fn FILE_reader(f: *libc::FILE, cleanup: bool) -> Reader {\n+pub fn FILE_reader(f: *libc::FILE, cleanup: bool) -> @Reader {\n     if cleanup {\n-        Wrapper { base: f, cleanup: FILERes(f) } as Reader\n+        @Wrapper { base: f, cleanup: FILERes(f) } as @Reader\n     } else {\n-        f as Reader\n+        @f as @Reader\n     }\n }\n \n // FIXME (#2004): this should either be an trait-less impl, a set of\n // top-level functions that take a reader, or a set of default methods on\n // reader (which can then be called reader)\n \n-pub fn stdin() -> Reader {\n+pub fn stdin() -> @Reader {\n     unsafe {\n-        rustrt::rust_get_stdin() as Reader\n+        rustrt::rust_get_stdin() as @Reader\n     }\n }\n \n-pub fn file_reader(path: &Path) -> Result<Reader, ~str> {\n+pub fn file_reader(path: &Path) -> Result<@Reader, ~str> {\n     unsafe {\n         let f = os::as_c_charp(path.to_str(), |pathbuf| {\n             os::as_c_charp(\"r\", |modebuf|\n@@ -555,11 +555,11 @@ impl BytesReader: Reader {\n     fn tell(&self) -> uint { self.pos }\n }\n \n-pub pure fn with_bytes_reader<t>(bytes: &[u8], f: fn(Reader) -> t) -> t {\n-    f(BytesReader { bytes: bytes, pos: 0u } as Reader)\n+pub pure fn with_bytes_reader<t>(bytes: &[u8], f: fn(@Reader) -> t) -> t {\n+    f(@BytesReader { bytes: bytes, pos: 0u } as @Reader)\n }\n \n-pub pure fn with_str_reader<T>(s: &str, f: fn(Reader) -> T) -> T {\n+pub pure fn with_str_reader<T>(s: &str, f: fn(@Reader) -> T) -> T {\n     str::byte_slice(s, |bytes| with_bytes_reader(bytes, f))\n }\n "}]}