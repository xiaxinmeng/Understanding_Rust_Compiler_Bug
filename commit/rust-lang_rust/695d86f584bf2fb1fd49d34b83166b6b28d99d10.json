{"sha": "695d86f584bf2fb1fd49d34b83166b6b28d99d10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NWQ4NmY1ODRiZjJmYjFmZDQ5ZDM0YjgzMTY2YjZiMjhkOTlkMTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-17T21:54:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-17T22:34:54Z"}, "message": "Make OnceCell<T> transparent to dropck\n\nSee the failed build in\n\nhttps://github.com/rust-lang/rust/pull/75555#issuecomment-675016718\n\nfor an example where we need this in real life", "tree": {"sha": "33148dc3aaf7e9a01a1d991aeb21ce746b4a256e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33148dc3aaf7e9a01a1d991aeb21ce746b4a256e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/695d86f584bf2fb1fd49d34b83166b6b28d99d10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/695d86f584bf2fb1fd49d34b83166b6b28d99d10", "html_url": "https://github.com/rust-lang/rust/commit/695d86f584bf2fb1fd49d34b83166b6b28d99d10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/695d86f584bf2fb1fd49d34b83166b6b28d99d10/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33c96b4d9782cf6364e47cb2c904e66b06c22bb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/33c96b4d9782cf6364e47cb2c904e66b06c22bb4", "html_url": "https://github.com/rust-lang/rust/commit/33c96b4d9782cf6364e47cb2c904e66b06c22bb4"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "24f921ca7e4dc7a277d30c737577197cb8f72d06", "filename": "library/core/tests/lazy.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/695d86f584bf2fb1fd49d34b83166b6b28d99d10/library%2Fcore%2Ftests%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695d86f584bf2fb1fd49d34b83166b6b28d99d10/library%2Fcore%2Ftests%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flazy.rs?ref=695d86f584bf2fb1fd49d34b83166b6b28d99d10", "patch": "@@ -122,3 +122,12 @@ fn reentrant_init() {\n     });\n     eprintln!(\"use after free: {:?}\", dangling_ref.get().unwrap());\n }\n+\n+#[test]\n+fn dropck() {\n+    let cell = OnceCell::new();\n+    {\n+        let s = String::new();\n+        cell.set(&s).unwrap();\n+    }\n+}"}, {"sha": "c1d05213e1147d6640bb59710f2d86944124b191", "filename": "library/std/src/lazy.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/695d86f584bf2fb1fd49d34b83166b6b28d99d10/library%2Fstd%2Fsrc%2Flazy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/695d86f584bf2fb1fd49d34b83166b6b28d99d10/library%2Fstd%2Fsrc%2Flazy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flazy.rs?ref=695d86f584bf2fb1fd49d34b83166b6b28d99d10", "patch": "@@ -386,9 +386,10 @@ impl<T> SyncOnceCell<T> {\n     }\n }\n \n-impl<T> Drop for SyncOnceCell<T> {\n+unsafe impl<#[may_dangle] T> Drop for SyncOnceCell<T> {\n     fn drop(&mut self) {\n-        // Safety: The cell is being dropped, so it can't be accessed again\n+        // Safety: The cell is being dropped, so it can't be accessed again.\n+        // We also don't touch the `T`, which validates our usage of #[may_dangle].\n         unsafe { self.take_inner() };\n     }\n }\n@@ -845,4 +846,13 @@ mod tests {\n             assert_eq!(msg, MSG);\n         }\n     }\n+\n+    #[test]\n+    fn dropck() {\n+        let cell = SyncOnceCell::new();\n+        {\n+            let s = String::new();\n+            cell.set(&s).unwrap();\n+        }\n+    }\n }"}]}