{"sha": "61206c4293fdf256a0971d2effd87e5a874afbd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMjA2YzQyOTNmZGYyNTZhMDk3MWQyZWZmZDg3ZTVhODc0YWZiZDc=", "commit": {"author": {"name": "Alexander Battisti", "email": "battisti@gmail.com", "date": "2017-01-09T19:20:11Z"}, "committer": {"name": "Alexander Battisti", "email": "battisti@gmail.com", "date": "2017-01-09T19:20:11Z"}, "message": "Fix for for setting test-threads to 0\n\nRunning test with cargo test -- --test-threads=0 causes cargo to\nhang as 0 is a valid usize. Adding zero threads as a special case\nto the error handling.", "tree": {"sha": "9cd4fd13c81bf1da6dbcdcf3db246e920fae55a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd4fd13c81bf1da6dbcdcf3db246e920fae55a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61206c4293fdf256a0971d2effd87e5a874afbd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61206c4293fdf256a0971d2effd87e5a874afbd7", "html_url": "https://github.com/rust-lang/rust/commit/61206c4293fdf256a0971d2effd87e5a874afbd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61206c4293fdf256a0971d2effd87e5a874afbd7/comments", "author": {"login": "battisti", "id": 29276, "node_id": "MDQ6VXNlcjI5Mjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/battisti", "html_url": "https://github.com/battisti", "followers_url": "https://api.github.com/users/battisti/followers", "following_url": "https://api.github.com/users/battisti/following{/other_user}", "gists_url": "https://api.github.com/users/battisti/gists{/gist_id}", "starred_url": "https://api.github.com/users/battisti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/battisti/subscriptions", "organizations_url": "https://api.github.com/users/battisti/orgs", "repos_url": "https://api.github.com/users/battisti/repos", "events_url": "https://api.github.com/users/battisti/events{/privacy}", "received_events_url": "https://api.github.com/users/battisti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "battisti", "id": 29276, "node_id": "MDQ6VXNlcjI5Mjc2", "avatar_url": "https://avatars.githubusercontent.com/u/29276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/battisti", "html_url": "https://github.com/battisti", "followers_url": "https://api.github.com/users/battisti/followers", "following_url": "https://api.github.com/users/battisti/following{/other_user}", "gists_url": "https://api.github.com/users/battisti/gists{/gist_id}", "starred_url": "https://api.github.com/users/battisti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/battisti/subscriptions", "organizations_url": "https://api.github.com/users/battisti/orgs", "repos_url": "https://api.github.com/users/battisti/repos", "events_url": "https://api.github.com/users/battisti/events{/privacy}", "received_events_url": "https://api.github.com/users/battisti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd16aa08cdfb89982e3ed2820454769321803c61", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd16aa08cdfb89982e3ed2820454769321803c61", "html_url": "https://github.com/rust-lang/rust/commit/bd16aa08cdfb89982e3ed2820454769321803c61"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "568e86225a3c27aa84a71afef8b1120653f24432", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61206c4293fdf256a0971d2effd87e5a874afbd7/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61206c4293fdf256a0971d2effd87e5a874afbd7/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=61206c4293fdf256a0971d2effd87e5a874afbd7", "patch": "@@ -439,6 +439,8 @@ pub fn parse_opts(args: &[String]) -> Option<OptRes> {\n     let test_threads = match matches.opt_str(\"test-threads\") {\n         Some(n_str) =>\n             match n_str.parse::<usize>() {\n+                Ok(0) => \n+                    return Some(Err(format!(\"argument for --test-threads must not be 0\"))),\n                 Ok(n) => Some(n),\n                 Err(e) =>\n                     return Some(Err(format!(\"argument for --test-threads must be a number > 0 \\"}]}