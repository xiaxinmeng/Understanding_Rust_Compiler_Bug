{"sha": "10b08e3c9c935da0295fc57ac7dbad99778068e7", "node_id": "C_kwDOAAsO6NoAKDEwYjA4ZTNjOWM5MzVkYTAyOTVmYzU3YWM3ZGJhZDk5Nzc4MDY4ZTc", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-02-08T18:53:48Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-02-28T06:47:58Z"}, "message": "Fix a race in the query system", "tree": {"sha": "ff0664d69c658eee29f9d582ff10720a40375c79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff0664d69c658eee29f9d582ff10720a40375c79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10b08e3c9c935da0295fc57ac7dbad99778068e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10b08e3c9c935da0295fc57ac7dbad99778068e7", "html_url": "https://github.com/rust-lang/rust/commit/10b08e3c9c935da0295fc57ac7dbad99778068e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10b08e3c9c935da0295fc57ac7dbad99778068e7/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b583ede652936887a85c54bb793251479c82d3ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/b583ede652936887a85c54bb793251479c82d3ee", "html_url": "https://github.com/rust-lang/rust/commit/b583ede652936887a85c54bb793251479c82d3ee"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "5f003fa70e133b241911ac8b088cd33e4e6c7d3a", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/10b08e3c9c935da0295fc57ac7dbad99778068e7/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10b08e3c9c935da0295fc57ac7dbad99778068e7/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=10b08e3c9c935da0295fc57ac7dbad99778068e7", "patch": "@@ -25,7 +25,6 @@ use std::collections::hash_map::Entry;\n use std::fmt::Debug;\n use std::hash::Hash;\n use std::mem;\n-use std::ptr;\n use thin_vec::ThinVec;\n \n use super::QueryConfig;\n@@ -250,13 +249,16 @@ where\n     where\n         C: QueryCache<Key = K>,\n     {\n-        // We can move out of `self` here because we `mem::forget` it below\n-        let key = unsafe { ptr::read(&self.key) };\n+        let key = self.key;\n         let state = self.state;\n \n         // Forget ourself so our destructor won't poison the query\n         mem::forget(self);\n \n+        // Mark as complete before we remove the job from the active state\n+        // so no other thread can re-execute this query.\n+        cache.complete(key, result, dep_node_index);\n+\n         let job = {\n             #[cfg(parallel_compiler)]\n             let mut lock = state.active.get_shard_by_value(&key).lock();\n@@ -267,7 +269,6 @@ where\n                 QueryResult::Poisoned => panic!(),\n             }\n         };\n-        cache.complete(key, result, dep_node_index);\n \n         job.signal_complete();\n     }"}]}