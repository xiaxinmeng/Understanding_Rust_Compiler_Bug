{"sha": "3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2OTNhNGVhNTNkMTVkMjY4ZDc0YmM5NzczZGFhODcwMmVhMmQ1YmE=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2018-06-07T17:16:50Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2018-06-07T20:01:46Z"}, "message": "Formatting", "tree": {"sha": "96dd9c90f1fafa91f9ec728a19153ad9a2869407", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96dd9c90f1fafa91f9ec728a19153ad9a2869407"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "html_url": "https://github.com/rust-lang/rust/commit/3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52deb3b0863558315b57b801804820254d4eaa4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/52deb3b0863558315b57b801804820254d4eaa4e", "html_url": "https://github.com/rust-lang/rust/commit/52deb3b0863558315b57b801804820254d4eaa4e"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "0288176f436b2eb961a4d9ef80aff897994d3fe4", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "patch": "@@ -1,9 +1,9 @@\n+use crate::utils::span_lint;\n use rustc::hir::*;\n use rustc::lint::*;\n use std::f64::consts as f64;\n use syntax::ast::{FloatTy, Lit, LitKind};\n use syntax::symbol;\n-use crate::utils::span_lint;\n \n /// **What it does:** Checks for floating point literals that approximate\n /// constants which are defined in"}, {"sha": "a9ccc336a199dfad065431742dccfbbe73b37ab9", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "patch": "@@ -1,7 +1,7 @@\n+use crate::utils::span_lint;\n use rustc::hir;\n use rustc::lint::*;\n use syntax::codemap::Span;\n-use crate::utils::span_lint;\n \n /// **What it does:** Checks for plain integer arithmetic.\n ///"}, {"sha": "77aa5e834258d685851e4f2a4d4aa6d995fbffe0", "filename": "clippy_lints/src/array_indexing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Farray_indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Farray_indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farray_indexing.rs?ref=3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "patch": "@@ -1,10 +1,10 @@\n use crate::consts::{constant, Constant};\n+use crate::utils::higher::Range;\n+use crate::utils::{self, higher};\n use rustc::hir;\n use rustc::lint::*;\n use rustc::ty;\n use syntax::ast::RangeLimits;\n-use crate::utils::higher::Range;\n-use crate::utils::{self, higher};\n \n /// **What it does:** Checks for out of bounds array indexing with a constant\n /// index."}, {"sha": "ba405610c9024b25c917f436a23fea5e55d19722", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "patch": "@@ -1,9 +1,9 @@\n+use crate::utils::{get_trait_def_id, implements_trait, snippet_opt, span_lint_and_then, SpanlessEq};\n+use crate::utils::{higher, sugg};\n use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::lint::*;\n use syntax::ast;\n-use crate::utils::{get_trait_def_id, implements_trait, snippet_opt, span_lint_and_then, SpanlessEq};\n-use crate::utils::{higher, sugg};\n \n /// **What it does:** Checks for compound assignment operations (`+=` and\n /// similar)."}, {"sha": "da5c5bd3227b849d40170f30ac54133efe46470e", "filename": "tests/compile-test.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3693a4ea53d15d268d74bc9773daa8702ea2d5ba/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=3693a4ea53d15d268d74bc9773daa8702ea2d5ba", "patch": "@@ -3,10 +3,10 @@\n extern crate compiletest_rs as compiletest;\n extern crate test;\n \n-use std::io;\n+use std::env::{set_var, var};\n use std::ffi::OsStr;\n use std::fs;\n-use std::env::{set_var, var};\n+use std::io;\n use std::path::{Path, PathBuf};\n \n fn clippy_driver_path() -> PathBuf {\n@@ -93,12 +93,11 @@ fn run_ui_toml_tests(config: &compiletest::Config, mut tests: Vec<test::TestDesc\n                 relative_dir: dir_path.file_name().unwrap().into(),\n             };\n             let test_name = compiletest::make_test_name(&config, &paths);\n-            let index = tests.iter()\n+            let index = tests\n+                .iter()\n                 .position(|test| test.desc.name == test_name)\n                 .expect(\"The test should be in there\");\n-            result &= test::run_tests_console(\n-                &opts,\n-                vec![tests.swap_remove(index)])?;\n+            result &= test::run_tests_console(&opts, vec![tests.swap_remove(index)])?;\n         }\n     }\n     Ok(result)\n@@ -111,11 +110,11 @@ fn run_ui_toml() {\n \n     let res = run_ui_toml_tests(&config, tests);\n     match res {\n-        Ok(true) => {}\n+        Ok(true) => {},\n         Ok(false) => panic!(\"Some tests failed\"),\n         Err(e) => {\n             println!(\"I/O failure during tests: {:?}\", e);\n-        }\n+        },\n     }\n }\n "}]}