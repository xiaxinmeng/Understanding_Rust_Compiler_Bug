{"sha": "8aa0f44d15fe133f10830e4b58cd20f207bbf769", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYTBmNDRkMTVmZTEzM2YxMDgzMGU0YjU4Y2QyMGYyMDdiYmY3Njk=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-02T22:21:47Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-04T17:19:30Z"}, "message": "Remove eprintln", "tree": {"sha": "d23461389499e416ba2743da748b46dc31d33a96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d23461389499e416ba2743da748b46dc31d33a96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aa0f44d15fe133f10830e4b58cd20f207bbf769", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aa0f44d15fe133f10830e4b58cd20f207bbf769", "html_url": "https://github.com/rust-lang/rust/commit/8aa0f44d15fe133f10830e4b58cd20f207bbf769", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aa0f44d15fe133f10830e4b58cd20f207bbf769/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3c28dba830fb7c88133a0a402f02a5dff9d0738", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c28dba830fb7c88133a0a402f02a5dff9d0738", "html_url": "https://github.com/rust-lang/rust/commit/b3c28dba830fb7c88133a0a402f02a5dff9d0738"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "8081221af496400b5da736a7af9d11111643d591", "filename": "src/rustfmt_diff.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa0f44d15fe133f10830e4b58cd20f207bbf769/src%2Frustfmt_diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa0f44d15fe133f10830e4b58cd20f207bbf769/src%2Frustfmt_diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustfmt_diff.rs?ref=8aa0f44d15fe133f10830e4b58cd20f207bbf769", "patch": "@@ -122,13 +122,11 @@ impl std::str::FromStr for ModifiedLines {\n                 (Some(orig), Some(removed), Some(added)) => (orig, removed, added),\n                 _ => return Err(()),\n             };\n-            eprintln!(\"{} {} {}\", orig, rem, new_lines);\n             let (orig, rem, new_lines): (u32, u32, usize) =\n                 match (orig.parse(), rem.parse(), new_lines.parse()) {\n                     (Ok(a), Ok(b), Ok(c)) => (a, b, c),\n                     _ => return Err(()),\n                 };\n-            eprintln!(\"{} {} {}\", orig, rem, new_lines);\n             let lines = lines.by_ref().take(new_lines);\n             let lines: Vec<_> = lines.map(ToOwned::to_owned).collect();\n             if lines.len() != new_lines {"}]}