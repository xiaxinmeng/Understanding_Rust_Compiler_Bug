{"sha": "35cf19f38a5aef8657b53f15b2df69c3a7080491", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Y2YxOWYzOGE1YWVmODY1N2I1M2YxNWIyZGY2OWMzYTcwODA0OTE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-10T21:15:30Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-10T21:15:30Z"}, "message": "only print the index part", "tree": {"sha": "a689e90a8657d08eb5436689f9d15f57d2a92931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a689e90a8657d08eb5436689f9d15f57d2a92931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35cf19f38a5aef8657b53f15b2df69c3a7080491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35cf19f38a5aef8657b53f15b2df69c3a7080491", "html_url": "https://github.com/rust-lang/rust/commit/35cf19f38a5aef8657b53f15b2df69c3a7080491", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35cf19f38a5aef8657b53f15b2df69c3a7080491/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "523c1877d98c5e0796f745c84328b2fa2864639a", "url": "https://api.github.com/repos/rust-lang/rust/commits/523c1877d98c5e0796f745c84328b2fa2864639a", "html_url": "https://github.com/rust-lang/rust/commit/523c1877d98c5e0796f745c84328b2fa2864639a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d2d33610f2841198617dae5f44b525c36d6d450f", "filename": "src/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35cf19f38a5aef8657b53f15b2df69c3a7080491/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35cf19f38a5aef8657b53f15b2df69c3a7080491/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=35cf19f38a5aef8657b53f15b2df69c3a7080491", "patch": "@@ -1367,7 +1367,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         if let Lvalue::Local { frame, local, field } = lvalue {\n             let mut allocs = Vec::new();\n             let mut msg = format!(\"{:?}\", local);\n-            if let Some(field) = field {\n+            if let Some((field, _)) = field {\n                 write!(msg, \".{}\", field).unwrap();\n             }\n             let last_frame = self.stack.len() - 1;"}]}