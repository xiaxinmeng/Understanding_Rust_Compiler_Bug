{"sha": "a4dd463eaf548de04c55296c8ed31516fe5c5983", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZGQ0NjNlYWY1NDhkZTA0YzU1Mjk2YzhlZDMxNTE2ZmU1YzU5ODM=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-23T17:27:38Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-23T17:27:38Z"}, "message": "Keep MiriCommand out of ask_to_run function", "tree": {"sha": "9bf9faec420340dc9446857c325aaa3b5b41a7fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bf9faec420340dc9446857c325aaa3b5b41a7fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4dd463eaf548de04c55296c8ed31516fe5c5983", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl6h0AoACgkQ+boUO5X/\nbYLAXw/8C+WSfMLIdh6NKhzggLodavgAs5dX0yMa7dzdwYNBsdUK+v0V1f6zmY4b\nBoWKd61lFLP+i6BfGP/SbpJL4Ea93Ewn0VzthStDhuWSXEp/Y/blz+piSOefBu6W\nPOai/kAaeMw0ApE/6TcPAgGI/G7jljgZO0RcMSsM5F234LAHOe2oPdjPH1BIYuw6\n9FHSF/h/PI5H4y2ytHO+07lT0xeRW5OyoxWSJM7sddbEQDMPOdaBbgKWoSwM8htm\ngI1bvwOux/ZR6OzMIUJ5LnhnvkfFDugosN6DlpTXJVUrNJo/IjFbffXRgpDVohYG\nLE6Hj5rRlWRNb7X7j7vX78qFSG3OxFhxtOutjaa7D+xtSRXtJtawNR6hkqxanylC\ni5a7EGPsRkpzMdrjePLW+SPCGCamYlrt6niEcDFE4OrULGJZVvGIK3rmhqYc1xhI\niiFvPVmcm3c+U6yNAmty57MUsf+fOW5+Xs6Ryso7utNcGRh6xG0akp9Yze0nSN8F\n71MHGIMi6ivfsqRnEiAcKmlzKXTl2y9QB6JkexBNq44/vYh2GcUWa649oul/7kQ/\n69PJXJ7nKXU052kbyX1zupfTLX/Ki0cKLBb1dc5/0sGiyyfHCdxXsTXBNvBouJZD\nOQNA0dIWdt8aiEkg1qa5sN8nqeVam7aV7J/diwJ6/oBpWZWCJLY=\n=GQpR\n-----END PGP SIGNATURE-----", "payload": "tree 9bf9faec420340dc9446857c325aaa3b5b41a7fb\nparent 2584507ce2eb9a7fc4c00213d216fc57c794e141\nauthor David Tolnay <dtolnay@gmail.com> 1587662858 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1587662858 -0700\n\nKeep MiriCommand out of ask_to_run function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4dd463eaf548de04c55296c8ed31516fe5c5983", "html_url": "https://github.com/rust-lang/rust/commit/a4dd463eaf548de04c55296c8ed31516fe5c5983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4dd463eaf548de04c55296c8ed31516fe5c5983/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2584507ce2eb9a7fc4c00213d216fc57c794e141", "url": "https://api.github.com/repos/rust-lang/rust/commits/2584507ce2eb9a7fc4c00213d216fc57c794e141", "html_url": "https://github.com/rust-lang/rust/commit/2584507ce2eb9a7fc4c00213d216fc57c794e141"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "17d7ecf8c8708ff7a15f01fff77769974f14b6a9", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a4dd463eaf548de04c55296c8ed31516fe5c5983/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4dd463eaf548de04c55296c8ed31516fe5c5983/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=a4dd463eaf548de04c55296c8ed31516fe5c5983", "patch": "@@ -247,10 +247,9 @@ fn xargo_version() -> Option<(u32, u32, u32)> {\n     Some((major, minor, patch))\n }\n \n-fn ask_to_run(mut cmd: Command, subcommand: MiriCommand, text: &str) {\n+fn ask_to_run(mut cmd: Command, ask: bool, text: &str) {\n     // Disable interactive prompts in CI (GitHub Actions, Travis, AppVeyor, etc).\n-    let ask = subcommand != MiriCommand::Setup && env::var_os(\"CI\").is_none();\n-    if ask {\n+    if ask && env::var_os(\"CI\").is_none() {\n         let mut buf = String::new();\n         print!(\"I will run `{:?}` to {}. Proceed? [Y/n] \", cmd, text);\n         io::stdout().flush().unwrap();\n@@ -281,6 +280,10 @@ fn setup(subcommand: MiriCommand) {\n         return;\n     }\n \n+    // Subcommands other than `setup` will do a setup if necessary, but\n+    // interactively confirm first.\n+    let ask_user = subcommand != MiriCommand::Setup;\n+\n     // First, we need xargo.\n     if xargo_version().map_or(true, |v| v < XARGO_MIN_VERSION) {\n         if std::env::var(\"XARGO_CHECK\").is_ok() {\n@@ -289,7 +292,7 @@ fn setup(subcommand: MiriCommand) {\n         }\n         let mut cmd = cargo();\n         cmd.args(&[\"install\", \"xargo\", \"-f\"]);\n-        ask_to_run(cmd, subcommand, \"install a recent enough xargo\");\n+        ask_to_run(cmd, ask_user, \"install a recent enough xargo\");\n     }\n \n     // Determine where the rust sources are located.  `XARGO_RUST_SRC` env var trumps everything.\n@@ -312,7 +315,7 @@ fn setup(subcommand: MiriCommand) {\n                 cmd.args(&[\"component\", \"add\", \"rust-src\"]);\n                 ask_to_run(\n                     cmd,\n-                    subcommand,\n+                    ask_user,\n                     \"install the rustc-src component for the selected toolchain\",\n                 );\n             }"}]}