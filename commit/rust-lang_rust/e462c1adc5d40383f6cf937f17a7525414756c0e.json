{"sha": "e462c1adc5d40383f6cf937f17a7525414756c0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NjJjMWFkYzVkNDAzODNmNmNmOTM3ZjE3YTc1MjU0MTQ3NTZjMGU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-08-31T13:02:01Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-06T11:00:26Z"}, "message": "Add `#![allow(..)]` for a slew of lints of migrated run-pass tests, to silence stderr output.", "tree": {"sha": "d977ddeb44c81d3969458353e8be29775252d1de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d977ddeb44c81d3969458353e8be29775252d1de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e462c1adc5d40383f6cf937f17a7525414756c0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e462c1adc5d40383f6cf937f17a7525414756c0e", "html_url": "https://github.com/rust-lang/rust/commit/e462c1adc5d40383f6cf937f17a7525414756c0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e462c1adc5d40383f6cf937f17a7525414756c0e/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90241dfba3fdbbaf417911675f06aebbd5f40986", "url": "https://api.github.com/repos/rust-lang/rust/commits/90241dfba3fdbbaf417911675f06aebbd5f40986", "html_url": "https://github.com/rust-lang/rust/commit/90241dfba3fdbbaf417911675f06aebbd5f40986"}], "stats": {"total": 536, "additions": 516, "deletions": 20}, "files": [{"sha": "c026a47c4f9ec03fb923fccfde61d69451fa3775", "filename": "src/test/ui/run-pass/array-slice-vec/array_const_index-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Farray_const_index-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Farray_const_index-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Farray_const_index-1.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n \n #![feature(const_indexing)]\n "}, {"sha": "7f54801910b73d0f5ec8ea1c624338f348080396", "filename": "src/test/ui/run-pass/array-slice-vec/evec-slice.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fevec-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fevec-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fevec-slice.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,8 +10,6 @@\n \n // run-pass\n \n-#![allow(dead_assignment)]\n-\n pub fn main() {\n     let x : &[isize] = &[1,2,3,4,5];\n     let mut z : &[isize] = &[1,2,3,4,5];"}, {"sha": "76302b92ed0349f109549c1f0fe2f8ce8014e5dc", "filename": "src/test/ui/run-pass/array-slice-vec/rcvr-borrowed-to-slice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Frcvr-borrowed-to-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Frcvr-borrowed-to-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Frcvr-borrowed-to-slice.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n \n+#![allow(non_camel_case_types)]\n \n trait sum {\n     fn sum_(self) -> isize;"}, {"sha": "671246f6a63a2f6078ea34849d49ce772e62fdc4", "filename": "src/test/ui/run-pass/array-slice-vec/slice-of-zero-size-elements.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fslice-of-zero-size-elements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fslice-of-zero-size-elements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fslice-of-zero-size-elements.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n \n // compile-flags: -C debug-assertions\n "}, {"sha": "189d5a38ae3cac9584234de0aafafbbd48c43a1b", "filename": "src/test/ui/run-pass/array-slice-vec/vec-slice-drop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fvec-slice-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fvec-slice-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Farray-slice-vec%2Fvec-slice-drop.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,8 @@\n \n // run-pass\n \n+#![allow(non_camel_case_types)]\n+\n use std::cell::Cell;\n \n // Make sure that destructors get run on slice literals"}, {"sha": "8116a311eb458a5695819f1ad53418e5ced29ca0", "filename": "src/test/ui/run-pass/autoref-autoderef/autoderef-method-on-trait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-on-trait.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n trait double {"}, {"sha": "2b14839500397781d2d9912b6e43045ed0be569f", "filename": "src/test/ui/run-pass/autoref-autoderef/autoderef-method-priority.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-priority.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-priority.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-priority.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n trait double {"}, {"sha": "14c57b075195ae2666c3ad62955d989fbdbffb35", "filename": "src/test/ui/run-pass/autoref-autoderef/autoderef-method-twice-but-not-thrice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-twice-but-not-thrice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-twice-but-not-thrice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-twice-but-not-thrice.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n trait double {"}, {"sha": "5185d0ee749a4b266df04821cd08ff36bf39fe5b", "filename": "src/test/ui/run-pass/autoref-autoderef/autoderef-method-twice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method-twice.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n trait double {"}, {"sha": "398ccde889483ca79f9cf24237df003ab3de76b7", "filename": "src/test/ui/run-pass/autoref-autoderef/autoderef-method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fautoref-autoderef%2Fautoderef-method.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n trait double {"}, {"sha": "24f037742708d3614033efbea2ce52222f8e4f3e", "filename": "src/test/ui/run-pass/binding/bind-field-short-with-modifiers.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fbind-field-short-with-modifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fbind-field-short-with-modifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fbind-field-short-with-modifiers.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n \n pub fn main() {\n     struct Foo { x: isize, y: isize }"}, {"sha": "11c907b9b2da109552c6d470656bd5186a4b471d", "filename": "src/test/ui/run-pass/binding/expr-match-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fexpr-match-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fexpr-match-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fexpr-match-generic.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-pass\n-\n+#![allow(non_camel_case_types)]\n \n type compare<T> = extern \"Rust\" fn(T, T) -> bool;\n "}, {"sha": "c0e68f99ad0e70fb5fd147fef2aa5eba7a698704", "filename": "src/test/ui/run-pass/binding/fat-arrow-match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Ffat-arrow-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Ffat-arrow-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Ffat-arrow-match.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n enum color {\n     red,"}, {"sha": "0871ff836cca55a7ffb8946705b743955491b4b8", "filename": "src/test/ui/run-pass/binding/match-borrowed_str.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-borrowed_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-borrowed_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-borrowed_str.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,8 +10,6 @@\n \n // run-pass\n \n-#![allow(unnecessary_allocation)]\n-\n fn f1(ref_string: &str) -> String {\n     match ref_string {\n         \"a\" => \"found a\".to_string(),"}, {"sha": "68edbea34717255c75248845fd0b3cd1fff6f748", "filename": "src/test/ui/run-pass/binding/match-implicit-copy-unique.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-implicit-copy-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-implicit-copy-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-implicit-copy-unique.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n #![feature(box_syntax)]\n \n struct Pair { a: Box<isize>, b: Box<isize> }"}, {"sha": "06d7095a9248f006bd94f0658a13c4b8277a3f18", "filename": "src/test/ui/run-pass/binding/match-path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-path.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n // pretty-expanded FIXME #23616"}, {"sha": "2486fa782e0f9dcd01d70b18578bb861f644b38e", "filename": "src/test/ui/run-pass/binding/match-pattern-no-type-params.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-pattern-no-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-pattern-no-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-pattern-no-type-params.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n enum maybe<T> { nothing, just(T), }\n \n fn foo(x: maybe<isize>) {"}, {"sha": "06a011c0fa277df43b2ba7174faa4c036754ad3d", "filename": "src/test/ui/run-pass/binding/match-phi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-phi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-phi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-phi.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,8 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n-\n-#![allow(dead_assignment)]\n+#![allow(non_camel_case_types)]\n #![allow(unused_variables)]\n \n enum thing { a, b, c, }"}, {"sha": "5be8db5fc86baa5e36120fa11d55104722483d4a", "filename": "src/test/ui/run-pass/binding/match-range-static.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-range-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-range-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-range-static.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_upper_case_globals)]\n \n const s: isize = 1;\n const e: isize = 42;"}, {"sha": "c1f09502542ab44d0575a6c5f8a3b671e8ca43d0", "filename": "src/test/ui/run-pass/binding/match-ref-binding-mut.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-ref-binding-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-ref-binding-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-ref-binding-mut.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n \n struct Rec {\n     f: isize"}, {"sha": "0722a6f0b32ef380d0da0774e4bfcde11cc4f081", "filename": "src/test/ui/run-pass/binding/match-str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-str.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // Issue #53\n+#![allow(non_camel_case_types)]\n \n \n pub fn main() {"}, {"sha": "aeeb7dd4bc9eda33e49c3bdeb283d6a4fca80055", "filename": "src/test/ui/run-pass/binding/match-tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmatch-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-pass\n-\n+#![allow(non_camel_case_types)]\n \n \n "}, {"sha": "1e28b77f2ce0fb8266927fd04920557e95497ab2", "filename": "src/test/ui/run-pass/binding/mut-in-ident-patterns.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmut-in-ident-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmut-in-ident-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fmut-in-ident-patterns.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_shorthand_field_patterns)]\n \n trait Foo {\n     fn foo(&self, mut x: isize) -> isize {"}, {"sha": "5bf558a4871297e6a6fdddaa6e38617b1c2d8cab", "filename": "src/test/ui/run-pass/binding/nested-pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fnested-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fnested-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fnested-pattern.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-pass\n-\n+#![allow(non_camel_case_types)]\n \n // a bug was causing this to complain about leaked memory on exit\n "}, {"sha": "892464dd1dbf99af2e054b2e3ad6ae3c502283f9", "filename": "src/test/ui/run-pass/binding/nullary-or-pattern.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fnullary-or-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fnullary-or-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fnullary-or-pattern.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n enum blah { a, b, }\n "}, {"sha": "90ef3c2b7eafda5158349be24cbf72b5a7e77015", "filename": "src/test/ui/run-pass/binding/optional_comma_in_match_arm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Foptional_comma_in_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Foptional_comma_in_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Foptional_comma_in_match_arm.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // ignore-pretty issue #37199\n+#![allow(while_true)]\n \n fn main() {\n     let x = 1;"}, {"sha": "a9b3e27865246a3e4a4bdb2db5636d695a19fc84", "filename": "src/test/ui/run-pass/binding/or-pattern.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2For-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2For-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2For-pattern.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n enum blah { a(isize, isize, usize), b(isize, isize), c, }\n "}, {"sha": "9a5a420a80ba0b54708ea53fee883c744e060f70", "filename": "src/test/ui/run-pass/binding/pattern-in-closure.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fpattern-in-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fpattern-in-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fpattern-in-closure.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n+\n struct Foo {\n     x: isize,\n     y: isize"}, {"sha": "13c16790e09b460291772466a4a1836ccf60e815", "filename": "src/test/ui/run-pass/binding/simple-generic-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fsimple-generic-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fsimple-generic-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fsimple-generic-match.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-pass\n-\n+#![allow(non_camel_case_types)]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "1fc597b636ecfbfcdb9f6defbc5addf1c74af553", "filename": "src/test/ui/run-pass/binding/use-uninit-match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fuse-uninit-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fuse-uninit-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fuse-uninit-match.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n fn foo<T>(o: myoption<T>) -> isize {"}, {"sha": "8eb44fd76e1d28b118e151c4d9eca9bf06a9967c", "filename": "src/test/ui/run-pass/binding/use-uninit-match2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fuse-uninit-match2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fuse-uninit-match2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fbinding%2Fuse-uninit-match2.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n fn foo<T>(o: myoption<T>) -> isize {"}, {"sha": "203624624845b81d929cff276bfbc79fc23bd084", "filename": "src/test/ui/run-pass/cfg/conditional-compile.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fcfg%2Fconditional-compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fcfg%2Fconditional-compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fcfg%2Fconditional-compile.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,10 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+#![allow(non_camel_case_types)]\n+#![allow(improper_ctypes)]\n+\n // Crate use statements\n \n #[cfg(bogus)]"}, {"sha": "de7cb7664b646c29c9c189ecfed48809f456e50a", "filename": "src/test/ui/run-pass/coherence/coherence-impl-in-fn.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fcoherence%2Fcoherence-impl-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fcoherence%2Fcoherence-impl-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fcoherence%2Fcoherence-impl-in-fn.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n pub fn main() {\n     #[derive(Copy, Clone)]\n     enum x { foo }"}, {"sha": "10875d5046ca68be37ac9303520f1037ea07998c", "filename": "src/test/ui/run-pass/consts/const-adt-align-mismatch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-adt-align-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-adt-align-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-adt-align-mismatch.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n+\n use std::mem;\n \n #[derive(PartialEq, Debug)]"}, {"sha": "f12a73f0ea61195215956ca04a3a14904ce19380", "filename": "src/test/ui/run-pass/consts/const-cast-ptr-int.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cast-ptr-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cast-ptr-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cast-ptr-int.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n use std::ptr;\n "}, {"sha": "100034ccc3006591f5df6cb524e2859dbdb2361e", "filename": "src/test/ui/run-pass/consts/const-cast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cast.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n struct TestStruct {\n     x: *const u8,\n }"}, {"sha": "160d10d3b1141e1bb4b866444e9364580f1b3d6e", "filename": "src/test/ui/run-pass/consts/const-const.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-const.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n const a: isize = 1;\n const b: isize = a + 2;"}, {"sha": "3d99af9ee6600497bacdfa9623b9bd034f4c829c", "filename": "src/test/ui/run-pass/consts/const-contents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-contents.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n // Issue #570\n-\n+#![allow(non_upper_case_globals)]\n \n static lsl : isize = 1 << 2;\n static add : isize = 1 + 2;"}, {"sha": "3e8eb9a422d1278f0339546ebed239b876160fad", "filename": "src/test/ui/run-pass/consts/const-cross-crate-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cross-crate-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cross-crate-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cross-crate-const.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n // aux-build:cci_const.rs\n-\n+#![allow(non_upper_case_globals)]\n \n extern crate cci_const;\n static foo: &'static str = cci_const::foopy;"}, {"sha": "504b872782bac9081bff5c1af7f95f138b45a4ee", "filename": "src/test/ui/run-pass/consts/const-cross-crate-extern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cross-crate-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cross-crate-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-cross-crate-extern.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n // aux-build:cci_const.rs\n-\n+#![allow(non_upper_case_globals)]\n \n extern crate cci_const;\n use cci_const::bar;"}, {"sha": "39602153c7928497321deaf4e145e7a29569a563", "filename": "src/test/ui/run-pass/consts/const-enum-cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-enum-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-enum-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-enum-cast.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n enum A { A1, A2 }\n enum B { B1=0, B2=2 }"}, {"sha": "e7e11e7408623d8e9749e6bbb55075fe04ede1e3", "filename": "src/test/ui/run-pass/consts/const-extern-function.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-extern-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-extern-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-extern-function.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n extern fn foopy() {}\n "}, {"sha": "c0ba4404f00a1220da4884b78effb44435dbb881", "filename": "src/test/ui/run-pass/consts/const-fields-and-indexing.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fields-and-indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fields-and-indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fields-and-indexing.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n const x : [isize; 4] = [1,2,3,4];\n static p : isize = x[2];\n const y : &'static [isize] = &[1,2,3,4];"}, {"sha": "a0f3e5d57d405fadf93fba0c558d45d5a4fcbcb6", "filename": "src/test/ui/run-pass/consts/const-fn-val.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fn-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fn-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-fn-val.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n fn foo() -> isize {\n     return 0xca7f000d;"}, {"sha": "048aa1f4e7a8c14c7daa11aac58035577bd99cd1", "filename": "src/test/ui/run-pass/consts/const-negation.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-negation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-negation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-negation.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n+\n #[deny(const_err)]\n \n fn main() {"}, {"sha": "9b3c846deac01fc1119dcf2237edc069e13b61ca", "filename": "src/test/ui/run-pass/consts/const-negative.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-negative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-negative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-negative.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n // Issue #358\n-\n+#![allow(non_upper_case_globals)]\n \n static toplevel_mod: isize = -1;\n "}, {"sha": "15f74d23b6dbf7746bedbe87ba4fb977e6ab2c9e", "filename": "src/test/ui/run-pass/consts/const-rec-and-tup.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-rec-and-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-rec-and-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-rec-and-tup.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+#![allow(overflowing_literals)]\n+\n struct Pair { a: f64, b: f64 }\n \n struct AnotherPair { x: (i64, i64), y: Pair }"}, {"sha": "fdbebc479900e48a33582ec11cda5e1b3f296599", "filename": "src/test/ui/run-pass/consts/const-region-ptrs-noncopy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-region-ptrs-noncopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-region-ptrs-noncopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-region-ptrs-noncopy.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n type Big = [u64; 8];\n struct Pair<'a> { a: isize, b: &'a Big }"}, {"sha": "00f987c745cdb04fb19c9fa6c470d8904113671e", "filename": "src/test/ui/run-pass/consts/const-region-ptrs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-region-ptrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-region-ptrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-region-ptrs.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n struct Pair<'a> { a: isize, b: &'a isize }\n \n const x: &'static isize = &10;"}, {"sha": "ec77b59e09d02c1b17d7408ad7f2fc8402f09e2b", "filename": "src/test/ui/run-pass/consts/const-struct-offsets.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-struct-offsets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-struct-offsets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-struct-offsets.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_upper_case_globals)]\n \n enum Foo {\n     IntVal(i32),"}, {"sha": "0554356ab8ea4f374c7aee9260397ec9410a32b3", "filename": "src/test/ui/run-pass/consts/const-struct.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-struct.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n+\n use std::cmp;\n \n #[derive(Debug)]"}, {"sha": "79387b5195ba2982ae932b7ae4c4c59290d41889", "filename": "src/test/ui/run-pass/consts/const-vec-of-fns.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-vec-of-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-vec-of-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-vec-of-fns.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_upper_case_globals)]\n \n /*!\n  * Try to double-check that static fns have the right size (with or"}, {"sha": "85d227b2d6e827802cfdc86ffce1a26515ca141f", "filename": "src/test/ui/run-pass/consts/const-vecs-and-slices.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-vecs-and-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-vecs-and-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst-vecs-and-slices.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n static x : [isize; 4] = [1,2,3,4];\n static y : &'static [isize] = &[1,2,3,4];\n static z : &'static [isize; 4] = &[1,2,3,4];"}, {"sha": "7fc5ecb5bd72bcebfeaf510ee86878e3b2791759", "filename": "src/test/ui/run-pass/consts/const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fconsts%2Fconst.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-pass\n-\n+#![allow(non_upper_case_globals)]\n \n static i: isize = 10;\n "}, {"sha": "65ce4244f569d8387672674045908059a25a8912", "filename": "src/test/ui/run-pass/cross-crate/xcrate-unit-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fcross-crate%2Fxcrate-unit-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fcross-crate%2Fxcrate-unit-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fcross-crate%2Fxcrate-unit-struct.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -11,6 +11,7 @@\n // run-pass\n // aux-build:xcrate_unit_struct.rs\n // pretty-expanded FIXME #23616\n+#![allow(non_upper_case_globals)]\n \n extern crate xcrate_unit_struct;\n "}, {"sha": "e304f481baa600edac29b8b606aa0e6c54f1eb34", "filename": "src/test/ui/run-pass/deriving/deriving-enum-single-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-enum-single-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-enum-single-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-enum-single-variant.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_camel_case_types)]\n \n pub type task_id = isize;\n "}, {"sha": "906647a1f4724be36758cfbcbb5fcf04e2b82866", "filename": "src/test/ui/run-pass/deriving/deriving-hash.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-hash.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,10 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n+#![allow(non_camel_case_types)]\n+#![allow(non_snake_case)]\n+\n use std::hash::{Hash, SipHasher, Hasher};\n use std::mem::size_of;\n "}, {"sha": "dc6fda84f1d48f461b8af291129863bdd614294a", "filename": "src/test/ui/run-pass/deriving/deriving-in-macro.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-in-macro.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_camel_case_types)]\n \n macro_rules! define_vec {\n     () => ("}, {"sha": "33f98a74b142265d7756aa96a7d3e36f21a9c1fb", "filename": "src/test/ui/run-pass/deriving/deriving-meta-multiple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-meta-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-meta-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-meta-multiple.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(deprecated)]\n \n use std::hash::{Hash, SipHasher};\n "}, {"sha": "309cd5aed1db89cb6998be2b359be6f8eeac5f28", "filename": "src/test/ui/run-pass/deriving/deriving-meta.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-meta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-meta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fderiving%2Fderiving-meta.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(deprecated)]\n \n use std::hash::{Hash, SipHasher};\n "}, {"sha": "9ddf399ed7a8c72a3c84298af62d50d86320396d", "filename": "src/test/ui/run-pass/drop/drop-on-empty-block-exit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdrop%2Fdrop-on-empty-block-exit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdrop%2Fdrop-on-empty-block-exit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fdrop%2Fdrop-on-empty-block-exit.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_camel_case_types)]\n \n #![feature(box_syntax)]\n "}, {"sha": "97ec423643c1f5a13ea395c1d39fc32b96baba61", "filename": "src/test/ui/run-pass/drop/drop-struct-as-object.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdrop%2Fdrop-struct-as-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdrop%2Fdrop-struct-as-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fdrop%2Fdrop-struct-as-object.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // Test that destructor on a struct runs successfully after the struct\n // is boxed and converted to an object.\n "}, {"sha": "fb7b2bc8bf7f977b60ef03c6be34b810a3e39468", "filename": "src/test/ui/run-pass/dynamically-sized-types/dst-coerce-rc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-coerce-rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-coerce-rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-coerce-rc.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n // Test a very simple custom DST coercion.\n \n #![feature(core, rc_weak)]"}, {"sha": "4083f0e2b09bf01f671da17ff70c384d88735d8b", "filename": "src/test/ui/run-pass/dynamically-sized-types/dst-trait-tuple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-trait-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-trait-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-trait-tuple.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(type_alias_bounds)]\n \n #![allow(unused_features)]\n #![feature(box_syntax)]"}, {"sha": "43a1bacec31ccf23fdea8c40a010cec3fad7fe56", "filename": "src/test/ui/run-pass/dynamically-sized-types/dst-tuple-sole.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-tuple-sole.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-tuple-sole.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-tuple-sole.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+#![allow(type_alias_bounds)]\n+\n // As dst-tuple.rs, but the unsized field is the only field in the tuple.\n \n "}, {"sha": "753203d250d9d1c730a811fbdc16ec886f9ba407", "filename": "src/test/ui/run-pass/dynamically-sized-types/dst-tuple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fdynamically-sized-types%2Fdst-tuple.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(type_alias_bounds)]\n \n #![feature(box_syntax)]\n #![feature(unsized_tuple_coercion)]"}, {"sha": "451b87f575ac8b00d4c281e65107659b557e5ea4", "filename": "src/test/ui/run-pass/extern/extern-compare-with-return-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fextern%2Fextern-compare-with-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fextern%2Fextern-compare-with-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fextern%2Fextern-compare-with-return-type.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n // Tests that we can compare various kinds of extern fn signatures.\n-\n+#![allow(non_camel_case_types)]\n \n extern fn voidret1() {}\n extern fn voidret2() {}"}, {"sha": "8c6c89943986548e13ae4ed9e6e3e8cebcf50820", "filename": "src/test/ui/run-pass/for-loop-while/while-prelude-drop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffor-loop-while%2Fwhile-prelude-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffor-loop-while%2Fwhile-prelude-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ffor-loop-while%2Fwhile-prelude-drop.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n use std::string::String;\n \n #[derive(PartialEq)]"}, {"sha": "5845af6b60d4021d7eb585c1164a07930388dfb7", "filename": "src/test/ui/run-pass/functions-closures/fn-coerce-field.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Ffn-coerce-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Ffn-coerce-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Ffn-coerce-field.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_camel_case_types)]\n \n struct r<F> where F: FnOnce() {\n     field: F,"}, {"sha": "0b8604f66f9b23419d243dff3355f99210e96cea", "filename": "src/test/ui/run-pass/functions-closures/parallel-codegen-closures.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Fparallel-codegen-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Fparallel-codegen-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Fparallel-codegen-closures.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // Tests parallel codegen - this can fail if the symbol for the anonymous\n // closure in `sum` pollutes the second codegen unit from the first.\n "}, {"sha": "c66bdb5fa8b06912292b0a3730578d3e1e62164f", "filename": "src/test/ui/run-pass/functions-closures/return-from-closure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Freturn-from-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Freturn-from-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ffunctions-closures%2Freturn-from-closure.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n // just to make sure that `return` is only returning from the closure,\n // not the surrounding function.\n "}, {"sha": "555f5297dde9a5a18884663507fad2a05d58f1a7", "filename": "src/test/ui/run-pass/generics/generic-ivec-leak.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-ivec-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-ivec-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-ivec-leak.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n enum wrapper<T> { wrapped(T), }\n \n pub fn main() { let _w = wrapper::wrapped(vec![1, 2, 3, 4, 5]); }"}, {"sha": "3830177f0ada4918db7d86c79fb44ebdac23c8b4", "filename": "src/test/ui/run-pass/generics/generic-recursive-tag.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-recursive-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-recursive-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-recursive-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n enum list<T> { cons(Box<T>, Box<list<T>>), nil, }"}, {"sha": "2fe903866c23180b72020a71aaa3c17f5ea65930", "filename": "src/test/ui/run-pass/generics/generic-static-methods.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-static-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-static-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-static-methods.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n trait vec_utils<T> {"}, {"sha": "6f02be5d1065adf848f7641d0a9f8168a2c46e19", "filename": "src/test/ui/run-pass/generics/generic-tag-corruption.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-corruption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-corruption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-corruption.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-pass\n-\n+#![allow(non_camel_case_types)]\n \n \n // This used to cause memory corruption in stage 0."}, {"sha": "a0429693fd9a5bc1ee63a7f60cec01fe4e95a3c7", "filename": "src/test/ui/run-pass/generics/generic-tag-local.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-local.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // run-pass\n-\n+#![allow(non_camel_case_types)]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "7f0bfe8ba3148f7a4de2beb395dc43e69f33ce10", "filename": "src/test/ui/run-pass/generics/generic-tag-match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-match.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n enum foo<T> { arm(T), }\n "}, {"sha": "66a1268e2f8bc24bd00f8f7e2147e9f1dbdfd2ca", "filename": "src/test/ui/run-pass/generics/generic-tag-values.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag-values.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n enum noption<T> { some(T), }\n \n struct Pair { x: isize, y: isize }"}, {"sha": "54a006a163e5a37697140dbca1d7f24ac3379bf2", "filename": "src/test/ui/run-pass/generics/generic-tag.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fgenerics%2Fgeneric-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n #![allow(unused_variables)]"}, {"sha": "5b04daeb33202ba855619a8b7d9da1913a930310", "filename": "src/test/ui/run-pass/intrinsics/intrinsic-move-val-cleanups.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fintrinsics%2Fintrinsic-move-val-cleanups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fintrinsics%2Fintrinsic-move-val-cleanups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fintrinsics%2Fintrinsic-move-val-cleanups.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // ignore-emscripten no threads support\n+#![allow(stable_features)]\n \n // This test is checking that the move_val_init intrinsic is\n // respecting cleanups for both of its argument expressions."}, {"sha": "6504cca474f1be1713e83fe78a58772a07ad8dc9", "filename": "src/test/ui/run-pass/issues/issue-10734.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-10734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-10734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-10734.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n static mut drop_count: usize = 0;\n \n struct Foo {"}, {"sha": "eaaa2364f681fcc33d75a23b2b5e538758db55b5", "filename": "src/test/ui/run-pass/issues/issue-12699.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-12699.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-12699.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-12699.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // ignore-wasm32-bare can't block the thread\n+#![allow(deprecated)]\n \n use std::thread;\n "}, {"sha": "db6b80ad22527231bd1ed6d549cbb9d56803f738", "filename": "src/test/ui/run-pass/issues/issue-13264.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-13264.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-13264.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-13264.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_snake_case)]\n+\n use std::ops::Deref;\n \n struct Root {"}, {"sha": "87413be05e57c0175f50ffe388f7dd87469b6a9c", "filename": "src/test/ui/run-pass/issues/issue-13902.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-13902.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-13902.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-13902.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n const JSVAL_TAG_CLEAR: u32 = 0xFFFFFF80;\n const JSVAL_TYPE_INT32: u8 = 0x01;\n const JSVAL_TYPE_UNDEFINED: u8 = 0x02;"}, {"sha": "8920134bcbbfae981119e83f4cb7449c7f735b54", "filename": "src/test/ui/run-pass/issues/issue-14421.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-14421.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-14421.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-14421.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // aux-build:issue-14421.rs\n \n // pretty-expanded FIXME #23616"}, {"sha": "dd1d74779d5652c7019b3d1bc37cd34243213221", "filename": "src/test/ui/run-pass/issues/issue-14422.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-14422.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-14422.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-14422.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // aux-build:issue-14422.rs\n \n // pretty-expanded FIXME #23616"}, {"sha": "fb344c3b4b781dcb995322b5c39dbbecb60b6225", "filename": "src/test/ui/run-pass/issues/issue-1451.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1451.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1451.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1451.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n-\n+#![allow(non_snake_case)]\n #![allow(unused_variables)]\n \n struct T { f: extern \"Rust\" fn() }"}, {"sha": "b715a388d105fe2805a1db11b868205bcdbd30ae", "filename": "src/test/ui/run-pass/issues/issue-15261.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-15261.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-15261.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-15261.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // pretty-expanded FIXME #23616\n \n static mut n_mut: usize = 0;"}, {"sha": "c706606cf6abbfd1a87d6740ba4e3cadd8ae9a36", "filename": "src/test/ui/run-pass/issues/issue-15673.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-15673.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-15673.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-15673.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n #![feature(iter_arith)]\n \n fn main() {"}, {"sha": "7c2f4d99e6ae4593a13a484a7e736d67f3da418b", "filename": "src/test/ui/run-pass/issues/issue-16492.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-16492.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-16492.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-16492.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n use std::rc::Rc;\n use std::cell::Cell;\n "}, {"sha": "f32057e5e44f3ce98e400c2ae9e2b86fbf7d7c54", "filename": "src/test/ui/run-pass/issues/issue-16530.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-16530.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-16530.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-16530.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n+\n use std::hash::{SipHasher, Hasher, Hash};\n \n #[derive(Hash)]"}, {"sha": "61b380bf69585c745df54cc16b3bf2570376bfd8", "filename": "src/test/ui/run-pass/issues/issue-1660.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1660.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1660.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1660.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // pretty-expanded FIXME #23616\n \n pub fn main() {"}, {"sha": "433fd4c1af3f6bbaa1bb44486a1b7a9604f26119", "filename": "src/test/ui/run-pass/issues/issue-1701.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1701.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1701.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1701.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n enum pattern { tabby, tortoiseshell, calico }\n enum breed { beagle, rottweiler, pug }"}, {"sha": "8c3f6b9358887ad34821e0f91d54f0cc61476897", "filename": "src/test/ui/run-pass/issues/issue-17756.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-17756.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-17756.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-17756.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n const count : usize = 2 as usize;\n fn main() {\n     let larger : [usize; count*2];"}, {"sha": "27c225a1916a08d08c90f7a9c55e3fedb66383c2", "filename": "src/test/ui/run-pass/issues/issue-1821.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1821.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1821.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1821.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Issue #1821 - Don't recurse trying to typecheck this\n \n "}, {"sha": "cf4a0ddea98759c8f96077b5fe0142486a20a67c", "filename": "src/test/ui/run-pass/issues/issue-1866.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1866.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1866.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-1866.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n mod a {"}, {"sha": "46d11b9d9b7d7d6edc62b147417b80f0759045ed", "filename": "src/test/ui/run-pass/issues/issue-20091.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20091.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n "}, {"sha": "b03c489e25211495a189b39f20afbd9f30b4cc72", "filename": "src/test/ui/run-pass/issues/issue-20427.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20427.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20427.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20427.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+#![allow(non_camel_case_types)]\n+\n // aux-build:i8.rs\n // ignore-pretty issue #37201\n "}, {"sha": "728e2be3d23bf98c98efccf31f757d7c3e4322b1", "filename": "src/test/ui/run-pass/issues/issue-20644.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20644.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20644.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-20644.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // A reduced version of the rustbook ice. The problem this encountered\n // had to do with codegen ignoring binders.\n "}, {"sha": "6b876df9d04b5f488f9c7ed3a8ae838776d578c3", "filename": "src/test/ui/run-pass/issues/issue-21562.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21562.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n extern crate core;\n use core::marker::Sync;\n "}, {"sha": "8c914ac5adc626da8368746e9bee7783da702671", "filename": "src/test/ui/run-pass/issues/issue-21634.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21634.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21634.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21634.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n #![feature(cfg_target_feature)]\n \n #[cfg(any(not(target_arch = \"x86\"), target_feature = \"sse2\"))]"}, {"sha": "1e577ba7303df57ca9128f270a23ba9e36467060", "filename": "src/test/ui/run-pass/issues/issue-21891.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21891.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21891.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-21891.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // pretty-expanded FIXME #23616\n \n static foo: [usize; 3] = [1, 2, 3];"}, {"sha": "2d7a7382f0b41c1fa38807f9394231caffa07369", "filename": "src/test/ui/run-pass/issues/issue-2190-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2190-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2190-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2190-1.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // pretty-expanded FIXME #23616\n // ignore-emscripten no threads\n "}, {"sha": "6e62ae069829e2f0382fb61b013dce3d4c236686", "filename": "src/test/ui/run-pass/issues/issue-22356.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-22356.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-22356.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-22356.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(type_alias_bounds)]\n+\n // pretty-expanded FIXME #23616\n \n use std::marker::PhantomData;"}, {"sha": "87b4bc1734b5e18a33564b3f0ca69f14dd19b021", "filename": "src/test/ui/run-pass/issues/issue-22471.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-22471.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-22471.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-22471.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(type_alias_bounds)]\n+\n type Foo<T> where T: Copy = Box<T>;\n \n fn main(){}"}, {"sha": "6185aaca6cffed55d9653a59a22d970fc9828c71", "filename": "src/test/ui/run-pass/issues/issue-2288.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2288.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2288.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2288.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #![feature(box_syntax)]\n \n trait clam<A> {"}, {"sha": "8cfd941cca8deb183fe3920284e8ae21cd82b060", "filename": "src/test/ui/run-pass/issues/issue-2311-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2311-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2311-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2311-2.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n trait clam<A> {\n     fn get(self) -> A;"}, {"sha": "816754c4617e9e1f3a8ea9081c1b5be77e32472f", "filename": "src/test/ui/run-pass/issues/issue-2311.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2311.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2311.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2311.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n trait clam<A> { fn get(self) -> A; }"}, {"sha": "33a033ef37fe949acea10d20ab6c59c9ada25f82", "filename": "src/test/ui/run-pass/issues/issue-2312.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2312.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2312.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2312.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Testing that the B's are resolved\n \n "}, {"sha": "f1029a8c49a5e409e63b7ac995d99219d38db4e6", "filename": "src/test/ui/run-pass/issues/issue-23338-ensure-param-drop-order.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23338-ensure-param-drop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23338-ensure-param-drop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23338-ensure-param-drop-order.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // ignore-pretty issue #37201\n \n // This test is ensuring that parameters are indeed dropped after"}, {"sha": "ab5a89cbba382e1afe99c94255700929701b214c", "filename": "src/test/ui/run-pass/issues/issue-23611-enum-swap-in-drop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23611-enum-swap-in-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23611-enum-swap-in-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23611-enum-swap-in-drop.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // Issue 23611: this test is ensuring that, for an instance `X` of the\n // enum `E`, if you swap in a different variant during the execution\n // of the `<E as Drop>::drop`, then the appropriate substructure will"}, {"sha": "d06814d620ee2601dd826e19e3a482db0b99575e", "filename": "src/test/ui/run-pass/issues/issue-23898.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23898.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23898.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-23898.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Note: This test was used to demonstrate #5873 (now #23898).\n \n enum State { ST_NULL, ST_WHITESPACE }"}, {"sha": "5a0c9f5a85b1e7c81be8d49487ff40f428d03d39", "filename": "src/test/ui/run-pass/issues/issue-2428.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2428.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2428.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2428.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n \n pub fn main() {\n     let _foo = 100;"}, {"sha": "144861dc94ef8a56e2bd90d9ef823519b2719749", "filename": "src/test/ui/run-pass/issues/issue-2445-b.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2445-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2445-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2445-b.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n struct c1<T> {"}, {"sha": "1d368e908ed556d27857019e78af23445a3b895f", "filename": "src/test/ui/run-pass/issues/issue-2445.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2445.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n struct c1<T> {"}, {"sha": "1d1bd21075bf468f27c744c7cac019d2ac6d8098", "filename": "src/test/ui/run-pass/issues/issue-24805-dropck-itemless.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-24805-dropck-itemless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-24805-dropck-itemless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-24805-dropck-itemless.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n+\n // Check that item-less traits do not cause dropck to inject extra\n // region constraints.\n "}, {"sha": "ee0ee1060767a373df3d03c0892f476b02b76c08", "filename": "src/test/ui/run-pass/issues/issue-2487-a.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2487-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2487-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2487-a.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n struct socket {"}, {"sha": "d06f99910a04b75f73748a32b9dc39a8cb1ab853", "filename": "src/test/ui/run-pass/issues/issue-2502.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2502.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "edfa369ed462e66962d844415b381de7ba5fc561", "filename": "src/test/ui/run-pass/issues/issue-25180.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-25180.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-25180.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-25180.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n const x: &'static Fn() = &|| println!(\"ICE here\");\n \n fn main() {}"}, {"sha": "0552e97e642a6960217f4fc9345150ebc71db54c", "filename": "src/test/ui/run-pass/issues/issue-2550.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2550.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2550.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2550.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // pretty-expanded FIXME #23616\n \n struct C {"}, {"sha": "0c6bc7c4885f91637493d048b36c93e69b434358", "filename": "src/test/ui/run-pass/issues/issue-26095.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26095.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26095.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26095.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n \n trait HasNumber<T> {\n     const Number: usize;"}, {"sha": "3c609a9e4aa0e8850738517386961fa57eab13a7", "filename": "src/test/ui/run-pass/issues/issue-26322.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26322.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26322.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26322.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_snake_case)]\n+\n macro_rules! columnline {\n     () => (\n         (column!(), line!())"}, {"sha": "c02c4e7b9d6250f644f159266dcd5010a6354e7b", "filename": "src/test/ui/run-pass/issues/issue-2633.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2633.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2633.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2633.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #[derive(Copy, Clone)]\n struct cat {\n     meow: extern \"Rust\" fn(),"}, {"sha": "c557c0698d5c949f4ca404732b72a43369c5ea4e", "filename": "src/test/ui/run-pass/issues/issue-26873-multifile.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26873-multifile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26873-multifile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26873-multifile.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // ignore-pretty issue #37195\n \n mod issue_26873_multifile;"}, {"sha": "005491ecc589d2e56789c73ddffb64d37ed524ef", "filename": "src/test/ui/run-pass/issues/issue-26873-onefile.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26873-onefile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26873-onefile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-26873-onefile.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n mod A {\n     pub mod B {\n         use super::*;"}, {"sha": "5fccdb0f1371796f75fbbebdf71951584ada69ae", "filename": "src/test/ui/run-pass/issues/issue-2708.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2708.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2708.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2708.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "1c5e7c7333d36cd9c280f90c77c6c0d305247006", "filename": "src/test/ui/run-pass/issues/issue-2718.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2718.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n pub type Task = isize;\n "}, {"sha": "e3b1618c625efc9eca64fb2a6b19a6f0fd1b0514", "filename": "src/test/ui/run-pass/issues/issue-2734.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2734.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "a8e81682ada6f1450d824c9ceab8b40c55a6a960", "filename": "src/test/ui/run-pass/issues/issue-2735-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735-2.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n use std::cell::Cell;\n \n // This test should behave exactly like issue-2735-3"}, {"sha": "9b8c2a5142f2770a4ccc2ad49836e50273d58222", "filename": "src/test/ui/run-pass/issues/issue-2735-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735-3.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n use std::cell::Cell;\n \n // This test should behave exactly like issue-2735-2"}, {"sha": "b22051700d8c07b35461834e3679cc0f98867e16", "filename": "src/test/ui/run-pass/issues/issue-2735.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2735.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "9d84e2dccbcf22986d4019ce39d459396c70d400", "filename": "src/test/ui/run-pass/issues/issue-2748-a.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2748-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2748-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2748-a.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // pretty-expanded FIXME #23616\n \n struct CMap<'a> {"}, {"sha": "81b1a2518fc2fa9316aa9b1b99c24bb869a66a30", "filename": "src/test/ui/run-pass/issues/issue-27639.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-27639.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-27639.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-27639.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n fn main() {\n     const iter: i32 = 0;\n "}, {"sha": "978d2136334f4feab4c5e4b9a38de2f4b96d1d44", "filename": "src/test/ui/run-pass/issues/issue-28676.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-28676.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-28676.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-28676.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(improper_ctypes)]\n+\n // ignore-wasm32-bare no libc to test ffi with\n \n #[derive(Copy, Clone)]"}, {"sha": "dcb8515c7768866e9dec9e462c8b4874a1495c51", "filename": "src/test/ui/run-pass/issues/issue-2904.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2904.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n // Map representation\n "}, {"sha": "06570f41a533c69842cf9aa247a928eb9ec93704", "filename": "src/test/ui/run-pass/issues/issue-29071.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29071.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29071.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29071.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n fn ret() -> u32 {\n     static x: u32 = 10;"}, {"sha": "d2af83251819171a3d8735eed38cd8864dd66247", "filename": "src/test/ui/run-pass/issues/issue-2935.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2935.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2935.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2935.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n //type t = { a: isize };"}, {"sha": "84201348af3defafea7bfa953cfbd711088ecc22", "filename": "src/test/ui/run-pass/issues/issue-2936.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2936.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n trait bar<T> {\n     fn get_bar(&self) -> T;"}, {"sha": "709bea268d17b80b4cd6c2b7e8e434963d016b49", "filename": "src/test/ui/run-pass/issues/issue-29663.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29663.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n // write_volatile causes an LLVM assert with composite types\n \n #![feature(volatile)]"}, {"sha": "b0959e830093e7ad45865db54b5367fc6853b32a", "filename": "src/test/ui/run-pass/issues/issue-29740.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-29740.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -11,6 +11,7 @@\n // run-pass\n // Regression test for #29740. Inefficient MIR matching algorithms\n // generated way too much code for this sort of case, leading to OOM.\n+#![allow(non_snake_case)]\n \n pub mod KeyboardEventConstants {\n     pub const DOM_KEY_LOCATION_STANDARD: u32 = 0;"}, {"sha": "7690d9a69275e7e41c8a9644d718c4ff400c6201", "filename": "src/test/ui/run-pass/issues/issue-2989.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2989.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2989.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-2989.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n trait methods {\n     fn to_bytes(&self) -> Vec<u8> ;\n }"}, {"sha": "ab2d5a5ae8896e69a8f71675e1cb2754c9f3f634", "filename": "src/test/ui/run-pass/issues/issue-3037.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3037.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3037.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3037.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_camel_case_types)]\n \n enum what { }\n "}, {"sha": "9d70cf90d1cd220daf8d671653b39cc4b14a146c", "filename": "src/test/ui/run-pass/issues/issue-3121.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3121.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3121.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3121.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n #[derive(Copy, Clone)]"}, {"sha": "324aec23ab08067994cfc4fbf5e7e9297259cae7", "filename": "src/test/ui/run-pass/issues/issue-3149.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3149.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n // pretty-expanded FIXME #23616\n \n fn Matrix4<T>(m11: T, m12: T, m13: T, m14: T,"}, {"sha": "2d32a08e37bae6d50b1e2190677813cbd4ec53f1", "filename": "src/test/ui/run-pass/issues/issue-3220.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3220.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3220.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3220.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n // pretty-expanded FIXME #23616\n \n struct thing { x: isize, }"}, {"sha": "7102bb469e4e8ddd67ba6db739c28cf15f2964d6", "filename": "src/test/ui/run-pass/issues/issue-3389.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3389.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3389.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3389.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n struct trie_node {\n     content: Vec<String> ,"}, {"sha": "1e914eaee581393a8fd7b19593b413109387ce3c", "filename": "src/test/ui/run-pass/issues/issue-3424.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3424.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3424.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3424.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n // rustc --test ignores2.rs && ./ignores2\n \n pub struct Path;"}, {"sha": "ff4642e47ebe48e2378d5728e997934e8a224061", "filename": "src/test/ui/run-pass/issues/issue-3447.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3447.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3447.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3447.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n use std::cell::RefCell;"}, {"sha": "b7f2871a8d1528795d386f8bc686e057e113a7fa", "filename": "src/test/ui/run-pass/issues/issue-34780.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-34780.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-34780.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-34780.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n #![feature(associated_consts)]\n \n use std::marker::PhantomData;"}, {"sha": "cd31abaca3567416b74413782b2351feae686638", "filename": "src/test/ui/run-pass/issues/issue-3563-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3563-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3563-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3563-3.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // ASCII art shape renderer.  Demonstrates traits, impls, operator overloading,\n // non-copyable struct, unit testing.  To run execute: rustc --test shapes.rs &&\n // ./shapes"}, {"sha": "157cc41cdd38c4ec954b84a27457f27f9b8a0713", "filename": "src/test/ui/run-pass/issues/issue-39720.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-39720.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-39720.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-39720.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // ignore-emscripten FIXME(#45351)\n \n #![feature(repr_simd, platform_intrinsics)]"}, {"sha": "7766d7d1bdc8fc90196d4c7234c06342b7c30ef8", "filename": "src/test/ui/run-pass/issues/issue-3979-generics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3979-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3979-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3979-generics.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n \n use std::ops::Add;\n "}, {"sha": "4cc2e882baaa2f1a4f341e98de22b3e01b8dcb2b", "filename": "src/test/ui/run-pass/issues/issue-3979.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3979.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3979.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-3979.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n \n trait Positioned {\n   fn SetX(&mut self, _: isize);"}, {"sha": "649f52ef82e22db10fe78a9340ba417c893107f4", "filename": "src/test/ui/run-pass/issues/issue-42453.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-42453.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-42453.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-42453.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #[derive(Debug)]\n struct builder;\n "}, {"sha": "cee9d8be98dda5233dc8fbbf539ce5a4416ab6c3", "filename": "src/test/ui/run-pass/issues/issue-42956.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-42956.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-42956.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-42956.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n #![feature(associated_consts)]\n \n impl A for i32 {"}, {"sha": "61dd0714a1f17a5ac8429b6e8aa1e5cf9e741efe", "filename": "src/test/ui/run-pass/issues/issue-47364.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-47364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-47364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-47364.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // compile-flags: -C codegen-units=8 -O\n+#![allow(non_snake_case)]\n \n fn main() {\n     nom_sql::selection(b\"x \");"}, {"sha": "12f2874341fc07bccae5595eee1af4394f286967", "filename": "src/test/ui/run-pass/issues/issue-4759.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-4759.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-4759.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-4759.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_shorthand_field_patterns)]\n \n #![feature(box_syntax)]\n "}, {"sha": "57aac45e51a9a10b7d2039f0efeac53b8fd72ab8", "filename": "src/test/ui/run-pass/issues/issue-47789.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-47789.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-47789.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-47789.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n #![feature(nll)]\n "}, {"sha": "f3beeff60fb08207fc430aa173c2f1a0d4de1d17", "filename": "src/test/ui/run-pass/issues/issue-5741.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-5741.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-5741.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-5741.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n-\n+#![allow(while_true)]\n #![allow(unreachable_code)]\n \n pub fn main() {"}, {"sha": "75466c01fedd458b5297dfcb4691928b41075aab", "filename": "src/test/ui/run-pass/issues/issue-5917.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-5917.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-5917.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-5917.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n struct T (&'static [isize]);\n static t : T = T (&[5, 4, 3]);"}, {"sha": "83d908d597c202556e701f15870c052b70217788", "filename": "src/test/ui/run-pass/issues/issue-6344-let.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6344-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6344-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6344-let.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n+\n struct A { x: usize }\n \n impl Drop for A {"}, {"sha": "c427ca6526c934475f669ef2c0c8175a947c1135", "filename": "src/test/ui/run-pass/issues/issue-6344-match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6344-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6344-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6344-match.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n+\n struct A { x: usize }\n \n impl Drop for A {"}, {"sha": "6803ee6357b3cc83ec57e0f9b70c7a894f7879b0", "filename": "src/test/ui/run-pass/issues/issue-6470.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6470.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6470.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6470.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_snake_case)]\n \n pub mod Bar {\n     pub struct Foo {"}, {"sha": "13b738ac0e6d2eaacf84034a80757df5374e79bd", "filename": "src/test/ui/run-pass/issues/issue-6991.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-6991.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n static x: &'static usize = &1;\n static y: usize = *x;\n "}, {"sha": "217c0dee560ebef33d064fec7267f2281871e651", "filename": "src/test/ui/run-pass/issues/issue-7012.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-7012.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-7012.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-7012.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n+\n /*\n # Comparison of static arrays\n "}, {"sha": "a0e2caee40a64f1ad1dad629f4bcb22cdbd3e06a", "filename": "src/test/ui/run-pass/issues/issue-8259.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8259.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // aux-build:issue-8259.rs\n \n // pretty-expanded FIXME #23616"}, {"sha": "1cf054a46dfd87e19145dc35439de9cc70ee532a", "filename": "src/test/ui/run-pass/issues/issue-8506.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8506.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_upper_case_globals)]\n \n #![allow(dead_code)]\n "}, {"sha": "8753ee8370b05f12a28e7ccd54c9853ed8c70f5b", "filename": "src/test/ui/run-pass/issues/issue-8578.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8578.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8578.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-8578.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n // pretty-expanded FIXME #23616\n \n pub struct UninterpretedOption_NamePart {"}, {"sha": "906c7a422e77c8c74f989719a3b632b166714abe", "filename": "src/test/ui/run-pass/issues/issue-9110.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9110.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(non_snake_case)]\n \n macro_rules! silly_macro {\n     () => ("}, {"sha": "21e192b23f5ae26f5bd171e2bd1e1cb5c7127ab2", "filename": "src/test/ui/run-pass/issues/issue-9129.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9129.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9129.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9129.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_snake_case)]\n // ignore-pretty unreported\n \n #![feature(box_syntax)]"}, {"sha": "957330a1925b41f9745d410152058f45e0123f8a", "filename": "src/test/ui/run-pass/issues/issue-9243.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9243.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9243.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9243.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -10,6 +10,7 @@\n \n // run-pass\n // Regression test for issue 9243\n+#![allow(non_upper_case_globals)]\n \n pub struct Test {\n     mem: isize,"}, {"sha": "62a38767ddd096daace3198fe7121ab0a5742a57", "filename": "src/test/ui/run-pass/issues/issue-9396.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9396.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9396.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-9396.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n // ignore-emscripten no threads support\n \n use std::sync::mpsc::{TryRecvError, channel};"}, {"sha": "a00909ffb675bd0e707ef680bc06f1e077c2c24e", "filename": "src/test/ui/run-pass/issues/issue-979.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-979.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-979.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fissues%2Fissue-979.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n use std::cell::Cell;\n \n struct r<'a> {"}, {"sha": "2115022f17fd92820f2ef6f2ebc52b217236525f", "filename": "src/test/ui/run-pass/macros/macro-doc-comments.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-doc-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-doc-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-doc-comments.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n macro_rules! doc {\n     (\n         $(#[$outer:meta])*"}, {"sha": "d5d459bf28d3a7e477be57200d8186e0c675c441", "filename": "src/test/ui/run-pass/macros/macro-include-items.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-include-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-include-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-include-items.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // ignore-pretty issue #37195\n \n fn bar() {}"}, {"sha": "e7c5900770266d0ed10aedce27cfd5b867055358", "filename": "src/test/ui/run-pass/macros/macro-lifetime-used-with-labels.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-lifetime-used-with-labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-lifetime-used-with-labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-lifetime-used-with-labels.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n #![allow(unreachable_code)]\n \n macro_rules! x {"}, {"sha": "fc874f0d0cade7a202cbe018ced26fb55c893372", "filename": "src/test/ui/run-pass/macros/macro-path.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fmacro-path.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n mod m {\n     pub type t = isize;"}, {"sha": "f0431b92570269f1742280691c95dee883cc467f", "filename": "src/test/ui/run-pass/macros/parse-complex-macro-invoc-op.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fparse-complex-macro-invoc-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fparse-complex-macro-invoc-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fparse-complex-macro-invoc-op.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // Test parsing binary operators after macro invocations.\n \n // pretty-expanded FIXME #23616"}, {"sha": "71be7225b38b11aa8d6a5503bd228c262423303d", "filename": "src/test/ui/run-pass/macros/syntax-extension-source-utils.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmacros%2Fsyntax-extension-source-utils.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // ignore-pretty issue #37195\n \n pub mod m1 {"}, {"sha": "b1afbd8d11c8c0f95e115903e6e38c7d5d268059", "filename": "src/test/ui/run-pass/methods/method-attributes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-attributes.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pp-exact - Make sure we print all the attributes\n // pretty-expanded FIXME #23616\n "}, {"sha": "a56e5b5170d99a285e96d916c7b48333ed54186c", "filename": "src/test/ui/run-pass/methods/method-normalize-bounds-issue-20604.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-normalize-bounds-issue-20604.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-normalize-bounds-issue-20604.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-normalize-bounds-issue-20604.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // Test that we handle projection types which wind up important for\n // resolving methods. This test was reduced from a larger example; the\n // call to `foo()` at the end was failing to resolve because the"}, {"sha": "bb1b90ebfdf853b05239995348c6ab144991b868", "filename": "src/test/ui/run-pass/methods/method-two-trait-defer-resolution-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-two-trait-defer-resolution-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-two-trait-defer-resolution-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmethods%2Fmethod-two-trait-defer-resolution-1.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Test that we pick which version of `foo` to run based on the\n // type that is (ultimately) inferred for `x`.\n "}, {"sha": "84528b3296aa310b899c77ab28a26cf851e11ab6", "filename": "src/test/ui/run-pass/mir/mir_fat_ptr_drop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmir%2Fmir_fat_ptr_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fmir%2Fmir_fat_ptr_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fmir%2Fmir_fat_ptr_drop.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // test that ordinary fat pointer operations work.\n \n #![feature(braced_empty_structs)]"}, {"sha": "dc672d50d7fdd2c295527cb1500a9f8e46b045e6", "filename": "src/test/ui/run-pass/numbers-arithmetic/arith-unsigned.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Farith-unsigned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Farith-unsigned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Farith-unsigned.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(unused_comparisons)]\n \n // Unsigned integer operations\n pub fn main() {"}, {"sha": "747a05f60622f64dd299029be1b99ccd157c6e7b", "filename": "src/test/ui/run-pass/numbers-arithmetic/i128-ffi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fi128-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fi128-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fi128-ffi.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(improper_ctypes)]\n+\n // MSVC doesn't support 128 bit integers, and other Windows\n // C compilers have very inconsistent views on how the ABI\n // should look like."}, {"sha": "c3d4a63829003817e8eaf56bf25e26515fce196a", "filename": "src/test/ui/run-pass/numbers-arithmetic/i128.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fi128.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n+\n // ignore-emscripten i128 doesn't work\n \n // compile-flags: -Z borrowck=compare"}, {"sha": "e9d48f1a1af6c318b8e42c5d73dbf09eac145ea3", "filename": "src/test/ui/run-pass/numbers-arithmetic/shift.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fshift.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fshift.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fshift.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+#![allow(overflowing_literals)]\n+\n // Testing shifts for various combinations of integers\n // Issue #1570\n "}, {"sha": "b0ff7a255ab6a9ae2caa894cfa87301cc2959026", "filename": "src/test/ui/run-pass/numbers-arithmetic/signed-shift-const-eval.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fsigned-shift-const-eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fsigned-shift-const-eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fnumbers-arithmetic%2Fsigned-shift-const-eval.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n enum test { thing = -5 >> 1_usize }\n pub fn main() {"}, {"sha": "7be57400da0dfc1963e6ca6ddea19ea71d160bad", "filename": "src/test/ui/run-pass/overloaded/overloaded-autoderef.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Foverloaded%2Foverloaded-autoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Foverloaded%2Foverloaded-autoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Foverloaded%2Foverloaded-autoderef.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n #![feature(box_syntax, core)]\n \n use std::cell::RefCell;"}, {"sha": "024bd4e2bb792d595163c65d6f99dc49c21b6ea6", "filename": "src/test/ui/run-pass/overloaded/overloaded-index-autoderef.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Foverloaded%2Foverloaded-index-autoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Foverloaded%2Foverloaded-index-autoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Foverloaded%2Foverloaded-index-autoderef.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // Test overloaded indexing combined with autoderef.\n \n #![feature(box_syntax, core)]"}, {"sha": "30f7124f2437fd35f879fe63871025273ca619f7", "filename": "src/test/ui/run-pass/packed/packed-struct-generic-layout.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-generic-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-generic-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-generic-layout.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n+\n \n use std::mem;\n "}, {"sha": "6df51f4572992955a96610d406ece96fe9303eba", "filename": "src/test/ui/run-pass/packed/packed-struct-generic-size.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-generic-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-generic-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-generic-size.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+#![allow(unused_comparisons)]\n+\n #![feature(repr_packed)]\n \n use std::mem;"}, {"sha": "85e7f1544a021f16ede532dba0c476419008e61d", "filename": "src/test/ui/run-pass/packed/packed-struct-size.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-struct-size.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n \n #![feature(repr_packed)]\n "}, {"sha": "b4e24925f75ec3d1e160a84467cd4fa276d8fb00", "filename": "src/test/ui/run-pass/packed/packed-tuple-struct-size.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-tuple-struct-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-tuple-struct-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fpacked%2Fpacked-tuple-struct-size.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #![feature(repr_packed)]\n \n use std::mem;"}, {"sha": "c4c3dc1963e2a331760ad9bbbfecde7efe2d04b5", "filename": "src/test/ui/run-pass/panics/panic-handler-chain.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-handler-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-handler-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-handler-chain.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // ignore-emscripten no threads support\n \n #![feature(std_panic)]"}, {"sha": "5715202067e6b4abf0cc88460b8b1caa537c2a42", "filename": "src/test/ui/run-pass/panics/panic-handler-flail-wildly.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-handler-flail-wildly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-handler-flail-wildly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-handler-flail-wildly.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // ignore-emscripten no threads support\n \n #![feature(std_panic)]"}, {"sha": "f5dd2716d2cf0cfccbe44ded7865504ed7e637a5", "filename": "src/test/ui/run-pass/panics/panic-in-dtor-drops-fields.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-in-dtor-drops-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-in-dtor-drops-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fpanics%2Fpanic-in-dtor-drops-fields.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // ignore-emscripten no threads support\n \n use std::thread;"}, {"sha": "f11ff3f41a138aa6ee489533aa66fc740f67e2a2", "filename": "src/test/ui/run-pass/privacy/privacy-ns.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivacy-ns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivacy-ns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivacy-ns.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n \n // Check we do the correct privacy checks when we import a name and there is an\n // item with that name in both the value and type namespaces."}, {"sha": "2910c462c2bce4fca9519adecb67a9a45334a580", "filename": "src/test/ui/run-pass/privacy/private-class-field.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivate-class-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivate-class-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivate-class-field.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n struct cat {\n     meows : usize,"}, {"sha": "a0f012a6059b32969399e113e63ad66be919589a", "filename": "src/test/ui/run-pass/privacy/private-method.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivate-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivate-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fprivacy%2Fprivate-method.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n struct cat {"}, {"sha": "d1e3fba14cf192ed6df54482e8141b5924db86d6", "filename": "src/test/ui/run-pass/process/process-sigpipe.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprocess%2Fprocess-sigpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fprocess%2Fprocess-sigpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fprocess%2Fprocess-sigpipe.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n+\n // ignore-android since the dynamic linker sets a SIGPIPE handler (to do\n // a crash report) so inheritance is moot on the entire platform\n "}, {"sha": "d5d2408d5d240ddd73b7c0d16489fc4d4fcc3065", "filename": "src/test/ui/run-pass/regions/regions-bound-lists-feature-gate-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-bound-lists-feature-gate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-bound-lists-feature-gate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-bound-lists-feature-gate-2.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n #![feature(issue_5723_bootstrap)]\n \n trait Foo {"}, {"sha": "50073f8b9f0541baa91ed2f53c2ee7651b947b5c", "filename": "src/test/ui/run-pass/regions/regions-bound-lists-feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-bound-lists-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-bound-lists-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-bound-lists-feature-gate.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n #![feature(issue_5723_bootstrap)]\n \n trait Foo {"}, {"sha": "a5f0860be167b52aa1325d6d4eba150ef7a80a3c", "filename": "src/test/ui/run-pass/regions/regions-copy-closure.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-copy-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-copy-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-copy-closure.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n struct closure_box<'a> {\n     cl: Box<FnMut() + 'a>,\n }"}, {"sha": "84d4a261f1d993056ef17225e58aba752646f3a0", "filename": "src/test/ui/run-pass/regions/regions-creating-enums2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-creating-enums2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-creating-enums2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-creating-enums2.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n enum ast<'a> {"}, {"sha": "24ba0c176113facde9cc690538d9c4dfa5584c07", "filename": "src/test/ui/run-pass/regions/regions-creating-enums5.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-creating-enums5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-creating-enums5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-creating-enums5.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n enum ast<'a> {"}, {"sha": "71464f30ef039cad459a4cb11464124d7aa18637", "filename": "src/test/ui/run-pass/regions/regions-debruijn-of-object.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-debruijn-of-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-debruijn-of-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-debruijn-of-object.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n struct ctxt<'tcx> {"}, {"sha": "fc152fd275a20b3afd9b671810215ec5a41cdcf2", "filename": "src/test/ui/run-pass/regions/regions-infer-contravariance-due-to-ret.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-contravariance-due-to-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-contravariance-due-to-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-contravariance-due-to-ret.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n struct boxed_int<'a> {\n     f: &'a isize,"}, {"sha": "7af25be1d03a0cd3bb8b81cf46da2a688938e562", "filename": "src/test/ui/run-pass/regions/regions-infer-region-in-fn-but-not-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-region-in-fn-but-not-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-region-in-fn-but-not-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-region-in-fn-but-not-type.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n // check that the &isize here does not cause us to think that `foo`\n // contains region pointers"}, {"sha": "2a3cb3735ec3db984bc58a1498d1bf64bafc20bf", "filename": "src/test/ui/run-pass/regions/regions-infer-static-from-proc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-static-from-proc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-static-from-proc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-infer-static-from-proc.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // Check that the 'static bound on a proc influences lifetimes of\n // region variables contained within (otherwise, region inference will\n // give `x` a very short lifetime)."}, {"sha": "6d521432849eafd7f606081fd6a57833009e5283", "filename": "src/test/ui/run-pass/regions/regions-mock-codegen.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-mock-codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-mock-codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-mock-codegen.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n #![feature(allocator_api)]"}, {"sha": "b24e249635063e9cef40a9f0fd3298edb9f67ff2", "filename": "src/test/ui/run-pass/regions/regions-nullary-variant.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-nullary-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-nullary-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-nullary-variant.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n enum roption<'a> {"}, {"sha": "027c7698bf80e00c3db4e8c2414925ada0c10a35", "filename": "src/test/ui/run-pass/regions/regions-self-impls.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-self-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-self-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-self-impls.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n struct Clam<'a> {\n     chowder: &'a isize\n }"}, {"sha": "5cb9ad7774ce350554a00a7d3f0066b9fb56b8ef", "filename": "src/test/ui/run-pass/regions/regions-self-in-enums.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-self-in-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-self-in-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-self-in-enums.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n enum int_wrapper<'a> {\n     int_wrapper_ctor(&'a isize)\n }"}, {"sha": "fa579a31806e5827eb4e50abfb2e2151924f6dd1", "filename": "src/test/ui/run-pass/regions/regions-static-closure.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-static-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-static-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fregions%2Fregions-static-closure.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n struct closure_box<'a> {\n     cl: Box<FnMut() + 'a>,\n }"}, {"sha": "ddb83317fd93c282908ff10d4e1ec260888f6842", "filename": "src/test/ui/run-pass/rfcs/rfc1623.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Frfcs%2Frfc1623.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Frfcs%2Frfc1623.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Frfcs%2Frfc1623.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n #![allow(dead_code)]\n \n // very simple test for a 'static static with default lifetime"}, {"sha": "862d02bda0cee19f689360c90e21319ee1ce0908", "filename": "src/test/ui/run-pass/self/explicit-self.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fself%2Fexplicit-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fself%2Fexplicit-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fself%2Fexplicit-self.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n+\n #![feature(box_syntax)]\n \n static tau: f64 = 2.0*3.14159265358979323;"}, {"sha": "92eccb47e1894dfca8a5b9485005edc44b29919e", "filename": "src/test/ui/run-pass/self/self-in-typedefs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fself%2Fself-in-typedefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fself%2Fself-in-typedefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fself%2Fself-in-typedefs.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(unions_with_drop_fields)]\n+\n #![feature(self_in_typedefs)]\n #![feature(untagged_unions)]\n "}, {"sha": "b69b6f0a4cd671ecd7485c1343b7c5dae2daf68e", "filename": "src/test/ui/run-pass/simd/simd-generics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-generics.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n \n #![feature(repr_simd, platform_intrinsics)]"}, {"sha": "c1094336c29f28c98bfa6a4469f6d4eca5ee775f", "filename": "src/test/ui/run-pass/simd/simd-intrinsic-generic-arithmetic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-arithmetic.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // ignore-emscripten FIXME(#45351) hits an LLVM assert\n \n #![feature(repr_simd, platform_intrinsics)]"}, {"sha": "822101558ce00a6b2d272616ba5062fa7bd716b5", "filename": "src/test/ui/run-pass/simd/simd-intrinsic-generic-reduction.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-reduction.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // ignore-emscripten\n \n // Test that the simd_reduce_{op} intrinsics produce the correct results."}, {"sha": "590a2990270dc48734b1f67171fd3480859c8f15", "filename": "src/test/ui/run-pass/simd/simd-intrinsic-generic-select.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-select.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-select.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-intrinsic-generic-select.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // ignore-emscripten\n \n // Test that the simd_select intrinsics produces correct results."}, {"sha": "6a1189ef2db5f2ef11064c149fc33ff74b75a037", "filename": "src/test/ui/run-pass/simd/simd-size-align.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-size-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-size-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-size-align.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n+\n \n #![feature(repr_simd)]\n #![allow(non_camel_case_types)]"}, {"sha": "a1aa61a0a33ae831bf018c918409b4ef1b4a41f6", "filename": "src/test/ui/run-pass/simd/simd-target-feature-mixup.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-target-feature-mixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-target-feature-mixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-target-feature-mixup.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // ignore-emscripten\n \n #![feature(repr_simd, target_feature, cfg_target_feature)]"}, {"sha": "e255c4d47a7069db173fc31eedf3add2852d81bc", "filename": "src/test/ui/run-pass/simd/simd-upgraded.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-upgraded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-upgraded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fsimd%2Fsimd-upgraded.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+#![allow(non_camel_case_types)]\n+\n // Test that removed LLVM SIMD intrinsics continue\n // to work via the \"AutoUpgrade\" mechanism.\n "}, {"sha": "b1cbd5de0b9eb14123c51afed0c0b7287e81d768", "filename": "src/test/ui/run-pass/statics/static-impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstatics%2Fstatic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstatics%2Fstatic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstatics%2Fstatic-impl.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n \n "}, {"sha": "1e8f5f34ea6a5157010ce13295a67ed1ac82df51", "filename": "src/test/ui/run-pass/statics/static-mut-xc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstatics%2Fstatic-mut-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstatics%2Fstatic-mut-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstatics%2Fstatic-mut-xc.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // Constants (static variables) can be used to match in patterns, but mutable\n // statics cannot. This ensures that there's some form of error if this is\n // attempted."}, {"sha": "c5926bc158661cc7e45c1b41b5e3306372bd5211", "filename": "src/test/ui/run-pass/structs-enums/class-attributes-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-attributes-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-attributes-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-attributes-1.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pp-exact - Make sure we actually print the attributes\n #![feature(custom_attribute)]\n "}, {"sha": "f9d88de145acac8938806f3b42d1e85573911900", "filename": "src/test/ui/run-pass/structs-enums/class-attributes-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-attributes-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-attributes-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-attributes-2.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #![feature(custom_attribute)]\n \n struct cat {"}, {"sha": "e2efc146c4b15f4ed81c3add69b64dc28ec9e20d", "filename": "src/test/ui/run-pass/structs-enums/class-cast-to-trait-multiple-types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-cast-to-trait-multiple-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-cast-to-trait-multiple-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-cast-to-trait-multiple-types.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n trait noisy {\n   fn speak(&mut self) -> isize;"}, {"sha": "695318d0ee79dcec565243d851d2a9f1d66e5f64", "filename": "src/test/ui/run-pass/structs-enums/class-cast-to-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-cast-to-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-cast-to-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-cast-to-trait.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // ignore-freebsd FIXME fails on BSD\n \n "}, {"sha": "13559906795e1fbc6a849a5f643410df96c0d5a2", "filename": "src/test/ui/run-pass/structs-enums/class-dtor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-dtor.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n struct cat {"}, {"sha": "b4bce42e64706cb65b1a0b4fc99c614eb0f1aea4", "filename": "src/test/ui/run-pass/structs-enums/class-exports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-exports.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n /* Test that exporting a class also exports its\n    public fields and methods */"}, {"sha": "6ceaab93e7924483ccd0784bd0f560431c4b4593", "filename": "src/test/ui/run-pass/structs-enums/class-impl-very-parameterized-trait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-impl-very-parameterized-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-impl-very-parameterized-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-impl-very-parameterized-trait.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n use std::cmp;\n "}, {"sha": "4f319cf8ea4db16392ad002bba9240e71dbd52e2", "filename": "src/test/ui/run-pass/structs-enums/class-implement-trait-cross-crate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-implement-trait-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-implement-trait-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-implement-trait-cross-crate.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // aux-build:cci_class_trait.rs\n extern crate cci_class_trait;\n use cci_class_trait::animals::noisy;"}, {"sha": "e582940c1e467cb9bcb03d35ed862c89c1f89046", "filename": "src/test/ui/run-pass/structs-enums/class-implement-traits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-implement-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-implement-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-implement-traits.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n trait noisy {\n     fn speak(&mut self);"}, {"sha": "8cc6025dc43dd39c858f9b2e695829779c1ac8ed", "filename": "src/test/ui/run-pass/structs-enums/class-methods.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-methods.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n struct cat {\n   meows : usize,"}, {"sha": "e32ba9d02395fe5a32b2dcc5f92496c1df4efec9", "filename": "src/test/ui/run-pass/structs-enums/class-poly-methods.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-poly-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-poly-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-poly-methods.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n struct cat<U> {"}, {"sha": "a1c9afaa6346662fab9cb78afa5f5ecc83057ae3", "filename": "src/test/ui/run-pass/structs-enums/class-separate-impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-separate-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-separate-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-separate-impl.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #![feature(box_syntax)]\n \n use std::fmt;"}, {"sha": "5ad60dfd6d9642f8b751fb4ee2e56af17af00201", "filename": "src/test/ui/run-pass/structs-enums/class-str-field.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-str-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-str-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-str-field.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n struct cat {"}, {"sha": "d3b4083f843acfe649eb1ef5df0b5bc8402596d2", "filename": "src/test/ui/run-pass/structs-enums/class-typarams.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-typarams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-typarams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclass-typarams.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n use std::marker::PhantomData;"}, {"sha": "49016d14b9ddaa329aba1b9b76e94a3aa3dfc9d1", "filename": "src/test/ui/run-pass/structs-enums/classes-self-referential.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-self-referential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-self-referential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-self-referential.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "6eaf8939dcc7298d9024300a50a0d93a55c8df7f", "filename": "src/test/ui/run-pass/structs-enums/classes-simple-method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-simple-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-simple-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-simple-method.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n struct cat {\n     meows : usize,"}, {"sha": "771943802aa27315d0192b1ea93b8c5c15b2051e", "filename": "src/test/ui/run-pass/structs-enums/classes-simple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses-simple.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n struct cat {\n     meows : usize,"}, {"sha": "f40fe3e8186e879f6202a0b7eb0d80870eb8706c", "filename": "src/test/ui/run-pass/structs-enums/classes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fclasses.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n struct cat {\n     meows : usize,\n "}, {"sha": "3d75786654d2e038be0697a9cce96b1b56e61232", "filename": "src/test/ui/run-pass/structs-enums/codegen-tag-static-padding.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fcodegen-tag-static-padding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fcodegen-tag-static-padding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fcodegen-tag-static-padding.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n \n // Issue #13186\n "}, {"sha": "60d6cd2746bf40ab9365ce213085b814183b5ed2", "filename": "src/test/ui/run-pass/structs-enums/compare-generic-enums.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fcompare-generic-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fcompare-generic-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fcompare-generic-enums.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n type an_int = isize;\n "}, {"sha": "7deb90cc3e8ea0947074c91498b65e27e2d837d6", "filename": "src/test/ui/run-pass/structs-enums/empty-struct-braces.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fempty-struct-braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fempty-struct-braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fempty-struct-braces.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // Empty struct defined with braces add names into type namespace\n // Empty struct defined without braces add names into both type and value namespaces\n "}, {"sha": "eab02fd5741b3c8ec636790501901f3a8cdf81ef", "filename": "src/test/ui/run-pass/structs-enums/empty-tag.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fempty-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fempty-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fempty-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #[derive(Copy, Clone, Debug)]\n enum chan { chan_t, }\n "}, {"sha": "862025ea934222e7c570b7c23f52a9708e508cd5", "filename": "src/test/ui/run-pass/structs-enums/enum-alignment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-alignment.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n \n use std::mem;\n "}, {"sha": "731cb003776e082fe96141d30231fec27d3d0458", "filename": "src/test/ui/run-pass/structs-enums/enum-discrim-range-overflow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-range-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-range-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-discrim-range-overflow.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(overflowing_literals)]\n+\n // pretty-expanded FIXME #23616\n \n pub enum E64 {"}, {"sha": "5c02bf28884863544da25d82b15daa967134be06", "filename": "src/test/ui/run-pass/structs-enums/enum-disr-val-pretty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-disr-val-pretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-disr-val-pretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fenum-disr-val-pretty.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n // pp-exact\n \n "}, {"sha": "6de6e1847fe75a000441dac1f67975b0744bcd0a", "filename": "src/test/ui/run-pass/structs-enums/export-abstract-tag.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexport-abstract-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexport-abstract-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexport-abstract-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // We can export tags without exporting the variants to create a simple\n // sort of ADT.\n "}, {"sha": "700ad4fbe7e804822fd3321d3f9d1e7a7f1addb2", "filename": "src/test/ui/run-pass/structs-enums/export-tag-variant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexport-tag-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexport-tag-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexport-tag-variant.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n // pretty-expanded FIXME #23616\n \n mod foo {"}, {"sha": "25777fba27431b7fbd296c7ee0867ae2f09ac1db", "filename": "src/test/ui/run-pass/structs-enums/expr-if-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexpr-if-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexpr-if-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexpr-if-struct.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n "}, {"sha": "7c18eff1c46b96deaaf4fdd9fb11f7537f4ead71", "filename": "src/test/ui/run-pass/structs-enums/expr-match-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexpr-match-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexpr-match-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fexpr-match-struct.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n "}, {"sha": "5b9d1530321fc76a30cc51843fb29156ff17d45d", "filename": "src/test/ui/run-pass/structs-enums/field-destruction-order.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ffield-destruction-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ffield-destruction-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ffield-destruction-order.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // In theory, it doesn't matter what order destructors are run in for rust\n // because we have explicit ownership of values meaning that there's no need to\n // run one before another. With unsafe code, however, there may be a safe"}, {"sha": "1e4955bd5ece9d8939d3f4dd17e1e2b578b0d8d2", "filename": "src/test/ui/run-pass/structs-enums/foreign-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fforeign-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fforeign-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fforeign-struct.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Passing enums by value\n \n // pretty-expanded FIXME #23616"}, {"sha": "1f57c9dd473fe8f2b16cdbcb06bf17d0b00b01a2", "filename": "src/test/ui/run-pass/structs-enums/namespaced-enum-emulate-flat-xc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fnamespaced-enum-emulate-flat-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fnamespaced-enum-emulate-flat-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fnamespaced-enum-emulate-flat-xc.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // aux-build:namespaced_enum_emulate_flat.rs\n \n // pretty-expanded FIXME #23616"}, {"sha": "ae8819cb5b87abdce368410a484c99197ad0e5da", "filename": "src/test/ui/run-pass/structs-enums/rec-tup.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Frec-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Frec-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Frec-tup.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n #[derive(Copy, Clone)]\n struct Point {x: isize, y: isize}"}, {"sha": "966749b8354ee988900dfa82cc3edc39c02cbf6f", "filename": "src/test/ui/run-pass/structs-enums/record-pat.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Frecord-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Frecord-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Frecord-pat.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_shorthand_field_patterns)]\n \n enum t1 { a(isize), b(usize), }\n struct T2 {x: t1, y: isize}"}, {"sha": "e8ac8ed749cc39ef3485eb93e4de03260e261bd4", "filename": "src/test/ui/run-pass/structs-enums/resource-in-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fresource-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fresource-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fresource-in-struct.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Ensures that class dtors run if the object is inside an enum\n // variant\n "}, {"sha": "be73224c7ecbc5ab4b6ab9577e54dac4fcd3e2e1", "filename": "src/test/ui/run-pass/structs-enums/simple-generic-tag.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsimple-generic-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsimple-generic-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsimple-generic-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n \n // pretty-expanded FIXME #23616"}, {"sha": "7093ba5138d19ac48e2af0f1695565f6c947dab4", "filename": "src/test/ui/run-pass/structs-enums/simple-match-generic-tag.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsimple-match-generic-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsimple-match-generic-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsimple-match-generic-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n enum opt<T> { none, some(T) }\n \n pub fn main() {"}, {"sha": "5b2a3ca3caf082df316c34f286fc1dbb03f45995", "filename": "src/test/ui/run-pass/structs-enums/small-enum-range-edge.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsmall-enum-range-edge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsmall-enum-range-edge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fsmall-enum-range-edge.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_upper_case_globals)]\n+\n // Tests the range assertion wraparound case when reading discriminants.\n \n #[repr(u8)]"}, {"sha": "b20173574cc7df3b65cdfcae34e55e0b797231b9", "filename": "src/test/ui/run-pass/structs-enums/struct-aliases-xcrate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-aliases-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-aliases-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-aliases-xcrate.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n+\n // aux-build:xcrate_struct_aliases.rs\n \n extern crate xcrate_struct_aliases;"}, {"sha": "610c512628c7311912e6cead933d06f8123ff909", "filename": "src/test/ui/run-pass/structs-enums/struct-aliases.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-aliases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-aliases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-aliases.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n+\n use std::mem;\n \n struct S {"}, {"sha": "93539b45e2311deca8a598329616be8cb750b2be", "filename": "src/test/ui/run-pass/structs-enums/struct-like-variant-match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-like-variant-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-like-variant-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-like-variant-match.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n \n enum Foo {\n     Bar {"}, {"sha": "032fcecb4903139ecb21460b84a752dc56089046", "filename": "src/test/ui/run-pass/structs-enums/struct-literal-dtor.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-literal-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-literal-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-literal-dtor.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n struct foo {\n     x: String,\n }"}, {"sha": "c6f769706a6d7bd8777287874e4fc4ce434dd27e", "filename": "src/test/ui/run-pass/structs-enums/struct-pattern-matching.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-pattern-matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-pattern-matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Fstruct-pattern-matching.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_shorthand_field_patterns)]\n+\n struct Foo {\n     x: isize,\n     y: isize,"}, {"sha": "a7f7841fac848c1e279eaf4dbe1ec5458ca83e58", "filename": "src/test/ui/run-pass/structs-enums/tag-align-dyn-u64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-dyn-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-dyn-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-dyn-u64.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n \n use std::mem;\n "}, {"sha": "cbba62d156bc77a4566fdcffa6ed0b58975a9764", "filename": "src/test/ui/run-pass/structs-enums/tag-align-dyn-variants.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-dyn-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-dyn-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-dyn-variants.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n+#![allow(non_snake_case)]\n \n use std::mem;\n "}, {"sha": "1aff17f77d40bea3b5c09adab9b3eb9093a41e5a", "filename": "src/test/ui/run-pass/structs-enums/tag-align-shape.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-shape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-shape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-shape.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #[derive(Debug)]\n enum a_tag {\n     a_tag_var(u64)"}, {"sha": "9f6349a23ada0f5bdf8fc4bea6142f9e741729b0", "filename": "src/test/ui/run-pass/structs-enums/tag-align-u64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-align-u64.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(deprecated)]\n \n use std::mem;\n "}, {"sha": "bfc3213a040c242689894d852785bbd27c07c5e6", "filename": "src/test/ui/run-pass/structs-enums/tag-disr-val-shape.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-disr-val-shape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-disr-val-shape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-disr-val-shape.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n #[derive(Debug)]\n enum color {\n     red = 0xff0000,"}, {"sha": "d0eea7bdcd24d1915dc6abcffff5e8627919480e", "filename": "src/test/ui/run-pass/structs-enums/tag-exports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-exports.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "db9b2c3b60cca6efd34d1a047be81b6a05b51cc6", "filename": "src/test/ui/run-pass/structs-enums/tag-in-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-in-block.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n \n \n // pretty-expanded FIXME #23616"}, {"sha": "085d0bc1fdcee5ab35829243fab267a6ef582161", "filename": "src/test/ui/run-pass/structs-enums/tag-variant-disr-type-mismatch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-variant-disr-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-variant-disr-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-variant-disr-type-mismatch.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n enum color {"}, {"sha": "9f82faad1581b773b77d5c7c2744bf9d83c7d519", "filename": "src/test/ui/run-pass/structs-enums/tag-variant-disr-val.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-variant-disr-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-variant-disr-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag-variant-disr-val.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n use color::{red, green, blue, black, white, imaginary, purple, orange};\n \n #[derive(Copy, Clone)]"}, {"sha": "bd28320ffb6771e1c332f63c5cf83cdeb1cf5b02", "filename": "src/test/ui/run-pass/structs-enums/tag.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fstructs-enums%2Ftag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n enum colour { red(isize, isize), green, }"}, {"sha": "be671084c84f9abfc5a305338e9140547b1d0d5b", "filename": "src/test/ui/run-pass/threads-sendsync/send-resource.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fsend-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fsend-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fsend-resource.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n // ignore-emscripten no threads support\n "}, {"sha": "2e82a278f3d318a7ae8441137597e5e3a87aa521", "filename": "src/test/ui/run-pass/threads-sendsync/sendable-class.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fsendable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fsendable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fsendable-class.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Test that a class with only sendable fields can be sent\n \n // pretty-expanded FIXME #23616"}, {"sha": "f7abb984b68f0ce9804e053a88e0f3594286478e", "filename": "src/test/ui/run-pass/threads-sendsync/spawn-types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fspawn-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fspawn-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Fspawn-types.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // ignore-emscripten no threads support\n \n /*"}, {"sha": "d98766f9194167dc61f5cd7cf1272cbf035246ea", "filename": "src/test/ui/run-pass/threads-sendsync/task-comm-16.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftask-comm-16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftask-comm-16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftask-comm-16.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n use std::sync::mpsc::channel;\n use std::cmp;\n "}, {"sha": "5b6afe7848275c84b3e89c3490165f90559a7fa3", "filename": "src/test/ui/run-pass/threads-sendsync/tls-init-on-init.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftls-init-on-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftls-init-on-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftls-init-on-init.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // ignore-emscripten no threads support\n \n #![feature(thread_local_try_with)]"}, {"sha": "f1fcef8e4b95a358bd0a10b8f2913f601dc7fc86", "filename": "src/test/ui/run-pass/threads-sendsync/tls-try-with.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftls-try-with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftls-try-with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Fthreads-sendsync%2Ftls-try-with.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(stable_features)]\n+\n // ignore-emscripten no threads support\n \n #![feature(thread_local_try_with)]"}, {"sha": "958c1094e4f7cf67340270a2ebb2715a44ad19d1", "filename": "src/test/ui/run-pass/traits/anon_trait_static_method_exe.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fanon_trait_static_method_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fanon_trait_static_method_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fanon_trait_static_method_exe.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // aux-build:anon_trait_static_method_lib.rs\n \n extern crate anon_trait_static_method_lib;"}, {"sha": "f90c7b95dcf5ea263f6484de333a2e7009f35242", "filename": "src/test/ui/run-pass/traits/assignability-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fassignability-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fassignability-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fassignability-trait.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Tests that type assignability is used to search for instances when\n // making method calls, but only if there aren't any matches without\n // it."}, {"sha": "76cfaf2c68ef59fa149028495ce3a839aa127dbd", "filename": "src/test/ui/run-pass/traits/impl-implicit-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fimpl-implicit-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fimpl-implicit-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fimpl-implicit-trait.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n enum option_<T> {"}, {"sha": "55cdeff8c9b2cd55eca84ea78cf409531aed7317", "filename": "src/test/ui/run-pass/traits/kindck-owned-trait-contains-1.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fkindck-owned-trait-contains-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fkindck-owned-trait-contains-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fkindck-owned-trait-contains-1.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+#![allow(non_camel_case_types)]\n+\n #![feature(box_syntax)]\n \n trait repeat<A> { fn get(&self) -> A; }"}, {"sha": "c3c37d6b9c024f700b3a8f0f18cf6d847dded299", "filename": "src/test/ui/run-pass/traits/supertrait-default-generics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fsupertrait-default-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fsupertrait-default-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fsupertrait-default-generics.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // There is some other borrowck bug, so we make the stuff not mut.\n \n "}, {"sha": "1a2621f767940189247e01864a8e61dbc5fceb63", "filename": "src/test/ui/run-pass/traits/trait-bounds-basic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-bounds-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-bounds-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-bounds-basic.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(unconditional_recursion)]\n+\n // pretty-expanded FIXME #23616\n \n trait Foo {"}, {"sha": "3c433b58a3a9a8c0f6aa295d2e9b72f6f536f56d", "filename": "src/test/ui/run-pass/traits/trait-bounds.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-bounds.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+#![allow(non_snake_case)]\n \n trait connection {\n     fn read(&self) -> isize;"}, {"sha": "426b3e2ad79464f6b73ce434ee5affdeb0d92214", "filename": "src/test/ui/run-pass/traits/trait-default-method-xc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-default-method-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-default-method-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-default-method-xc.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // aux-build:trait_default_method_xc_aux.rs\n \n "}, {"sha": "a230ad03de8d37f004f11d953fbf1c0d774bdbe1", "filename": "src/test/ui/run-pass/traits/trait-generic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-generic.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n "}, {"sha": "8fadb09377f8ac455978d53a24ba95d5cf91b362", "filename": "src/test/ui/run-pass/traits/trait-impl-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-impl-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-impl-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-impl-2.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_snake_case)]\n+\n // pretty-expanded FIXME #23616\n \n pub mod Foo {"}, {"sha": "3fbb7aadde4bb3cca6cd31ca2a56e18de8ca8110", "filename": "src/test/ui/run-pass/traits/trait-to-str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-to-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-to-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Ftrait-to-str.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n \n \n trait to_str {"}, {"sha": "4f107fb82422a69ebb8e2cd957867d6b45614c11", "filename": "src/test/ui/run-pass/traits/use-trait-before-def.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fuse-trait-before-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fuse-trait-before-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Ftraits%2Fuse-trait-before-def.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Issue #1761\n \n // pretty-expanded FIXME #23616"}, {"sha": "620d935b3b82a4f1e64f405324c50d88890fbcb3", "filename": "src/test/ui/run-pass/unboxed-closures/unboxed-closures-cross-crate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Funboxed-closures%2Funboxed-closures-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Funboxed-closures%2Funboxed-closures-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Funboxed-closures%2Funboxed-closures-cross-crate.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // Test that unboxed closures work with cross-crate inlining\n // Acts as a regression test for #16790, #18378 and #18543\n "}, {"sha": "d849c1d32981b106363445d30f5ffb2b9e965e10", "filename": "src/test/ui/run-pass/unique/unique-containing-tag.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Funique%2Funique-containing-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e462c1adc5d40383f6cf937f17a7525414756c0e/src%2Ftest%2Fui%2Frun-pass%2Funique%2Funique-containing-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frun-pass%2Funique%2Funique-containing-tag.rs?ref=e462c1adc5d40383f6cf937f17a7525414756c0e", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n // run-pass\n+#![allow(non_camel_case_types)]\n+\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}]}