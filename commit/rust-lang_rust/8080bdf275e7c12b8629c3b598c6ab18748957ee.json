{"sha": "8080bdf275e7c12b8629c3b598c6ab18748957ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwODBiZGYyNzVlN2MxMmI4NjI5YzNiNTk4YzZhYjE4NzQ4OTU3ZWU=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-08T06:44:35Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Fix move errors for index expressions\n\nThe suggestion logic gave up too early, which kept it from suggesting\nborrowing index expressions.", "tree": {"sha": "dcbb9c7920f59e0e15f468fc4c7fb5e7bad746af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcbb9c7920f59e0e15f468fc4c7fb5e7bad746af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8080bdf275e7c12b8629c3b598c6ab18748957ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8080bdf275e7c12b8629c3b598c6ab18748957ee", "html_url": "https://github.com/rust-lang/rust/commit/8080bdf275e7c12b8629c3b598c6ab18748957ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8080bdf275e7c12b8629c3b598c6ab18748957ee/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff", "html_url": "https://github.com/rust-lang/rust/commit/54ddb36ce7b4d403e986cc8fe9b121bb3c74a8ff"}], "stats": {"total": 107, "additions": 64, "deletions": 43}, "files": [{"sha": "961d8eb7b948b2264d66f3ec970838a50d2e9158", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/8080bdf275e7c12b8629c3b598c6ab18748957ee/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8080bdf275e7c12b8629c3b598c6ab18748957ee/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=8080bdf275e7c12b8629c3b598c6ab18748957ee", "patch": "@@ -341,38 +341,32 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                 move_from,\n                 ..\n             } => {\n-                let mut suggest_change_head_expr = false;\n-                match move_from {\n+                let try_remove_deref = match move_from {\n                     Place::Projection(box PlaceProjection {\n                         elem: ProjectionElem::Deref,\n                         ..\n-                    }) => {\n-                        // This is false for (e.g.) index expressions `a[b]`,\n-                        // which roughly desugar to `*Index::index(&a, b)` or\n-                        // `*IndexMut::index_mut(&mut a, b)`.\n-                        if snippet.starts_with('*') {\n-                            err.span_suggestion(\n-                                span,\n-                                \"consider removing this dereference operator\",\n-                                (&snippet[1..]).to_owned(),\n-                            );\n-                            suggest_change_head_expr = true;\n-                        }\n-                    }\n-                    _ => {\n-                        err.span_suggestion(\n-                            span,\n-                            \"consider using a reference instead\",\n-                            format!(\"&{}\", snippet),\n-                        );\n-                        suggest_change_head_expr = true;\n-                    }\n+                    }) => true,\n+                    _ => false,\n+                };\n+                if try_remove_deref && snippet.starts_with('*') {\n+                    // This is false for (e.g.) index expressions `a[b]`,\n+                    // which roughly desugar to `*Index::index(&a, b)` or\n+                    // `*IndexMut::index_mut(&mut a, b)`.\n+                    err.span_suggestion(\n+                        span,\n+                        \"consider removing this dereference operator\",\n+                        snippet[1..].to_owned(),\n+                    );\n+                } else {\n+                    err.span_suggestion(\n+                        span,\n+                        \"consider using a reference instead\",\n+                        format!(\"&{}\", snippet),\n+                    );\n                 }\n+\n                 binds_to.sort();\n                 binds_to.dedup();\n-                if !suggest_change_head_expr {\n-                    self.add_move_error_suggestions(err, &binds_to);\n-                }\n                 self.add_move_error_labels(err, &binds_to);\n             }\n             GroupedMoveError::MovesFromValue { mut binds_to, .. } => {"}, {"sha": "16f11f9b10ab249010197af8adc16fc07fc33e21", "filename": "src/test/ui/suggestions/dont-suggest-ref.stderr", "status": "modified", "additions": 44, "deletions": 17, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/8080bdf275e7c12b8629c3b598c6ab18748957ee/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8080bdf275e7c12b8629c3b598c6ab18748957ee/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref.stderr?ref=8080bdf275e7c12b8629c3b598c6ab18748957ee", "patch": "@@ -188,8 +188,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:111:17\n    |\n LL |     let X(_t) = vs_[0];\n-   |           --    ^^^^^^ cannot move out of borrowed content\n-   |           |\n+   |           --    ^^^^^^\n+   |           |     |\n+   |           |     cannot move out of borrowed content\n+   |           |     help: consider using a reference instead: `&vs_[0]`\n    |           data moved here\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n@@ -202,8 +204,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:115:30\n    |\n LL |     if let Either::One(_t) = vr[0] { }\n-   |                        --    ^^^^^ cannot move out of borrowed content\n-   |                        |\n+   |                        --    ^^^^^\n+   |                        |     |\n+   |                        |     cannot move out of borrowed content\n+   |                        |     help: consider using a reference instead: `&vr[0]`\n    |                        data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n@@ -216,8 +220,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:119:33\n    |\n LL |     while let Either::One(_t) = vr[0] { }\n-   |                           --    ^^^^^ cannot move out of borrowed content\n-   |                           |\n+   |                           --    ^^^^^\n+   |                           |     |\n+   |                           |     cannot move out of borrowed content\n+   |                           |     help: consider using a reference instead: `&vr[0]`\n    |                           data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n@@ -230,7 +236,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:123:11\n    |\n LL |     match vr[0] {\n-   |           ^^^^^ cannot move out of borrowed content\n+   |           ^^^^^\n+   |           |\n+   |           cannot move out of borrowed content\n+   |           help: consider using a reference instead: `&vr[0]`\n ...\n LL |         Either::One(_t)\n    |                     -- data moved here\n@@ -245,7 +254,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:130:11\n    |\n LL |     match vr[0] {\n-   |           ^^^^^ cannot move out of borrowed content\n+   |           ^^^^^\n+   |           |\n+   |           cannot move out of borrowed content\n+   |           help: consider using a reference instead: `&vr[0]`\n ...\n LL |         Either::One(_t) => (),\n    |                     -- data moved here\n@@ -260,8 +272,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:139:17\n    |\n LL |     let X(_t) = vsm[0];\n-   |           --    ^^^^^^ cannot move out of borrowed content\n-   |           |\n+   |           --    ^^^^^^\n+   |           |     |\n+   |           |     cannot move out of borrowed content\n+   |           |     help: consider using a reference instead: `&vsm[0]`\n    |           data moved here\n    |\n note: move occurs because _t has type `Y`, which does not implement the `Copy` trait\n@@ -274,8 +288,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:143:30\n    |\n LL |     if let Either::One(_t) = vrm[0] { }\n-   |                        --    ^^^^^^ cannot move out of borrowed content\n-   |                        |\n+   |                        --    ^^^^^^\n+   |                        |     |\n+   |                        |     cannot move out of borrowed content\n+   |                        |     help: consider using a reference instead: `&vrm[0]`\n    |                        data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n@@ -288,8 +304,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:147:33\n    |\n LL |     while let Either::One(_t) = vrm[0] { }\n-   |                           --    ^^^^^^ cannot move out of borrowed content\n-   |                           |\n+   |                           --    ^^^^^^\n+   |                           |     |\n+   |                           |     cannot move out of borrowed content\n+   |                           |     help: consider using a reference instead: `&vrm[0]`\n    |                           data moved here\n    |\n note: move occurs because _t has type `X`, which does not implement the `Copy` trait\n@@ -302,7 +320,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:151:11\n    |\n LL |     match vrm[0] {\n-   |           ^^^^^^ cannot move out of borrowed content\n+   |           ^^^^^^\n+   |           |\n+   |           cannot move out of borrowed content\n+   |           help: consider using a reference instead: `&vrm[0]`\n ...\n LL |         Either::One(_t)\n    |                     -- data moved here\n@@ -317,7 +338,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:158:11\n    |\n LL |     match vrm[0] {\n-   |           ^^^^^^ cannot move out of borrowed content\n+   |           ^^^^^^\n+   |           |\n+   |           cannot move out of borrowed content\n+   |           help: consider using a reference instead: `&vrm[0]`\n ...\n LL |         Either::One(_t) => (),\n    |                     -- data moved here\n@@ -332,7 +356,10 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/dont-suggest-ref.rs:166:11\n    |\n LL |     match vrm[0] {\n-   |           ^^^^^^ cannot move out of borrowed content\n+   |           ^^^^^^\n+   |           |\n+   |           cannot move out of borrowed content\n+   |           help: consider using a reference instead: `&vrm[0]`\n ...\n LL |         Either::One(_t) => (),\n    |                     -- data moved here"}]}