{"sha": "a7eff79135de09a49b50acb029925275a7b42ccb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZWZmNzkxMzVkZTA5YTQ5YjUwYWNiMDI5OTI1Mjc1YTdiNDJjY2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-28T21:48:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-28T21:48:22Z"}, "message": "Auto merge of #74861 - mark-i-m:mv-std-followup, r=Mark-Simulacrum\n\nRe-enable linkcheck after moving std", "tree": {"sha": "d3f147c8399d7a1fd19b367f8157ff421aec8d5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3f147c8399d7a1fd19b367f8157ff421aec8d5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7eff79135de09a49b50acb029925275a7b42ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7eff79135de09a49b50acb029925275a7b42ccb", "html_url": "https://github.com/rust-lang/rust/commit/a7eff79135de09a49b50acb029925275a7b42ccb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7eff79135de09a49b50acb029925275a7b42ccb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2caf854f7a0f6626377aff40b391b32f255e7457", "url": "https://api.github.com/repos/rust-lang/rust/commits/2caf854f7a0f6626377aff40b391b32f255e7457", "html_url": "https://github.com/rust-lang/rust/commit/2caf854f7a0f6626377aff40b391b32f255e7457"}, {"sha": "6726ca2b280d75fbe2b2cfbac9ac2e61a9274e7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6726ca2b280d75fbe2b2cfbac9ac2e61a9274e7c", "html_url": "https://github.com/rust-lang/rust/commit/6726ca2b280d75fbe2b2cfbac9ac2e61a9274e7c"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "111971534ba5e903026bb9b1b60a973727cfde43", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=a7eff79135de09a49b50acb029925275a7b42ccb", "patch": "@@ -546,9 +546,7 @@ mod dist {\n         );\n     }\n \n-    //FIXME(mark-i-m): reinstate this test when things are fixed...\n-    //#[test]\n-    #[allow(dead_code)]\n+    #[test]\n     fn test_docs() {\n         // Behavior of `x.py test` doing various documentation tests.\n         let mut config = configure(&[], &[]);"}, {"sha": "96cabf754490b4950273099aebc1ab3dcf81e914", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=a7eff79135de09a49b50acb029925275a7b42ccb", "patch": "@@ -693,6 +693,7 @@ impl Step for UnstableBookGen {\n         builder.create_dir(&out);\n         builder.remove_dir(&out);\n         let mut cmd = builder.tool_cmd(Tool::UnstableBookGen);\n+        cmd.arg(builder.src.join(\"library\"));\n         cmd.arg(builder.src.join(\"src\"));\n         cmd.arg(out);\n "}, {"sha": "05af7210b1c68569bd732d72c14dd571715eb9c7", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=a7eff79135de09a49b50acb029925275a7b42ccb", "patch": "@@ -106,19 +106,18 @@ impl Step for Linkcheck {\n     ///\n     /// This tool in `src/tools` will verify the validity of all our links in the\n     /// documentation to ensure we don't have a bunch of dead ones.\n-    fn run(self, _builder: &Builder<'_>) {\n-        // FIXME(mark-i-m): uncomment this after we fix the links...\n-        // let host = self.host;\n+    fn run(self, builder: &Builder<'_>) {\n+        let host = self.host;\n \n-        // builder.info(&format!(\"Linkcheck ({})\", host));\n+        builder.info(&format!(\"Linkcheck ({})\", host));\n \n-        // builder.default_doc(None);\n+        builder.default_doc(None);\n \n-        // let _time = util::timeit(&builder);\n-        // try_run(\n-        //     builder,\n-        //     builder.tool_cmd(Tool::Linkchecker).arg(builder.out.join(host.triple).join(\"doc\")),\n-        // );\n+        let _time = util::timeit(&builder);\n+        try_run(\n+            builder,\n+            builder.tool_cmd(Tool::Linkchecker).arg(builder.out.join(host.triple).join(\"doc\")),\n+        );\n     }\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {"}, {"sha": "11617911446ecee0fed0f5ee4e3e830ec9bc5942", "filename": "src/tools/unstable-book-gen/src/main.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eff79135de09a49b50acb029925275a7b42ccb/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs?ref=a7eff79135de09a49b50acb029925275a7b42ccb", "patch": "@@ -94,13 +94,15 @@ fn copy_recursive(from: &Path, to: &Path) {\n }\n \n fn main() {\n-    let src_path_str = env::args_os().skip(1).next().expect(\"source path required\");\n-    let dest_path_str = env::args_os().skip(2).next().expect(\"destination path required\");\n+    let library_path_str = env::args_os().skip(1).next().expect(\"library path required\");\n+    let src_path_str = env::args_os().skip(2).next().expect(\"source path required\");\n+    let dest_path_str = env::args_os().skip(3).next().expect(\"destination path required\");\n+    let library_path = Path::new(&library_path_str);\n     let src_path = Path::new(&src_path_str);\n     let dest_path = Path::new(&dest_path_str);\n \n     let lang_features = collect_lang_features(src_path, &mut false);\n-    let lib_features = collect_lib_features(src_path)\n+    let lib_features = collect_lib_features(library_path)\n         .into_iter()\n         .filter(|&(ref name, _)| !lang_features.contains_key(name))\n         .collect();"}]}