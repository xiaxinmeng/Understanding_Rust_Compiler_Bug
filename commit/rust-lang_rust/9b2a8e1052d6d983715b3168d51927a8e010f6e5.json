{"sha": "9b2a8e1052d6d983715b3168d51927a8e010f6e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMmE4ZTEwNTJkNmQ5ODM3MTViMzE2OGQ1MTkyN2E4ZTAxMGY2ZTU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-05T23:28:04Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-01-05T23:29:24Z"}, "message": "Revert \"std: adjust requested stack size for thread-local storage.\"\n\nThis reverts commit f1b5f59287106fc511d29c425255bd343608065c.\n\nUsing a private function of a library is a bad idea: several people (on\nLinux) were meeting with linking errors because of it (different/older\nversions of glibc).", "tree": {"sha": "4816a3355d33ce5d314017c47d904169306abbbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4816a3355d33ce5d314017c47d904169306abbbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b2a8e1052d6d983715b3168d51927a8e010f6e5", "comment_count": 10, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b2a8e1052d6d983715b3168d51927a8e010f6e5", "html_url": "https://github.com/rust-lang/rust/commit/9b2a8e1052d6d983715b3168d51927a8e010f6e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b2a8e1052d6d983715b3168d51927a8e010f6e5/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bca7fdf9bdd15a7d008d99dc1252d3c9ffd35be", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bca7fdf9bdd15a7d008d99dc1252d3c9ffd35be", "html_url": "https://github.com/rust-lang/rust/commit/4bca7fdf9bdd15a7d008d99dc1252d3c9ffd35be"}], "stats": {"total": 42, "additions": 1, "deletions": 41}, "files": [{"sha": "f4f4aaa276524231e34a3efdfe95c6bc11010fa4", "filename": "src/libstd/rt/thread.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9b2a8e1052d6d983715b3168d51927a8e010f6e5/src%2Flibstd%2Frt%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b2a8e1052d6d983715b3168d51927a8e010f6e5/src%2Flibstd%2Frt%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fthread.rs?ref=9b2a8e1052d6d983715b3168d51927a8e010f6e5", "patch": "@@ -202,10 +202,8 @@ mod imp {\n         let mut native: libc::pthread_t = intrinsics::uninit();\n         let mut attr: libc::pthread_attr_t = intrinsics::uninit();\n         assert_eq!(pthread_attr_init(&mut attr), 0);\n-\n-        let min_stack = get_min_stack(&attr);\n         assert_eq!(pthread_attr_setstacksize(&mut attr,\n-                                             min_stack + stack as libc::size_t), 0);\n+                                             stack as libc::size_t), 0);\n         assert_eq!(pthread_attr_setdetachstate(&mut attr,\n                                                PTHREAD_CREATE_JOINABLE), 0);\n \n@@ -230,18 +228,6 @@ mod imp {\n     #[cfg(not(target_os = \"macos\"), not(target_os = \"android\"))]\n     pub unsafe fn yield_now() { assert_eq!(pthread_yield(), 0); }\n \n-    // Issue #6233. On some platforms, putting a lot of data in\n-    // thread-local storage means we need to set the stack-size to be\n-    // larger.\n-    #[cfg(target_os = \"linux\")]\n-    unsafe fn get_min_stack(attr: &libc::pthread_attr_t) -> libc::size_t {\n-        __pthread_get_minstack(attr)\n-    }\n-    #[cfg(not(target_os = \"linux\"))]\n-    unsafe fn get_min_stack(_: &libc::pthread_attr_t) -> libc::size_t {\n-        0\n-    }\n-\n     extern {\n         fn pthread_create(native: *mut libc::pthread_t,\n                           attr: *libc::pthread_attr_t,\n@@ -261,10 +247,6 @@ mod imp {\n         fn sched_yield() -> libc::c_int;\n         #[cfg(not(target_os = \"macos\"), not(target_os = \"android\"))]\n         fn pthread_yield() -> libc::c_int;\n-\n-        // This appears to be glibc specific\n-        #[cfg(target_os = \"linux\")]\n-        fn __pthread_get_minstack(attr: *libc::pthread_attr_t) -> libc::size_t;\n     }\n }\n "}, {"sha": "90b4b806015f7a27dc4b0f81e42d571fab38c709", "filename": "src/test/run-pass/large-thread-local-data.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4bca7fdf9bdd15a7d008d99dc1252d3c9ffd35be/src%2Ftest%2Frun-pass%2Flarge-thread-local-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bca7fdf9bdd15a7d008d99dc1252d3c9ffd35be/src%2Ftest%2Frun-pass%2Flarge-thread-local-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flarge-thread-local-data.rs?ref=4bca7fdf9bdd15a7d008d99dc1252d3c9ffd35be", "patch": "@@ -1,22 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Issue #6233\n-// xfail-fast feature doesn't work\n-\n-#[feature(thread_local)];\n-#[allow(dead_code)];\n-\n-static SIZE: uint = 1 << 23;\n-\n-#[thread_local]\n-static FOO: [u8, .. SIZE] = [0, .. SIZE];\n-\n-fn main() {}"}]}