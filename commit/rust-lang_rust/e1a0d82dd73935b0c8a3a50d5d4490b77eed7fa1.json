{"sha": "e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYTBkODJkZDczOTM1YjBjOGEzYTUwZDVkNDQ5MGI3N2VlZDdmYTE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-08-09T23:36:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-09T23:36:39Z"}, "message": "Merge pull request #1869 from topecongiro/configs-error_on_line_overflow_comments\n\nAdd error_on_line_overflow_comments config option", "tree": {"sha": "0599d13f1b6743134ab802280a0ea08d841c7ba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0599d13f1b6743134ab802280a0ea08d841c7ba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1", "html_url": "https://github.com/rust-lang/rust/commit/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62689ef568fb2e64e3666ea7044ffa0f005f2fb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/62689ef568fb2e64e3666ea7044ffa0f005f2fb5", "html_url": "https://github.com/rust-lang/rust/commit/62689ef568fb2e64e3666ea7044ffa0f005f2fb5"}, {"sha": "e69a2aba18f0da8e004c0417a574fe001489a0fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e69a2aba18f0da8e004c0417a574fe001489a0fc", "html_url": "https://github.com/rust-lang/rust/commit/e69a2aba18f0da8e004c0417a574fe001489a0fc"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "fbba5e19490fdf718632680004421107badd021e", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1", "patch": "@@ -501,6 +501,7 @@ create_config! {\n          via the --file-lines option\";\n     max_width: usize, 100, \"Maximum width of each line\";\n     error_on_line_overflow: bool, true, \"Error if unable to get all lines within max_width\";\n+    error_on_line_overflow_comments: bool, true, \"Error if unable to get comments within max_width\";\n     tab_spaces: usize, 4, \"Number of spaces per tab\";\n     fn_call_width: usize, 60,\n         \"Maximum width of the args of a function call before falling back to vertical formatting\";"}, {"sha": "555aa66671a281a16cac40fb0141ebe935154351", "filename": "src/lib.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1", "patch": "@@ -599,6 +599,8 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n     let mut newline_count = 0;\n     let mut errors = vec![];\n     let mut issue_seeker = BadIssueSeeker::new(config.report_todo(), config.report_fixme());\n+    let mut prev_char: Option<char> = None;\n+    let mut is_comment = false;\n \n     for (c, b) in text.chars() {\n         if c == '\\r' {\n@@ -626,7 +628,9 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n                 }\n \n                 // Check for any line width errors we couldn't correct.\n-                if config.error_on_line_overflow() && line_len > config.max_width() {\n+                let report_error_on_line_overflow = config.error_on_line_overflow() &&\n+                    (config.error_on_line_overflow_comments() || !is_comment);\n+                if report_error_on_line_overflow && line_len > config.max_width() {\n                     errors.push(FormattingError {\n                         line: cur_line,\n                         kind: ErrorKind::LineOverflow(line_len, config.max_width()),\n@@ -638,16 +642,25 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n             cur_line += 1;\n             newline_count += 1;\n             last_wspace = None;\n+            prev_char = None;\n+            is_comment = false;\n         } else {\n             newline_count = 0;\n             line_len += 1;\n             if c.is_whitespace() {\n                 if last_wspace.is_none() {\n                     last_wspace = Some(b);\n                 }\n+            } else if c == '/' {\n+                match prev_char {\n+                    Some('/') => is_comment = true,\n+                    _ => (),\n+                }\n+                last_wspace = None;\n             } else {\n                 last_wspace = None;\n             }\n+            prev_char = Some(c);\n         }\n     }\n "}, {"sha": "9fd9e01e274fc97bcbae741bb4db444762b0aa1c", "filename": "tests/target/configs-error_on_line_overflow_comment-false.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1/tests%2Ftarget%2Fconfigs-error_on_line_overflow_comment-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1/tests%2Ftarget%2Fconfigs-error_on_line_overflow_comment-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-error_on_line_overflow_comment-false.rs?ref=e1a0d82dd73935b0c8a3a50d5d4490b77eed7fa1", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-error_on_line_overflow_comments: false\n+// Error on line overflow comment\n+\n+// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+fn main() {\n+    // aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+}"}]}