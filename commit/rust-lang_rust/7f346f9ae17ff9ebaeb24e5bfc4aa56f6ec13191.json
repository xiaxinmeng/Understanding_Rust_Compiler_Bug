{"sha": "7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMzQ2ZjlhZTE3ZmY5ZWJhZWIyNGU1YmZjNGFhNTZmNmVjMTMxOTE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-26T21:40:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-26T21:40:56Z"}, "message": "Merge #6257\n\n6257: Don't suggest extracting out 1-tuple enum variants r=matklad a=repnop\n\nFixes #6241.\n\nCo-authored-by: Wesley Norris <repnop@outlook.com>", "tree": {"sha": "1c6cc9763a333ba73c097956b926d4d90b05b163", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c6cc9763a333ba73c097956b926d4d90b05b163"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfl0JoCRBK7hj4Ov3rIwAAdHIIAAeOiitQK+9Bz9QBACJQ3R9i\nUuw1Oc1L7RiosBdB/768RbUn+cgmhNjafxzToU6k29G2zqB6Moywcrm/BztSsBdS\n6ueQY2dSMNZWCgSRyJJP37U8YsXMabczS4dGqT66TW/2J87DSfC2Pf2AZLOgylpT\nhkqLhNrZYe49Cw8DPXBZzRJ3LjMqfP2E2GIpvGBaMTznFCyAvXINj2JV1P2l2nlV\n/Cwq8sM6C9pH48g/StWGFtdA9zm9LRT0y8vBjjmYz8hmOVqbhe+iim/bQXOAVlqI\nt5Ok2oFkQNOc7NfA78iT/QH6Lm7ojzHIiMj34nz+biV6r7Tho/2P59ak1vngQX4=\n=Frp0\n-----END PGP SIGNATURE-----\n", "payload": "tree 1c6cc9763a333ba73c097956b926d4d90b05b163\nparent db2c379baeeb2f676540368f89d77390c967541f\nparent b9790a23bf4a424ad3ed71b95f36c2d639454381\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1603748456 +0000\ncommitter GitHub <noreply@github.com> 1603748456 +0000\n\nMerge #6257\n\n6257: Don't suggest extracting out 1-tuple enum variants r=matklad a=repnop\n\nFixes #6241.\n\nCo-authored-by: Wesley Norris <repnop@outlook.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191", "html_url": "https://github.com/rust-lang/rust/commit/7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db2c379baeeb2f676540368f89d77390c967541f", "url": "https://api.github.com/repos/rust-lang/rust/commits/db2c379baeeb2f676540368f89d77390c967541f", "html_url": "https://github.com/rust-lang/rust/commit/db2c379baeeb2f676540368f89d77390c967541f"}, {"sha": "b9790a23bf4a424ad3ed71b95f36c2d639454381", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9790a23bf4a424ad3ed71b95f36c2d639454381", "html_url": "https://github.com/rust-lang/rust/commit/b9790a23bf4a424ad3ed71b95f36c2d639454381"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "178718c5e1ef9f99c1f8cb7a1c7e7004f2bf9b4d", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=7f346f9ae17ff9ebaeb24e5bfc4aa56f6ec13191", "patch": "@@ -37,6 +37,12 @@ pub(crate) fn extract_struct_from_enum_variant(\n         ast::StructKind::Tuple(field_list) => field_list,\n         _ => return None,\n     };\n+\n+    // skip 1-tuple variants\n+    if field_list.fields().count() == 1 {\n+        return None;\n+    }\n+\n     let variant_name = variant.name()?.to_string();\n     let variant_hir = ctx.sema.to_def(&variant)?;\n     if existing_struct_def(ctx.db(), &variant_name, &variant_hir) {\n@@ -228,17 +234,6 @@ mod tests {\n             \"enum A { <|>One(u32, u32) }\",\n             r#\"struct One(pub u32, pub u32);\n \n-enum A { One(One) }\"#,\n-        );\n-    }\n-\n-    #[test]\n-    fn test_extract_struct_one_field() {\n-        check_assist(\n-            extract_struct_from_enum_variant,\n-            \"enum A { <|>One(u32) }\",\n-            r#\"struct One(pub u32);\n-\n enum A { One(One) }\"#,\n         );\n     }\n@@ -324,4 +319,9 @@ fn another_fn() {\n         enum A { <|>One(u8) }\"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_extract_not_applicable_one_field() {\n+        check_not_applicable(r\"enum A { <|>One(u32) }\");\n+    }\n }"}]}