{"sha": "b2aeb071370afeefceec4d21734e801837dd72e4", "node_id": "C_kwDOAAsO6NoAKGIyYWViMDcxMzcwYWZlZWZjZWVjNGQyMTczNGU4MDE4MzdkZDcyZTQ", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-04T20:41:24Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-11T19:43:04Z"}, "message": "Use trimmed instead of line for performance", "tree": {"sha": "5a409995cc1f8a1ceb0c952d27cc7db58ba1c4a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a409995cc1f8a1ceb0c952d27cc7db58ba1c4a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2aeb071370afeefceec4d21734e801837dd72e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2aeb071370afeefceec4d21734e801837dd72e4", "html_url": "https://github.com/rust-lang/rust/commit/b2aeb071370afeefceec4d21734e801837dd72e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2aeb071370afeefceec4d21734e801837dd72e4/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a20d52694c9a293d2fbf1aa7cc1c1643b3e30ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a20d52694c9a293d2fbf1aa7cc1c1643b3e30ec", "html_url": "https://github.com/rust-lang/rust/commit/3a20d52694c9a293d2fbf1aa7cc1c1643b3e30ec"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "75a4586cb7f1ce5f85b79d80e6a8e4999d3c7217", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2aeb071370afeefceec4d21734e801837dd72e4/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2aeb071370afeefceec4d21734e801837dd72e4/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=b2aeb071370afeefceec4d21734e801837dd72e4", "patch": "@@ -431,14 +431,14 @@ pub fn check(path: &Path, bad: &mut bool) {\n                 }\n \n                 if filename.ends_with(\".ftl\") {\n-                    let line_backticks = line.chars().filter(|ch| *ch == '`').count();\n+                    let line_backticks = trimmed.chars().filter(|ch| *ch == '`').count();\n                     if line_backticks % 2 == 1 {\n                         suppressible_tidy_err!(err, skip_odd_backticks, \"odd number of backticks\");\n                     }\n-                } else if line.contains(\"//\") {\n+                } else if trimmed.contains(\"//\") {\n                     let (start_line, mut backtick_count) = comment_block.unwrap_or((i + 1, 0));\n-                    let line_backticks = line.chars().filter(|ch| *ch == '`').count();\n-                    let comment_text = line.split(\"//\").nth(1).unwrap();\n+                    let line_backticks = trimmed.chars().filter(|ch| *ch == '`').count();\n+                    let comment_text = trimmed.split(\"//\").nth(1).unwrap();\n                     // This check ensures that we don't lint for code that has `//` in a string literal\n                     if line_backticks % 2 == 1 {\n                         backtick_count += comment_text.chars().filter(|ch| *ch == '`').count();"}]}