{"sha": "cacb3bc9c741a7d41a1085af850cd3ff852307f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhY2IzYmM5Yzc0MWE3ZDQxYTEwODVhZjg1MGNkM2ZmODUyMzA3ZjU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2017-02-10T21:38:20Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2017-02-13T18:41:27Z"}, "message": "fix up linkchecker\n\n1. skip png files\n2. skip fragments for the book and nomicon, as these are added by JS\n3. Actually print the filename for errors", "tree": {"sha": "2afcab96e3bea14dc3a725e5e83a361b59b222dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2afcab96e3bea14dc3a725e5e83a361b59b222dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cacb3bc9c741a7d41a1085af850cd3ff852307f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cacb3bc9c741a7d41a1085af850cd3ff852307f5", "html_url": "https://github.com/rust-lang/rust/commit/cacb3bc9c741a7d41a1085af850cd3ff852307f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cacb3bc9c741a7d41a1085af850cd3ff852307f5/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f1d1c6d9a7be5e427bace30e740b16b25f25c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1d1c6d9a7be5e427bace30e740b16b25f25c92", "html_url": "https://github.com/rust-lang/rust/commit/7f1d1c6d9a7be5e427bace30e740b16b25f25c92"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "304c722bbe5dae0b71330b748a6c90aa3adc6af8", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cacb3bc9c741a7d41a1085af850cd3ff852307f5/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cacb3bc9c741a7d41a1085af850cd3ff852307f5/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=cacb3bc9c741a7d41a1085af850cd3ff852307f5", "patch": "@@ -171,6 +171,13 @@ fn check(cache: &mut Cache,\n             }\n         }\n \n+        if let Some(extension) = path.extension() {\n+            // don't check these files\n+            if extension == \"png\" {\n+                return;\n+            }\n+        }\n+\n         // Alright, if we've found a file name then this file had better\n         // exist! If it doesn't then we register and print an error.\n         if path.exists() {\n@@ -188,7 +195,9 @@ fn check(cache: &mut Cache,\n             let res = load_file(cache, root, path.clone(), FromRedirect(false));\n             let (pretty_path, contents) = match res {\n                 Ok(res) => res,\n-                Err(LoadError::IOError(err)) => panic!(format!(\"{}\", err)),\n+                Err(LoadError::IOError(err)) => {\n+                    panic!(format!(\"error loading {}: {}\", path.display(), err));\n+                }\n                 Err(LoadError::BrokenRedirect(target, _)) => {\n                     *errors = true;\n                     println!(\"{}:{}: broken redirect to {}\",\n@@ -200,6 +209,13 @@ fn check(cache: &mut Cache,\n                 Err(LoadError::IsRedirect) => unreachable!(),\n             };\n \n+            // we don't check the book for fragments because they're added via JS\n+            for book in [\"book/\", \"nomicon/\"].iter() {\n+                if !pretty_path.to_str().unwrap().starts_with(book) {\n+                    return;\n+                }\n+            }\n+\n             if let Some(ref fragment) = fragment {\n                 // Fragments like `#1-6` are most likely line numbers to be\n                 // interpreted by javascript, so we're ignoring these"}]}