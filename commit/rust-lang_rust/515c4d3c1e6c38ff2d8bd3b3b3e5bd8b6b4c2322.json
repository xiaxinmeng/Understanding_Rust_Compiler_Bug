{"sha": "515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNWM0ZDNjMWU2YzM4ZmYyZDhiZDNiM2IzZTViZDhiNmI0YzIzMjI=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-04-21T19:35:39Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-06-14T13:51:49Z"}, "message": "specialize zip: TrustedRandomAccess for Zip", "tree": {"sha": "dc627e39910f516c647caec335d06a8a8d912d6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc627e39910f516c647caec335d06a8a8d912d6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322", "html_url": "https://github.com/rust-lang/rust/commit/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8f2e9b3597b4ff5dc6230c327b35a2b0e7122c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f2e9b3597b4ff5dc6230c327b35a2b0e7122c1", "html_url": "https://github.com/rust-lang/rust/commit/a8f2e9b3597b4ff5dc6230c327b35a2b0e7122c1"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "3ca37c4090387f21ff17f43b82c2e9ed3722226a", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322", "patch": "@@ -785,6 +785,17 @@ impl<A, B> ZipImpl<A, B> for Zip<A, B>\n impl<A, B> ExactSizeIterator for Zip<A, B>\n     where A: ExactSizeIterator, B: ExactSizeIterator {}\n \n+#[doc(hidden)]\n+unsafe impl<A, B> TrustedRandomAccess for Zip<A, B>\n+    where A: TrustedRandomAccess,\n+          B: TrustedRandomAccess,\n+{\n+    unsafe fn get_unchecked(&mut self, i: usize) -> (A::Item, B::Item) {\n+        (self.a.get_unchecked(i), self.b.get_unchecked(i))\n+    }\n+\n+}\n+\n /// An iterator that maps the values of `iter` with `f`.\n ///\n /// This `struct` is created by the [`map()`] method on [`Iterator`]. See its"}]}