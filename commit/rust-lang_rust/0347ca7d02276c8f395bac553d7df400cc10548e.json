{"sha": "0347ca7d02276c8f395bac553d7df400cc10548e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNDdjYTdkMDIyNzZjOGYzOTViYWM1NTNkN2RmNDAwY2MxMDU0OGU=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-01T17:15:11Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T10:13:09Z"}, "message": "Explain why we forward to self-printing during self-printing", "tree": {"sha": "76854cce7639fe4f095c810f0c1b884704536d21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76854cce7639fe4f095c810f0c1b884704536d21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0347ca7d02276c8f395bac553d7df400cc10548e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0347ca7d02276c8f395bac553d7df400cc10548e", "html_url": "https://github.com/rust-lang/rust/commit/0347ca7d02276c8f395bac553d7df400cc10548e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0347ca7d02276c8f395bac553d7df400cc10548e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1074edb64723092e06ba5267b9482422e569b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1074edb64723092e06ba5267b9482422e569b7b", "html_url": "https://github.com/rust-lang/rust/commit/d1074edb64723092e06ba5267b9482422e569b7b"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "838e9819b0fcd7f218ff5ef38c976b3f5ea690ac", "filename": "compiler/rustc_middle/src/ty/consts/int.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0347ca7d02276c8f395bac553d7df400cc10548e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0347ca7d02276c8f395bac553d7df400cc10548e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs?ref=0347ca7d02276c8f395bac553d7df400cc10548e", "patch": "@@ -194,7 +194,7 @@ impl ScalarInt {\n         f_int: impl FnOnce(u64) -> InterpResult<'tcx, u64>,\n     ) -> InterpResult<'tcx, Self> {\n         assert_eq!(u64::from(self.size), dl.pointer_size.bytes());\n-        Ok(Self::try_from_uint(f_int(u64::try_from(self.data).unwrap())?, self.size).unwrap())\n+        Ok(Self::try_from_uint(f_int(u64::try_from(self.data).unwrap())?, self.size()).unwrap())\n     }\n \n     #[inline]\n@@ -328,6 +328,7 @@ impl fmt::Debug for ScalarInt {\n             self.check_data();\n             write!(f, \"<ZST>\")\n         } else {\n+            // Dispatch to LowerHex below.\n             write!(f, \"0x{:x}\", self)\n         }\n     }"}]}