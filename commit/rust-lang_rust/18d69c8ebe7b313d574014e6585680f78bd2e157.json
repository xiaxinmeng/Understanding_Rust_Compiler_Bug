{"sha": "18d69c8ebe7b313d574014e6585680f78bd2e157", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZDY5YzhlYmU3YjMxM2Q1NzQwMTRlNjU4NTY4MGY3OGJkMmUxNTc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-08-13T13:13:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-08-13T13:13:50Z"}, "message": "bless tests with compare-mode=nll", "tree": {"sha": "7a3edfba5c3b9b4c922370c959183ad8dadfcb16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a3edfba5c3b9b4c922370c959183ad8dadfcb16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18d69c8ebe7b313d574014e6585680f78bd2e157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18d69c8ebe7b313d574014e6585680f78bd2e157", "html_url": "https://github.com/rust-lang/rust/commit/18d69c8ebe7b313d574014e6585680f78bd2e157", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18d69c8ebe7b313d574014e6585680f78bd2e157/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7c7c52dbc462048cb60d4dca43b42d753025a6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c7c52dbc462048cb60d4dca43b42d753025a6b", "html_url": "https://github.com/rust-lang/rust/commit/d7c7c52dbc462048cb60d4dca43b42d753025a6b"}], "stats": {"total": 674, "additions": 538, "deletions": 136}, "files": [{"sha": "fab5892dae18387c816b58bbd7fc9758e28736f2", "filename": "src/test/ui/async-await/issues/issue-63388-1.nll.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-1.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -0,0 +1,24 @@\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/issue-63388-1.rs:14:10\n+   |\n+LL |     ) -> &dyn Foo\n+   |          ^^^^^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#27r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/issue-63388-1.rs:15:5\n+   |\n+LL |       async fn do_sth<'a>(\n+   |                       -- lifetime `'a` defined here\n+LL |           &'a self, foo: &dyn Foo\n+   |                          - lifetime `'_` defined here\n+LL |       ) -> &dyn Foo\n+LL | /     {\n+LL | |         foo\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'_`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0700`."}, {"sha": "b91cdc1b770fba29e31243c53aef0bb2bac1719c", "filename": "src/test/ui/async-await/issues/issue-63388-2.nll.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-63388-2.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -0,0 +1,11 @@\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/issue-63388-2.rs:14:10\n+   |\n+LL |     ) -> &dyn Foo\n+   |          ^ help: consider using the named lifetime: `&'a`\n+   |\n+   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `foo` or `bar`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0106`."}, {"sha": "94646c2cfe0c3468a66e6654aefef0583153cc0d", "filename": "src/test/ui/self/arbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch-async.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -1,27 +1,46 @@\n-error[E0106]: missing lifetime specifier\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:10:45\n    |\n LL |     async fn a(self: Pin<&Foo>, f: &Foo) -> &Foo { f }\n-   |                                             ^\n+   |                                             ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:15:60\n+error: lifetime may not live long enough\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:10:50\n    |\n-LL |     async fn c(self: Pin<&Self>, f: &Foo, g: &Foo) -> (Pin<&Foo>, &Foo) { (self, f) }\n-   |                                                            ^\n-   |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |     async fn a(self: Pin<&Foo>, f: &Foo) -> &Foo { f }\n+   |                          -                       ^^^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+   |                          |\n+   |                          lifetime `'_` defined here\n+   |                          lifetime `'_` defined here\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:15:67\n+error: lifetime may not live long enough\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:13:73\n    |\n LL |     async fn c(self: Pin<&Self>, f: &Foo, g: &Foo) -> (Pin<&Foo>, &Foo) { (self, f) }\n-   |                                                                   ^\n+   |                          -                                              ^^^^^^^^^^^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+   |                          |\n+   |                          lifetime `'_` defined here\n+   |                          lifetime `'_` defined here\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:19:58\n+   |\n+LL |     async fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n+   |                                                          ^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch-async.rs:19:62\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |     async fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n+   |                  --              -                           ^^^^^^^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'a`\n+   |                  |               |\n+   |                  |               lifetime `'_` defined here\n+   |                  lifetime `'a` defined here\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n \n-For more information about this error, try `rustc --explain E0106`.\n+For more information about this error, try `rustc --explain E0700`."}, {"sha": "779b21e21a097d36cec271898f059dec8591d142", "filename": "src/test/ui/self/elision/lt-ref-self-async.nll.stderr", "status": "modified", "additions": 97, "deletions": 25, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self-async.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -1,51 +1,123 @@\n-error[E0106]: missing lifetime specifier\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/lt-ref-self-async.rs:15:42\n    |\n LL |     async fn ref_self(&self, f: &u32) -> &u32 {\n-   |                                          ^\n+   |                                          ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#28r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/lt-ref-self-async.rs:23:48\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self-async.rs:15:47\n+   |\n+LL |       async fn ref_self(&self, f: &u32) -> &u32 {\n+   |  _______________________-_______________________^\n+   | |                       |\n+   | |                       lifetime `'_` defined here\n+   | |                       lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/lt-ref-self-async.rs:21:48\n    |\n LL |     async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n-   |                                                ^\n+   |                                                ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#28r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/lt-ref-self-async.rs:29:57\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self-async.rs:21:53\n+   |\n+LL |       async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n+   |  _____________________________-_______________________^\n+   | |                             |\n+   | |                             lifetime `'_` defined here\n+   | |                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/lt-ref-self-async.rs:25:57\n    |\n LL |     async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n-   |                                                         ^\n+   |                                                         ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#28r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self-async.rs:25:62\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n+   |  _____________________________________-________________________^\n+   | |                                     |\n+   | |                                     lifetime `'_` defined here\n+   | |                                     lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/lt-ref-self-async.rs:35:57\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/lt-ref-self-async.rs:29:57\n    |\n LL |     async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n-   |                                                         ^\n+   |                                                         ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#28r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self-async.rs:29:62\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n+   |  _____________________________________-________________________^\n+   | |                                     |\n+   | |                                     lifetime `'_` defined here\n+   | |                                     lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/lt-ref-self-async.rs:41:66\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/lt-ref-self-async.rs:33:66\n    |\n LL |     async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n-   |                                                                  ^\n+   |                                                                  ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#28r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/lt-ref-self-async.rs:47:62\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self-async.rs:33:71\n+   |\n+LL |       async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n+   |  _____________________________________________-_________________________^\n+   | |                                             |\n+   | |                                             lifetime `'_` defined here\n+   | |                                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/lt-ref-self-async.rs:37:62\n    |\n LL |     async fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n-   |                                                              ^\n+   |                                                              ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#28r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self-async.rs:37:67\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n+   |  _________________________________________-_________________________^\n+   | |                                         |\n+   | |                                         lifetime `'_` defined here\n+   | |                                         lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 12 previous errors\n \n-For more information about this error, try `rustc --explain E0106`.\n+For more information about this error, try `rustc --explain E0700`."}, {"sha": "cfe91dde37354c09f337fabbdc7a32a517566814", "filename": "src/test/ui/self/elision/ref-mut-self-async.nll.stderr", "status": "modified", "additions": 97, "deletions": 25, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self-async.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -1,51 +1,123 @@\n-error[E0106]: missing lifetime specifier\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-self-async.rs:15:46\n    |\n LL |     async fn ref_self(&mut self, f: &u32) -> &u32 {\n-   |                                              ^\n+   |                                              ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-self-async.rs:23:52\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self-async.rs:15:51\n+   |\n+LL |       async fn ref_self(&mut self, f: &u32) -> &u32 {\n+   |  _______________________-___________________________^\n+   | |                       |\n+   | |                       lifetime `'_` defined here\n+   | |                       lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-self-async.rs:21:52\n    |\n LL |     async fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n-   |                                                    ^\n+   |                                                    ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-self-async.rs:29:61\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self-async.rs:21:57\n+   |\n+LL |       async fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n+   |  _____________________________-___________________________^\n+   | |                             |\n+   | |                             lifetime `'_` defined here\n+   | |                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-self-async.rs:25:61\n    |\n LL |     async fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n-   |                                                             ^\n+   |                                                             ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self-async.rs:25:66\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n+   |  _____________________________________-____________________________^\n+   | |                                     |\n+   | |                                     lifetime `'_` defined here\n+   | |                                     lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-self-async.rs:35:61\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-self-async.rs:29:61\n    |\n LL |     async fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n-   |                                                             ^\n+   |                                                             ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self-async.rs:29:66\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n+   |  _____________________________________-____________________________^\n+   | |                                     |\n+   | |                                     lifetime `'_` defined here\n+   | |                                     lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-self-async.rs:41:70\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-self-async.rs:33:70\n    |\n LL |     async fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n-   |                                                                      ^\n+   |                                                                      ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-self-async.rs:47:70\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self-async.rs:33:75\n+   |\n+LL |       async fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n+   |  _____________________________________________-_____________________________^\n+   | |                                             |\n+   | |                                             lifetime `'_` defined here\n+   | |                                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-self-async.rs:37:70\n    |\n LL |     async fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n-   |                                                                      ^\n+   |                                                                      ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self-async.rs:37:75\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n+   |  _____________________________________________-_____________________________^\n+   | |                                             |\n+   | |                                             lifetime `'_` defined here\n+   | |                                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 12 previous errors\n \n-For more information about this error, try `rustc --explain E0106`.\n+For more information about this error, try `rustc --explain E0700`."}, {"sha": "98fa5e2545186b5268038a2f516addc94fe1e6a4", "filename": "src/test/ui/self/elision/ref-mut-struct-async.nll.stderr", "status": "modified", "additions": 81, "deletions": 21, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct-async.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -1,43 +1,103 @@\n-error[E0106]: missing lifetime specifier\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-mut-struct-async.rs:15:56\n    |\n LL |     async fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n-   |                                                        ^\n+   |                                                        ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-struct-async.rs:21:65\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct-async.rs:15:61\n+   |\n+LL |       async fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n+   |  _______________________________-_____________________________^\n+   | |                               |\n+   | |                               lifetime `'_` defined here\n+   | |                               lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-struct-async.rs:19:65\n    |\n LL |     async fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n-   |                                                                 ^\n+   |                                                                 ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-struct-async.rs:27:65\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct-async.rs:19:70\n+   |\n+LL |       async fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n+   |  _______________________________________-______________________________^\n+   | |                                       |\n+   | |                                       lifetime `'_` defined here\n+   | |                                       lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-struct-async.rs:23:65\n    |\n LL |     async fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n-   |                                                                 ^\n+   |                                                                 ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct-async.rs:23:70\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n+   |  _______________________________________-______________________________^\n+   | |                                       |\n+   | |                                       lifetime `'_` defined here\n+   | |                                       lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-struct-async.rs:33:74\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-struct-async.rs:27:74\n    |\n LL |     async fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u32 {\n-   |                                                                          ^\n+   |                                                                          ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct-async.rs:27:79\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u32 {\n+   |  _______________________________________________-_______________________________^\n+   | |                                               |\n+   | |                                               lifetime `'_` defined here\n+   | |                                               lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-mut-struct-async.rs:39:74\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-mut-struct-async.rs:31:74\n    |\n LL |     async fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u32 {\n-   |                                                                          ^\n+   |                                                                          ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct-async.rs:31:79\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u32 {\n+   |  _______________________________________________-_______________________________^\n+   | |                                               |\n+   | |                                               lifetime `'_` defined here\n+   | |                                               lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 10 previous errors\n \n-For more information about this error, try `rustc --explain E0106`.\n+For more information about this error, try `rustc --explain E0700`."}, {"sha": "f991f6d9f7fa1181ab9a260ebf0d95a0d68cb069", "filename": "src/test/ui/self/elision/ref-self-async.nll.stderr", "status": "modified", "additions": 113, "deletions": 29, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self-async.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -1,59 +1,143 @@\n-error[E0106]: missing lifetime specifier\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-self-async.rs:24:42\n    |\n LL |     async fn ref_self(&self, f: &u32) -> &u32 {\n-   |                                          ^\n+   |                                          ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-self-async.rs:32:48\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self-async.rs:24:47\n+   |\n+LL |       async fn ref_self(&self, f: &u32) -> &u32 {\n+   |  _______________________-_______________________^\n+   | |                       |\n+   | |                       lifetime `'_` defined here\n+   | |                       lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-self-async.rs:30:48\n    |\n LL |     async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n-   |                                                ^\n+   |                                                ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-self-async.rs:38:57\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self-async.rs:30:53\n+   |\n+LL |       async fn ref_Self(self: &Self, f: &u32) -> &u32 {\n+   |  _____________________________-_______________________^\n+   | |                             |\n+   | |                             lifetime `'_` defined here\n+   | |                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-self-async.rs:34:57\n    |\n LL |     async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n-   |                                                         ^\n+   |                                                         ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self-async.rs:34:62\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n+   |  _____________________________________-________________________^\n+   | |                                     |\n+   | |                                     lifetime `'_` defined here\n+   | |                                     lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-self-async.rs:44:57\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-self-async.rs:38:57\n    |\n LL |     async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n-   |                                                         ^\n+   |                                                         ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-self-async.rs:50:66\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self-async.rs:38:62\n+   |\n+LL |       async fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n+   |  _____________________________________-________________________^\n+   | |                                     |\n+   | |                                     lifetime `'_` defined here\n+   | |                                     lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-self-async.rs:42:66\n    |\n LL |     async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n-   |                                                                  ^\n+   |                                                                  ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self-async.rs:42:71\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n+   |  _____________________________________________-_________________________^\n+   | |                                             |\n+   | |                                             lifetime `'_` defined here\n+   | |                                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-self-async.rs:56:66\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-self-async.rs:46:66\n    |\n LL |     async fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n-   |                                                                  ^\n+   |                                                                  ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-self-async.rs:62:69\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self-async.rs:46:71\n+   |\n+LL |       async fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n+   |  _____________________________________________-_________________________^\n+   | |                                             |\n+   | |                                             lifetime `'_` defined here\n+   | |                                             lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-self-async.rs:50:69\n    |\n LL |     async fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n-   |                                                                     ^\n+   |                                                                     ^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self-async.rs:50:73\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n+   |  ____________________________________________-____________________________^\n+   | |                                            |\n+   | |                                            lifetime `'_` defined here\n+   | |                                            lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 14 previous errors\n \n-For more information about this error, try `rustc --explain E0106`.\n+For more information about this error, try `rustc --explain E0700`."}, {"sha": "437d403e044ede637eaa2ef5748f1964aceb5194", "filename": "src/test/ui/self/elision/ref-struct-async.nll.stderr", "status": "modified", "additions": 81, "deletions": 21, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18d69c8ebe7b313d574014e6585680f78bd2e157/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct-async.nll.stderr?ref=18d69c8ebe7b313d574014e6585680f78bd2e157", "patch": "@@ -1,43 +1,103 @@\n-error[E0106]: missing lifetime specifier\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/ref-struct-async.rs:15:52\n    |\n LL |     async fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n-   |                                                    ^\n+   |                                                    ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-struct-async.rs:21:61\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct-async.rs:15:57\n+   |\n+LL |       async fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |  _______________________________-_________________________^\n+   | |                               |\n+   | |                               lifetime `'_` defined here\n+   | |                               lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-struct-async.rs:19:61\n    |\n LL |     async fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n-   |                                                             ^\n+   |                                                             ^^^^\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-struct-async.rs:27:61\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct-async.rs:19:66\n+   |\n+LL |       async fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n+   |  _______________________________________-__________________________^\n+   | |                                       |\n+   | |                                       lifetime `'_` defined here\n+   | |                                       lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n+\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-struct-async.rs:23:61\n    |\n LL |     async fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n-   |                                                             ^\n+   |                                                             ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct-async.rs:23:66\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n+   |  _______________________________________-__________________________^\n+   | |                                       |\n+   | |                                       lifetime `'_` defined here\n+   | |                                       lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-struct-async.rs:33:70\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-struct-async.rs:27:70\n    |\n LL |     async fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n-   |                                                                      ^\n+   |                                                                      ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct-async.rs:27:75\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n+   |  _______________________________________________-___________________________^\n+   | |                                               |\n+   | |                                               lifetime `'_` defined here\n+   | |                                               lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error[E0106]: missing lifetime specifier\n-  --> $DIR/ref-struct-async.rs:39:66\n+error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ref-struct-async.rs:31:66\n    |\n LL |     async fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n-   |                                                                  ^\n+   |                                                                  ^^^^\n+   |\n+   = note: hidden type `impl std::future::Future` captures lifetime '_#18r\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct-async.rs:31:71\n    |\n-   = note: return-position elided lifetimes require exactly one input-position elided lifetime, found multiple.\n+LL |       async fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n+   |  ___________________________________________-___________________________^\n+   | |                                           |\n+   | |                                           lifetime `'_` defined here\n+   | |                                           lifetime `'_` defined here\n+LL | |         f\n+LL | |     }\n+   | |_____^ function was supposed to return data with lifetime `'_` but it is returning data with lifetime `'_`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 10 previous errors\n \n-For more information about this error, try `rustc --explain E0106`.\n+For more information about this error, try `rustc --explain E0700`."}]}