{"sha": "18e54539ca08ee9cad46200206320ce290086999", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZTU0NTM5Y2EwOGVlOWNhZDQ2MjAwMjA2MzIwY2UyOTAwODY5OTk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-08-12T19:17:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-08-12T19:19:30Z"}, "message": "use `ParamName` to track in-scope lifetimes instead of Ident\n\nThis allows us to record \"fresh\" lifetime names for cases like `impl\nFoo<'_>`.", "tree": {"sha": "27b5e4c87cb4000491a6480afb6c83a6ad06a852", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27b5e4c87cb4000491a6480afb6c83a6ad06a852"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18e54539ca08ee9cad46200206320ce290086999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18e54539ca08ee9cad46200206320ce290086999", "html_url": "https://github.com/rust-lang/rust/commit/18e54539ca08ee9cad46200206320ce290086999", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18e54539ca08ee9cad46200206320ce290086999/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60960a260f7b5c695fd0717311d72ce62dd4eb43", "url": "https://api.github.com/repos/rust-lang/rust/commits/60960a260f7b5c695fd0717311d72ce62dd4eb43", "html_url": "https://github.com/rust-lang/rust/commit/60960a260f7b5c695fd0717311d72ce62dd4eb43"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "184180d67be7b00a6aaaa812fd044e1a3f878526", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/18e54539ca08ee9cad46200206320ce290086999/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e54539ca08ee9cad46200206320ce290086999/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=18e54539ca08ee9cad46200206320ce290086999", "patch": "@@ -136,7 +136,7 @@ pub struct LoweringContext<'a> {\n     /// When `is_collectin_in_band_lifetimes` is true, each lifetime is checked\n     /// against this list to see if it is already in-scope, or if a definition\n     /// needs to be created for it.\n-    in_scope_lifetimes: Vec<Ident>,\n+    in_scope_lifetimes: Vec<ParamName>,\n \n     current_module: NodeId,\n \n@@ -865,7 +865,7 @@ impl<'a> LoweringContext<'a> {\n             return;\n         }\n \n-        if self.in_scope_lifetimes.contains(&ident.modern()) {\n+        if self.in_scope_lifetimes.contains(&ParamName::Plain(ident.modern())) {\n             return;\n         }\n \n@@ -899,7 +899,7 @@ impl<'a> LoweringContext<'a> {\n     {\n         let old_len = self.in_scope_lifetimes.len();\n         let lt_def_names = params.iter().filter_map(|param| match param.kind {\n-            GenericParamKind::Lifetime { .. } => Some(param.ident.modern()),\n+            GenericParamKind::Lifetime { .. } => Some(ParamName::Plain(param.ident.modern())),\n             _ => None,\n         });\n         self.in_scope_lifetimes.extend(lt_def_names);\n@@ -2267,10 +2267,14 @@ impl<'a> LoweringContext<'a> {\n             let lifetime_params: Vec<(Span, ParamName)> =\n                 this.in_scope_lifetimes\n                     .iter().cloned()\n-                    .map(|ident| (ident.span, ParamName::Plain(ident)))\n+                    .map(|name| (name.ident().span, name))\n                     .chain(this.lifetimes_to_define.iter().cloned())\n                     .collect();\n \n+            debug!(\"lower_async_fn_ret_ty: in_scope_lifetimes={:#?}\", this.in_scope_lifetimes);\n+            debug!(\"lower_async_fn_ret_ty: lifetimes_to_define={:#?}\", this.lifetimes_to_define);\n+            debug!(\"lower_async_fn_ret_ty: lifetime_params={:#?}\", lifetime_params);\n+\n             let generic_params =\n                 lifetime_params\n                     .iter().cloned()"}, {"sha": "4d6039e101a888d6d47c2cd75ded6dae1febe5fd", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18e54539ca08ee9cad46200206320ce290086999/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e54539ca08ee9cad46200206320ce290086999/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=18e54539ca08ee9cad46200206320ce290086999", "patch": "@@ -123,7 +123,7 @@ impl LoweringContext<'_> {\n             _ => &[],\n         };\n         let lt_def_names = parent_generics.iter().filter_map(|param| match param.kind {\n-            hir::GenericParamKind::Lifetime { .. } => Some(param.name.ident().modern()),\n+            hir::GenericParamKind::Lifetime { .. } => Some(param.name),\n             _ => None,\n         });\n         self.in_scope_lifetimes.extend(lt_def_names);"}, {"sha": "4ded6385325a89788140a61afa3a806870a9ec9c", "filename": "src/test/ui/async-await/async-fn-elided-impl-lifetime-parameter.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/18e54539ca08ee9cad46200206320ce290086999/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-elided-impl-lifetime-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e54539ca08ee9cad46200206320ce290086999/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-elided-impl-lifetime-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-fn-elided-impl-lifetime-parameter.rs?ref=18e54539ca08ee9cad46200206320ce290086999", "patch": "@@ -0,0 +1,16 @@\n+// Check that `async fn` inside of an impl with `'_`\n+// in the header compiles correctly.\n+//\n+// Regression test for #63500.\n+//\n+// check-pass\n+\n+#![feature(async_await)]\n+\n+struct Foo<'a>(&'a u8);\n+\n+impl Foo<'_> {\n+    async fn bar() {}\n+}\n+\n+fn main() { }"}]}