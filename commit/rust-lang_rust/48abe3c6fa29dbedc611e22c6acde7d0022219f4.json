{"sha": "48abe3c6fa29dbedc611e22c6acde7d0022219f4", "node_id": "C_kwDOAAsO6NoAKDQ4YWJlM2M2ZmEyOWRiZWRjNjExZTIyYzZhY2RlN2QwMDIyMjE5ZjQ", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-10T14:32:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-17T17:06:27Z"}, "message": "Use Symbol for target features in asm handling\n\nThis saves a couple of Symbol::intern calls", "tree": {"sha": "9ec91866d4e26a44bd97459f949eda71bb0ae750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ec91866d4e26a44bd97459f949eda71bb0ae750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48abe3c6fa29dbedc611e22c6acde7d0022219f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48abe3c6fa29dbedc611e22c6acde7d0022219f4", "html_url": "https://github.com/rust-lang/rust/commit/48abe3c6fa29dbedc611e22c6acde7d0022219f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48abe3c6fa29dbedc611e22c6acde7d0022219f4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b58e5278641836ae3bbc93992b4155275241a9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b58e5278641836ae3bbc93992b4155275241a9b", "html_url": "https://github.com/rust-lang/rust/commit/0b58e5278641836ae3bbc93992b4155275241a9b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "be39dbd2e2acbfde4610b6107f4b8c33d2bb12db", "filename": "src/inline_asm.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48abe3c6fa29dbedc611e22c6acde7d0022219f4/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48abe3c6fa29dbedc611e22c6acde7d0022219f4/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=48abe3c6fa29dbedc611e22c6acde7d0022219f4", "patch": "@@ -6,7 +6,7 @@ use std::fmt::Write;\n \n use rustc_ast::ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_middle::mir::InlineAsmOperand;\n-use rustc_span::Symbol;\n+use rustc_span::sym;\n use rustc_target::asm::*;\n \n pub(crate) fn codegen_inline_asm<'tcx>(\n@@ -184,7 +184,7 @@ impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n         let sess = self.tcx.sess;\n         let map = allocatable_registers(\n             self.arch,\n-            |feature| sess.target_features.contains(&Symbol::intern(feature)),\n+            |feature| sess.target_features.contains(&feature),\n             &sess.target,\n         );\n         let mut allocated = FxHashMap::<_, (bool, bool)>::default();\n@@ -319,9 +319,9 @@ impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n         // Allocate stack slots for saving clobbered registers\n         let abi_clobber = InlineAsmClobberAbi::parse(\n             self.arch,\n-            |feature| self.tcx.sess.target_features.contains(&Symbol::intern(feature)),\n+            |feature| self.tcx.sess.target_features.contains(&feature),\n             &self.tcx.sess.target,\n-            Symbol::intern(\"C\"),\n+            sym::C,\n         )\n         .unwrap()\n         .clobbered_regs();"}]}