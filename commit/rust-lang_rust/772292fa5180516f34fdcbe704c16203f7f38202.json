{"sha": "772292fa5180516f34fdcbe704c16203f7f38202", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MjI5MmZhNTE4MDUxNmYzNGZkY2JlNzA0YzE2MjAzZjdmMzgyMDI=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-27T14:36:59Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-11-27T14:37:49Z"}, "message": "Don't lint on redundant semicolons after item statements\n\nThis preserves the current lint behavior for now.\n\nLinting after item statements currently prevents the compiler from bootstrapping.\nFixing this is blocked on fixing this upstream in Cargo, and bumping the Cargo\nsubmodule.", "tree": {"sha": "c7c1d1a600abe8c727fc04fa41634ddc45a74a27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7c1d1a600abe8c727fc04fa41634ddc45a74a27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/772292fa5180516f34fdcbe704c16203f7f38202", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl/BD2MACgkQtAh+UQ6Y\nsWQDvxAAld/axII0XZ0zc3XGl6WS3914IvLecp6y2SQw6eWgtKTHcy27uzdgLRft\nF7d/UplbXbTMgrPJ0009osN9ao/xRSbJmzNZJROzXZV09sYTmfTH81+3HXRo+AOT\nteEVaQMVLgC51QtvyC4j0KnhVgp4kCdeDOjfAevSlL78JAakDSzLnJtcP/7HAzF9\nDKL7GJ/T7XMb/4UGzPcO9zudwfObaKI9zedLsDmmKH9F24HITe4iCMqFszunoD/v\n5A//jfl2XW5y9w2x/FwtiT2MXZGR4Zl+py0gG6PXozns4eijTgA+G5mSKaNFe7N/\nKtSKFqMyRuMo48ymtOwNt3n11gOBvCU1WtdG+NounkX8z4x76riWrfNMlSoVmryD\nzNMA9Inm/pI0neT8k46txaadKIFcAh1ngvvdUad2pt6P7nISgwCJ6x6yYtAFb0Ig\nerqzLoa6oP3yazVN6MDtKnsnqqgdueNhk3a7N+h5KWwTs2yljfht4+tHKW39EkVb\nRYuKd2o8n1ya22cBuWFB2ovdVEszQBhrSC07Ap1UmTGOs5WiYddZ60UAijqLITHW\n97g4T4NZOPrAGnepEUgP9XTJzhiGN7c+6ytuo/jZ4FN9/z18EQSgbtmPyd0ny1v1\nRr2kaqVcN6PhQmCrAs803h5S/3YaosbcQAXsAmrRxuPmoOEr/8c=\n=q0t2\n-----END PGP SIGNATURE-----", "payload": "tree c7c1d1a600abe8c727fc04fa41634ddc45a74a27\nparent e8564ad5898ad8358f5449e94ab7119fb92a9f80\nauthor Aaron Hill <aa1ronham@gmail.com> 1606487819 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1606487869 -0500\n\nDon't lint on redundant semicolons after item statements\n\nThis preserves the current lint behavior for now.\n\nLinting after item statements currently prevents the compiler from bootstrapping.\nFixing this is blocked on fixing this upstream in Cargo, and bumping the Cargo\nsubmodule.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/772292fa5180516f34fdcbe704c16203f7f38202", "html_url": "https://github.com/rust-lang/rust/commit/772292fa5180516f34fdcbe704c16203f7f38202", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/772292fa5180516f34fdcbe704c16203f7f38202/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8564ad5898ad8358f5449e94ab7119fb92a9f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8564ad5898ad8358f5449e94ab7119fb92a9f80", "html_url": "https://github.com/rust-lang/rust/commit/e8564ad5898ad8358f5449e94ab7119fb92a9f80"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "428198cae8917377ee7ea648b37cae10b037b207", "filename": "compiler/rustc_lint/src/redundant_semicolon.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/772292fa5180516f34fdcbe704c16203f7f38202/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/772292fa5180516f34fdcbe704c16203f7f38202/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs?ref=772292fa5180516f34fdcbe704c16203f7f38202", "patch": "@@ -28,25 +28,40 @@ declare_lint_pass!(RedundantSemicolons => [REDUNDANT_SEMICOLONS]);\n \n impl EarlyLintPass for RedundantSemicolons {\n     fn check_block(&mut self, cx: &EarlyContext<'_>, block: &Block) {\n+        let mut after_item_stmt = false;\n         let mut seq = None;\n         for stmt in block.stmts.iter() {\n             match (&stmt.kind, &mut seq) {\n                 (StmtKind::Empty, None) => seq = Some((stmt.span, false)),\n                 (StmtKind::Empty, Some(seq)) => *seq = (seq.0.to(stmt.span), true),\n-                (_, seq) => maybe_lint_redundant_semis(cx, seq),\n+                (_, seq) => {\n+                    maybe_lint_redundant_semis(cx, seq, after_item_stmt);\n+                    after_item_stmt = matches!(stmt.kind, StmtKind::Item(_));\n+                }\n             }\n         }\n-        maybe_lint_redundant_semis(cx, &mut seq);\n+        maybe_lint_redundant_semis(cx, &mut seq, after_item_stmt);\n     }\n }\n \n-fn maybe_lint_redundant_semis(cx: &EarlyContext<'_>, seq: &mut Option<(Span, bool)>) {\n+fn maybe_lint_redundant_semis(\n+    cx: &EarlyContext<'_>,\n+    seq: &mut Option<(Span, bool)>,\n+    after_item_stmt: bool,\n+) {\n     if let Some((span, multiple)) = seq.take() {\n         // FIXME: Find a better way of ignoring the trailing\n         // semicolon from macro expansion\n         if span == rustc_span::DUMMY_SP {\n             return;\n         }\n+\n+        // FIXME: Lint on semicolons after item statements\n+        // once doing so doesn't break bootstrapping\n+        if after_item_stmt {\n+            return;\n+        }\n+\n         cx.struct_span_lint(REDUNDANT_SEMICOLONS, span, |lint| {\n             let (msg, rem) = if multiple {\n                 (\"unnecessary trailing semicolons\", \"remove these semicolons\")"}, {"sha": "4592bc31a39769cabd0fa86892ce296c66a8c0fd", "filename": "src/test/ui/lint/redundant-semicolon/item-stmt-semi.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/772292fa5180516f34fdcbe704c16203f7f38202/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/772292fa5180516f34fdcbe704c16203f7f38202/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs?ref=772292fa5180516f34fdcbe704c16203f7f38202", "patch": "@@ -0,0 +1,10 @@\n+// check-pass\n+// This test should stop compiling\n+// we decide to enable this lint for item statements.\n+\n+#![deny(redundant_semicolons)]\n+\n+fn main() {\n+    fn inner() {};\n+    struct Bar {};\n+}"}]}