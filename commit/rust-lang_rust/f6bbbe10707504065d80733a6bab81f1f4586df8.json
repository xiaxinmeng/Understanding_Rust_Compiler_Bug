{"sha": "f6bbbe10707504065d80733a6bab81f1f4586df8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YmJiZTEwNzA3NTA0MDY1ZDgwNzMzYTZiYWI4MWYxZjQ1ODZkZjg=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-24T17:00:54Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:51Z"}, "message": "trans: Remove dropflag-unaware type_is_newtype_immediate shortcut.", "tree": {"sha": "74bc1f8c747eb680c06ea34074625f4bc7573dca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74bc1f8c747eb680c06ea34074625f4bc7573dca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6bbbe10707504065d80733a6bab81f1f4586df8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6bbbe10707504065d80733a6bab81f1f4586df8", "html_url": "https://github.com/rust-lang/rust/commit/f6bbbe10707504065d80733a6bab81f1f4586df8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6bbbe10707504065d80733a6bab81f1f4586df8/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf0ea786ffb884adbe68455ec0a48de9424614c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf0ea786ffb884adbe68455ec0a48de9424614c7", "html_url": "https://github.com/rust-lang/rust/commit/cf0ea786ffb884adbe68455ec0a48de9424614c7"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "4d229541a835e92ac5b0f0b4b828260b80371085", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f6bbbe10707504065d80733a6bab81f1f4586df8/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6bbbe10707504065d80733a6bab81f1f4586df8/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=f6bbbe10707504065d80733a6bab81f1f4586df8", "patch": "@@ -75,26 +75,13 @@ pub fn type_is_fat_ptr<'tcx>(cx: &TyCtxt<'tcx>, ty: Ty<'tcx>) -> bool {\n     }\n }\n \n-fn type_is_newtype_immediate<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, ty: Ty<'tcx>) -> bool {\n-    match ty.sty {\n-        ty::TyStruct(def, substs) => {\n-            let fields = &def.struct_variant().fields;\n-            fields.len() == 1 && {\n-                type_is_immediate(ccx, monomorphize::field_ty(ccx.tcx(), substs, &fields[0]))\n-            }\n-        }\n-        _ => false\n-    }\n-}\n-\n pub fn type_is_immediate<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>, ty: Ty<'tcx>) -> bool {\n     use trans::machine::llsize_of_alloc;\n     use trans::type_of::sizing_type_of;\n \n     let tcx = ccx.tcx();\n     let simple = ty.is_scalar() ||\n         ty.is_unique() || ty.is_region_ptr() ||\n-        type_is_newtype_immediate(ccx, ty) ||\n         ty.is_simd();\n     if simple && !type_is_fat_ptr(tcx, ty) {\n         return true;"}]}