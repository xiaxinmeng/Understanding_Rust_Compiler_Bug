{"sha": "8c5ae86496d25ddd9df3486df46bcb671ce619ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNWFlODY0OTZkMjVkZGQ5ZGYzNDg2ZGY0NmJjYjY3MWNlNjE5YWQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-04T13:52:37Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-11T08:43:54Z"}, "message": "Update src/librustc_typeck/check/mod.rs\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "e64dbf19a876bcb722ffdd01bcfe23529b2fe82e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e64dbf19a876bcb722ffdd01bcfe23529b2fe82e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c5ae86496d25ddd9df3486df46bcb671ce619ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c5ae86496d25ddd9df3486df46bcb671ce619ad", "html_url": "https://github.com/rust-lang/rust/commit/8c5ae86496d25ddd9df3486df46bcb671ce619ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c5ae86496d25ddd9df3486df46bcb671ce619ad/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05a644e8257b20c3372f27420d28bef5fd6d6d73", "url": "https://api.github.com/repos/rust-lang/rust/commits/05a644e8257b20c3372f27420d28bef5fd6d6d73", "html_url": "https://github.com/rust-lang/rust/commit/05a644e8257b20c3372f27420d28bef5fd6d6d73"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "a8b3a0483899c56af1d4428bbc3059521b72f4a9", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c5ae86496d25ddd9df3486df46bcb671ce619ad/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5ae86496d25ddd9df3486df46bcb671ce619ad/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=8c5ae86496d25ddd9df3486df46bcb671ce619ad", "patch": "@@ -1391,7 +1391,9 @@ fn check_union(tcx: TyCtxt<'_>, id: hir::HirId, span: Span) {\n     check_packed(tcx, span, def_id);\n }\n \n-fn check_union_fields<'tcx>(tcx: TyCtxt<'tcx>, _sp: Span, item_def_id: DefId) -> bool {\n+/// When the `#![feature(untagged_unions)]` gate is active,\n+/// check that the fields of the `union` does not contain fields that need dropping.\n+fn check_union_fields(tcx: TyCtxt<'_>, _: Span, item_def_id: DefId) -> bool {\n     // Without the feature we check Copy types only later\n     if !tcx.features().untagged_unions {\n         return true;"}]}