{"sha": "98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YmE5MWY4MWJlYTM4ZDhmYzhiZDViYzBjYjQ0YWMzZTE3M2E1M2M=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-08T16:21:11Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-08T16:22:23Z"}, "message": "remove unused import warnings", "tree": {"sha": "f99d1c8374844ccf7a3368110d3e33c0e51f18bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f99d1c8374844ccf7a3368110d3e33c0e51f18bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "html_url": "https://github.com/rust-lang/rust/commit/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00f591680983cc19a6d9f24d8f8c0026ccf20398", "url": "https://api.github.com/repos/rust-lang/rust/commits/00f591680983cc19a6d9f24d8f8c0026ccf20398", "html_url": "https://github.com/rust-lang/rust/commit/00f591680983cc19a6d9f24d8f8c0026ccf20398"}], "stats": {"total": 66, "additions": 14, "deletions": 52}, "files": [{"sha": "f86ab2c909313432cccaa1f7b069a54160b4ae23", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -10,14 +10,9 @@\n \n use core::prelude::*;\n \n-use core::comm;\n-use core::io;\n-use core::libc::c_int;\n use core::os;\n use core::run;\n use core::str;\n-use core::task;\n-use core::vec;\n \n #[cfg(target_os = \"win32\")]\n fn target_env(lib_path: &str, prog: &str) -> ~[(~str,~str)] {\n@@ -74,4 +69,3 @@ pub fn run(lib_path: &str,\n         err: str::from_bytes(output.error)\n     }\n }\n-"}, {"sha": "0fde03b69cbf56f05da07454d03e445aa36f06c4", "filename": "src/libextra/flate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fflate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fflate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fflate.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -16,8 +16,6 @@ Simple compression\n \n #[allow(missing_doc)];\n \n-use core::prelude::*;\n-\n use core::libc::{c_void, size_t, c_int};\n use core::libc;\n use core::vec;\n@@ -87,6 +85,7 @@ mod tests {\n     use super::*;\n     use core::rand;\n     use core::rand::RngUtil;\n+    use core::prelude::*;\n \n     #[test]\n     #[allow(non_implicitly_copyable_typarams)]"}, {"sha": "c0f619c1b858d9d89c014a6f6cf75c240c02ab55", "filename": "src/libextra/flatpipes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fflatpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fflatpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fflatpipes.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -654,7 +654,6 @@ mod test {\n     use core::int;\n     use core::io::BytesWriter;\n     use core::result;\n-    use core::sys;\n     use core::task;\n \n     #[test]"}, {"sha": "26d1e28e12252b3fd021c91046f24433aa9832b5", "filename": "src/libextra/sort.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsort.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -929,11 +929,8 @@ mod test_tim_sort {\n     use core::prelude::*;\n \n     use sort::tim_sort;\n-\n-    use core::local_data;\n     use core::rand::RngUtil;\n     use core::rand;\n-    use core::uint;\n     use core::vec;\n \n     struct CVal {"}, {"sha": "83c0bb516b4362452b5dc9f17152102180dcafdd", "filename": "src/libextra/std.rc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstd.rc?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -148,4 +148,3 @@ pub mod extra {\n     pub use serialize;\n     pub use test;\n }\n-"}, {"sha": "8bbe0afa704e115a4a45fa75c4ddc34a2a4ff36c", "filename": "src/libextra/sync.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsync.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -731,7 +731,6 @@ mod tests {\n     use core::cast;\n     use core::cell::Cell;\n     use core::comm;\n-    use core::ptr;\n     use core::result;\n     use core::task;\n     use core::vec;"}, {"sha": "98c5783807239cfbc700ae0d40a6145f33b99958", "filename": "src/libextra/tempfile.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftempfile.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -34,7 +34,6 @@ mod tests {\n     use core::prelude::*;\n \n     use tempfile::mkdtemp;\n-    use tempfile;\n \n     use core::os;\n     use core::str;"}, {"sha": "9db3d48a3b810b3def04da640dbf488ead3afa77", "filename": "src/libextra/treemap.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftreemap.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -1034,8 +1034,6 @@ mod test_set {\n \n     use super::*;\n \n-    use core::vec;\n-\n     #[test]\n     fn test_clear() {\n         let mut s = TreeSet::new();"}, {"sha": "2522f149bf40a574e3336de37a77dc282e1cc9ae", "filename": "src/libextra/uv_ll.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibextra%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuv_ll.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -1234,7 +1234,6 @@ mod test {\n \n     use core::comm::{SharedChan, stream, GenericChan, GenericPort};\n     use core::libc;\n-    use core::result;\n     use core::str;\n     use core::sys;\n     use core::task;"}, {"sha": "5d0de5356299c090fdb4b91bc6a1ec18e098116e", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -22,7 +22,6 @@ use syntax::codemap::{dummy_sp, span, ExpandedFrom, CallInfo, NameAndSpan};\n use syntax::codemap;\n use syntax::ext::base::ExtCtxt;\n use syntax::fold;\n-use syntax::parse::token;\n use syntax::print::pprust;\n use syntax::{ast, ast_util};\n "}, {"sha": "df5000a543cb8878072f4800c373a71ee2958b82", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -53,7 +53,6 @@ use syntax::ast::ident;\n use syntax::ast_map::{path, path_elt};\n use syntax::codemap::span;\n use syntax::parse::token;\n-use syntax::parse::token::ident_interner;\n use syntax::{ast, ast_map};\n use syntax::abi::{X86, X86_64, Arm, Mips};\n "}, {"sha": "5f475f1bb9d822ab197d06703314332d3f2e9374", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -29,7 +29,6 @@ use core::str;\n use core::sys;\n use core::vec;\n use syntax::codemap::span;\n-use syntax::parse::token::ident_interner;\n use syntax::{ast, codemap, ast_util, ast_map};\n \n static LLVMDebugVersion: int = (9 << 16);"}, {"sha": "0d26e4c6ef1e608569470ce2de94b89485ae4257", "filename": "src/librustc/rustc.rc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Frustc.rc?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -36,8 +36,6 @@ extern mod std(name = \"std\", vers = \"0.7-pre\");\n \n // For bootstrapping purposes.\n #[cfg(stage0)]\n-pub use core::str;\n-#[cfg(stage0)]\n pub use core::unstable;\n \n use core::prelude::*;"}, {"sha": "24ade927be247099ee6bded303be92becae14346", "filename": "src/librustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -27,7 +27,6 @@ use pass::Pass;\n use core::iterator::IteratorUtil;\n use core::str;\n use core::util;\n-use core::vec;\n \n pub fn mk_pass() -> Pass {\n     Pass {"}, {"sha": "31adb0f3b8d27144b597b6cbf02c15bde539d561", "filename": "src/librustdoc/pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustdoc%2Fpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustdoc%2Fpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpass.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -10,7 +10,6 @@\n \n use core::prelude::*;\n \n-use core::vec;\n use core::iterator::IteratorUtil;\n \n use astsrv;"}, {"sha": "b6753f385dfc1944540612a836065ebb8025352d", "filename": "src/librustdoc/unindent_pass.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustdoc%2Funindent_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibrustdoc%2Funindent_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Funindent_pass.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -24,7 +24,6 @@ use core::prelude::*;\n use core::iterator::IteratorUtil;\n use core::str;\n use core::uint;\n-use core::vec;\n use pass::Pass;\n use text_pass;\n "}, {"sha": "a118e445fe20544f76a581f9f1919e029117fb60", "filename": "src/libstd/at_vec.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fat_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fat_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fat_vec.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -286,8 +286,6 @@ pub mod raw {\n #[cfg(test)]\n mod test {\n     use super::*;\n-    use prelude::*;\n-\n     use uint;\n \n     #[test]"}, {"sha": "4886588bb9422af6f95ab79ecf0ab84e1a951fb1", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -42,7 +42,6 @@ much easier to implement.\n \n use cmp::Ord;\n use option::{Option, Some, None};\n-use vec::OwnedVector;\n use num::{One, Zero};\n use ops::{Add, Mul};\n "}, {"sha": "8803844fdd01107ae92e104f8ce3fb7c2cabad32", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -18,7 +18,6 @@ implementing the `Iterator` trait.\n */\n \n use cmp;\n-use iter;\n use iter::{FromIter, Times};\n use num::{Zero, One};\n use option::{Option, Some, None};"}, {"sha": "e2cbf716dd1f61570900c9eebac31acd203079f4", "filename": "src/libstd/ptr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fptr.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -11,8 +11,6 @@\n //! Unsafe pointer utility functions\n \n use cast;\n-#[cfg(stage0)] use libc;\n-#[cfg(stage0)] use libc::{c_void, size_t};\n use option::{Option, Some, None};\n use sys;\n use unstable::intrinsics;"}, {"sha": "87e13e494aa4ba0fe37174804bb6afcab039e562", "filename": "src/libstd/sys.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -14,7 +14,6 @@\n \n use option::{Some, None};\n use cast;\n-use cmp::{Eq, Ord};\n use gc;\n use io;\n use libc;"}, {"sha": "4bd3946f885fd6b5924031cab5d5ab73525076c2", "filename": "src/libstd/trie.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftrie.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -14,7 +14,6 @@ use prelude::*;\n use iterator::IteratorUtil;\n use uint;\n use util::{swap, replace};\n-use vec;\n \n // FIXME: #5244: need to manually update the TrieNode constructor\n static SHIFT: uint = 4;"}, {"sha": "6137b589bdbae611d2324ad46775c741e46d5406", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -3349,13 +3349,13 @@ mod tests {\n \n     #[test]\n     fn test_each_ret_len0() {\n-        let mut a0 : [int, .. 0] = [];\n+        let a0 : [int, .. 0] = [];\n         assert_eq!(each(a0, |_p| fail!()), true);\n     }\n \n     #[test]\n     fn test_each_ret_len1() {\n-        let mut a1 = [17];\n+        let a1 = [17];\n         assert_eq!(each(a1, |_p| true), true);\n         assert_eq!(each(a1, |_p| false), false);\n     }"}, {"sha": "f27ae3b828c4e5c5263f1ca154881dda329cb6c6", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -15,7 +15,7 @@ use core::prelude::*;\n use codemap::{span, spanned};\n use abi::AbiSet;\n use opt_vec::OptVec;\n-use parse::token::{ident_to_str, interner_get, str_to_ident};\n+use parse::token::{interner_get, str_to_ident};\n \n use core::hashmap::HashMap;\n use core::option::Option;"}, {"sha": "b040397de720d9610dabd354d9b7a73527fc93f3", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -20,7 +20,6 @@ use opt_vec;\n use parse::token;\n use visit;\n \n-use core::iterator::IteratorUtil;\n use core::hashmap::HashMap;\n use core::int;\n use core::option;\n@@ -793,6 +792,7 @@ mod test {\n     use ast::*;\n     use super::*;\n     use core::io;\n+    use core::iterator::IteratorUtil;\n \n     #[test] fn xorpush_test () {\n         let mut s = ~[];"}, {"sha": "1e1f411c050ee886d2784eb8dfc342e09d4bb8a2", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -11,21 +11,21 @@\n use core::prelude::*;\n \n use ast::{blk_, attribute_, attr_outer, meta_word};\n-use ast::{crate, decl_local, expr_, expr_mac, mac_invoc_tt};\n-use ast::{item_mac, local_, stmt_, stmt_decl, stmt_mac, stmt_expr, stmt_semi};\n-use ast::{SCTable, illegal_ctxt};\n+use ast::{crate, expr_, expr_mac, mac_invoc_tt};\n+use ast::{item_mac, stmt_, stmt_mac, stmt_expr, stmt_semi};\n+use ast::{illegal_ctxt};\n use ast;\n-use ast_util::{new_rename, new_mark, resolve, get_sctable};\n+use ast_util::{new_rename, new_mark, resolve};\n use attr;\n use codemap;\n use codemap::{span, CallInfo, ExpandedFrom, NameAndSpan, spanned};\n use ext::base::*;\n use fold::*;\n use parse;\n use parse::{parse_item_from_source_str};\n-use parse::token::{ident_to_str, intern, fresh_name};\n+use parse::token::{ident_to_str, intern};\n use visit;\n-use visit::{Visitor,mk_vt};\n+use visit::Visitor;\n \n use core::iterator::IteratorUtil;\n use core::vec;\n@@ -749,16 +749,14 @@ mod test {\n     use super::*;\n     use ast;\n     use ast::{attribute_, attr_outer, meta_word, empty_ctxt};\n-    use ast_util::{get_sctable};\n     use codemap;\n     use codemap::spanned;\n     use parse;\n-    use parse::token::{gensym, intern, get_ident_interner};\n+    use parse::token::{intern, get_ident_interner};\n     use print::pprust;\n     use util::parser_testing::{string_to_item, string_to_pat, strs_to_idents};\n-    use visit::{mk_vt,Visitor};\n+    use visit::{mk_vt};\n \n-    use core::io;\n     use core::option::{None, Some};\n \n     // make sure that fail! is present"}, {"sha": "360ea12ec029ce5fbcc86ff528cc3e56d51b5fdd", "filename": "src/libsyntax/parse/comments.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcomments.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -19,7 +19,6 @@ use parse::lexer::{is_line_non_doc_comment, is_block_non_doc_comment};\n use parse::lexer;\n use parse::token;\n use parse::token::{get_ident_interner};\n-use parse;\n \n use core::iterator::IteratorUtil;\n use core::io;"}, {"sha": "559bca34f21ee9fc7232edd538bb6995f9a791ab", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -341,10 +341,9 @@ mod test {\n     use codemap::{span, BytePos, spanned};\n     use opt_vec;\n     use ast;\n-    use ast::{new_ident};\n     use abi;\n     use parse::parser::Parser;\n-    use parse::token::{intern, str_to_ident};\n+    use parse::token::{str_to_ident};\n     use util::parser_testing::{string_to_tts_and_sess, string_to_parser};\n     use util::parser_testing::{string_to_expr, string_to_item};\n     use util::parser_testing::{string_to_stmt, strs_to_idents};"}, {"sha": "7359448a8f2369b36890f1d7bbeadedd55114791", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=98ba91f81bea38d8fc8bd5bc0cb44ac3e173a53c", "patch": "@@ -22,7 +22,6 @@ use core::char;\n use core::cmp::Equiv;\n use core::local_data;\n use core::str;\n-use core::hashmap::HashSet;\n use core::rand;\n use core::rand::RngUtil;\n use core::to_bytes;"}]}