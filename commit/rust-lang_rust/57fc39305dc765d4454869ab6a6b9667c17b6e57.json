{"sha": "57fc39305dc765d4454869ab6a6b9667c17b6e57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZmMzOTMwNWRjNzY1ZDQ0NTQ4NjlhYjZhNmI5NjY3YzE3YjZlNTc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-12T08:25:38Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-12T08:25:38Z"}, "message": "Put guard on newline if it exceeds max width", "tree": {"sha": "2c4361427c162269fd585abc643d821aaad03c85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c4361427c162269fd585abc643d821aaad03c85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57fc39305dc765d4454869ab6a6b9667c17b6e57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57fc39305dc765d4454869ab6a6b9667c17b6e57", "html_url": "https://github.com/rust-lang/rust/commit/57fc39305dc765d4454869ab6a6b9667c17b6e57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57fc39305dc765d4454869ab6a6b9667c17b6e57/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9df1509d1913865303844728de1b24d4495e9a4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9df1509d1913865303844728de1b24d4495e9a4f", "html_url": "https://github.com/rust-lang/rust/commit/9df1509d1913865303844728de1b24d4495e9a4f"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "06993c729b7592649b6e6756a82ceb43a37d2243", "filename": "src/expr.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/57fc39305dc765d4454869ab6a6b9667c17b6e57/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57fc39305dc765d4454869ab6a6b9667c17b6e57/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=57fc39305dc765d4454869ab6a6b9667c17b6e57", "patch": "@@ -1495,28 +1495,22 @@ fn rewrite_guard(context: &RewriteContext,\n     if let Some(ref guard) = *guard {\n         // First try to fit the guard string on the same line as the pattern.\n         // 4 = ` if `, 5 = ` => {`\n-        let overhead = pattern_width + 4 + 5;\n-        if overhead < shape.width {\n-            let cond_shape = shape\n-                .shrink_left(pattern_width + 4)\n-                .unwrap()\n-                .sub_width(5)\n-                .unwrap();\n-            let cond_str = guard.rewrite(context, cond_shape);\n-            if let Some(cond_str) = cond_str {\n+        if let Some(cond_shape) = shape\n+               .shrink_left(pattern_width + 4)\n+               .and_then(|s| s.sub_width(5)) {\n+            if let Some(cond_str) = guard\n+                   .rewrite(context, cond_shape)\n+                   .and_then(|s| s.rewrite(context, cond_shape)) {\n                 return Some(format!(\" if {}\", cond_str));\n             }\n         }\n \n         // Not enough space to put the guard after the pattern, try a newline.\n-        let overhead = shape.indent.block_indent(context.config).width() + 4 + 5;\n-        if overhead < shape.width {\n-            let cond_str = guard.rewrite(context,\n-                                         Shape::legacy(shape.width - overhead,\n-                                                       // 3 == `if `\n-                                                       shape.indent.block_indent(context.config) +\n-                                                       3));\n-            if let Some(cond_str) = cond_str {\n+        // 3 == `if `\n+        if let Some(cond_shape) = Shape::indented(shape.indent.block_indent(context.config) + 3,\n+                                                  context.config)\n+               .sub_width(3) {\n+            if let Some(cond_str) = guard.rewrite(context, cond_shape) {\n                 return Some(format!(\"\\n{}if {}\",\n                                     shape\n                                         .indent"}, {"sha": "43a10e92339d185da0e3b8cdc7189a3b837e17a4", "filename": "tests/target/configs-control_style-rfc.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57fc39305dc765d4454869ab6a6b9667c17b6e57/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57fc39305dc765d4454869ab6a6b9667c17b6e57/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-control_style-rfc.rs?ref=57fc39305dc765d4454869ab6a6b9667c17b6e57", "patch": "@@ -21,3 +21,20 @@ fn main() {\n         }\n     }\n }\n+\n+fn issue1656() {\n+    {\n+        {\n+            match rewrite {\n+                Some(ref body_str)\n+                    if (!body_str.contains('\\n') && body_str.len() <= arm_shape.width) ||\n+                           !context.config.wrap_match_arms() ||\n+                           (extend && first_line_width(body_str) <= arm_shape.width) ||\n+                           is_block => {\n+                    return None;\n+                }\n+                _ => {}\n+            }\n+        }\n+    }\n+}"}, {"sha": "45f62ca68454f1e8fd6d463626ed966ab3a28b26", "filename": "tests/target/match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57fc39305dc765d4454869ab6a6b9667c17b6e57/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57fc39305dc765d4454869ab6a6b9667c17b6e57/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=57fc39305dc765d4454869ab6a6b9667c17b6e57", "patch": "@@ -306,8 +306,8 @@ fn guards() {\n                                                                       barrrrrrrrrrrr => {}\n         aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n             if fooooooooooooooooooooo &&\n-               (bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb ||\n-                cccccccccccccccccccccccccccccccccccccccc) => {}\n+               (bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb || cccccccccccccccccccccccccccccccccccccccc) => {\n+        }\n     }\n }\n "}]}