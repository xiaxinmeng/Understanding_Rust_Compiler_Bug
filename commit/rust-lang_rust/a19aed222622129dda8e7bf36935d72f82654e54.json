{"sha": "a19aed222622129dda8e7bf36935d72f82654e54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExOWFlZDIyMjYyMjEyOWRkYThlN2JmMzY5MzVkNzJmODI2NTRlNTQ=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-10-11T19:19:59Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-10-22T13:33:36Z"}, "message": "Add intern table for `List<PlaceElem<'tcx>>`", "tree": {"sha": "20289268b97d01e7f907dd6e5bd91999420955f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20289268b97d01e7f907dd6e5bd91999420955f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a19aed222622129dda8e7bf36935d72f82654e54", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAl2vBTAACgkQiMlBzaHU\nZDJAnhAAkK6lIVy5R/Vl6UJmdEQf5LFylbwBf8kzqxqdyFGBxyDuZGLYJ9fXm7lT\nqFxZ+Ka70oa+hilGHuwco/NXKevG+r/t88244x00wmnotxxfo2T6ZhPbjPIKrUjM\nWB4Q81RnE9DUVQ+V5RrAhJcwRq65fc58kjoGcLnG9TlorsBPar3iUHG+GfSdgXgR\nRj2zDkdwwqgL1F5enzbcHqSaLVOo+YzY17CDZVDID/Xmj7GTTb2mwJ67PjLncmO/\n/U18PmXAHJxsitgdjT8CeTWMJjNofq+nZk9htxOg94zemOgBNTyLXLaseTOUBEfe\nKiypjXY+hdnkjbDGli3/2LaET4d2WKEDGx+L+D155NrXW9BPzMO0S9ith0yBsill\nYqoU+B+BAXGTn39dbXjADxTZU+pTqY/39up13/SCEuLM8PpEvRRUxTqobyIF9OtG\nAF2sDO6oQFQettMb14Z/Ep1u3x8e0SaPxyKrOqU+QDJ8rJW3ceIz0hwqaQQrAjoM\nNTE9azmp3OnnFBUpb7LFRZwilt4yjUIDP04P1eIJxM1u7nQRd8ADiMoyLZqsd20v\nqIe2eiddo8UsKj5YWB7DS3aH8qjQTsMviTM1mXxbtW/A8khxy47kWEiINiar32d6\n2vbKJxiSSxuSbM2jPZ6pq06rifP4Vg1VkYF+OQm2Q3qTci66WPA=\n=DCKo\n-----END PGP SIGNATURE-----", "payload": "tree 20289268b97d01e7f907dd6e5bd91999420955f0\nparent 190802cfca41df76fd7ef45d2915c89938a5904a\nauthor Santiago Pastorino <spastorino@gmail.com> 1570821599 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1571751216 -0300\n\nAdd intern table for `List<PlaceElem<'tcx>>`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a19aed222622129dda8e7bf36935d72f82654e54", "html_url": "https://github.com/rust-lang/rust/commit/a19aed222622129dda8e7bf36935d72f82654e54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a19aed222622129dda8e7bf36935d72f82654e54/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "190802cfca41df76fd7ef45d2915c89938a5904a", "url": "https://api.github.com/repos/rust-lang/rust/commits/190802cfca41df76fd7ef45d2915c89938a5904a", "html_url": "https://github.com/rust-lang/rust/commit/190802cfca41df76fd7ef45d2915c89938a5904a"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "da86335345c1d4aadba26e6f52505fa6d2e93625", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a19aed222622129dda8e7bf36935d72f82654e54/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a19aed222622129dda8e7bf36935d72f82654e54/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=a19aed222622129dda8e7bf36935d72f82654e54", "patch": "@@ -21,7 +21,7 @@ use crate::middle::cstore::EncodedMetadata;\n use crate::middle::lang_items;\n use crate::middle::resolve_lifetime::{self, ObjectLifetimeDefault};\n use crate::middle::stability;\n-use crate::mir::{Body, interpret, ProjectionKind, Promoted};\n+use crate::mir::{Body, interpret, PlaceElem, ProjectionKind, Promoted};\n use crate::mir::interpret::{ConstValue, Allocation, Scalar};\n use crate::ty::subst::{GenericArg, InternalSubsts, SubstsRef, Subst};\n use crate::ty::ReprOptions;\n@@ -106,6 +106,7 @@ pub struct CtxtInterners<'tcx> {\n     goal: InternedSet<'tcx, GoalKind<'tcx>>,\n     goal_list: InternedSet<'tcx, List<Goal<'tcx>>>,\n     projs: InternedSet<'tcx, List<ProjectionKind>>,\n+    place_elems: InternedSet<'tcx, List<PlaceElem<'tcx>>>,\n     const_: InternedSet<'tcx, Const<'tcx>>,\n }\n \n@@ -124,6 +125,7 @@ impl<'tcx> CtxtInterners<'tcx> {\n             goal: Default::default(),\n             goal_list: Default::default(),\n             projs: Default::default(),\n+            place_elems: Default::default(),\n             const_: Default::default(),\n         }\n     }\n@@ -2145,6 +2147,13 @@ impl<'tcx> Borrow<[ProjectionKind]>\n     }\n }\n \n+impl<'tcx> Borrow<[PlaceElem<'tcx>]>\n+    for Interned<'tcx, List<PlaceElem<'tcx>>> {\n+    fn borrow(&self) -> &[PlaceElem<'tcx>] {\n+        &self.0[..]\n+    }\n+}\n+\n impl<'tcx> Borrow<RegionKind> for Interned<'tcx, RegionKind> {\n     fn borrow(&self) -> &RegionKind {\n         &self.0\n@@ -2245,7 +2254,8 @@ slice_interners!(\n     predicates: _intern_predicates(Predicate<'tcx>),\n     clauses: _intern_clauses(Clause<'tcx>),\n     goal_list: _intern_goals(Goal<'tcx>),\n-    projs: _intern_projs(ProjectionKind)\n+    projs: _intern_projs(ProjectionKind),\n+    place_elems: _intern_place_elems(PlaceElem<'tcx>)\n );\n \n impl<'tcx> TyCtxt<'tcx> {\n@@ -2631,6 +2641,14 @@ impl<'tcx> TyCtxt<'tcx> {\n         }\n     }\n \n+    pub fn intern_place_elems(self, ts: &[PlaceElem<'tcx>]) -> &'tcx List<PlaceElem<'tcx>> {\n+        if ts.len() == 0 {\n+            List::empty()\n+        } else {\n+            self._intern_place_elems(ts)\n+        }\n+    }\n+\n     pub fn intern_canonical_var_infos(self, ts: &[CanonicalVarInfo]) -> CanonicalVarInfos<'tcx> {\n         if ts.len() == 0 {\n             List::empty()"}]}