{"sha": "5fc22f1431e209610040d92ba671966ab2781f0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYzIyZjE0MzFlMjA5NjEwMDQwZDkyYmE2NzE5NjZhYjI3ODFmMGI=", "commit": {"author": {"name": "Casey Rodarmor", "email": "casey@rodarmor.com", "date": "2020-11-02T03:43:51Z"}, "committer": {"name": "Casey Rodarmor", "email": "casey@rodarmor.com", "date": "2020-11-04T03:40:02Z"}, "message": "Add a tool to run `x.py` from any subdirectory\n\nThis adds a binary called `x` in `src/tools/x`. All it does is check the\ncurrent directory and its ancestors for a file called `x.py`, and if it\nfinds one, runs it.\n\nBy installing x, you can easily `x.py` from any subdirectory.\n\nIt can be installed globally with `cargo install --path src/tools/x`", "tree": {"sha": "39e916153d6f038281aadfe1c01c6bc9dc7cc07c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39e916153d6f038281aadfe1c01c6bc9dc7cc07c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fc22f1431e209610040d92ba671966ab2781f0b", "comment_count": 3, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEMlna7bKWNrDiAlpwVWGGsVPsb+AFAl+iIqcACgkQVWGGsVPs\nb+C1WQ//W9nM2xipiYYB36PvMpoBU7mEubd2kgoIAWozD8kG0PLM/7ULUejLUgKT\nObDmh464i4tFe0J0oP759KxMfm6e3r4E0udAeF8P9US+ENwldLJTZEEQglq+fjPR\nLwDbU+Ttbvf8Ep2qhpujE3xPRdo3gULzpjbcKdxSEk/aGerqyZ9ouxPzG0BncMef\nfrcGjk6nzUfDP1vFRcr/WNIorU6QVjA5fGolhZ9U0mzoU+uTtnbwhPo+H2LNZpJV\niqpJQqMzwRbaLFxBbcqf8akuKPTj0q5foO6l3ax9nU6tQnXICj+f8UcALVj28gNV\niYFRlnXcNA9LJjqg6nF8fRhRHx5oFMOuSrkRO1kYJFuMLPnp31asc7IaZS2JU07o\n1VgjKOZTXTwhvC4FkrJ5szBwZIMJ8L8gI0OnLZM9gEMKq8hf1dfeHVYowDaRafp0\nsPaGjSN1aykEpH63brGeF3izlPZEt1Hu5VrGtsalxq4Exet0dMm7F/9gCP4J+zT9\n6ak0Wgw0HEilF1Zihweez8KKa8zV5kHhglJUh1atkvY9H2z8a3aYZpogt6X25F7G\nrSW21Dh9Q+yV7Bz0TrRBP47zuDLCR30VDV6gGhUXmpAfIaeoMryzIFP46S5yh5Qx\nMhIVyDA+hTRrFVIkh2oamwCud+sv+jbv32HipFnZsACl+723pBM=\n=v2Dl\n-----END PGP SIGNATURE-----", "payload": "tree 39e916153d6f038281aadfe1c01c6bc9dc7cc07c\nparent 4760b8fb886a3702ae11bfa7868d495b2675b5ed\nauthor Casey Rodarmor <casey@rodarmor.com> 1604288631 -0800\ncommitter Casey Rodarmor <casey@rodarmor.com> 1604461202 -0800\n\nAdd a tool to run `x.py` from any subdirectory\n\nThis adds a binary called `x` in `src/tools/x`. All it does is check the\ncurrent directory and its ancestors for a file called `x.py`, and if it\nfinds one, runs it.\n\nBy installing x, you can easily `x.py` from any subdirectory.\n\nIt can be installed globally with `cargo install --path src/tools/x`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc22f1431e209610040d92ba671966ab2781f0b", "html_url": "https://github.com/rust-lang/rust/commit/5fc22f1431e209610040d92ba671966ab2781f0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fc22f1431e209610040d92ba671966ab2781f0b/comments", "author": {"login": "casey", "id": 1945, "node_id": "MDQ6VXNlcjE5NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casey", "html_url": "https://github.com/casey", "followers_url": "https://api.github.com/users/casey/followers", "following_url": "https://api.github.com/users/casey/following{/other_user}", "gists_url": "https://api.github.com/users/casey/gists{/gist_id}", "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casey/subscriptions", "organizations_url": "https://api.github.com/users/casey/orgs", "repos_url": "https://api.github.com/users/casey/repos", "events_url": "https://api.github.com/users/casey/events{/privacy}", "received_events_url": "https://api.github.com/users/casey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "casey", "id": 1945, "node_id": "MDQ6VXNlcjE5NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casey", "html_url": "https://github.com/casey", "followers_url": "https://api.github.com/users/casey/followers", "following_url": "https://api.github.com/users/casey/following{/other_user}", "gists_url": "https://api.github.com/users/casey/gists{/gist_id}", "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casey/subscriptions", "organizations_url": "https://api.github.com/users/casey/orgs", "repos_url": "https://api.github.com/users/casey/repos", "events_url": "https://api.github.com/users/casey/events{/privacy}", "received_events_url": "https://api.github.com/users/casey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4760b8fb886a3702ae11bfa7868d495b2675b5ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/4760b8fb886a3702ae11bfa7868d495b2675b5ed", "html_url": "https://github.com/rust-lang/rust/commit/4760b8fb886a3702ae11bfa7868d495b2675b5ed"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "5f7135e38d11370085c8d2d18f5d2b0bb2027a78", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5fc22f1431e209610040d92ba671966ab2781f0b/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/5fc22f1431e209610040d92ba671966ab2781f0b/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=5fc22f1431e209610040d92ba671966ab2781f0b", "patch": "@@ -31,6 +31,7 @@ __pycache__/\n /inst/\n /llvm/\n /mingw-build/\n+/src/tools/x/target\n # Created by default with `src/ci/docker/run.sh`:\n /obj/\n /unicode-downloads"}, {"sha": "38fd72ace53859eb3ae601c39b0ccf771be6968b", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5fc22f1431e209610040d92ba671966ab2781f0b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5fc22f1431e209610040d92ba671966ab2781f0b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=5fc22f1431e209610040d92ba671966ab2781f0b", "patch": "@@ -29,10 +29,16 @@ members = [\n   \"src/tools/unicode-table-generator\",\n   \"src/tools/expand-yaml-anchors\",\n ]\n+\n exclude = [\n   \"build\",\n   # HACK(eddyb) This hardcodes the fact that our CI uses `/checkout/obj`.\n   \"obj\",\n+  # The `x` binary is a thin wrapper that calls `x.py`, which initializes\n+  # submodules, before which workspace members cannot be invoked because\n+  # not all `Cargo.toml` files are available, so we exclude the `x` binary,\n+  # so it can be invoked before the current checkout is set up.\n+  \"src/tools/x\",\n ]\n \n [profile.release.package.compiler_builtins]"}, {"sha": "723d6cb25ed6a9726637ef7b871ce6a6068a7c71", "filename": "src/tools/x/Cargo.lock", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fx%2FCargo.lock?ref=5fc22f1431e209610040d92ba671966ab2781f0b", "patch": "@@ -0,0 +1,5 @@\n+# This file is automatically @generated by Cargo.\n+# It is not intended for manual editing.\n+[[package]]\n+name = \"x\"\n+version = \"0.1.0\""}, {"sha": "72c4948c617fa21bf006957a4f0d81e428cad86a", "filename": "src/tools/x/Cargo.toml", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fx%2FCargo.toml?ref=5fc22f1431e209610040d92ba671966ab2781f0b", "patch": "@@ -0,0 +1,7 @@\n+[package]\n+name = \"x\"\n+version = \"0.1.0\"\n+description = \"Run x.py slightly more conveniently\"\n+authors = [\"Casey Rodarmor <casey@rodarmor.com>\"]\n+edition = \"2018\"\n+publish = false"}, {"sha": "3b3cf2847c2005af1235bc0da562c3ac82c2f303", "filename": "src/tools/x/README.md", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fx%2FREADME.md?ref=5fc22f1431e209610040d92ba671966ab2781f0b", "patch": "@@ -0,0 +1,3 @@\n+# x\n+\n+`x` invokes `x.py` from any subdirectory."}, {"sha": "6c0311433d676a98a9771ae55011bdde04452c78", "filename": "src/tools/x/src/main.rs", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fc22f1431e209610040d92ba671966ab2781f0b/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fx%2Fsrc%2Fmain.rs?ref=5fc22f1431e209610040d92ba671966ab2781f0b", "patch": "@@ -0,0 +1,92 @@\n+//! Run `x.py` from any subdirectory of a rust compiler checkout.\n+//!\n+//! We prefer `exec`, to avoid adding an extra process in the process tree.\n+//! However, since `exec` isn't available on Windows, we indirect through\n+//! `exec_or_status`, which will call `exec` on unix and `status` on Windows.\n+//!\n+//! We use `python`, `python3`, or `python2` as the python interpreter to run\n+//! `x.py`, in that order of preference.\n+\n+use std::{\n+    env, io,\n+    process::{self, Command, ExitStatus},\n+};\n+\n+const PYTHON: &str = \"python\";\n+const PYTHON2: &str = \"python2\";\n+const PYTHON3: &str = \"python3\";\n+\n+fn python() -> &'static str {\n+    let val = match env::var_os(\"PATH\") {\n+        Some(val) => val,\n+        None => return PYTHON,\n+    };\n+\n+    let mut python2 = false;\n+    let mut python3 = false;\n+\n+    for dir in env::split_paths(&val) {\n+        if dir.join(PYTHON).exists() {\n+            return PYTHON;\n+        }\n+\n+        python2 |= dir.join(PYTHON2).exists();\n+        python3 |= dir.join(PYTHON3).exists();\n+    }\n+\n+    if python3 {\n+        PYTHON3\n+    } else if python2 {\n+        PYTHON2\n+    } else {\n+        PYTHON\n+    }\n+}\n+\n+#[cfg(unix)]\n+fn exec_or_status(command: &mut Command) -> io::Result<ExitStatus> {\n+    use std::os::unix::process::CommandExt;\n+    Err(command.exec())\n+}\n+\n+#[cfg(not(unix))]\n+fn exec_or_status(command: &mut Command) -> io::Result<ExitStatus> {\n+    command.status()\n+}\n+\n+fn main() {\n+    let current = match env::current_dir() {\n+        Ok(dir) => dir,\n+        Err(err) => {\n+            eprintln!(\"Failed to get current directory: {}\", err);\n+            process::exit(1);\n+        }\n+    };\n+\n+    for dir in current.ancestors() {\n+        let candidate = dir.join(\"x.py\");\n+\n+        if candidate.exists() {\n+            let mut python = Command::new(python());\n+\n+            python.arg(&candidate).args(env::args().skip(1)).current_dir(dir);\n+\n+            let result = exec_or_status(&mut python);\n+\n+            match result {\n+                Err(error) => {\n+                    eprintln!(\"Failed to invoke `{}`: {}\", candidate.display(), error);\n+                }\n+                Ok(status) => {\n+                    process::exit(status.code().unwrap_or(1));\n+                }\n+            }\n+        }\n+    }\n+\n+    eprintln!(\n+        \"x.py not found. Please run inside of a checkout of `https://github.com/rust-lang/rust`.\"\n+    );\n+\n+    process::exit(1);\n+}"}]}