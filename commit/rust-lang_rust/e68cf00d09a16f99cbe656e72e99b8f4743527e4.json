{"sha": "e68cf00d09a16f99cbe656e72e99b8f4743527e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OGNmMDBkMDlhMTZmOTljYmU2NTZlNzJlOTliOGY0NzQzNTI3ZTQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-04-08T20:37:17Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-04-08T20:37:17Z"}, "message": "Add basic final paper LaTeX with abstract.", "tree": {"sha": "bc0b1eb1b07eff830d02729bad3cc68e72a0028e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc0b1eb1b07eff830d02729bad3cc68e72a0028e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e68cf00d09a16f99cbe656e72e99b8f4743527e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e68cf00d09a16f99cbe656e72e99b8f4743527e4", "html_url": "https://github.com/rust-lang/rust/commit/e68cf00d09a16f99cbe656e72e99b8f4743527e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e68cf00d09a16f99cbe656e72e99b8f4743527e4/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65a88a60f145b2ab10087956bb65404e2ad7e069", "url": "https://api.github.com/repos/rust-lang/rust/commits/65a88a60f145b2ab10087956bb65404e2ad7e069", "html_url": "https://github.com/rust-lang/rust/commit/65a88a60f145b2ab10087956bb65404e2ad7e069"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "23aa1a481b3ebc8eb1358f31a6e49f08090bc5d9", "filename": "tex/paper/latexmkrc", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e68cf00d09a16f99cbe656e72e99b8f4743527e4/tex%2Fpaper%2Flatexmkrc", "raw_url": "https://github.com/rust-lang/rust/raw/e68cf00d09a16f99cbe656e72e99b8f4743527e4/tex%2Fpaper%2Flatexmkrc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tex%2Fpaper%2Flatexmkrc?ref=e68cf00d09a16f99cbe656e72e99b8f4743527e4", "patch": "@@ -0,0 +1,12 @@\n+# vim: ft=perl\n+\n+$pdf_mode = 1;\n+$pdflatex = 'lualatex --shell-escape %O %S';\n+$out_dir = 'out';\n+\n+# This improves latexmk's detection of source files and generated files.\n+$recorder = 1;\n+\n+# Ignore always-regenerated *.pyg files from the minted package when considering\n+# whether to run pdflatex again.\n+$hash_calc_ignore_pattern{'pyg'} = '.*';"}, {"sha": "1419e347f969cf85b9ba04bbb4f00cb02a1281fa", "filename": "tex/paper/miri.tex", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/e68cf00d09a16f99cbe656e72e99b8f4743527e4/tex%2Fpaper%2Fmiri.tex", "raw_url": "https://github.com/rust-lang/rust/raw/e68cf00d09a16f99cbe656e72e99b8f4743527e4/tex%2Fpaper%2Fmiri.tex", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tex%2Fpaper%2Fmiri.tex?ref=e68cf00d09a16f99cbe656e72e99b8f4743527e4", "patch": "@@ -0,0 +1,55 @@\n+% vim: tw=100\n+\n+\\documentclass[twocolumn]{article}\n+\\usepackage{blindtext}\n+\\usepackage{fontspec}\n+\\usepackage[colorlinks, urlcolor={blue!80!black}]{hyperref}\n+\\usepackage{relsize}\n+\\usepackage{xcolor}\n+\n+\\begin{document}\n+\n+\\title{Miri: \\\\ \\smaller{An interpreter for Rust's mid-level intermediate representation}}\n+% \\subtitle{test}\n+\\author{Scott Olson\\footnote{\\href{mailto:scott@solson.me}{scott@solson.me}} \\\\\n+  \\smaller{Supervised by Christopher Dutchyn}}\n+\\date{April 8th, 2016}\n+\\maketitle\n+\n+\\section{Abstract}\n+\n+The increasing need for safe low-level code in contexts like operating systems and browsers is\n+driving the development of Rust\\footnote{\\url{https://www.rust-lang.org}}, a programming language\n+backed by Mozilla promising blazing speed without the segfaults. To make programming more\n+convenient, it's often desirable to be able to generate code or perform some computation at\n+compile-time. The former is mostly covered by Rust's existing macro feature, but the latter is\n+currently restricted to a limited form of constant evaluation capable of little beyond simple math.\n+\n+When the existing constant evaluator was built, it would have been difficult to make it more\n+powerful than it is. However, a new intermediate representation was recently\n+added\\footnote{\\href{https://github.com/rust-lang/rfcs/blob/master/text/1211-mir.md}{The MIR RFC}}\n+to the Rust compiler between the abstract syntax tree and the back-end LLVM IR, called mid-level\n+intermediate representation, or MIR for short. As it turns out, writing an interpreter for MIR is a\n+surprisingly effective approach for supporting a large proportion of Rust's features in compile-time\n+execution.\n+\n+\\section{Motivation}\n+\n+\\blindtext\n+\n+\\section{First implementation}\n+\n+% TODO(tsion): Find a place for this text.\n+Making Miri work was primarily an implementation problem. Writing an interpreter which models values\n+of varying sizes, stack and heap allocation, unsafe memory operations, and more requires some\n+unconventional techniques compared to many interpreters. Miri's execution remains safe even while\n+simulating execution of unsafe code, which allows it to detect when unsafe code does something\n+invalid.\n+\n+\\blindtext[2]\n+\n+\\section{Data layout}\n+\n+\\blindtext\n+\n+\\end{document}"}]}