{"sha": "17f289345516662166a93a388b6225b862d1f238", "node_id": "C_kwDOAAsO6NoAKDE3ZjI4OTM0NTUxNjY2MjE2NmE5M2EzODhiNjIyNWI4NjJkMWYyMzg", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-17T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-17T00:00:00Z"}, "message": "Types with reachable constructors are reachable", "tree": {"sha": "cb4f8ad5c0b0516b18119acd6b25a03b2d0f5a2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb4f8ad5c0b0516b18119acd6b25a03b2d0f5a2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17f289345516662166a93a388b6225b862d1f238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17f289345516662166a93a388b6225b862d1f238", "html_url": "https://github.com/rust-lang/rust/commit/17f289345516662166a93a388b6225b862d1f238", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17f289345516662166a93a388b6225b862d1f238/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c52b9c10bfb5164015eb977ff498e0597ae63eb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c52b9c10bfb5164015eb977ff498e0597ae63eb1", "html_url": "https://github.com/rust-lang/rust/commit/c52b9c10bfb5164015eb977ff498e0597ae63eb1"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "86244aa8985e8c19137a5b0cd6629d256ff41989", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/17f289345516662166a93a388b6225b862d1f238/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f289345516662166a93a388b6225b862d1f238/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=17f289345516662166a93a388b6225b862d1f238", "patch": "@@ -775,7 +775,14 @@ impl<'tcx> Visitor<'tcx> for EmbargoVisitor<'tcx> {\n                         }\n                         // Corner case: if the variant is reachable, but its\n                         // enum is not, make the enum reachable as well.\n-                        self.update(item.def_id, variant_level);\n+                        self.reach(item.def_id, variant_level).ty();\n+                    }\n+                    if let Some(hir_id) = variant.data.ctor_hir_id() {\n+                        let ctor_def_id = self.tcx.hir().local_def_id(hir_id);\n+                        let ctor_level = self.get(ctor_def_id);\n+                        if ctor_level.is_some() {\n+                            self.reach(item.def_id, ctor_level).ty();\n+                        }\n                     }\n                 }\n             }\n@@ -803,6 +810,13 @@ impl<'tcx> Visitor<'tcx> for EmbargoVisitor<'tcx> {\n                         }\n                     }\n                 }\n+                if let Some(hir_id) = struct_def.ctor_hir_id() {\n+                    let ctor_def_id = self.tcx.hir().local_def_id(hir_id);\n+                    let ctor_level = self.get(ctor_def_id);\n+                    if ctor_level.is_some() {\n+                        self.reach(item.def_id, ctor_level).ty();\n+                    }\n+                }\n             }\n         }\n "}, {"sha": "9c99cca9ae6edc1c49cb637635ab99a52aa7aa37", "filename": "src/test/ui/privacy/auxiliary/ctor_aux.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/17f289345516662166a93a388b6225b862d1f238/src%2Ftest%2Fui%2Fprivacy%2Fauxiliary%2Fctor_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f289345516662166a93a388b6225b862d1f238/src%2Ftest%2Fui%2Fprivacy%2Fauxiliary%2Fctor_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fauxiliary%2Fctor_aux.rs?ref=17f289345516662166a93a388b6225b862d1f238", "patch": "@@ -0,0 +1,25 @@\n+// edition:2021\n+//! Missing docs lint warns about undocumented exported items.\n+//! Use the lint to additionally verify that items are reachable\n+//! but not exported.\n+#![allow(non_camel_case_types)]\n+#![deny(missing_docs)]\n+\n+mod hidden {\n+    pub struct s;\n+    pub enum e { x, y, z }\n+    pub use e::*;\n+    impl s {\n+        pub fn f(&self) {}\n+    }\n+    impl e {\n+        pub fn g(&self) {}\n+    }\n+}\n+// Hide all type definitions while reexporting their constructors:\n+mod e {}\n+mod x {}\n+mod y {}\n+mod z {}\n+mod s {}\n+pub use hidden::*;"}, {"sha": "0ec15d68ed39ee30f55cfbe34d8b3d38db05ac73", "filename": "src/test/ui/privacy/ctor.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/17f289345516662166a93a388b6225b862d1f238/src%2Ftest%2Fui%2Fprivacy%2Fctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f289345516662166a93a388b6225b862d1f238/src%2Ftest%2Fui%2Fprivacy%2Fctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fctor.rs?ref=17f289345516662166a93a388b6225b862d1f238", "patch": "@@ -0,0 +1,16 @@\n+// Verify that a type is considered reachable when its constructor is\n+// reachable. The auxiliary library is constructed so that all types are\n+// shadowed and cannot be named directly, while their constructors are\n+// reexported. Regression test for issue #96934.\n+//\n+// aux-build:ctor_aux.rs\n+// edition:2021\n+// build-pass\n+\n+extern crate ctor_aux;\n+\n+fn main() {\n+    ctor_aux::s.f();\n+    ctor_aux::x.g();\n+    ctor_aux::y.g();\n+}"}]}