{"sha": "8e10c4d55d5a21c879c01c57211579239f08d0b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMTBjNGQ1NWQ1YTIxYzg3OWMwMWM1NzIxMTU3OTIzOWYwOGQwYjA=", "commit": {"author": {"name": "MaulingMonkey", "email": "git@maulingmonkey.com", "date": "2017-07-13T17:04:43Z"}, "committer": {"name": "MaulingMonkey", "email": "git@maulingmonkey.com", "date": "2017-07-13T17:04:43Z"}, "message": "Modify type names on MSVC to make strings and slices .natvis compatible.", "tree": {"sha": "0f4633dc22435e90a03c1c41cd4aec506039fa1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f4633dc22435e90a03c1c41cd4aec506039fa1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e10c4d55d5a21c879c01c57211579239f08d0b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e10c4d55d5a21c879c01c57211579239f08d0b0", "html_url": "https://github.com/rust-lang/rust/commit/8e10c4d55d5a21c879c01c57211579239f08d0b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e10c4d55d5a21c879c01c57211579239f08d0b0/comments", "author": {"login": "MaulingMonkey", "id": 75894, "node_id": "MDQ6VXNlcjc1ODk0", "avatar_url": "https://avatars.githubusercontent.com/u/75894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaulingMonkey", "html_url": "https://github.com/MaulingMonkey", "followers_url": "https://api.github.com/users/MaulingMonkey/followers", "following_url": "https://api.github.com/users/MaulingMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/MaulingMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaulingMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaulingMonkey/subscriptions", "organizations_url": "https://api.github.com/users/MaulingMonkey/orgs", "repos_url": "https://api.github.com/users/MaulingMonkey/repos", "events_url": "https://api.github.com/users/MaulingMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/MaulingMonkey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MaulingMonkey", "id": 75894, "node_id": "MDQ6VXNlcjc1ODk0", "avatar_url": "https://avatars.githubusercontent.com/u/75894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaulingMonkey", "html_url": "https://github.com/MaulingMonkey", "followers_url": "https://api.github.com/users/MaulingMonkey/followers", "following_url": "https://api.github.com/users/MaulingMonkey/following{/other_user}", "gists_url": "https://api.github.com/users/MaulingMonkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaulingMonkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaulingMonkey/subscriptions", "organizations_url": "https://api.github.com/users/MaulingMonkey/orgs", "repos_url": "https://api.github.com/users/MaulingMonkey/repos", "events_url": "https://api.github.com/users/MaulingMonkey/events{/privacy}", "received_events_url": "https://api.github.com/users/MaulingMonkey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d5e67a9661897d3bc0862b27104c651caffd10b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5e67a9661897d3bc0862b27104c651caffd10b", "html_url": "https://github.com/rust-lang/rust/commit/5d5e67a9661897d3bc0862b27104c651caffd10b"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "67be9769fb335d6b4eac8c47d6cf62372b613014", "filename": "src/etc/natvis/intrinsic.natvis", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8e10c4d55d5a21c879c01c57211579239f08d0b0/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/8e10c4d55d5a21c879c01c57211579239f08d0b0/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Fintrinsic.natvis?ref=8e10c4d55d5a21c879c01c57211579239f08d0b0", "patch": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<AutoVisualizer xmlns=\"http://schemas.microsoft.com/vstudio/debugger/natvis/2010\">\n+  <Type Name=\"str\">\n+    <DisplayString>{data_ptr,[length]}</DisplayString>\n+    <StringView>data_ptr,[length]</StringView>\n+    <Expand>\n+      <Item Name=\"[size]\" ExcludeView=\"simple\">length</Item>\n+      <ArrayItems>\n+        <Size>length</Size>\n+        <ValuePointer>data_ptr</ValuePointer>\n+      </ArrayItems>\n+    </Expand>\n+  </Type>\n+  <Type Name=\"slice&lt;*&gt;\">\n+    <DisplayString>{{ length={length} }}</DisplayString>\n+    <Expand>\n+      <Item Name=\"[size]\" ExcludeView=\"simple\">length</Item>\n+      <ArrayItems>\n+        <Size>length</Size>\n+        <ValuePointer>data_ptr</ValuePointer>\n+      </ArrayItems>\n+    </Expand>\n+  </Type>\n+</AutoVisualizer>"}, {"sha": "9ab5bc4a5a94171ee813bef23f1a695937ccc93d", "filename": "src/librustc_trans/debuginfo/type_names.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8e10c4d55d5a21c879c01c57211579239f08d0b0/src%2Flibrustc_trans%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e10c4d55d5a21c879c01c57211579239f08d0b0/src%2Flibrustc_trans%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Ftype_names.rs?ref=8e10c4d55d5a21c879c01c57211579239f08d0b0", "patch": "@@ -61,21 +61,27 @@ pub fn push_debuginfo_type_name<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n             output.push(')');\n         },\n         ty::TyRawPtr(ty::TypeAndMut { ty: inner_type, mutbl } ) => {\n-            output.push('*');\n+            let is_like_msvc = cx.sess().target.target.options.is_like_msvc;\n+\n+            if !is_like_msvc {output.push('*');}\n             match mutbl {\n                 hir::MutImmutable => output.push_str(\"const \"),\n                 hir::MutMutable => output.push_str(\"mut \"),\n             }\n \n             push_debuginfo_type_name(cx, inner_type, true, output);\n+            if is_like_msvc {output.push('*');}\n         },\n         ty::TyRef(_, ty::TypeAndMut { ty: inner_type, mutbl }) => {\n-            output.push('&');\n+            let is_like_msvc = cx.sess().target.target.options.is_like_msvc;\n+\n+            if !is_like_msvc {output.push('&');}\n             if mutbl == hir::MutMutable {\n                 output.push_str(\"mut \");\n             }\n \n             push_debuginfo_type_name(cx, inner_type, true, output);\n+            if is_like_msvc {output.push('*');}\n         },\n         ty::TyArray(inner_type, len) => {\n             output.push('[');\n@@ -84,9 +90,10 @@ pub fn push_debuginfo_type_name<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n             output.push(']');\n         },\n         ty::TySlice(inner_type) => {\n-            output.push('[');\n+            let is_like_msvc = cx.sess().target.target.options.is_like_msvc;\n+            output.push_str(if is_like_msvc {\"slice<\"} else {\"[\"});\n             push_debuginfo_type_name(cx, inner_type, true, output);\n-            output.push(']');\n+            output.push(if is_like_msvc {'>'} else {']'});\n         },\n         ty::TyDynamic(ref trait_data, ..) => {\n             if let Some(principal) = trait_data.principal() {"}]}