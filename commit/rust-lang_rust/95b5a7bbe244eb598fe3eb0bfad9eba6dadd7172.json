{"sha": "95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172", "node_id": "C_kwDOAAsO6NoAKDk1YjVhN2JiZTI0NGViNTk4ZmUzZWIwYmZhZDllYmE2ZGFkZDcxNzI", "commit": {"author": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-05-24T14:10:09Z"}, "committer": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-05-24T14:10:09Z"}, "message": "replace `-` instead of erroring out", "tree": {"sha": "f4a711d8898f2e9b124c0a37c93d1047105faae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4a711d8898f2e9b124c0a37c93d1047105faae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172", "html_url": "https://github.com/rust-lang/rust/commit/95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172/comments", "author": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3438da42f0806225f7533f282ea32b9416c38f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3438da42f0806225f7533f282ea32b9416c38f8", "html_url": "https://github.com/rust-lang/rust/commit/a3438da42f0806225f7533f282ea32b9416c38f8"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "99aa854bc4320f0e43b17d0b6fad4a5c903420ec", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=95b5a7bbe244eb598fe3eb0bfad9eba6dadd7172", "patch": "@@ -5,6 +5,7 @@\n use clap::{Arg, ArgAction, ArgMatches, Command};\n use clippy_dev::{bless, dogfood, fmt, lint, new_lint, serve, setup, update_lints};\n use indoc::indoc;\n+use std::convert::Infallible;\n \n fn main() {\n     let matches = get_clap_config();\n@@ -181,13 +182,7 @@ fn get_clap_config() -> ArgMatches {\n                         .long(\"name\")\n                         .help(\"Name of the new lint in snake case, ex: fn_too_long\")\n                         .required(true)\n-                        .value_parser(|name: &str| {\n-                            if name.contains('-') {\n-                                Err(\"Lint name cannot contain `-`, use `_` instead.\")\n-                            } else {\n-                                Ok(name.to_owned())\n-                            }\n-                        }),\n+                        .value_parser(|name: &str| Ok::<_, Infallible>(name.replace(\"-\", \"_\"))),\n                     Arg::new(\"category\")\n                         .short('c')\n                         .long(\"category\")"}]}