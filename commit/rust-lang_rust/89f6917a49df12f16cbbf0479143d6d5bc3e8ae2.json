{"sha": "89f6917a49df12f16cbbf0479143d6d5bc3e8ae2", "node_id": "C_kwDOAAsO6NoAKDg5ZjY5MTdhNDlkZjEyZjE2Y2JiZjA0NzkxNDNkNmQ1YmMzZThhZTI", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-28T01:56:03Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-30T20:35:14Z"}, "message": "Remove `Substructure::self_args`.\n\nIt's unused.", "tree": {"sha": "a76b76c24e9e844876f8d3a12254d0ed4d901884", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a76b76c24e9e844876f8d3a12254d0ed4d901884"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89f6917a49df12f16cbbf0479143d6d5bc3e8ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89f6917a49df12f16cbbf0479143d6d5bc3e8ae2", "html_url": "https://github.com/rust-lang/rust/commit/89f6917a49df12f16cbbf0479143d6d5bc3e8ae2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89f6917a49df12f16cbbf0479143d6d5bc3e8ae2/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1254fe974dd33199130a1f01647992be986b5dbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1254fe974dd33199130a1f01647992be986b5dbb", "html_url": "https://github.com/rust-lang/rust/commit/1254fe974dd33199130a1f01647992be986b5dbb"}], "stats": {"total": 20, "additions": 2, "deletions": 18}, "files": [{"sha": "0b2f62cacc2d4bfbc15fc7a8c4009e9137d32150", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/mod.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/89f6917a49df12f16cbbf0479143d6d5bc3e8ae2/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89f6917a49df12f16cbbf0479143d6d5bc3e8ae2/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs?ref=89f6917a49df12f16cbbf0479143d6d5bc3e8ae2", "patch": "@@ -247,12 +247,7 @@ pub struct MethodDef<'a> {\n pub struct Substructure<'a> {\n     /// ident of self\n     pub type_ident: Ident,\n-    /// dereferenced access to any [`Self_`] or [`Ptr(Self_, _)`][ptr] arguments\n-    ///\n-    /// [`Self_`]: ty::Ty::Self_\n-    /// [ptr]: ty::Ty::Ptr\n-    pub self_args: &'a [P<Expr>],\n-    /// verbatim access to any other arguments\n+    /// verbatim access to any non-self arguments\n     pub nonself_args: &'a [P<Expr>],\n     pub fields: &'a SubstructureFields<'a>,\n }\n@@ -753,7 +748,6 @@ impl<'a> TraitDef<'a> {\n                         self,\n                         struct_def,\n                         type_ident,\n-                        &self_args,\n                         &nonself_args,\n                     )\n                 } else {\n@@ -802,7 +796,6 @@ impl<'a> TraitDef<'a> {\n                         self,\n                         enum_def,\n                         type_ident,\n-                        &self_args,\n                         &nonself_args,\n                     )\n                 } else {\n@@ -830,12 +823,11 @@ impl<'a> MethodDef<'a> {\n         cx: &mut ExtCtxt<'_>,\n         trait_: &TraitDef<'_>,\n         type_ident: Ident,\n-        self_args: &[P<Expr>],\n         nonself_args: &[P<Expr>],\n         fields: &SubstructureFields<'_>,\n     ) -> P<Expr> {\n         let span = trait_.span;\n-        let substructure = Substructure { type_ident, self_args, nonself_args, fields };\n+        let substructure = Substructure { type_ident, nonself_args, fields };\n         let mut f = self.combine_substructure.borrow_mut();\n         let f: &mut CombineSubstructureFunc<'_> = &mut *f;\n         f(cx, span, &substructure)\n@@ -1053,7 +1045,6 @@ impl<'a> MethodDef<'a> {\n             cx,\n             trait_,\n             type_ident,\n-            self_args,\n             nonself_args,\n             &Struct(struct_def, fields),\n         );\n@@ -1074,7 +1065,6 @@ impl<'a> MethodDef<'a> {\n         trait_: &TraitDef<'_>,\n         struct_def: &VariantData,\n         type_ident: Ident,\n-        self_args: &[P<Expr>],\n         nonself_args: &[P<Expr>],\n     ) -> P<Expr> {\n         let summary = trait_.summarise_struct(cx, struct_def);\n@@ -1083,7 +1073,6 @@ impl<'a> MethodDef<'a> {\n             cx,\n             trait_,\n             type_ident,\n-            self_args,\n             nonself_args,\n             &StaticStruct(struct_def, summary),\n         )\n@@ -1267,7 +1256,6 @@ impl<'a> MethodDef<'a> {\n                     cx,\n                     trait_,\n                     type_ident,\n-                    &self_args[..],\n                     nonself_args,\n                     &substructure,\n                 );\n@@ -1286,7 +1274,6 @@ impl<'a> MethodDef<'a> {\n                     cx,\n                     trait_,\n                     type_ident,\n-                    &self_args[..],\n                     nonself_args,\n                     &substructure,\n                 ))\n@@ -1357,7 +1344,6 @@ impl<'a> MethodDef<'a> {\n                 cx,\n                 trait_,\n                 type_ident,\n-                &self_args[..],\n                 nonself_args,\n                 &catch_all_substructure,\n             );\n@@ -1455,7 +1441,6 @@ impl<'a> MethodDef<'a> {\n         trait_: &TraitDef<'_>,\n         enum_def: &EnumDef,\n         type_ident: Ident,\n-        self_args: &[P<Expr>],\n         nonself_args: &[P<Expr>],\n     ) -> P<Expr> {\n         let summary = enum_def\n@@ -1471,7 +1456,6 @@ impl<'a> MethodDef<'a> {\n             cx,\n             trait_,\n             type_ident,\n-            self_args,\n             nonself_args,\n             &StaticEnum(enum_def, summary),\n         )"}]}