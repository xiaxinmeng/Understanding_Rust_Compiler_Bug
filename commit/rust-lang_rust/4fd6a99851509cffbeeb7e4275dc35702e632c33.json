{"sha": "4fd6a99851509cffbeeb7e4275dc35702e632c33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZDZhOTk4NTE1MDljZmZiZWViN2U0Mjc1ZGMzNTcwMmU2MzJjMzM=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-09T17:12:12Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-14T01:04:40Z"}, "message": "libregex: use tuple indexing", "tree": {"sha": "4bc06eaed78c3c0251ac2b484c50b5fd84a4bcb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bc06eaed78c3c0251ac2b484c50b5fd84a4bcb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fd6a99851509cffbeeb7e4275dc35702e632c33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fd6a99851509cffbeeb7e4275dc35702e632c33", "html_url": "https://github.com/rust-lang/rust/commit/4fd6a99851509cffbeeb7e4275dc35702e632c33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fd6a99851509cffbeeb7e4275dc35702e632c33/comments", "author": null, "committer": null, "parents": [{"sha": "fe48a65aaa8e8c218b42ccd67a91c903935ac9e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5", "html_url": "https://github.com/rust-lang/rust/commit/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f9ae4d2591ab84a43155f72cbb9155e64661472a", "filename": "src/libregex/parse.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fd6a99851509cffbeeb7e4275dc35702e632c33/src%2Flibregex%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fd6a99851509cffbeeb7e4275dc35702e632c33/src%2Flibregex%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Fparse.rs?ref=4fd6a99851509cffbeeb7e4275dc35702e632c33", "patch": "@@ -1031,7 +1031,7 @@ fn is_valid_cap(c: char) -> bool {\n \n fn find_class(classes: NamedClasses, name: &str) -> Option<Vec<(char, char)>> {\n     match classes.binary_search(|&(s, _)| s.cmp(name)) {\n-        BinarySearchResult::Found(i) => Some(classes[i].val1().to_vec()),\n+        BinarySearchResult::Found(i) => Some(classes[i].1.to_vec()),\n         BinarySearchResult::NotFound(_) => None,\n     }\n }"}]}