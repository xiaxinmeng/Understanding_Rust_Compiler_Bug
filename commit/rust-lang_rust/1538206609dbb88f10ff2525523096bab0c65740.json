{"sha": "1538206609dbb88f10ff2525523096bab0c65740", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MzgyMDY2MDlkYmI4OGYxMGZmMjUyNTUyMzA5NmJhYjBjNjU3NDA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-10T12:12:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-10T12:12:08Z"}, "message": "Explain inline tests", "tree": {"sha": "14e8945d06fa2121856331c146386c6d1ceaf337", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14e8945d06fa2121856331c146386c6d1ceaf337"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1538206609dbb88f10ff2525523096bab0c65740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1538206609dbb88f10ff2525523096bab0c65740", "html_url": "https://github.com/rust-lang/rust/commit/1538206609dbb88f10ff2525523096bab0c65740", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1538206609dbb88f10ff2525523096bab0c65740/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f632727b2ab985a9c5ceca781d033a08ee3822ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/f632727b2ab985a9c5ceca781d033a08ee3822ea", "html_url": "https://github.com/rust-lang/rust/commit/f632727b2ab985a9c5ceca781d033a08ee3822ea"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "cf93135ee9b8085376a28ea4b9f8af380c98a05e", "filename": "docs/dev/README.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1538206609dbb88f10ff2525523096bab0c65740/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/1538206609dbb88f10ff2525523096bab0c65740/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=1538206609dbb88f10ff2525523096bab0c65740", "patch": "@@ -303,6 +303,17 @@ Rather than talking in definitions and references, it talks in Strings and textu\n In general, API is centered around UI concerns -- the result of the call is what the user sees in the editor, and not what the compiler sees underneath.\n The results are 100% Rust specific though.\n \n+## Parser Tests\n+\n+Test for parser (`ra_parser`) live in `ra_syntax` crate (see `test_data` direcotory).\n+There are two kinds of tests:\n+\n+* Manually written test cases in `parser/ok` and `parser/error`\n+* \"Inline\" tests in `parser/inline` (these are generated) from comments in `ra_parser` crate.\n+\n+The purpose of inline tests is not to achieve full coverage by test cases, but to explain to the reader of the code what each particular `if` and `match` is responsible for.\n+If you are tempted to add a large inline test, it might be a good idea to leave only the simplest example in place, and move the test to a manual `parser/ok` test.\n+\n # Logging\n \n Logging is done by both rust-analyzer and VS Code, so it might be tricky to"}]}