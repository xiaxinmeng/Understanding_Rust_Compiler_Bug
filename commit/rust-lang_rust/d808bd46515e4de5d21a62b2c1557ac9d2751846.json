{"sha": "d808bd46515e4de5d21a62b2c1557ac9d2751846", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MDhiZDQ2NTE1ZTRkZTVkMjFhNjJiMmMxNTU3YWM5ZDI3NTE4NDY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-25T21:48:35Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-03-25T21:48:35Z"}, "message": "Save coverage file in build_base path, not /tmp", "tree": {"sha": "47c476d6fbca3c51de4d716a69bbe9b2b45b1aa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47c476d6fbca3c51de4d716a69bbe9b2b45b1aa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d808bd46515e4de5d21a62b2c1557ac9d2751846", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlyZTNAACgkQtvoGpuDi\nZlsKIA/5AfZGkF7OVsBhib6HLVlm379oO1oBY8WOw9SE+kDpLBGQp/LEVg37xwqU\nKDZhCjoVt2RqqHBM4Mwclm2tK7eiwMy3cQUs3mB0qz7fxpzZ3accj3Zxu1vT0GO8\n0ge1HJXWlmdSlnfsaKB9x5H4bBLLbHDeHg4ttMyYXWUaGBguOfGXYm0Mt3LzIagH\nex6aSM5gVMG0E9gD0RFspVl2h4s0+auSGGC/ukyDaRlQR9dlgEz2AvnleeXaEOWQ\n2DvqMb8F6gOlyMB/Pap0V1dQakynPXQF1ugAhWO7nEwz0phx2kVOvW0TCYoUfQuN\n+SGjzwHdxs7xMf1iQo3Q2dpDFlW1cAqDyz8zAZm/kk9QRykhFLK9d6OU3R3cByRj\nn0ipLTJU+CoX02i9sIw0XZYZlnUd4zrf7p5MtqmFKygo/yvHIzY/8MA4DUAPVgNR\n8rqp61HXwroHx5mm1WQmy3w3eNDqYw1nhDzD5OdZmN6TSDsni+eKkZ7R51s0pMnO\nog7IjDo5+rUpFb/7D1NyemewpCF1SyIF1MLKoFRxFuJGejWEFPat4AV8yMQ9g57u\nfyK/7G7I2Bi2r+eiUE94FdKJkRnmMpOhXFVLGwwqW89Vm1ZwcD1i2QUMrcNbMxdb\nDsNUcdYg37FkevVgwCRFnrJ7vzaWKF4lvtImdlBJ2rKu82RHXGw=\n=82ro\n-----END PGP SIGNATURE-----", "payload": "tree 47c476d6fbca3c51de4d716a69bbe9b2b45b1aa8\nparent 98d7c5463b4f8099d7e1e50087deaa195589294f\nauthor Philipp Hansch <dev@phansch.net> 1553550515 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1553550515 +0100\n\nSave coverage file in build_base path, not /tmp\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d808bd46515e4de5d21a62b2c1557ac9d2751846", "html_url": "https://github.com/rust-lang/rust/commit/d808bd46515e4de5d21a62b2c1557ac9d2751846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d808bd46515e4de5d21a62b2c1557ac9d2751846/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98d7c5463b4f8099d7e1e50087deaa195589294f", "url": "https://api.github.com/repos/rust-lang/rust/commits/98d7c5463b4f8099d7e1e50087deaa195589294f", "html_url": "https://github.com/rust-lang/rust/commit/98d7c5463b4f8099d7e1e50087deaa195589294f"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "a1f89d6c86f1d8a345b405307050cb2e2fcb5573", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=d808bd46515e4de5d21a62b2c1557ac9d2751846", "patch": "@@ -193,7 +193,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\"\n                     \"\",\n                     \"rustfix-coverage\",\n                     \"enable this to generate a Rustfix coverage file, which is saved in \\\n-                        `/tmp/rustfix_missing_coverage.txt`\",\n+                        `/<build_base>/rustfix_missing_coverage.txt`\",\n                 );\n             }\n             \"bench\" => {"}, {"sha": "9d4effb4f58607c0118713687d837f7ec9669d4f", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=d808bd46515e4de5d21a62b2c1557ac9d2751846", "patch": "@@ -247,7 +247,7 @@ pub struct Config {\n \n     /// If true, this will generate a coverage file with UI test files that run `MachineApplicable`\n     /// diagnostics but are missing `run-rustfix` annotations. The generated coverage file is\n-    /// created in `/tmp/rustfix_missing_coverage.txt`\n+    /// created in `/<build_base>/rustfix_missing_coverage.txt`\n     pub rustfix_coverage: bool,\n \n     // Configuration for various run-make tests frobbing things like C compilers"}, {"sha": "b9ddf04fad9871903107da2dd08b8782df18b7a0", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=d808bd46515e4de5d21a62b2c1557ac9d2751846", "patch": "@@ -237,7 +237,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n             \"\",\n             \"rustfix-coverage\",\n             \"enable this to generate a Rustfix coverage file, which is saved in \\\n-                `/tmp/rustfix_missing_coverage.txt`\",\n+                `./<build_base>/rustfix_missing_coverage.txt`\",\n         )\n         .optflag(\"h\", \"help\", \"show this message\");\n \n@@ -486,9 +486,10 @@ pub fn run_tests(config: &Config) {\n     // we first make sure that the coverage file does not exist.\n     // It will be created later on.\n     if config.rustfix_coverage {\n-        let coverage_file_path = Path::new(\"/tmp/rustfix_missing_coverage.txt\");\n+        let mut coverage_file_path = config.build_base.clone();\n+        coverage_file_path.push(\"rustfix_missing_coverage.txt\");\n         if coverage_file_path.exists() {\n-            if let Err(e) = fs::remove_file(coverage_file_path) {\n+            if let Err(e) = fs::remove_file(&coverage_file_path) {\n                 panic!(\"Could not delete {} due to {}\", coverage_file_path.display(), e)\n             }\n         }"}, {"sha": "c18b6db9a010fc9b6ca2e1c4ae6c3887fb0ff32f", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d808bd46515e4de5d21a62b2c1557ac9d2751846/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=d808bd46515e4de5d21a62b2c1557ac9d2751846", "patch": "@@ -2829,11 +2829,14 @@ impl<'test> TestCx<'test> {\n             if suggestions.len() > 0\n                 && !self.props.run_rustfix\n                 && !self.props.rustfix_only_machine_applicable {\n-                    let coverage_file_path = Path::new(\"/tmp/rustfix_missing_coverage.txt\");\n+                    let mut coverage_file_path = self.config.build_base.clone();\n+                    coverage_file_path.push(\"rustfix_missing_coverage.txt\");\n+                    debug!(\"coverage_file_path: {}\", coverage_file_path.display());\n+\n                     let mut file = OpenOptions::new()\n                         .create(true)\n                         .append(true)\n-                        .open(coverage_file_path)\n+                        .open(coverage_file_path.as_path())\n                         .expect(\"could not create or open file\");\n \n                     if let Err(_) = writeln!(file, \"{}\", self.testpaths.file.display()) {"}]}