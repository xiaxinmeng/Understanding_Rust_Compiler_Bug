{"sha": "74c78805970548980d6e3d58e0d3305d27a30670", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0Yzc4ODA1OTcwNTQ4OTgwZDZlM2Q1OGUwZDMzMDVkMjdhMzA2NzA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-08-07T04:27:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-07T04:27:16Z"}, "message": "Merge pull request #1145 from birkenfeld/issue-703-2\n\nLint literal suffixes not separated by underscores (idea also from #703)", "tree": {"sha": "bda533285797c327d407374f1375cf1ac53a88a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bda533285797c327d407374f1375cf1ac53a88a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74c78805970548980d6e3d58e0d3305d27a30670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74c78805970548980d6e3d58e0d3305d27a30670", "html_url": "https://github.com/rust-lang/rust/commit/74c78805970548980d6e3d58e0d3305d27a30670", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74c78805970548980d6e3d58e0d3305d27a30670/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97716b319b957b0f0f9fbb18d8ec16cacd5b96a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/97716b319b957b0f0f9fbb18d8ec16cacd5b96a4", "html_url": "https://github.com/rust-lang/rust/commit/97716b319b957b0f0f9fbb18d8ec16cacd5b96a4"}, {"sha": "2f8247ada5bc1d88653605373e953e8e8dd814fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8247ada5bc1d88653605373e953e8e8dd814fd", "html_url": "https://github.com/rust-lang/rust/commit/2f8247ada5bc1d88653605373e953e8e8dd814fd"}], "stats": {"total": 132, "additions": 124, "deletions": 8}, "files": [{"sha": "d83611f1fd30d2c3c11972c555e7f198d77895a1", "filename": "CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=74c78805970548980d6e3d58e0d3305d27a30670", "patch": "@@ -211,6 +211,7 @@ All notable changes to this project will be documented in this file.\n [`mem_forget`]: https://github.com/Manishearth/rust-clippy/wiki#mem_forget\n [`min_max`]: https://github.com/Manishearth/rust-clippy/wiki#min_max\n [`misrefactored_assign_op`]: https://github.com/Manishearth/rust-clippy/wiki#misrefactored_assign_op\n+[`mixed_case_hex_literals`]: https://github.com/Manishearth/rust-clippy/wiki#mixed_case_hex_literals\n [`modulo_one`]: https://github.com/Manishearth/rust-clippy/wiki#modulo_one\n [`mut_mut`]: https://github.com/Manishearth/rust-clippy/wiki#mut_mut\n [`mutex_atomic`]: https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic\n@@ -280,6 +281,7 @@ All notable changes to this project will be documented in this file.\n [`unnecessary_operation`]: https://github.com/Manishearth/rust-clippy/wiki#unnecessary_operation\n [`unneeded_field_pattern`]: https://github.com/Manishearth/rust-clippy/wiki#unneeded_field_pattern\n [`unsafe_removed_from_name`]: https://github.com/Manishearth/rust-clippy/wiki#unsafe_removed_from_name\n+[`unseparated_literal_suffix`]: https://github.com/Manishearth/rust-clippy/wiki#unseparated_literal_suffix\n [`unstable_as_mut_slice`]: https://github.com/Manishearth/rust-clippy/wiki#unstable_as_mut_slice\n [`unstable_as_slice`]: https://github.com/Manishearth/rust-clippy/wiki#unstable_as_slice\n [`unused_collect`]: https://github.com/Manishearth/rust-clippy/wiki#unused_collect"}, {"sha": "0c8e391121984f06be79b32f06e3896c22f9c3e8", "filename": "README.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=74c78805970548980d6e3d58e0d3305d27a30670", "patch": "@@ -17,7 +17,7 @@ Table of contents:\n \n ## Lints\n \n-There are 160 lints included in this crate:\n+There are 162 lints included in this crate:\n \n name                                                                                                                 | default | meaning\n ---------------------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -98,6 +98,7 @@ name\n [mem_forget](https://github.com/Manishearth/rust-clippy/wiki#mem_forget)                                             | allow   | `mem::forget` usage on `Drop` types is likely to cause memory leaks\n [min_max](https://github.com/Manishearth/rust-clippy/wiki#min_max)                                                   | warn    | `min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\n [misrefactored_assign_op](https://github.com/Manishearth/rust-clippy/wiki#misrefactored_assign_op)                   | warn    | having a variable on both sides of an assign op\n+[mixed_case_hex_literals](https://github.com/Manishearth/rust-clippy/wiki#mixed_case_hex_literals)                   | warn    | letter digits in hex literals should be either completely upper- or lowercased\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                                             | warn    | taking a number modulo 1, which always returns 0\n [mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                                   | allow   | usage of double-mut refs, e.g. `&mut &mut ...`\n [mutex_atomic](https://github.com/Manishearth/rust-clippy/wiki#mutex_atomic)                                         | warn    | using a mutex where an atomic value could be used instead\n@@ -165,6 +166,7 @@ name\n [unnecessary_operation](https://github.com/Manishearth/rust-clippy/wiki#unnecessary_operation)                       | warn    | outer expressions with no effect\n [unneeded_field_pattern](https://github.com/Manishearth/rust-clippy/wiki#unneeded_field_pattern)                     | warn    | Struct fields are bound to a wildcard instead of using `..`\n [unsafe_removed_from_name](https://github.com/Manishearth/rust-clippy/wiki#unsafe_removed_from_name)                 | warn    | unsafe removed from name\n+[unseparated_literal_suffix](https://github.com/Manishearth/rust-clippy/wiki#unseparated_literal_suffix)             | allow   | literal suffixes should be separated with an underscore\n [unused_collect](https://github.com/Manishearth/rust-clippy/wiki#unused_collect)                                     | warn    | `collect()`ing an iterator without using the result; this is usually better written as a for loop\n [unused_label](https://github.com/Manishearth/rust-clippy/wiki#unused_label)                                         | warn    | unused label\n [unused_lifetimes](https://github.com/Manishearth/rust-clippy/wiki#unused_lifetimes)                                 | warn    | unused lifetimes in function definitions"}, {"sha": "0e92a498664b4f905f875b9f8cf9a642ba08d67a", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670", "patch": "@@ -277,6 +277,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         methods::RESULT_UNWRAP_USED,\n         methods::WRONG_PUB_SELF_CONVENTION,\n         misc::USED_UNDERSCORE_BINDING,\n+        misc_early::UNSEPARATED_LITERAL_SUFFIX,\n         mut_mut::MUT_MUT,\n         mutex_atomic::MUTEX_INTEGER,\n         non_expressive_names::SIMILAR_NAMES,\n@@ -377,6 +378,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         misc::TOPLEVEL_REF_ARG,\n         misc_early::DOUBLE_NEG,\n         misc_early::DUPLICATE_UNDERSCORE_ARGUMENT,\n+        misc_early::MIXED_CASE_HEX_LITERALS,\n         misc_early::REDUNDANT_CLOSURE_CALL,\n         misc_early::UNNEEDED_FIELD_PATTERN,\n         mut_reference::UNNECESSARY_MUT_PASSED,"}, {"sha": "2c058f3bcc293306ad561c9fdd51ff67c3efc05a", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 88, "deletions": 3, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670", "patch": "@@ -1,9 +1,10 @@\n use rustc::lint::*;\n use std::collections::HashMap;\n+use std::char;\n use syntax::ast::*;\n use syntax::codemap::Span;\n use syntax::visit::FnKind;\n-use utils::{span_lint, span_help_and_lint, snippet, span_lint_and_then};\n+use utils::{span_lint, span_help_and_lint, snippet, snippet_opt, span_lint_and_then};\n /// **What it does:** This lint checks for structure field patterns bound to wildcards.\n ///\n /// **Why is this bad?** Using `..` instead is shorter and leaves the focus on the fields that are actually bound.\n@@ -64,13 +65,44 @@ declare_lint! {\n     \"`--x` is a double negation of `x` and not a pre-decrement as in C or C++\"\n }\n \n+/// **What it does:** Warns on hexadecimal literals with mixed-case letter digits.\n+///\n+/// **Why is this bad?** It looks confusing.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let y = 0x1a9BAcD;\n+/// ```\n+declare_lint! {\n+    pub MIXED_CASE_HEX_LITERALS, Warn,\n+    \"letter digits in hex literals should be either completely upper- or lowercased\"\n+}\n+\n+/// **What it does:** Warns if literal suffixes are not separated by an underscore.\n+///\n+/// **Why is this bad?** It is much less readable.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let y = 123832i32;\n+/// ```\n+declare_lint! {\n+    pub UNSEPARATED_LITERAL_SUFFIX, Allow,\n+    \"literal suffixes should be separated with an underscore\"\n+}\n+\n \n #[derive(Copy, Clone)]\n pub struct MiscEarly;\n \n impl LintPass for MiscEarly {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(UNNEEDED_FIELD_PATTERN, DUPLICATE_UNDERSCORE_ARGUMENT, REDUNDANT_CLOSURE_CALL, DOUBLE_NEG)\n+        lint_array!(UNNEEDED_FIELD_PATTERN, DUPLICATE_UNDERSCORE_ARGUMENT, REDUNDANT_CLOSURE_CALL,\n+                    DOUBLE_NEG, MIXED_CASE_HEX_LITERALS, UNSEPARATED_LITERAL_SUFFIX)\n     }\n }\n \n@@ -174,7 +206,60 @@ impl EarlyLintPass for MiscEarly {\n                               DOUBLE_NEG,\n                               expr.span,\n                               \"`--x` could be misinterpreted as pre-decrement by C programmers, is usually a no-op\");\n-    }\n+                }\n+            }\n+            ExprKind::Lit(ref lit) => {\n+                if_let_chain! {[\n+                    let LitKind::Int(..) = lit.node,\n+                    let Some(src) = snippet_opt(cx, lit.span),\n+                    let Some(firstch) = src.chars().next(),\n+                    char::to_digit(firstch, 10).is_some()\n+                ], {\n+                    let mut prev = '\\0';\n+                    for ch in src.chars() {\n+                        if ch == 'i' || ch == 'u' {\n+                            if prev != '_' {\n+                                span_lint(cx, UNSEPARATED_LITERAL_SUFFIX, lit.span,\n+                                          \"integer type suffix should be separated by an underscore\");\n+                            }\n+                            break;\n+                        }\n+                        prev = ch;\n+                    }\n+                    if src.starts_with(\"0x\") {\n+                        let mut seen = (false, false);\n+                        for ch in src.chars() {\n+                            match ch {\n+                                'a' ... 'f' => seen.0 = true,\n+                                'A' ... 'F' => seen.1 = true,\n+                                'i' | 'u'   => break,   // start of suffix already\n+                                _ => ()\n+                            }\n+                        }\n+                        if seen.0 && seen.1 {\n+                            span_lint(cx, MIXED_CASE_HEX_LITERALS, lit.span,\n+                                      \"inconsistent casing in hexadecimal literal\");\n+                        }\n+                    }\n+                }}\n+                if_let_chain! {[\n+                    let LitKind::Float(..) = lit.node,\n+                    let Some(src) = snippet_opt(cx, lit.span),\n+                    let Some(firstch) = src.chars().next(),\n+                    char::to_digit(firstch, 10).is_some()\n+                ], {\n+                    let mut prev = '\\0';\n+                    for ch in src.chars() {\n+                        if ch == 'f' {\n+                            if prev != '_' {\n+                                span_lint(cx, UNSEPARATED_LITERAL_SUFFIX, lit.span,\n+                                          \"float type suffix should be separated by an underscore\");\n+                            }\n+                            break;\n+                        }\n+                        prev = ch;\n+                    }\n+                }}\n             }\n             _ => ()\n         }"}, {"sha": null, "filename": "tests/compile-fail/doc.rs", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdoc.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670"}, {"sha": null, "filename": "tests/compile-fail/entry.rs", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fentry.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670"}, {"sha": "bee9688f58144c5bc5209f40daf348d2d139d5fa", "filename": "tests/compile-fail/filter_methods.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Ffilter_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Ffilter_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffilter_methods.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670", "patch": "@@ -8,17 +8,17 @@ fn main() {\n                               .map(|x| x * 2)\n                               .collect();\n \n-    let _: Vec<_> = vec![5i8; 6].into_iter() //~ERROR called `filter(p).flat_map(q)` on an `Iterator`\n+    let _: Vec<_> = vec![5_i8; 6].into_iter() //~ERROR called `filter(p).flat_map(q)` on an `Iterator`\n                                 .filter(|&x| x == 0)\n                                 .flat_map(|x| x.checked_mul(2))\n                                 .collect();\n \n-    let _: Vec<_> = vec![5i8; 6].into_iter() //~ERROR called `filter_map(p).flat_map(q)` on an `Iterator`\n+    let _: Vec<_> = vec![5_i8; 6].into_iter() //~ERROR called `filter_map(p).flat_map(q)` on an `Iterator`\n                                 .filter_map(|x| x.checked_mul(2))\n                                 .flat_map(|x| x.checked_mul(2))\n                                 .collect();\n \n-    let _: Vec<_> = vec![5i8; 6].into_iter() //~ERROR called `filter_map(p).map(q)` on an `Iterator`\n+    let _: Vec<_> = vec![5_i8; 6].into_iter() //~ERROR called `filter_map(p).map(q)` on an `Iterator`\n                                 .filter_map(|x| x.checked_mul(2))\n                                 .map(|x| x.checked_mul(2))\n                                 .collect();"}, {"sha": null, "filename": "tests/compile-fail/if_not_else.rs", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fif_not_else.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670"}, {"sha": "7645fb56e20029e7724b525b23517009b4b2b60e", "filename": "tests/compile-fail/literals.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fliterals.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670", "patch": "@@ -0,0 +1,25 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#![deny(mixed_case_hex_literals)]\n+#![deny(unseparated_literal_suffix)]\n+#![allow(dead_code)]\n+\n+fn main() {\n+    let ok1 = 0xABCD;\n+    let ok3 = 0xab_cd;\n+    let ok4 = 0xab_cd_i32;\n+    let ok5 = 0xAB_CD_u32;\n+    let ok5 = 0xAB_CD_isize;\n+    let fail1 = 0xabCD;       //~ERROR inconsistent casing in hexadecimal literal\n+    let fail2 = 0xabCD_u32;   //~ERROR inconsistent casing in hexadecimal literal\n+    let fail2 = 0xabCD_isize; //~ERROR inconsistent casing in hexadecimal literal\n+\n+    let ok6 = 1234_i32;\n+    let ok7 = 1234_f32;\n+    let ok8 = 1234_isize;\n+    let fail3 = 1234i32;      //~ERROR integer type suffix should be separated\n+    let fail4 = 1234u32;      //~ERROR integer type suffix should be separated\n+    let fail5 = 1234isize;    //~ERROR integer type suffix should be separated\n+    let fail6 = 1234usize;    //~ERROR integer type suffix should be separated\n+    let fail7 = 1.5f32;       //~ERROR float type suffix should be separated\n+}"}, {"sha": "1200e25cdbcea4689505d08a66bee2da2119649c", "filename": "tests/compile-fail/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74c78805970548980d6e3d58e0d3305d27a30670/tests%2Fcompile-fail%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fshadow.rs?ref=74c78805970548980d6e3d58e0d3305d27a30670", "patch": "@@ -20,7 +20,7 @@ fn main() {\n     let y = 1;\n     let x = y; //~ERROR `x` is shadowed by `y`\n \n-    let o = Some(1u8);\n+    let o = Some(1_u8);\n \n     if let Some(p) = o { assert_eq!(1, p); }\n     match o {"}]}