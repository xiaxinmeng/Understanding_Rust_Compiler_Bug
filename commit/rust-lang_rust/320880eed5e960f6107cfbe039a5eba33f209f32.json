{"sha": "320880eed5e960f6107cfbe039a5eba33f209f32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMDg4MGVlZDVlOTYwZjYxMDdjZmJlMDM5YTVlYmEzM2YyMDlmMzI=", "commit": {"author": {"name": "christopherdumas", "email": "christopherdumas@me.com", "date": "2015-09-15T14:54:43Z"}, "committer": {"name": "christopherdumas", "email": "christopherdumas@me.com", "date": "2015-09-15T17:34:57Z"}, "message": "Fix option link and anchor links.", "tree": {"sha": "b0c16f18b41eb28ca44ac07146929f29d4847c54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0c16f18b41eb28ca44ac07146929f29d4847c54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/320880eed5e960f6107cfbe039a5eba33f209f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/320880eed5e960f6107cfbe039a5eba33f209f32", "html_url": "https://github.com/rust-lang/rust/commit/320880eed5e960f6107cfbe039a5eba33f209f32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/320880eed5e960f6107cfbe039a5eba33f209f32/comments", "author": null, "committer": null, "parents": [{"sha": "8a19b234c7315af478786801eb53a984a7059e14", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a19b234c7315af478786801eb53a984a7059e14", "html_url": "https://github.com/rust-lang/rust/commit/8a19b234c7315af478786801eb53a984a7059e14"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "2b590c82a89bf4c238538fc63e29bcf53bf7a647", "filename": "src/doc/trpl/error-handling.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/320880eed5e960f6107cfbe039a5eba33f209f32/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/320880eed5e960f6107cfbe039a5eba33f209f32/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ferror-handling.md?ref=320880eed5e960f6107cfbe039a5eba33f209f32", "patch": "@@ -33,12 +33,12 @@ systems may want to jump around.\n     * [Composing `Option` and `Result`](#composing-option-and-result)\n     * [The limits of combinators](#the-limits-of-combinators)\n     * [Early returns](#early-returns)\n-    * [The `try!` macro](#the-try-macro)\n+    * [The `try!` macro](#the-try!-macro)\n     * [Defining your own error type](#defining-your-own-error-type)\n * [Standard library traits used for error handling](#standard-library-traits-used-for-error-handling)\n     * [The `Error` trait](#the-error-trait)\n     * [The `From` trait](#the-from-trait)\n-    * [The real `try!` macro](#the-real-try-macro)\n+    * [The real `try!` macro](#the-real-try!-macro)\n     * [Composing custom error types](#composing-custom-error-types)\n     * [Advice for library writers](#advice-for-library-writers)\n * [Case study: A program to read population data](#case-study-a-program-to-read-population-data)\n@@ -120,10 +120,9 @@ It would be better if we just showed the code for unwrapping because it is so\n simple, but to do that, we will first need to explore the `Option` and `Result`\n types. Both of these types have a method called `unwrap` defined on them.\n \n-## The `Option` type\n+### The `Option` type\n \n-The `Option` type is\n-[defined in the standard library][1]: \n+The `Option` type is [defined in the standard library][5]:\n \n ```rust\n enum Option<T> {"}]}