{"sha": "7ff01a4d59779609992aad947264abcc64617917", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZjAxYTRkNTk3Nzk2MDk5OTJhYWQ5NDcyNjRhYmNjNjQ2MTc5MTc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-24T11:44:07Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-24T11:44:07Z"}, "message": "Use mir::SourceInfo again in FunctionCx.source_info_set\n\nFixes #800", "tree": {"sha": "ad7133cd0e6ad92c88b848e32aaff26b81d0a991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad7133cd0e6ad92c88b848e32aaff26b81d0a991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ff01a4d59779609992aad947264abcc64617917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff01a4d59779609992aad947264abcc64617917", "html_url": "https://github.com/rust-lang/rust/commit/7ff01a4d59779609992aad947264abcc64617917", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ff01a4d59779609992aad947264abcc64617917/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399cada762d5c2f8cdedb9efa8e7e7fb8059cd85", "url": "https://api.github.com/repos/rust-lang/rust/commits/399cada762d5c2f8cdedb9efa8e7e7fb8059cd85", "html_url": "https://github.com/rust-lang/rust/commit/399cada762d5c2f8cdedb9efa8e7e7fb8059cd85"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "b14e8af79a8d8cba5f0889f429fefb558c510c3e", "filename": "src/common.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7ff01a4d59779609992aad947264abcc64617917/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ff01a4d59779609992aad947264abcc64617917/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=7ff01a4d59779609992aad947264abcc64617917", "patch": "@@ -270,8 +270,7 @@ pub struct FunctionCx<'clif, 'tcx, B: Backend + 'static> {\n     pub constants_cx: &'clif mut crate::constant::ConstantCx,\n     pub caches: &'clif mut Caches<'tcx>,\n \n-    // FIXME switch back to `SourceInfo`, once it derives `Eq` and `Hash` again.\n-    pub source_info_set: indexmap::IndexSet<(Span, mir::SourceScope)>,\n+    pub source_info_set: indexmap::IndexSet<SourceInfo>,\n }\n \n impl<'tcx, B: Backend> LayoutOf for FunctionCx<'_, 'tcx, B> {\n@@ -350,7 +349,7 @@ impl<'tcx, B: Backend + 'static> FunctionCx<'_, 'tcx, B> {\n     }\n \n     pub fn set_debug_loc(&mut self, source_info: mir::SourceInfo) {\n-        let (index, _) = self.source_info_set.insert_full((source_info.span, source_info.scope));\n+        let (index, _) = self.source_info_set.insert_full(source_info);\n         self.bcx.set_srcloc(SourceLoc::new(index as u32));\n     }\n "}, {"sha": "e61bafaa6f10c7d0e41cf84b8dd55260a9f62f3f", "filename": "src/debuginfo/line_info.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ff01a4d59779609992aad947264abcc64617917/src%2Fdebuginfo%2Fline_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ff01a4d59779609992aad947264abcc64617917/src%2Fdebuginfo%2Fline_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fline_info.rs?ref=7ff01a4d59779609992aad947264abcc64617917", "patch": "@@ -105,7 +105,7 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n         &mut self,\n         context: &Context,\n         isa: &dyn cranelift_codegen::isa::TargetIsa,\n-        source_info_set: &indexmap::IndexSet<(Span, mir::SourceScope)>,\n+        source_info_set: &indexmap::IndexSet<SourceInfo>,\n     ) -> CodeOffset {\n         let tcx = self.debug_context.tcx;\n \n@@ -147,7 +147,7 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n                 line_program.row().address_offset = offset as u64;\n                 if !srcloc.is_default() {\n                     let source_info = *source_info_set.get_index(srcloc.bits() as usize).unwrap();\n-                    create_row_for_span(line_program, source_info.0);\n+                    create_row_for_span(line_program, source_info.span);\n                 } else {\n                     create_row_for_span(line_program, self.mir.span);\n                 }"}, {"sha": "506cbc91c02af0fca9052b47247b72b420e2ba19", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ff01a4d59779609992aad947264abcc64617917/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ff01a4d59779609992aad947264abcc64617917/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=7ff01a4d59779609992aad947264abcc64617917", "patch": "@@ -254,7 +254,7 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n         &mut self,\n         context: &Context,\n         isa: &dyn cranelift_codegen::isa::TargetIsa,\n-        source_info_set: &indexmap::IndexSet<(Span, mir::SourceScope)>,\n+        source_info_set: &indexmap::IndexSet<SourceInfo>,\n         local_map: HashMap<mir::Local, CPlace<'tcx>>,\n     ) {\n         let end = self.create_debug_lines(context, isa, source_info_set);"}]}