{"sha": "70c1463519e2f505fcc072c374c7189654203c5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYzE0NjM1MTllMmY1MDVmY2MwNzJjMzc0YzcxODk2NTQyMDNjNWE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-05T05:00:06Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-05T06:52:18Z"}, "message": "Fix various references in late-running tests and things", "tree": {"sha": "ffc75e74a860614a56190020dd2efe190cc33e9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffc75e74a860614a56190020dd2efe190cc33e9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70c1463519e2f505fcc072c374c7189654203c5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70c1463519e2f505fcc072c374c7189654203c5a", "html_url": "https://github.com/rust-lang/rust/commit/70c1463519e2f505fcc072c374c7189654203c5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70c1463519e2f505fcc072c374c7189654203c5a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f9127d8ad8c6076c30bcacb7dc19e05ec265b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/14f9127d8ad8c6076c30bcacb7dc19e05ec265b1", "html_url": "https://github.com/rust-lang/rust/commit/14f9127d8ad8c6076c30bcacb7dc19e05ec265b1"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "9404802cb681bd63f612fa70deb90cfd1cd9c398", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/70c1463519e2f505fcc072c374c7189654203c5a/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70c1463519e2f505fcc072c374c7189654203c5a/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=70c1463519e2f505fcc072c374c7189654203c5a", "patch": "@@ -10,28 +10,28 @@\n \n //! # Standalone Tests for the Inference Module\n \n-use driver::diagnostic;\n-use driver::diagnostic::Emitter;\n-use driver::driver;\n-use middle::lang_items;\n-use middle::region::{mod, CodeExtent};\n-use middle::resolve;\n-use middle::resolve_lifetime;\n-use middle::stability;\n-use middle::subst;\n-use middle::subst::Subst;\n-use middle::ty::{mod, Ty};\n-use middle::infer::combine::Combine;\n-use middle::infer;\n-use middle::infer::lub::Lub;\n-use middle::infer::glb::Glb;\n-use session::{mod,config};\n+use diagnostic;\n+use diagnostic::Emitter;\n+use driver;\n+use rustc_typeck::middle::lang_items;\n+use rustc_typeck::middle::region::{mod, CodeExtent};\n+use rustc_typeck::middle::resolve;\n+use rustc_typeck::middle::resolve_lifetime;\n+use rustc_typeck::middle::stability;\n+use rustc_typeck::middle::subst;\n+use rustc_typeck::middle::subst::Subst;\n+use rustc_typeck::middle::ty::{mod, Ty};\n+use rustc_typeck::middle::infer::combine::Combine;\n+use rustc_typeck::middle::infer;\n+use rustc_typeck::middle::infer::lub::Lub;\n+use rustc_typeck::middle::infer::glb::Glb;\n+use rustc_typeck::util::ppaux::{ty_to_string, Repr, UserString};\n+use rustc::session::{mod,config};\n use syntax::{abi, ast, ast_map, ast_util};\n use syntax::codemap;\n use syntax::codemap::{Span, CodeMap, DUMMY_SP};\n use syntax::diagnostic::{Level, RenderSpan, Bug, Fatal, Error, Warning, Note, Help};\n use syntax::parse::token;\n-use util::ppaux::{ty_to_string, Repr, UserString};\n \n use arena::TypedArena;\n \n@@ -108,7 +108,7 @@ fn test_env(source_string: &str,\n \n     let sess = session::build_session_(options, None, span_diagnostic_handler);\n     let krate_config = Vec::new();\n-    let input = driver::StrInput(source_string.to_string());\n+    let input = config::Input::Str(source_string.to_string());\n     let krate = driver::phase_1_parse_input(&sess, krate_config, &input);\n     let krate = driver::phase_2_configure_and_expand(&sess, krate, \"test\", None)\n                     .expect(\"phase 2 aborted\");"}, {"sha": "8a0c14d2d7e366ce41772bc7faf066e4790db19b", "filename": "src/test/run-make/issue-19371/foo.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/70c1463519e2f505fcc072c374c7189654203c5a/src%2Ftest%2Frun-make%2Fissue-19371%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70c1463519e2f505fcc072c374c7189654203c5a/src%2Ftest%2Frun-make%2Fissue-19371%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-19371%2Ffoo.rs?ref=70c1463519e2f505fcc072c374c7189654203c5a", "patch": "@@ -9,12 +9,12 @@\n // except according to those terms.\n \n extern crate rustc;\n-extern crate rustc_trans;\n+extern crate rustc_driver;\n extern crate syntax;\n \n use rustc::session::{build_session, Session};\n-use rustc::session::config::{basic_options, build_configuration, OutputTypeExe};\n-use rustc_trans::driver::driver::{Input, StrInput, compile_input};\n+use rustc::session::config::{basic_options, build_configuration, Input, OutputTypeExe};\n+use rustc_driver::driver::{compile_input};\n use syntax::diagnostics::registry::Registry;\n \n fn main() {\n@@ -55,7 +55,7 @@ fn compile(code: String, output: Path, sysroot: Path) {\n \n     compile_input(sess,\n             cfg,\n-            &StrInput(code),\n+            &Input::Str(code),\n             &None,\n             &Some(output),\n             None);"}]}