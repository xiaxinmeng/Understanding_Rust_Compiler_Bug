{"sha": "5fb1a652156d2d4d72d933976632aba7eeb3d614", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYjFhNjUyMTU2ZDJkNGQ3MmQ5MzM5NzY2MzJhYmE3ZWViM2Q2MTQ=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-08-10T11:31:05Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-09-20T14:15:36Z"}, "message": "Inline a function that is only called once", "tree": {"sha": "c8a124ba04dae4f03bedac85bd674c19c31227f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8a124ba04dae4f03bedac85bd674c19c31227f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fb1a652156d2d4d72d933976632aba7eeb3d614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb1a652156d2d4d72d933976632aba7eeb3d614", "html_url": "https://github.com/rust-lang/rust/commit/5fb1a652156d2d4d72d933976632aba7eeb3d614", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fb1a652156d2d4d72d933976632aba7eeb3d614/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5afeed05e84afc5ee9bec6a8cc1003e0b97aa7fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5afeed05e84afc5ee9bec6a8cc1003e0b97aa7fb", "html_url": "https://github.com/rust-lang/rust/commit/5afeed05e84afc5ee9bec6a8cc1003e0b97aa7fb"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "c3c565cc08fbcfa55e89e7f483e0d1f842978860", "filename": "compiler/rustc_trait_selection/src/opaque_types.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5fb1a652156d2d4d72d933976632aba7eeb3d614/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fb1a652156d2d4d72d933976632aba7eeb3d614/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs?ref=5fb1a652156d2d4d72d933976632aba7eeb3d614", "patch": "@@ -961,6 +961,7 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n         origin: hir::OpaqueTyOrigin,\n     ) -> Ty<'tcx> {\n         let infcx = self.infcx;\n+        let tcx = infcx.tcx;\n         let OpaqueTypeKey { def_id, substs } = opaque_type_key;\n \n         // Use the same type variable if the exact same opaque type appears more\n@@ -992,15 +993,6 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n         }\n \n         debug!(\"generated new type inference var {:?}\", ty_var.kind());\n-        self.compute_opaque_type_obligations(opaque_type_key);\n-\n-        ty_var\n-    }\n-\n-    fn compute_opaque_type_obligations(&mut self, opaque_type_key: OpaqueTypeKey<'tcx>) {\n-        let infcx = self.infcx;\n-        let tcx = infcx.tcx;\n-        let OpaqueTypeKey { def_id, substs } = opaque_type_key;\n \n         let item_bounds = tcx.explicit_item_bounds(def_id);\n         debug!(?item_bounds);\n@@ -1021,7 +1013,7 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n             if let ty::PredicateKind::Projection(projection) = predicate.kind().skip_binder() {\n                 if projection.ty.references_error() {\n                     // No point on adding these obligations since there's a type error involved.\n-                    return;\n+                    return ty_var;\n                 }\n             }\n         }\n@@ -1040,6 +1032,8 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n             debug!(\"instantiate_opaque_types: predicate={:?}\", predicate);\n             self.obligations.push(traits::Obligation::new(cause, self.param_env, predicate));\n         }\n+\n+        ty_var\n     }\n }\n "}]}