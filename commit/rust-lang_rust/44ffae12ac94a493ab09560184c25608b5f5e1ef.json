{"sha": "44ffae12ac94a493ab09560184c25608b5f5e1ef", "node_id": "C_kwDOAAsO6NoAKDQ0ZmZhZTEyYWM5NGE0OTNhYjA5NTYwMTg0YzI1NjA4YjVmNWUxZWY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-14T16:53:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-14T16:53:26Z"}, "message": "Merge #11284\n\n11284: internal: Remove redundant recursion limit r=jonas-schievink a=jonas-schievink\n\n`Expander` already does this, so we don't have to track the depth when collecting associated items.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "571863bb2734bc2a44aefc79b3faf225e91a3664", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/571863bb2734bc2a44aefc79b3faf225e91a3664"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44ffae12ac94a493ab09560184c25608b5f5e1ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh4aqGCRBK7hj4Ov3rIwAAga0IAImT1pgUK+kn3i4BGn4dT8Pi\naSYy7ZqMEyKgEbQdPGGJMGv1yQm+jomGrv2n4kF9b9BZSYm9p/BzYvA/LfqzI8pP\nS/aQGvtBMlQQ6yPU3M0v78Y+2fGEIkgJ2ADoyJQ7dMJ0V2tOBzzu74n/1/DdTPmN\noZ/jzQjrcpo0Gn9SkJ80v1HaHgy0dDLw6mLrTBxjw5om1q8uRvEhTA9ONVPu2jw2\n7VDzOM1T8Rz7ucJhOXcQ2xKbXLqbF2setyEMPKLU06KKmcVMkBJMgVwIY64iL6hR\ndzgMwv4+ikyBDumhRt7KcbXdugeAQhqi8eqpyTrhFKqmC9ohFn8kgVfAfGhKjY0=\n=bCPb\n-----END PGP SIGNATURE-----\n", "payload": "tree 571863bb2734bc2a44aefc79b3faf225e91a3664\nparent 9ba6cfa9c70c153b71982b07f39aab73a5252ef8\nparent 72fd08d8d2d3915a0d9cc868dca7c4bc8ec2776d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1642179206 +0000\ncommitter GitHub <noreply@github.com> 1642179206 +0000\n\nMerge #11284\n\n11284: internal: Remove redundant recursion limit r=jonas-schievink a=jonas-schievink\n\n`Expander` already does this, so we don't have to track the depth when collecting associated items.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44ffae12ac94a493ab09560184c25608b5f5e1ef", "html_url": "https://github.com/rust-lang/rust/commit/44ffae12ac94a493ab09560184c25608b5f5e1ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44ffae12ac94a493ab09560184c25608b5f5e1ef/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ba6cfa9c70c153b71982b07f39aab73a5252ef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ba6cfa9c70c153b71982b07f39aab73a5252ef8", "html_url": "https://github.com/rust-lang/rust/commit/9ba6cfa9c70c153b71982b07f39aab73a5252ef8"}, {"sha": "72fd08d8d2d3915a0d9cc868dca7c4bc8ec2776d", "url": "https://api.github.com/repos/rust-lang/rust/commits/72fd08d8d2d3915a0d9cc868dca7c4bc8ec2776d", "html_url": "https://github.com/rust-lang/rust/commit/72fd08d8d2d3915a0d9cc868dca7c4bc8ec2776d"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "97930871f0d90b6845b66976e70e7af2e3f04def", "filename": "crates/hir_def/src/data.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/44ffae12ac94a493ab09560184c25608b5f5e1ef/crates%2Fhir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ffae12ac94a493ab09560184c25608b5f5e1ef/crates%2Fhir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdata.rs?ref=44ffae12ac94a493ab09560184c25608b5f5e1ef", "patch": "@@ -358,7 +358,6 @@ fn do_collect(\n         assoc_items.iter().copied(),\n         tree_id,\n         container,\n-        100,\n     );\n \n     let attribute_calls =\n@@ -375,12 +374,7 @@ fn collect_items(\n     assoc_items: impl Iterator<Item = AssocItem>,\n     tree_id: item_tree::TreeId,\n     container: ItemContainerId,\n-    limit: usize,\n ) {\n-    if limit == 0 {\n-        return;\n-    }\n-\n     let item_tree = tree_id.item_tree(db);\n     let crate_graph = db.crate_graph();\n     let cfg_options = &crate_graph[module.krate].cfg_options;\n@@ -401,7 +395,7 @@ fn collect_items(\n             {\n                 attr_calls.push((ast_id, call_id));\n                 let res = expander.enter_expand_id(db, call_id);\n-                collect_macro_items(db, items, attr_calls, module, expander, container, limit, res);\n+                collect_macro_items(db, items, attr_calls, module, expander, container, res);\n                 continue 'items;\n             }\n         }\n@@ -435,9 +429,7 @@ fn collect_items(\n                 let res = expander.enter_expand(db, call);\n \n                 if let Ok(res) = res {\n-                    collect_macro_items(\n-                        db, items, attr_calls, module, expander, container, limit, res,\n-                    );\n+                    collect_macro_items(db, items, attr_calls, module, expander, container, res);\n                 }\n             }\n         }\n@@ -451,15 +443,14 @@ fn collect_macro_items(\n     module: ModuleId,\n     expander: &mut Expander,\n     container: ItemContainerId,\n-    limit: usize,\n     res: ExpandResult<Option<(Mark, ast::MacroItems)>>,\n ) {\n     if let Some((mark, mac)) = res.value {\n         let src: InFile<ast::MacroItems> = expander.to_source(mac);\n         let tree_id = item_tree::TreeId::new(src.file_id, None);\n         let item_tree = tree_id.item_tree(db);\n         let iter = item_tree.top_level_items().iter().filter_map(ModItem::as_assoc_item);\n-        collect_items(db, items, attr_calls, module, expander, iter, tree_id, container, limit - 1);\n+        collect_items(db, items, attr_calls, module, expander, iter, tree_id, container);\n \n         expander.exit(db, mark);\n     }"}]}