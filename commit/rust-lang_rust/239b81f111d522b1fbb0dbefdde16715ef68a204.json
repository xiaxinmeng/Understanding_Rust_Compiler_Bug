{"sha": "239b81f111d522b1fbb0dbefdde16715ef68a204", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzOWI4MWYxMTFkNTIyYjFmYmIwZGJlZmRkZTE2NzE1ZWY2OGEyMDQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-06-03T20:28:50Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-06-08T00:42:50Z"}, "message": "std: Change str::from_bytes to raise a condition on invalid input\n\nAs per #4765", "tree": {"sha": "7c0777f5cf610e4719775fe87f941ebe3f74886c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c0777f5cf610e4719775fe87f941ebe3f74886c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/239b81f111d522b1fbb0dbefdde16715ef68a204", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/239b81f111d522b1fbb0dbefdde16715ef68a204", "html_url": "https://github.com/rust-lang/rust/commit/239b81f111d522b1fbb0dbefdde16715ef68a204", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/239b81f111d522b1fbb0dbefdde16715ef68a204/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8cf2f8056d29423430b723acd70e525d1249a32", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8cf2f8056d29423430b723acd70e525d1249a32", "html_url": "https://github.com/rust-lang/rust/commit/b8cf2f8056d29423430b723acd70e525d1249a32"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "359c64c5f287ba1ad457820fede9c78ef5a43445", "filename": "src/libstd/str.rs", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/239b81f111d522b1fbb0dbefdde16715ef68a204/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/239b81f111d522b1fbb0dbefdde16715ef68a204/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=239b81f111d522b1fbb0dbefdde16715ef68a204", "patch": "@@ -39,6 +39,13 @@ use vec::{OwnedVector, OwnedCopyableVector};\n \n #[cfg(not(test))] use cmp::{Eq, Ord, Equiv, TotalEq};\n \n+/*\n+Section: Conditions\n+*/\n+condition! {\n+    not_utf8: (~str) -> ~str;\n+}\n+\n /*\n Section: Creating a string\n */\n@@ -48,11 +55,20 @@ Section: Creating a string\n  *\n  * # Failure\n  *\n- * Fails if invalid UTF-8\n+ * Raises the `not_utf8` condition if invalid UTF-8\n  */\n-pub fn from_bytes(vv: &const [u8]) -> ~str {\n-    assert!(is_utf8(vv));\n-    return unsafe { raw::from_bytes(vv) };\n+\n+pub fn from_bytes(vv: &[u8]) -> ~str {\n+    use str::not_utf8::cond;\n+\n+    if !is_utf8(vv) {\n+        let first_bad_byte = vec::find(vv, |b| !is_utf8([*b])).get();\n+        cond.raise(fmt!(\"from_bytes: input is not UTF-8; first bad byte is %u\",\n+                        first_bad_byte as uint))\n+    }\n+    else {\n+        return unsafe { raw::from_bytes(vv) }\n+    }\n }\n \n /**\n@@ -3563,9 +3579,10 @@ mod tests {\n     }\n \n     #[test]\n-    #[should_fail]\n     #[ignore(cfg(windows))]\n     fn test_from_bytes_fail() {\n+        use str::not_utf8::cond;\n+\n         let bb = ~[0xff_u8, 0xb8_u8, 0xa8_u8,\n                   0xe0_u8, 0xb9_u8, 0x84_u8,\n                   0xe0_u8, 0xb8_u8, 0x97_u8,\n@@ -3577,7 +3594,15 @@ mod tests {\n                   0x20_u8, 0x4e_u8, 0x61_u8,\n                   0x6d_u8];\n \n-         let _x = from_bytes(bb);\n+        let mut error_happened = false;\n+        let _x = do cond.trap(|err| {\n+            assert_eq!(err, ~\"from_bytes: input is not UTF-8; first bad byte is 255\");\n+            error_happened = true;\n+            ~\"\"\n+        }).in {\n+            from_bytes(bb)\n+        };\n+        assert!(error_happened);\n     }\n \n     #[test]"}]}