{"sha": "9c8e88b97353d18a422ec9b67ac06da47bdc632e", "node_id": "C_kwDOAAsO6NoAKDljOGU4OGI5NzM1M2QxOGE0MjJlYzliNjdhYzA2ZGE0N2JkYzYzMmU", "commit": {"author": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T13:38:10Z"}, "committer": {"name": "Fe\u0301lix Saparelli", "email": "felix@passcod.name", "date": "2021-10-27T13:38:56Z"}, "message": "Update doctests for renames", "tree": {"sha": "b952b4b98987e696bd2041a26a57044fa2ad4c02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b952b4b98987e696bd2041a26a57044fa2ad4c02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c8e88b97353d18a422ec9b67ac06da47bdc632e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8e88b97353d18a422ec9b67ac06da47bdc632e", "html_url": "https://github.com/rust-lang/rust/commit/9c8e88b97353d18a422ec9b67ac06da47bdc632e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c8e88b97353d18a422ec9b67ac06da47bdc632e/comments", "author": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "committer": {"login": "passcod", "id": 155787, "node_id": "MDQ6VXNlcjE1NTc4Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/155787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/passcod", "html_url": "https://github.com/passcod", "followers_url": "https://api.github.com/users/passcod/followers", "following_url": "https://api.github.com/users/passcod/following{/other_user}", "gists_url": "https://api.github.com/users/passcod/gists{/gist_id}", "starred_url": "https://api.github.com/users/passcod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/passcod/subscriptions", "organizations_url": "https://api.github.com/users/passcod/orgs", "repos_url": "https://api.github.com/users/passcod/repos", "events_url": "https://api.github.com/users/passcod/events{/privacy}", "received_events_url": "https://api.github.com/users/passcod/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a314678639089dcc703e9ad4cb705f79abba0a39", "url": "https://api.github.com/repos/rust-lang/rust/commits/a314678639089dcc703e9ad4cb705f79abba0a39", "html_url": "https://github.com/rust-lang/rust/commit/a314678639089dcc703e9ad4cb705f79abba0a39"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7851c5bf5fba17e79656ff6fa95cd931860b1ca0", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c8e88b97353d18a422ec9b67ac06da47bdc632e/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c8e88b97353d18a422ec9b67ac06da47bdc632e/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=9c8e88b97353d18a422ec9b67ac06da47bdc632e", "patch": "@@ -2454,7 +2454,7 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<&str, String> = HashMap::new();\n-    /// let entry = map.entry(\"poneyland\").insert(\"hoho\".to_string());\n+    /// let entry = map.entry(\"poneyland\").insert_entry(\"hoho\".to_string());\n     ///\n     /// assert_eq!(entry.key(), &\"poneyland\");\n     /// ```\n@@ -2800,7 +2800,7 @@ impl<'a, K: 'a, V: 'a> VacantEntry<'a, K, V> {\n     /// let mut map: HashMap<&str, u32> = HashMap::new();\n     ///\n     /// if let Entry::Vacant(o) = map.entry(\"poneyland\") {\n-    ///     o.insert(37);\n+    ///     o.insert_entry(37);\n     /// }\n     /// assert_eq!(map[\"poneyland\"], 37);\n     /// ```"}]}