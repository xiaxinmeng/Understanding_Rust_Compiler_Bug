{"sha": "962ac8183d174d409db549cd6b502d847aa04f12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MmFjODE4M2QxNzRkNDA5ZGI1NDljZDZiNTAyZDg0N2FhMDRmMTI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-14T19:55:31Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-18T12:30:09Z"}, "message": "Remove impl_trait_in_bindings handling on inference error reporting", "tree": {"sha": "aa4a8b82e98ec89c7ab743c09cc6e0383b3df6a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa4a8b82e98ec89c7ab743c09cc6e0383b3df6a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/962ac8183d174d409db549cd6b502d847aa04f12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmD0HtEACgkQgTGiTgx5\n76+W1RAAtHIlGXqiIuHOqEeNU5EjOC/BMMoxvFosme19TsJi2EAK+jyiBSloPyk/\nGfWe3gMMA2ztyKkpcIhbERMxDKHc6e7GoFzNAOITpzeTN9vpi/a3mv40ktKRQWmu\nmMhzEa4e/yBP+eZhAenmq12w+OGnD6fdfxntxgo0eYOPyTsmGCVUChN/hR4JoK6j\n0xOlb5aZmLUmKwzQfY2+IDOJTF0z2VIwkB5TrJyO00xFBym2aeOQxuDtIxkI95ai\ndVMc1/RdUobEQ6rafNBVfh6rlPNN06SECyk3Y3ZJmaTLP3hAL/vVm5m+dG+vQpkt\nMYw99N3CYqEbOm0Sn3tmUW0npwpdNH7kKAIV9dp4/VCoL7SngQC7vIFqzjV9aAKE\nsv+xXsWHGlYaJR+fHRyiLo3zlFVNRyhAiSKHt5M9ITm7BvYpfDQ3VDAD2KPfxMlk\naZUmQ3BxswnotWf7GYnGcv4iQlhJ78GMVLPERIE0V71bSXIwm8qNpc89Y9ccifq4\naDBHKzktZd7h4wSkDKbRMF6dW6Joh2iT4SI5lWfgBgUH1HxtkWqL6JskD69OkwWz\nYpRDujOb837M5jnIglXyLOvsSFLILjsYsYCYzENYi1PbwCvJUxf5Ux45M/3mzFm0\n0CYaaq6aArH5XabPLpeU/PBPmGSsleWAkzm48a/jfORtPY4/1dQ=\n=LGip\n-----END PGP SIGNATURE-----", "payload": "tree aa4a8b82e98ec89c7ab743c09cc6e0383b3df6a1\nparent 4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff\nauthor Santiago Pastorino <spastorino@gmail.com> 1626292531 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1626611409 -0300\n\nRemove impl_trait_in_bindings handling on inference error reporting\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/962ac8183d174d409db549cd6b502d847aa04f12", "html_url": "https://github.com/rust-lang/rust/commit/962ac8183d174d409db549cd6b502d847aa04f12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/962ac8183d174d409db549cd6b502d847aa04f12/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff", "html_url": "https://github.com/rust-lang/rust/commit/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff"}], "stats": {"total": 122, "additions": 2, "deletions": 120}, "files": [{"sha": "9a718102cf11d8d225cab04a461eadd1ac2bebae", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/962ac8183d174d409db549cd6b502d847aa04f12/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/962ac8183d174d409db549cd6b502d847aa04f12/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=962ac8183d174d409db549cd6b502d847aa04f12", "patch": "@@ -491,11 +491,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             span\n         };\n \n-        let is_named_and_not_impl_trait = |ty: Ty<'_>| {\n-            &ty.to_string() != \"_\" &&\n-                // FIXME: Remove this check after `impl_trait_in_bindings` is stabilized. #63527\n-                (!ty.is_impl_trait() || self.tcx.features().impl_trait_in_bindings)\n-        };\n+        let is_named_and_not_impl_trait =\n+            |ty: Ty<'_>| &ty.to_string() != \"_\" && !ty.is_impl_trait();\n \n         let ty_msg = match (local_visitor.found_node_ty, local_visitor.found_exact_method_call) {\n             (_, Some(_)) => String::new(),"}, {"sha": "05f3f2e0d3e374073f4df519bd98f5e0876a40e3", "filename": "src/test/ui/impl-trait/bindings.stderr", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbindings.stderr?ref=4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff", "patch": "@@ -1,77 +0,0 @@\n-error[E0435]: attempt to use a non-constant value in a constant\n-  --> $DIR/bindings.rs:5:29\n-   |\n-LL |     const foo: impl Clone = x;\n-   |     ---------               ^ non-constant value\n-   |     |\n-   |     help: consider using `let` instead of `const`: `let foo`\n-\n-error[E0435]: attempt to use a non-constant value in a constant\n-  --> $DIR/bindings.rs:11:33\n-   |\n-LL |         const foo: impl Clone = x;\n-   |         ---------               ^ non-constant value\n-   |         |\n-   |         help: consider using `let` instead of `const`: `let foo`\n-\n-error[E0435]: attempt to use a non-constant value in a constant\n-  --> $DIR/bindings.rs:18:33\n-   |\n-LL |         const foo: impl Clone = x;\n-   |         ---------               ^ non-constant value\n-   |         |\n-   |         help: consider using `let` instead of `const`: `let foo`\n-\n-error[E0435]: attempt to use a non-constant value in a constant\n-  --> $DIR/bindings.rs:25:33\n-   |\n-LL |         const foo: impl Clone = x;\n-   |         ---------               ^ non-constant value\n-   |         |\n-   |         help: consider using `let` instead of `const`: `let foo`\n-\n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/bindings.rs:5:16\n-   |\n-LL |     const foo: impl Clone = x;\n-   |                ^^^^^^^^^^\n-   |\n-   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n-\n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/bindings.rs:11:20\n-   |\n-LL |         const foo: impl Clone = x;\n-   |                    ^^^^^^^^^^\n-   |\n-   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n-\n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/bindings.rs:18:20\n-   |\n-LL |         const foo: impl Clone = x;\n-   |                    ^^^^^^^^^^\n-   |\n-   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n-\n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/bindings.rs:25:20\n-   |\n-LL |         const foo: impl Clone = x;\n-   |                    ^^^^^^^^^^\n-   |\n-   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n-\n-warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/bindings.rs:1:12\n-   |\n-LL | #![feature(impl_trait_in_bindings)]\n-   |            ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n-\n-error: aborting due to 8 previous errors; 1 warning emitted\n-\n-Some errors have detailed explanations: E0435, E0562.\n-For more information about an error, try `rustc --explain E0435`."}, {"sha": "7beb2db3969c8c1d055de34781f76ceb2eced49e", "filename": "src/test/ui/inference/cannot-infer-async-enabled-impl-trait-bindings.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.rs?ref=4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff", "patch": "@@ -1,17 +0,0 @@\n-// edition:2018\n-#![feature(impl_trait_in_bindings)]\n-//~^ WARN the feature `impl_trait_in_bindings` is incomplete\n-\n-use std::io::Error;\n-\n-fn make_unit() -> Result<(), Error> {\n-    Ok(())\n-}\n-\n-fn main() {\n-    let fut = async {\n-        make_unit()?;\n-\n-        Ok(()) //~ ERROR type annotations needed\n-    };\n-}"}, {"sha": "8e632fbc1de1ba0a70fdc27390c66c0a9a6663ef", "filename": "src/test/ui/inference/cannot-infer-async-enabled-impl-trait-bindings.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fcannot-infer-async-enabled-impl-trait-bindings.stderr?ref=4d2d90307d7a7ac70a2cd4545dbe917f79eb9dff", "patch": "@@ -1,21 +0,0 @@\n-warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/cannot-infer-async-enabled-impl-trait-bindings.rs:2:12\n-   |\n-LL | #![feature(impl_trait_in_bindings)]\n-   |            ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n-\n-error[E0282]: type annotations needed for `impl Future`\n-  --> $DIR/cannot-infer-async-enabled-impl-trait-bindings.rs:15:9\n-   |\n-LL |     let fut = async {\n-   |         --- consider giving `fut` the explicit type `impl Future`, where the type parameter `E` is specified\n-...\n-LL |         Ok(())\n-   |         ^^ cannot infer type for type parameter `E` declared on the enum `Result`\n-\n-error: aborting due to previous error; 1 warning emitted\n-\n-For more information about this error, try `rustc --explain E0282`."}]}