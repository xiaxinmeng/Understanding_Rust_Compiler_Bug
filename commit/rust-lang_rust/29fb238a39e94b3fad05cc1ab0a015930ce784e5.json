{"sha": "29fb238a39e94b3fad05cc1ab0a015930ce784e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZmIyMzhhMzllOTRiM2ZhZDA1Y2MxYWIwYTAxNTkzMGNlNzg0ZTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-01-04T20:46:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-01-04T20:46:11Z"}, "message": "rustc: Add an item type accessor", "tree": {"sha": "753ba49a4df436a375b329d8330cd39a45aa3732", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/753ba49a4df436a375b329d8330cd39a45aa3732"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29fb238a39e94b3fad05cc1ab0a015930ce784e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29fb238a39e94b3fad05cc1ab0a015930ce784e5", "html_url": "https://github.com/rust-lang/rust/commit/29fb238a39e94b3fad05cc1ab0a015930ce784e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29fb238a39e94b3fad05cc1ab0a015930ce784e5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0fe271d3459d04af9e1580c396b4698063e1999", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0fe271d3459d04af9e1580c396b4698063e1999", "html_url": "https://github.com/rust-lang/rust/commit/e0fe271d3459d04af9e1580c396b4698063e1999"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "d46580804847fe2d159371bcf8e5440205a77d29", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/29fb238a39e94b3fad05cc1ab0a015930ce784e5/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fb238a39e94b3fad05cc1ab0a015930ce784e5/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=29fb238a39e94b3fad05cc1ab0a015930ce784e5", "patch": "@@ -543,6 +543,44 @@ fn is_fn_ty(@t fty) -> bool {\n \n // Type accessors for AST nodes\n \n+// Given an item, returns the associated type as well as a list of the IDs of\n+// its type parameters.\n+fn item_ty(@ast.item it) -> tup(vec[ast.def_id], @t) {\n+    let vec[ast.ty_param] ty_params;\n+    auto result_ty;\n+    alt (it.node) {\n+        case (ast.item_const(_, _, _, _, ?ann)) {\n+            ty_params = vec();\n+            result_ty = ann_to_type(ann);\n+        }\n+        case (ast.item_fn(_, _, ?tps, _, ?ann)) {\n+            ty_params = tps;\n+            result_ty = ann_to_type(ann);\n+        }\n+        case (ast.item_mod(_, _, _)) {\n+            fail;   // modules are typeless\n+        }\n+        case (ast.item_ty(_, _, ?tps, _, ?ann)) {\n+            ty_params = tps;\n+            result_ty = ann_to_type(ann);\n+        }\n+        case (ast.item_tag(_, _, ?tps, ?did)) {\n+            ty_params = tps;\n+            result_ty = plain_ty(ty_tag(did));\n+        }\n+        case (ast.item_obj(_, _, ?tps, _, ?ann)) {\n+            ty_params = tps;\n+            result_ty = ann_to_type(ann);\n+        }\n+    }\n+\n+    let vec[ast.def_id] ty_param_ids = vec();\n+    for (ast.ty_param tp in ty_params) {\n+        ty_param_ids += vec(tp.id);\n+    }\n+    ret tup(ty_param_ids, result_ty);\n+}\n+\n fn stmt_ty(@ast.stmt s) -> @t {\n     alt (s.node) {\n         case (ast.stmt_expr(?e)) {"}]}