{"sha": "753b0b0b80238a24da87137b67040286dfb82c4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1M2IwYjBiODAyMzhhMjRkYTg3MTM3YjY3MDQwMjg2ZGZiODJjNGQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-02T09:30:50Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-03T22:15:51Z"}, "message": "Update panic!() documentation about non-string panics.", "tree": {"sha": "ce71b853e6eb5af54fc21ec759f7ef98256287c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce71b853e6eb5af54fc21ec759f7ef98256287c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/753b0b0b80238a24da87137b67040286dfb82c4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/753b0b0b80238a24da87137b67040286dfb82c4d", "html_url": "https://github.com/rust-lang/rust/commit/753b0b0b80238a24da87137b67040286dfb82c4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/753b0b0b80238a24da87137b67040286dfb82c4d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9ad5be0f72f012c463c7796b9620df07b78bce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ad5be0f72f012c463c7796b9620df07b78bce6", "html_url": "https://github.com/rust-lang/rust/commit/e9ad5be0f72f012c463c7796b9620df07b78bce6"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "6e502426df90643e689bb65e7defc0855c280787", "filename": "library/core/src/macros/panic.md", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/753b0b0b80238a24da87137b67040286dfb82c4d/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "raw_url": "https://github.com/rust-lang/rust/raw/753b0b0b80238a24da87137b67040286dfb82c4d/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md?ref=753b0b0b80238a24da87137b67040286dfb82c4d", "patch": "@@ -10,22 +10,23 @@ tests. `panic!` is closely tied with the `unwrap` method of both\n `panic!` when they are set to [`None`] or [`Err`] variants.\n \n This macro is used to inject panic into a Rust thread, causing the thread to\n-panic entirely. Each thread's panic can be reaped as the [`Box`]`<`[`Any`]`>` type,\n-and the single-argument form of the `panic!` macro will be the value which\n-is transmitted.\n+panic entirely. This macro panics with a string and uses the [`format!`] syntax\n+for building the message.\n+\n+Each thread's panic can be reaped as the [`Box`]`<`[`Any`]`>` type,\n+which contains either a `&str` or `String` for regular `panic!()` invocations.\n+To panic with a value of another other type, [`panic_any`] can be used.\n \n [`Result`] enum is often a better solution for recovering from errors than\n using the `panic!` macro. This macro should be used to avoid proceeding using\n incorrect values, such as from external sources. Detailed information about\n error handling is found in the [book].\n \n-The multi-argument form of this macro panics with a string and has the\n-[`format!`] syntax for building a string.\n-\n See also the macro [`compile_error!`], for raising errors during compilation.\n \n [ounwrap]: Option::unwrap\n [runwrap]: Result::unwrap\n+[`panic_any`]: ../std/panic/fn.panic_any.html\n [`Box`]: ../std/boxed/struct.Box.html\n [`Any`]: crate::any::Any\n [`format!`]: ../std/macro.format.html\n@@ -42,6 +43,6 @@ program with code `101`.\n # #![allow(unreachable_code)]\n panic!();\n panic!(\"this is a terrible mistake!\");\n-panic!(4); // panic with the value of 4 to be collected elsewhere\n panic!(\"this is a {} {message}\", \"fancy\", message = \"message\");\n+std::panic::panic_any(4); // panic with the value of 4 to be collected elsewhere\n ```"}]}