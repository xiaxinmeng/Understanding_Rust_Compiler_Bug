{"sha": "f66d3c55666806c48ca8f3755e09d4278b66b9ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NmQzYzU1NjY2ODA2YzQ4Y2E4ZjM3NTVlMDlkNDI3OGI2NmI5YWI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-30T12:27:17Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-30T12:27:17Z"}, "message": "Rollup merge of #31296 - steveklabnik:gh31249, r=alexcrichton\n\nRustdoc will automatically wrap things in main, but this doesn't work\nhere.\n\nFixes #31249", "tree": {"sha": "d5f3777c25259aad73ed7c54d78ff3d004ebbbc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5f3777c25259aad73ed7c54d78ff3d004ebbbc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f66d3c55666806c48ca8f3755e09d4278b66b9ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f66d3c55666806c48ca8f3755e09d4278b66b9ab", "html_url": "https://github.com/rust-lang/rust/commit/f66d3c55666806c48ca8f3755e09d4278b66b9ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f66d3c55666806c48ca8f3755e09d4278b66b9ab/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf0f7a30f460503d3cb11cf26a03561d225f852d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf0f7a30f460503d3cb11cf26a03561d225f852d", "html_url": "https://github.com/rust-lang/rust/commit/cf0f7a30f460503d3cb11cf26a03561d225f852d"}, {"sha": "919ea4735660dfbbfabe6fbda854714a71d87553", "url": "https://api.github.com/repos/rust-lang/rust/commits/919ea4735660dfbbfabe6fbda854714a71d87553", "html_url": "https://github.com/rust-lang/rust/commit/919ea4735660dfbbfabe6fbda854714a71d87553"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "d57664bf07e4d8cda1fb217c40973224033e48c2", "filename": "src/doc/book/testing.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f66d3c55666806c48ca8f3755e09d4278b66b9ab/src%2Fdoc%2Fbook%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/f66d3c55666806c48ca8f3755e09d4278b66b9ab/src%2Fdoc%2Fbook%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftesting.md?ref=f66d3c55666806c48ca8f3755e09d4278b66b9ab", "patch": "@@ -24,6 +24,7 @@ Cargo will automatically generate a simple test when you make a new project.\n Here's the contents of `src/lib.rs`:\n \n ```rust\n+# fn main() {}\n #[test]\n fn it_works() {\n }\n@@ -75,6 +76,7 @@ So why does our do-nothing test pass? Any test which doesn't `panic!` passes,\n and any test that does `panic!` fails. Let's make our test fail:\n \n ```rust\n+# fn main() {}\n #[test]\n fn it_works() {\n     assert!(false);\n@@ -145,6 +147,7 @@ This is useful if you want to integrate `cargo test` into other tooling.\n We can invert our test's failure with another attribute: `should_panic`:\n \n ```rust\n+# fn main() {}\n #[test]\n #[should_panic]\n fn it_works() {\n@@ -175,6 +178,7 @@ Rust provides another macro, `assert_eq!`, that compares two arguments for\n equality:\n \n ```rust\n+# fn main() {}\n #[test]\n #[should_panic]\n fn it_works() {\n@@ -209,6 +213,7 @@ make sure that the failure message contains the provided text. A safer version\n of the example above would be:\n \n ```rust\n+# fn main() {}\n #[test]\n #[should_panic(expected = \"assertion failed\")]\n fn it_works() {\n@@ -219,6 +224,7 @@ fn it_works() {\n That's all there is to the basics! Let's write one 'real' test:\n \n ```rust,ignore\n+# fn main() {}\n pub fn add_two(a: i32) -> i32 {\n     a + 2\n }\n@@ -238,6 +244,7 @@ Sometimes a few specific tests can be very time-consuming to execute. These\n can be disabled by default by using the `ignore` attribute:\n \n ```rust\n+# fn main() {}\n #[test]\n fn it_works() {\n     assert_eq!(4, add_two(2));\n@@ -299,6 +306,7 @@ missing the `tests` module. The idiomatic way of writing our example\n looks like this:\n \n ```rust,ignore\n+# fn main() {}\n pub fn add_two(a: i32) -> i32 {\n     a + 2\n }\n@@ -327,6 +335,7 @@ a large module, and so this is a common use of globs. Let's change our\n `src/lib.rs` to make use of it:\n \n ```rust,ignore\n+# fn main() {}\n pub fn add_two(a: i32) -> i32 {\n     a + 2\n }\n@@ -377,6 +386,7 @@ put a `tests/lib.rs` file inside, with this as its contents:\n ```rust,ignore\n extern crate adder;\n \n+# fn main() {}\n #[test]\n fn it_works() {\n     assert_eq!(4, adder::add_two(2));\n@@ -432,6 +442,7 @@ running examples in your documentation (**note:** this only works in library\n crates, not binary crates). Here's a fleshed-out `src/lib.rs` with examples:\n \n ```rust,ignore\n+# fn main() {}\n //! The `adder` crate provides functions that add numbers to other numbers.\n //!\n //! # Examples"}]}