{"sha": "3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNDFlNTQ3OTk3NTRmY2RjN2FlMDQyOWJkOGZkNjRiNWJkNWExZmQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-11T22:05:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-11T22:05:27Z"}, "message": "Rollup merge of #73036 - alexcrichton:update-wasm-fence, r=Mark-Simulacrum\n\nstd: Enable atomic.fence emission on wasm32\n\nThis commit removes the `#[cfg]` guards in `atomic::fence` on wasm\ntargets. Since these guards were originally added the upstream wasm\nspecification for threads gained an `atomic.fence` instruction, so LLVM\nno longer panics on these intrinsics.\n\nAlthough there aren't a ton of tests in-repo for this right now I've\ntested locally and all of these fences generate `atomic.fence`\ninstructions in wasm.\n\nCloses #65687\nCloses #72997", "tree": {"sha": "fa1715c20e5609f61c4cf414a94b3263ac15dd16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa1715c20e5609f61c4cf414a94b3263ac15dd16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe4qqnCRBK7hj4Ov3rIwAAdHIIACNmWCmvQtH7ZeVS9C5vBZq9\nvYe5SJsVk2jrHX7mM25Gii/ZydaCynh87BFzNNrlQqJD5elyg0gNvpeLmcIz0Ejz\nRSCGL3tCunsZtdZgx0Md+bN4ETceHzjd0VjR0WEt7QpMhHKSMgZJUl23fgGHhKDV\nlWAOK/n/afc4zWrCdrWRdmkLdDWPqzoZv8v9okIa8T/ItOKNdc98JVADd6iurJgm\nfmaDAQPVj+lY5HDAYIMw5fPo44mRlmug+bmEWPFHHl0nsINuSC5KbOOQUH4CADtD\ncbwQ8hVF+BP6YaYWHBcE3Oksm/NvXiFxr2issN8q/ndtEI8NGrdpKbycmmfTqhg=\n=49BP\n-----END PGP SIGNATURE-----\n", "payload": "tree fa1715c20e5609f61c4cf414a94b3263ac15dd16\nparent 2e42476267011bd8937dfcc0f707aa08e34d54d9\nparent 05b2d3f7dc623fc5304fa0edc9efeaf08ea1db26\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591913127 +0200\ncommitter GitHub <noreply@github.com> 1591913127 +0200\n\nRollup merge of #73036 - alexcrichton:update-wasm-fence, r=Mark-Simulacrum\n\nstd: Enable atomic.fence emission on wasm32\n\nThis commit removes the `#[cfg]` guards in `atomic::fence` on wasm\ntargets. Since these guards were originally added the upstream wasm\nspecification for threads gained an `atomic.fence` instruction, so LLVM\nno longer panics on these intrinsics.\n\nAlthough there aren't a ton of tests in-repo for this right now I've\ntested locally and all of these fences generate `atomic.fence`\ninstructions in wasm.\n\nCloses #65687\nCloses #72997\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd", "html_url": "https://github.com/rust-lang/rust/commit/3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e42476267011bd8937dfcc0f707aa08e34d54d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e42476267011bd8937dfcc0f707aa08e34d54d9", "html_url": "https://github.com/rust-lang/rust/commit/2e42476267011bd8937dfcc0f707aa08e34d54d9"}, {"sha": "05b2d3f7dc623fc5304fa0edc9efeaf08ea1db26", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b2d3f7dc623fc5304fa0edc9efeaf08ea1db26", "html_url": "https://github.com/rust-lang/rust/commit/05b2d3f7dc623fc5304fa0edc9efeaf08ea1db26"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "1cd68f2881b7c7c3f497c29f980a3360ba08fc47", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=3b41e54799754fcdc7ae0429bd8fd64b5bd5a1fd", "patch": "@@ -2623,15 +2623,7 @@ unsafe fn atomic_umin<T: Copy>(dst: *mut T, val: T, order: Ordering) -> T {\n /// [`Relaxed`]: enum.Ordering.html#variant.Relaxed\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[cfg_attr(target_arch = \"wasm32\", allow(unused_variables))]\n pub fn fence(order: Ordering) {\n-    // On wasm32 it looks like fences aren't implemented in LLVM yet in that\n-    // they will cause LLVM to abort. The wasm instruction set doesn't have\n-    // fences right now. There's discussion online about the best way for tools\n-    // to conventionally implement fences at\n-    // https://github.com/WebAssembly/tool-conventions/issues/59. We should\n-    // follow that discussion and implement a solution when one comes about!\n-    #[cfg(not(target_arch = \"wasm32\"))]\n     // SAFETY: using an atomic fence is safe.\n     unsafe {\n         match order {"}]}