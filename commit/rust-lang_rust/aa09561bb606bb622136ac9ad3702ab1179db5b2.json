{"sha": "aa09561bb606bb622136ac9ad3702ab1179db5b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMDk1NjFiYjYwNmJiNjIyMTM2YWM5YWQzNzAyYWIxMTc5ZGI1YjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-04T22:26:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-04T22:26:50Z"}, "message": "auto merge of #14633 : huonw/rust/nodylibc, r=alexcrichton\n\nlibc: only provide an rlib.\r\n\r\nThere's absolutely no reason for `libc` to be offered as a dynamic\r\nlibrary.", "tree": {"sha": "6133c596dfa35493adbf21cda7d1b49fd71fa5e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6133c596dfa35493adbf21cda7d1b49fd71fa5e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa09561bb606bb622136ac9ad3702ab1179db5b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa09561bb606bb622136ac9ad3702ab1179db5b2", "html_url": "https://github.com/rust-lang/rust/commit/aa09561bb606bb622136ac9ad3702ab1179db5b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa09561bb606bb622136ac9ad3702ab1179db5b2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef9bf3a4ee61f7513356c3c9911cd38445e22de6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef9bf3a4ee61f7513356c3c9911cd38445e22de6", "html_url": "https://github.com/rust-lang/rust/commit/ef9bf3a4ee61f7513356c3c9911cd38445e22de6"}, {"sha": "96cc48fba28a32f0dd46b0fe38e04e6aff74456f", "url": "https://api.github.com/repos/rust-lang/rust/commits/96cc48fba28a32f0dd46b0fe38e04e6aff74456f", "html_url": "https://github.com/rust-lang/rust/commit/96cc48fba28a32f0dd46b0fe38e04e6aff74456f"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "9b252267aba0f8a0d6d3592afb42796020975d5f", "filename": "mk/crates.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aa09561bb606bb622136ac9ad3702ab1179db5b2/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/aa09561bb606bb622136ac9ad3702ab1179db5b2/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=aa09561bb606bb622136ac9ad3702ab1179db5b2", "patch": "@@ -101,6 +101,7 @@ TOOL_SOURCE_rustdoc := $(S)src/driver/driver.rs\n TOOL_SOURCE_rustc := $(S)src/driver/driver.rs\n \n ONLY_RLIB_core := 1\n+ONLY_RLIB_libc := 1\n ONLY_RLIB_rlibc := 1\n ONLY_RLIB_alloc := 1\n ONLY_RLIB_rand := 1"}, {"sha": "5b7f58fcb815c57028c6476bdf585993b5a70458", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa09561bb606bb622136ac9ad3702ab1179db5b2/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa09561bb606bb622136ac9ad3702ab1179db5b2/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=aa09561bb606bb622136ac9ad3702ab1179db5b2", "patch": "@@ -14,7 +14,6 @@\n #![no_std] // we don't need std, and we can't have std, since it doesn't exist\n            // yet. std depends on us.\n #![crate_type = \"rlib\"]\n-#![crate_type = \"dylib\"]\n \n /*!\n * Bindings for the C standard library and other platform libraries\n@@ -4436,4 +4435,7 @@ pub mod funcs {\n     }\n }\n \n+#[doc(hidden)]\n+pub fn issue_14344_workaround() {} // FIXME #14344 force linkage to happen correctly\n+\n #[test] fn work_on_windows() { } // FIXME #10872 needed for a happy windows"}, {"sha": "cde1a7335a58d9d0823c7d365031b65009f7eb38", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa09561bb606bb622136ac9ad3702ab1179db5b2/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa09561bb606bb622136ac9ad3702ab1179db5b2/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=aa09561bb606bb622136ac9ad3702ab1179db5b2", "patch": "@@ -254,6 +254,11 @@ mod unicode;\n #[unstable]\n pub mod rt;\n \n+#[doc(hidden)]\n+pub fn issue_14344_workaround() { // FIXME #14344 force linkage to happen correctly\n+    libc::issue_14344_workaround();\n+}\n+\n // A curious inner-module that's not exported that contains the binding\n // 'std' so that macro-expanded references to std::error and such\n // can be resolved within libstd."}]}