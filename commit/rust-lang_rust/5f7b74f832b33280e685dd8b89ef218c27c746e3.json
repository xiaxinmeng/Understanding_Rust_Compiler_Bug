{"sha": "5f7b74f832b33280e685dd8b89ef218c27c746e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmN2I3NGY4MzJiMzMyODBlNjg1ZGQ4Yjg5ZWYyMThjMjdjNzQ2ZTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-06T19:57:21Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-15T11:06:29Z"}, "message": "construct the `BorrowSet` outside of `borrows`", "tree": {"sha": "7263c8806119d0c82a55c6866be19afd1418fd96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7263c8806119d0c82a55c6866be19afd1418fd96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f7b74f832b33280e685dd8b89ef218c27c746e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f7b74f832b33280e685dd8b89ef218c27c746e3", "html_url": "https://github.com/rust-lang/rust/commit/5f7b74f832b33280e685dd8b89ef218c27c746e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f7b74f832b33280e685dd8b89ef218c27c746e3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1123674b1c719e0a5ced078c15a81a22e16dec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1123674b1c719e0a5ced078c15a81a22e16dec0", "html_url": "https://github.com/rust-lang/rust/commit/e1123674b1c719e0a5ced078c15a81a22e16dec0"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "3cc79d947d6bfa33fb3a3eb1342cbca98ebb6043", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f7b74f832b33280e685dd8b89ef218c27c746e3/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f7b74f832b33280e685dd8b89ef218c27c746e3/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=5f7b74f832b33280e685dd8b89ef218c27c746e3", "patch": "@@ -46,7 +46,7 @@ use util::collect_writes::FindAssignments;\n \n use std::iter;\n \n-use self::borrow_set::BorrowData;\n+use self::borrow_set::{BorrowSet, BorrowData};\n use self::flows::Flows;\n use self::prefixes::PrefixSet;\n use self::MutateMode::{JustWrite, WriteAndRead};\n@@ -192,6 +192,8 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         |bd, i| DebugFormatted::new(&bd.move_data().inits[i]),\n     ));\n \n+    let borrow_set = BorrowSet::build(tcx, mir);\n+\n     // If we are in non-lexical mode, compute the non-lexical lifetimes.\n     let (opt_regioncx, opt_closure_req) = if let Some(free_regions) = free_regions {\n         let (regioncx, opt_closure_req) = nll::compute_regions(\n@@ -216,7 +218,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         id,\n         &attributes,\n         &dead_unwinds,\n-        Borrows::new(tcx, mir, opt_regioncx.clone(), def_id, body_id),\n+        Borrows::new(tcx, mir, opt_regioncx.clone(), def_id, body_id, borrow_set),\n         |rs, i| {\n             DebugFormatted::new(&(i.kind(), rs.location(i.borrow_index())))\n         }"}, {"sha": "25f1278d7fa6295190ef16736233b76c57b2b7aa", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5f7b74f832b33280e685dd8b89ef218c27c746e3/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f7b74f832b33280e685dd8b89ef218c27c746e3/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=5f7b74f832b33280e685dd8b89ef218c27c746e3", "patch": "@@ -69,17 +69,18 @@ impl ReserveOrActivateIndex {\n }\n \n impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n-    pub fn new(tcx: TyCtxt<'a, 'gcx, 'tcx>,\n-               mir: &'a Mir<'tcx>,\n-               nonlexical_regioncx: Option<Rc<RegionInferenceContext<'tcx>>>,\n-               def_id: DefId,\n-               body_id: Option<hir::BodyId>)\n-               -> Self {\n+    crate fn new(\n+        tcx: TyCtxt<'a, 'gcx, 'tcx>,\n+        mir: &'a Mir<'tcx>,\n+        nonlexical_regioncx: Option<Rc<RegionInferenceContext<'tcx>>>,\n+        def_id: DefId,\n+        body_id: Option<hir::BodyId>,\n+        borrow_set: BorrowSet<'tcx>\n+    ) -> Self {\n         let scope_tree = tcx.region_scope_tree(def_id);\n         let root_scope = body_id.map(|body_id| {\n             region::Scope::CallSite(tcx.hir.body(body_id).value.hir_id.local_id)\n         });\n-        let borrow_set = BorrowSet::build(tcx, mir);\n \n         Borrows {\n             tcx: tcx,"}, {"sha": "f64fd64b283ea5ea63ad992123d702695f28bffa", "filename": "src/librustc_mir/dataflow/impls/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f7b74f832b33280e685dd8b89ef218c27c746e3/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f7b74f832b33280e685dd8b89ef218c27c746e3/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fmod.rs?ref=5f7b74f832b33280e685dd8b89ef218c27c746e3", "patch": "@@ -38,7 +38,6 @@ mod borrowed_locals;\n \n pub use self::borrowed_locals::*;\n \n-#[allow(dead_code)]\n pub(super) mod borrows;\n \n /// `MaybeInitializedPlaces` tracks all places that might be"}]}