{"sha": "d02a209eb946929801882d884b459f438d9650d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMmEyMDllYjk0NjkyOTgwMTg4MmQ4ODRiNDU5ZjQzOGQ5NjUwZDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-23T16:59:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-23T16:59:10Z"}, "message": "Auto merge of #75028 - MrModder:master, r=steveklabnik\n\nDocument that slice refers to any pointer type to a sequence\n\nI was recently confused about the way slices are represented in memory. The necessary information was not available in the std-docs directly, but was a mix of different material from the reference and book.\n\nThis PR should clear up the definition of slices a bit more in the documentation. Especially the fact that the term slice refers to the pointer/reference type, e.g. `&[T]`, and not `[T]`.\nIt also documents that slice pointers are twice the size of pointers to `Sized` types, as this concept may be unfamiliar to users coming from other languages that do not have the concept of \"fat pointers\" (especially C/C++).\n\nI've documented why this was important to me and my findings in [this blog post](https://codecrash.me/understanding-rust-slices).\n\nr? @lcnr", "tree": {"sha": "5709406a25ae340a0037faa7ff2c69079a9551fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5709406a25ae340a0037faa7ff2c69079a9551fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d02a209eb946929801882d884b459f438d9650d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d02a209eb946929801882d884b459f438d9650d2", "html_url": "https://github.com/rust-lang/rust/commit/d02a209eb946929801882d884b459f438d9650d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d02a209eb946929801882d884b459f438d9650d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d606d939a61c2f4c7bb4d89d959b60a53f50241", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d606d939a61c2f4c7bb4d89d959b60a53f50241", "html_url": "https://github.com/rust-lang/rust/commit/9d606d939a61c2f4c7bb4d89d959b60a53f50241"}, {"sha": "cf76256b83d7ccbf1d673c4bcb3ad0d1bd904315", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf76256b83d7ccbf1d673c4bcb3ad0d1bd904315", "html_url": "https://github.com/rust-lang/rust/commit/cf76256b83d7ccbf1d673c4bcb3ad0d1bd904315"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "be7fd0dd6c4479cbf909ee66b3a78896a1684463", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d02a209eb946929801882d884b459f438d9650d2/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d02a209eb946929801882d884b459f438d9650d2/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=d02a209eb946929801882d884b459f438d9650d2", "patch": "@@ -587,6 +587,20 @@ mod prim_array {}\n /// x[1] = 7;\n /// assert_eq!(x, &[1, 7, 3]);\n /// ```\n+///\n+/// As slices store the length of the sequence they refer to, they have twice\n+/// the size of pointers to [`Sized`](marker/trait.Sized.html) types.\n+/// Also see the reference on\n+/// [dynamically sized types](../reference/dynamically-sized-types.html).\n+///\n+/// ```\n+/// # use std::rc::Rc;\n+/// let pointer_size = std::mem::size_of::<&u8>();\n+/// assert_eq!(2 * pointer_size, std::mem::size_of::<&[u8]>());\n+/// assert_eq!(2 * pointer_size, std::mem::size_of::<*const [u8]>());\n+/// assert_eq!(2 * pointer_size, std::mem::size_of::<Box<[u8]>>());\n+/// assert_eq!(2 * pointer_size, std::mem::size_of::<Rc<[u8]>>());\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n mod prim_slice {}\n "}]}