{"sha": "813daf236f2cbc5ea8ebbb80d676d58f0f012e6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxM2RhZjIzNmYyY2JjNWVhOGViYmI4MGQ2NzZkNThmMGYwMTJlNmE=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2017-03-27T17:47:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-27T17:47:45Z"}, "message": "Merge pull request #1640 from Manishearth/multiple_matching_crates\n\nRemove some legacy code", "tree": {"sha": "e4c9d9766f2fd3d8f8a98001bd6f80405241a673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4c9d9766f2fd3d8f8a98001bd6f80405241a673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/813daf236f2cbc5ea8ebbb80d676d58f0f012e6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/813daf236f2cbc5ea8ebbb80d676d58f0f012e6a", "html_url": "https://github.com/rust-lang/rust/commit/813daf236f2cbc5ea8ebbb80d676d58f0f012e6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/813daf236f2cbc5ea8ebbb80d676d58f0f012e6a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "269b8d33c914d7a94b4d6614259ef6eedb8b37ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/269b8d33c914d7a94b4d6614259ef6eedb8b37ce", "html_url": "https://github.com/rust-lang/rust/commit/269b8d33c914d7a94b4d6614259ef6eedb8b37ce"}, {"sha": "8f88ead7d65ad9a80fa2535dfce83458efda3a7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f88ead7d65ad9a80fa2535dfce83458efda3a7b", "html_url": "https://github.com/rust-lang/rust/commit/8f88ead7d65ad9a80fa2535dfce83458efda3a7b"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "0e25ca9734ea959c72c91aedc57201d31d219f95", "filename": "src/main.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/813daf236f2cbc5ea8ebbb80d676d58f0f012e6a/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813daf236f2cbc5ea8ebbb80d676d58f0f012e6a/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=813daf236f2cbc5ea8ebbb80d676d58f0f012e6a", "patch": "@@ -169,8 +169,6 @@ pub fn main() {\n         return;\n     }\n \n-    let dep_path = env::current_dir().expect(\"current dir is not readable\").join(\"target\").join(\"debug\").join(\"deps\");\n-\n     if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n         // this arm is executed on the initial call to `cargo clippy`\n \n@@ -207,12 +205,11 @@ pub fn main() {\n             let args = std::env::args().skip(2);\n             if let Some(first) = target.kind.get(0) {\n                 if target.kind.len() > 1 || first.ends_with(\"lib\") {\n-                    if let Err(code) = process(std::iter::once(\"--lib\".to_owned()).chain(args), &dep_path) {\n+                    if let Err(code) = process(std::iter::once(\"--lib\".to_owned()).chain(args)) {\n                         std::process::exit(code);\n                     }\n                 } else if [\"bin\", \"example\", \"test\", \"bench\"].contains(&&**first) {\n-                    if let Err(code) = process(vec![format!(\"--{}\", first), target.name].into_iter().chain(args),\n-                                               &dep_path) {\n+                    if let Err(code) = process(vec![format!(\"--{}\", first), target.name].into_iter().chain(args)) {\n                         std::process::exit(code);\n                     }\n                 }\n@@ -271,9 +268,8 @@ pub fn main() {\n     }\n }\n \n-fn process<P, I>(old_args: I, dep_path: P) -> Result<(), i32>\n-    where P: AsRef<Path>,\n-          I: Iterator<Item = String>\n+fn process<I>(old_args: I) -> Result<(), i32>\n+    where I: Iterator<Item = String>\n {\n \n     let mut args = vec![\"rustc\".to_owned()];\n@@ -286,8 +282,6 @@ fn process<P, I>(old_args: I, dep_path: P) -> Result<(), i32>\n     if !found_dashes {\n         args.push(\"--\".to_owned());\n     }\n-    args.push(\"-L\".to_owned());\n-    args.push(dep_path.as_ref().to_string_lossy().into_owned());\n     args.push(\"-Zno-trans\".to_owned());\n     args.push(\"--cfg\".to_owned());\n     args.push(r#\"feature=\"cargo-clippy\"\"#.to_owned());"}]}