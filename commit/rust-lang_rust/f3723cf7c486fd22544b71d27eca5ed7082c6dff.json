{"sha": "f3723cf7c486fd22544b71d27eca5ed7082c6dff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNzIzY2Y3YzQ4NmZkMjI1NDRiNzFkMjdlY2E1ZWQ3MDgyYzZkZmY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-17T22:28:44Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-23T04:57:07Z"}, "message": "libextra: Rename the actual metadata names of libcore to libstd and libstd to libextra", "tree": {"sha": "6ea0b137120cac77a8b533ec16637b0c0de2fb5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ea0b137120cac77a8b533ec16637b0c0de2fb5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3723cf7c486fd22544b71d27eca5ed7082c6dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3723cf7c486fd22544b71d27eca5ed7082c6dff", "html_url": "https://github.com/rust-lang/rust/commit/f3723cf7c486fd22544b71d27eca5ed7082c6dff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3723cf7c486fd22544b71d27eca5ed7082c6dff/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebfc2b8e5671a8c56988e05f83c3b1eeaf2abb9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebfc2b8e5671a8c56988e05f83c3b1eeaf2abb9a", "html_url": "https://github.com/rust-lang/rust/commit/ebfc2b8e5671a8c56988e05f83c3b1eeaf2abb9a"}], "stats": {"total": 577, "additions": 545, "deletions": 32}, "files": [{"sha": "3d8133df7a42ab2e725e00ec9850c62f758e09a9", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -215,8 +215,8 @@ CFG_LIBRUSTDOC_$(1) :=$(call CFG_LIB_NAME_$(1),rustdoc)\n CFG_LIBRUSTI_$(1) :=$(call CFG_LIB_NAME_$(1),rusti)\n CFG_LIBRUST_$(1) :=$(call CFG_LIB_NAME_$(1),rust)\n \n-EXTRALIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),std)\n-STDLIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),core)\n+EXTRALIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),extra)\n+STDLIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),std)\n LIBRUSTC_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rustc)\n LIBSYNTAX_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),syntax)\n LIBFUZZER_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),fuzzer)"}, {"sha": "869657326b7d2d1a2d49f1c8163bf00a334bd3ff", "filename": "src/compiletest/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcommon.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n #[deriving(Eq)]\n pub enum mode {\n     mode_compile_fail,"}, {"sha": "f9ad0d5f925fb6a446cd7b8dfd826641295106a0", "filename": "src/compiletest/compiletest.rc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fcompiletest.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fcompiletest.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,10 +12,13 @@\n \n #[allow(non_camel_case_types)];\n \n-extern mod std;\n+#[no_std];\n \n-use core::*;\n+extern mod core(name = \"std\", vers = \"0.7-pre\");\n+extern mod std(name = \"extra\", vers = \"0.7-pre\");\n \n+use core::prelude::*;\n+use core::*;\n \n use std::getopts;\n use std::test;"}, {"sha": "297ec9ee21e28b7e71a098672d9609769c7f2434", "filename": "src/compiletest/errors.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Ferrors.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n pub struct ExpectedError { line: uint, kind: ~str, msg: ~str }\n \n // Load any test directives embedded in the file"}, {"sha": "b3205a48610723028d50a4b185f10b36b088f8f6", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use common;\n use common::config;\n "}, {"sha": "2a4cd08c1242d04cad0ac32a6e1e615548de0fb3", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use core::libc::c_int;\n use core::run::spawn_process;"}, {"sha": "da81df0e404d559dde5eebd62fa88c331e65309e", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use common::mode_run_pass;\n use common::mode_run_fail;\n use common::mode_compile_fail;"}, {"sha": "e9b09e8aee8959a718cae076d1d91a4aafb0f9ac", "filename": "src/compiletest/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fcompiletest%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Futil.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use common::config;\n \n use core::os::getenv;"}, {"sha": "97e01d1bcdc01598fe72d0d31609d4a909ff2b99", "filename": "src/driver/driver.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fdriver.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[no_core];\n+#[no_std];\n+\n+extern mod core(name = \"std\", vers = \"0.7-pre\");\n+\n #[cfg(rustpkg)]\n extern mod this(name = \"rustpkg\");\n "}, {"sha": "087b28ec01e6d71c93cc6460952c0c7db9a22097", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -37,6 +37,8 @@\n  * ~~~\n  */\n \n+use core::prelude::*;\n+\n use sync;\n use sync::{Mutex, mutex_with_condvars, RWlock, rwlock_with_condvars};\n "}, {"sha": "690993e7bf9a213668dd126148063dcc3cba1e72", "filename": "src/libextra/arena.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farena.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -32,6 +32,8 @@\n // overhead when initializing plain-old-data and means we don't need\n // to waste time running the destructors of POD.\n \n+use core::prelude::*;\n+\n use list::{MutList, MutCons, MutNil};\n \n use core::at_vec;"}, {"sha": "e623740ca81e381524d8ff1845b6841d0f306eed", "filename": "src/libextra/base64.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbase64.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,12 @@\n \n //! Base64 binary-to-text encoding\n \n+use core::prelude::*;\n+\n+use core::old_iter;\n+use core::str;\n+use core::vec;\n+\n pub trait ToBase64 {\n     fn to_base64(&self) -> ~str;\n }"}, {"sha": "c12ebf8fb46ea662262dd3e242dd515e2feb3847", "filename": "src/libextra/bitv.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fbitv.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use core::vec::from_elem;\n \n struct SmallBitv {"}, {"sha": "a8e71433ff8b549532a4c122e8ab44f9dcf9bb39", "filename": "src/libextra/c_vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fc_vec.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -36,6 +36,8 @@\n  * still held if needed.\n  */\n \n+use core::prelude::*;\n+\n /**\n  * The type representing a foreign chunk of memory\n  *"}, {"sha": "095da6570fd00da920f7e2ca55a01e945915ee21", "filename": "src/libextra/comm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcomm.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,6 +14,8 @@ Higher level communication abstractions.\n \n */\n \n+use core::prelude::*;\n+\n use core::comm::{GenericChan, GenericSmartChan, GenericPort};\n use core::comm::{Chan, Port, Selectable, Peekable};\n use core::pipes;"}, {"sha": "371b8ce94e7d02b107b3d4f72ca3e95587a50cf8", "filename": "src/libextra/deque.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdeque.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! A double-ended queue implemented as a circular buffer\n \n+use core::prelude::*;\n+\n use core::util::replace;\n \n static initial_capacity: uint = 32u; // 2^5"}, {"sha": "c3ef1f25ad9330119686b0b924f41aee5e3f8ed8", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -18,6 +18,8 @@ Do not use ==, !=, <, etc on doubly-linked lists -- it may not terminate.\n \n */\n \n+use core::prelude::*;\n+\n use core::managed;\n \n pub type DListLink<T> = Option<@mut DListNode<T>>;"}, {"sha": "762328a2e0f64aab37dbe6d9d7806f497dcf26b9", "filename": "src/libextra/ebml.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Febml.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n // Simple Extensible Binary Markup Language (ebml) reader and writer on a\n // cursor model. See the specification here:\n //     http://www.matroska.org/technical/specs/rfc/index.html\n@@ -65,6 +67,8 @@ pub enum EbmlEncoderTag {\n // --------------------------------------\n \n pub mod reader {\n+    use core::prelude::*;\n+\n     use ebml::{Doc, EbmlEncoderTag, EsBool, EsEnum, EsEnumBody, EsEnumVid};\n     use ebml::{EsI16, EsI32, EsI64, EsI8, EsInt};\n     use ebml::{EsLabel, EsOpaque, EsStr, EsU16, EsU32, EsU64, EsU8, EsUint};"}, {"sha": "a9024592426fdeda3c5f28ba6a2aabf168084e0f", "filename": "src/libextra/fileinput.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ffileinput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ffileinput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ffileinput.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -94,6 +94,8 @@ total line count).\n     }\n */\n \n+use core::prelude::*;\n+\n use core::io::ReaderUtil;\n \n /**"}, {"sha": "c968bb5768d8b7a1eb64858170450e5771529d88", "filename": "src/libextra/flate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fflate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fflate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fflate.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,9 +14,9 @@ Simple compression\n \n */\n \n-use libc;\n use core::libc::{c_void, size_t, c_int};\n-use vec;\n+use core::libc;\n+use core::vec;\n \n #[cfg(test)] use core::rand;\n #[cfg(test)] use core::rand::RngUtil;"}, {"sha": "7c97cabd5891010fda95a7f9a9bea2661deeef0d", "filename": "src/libextra/flatpipes.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fflatpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fflatpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fflatpipes.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -47,6 +47,8 @@ block the scheduler thread, so will their pipes.\n \n */\n \n+use core::prelude::*;\n+\n // The basic send/recv interface FlatChan and PortChan will implement\n use core::io;\n use core::comm::GenericChan;\n@@ -168,6 +170,8 @@ POD are not equivelant.\n \n */\n pub mod pod {\n+    use core::prelude::*;\n+\n     use flatpipes::flatteners::{PodUnflattener, PodFlattener};\n     use flatpipes::bytepipes::{ReaderBytePort, WriterByteChan};\n     use flatpipes::bytepipes::{PipeBytePort, PipeByteChan};\n@@ -331,6 +335,8 @@ pub impl<T,F:Flattener<T>,C:ByteChan> FlatChan<T, F, C> {\n \n \n pub mod flatteners {\n+    use core::prelude::*;\n+\n     use ebml;\n     use flatpipes::{Flattener, Unflattener};\n     use io_util::BufReader;\n@@ -501,6 +507,8 @@ pub mod flatteners {\n }\n \n pub mod bytepipes {\n+    use core::prelude::*;\n+\n     use flatpipes::{ByteChan, BytePort};\n \n     use core::io::{Writer, Reader, ReaderUtil};\n@@ -628,6 +636,8 @@ pub mod bytepipes {\n \n #[cfg(test)]\n mod test {\n+    use core::prelude::*;\n+\n     use flatpipes::{Flattener, Unflattener};\n     use flatpipes::bytepipes::*;\n     use flatpipes::pod;"}, {"sha": "fb9bb0740c520bc07caa5fb99033d1580365dadf", "filename": "src/libextra/fun_treemap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ffun_treemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ffun_treemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ffun_treemap.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -19,6 +19,8 @@\n  * of features.\n  */\n \n+use core::prelude::*;\n+\n use core::cmp::{Eq, Ord};\n use core::option::{Some, None};\n "}, {"sha": "f54286b3fdfd7174f304533b040404db7794ef55", "filename": "src/libextra/future.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ffuture.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -23,6 +23,8 @@\n  * ~~~\n  */\n \n+use core::prelude::*;\n+\n use core::cast;\n use core::cell::Cell;\n use core::comm::{PortOne, oneshot, send_one, recv_one};"}, {"sha": "f4779c24a4ab1360edfb15739d3722a4a0c38c11", "filename": "src/libextra/getopts.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fgetopts.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -78,6 +78,8 @@\n  * ```\n  */\n \n+use core::prelude::*;\n+\n use core::cmp::Eq;\n use core::result::{Err, Ok};\n use core::result;"}, {"sha": "f56da368008d61435b71fc362c778f21bd174f37", "filename": "src/libextra/json.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fjson.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,6 +14,8 @@\n \n //! json serialization\n \n+use core::prelude::*;\n+\n use core::io::{WriterUtil, ReaderUtil};\n use core::hashmap::HashMap;\n "}, {"sha": "919a4426cead9ecb601fb3e9f7625d9a03be41f9", "filename": "src/libextra/list.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flist.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! A standard linked list\n \n+use core::prelude::*;\n+\n #[deriving(Eq)]\n pub enum List<T> {\n     Cons(T, @List<T>),"}, {"sha": "f99de89588bf28d0083a9280d8e2878069873494", "filename": "src/libextra/md4.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fmd4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fmd4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fmd4.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use core::str;\n use core::uint;\n use core::vec;"}, {"sha": "e98c1f26d4c1fa09b6d9a250936e429a80a6e4df", "filename": "src/libextra/net_ip.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnet_ip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnet_ip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnet_ip.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Types/fns concerning Internet Protocol (IP), versions 4 & 6\n \n+use core::prelude::*;\n+\n use core::libc;\n use core::comm::{stream, SharedChan};\n use core::ptr;\n@@ -145,6 +147,8 @@ pub fn get_addr(node: &str, iotask: &iotask)\n }\n \n pub mod v4 {\n+    use core::prelude::*;\n+\n     use net::ip::{IpAddr, Ipv4, ParseAddrErr};\n     use uv::ll;\n     use uv_ip4_addr = uv::ll::ip4_addr;\n@@ -246,6 +250,8 @@ pub mod v4 {\n     }\n }\n pub mod v6 {\n+    use core::prelude::*;\n+\n     use net::ip::{IpAddr, Ipv6, ParseAddrErr};\n     use uv_ip6_addr = uv::ll::ip6_addr;\n     use uv_ip6_name = uv::ll::ip6_name;"}, {"sha": "d0a1385b706a5e5d34d7391a04e6c76382cbdd66", "filename": "src/libextra/net_tcp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnet_tcp.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -11,6 +11,8 @@\n //! High-level interface to libuv's TCP functionality\n // FIXME #4425: Need FFI fixes\n \n+use core::prelude::*;\n+\n use future;\n use future_spawn = future::spawn;\n use ip = net_ip;"}, {"sha": "f6d4d75c498586d0a9c77dcf93cbfc4447fd9bad", "filename": "src/libextra/net_url.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnet_url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnet_url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnet_url.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Types/fns concerning URLs (see RFC 3986)\n \n+use core::prelude::*;\n+\n use core::cmp::Eq;\n use core::io::{Reader, ReaderUtil};\n use core::io;"}, {"sha": "fa7621462ef70ec2be100509df4a5816e256c61f", "filename": "src/libextra/num/bigint.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Fbigint.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -16,6 +16,8 @@ A BigUint is represented as an array of BigDigits.\n A BigInt is a combination of BigUint and Sign.\n */\n \n+use core::prelude::*;\n+\n use core::cmp::{Eq, Ord, TotalEq, TotalOrd, Ordering, Less, Equal, Greater};\n use core::num::{IntConvertible, Zero, One, ToStrRadix, FromStrRadix, Orderable};\n "}, {"sha": "09bd66232eb04a8fddd1a0268db169056ce2d815", "filename": "src/libextra/num/complex.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnum%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnum%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Fcomplex.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -11,6 +11,8 @@\n \n //! Complex numbers.\n \n+use core::prelude::*;\n+\n use core::num::{Zero,One,ToStrRadix};\n \n // FIXME #1284: handle complex NaN & infinity etc. This"}, {"sha": "d26ef06ebce174d47ffd11d5328e929497846b9c", "filename": "src/libextra/num/rational.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Frational.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -11,6 +11,8 @@\n \n //! Rational numbers\n \n+use core::prelude::*;\n+\n use core::num::{Zero,One,ToStrRadix,FromStrRadix,Round};\n use core::from_str::FromStr;\n use super::bigint::BigInt;"}, {"sha": "52e7d517d6e2c73a195532158062a52a7d0a461f", "filename": "src/libextra/par.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fpar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fpar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fpar.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use future_spawn = future::spawn;\n \n /**"}, {"sha": "6d41cd653ebff113d51e834743ccd3b4555dd053", "filename": "src/libextra/priority_queue.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fpriority_queue.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! A priority queue implemented with a binary heap\n \n+use core::prelude::*;\n+\n use core::old_iter::BaseIter;\n use core::unstable::intrinsics::{move_val_init, init};\n use core::unstable::intrinsics::uninit;"}, {"sha": "a1a14c31b28e2f07c177dde9dc97fb9acfcfd629", "filename": "src/libextra/rc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frc.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -19,6 +19,8 @@ cycle cannot be created with `Rc<T>` because there is no way to modify it after\n \n */\n \n+use core::prelude::*;\n+\n use core::libc::{c_void, size_t, malloc, free};\n use core::unstable::intrinsics;\n use core::util;"}, {"sha": "4157442413991ef7f08a6bfcd099101710567789", "filename": "src/libextra/rl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Frl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Frl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frl.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -11,6 +11,8 @@\n // FIXME #3921. This is unsafe because linenoise uses global mutable\n // state without mutexes.\n \n+use core::prelude::*;\n+\n use core::libc::{c_char, c_int};\n \n pub mod rustrt {"}, {"sha": "4efe131c7cb062ad6e0e8a8e36f6c9da0ed13132", "filename": "src/libextra/rope.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Frope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Frope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frope.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -33,6 +33,8 @@\n  * * access to a character by index is logarithmic (linear in strings);\n  */\n \n+use core::prelude::*;\n+\n /// The type of ropes.\n pub type Rope = node::Root;\n \n@@ -439,8 +441,9 @@ pub fn loop_leaves(rope: Rope, it: &fn(node::Leaf) -> bool) -> bool{\n \n pub mod iterator {\n     pub mod leaf {\n-        use rope::{Rope, node};\n+        use core::prelude::*;\n \n+        use rope::{Rope, node};\n \n         pub fn start(rope: Rope) -> node::leaf_iterator::T {\n             match (rope) {\n@@ -453,8 +456,9 @@ pub mod iterator {\n         }\n     }\n     pub mod char {\n-        use rope::{Rope, node};\n+        use core::prelude::*;\n \n+        use rope::{Rope, node};\n \n         pub fn start(rope: Rope) -> node::char_iterator::T {\n             match (rope) {\n@@ -548,6 +552,8 @@ pub fn char_at(rope: Rope, pos: uint) -> char {\n  Section: Implementation\n */\n pub mod node {\n+    use core::prelude::*;\n+\n     use rope::node;\n \n     /// Implementation of type `rope`\n@@ -1127,6 +1133,8 @@ pub mod node {\n     }\n \n     pub mod leaf_iterator {\n+        use core::prelude::*;\n+\n         use rope::node::{Concat, Leaf, Node, height};\n \n         pub struct T {\n@@ -1166,6 +1174,8 @@ pub mod node {\n     }\n \n     pub mod char_iterator {\n+        use core::prelude::*;\n+\n         use rope::node::{Leaf, Node};\n         use rope::node::leaf_iterator;\n "}, {"sha": "0b07886772687f8ee24027c7a68cbdc73c8ac810", "filename": "src/libextra/semver.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsemver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsemver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsemver.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Semver parsing and logic\n \n+use core::prelude::*;\n+\n use core::char;\n use core::cmp;\n use core::io::{ReaderUtil};"}, {"sha": "749e9d5dc611b595dd69166f9d54a4472bf4f43c", "filename": "src/libextra/serialize.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fserialize.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -16,6 +16,8 @@ Core encoding and decoding interfaces.\n \n #[forbid(non_camel_case_types)];\n \n+use core::prelude::*;\n+\n use core::hashmap::{HashMap, HashSet};\n use core::trie::{TrieMap, TrieSet};\n use deque::Deque;"}, {"sha": "8910442849e370a748fad25779688fa6e4afe14f", "filename": "src/libextra/sha1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsha1.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -22,6 +22,8 @@\n  * the `reset` method.\n  */\n \n+use core::prelude::*;\n+\n use core::str;\n use core::uint;\n use core::vec;"}, {"sha": "3e5e62894dfc9a7ee0370084828da36c4feea419", "filename": "src/libextra/smallintmap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsmallintmap.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -13,6 +13,8 @@\n  * are O(highest integer key).\n  */\n \n+use core::prelude::*;\n+\n use core::container::{Container, Mutable, Map, Set};\n use core::old_iter::BaseIter;\n use core::old_iter;"}, {"sha": "2c4020e776c21c0a0e1856d3dc23f69990a544b1", "filename": "src/libextra/sort.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsort.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Sorting methods\n \n+use core::prelude::*;\n+\n use core::cmp::{Eq, Ord};\n use core::vec::len;\n use core::vec;"}, {"sha": "504930a884ee1ca8b0e7ae7a83cdf2c46223f3f8", "filename": "src/libextra/stats.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstats.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use core::vec;\n use core::f64;\n use core::cmp;"}, {"sha": "90672d221c5cb87348dcd033df37a1ba8603f3c0", "filename": "src/libextra/std.rc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstd.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -17,7 +17,7 @@ not required in or otherwise suitable for the core library.\n \n */\n \n-#[link(name = \"std\",\n+#[link(name = \"extra\",\n        vers = \"0.7-pre\",\n        uuid = \"122bed0b-c19b-4b82-b0b7-7ae8aead7297\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/libstd\")];\n@@ -28,6 +28,14 @@ not required in or otherwise suitable for the core library.\n \n #[deny(non_camel_case_types)];\n \n+#[no_core];\n+#[no_std];\n+\n+extern mod core(name = \"std\", vers = \"0.7-pre\");\n+\n+use core::{str, unstable};\n+use core::str::{StrSlice, OwnedStr};\n+\n pub mod uv_ll;\n \n // General io and system-services modules"}, {"sha": "dc7f891b2593db6a1327aec8b9885e8a3e48ac3a", "filename": "src/libextra/sync.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsync.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -15,6 +15,8 @@\n  * in std.\n  */\n \n+use core::prelude::*;\n+\n use core::unstable::sync::{Exclusive, exclusive};\n use core::ptr;\n use core::task;"}, {"sha": "926045a6b5250b49e3447c3ec2f69867cb9305eb", "filename": "src/libextra/task_pool.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftask_pool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftask_pool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftask_pool.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -11,6 +11,8 @@\n /// A task pool abstraction. Useful for achieving predictable CPU\n /// parallelism.\n \n+use core::prelude::*;\n+\n use core::comm::Chan;\n use core::task::SchedMode;\n use core::task;"}, {"sha": "d7ee326f2ffb5e3e420613a8b766bdab60fd5dcb", "filename": "src/libextra/tempfile.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftempfile.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Temporary files and directories\n \n+use core::prelude::*;\n+\n use core::rand::RngUtil;\n \n pub fn mkdtemp(tmpdir: &Path, suffix: &str) -> Option<Path> {"}, {"sha": "7dace57a1b52bd444680eb5f53bfceb4a63c0f00", "filename": "src/libextra/term.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fterm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fterm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterm.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Simple ANSI color library\n \n+use core::prelude::*;\n+\n use core::io;\n use core::option;\n use core::os;"}, {"sha": "3245ad5d3346faf79aac87a92fb87a06da9d126a", "filename": "src/libextra/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -15,6 +15,8 @@\n // simplest interface possible for representing and running tests\n // while providing a base that other test frameworks may build off of.\n \n+use core::prelude::*;\n+\n use getopts;\n use sort;\n use term;\n@@ -597,6 +599,8 @@ fn calc_result(desc: &TestDesc, task_succeeded: bool) -> TestResult {\n }\n \n pub mod bench {\n+    use core::prelude::*;\n+\n     use time::precise_time_ns;\n     use test::{BenchHarness, BenchSamples};\n     use stats::Stats;"}, {"sha": "624d7d4256a8a30a3eefd3f250517f98f153e006", "filename": "src/libextra/time.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftime.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n static NSEC_PER_SEC: i32 = 1_000_000_000_i32;\n \n pub mod rustrt {"}, {"sha": "6a36d674279a2cff18466d3fd23e3d079391a70f", "filename": "src/libextra/timer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftimer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftimer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftimer.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Utilities that leverage libuv's `uv_timer_*` API\n \n+use core::prelude::*;\n+\n use uv;\n use uv::iotask;\n use uv::iotask::IoTask;"}, {"sha": "f4257070e19848cd5565b49890a294b0c2e51fd1", "filename": "src/libextra/treemap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftreemap.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,6 +12,8 @@\n //! trees. The only requirement for the types is that the key implements\n //! `TotalOrd`.\n \n+use core::prelude::*;\n+\n use core::iterator::*;\n use core::util::{swap, replace};\n "}, {"sha": "e067f22d6383245040a3493f56f16551826572f1", "filename": "src/libextra/uv_global_loop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fuv_global_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fuv_global_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuv_global_loop.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! A process-wide libuv event loop for library use.\n \n+use core::prelude::*;\n+\n use iotask = uv_iotask;\n use uv_iotask::{IoTask, spawn_iotask};\n "}, {"sha": "ff726c1464c38dfc0e7f2daa0703a1eec1a3e508", "filename": "src/libextra/uv_iotask.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fuv_iotask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fuv_iotask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuv_iotask.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -15,6 +15,8 @@\n  * `interact` function you can execute code in a uv callback.\n  */\n \n+use core::prelude::*;\n+\n use ll = uv_ll;\n \n use core::comm::{stream, Port, Chan, SharedChan};"}, {"sha": "014dea220292feff519e7dd89bfed4ba1bb4ee1f", "filename": "src/libextra/uv_ll.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuv_ll.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -32,6 +32,8 @@\n \n #[allow(non_camel_case_types)]; // C types\n \n+use core::prelude::*;\n+\n use core::libc::size_t;\n use core::libc::c_void;\n use core::ptr::to_unsafe_ptr;"}, {"sha": "3c10b3d2ca770280193b97b5d78e1ecf1bebbd6e", "filename": "src/libextra/workcache.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibextra%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fworkcache.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use json;\n use sha1;\n use serialize::{Encoder, Encodable, Decoder, Decodable};"}, {"sha": "d0bbcc024815c66d3280cf8d48d3fa3b52211826", "filename": "src/libfuzzer/ast_match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Fast_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Fast_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfuzzer%2Fast_match.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use std;\n use vec;\n "}, {"sha": "5f7152f109f24b9fc53c44c3fb5db9932aeb20cc", "filename": "src/libfuzzer/cycles.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Fcycles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Fcycles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfuzzer%2Fcycles.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use std;\n use std::rand;\n use uint::range;"}, {"sha": "aac6796f30c2385eff71dac0639ba3235ba9399f", "filename": "src/libfuzzer/fuzzer.rc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Ffuzzer.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Ffuzzer.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfuzzer%2Ffuzzer.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -20,9 +20,14 @@\n \n #[allow(non_camel_case_types)];\n \n-extern mod std;\n-extern mod syntax;\n+#[no_std];\n \n+extern mod core(name = \"std\", vers = \"0.7-pre\");\n+extern mod std(name = \"extra\", vers = \"0.7-pre\");\n+\n+extern mod syntax(vers = \"0.7-pre\");\n+\n+use core::prelude::*;\n use core::run;\n \n use syntax::diagnostic;"}, {"sha": "d0f83d4ba54287535e986f29021d02a315ea85d0", "filename": "src/libfuzzer/ivec_fuzz.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Fivec_fuzz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Fivec_fuzz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfuzzer%2Fivec_fuzz.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -28,7 +28,8 @@ vec_edits is not an iter because iters might go away.\n \n */\n \n-extern mod std;\n+use core::prelude::*;\n+\n use vec::slice;\n use vec::len;\n "}, {"sha": "32197ba2195ec3e28c451625046237dc7bfaa29a", "filename": "src/libfuzzer/rand_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Frand_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibfuzzer%2Frand_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfuzzer%2Frand_util.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern mod std;\n+use core::prelude::*;\n use std::rand;\n \n // random uint less than n"}, {"sha": "f1d92f1d9576e4008fdf8b50fea691149365be8d", "filename": "src/librust/rust.rc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrust%2Frust.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrust%2Frust.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrust%2Frust.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -20,11 +20,17 @@\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n+#[no_std];\n+\n+extern mod core(name = \"std\");\n+\n extern mod rustpkg;\n extern mod rustdoc;\n extern mod rusti;\n extern mod rustc;\n \n+use core::prelude::*;\n+\n use core::run;\n \n enum ValidUsage {"}, {"sha": "42ce18cf88b6862bd90f0a9c42587cf88e1df3a9", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::rpath;\n use driver::session::Session;\n use driver::session;\n@@ -90,6 +92,8 @@ pub fn WriteOutputFile(sess: Session,\n }\n \n pub mod jit {\n+    use core::prelude::*;\n+\n     use back::link::llvm_err;\n     use driver::session::Session;\n     use lib::llvm::llvm;\n@@ -166,6 +170,8 @@ pub mod jit {\n }\n \n pub mod write {\n+    use core::prelude::*;\n+\n     use back::link::jit;\n     use back::link::{WriteOutputFile, output_type};\n     use back::link::{output_type_assembly, output_type_bitcode};"}, {"sha": "f3e01a00e38aae85cee9476873e4dccd90002b12", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use driver::session;\n use metadata::cstore;\n use metadata::filesearch;"}, {"sha": "a3f47d398fb7ca2422c0bbb0bfd4e80b4af344b8", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::link;\n use back::{arm, x86, x86_64, mips};\n use driver::session::{Aggressive};"}, {"sha": "788be3a3f2799781a1525dd0f074e05dba3c9412", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::link;\n use back::target_strs;\n use back;"}, {"sha": "be2f5cf0f61385e13f69207e4f4ba8025daed55c", "filename": "src/librustc/front/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fconfig.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use syntax::{ast, fold, attr};\n \n type in_cfg_pred = @fn(attrs: ~[ast::attribute]) -> bool;"}, {"sha": "7a8a2a7eb9799c8690d4e5d7b3da9a5fa2437eb7", "filename": "src/librustc/front/intrinsic_inject.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Fintrinsic_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Fintrinsic_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fintrinsic_inject.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use driver::session::Session;\n use syntax::parse;\n use syntax::ast;"}, {"sha": "616b1cb98157aea6cf03f940150ca470de8f010a", "filename": "src/librustc/front/std_inject.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fstd_inject.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use driver::session::Session;\n \n use syntax::ast;"}, {"sha": "2bc648814a31b371b89cf9493c7e5371ffd87ce7", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Code that generates a test runner to run all the tests in a crate\n \n+use core::prelude::*;\n+\n use driver::session;\n use front::config;\n "}, {"sha": "ac675df3399e56bbb26694ea0ae4375bab658ff4", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use core::hashmap::HashMap;\n use core::libc::{c_uint, c_ushort};\n "}, {"sha": "55689d8df4e4ba6819c37cf7f57daf05b8919175", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,9 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n //! Validates all used crates and extern libraries and loads their metadata\n \n+use core::prelude::*;\n+\n use metadata::cstore;\n use metadata::decoder;\n use metadata::filesearch::FileSearch;"}, {"sha": "c887b2553f7413c844694cd486cfccef77e5f230", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Searching for information from the cstore\n \n+use core::prelude::*;\n+\n use metadata::common::*;\n use metadata::cstore;\n use metadata::decoder;"}, {"sha": "0c0f0947314591cbbf6e7f869338fd4466b3a564", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,6 +12,8 @@\n // The crate store - a central repo for information collected about external\n // crates and libraries\n \n+use core::prelude::*;\n+\n use metadata::cstore;\n use metadata::decoder;\n "}, {"sha": "ef9c94530626499e4bfc75cd9e45ba6b60be5201", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Decoding metadata from a single crate's metadata\n \n+use core::prelude::*;\n+\n use metadata::cstore::crate_metadata;\n use metadata::common::*;\n use metadata::csearch::{ProvidedTraitMethodInfo, StaticMethodInfo};"}, {"sha": "e959983a98a10babe1c2808a2badbe2b858ab6ef", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Metadata encoding\n \n+use core::prelude::*;\n+\n use metadata::common::*;\n use metadata::cstore;\n use metadata::decoder;"}, {"sha": "0d9b16d31171c1023ce845abdb7140a72fb0023e", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n // A module for searching for libraries\n // FIXME (#2658): I'm not happy how this module turned out. Should\n // probably just be folded into cstore."}, {"sha": "c29a644c123f089bdc7f4f16496bc15b2f6cca52", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,9 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n //! Finds crate binaries and loads their metadata\n \n+use core::prelude::*;\n+\n use lib::llvm::{False, llvm, mk_object_file, mk_section_iter};\n use metadata::decoder;\n use metadata::encoder;"}, {"sha": "a726ca4bd52a64201cadc22f7cdcdf01f0da9cfe", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,6 +14,8 @@\n // tjc note: Would be great to have a `match check` macro equivalent\n // for some of these\n \n+use core::prelude::*;\n+\n use middle::ty;\n \n use syntax::abi::AbiSet;"}, {"sha": "bc9edcfeed383ddc231bef0066ec8a707709814a", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Type encoding\n \n+use core::prelude::*;\n+\n use middle::ty::param_ty;\n use middle::ty;\n "}, {"sha": "3bade41d0321dd50cec0ef0e5e07d76d878081e9", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use c = metadata::common;\n use cstore = metadata::cstore;\n use driver::session::Session;"}, {"sha": "237a464dc9e9671f77c667ec5a9d27fc5888abc1", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -17,6 +17,8 @@\n // 3. assignments do not affect things loaned out as immutable\n // 4. moves do not affect things loaned out in any way\n \n+use core::prelude::*;\n+\n use middle::moves;\n use middle::borrowck::*;\n use mc = middle::mem_categorization;"}, {"sha": "345b128239fc2664364f2369af137879d0ec980b", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use driver::session::Session;\n use middle::resolve;\n use middle::ty;"}, {"sha": "db5bdf85cb5d8c4be342e7ced10018c1740fd7f9", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::const_eval::{compare_const_vals, lookup_const_by_id};\n use middle::const_eval::{eval_const_expr, const_val, const_bool};\n use middle::pat_util::*;"}, {"sha": "49d31d240ecc3c0bb7f19e715648822a561806b0", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use metadata::csearch;\n use middle::astencode;\n use middle::ty;"}, {"sha": "5898b6a5e4d15bec0aae44ca6ac2515f9cb5f2fa", "filename": "src/librustc/middle/dataflow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdataflow.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -16,6 +16,8 @@\n  * GEN and KILL bits for each expression.\n  */\n \n+use core::prelude::*;\n+\n use core::cast;\n use core::uint;\n use syntax::ast;"}, {"sha": "b35ec2579d1d977527fdce2078904cf7693e477a", "filename": "src/librustc/middle/entry.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fentry.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use driver::session;\n use driver::session::Session;\n use syntax::parse::token::special_idents;"}, {"sha": "9dffd09e5481f53335cbf5bb6662b8193e8ebe4b", "filename": "src/librustc/middle/freevars.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffreevars.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -11,6 +11,8 @@\n // A pass that annotates for each loops and functions with the free\n // variables that they contain.\n \n+use core::prelude::*;\n+\n use middle::resolve;\n use middle::ty;\n "}, {"sha": "a03191e2c4dae21cad560fa9a56a29657bbad272", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::freevars::freevar_entry;\n use middle::freevars;\n use middle::pat_util;"}, {"sha": "3a0f6f5c10aa4e8c599278d76d2822e483ee1da0", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -19,6 +19,8 @@\n //\n // * Functions called by the compiler itself.\n \n+use core::prelude::*;\n+\n use driver::session::Session;\n use metadata::csearch::each_lang_item;\n use metadata::cstore::iter_crate_data;"}, {"sha": "11d1f5bd7d2dfa23c6890369d97f42b2eed5c940", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n+use driver::session::Session;\n use driver::session;\n use middle::ty;\n use middle::pat_util;"}, {"sha": "e4b93468c2938df5d912be5ab14e2e45545f89d9", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -102,6 +102,7 @@\n  *   to return explicitly.\n  */\n \n+use core::prelude::*;\n \n use middle::lint::{unused_variable, dead_assignment};\n use middle::pat_util;"}, {"sha": "52c7bf0a21e7d6c4fe86f6c63d205bd1480de241", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -46,6 +46,8 @@\n  * then an index to jump forward to the relevant item.\n  */\n \n+use core::prelude::*;\n+\n use middle::ty;\n use middle::typeck;\n use util::ppaux::{ty_to_str, region_to_str, Repr};"}, {"sha": "3b20344b3ead3927c7657479ce1a8eafe69f93d0", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -206,6 +206,8 @@ and so on.\n \n */\n \n+use core::prelude::*;\n+\n use middle::pat_util::{pat_bindings};\n use middle::freevars;\n use middle::ty;"}, {"sha": "1fd6012143b576648f728bf3a934b38f94696229", "filename": "src/librustc/middle/pat_util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fpat_util.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::resolve;\n \n use core::hashmap::HashMap;"}, {"sha": "5f88c25653d6089467b1f0242eb2d8bf97299b0c", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -11,6 +11,8 @@\n // A pass that checks to make sure private fields and methods aren't used\n // outside their scopes.\n \n+use core::prelude::*;\n+\n use metadata::csearch;\n use middle::ty::{ty_struct, ty_enum};\n use middle::ty;"}, {"sha": "1731ced634f296b29469f31cd3d0b0db96975024", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -17,6 +17,8 @@ region parameterized.\n \n */\n \n+use core::prelude::*;\n+\n use driver::session::Session;\n use metadata::csearch;\n use middle::resolve;"}, {"sha": "b2ef0c46afb08cdaa950f1c63dc1552058e3554e", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use driver::session::Session;\n use metadata::csearch::{each_path, get_trait_method_def_ids};\n use metadata::csearch::get_method_name_and_explicit_self;"}, {"sha": "fba174c68405dbdc55261af16f92994744d4eafc", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Type substitutions.\n \n+use core::prelude::*;\n+\n use middle::ty;\n use util::ppaux::Repr;\n "}, {"sha": "9365a698a7e140a05d2a5cadb72b30b878fe21e5", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -142,6 +142,8 @@\n  *\n  */\n \n+use core::prelude::*;\n+\n use back::abi;\n use lib::llvm::{llvm, ValueRef, BasicBlockRef};\n use middle::const_eval;"}, {"sha": "e2baabc5baa490da2b311867a5893d73d5dceb2c", "filename": "src/librustc/middle/trans/asm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fasm.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,6 +12,8 @@\n # Translation of inline assembly.\n */\n \n+use core::prelude::*;\n+\n use lib;\n use middle::trans::build::*;\n use middle::trans::callee;"}, {"sha": "605bd72d8d7f107a9617155b891e9ac536b62097", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -23,6 +23,8 @@\n //     but many TypeRefs correspond to one ty::t; for instance, tup(int, int,\n //     int) and rec(x=int, y=int, z=int) will have the same TypeRef.\n \n+use core::prelude::*;\n+\n use back::link::{mangle_exported_name};\n use back::{link, abi, upcall};\n use driver::session;"}, {"sha": "0411aad32c33baee3fd2be180fe092fffdc8337c", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use lib::llvm::llvm;\n use lib::llvm::{CallConv, AtomicBinOp, AtomicOrdering, AsmDialect};\n use lib::llvm::{Opcode, IntPredicate, RealPredicate, False};"}, {"sha": "2282952ab88b2f8827b750206c56763ac1891c15", "filename": "src/librustc/middle/trans/cabi_mips.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_mips.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use core::libc::c_uint;\n use lib::llvm::{llvm, TypeRef, Integer, Pointer, Float, Double};\n use lib::llvm::{Struct, Array, Attribute};"}, {"sha": "fbb605330245c7292436be20e445753fb14cf4be", "filename": "src/librustc/middle/trans/cabi_x86.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi_x86.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use driver::session::{os_win32, os_macos};\n use lib::llvm::*;\n use lib::llvm::llvm::*;"}, {"sha": "3d4649bba4660d1b0a05df037cb4cfb127e21487", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -16,6 +16,8 @@\n // and methods are represented as just a fn ptr and not a full\n // closure.\n \n+use core::prelude::*;\n+\n use back::abi;\n use driver::session;\n use lib;"}, {"sha": "57df27ef19913b157d7e8f8dd1dacfbff3da353d", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::abi;\n use back::link::{mangle_internal_name_by_path_and_seq};\n use lib::llvm::{llvm, ValueRef};"}, {"sha": "fac155a70024db7bc8d12d6bec953a43d74bc99d", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,11 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Code that is useful in various trans modules.\n \n-/**\n-   Code that is useful in various trans modules.\n-\n-*/\n+use core::prelude::*;\n \n use back::{abi, upcall};\n use driver::session;"}, {"sha": "97ccb6d7908a4f75aad12b01de6462bf957e18f7", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::abi;\n use lib::llvm::{llvm, ConstFCmp, ConstICmp, SetLinkage, PrivateLinkage, ValueRef, TypeRef, Bool,\n     True, False};"}, {"sha": "efe23aee9e6bf574492c1be8f7694c19cce82eb3", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::link;\n use lib;\n use lib::llvm::*;"}, {"sha": "6be5dbe1beb6ce853946de69cd1dbe7a2a5fd885", "filename": "src/librustc/middle/trans/datum.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -85,6 +85,8 @@\n  * methods themselves.  Most are only suitable for some types of\n  * values. */\n \n+use core::prelude::*;\n+\n use lib;\n use lib::llvm::ValueRef;\n use middle::trans::adt;"}, {"sha": "979559ad48109948f0674d5264d45f8148db6c40", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use driver::session;\n use lib::llvm::ValueRef;"}, {"sha": "d581d8043f8e42df427add2673c21aedc0865dad", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -119,6 +119,8 @@ lvalues are *never* stored by value.\n \n */\n \n+use core::prelude::*;\n+\n use back::abi;\n use lib::llvm::{ValueRef, TypeRef, llvm};\n use lib;"}, {"sha": "460d7407e50690bf078f7dbc55dca25a17a05ad6", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::{link, abi};\n use lib::llvm::{SequentiallyConsistent, Acquire, Release, Xchg};\n use lib::llvm::{TypeRef, ValueRef};"}, {"sha": "8dc97b5c35d830b0c17a23846277c472057db389", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,6 +12,8 @@\n //\n // Code relating to taking, dropping, etc as well as type descriptors.\n \n+use core::prelude::*;\n+\n use back::abi;\n use back::link::*;\n use driver::session;"}, {"sha": "aa4bb775323c7247f6772a2ff257a6cb07059055", "filename": "src/librustc/middle/trans/inline.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use metadata::csearch;\n use middle::astencode;\n use middle::trans::base::{get_insn_ctxt};"}, {"sha": "baa0dfc79e9fcd5950498cb5cb84e20af92a7537", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::abi;\n use lib::llvm::llvm;\n use lib::llvm::ValueRef;"}, {"sha": "1b3150f14b208d5d0dddb7809b7783b79a0c449c", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use back::link::mangle_exported_name;\n use driver::session;\n use lib::llvm::ValueRef;"}, {"sha": "62360771f55ac67c22b9d83cf6970e30831a814f", "filename": "src/librustc/middle/trans/reachable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Freachable.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -15,6 +15,7 @@\n // makes all other generics or inline functions that it references\n // reachable as well.\n \n+use core::prelude::*;\n \n use middle::resolve;\n use middle::ty;"}, {"sha": "bddcb9a1d7377ff5e778630237ccd185cee26ac9", "filename": "src/librustc/middle/trans/type_of.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_of.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use lib::llvm::llvm;\n use lib::llvm::{TypeRef};\n use middle::trans::adt;"}, {"sha": "ffcef3ae78c1b06d8f21628412b4dc02950f8f4e", "filename": "src/librustc/middle/trans/write_guard.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fwrite_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftrans%2Fwrite_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fwrite_guard.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,6 +14,8 @@\n //! and for each in debugging (e.g., so you can use\n //! `RUST_LOG=rustc::middle::trans::write_guard`).\n \n+use core::prelude::*;\n+\n use lib::llvm::ValueRef;\n use middle::borrowck::{RootInfo, root_map_key, DynaImm, DynaMut};\n use middle::trans::base::*;"}, {"sha": "734c9ac04775d2456dc6f13d06efdf24c46719d5", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use driver::session;\n use metadata::csearch;"}, {"sha": "5cc2b0dceddc1f1bf0bc8927792c699216314d51", "filename": "src/librustc/middle/typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -52,6 +52,8 @@\n  * an rptr (`&r.T`) use the region `r` that appears in the rptr.\n  */\n \n+use core::prelude::*;\n+\n use middle::const_eval;\n use middle::ty::{substs};\n use middle::ty::{ty_param_substs_and_ty};"}, {"sha": "77b10663ac790bbb9850461a839b539d18400fbb", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::pat_util::{PatIdMap, pat_id_map, pat_is_binding, pat_is_const};\n use middle::ty;\n use middle::typeck::check::demand;"}, {"sha": "a34465db7cd43164f7c2093255f65f0622fac27f", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -79,6 +79,8 @@ obtained the type `Foo`, we would never match this method.\n \n */\n \n+use core::prelude::*;\n+\n use middle::resolve;\n use middle::ty::*;\n use middle::ty;"}, {"sha": "226d7fa7651d71c2eb6d63afd34b151a2942eb75", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -76,6 +76,8 @@ type parameter).\n \n */\n \n+use core::prelude::*;\n+\n use middle::const_eval;\n use middle::pat_util::pat_id_map;\n use middle::pat_util;"}, {"sha": "642022c5b8ff984f5d6170ab1ca797ce4db70192", "filename": "src/librustc/middle/typeck/check/regionck.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -27,6 +27,8 @@ this point a bit better.\n \n */\n \n+use core::prelude::*;\n+\n use middle::freevars::get_freevars;\n use middle::ty::{re_scope};\n use middle::ty;\n@@ -778,6 +780,8 @@ pub mod guarantor {\n      * but more special purpose.\n      */\n \n+    use core::prelude::*;\n+\n     use middle::typeck::check::regionck::{Rcx, infallibly_mk_subr};\n     use middle::typeck::check::regionck::mk_subregion_due_to_derefence;\n     use middle::ty;"}, {"sha": "89cf3df6fedf967313fc9ff5e5a977050afa8711", "filename": "src/librustc/middle/typeck/check/regionmanip.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionmanip.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // #[warn(deprecated_mode)];\n \n+use core::prelude::*;\n+\n use middle::ty;\n \n use middle::typeck::isr_alist;"}, {"sha": "67d7b064115eeea5be47caf6cea71d3e35a56b0f", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::resolve::Impl;\n use middle::ty::param_ty;\n use middle::ty;"}, {"sha": "29c1eaa28389bff37fc48c2ef2572a969e345521", "filename": "src/librustc/middle/typeck/check/writeback.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fwriteback.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,6 +12,8 @@\n // unresolved type variables and replaces \"ty_var\" types with their\n // substitutions.\n \n+use core::prelude::*;\n+\n use middle::pat_util;\n use middle::ty;\n use middle::typeck::check::{FnCtxt, SelfInfo};"}, {"sha": "14a4034c6bb3430ae05692763b86a56503108c24", "filename": "src/librustc/middle/typeck/coherence.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,6 +14,7 @@\n // has at most one implementation for each type. Then we build a mapping from\n // each trait in the system to its implementations.\n \n+use core::prelude::*;\n \n use driver;\n use metadata::csearch::{each_path, get_impl_trait};"}, {"sha": "b3b59c2fc9ee1db7c6f67f8c1c635e412a37ec44", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -30,6 +30,8 @@ are represented as `ty_param()` instances.\n \n */\n \n+use core::prelude::*;\n+\n use metadata::csearch;\n use middle::ty::{substs, ty_param_bounds_and_ty};\n use middle::ty;"}, {"sha": "64f0d439223b7ae0be06506bc18a87b0d7072aa9", "filename": "src/librustc/middle/typeck/infer/coercion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcoercion.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -64,6 +64,8 @@ we may want to adjust precisely when coercions occur.\n \n */\n \n+use core::prelude::*;\n+\n use middle::ty::{AutoPtr, AutoBorrowVec, AutoBorrowFn};\n use middle::ty::{AutoDerefRef};\n use middle::ty::{vstore_slice, vstore_box, vstore_uniq};"}, {"sha": "d07752ee20a19fb8e8845c966757be272ad12e37", "filename": "src/librustc/middle/typeck/infer/combine.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fcombine.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -54,6 +54,8 @@\n // terms of error reporting, although we do not do that properly right\n // now.\n \n+use core::prelude::*;\n+\n use middle::ty::{FloatVar, FnSig, IntVar, TyVar};\n use middle::ty::{IntType, UintType, substs};\n use middle::ty::{BuiltinBounds};"}, {"sha": "78989a133763464acffa077e7e8995256646153c", "filename": "src/librustc/middle/typeck/infer/glb.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fglb.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::ty::{BuiltinBounds};\n use middle::ty::RegionVid;\n use middle::ty;"}, {"sha": "81befc5f6506614dc30bf7f8914e34dc5d14fead", "filename": "src/librustc/middle/typeck/infer/lattice.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flattice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flattice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flattice.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -32,6 +32,8 @@\n  * a lattice.\n  */\n \n+use core::prelude::*;\n+\n use middle::ty::{RegionVid, TyVar, Vid};\n use middle::ty;\n use middle::typeck::isr_alist;"}, {"sha": "c906d3ef4951b4104d0e40f6d6d139c0bdef0b49", "filename": "src/librustc/middle/typeck/infer/lub.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Flub.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::ty::{BuiltinBounds};\n use middle::ty::RegionVid;\n use middle::ty;"}, {"sha": "864f0e24eeb539ce027cf18af23e4dc27220406f", "filename": "src/librustc/middle/typeck/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fmod.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -242,6 +242,8 @@ section on \"Type Combining\" below for details.\n \n */\n \n+use core::prelude::*;\n+\n pub use middle::ty::IntVarValue;\n pub use middle::typeck::infer::resolve::resolve_and_force_all_but_regions;\n pub use middle::typeck::infer::resolve::{force_all, not_regions};"}, {"sha": "14a79108f0646fa650c4306856cbaf9bb2851aad", "filename": "src/librustc/middle/typeck/infer/region_inference.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fregion_inference.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -536,6 +536,8 @@ more convincing in the future.\n \n */\n \n+use core::prelude::*;\n+\n use middle::ty;\n use middle::ty::{FreeRegion, Region, RegionVid};\n use middle::ty::{re_empty, re_static, re_infer, re_free, re_bound};"}, {"sha": "217d9716f7dd560b327a541581c991d7af89d407", "filename": "src/librustc/middle/typeck/infer/resolve.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fresolve.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -46,6 +46,8 @@\n // future).  If you want to resolve everything but one type, you are\n // probably better off writing `resolve_all - resolve_ivar`.\n \n+use core::prelude::*;\n+\n use middle::ty::{FloatVar, FloatVid, IntVar, IntVid, RegionVid, TyVar, TyVid};\n use middle::ty::{type_is_bot, IntType, UintType};\n use middle::ty;"}, {"sha": "11fac4d5414c06ffc72d398c224b996771ab5750", "filename": "src/librustc/middle/typeck/infer/sub.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fsub.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::ty::{BuiltinBounds};\n use middle::ty;\n use middle::ty::TyVar;"}, {"sha": "888339b707d277a8d83787a2602bd24dfafd2078", "filename": "src/librustc/middle/typeck/infer/to_str.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Fto_str.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::ty::{FnSig, Vid};\n use middle::ty::IntVarValue;\n use middle::ty;"}, {"sha": "39feedfce8bca47c82474a79c3225f06fc8c2193", "filename": "src/librustc/middle/typeck/infer/unify.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use std::smallintmap::SmallIntMap;\n \n use middle::ty::{Vid, expected_found, IntVarValue};"}, {"sha": "8684b1b03e8659b1e23b0c28ba0c18abf1aaa788", "filename": "src/librustc/middle/typeck/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fmod.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -48,6 +48,8 @@ independently:\n \n */\n \n+use core::prelude::*;\n+\n use driver::session;\n \n use middle::resolve;"}, {"sha": "1f787e14f189e3e2d0041b2939d2a1b262856aa1", "filename": "src/librustc/middle/typeck/rscope.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Frscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Fmiddle%2Ftypeck%2Frscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Frscope.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use middle::ty;\n \n use syntax::ast;"}, {"sha": "f1263be6b4b5473f3e9150af2d94a00b6cd0aaf0", "filename": "src/librustc/rustc.rc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Frustc.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -21,9 +21,15 @@\n #[allow(non_camel_case_types)];\n #[deny(deprecated_pattern)];\n \n-extern mod std;\n+#[no_core];\n+#[no_std];\n+\n+extern mod core(name = \"std\");\n+extern mod std(name = \"extra\");\n extern mod syntax;\n \n+use core::prelude::*;\n+\n use driver::driver::{host_triple, optgroups, early_error};\n use driver::driver::{str_input, file_input, build_session_options};\n use driver::driver::{build_session, build_configuration, parse_pretty};"}, {"sha": "7bd8c6aadf23c990219e418166a311f0bef29fd0", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use syntax::ast;\n use syntax::codemap::{span};\n use syntax::visit;"}, {"sha": "048b602e81888afbb3302565e0ac2b12a22a5e3e", "filename": "src/librustc/util/enum_set.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Futil%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Futil%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fenum_set.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n+use core;\n+\n #[deriving(Eq, IterBytes)]\n pub struct EnumSet<E> {\n     // We must maintain the invariant that no bits are set"}, {"sha": "384298da92e278283f8994673745bf0edd9723f9", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use metadata::encoder;\n use middle::ty::{ReSkolemized, ReVar};\n use middle::ty::{bound_region, br_anon, br_named, br_self, br_cap_avoid};"}, {"sha": "21ce70e7f5f6e2ff5595df1aa3b71a235b705af2", "filename": "src/librustdoc/astsrv.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fastsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fastsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fastsrv.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -17,6 +17,8 @@ query AST-related information, shielding the rest of Rustdoc from its\n non-sendableness.\n */\n \n+use core::prelude::*;\n+\n use parse;\n \n use core::cell::Cell;"}, {"sha": "92e2973acb6f6056d7a9b4bf515db3a5bcd6073b", "filename": "src/librustdoc/attr_parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fattr_parser.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -15,6 +15,8 @@ The attribute parser provides methods for pulling documentation out of\n an AST's attributes.\n */\n \n+use core::prelude::*;\n+\n use syntax::ast;\n use syntax::attr;\n "}, {"sha": "e49e9b27d41edac534d31888cb3cd4daa38b03c6", "filename": "src/librustdoc/attr_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fattr_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -16,6 +16,8 @@ corresponding AST nodes. The information gathered here is the basis\n of the natural-language documentation for a crate.\n */\n \n+use core::prelude::*;\n+\n use astsrv;\n use attr_parser;\n use doc::ItemUtils;"}, {"sha": "85ceb6cccb7495cf445ad40ca7942b9c3b6ccfac", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use core::cell::Cell;\n use core::run;"}, {"sha": "c5fb8f289f65e81f4a1b7a392a57e0bb4f967e9a", "filename": "src/librustdoc/demo.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fdemo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fdemo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdemo.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -21,6 +21,8 @@\n  * tests on this file\n  */\n \n+use core::prelude::*;\n+\n /// The base price of a muffin on a non-holiday\n static price_of_a_muffin: float = 70f;\n "}, {"sha": "1066f9e924a04e9b0c5a301bb8309b2887ee78cb", "filename": "src/librustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -15,6 +15,8 @@ If the first paragraph of a long description is short enough then it\n is interpreted as the brief description.\n */\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc::ItemUtils;\n use doc;"}, {"sha": "b383a41a91c8dc68b9ac616f6a6dbe4ec04e30b9", "filename": "src/librustdoc/doc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoc.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! The document model\n \n+use core::prelude::*;\n+\n use doc;\n \n pub type AstId = int;"}, {"sha": "2ebdd82165a40b7825e88ad7acd563efe2395e19", "filename": "src/librustdoc/extract.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fextract.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Converts the Rust AST to the rustdoc document model\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc::ItemUtils;\n use doc;"}, {"sha": "5bd394215a994112579e81ac83326e6482dcaac4", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use doc;\n #[cfg(test)] use extract;\n #[cfg(test)] use parse;"}, {"sha": "9d55452acdfdaed761bc02acd95c6d50ef0cdd7b", "filename": "src/librustdoc/markdown_index_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fmarkdown_index_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fmarkdown_index_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_index_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Build indexes as appropriate for the markdown pass\n \n+use core::prelude::*;\n+\n use astsrv;\n use config;\n use doc::ItemUtils;"}, {"sha": "ff7955768d3338d9d4168b7415816131a874961a", "filename": "src/librustdoc/markdown_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Generate markdown from a document tree\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc::ItemUtils;\n use doc;"}, {"sha": "b585b294b0d3e7690dbbd5bae93d8edd8c4bebf0", "filename": "src/librustdoc/markdown_writer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fmarkdown_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fmarkdown_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_writer.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use config;\n use doc::ItemUtils;\n use doc;"}, {"sha": "f0d4c62960f866825f38540e2fb8f5b4b2fe27d0", "filename": "src/librustdoc/page_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fpage_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fpage_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpage_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -15,6 +15,8 @@ Each page corresponds is a logical section. There may be pages for\n individual modules, pages for the crate, indexes, etc.\n */\n \n+use core::prelude::*;\n+\n use astsrv;\n use config;\n use doc::ItemUtils;"}, {"sha": "455720f47ef9071d6d4aa70051d966198254376b", "filename": "src/librustdoc/parse.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fparse.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! AST-parsing helpers\n \n+use core::prelude::*;\n+\n use rustc::driver::driver::{file_input, str_input};\n use rustc::driver::driver;\n use rustc::driver::session;"}, {"sha": "85eb5dc77aa277822a652e19be529d88896251c1", "filename": "src/librustdoc/pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc;\n use time;"}, {"sha": "a7a36152ace39a28051aff394d40e8eb6bfc7b94", "filename": "src/librustdoc/path_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpath_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Records the full path to items\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc::ItemUtils;\n use doc;"}, {"sha": "26344ebbc61391b2ed0d8f8fb9d65e4997d648f1", "filename": "src/librustdoc/prune_private_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fprune_private_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fprune_private_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fprune_private_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Prune things that are private\n \n+use core::prelude::*;\n+\n use extract;\n use syntax::ast;\n use syntax::ast_map;"}, {"sha": "9b73e393cb2351bc5461d0f6d1e9fcc4b4fcd704", "filename": "src/librustdoc/rustdoc.rc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Frustdoc.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -21,10 +21,16 @@\n \n #[allow(non_implicitly_copyable_typarams)];\n \n-extern mod std;\n+#[no_std];\n+\n+extern mod core(name = \"std\");\n+extern mod std(name = \"extra\");\n+\n extern mod rustc;\n extern mod syntax;\n \n+use core::prelude::*;\n+\n use config::Config;\n use doc::Item;\n use doc::ItemUtils;"}, {"sha": "6333e2878793f6b6fb83386327a1e57aba52e30c", "filename": "src/librustdoc/sectionalize_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fsectionalize_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Fsectionalize_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fsectionalize_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Breaks rustdocs into sections according to their headers\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc::ItemUtils;\n use doc;"}, {"sha": "e6c6118a76589357c25c558af500ada7f8bfd620", "filename": "src/librustdoc/text_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Ftext_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Ftext_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftext_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Generic pass for performing an operation on all descriptions\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc::ItemUtils;\n use doc;"}, {"sha": "941faf32d36754a2987ea5fd4c822b3ef895fb8d", "filename": "src/librustdoc/tystr_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftystr_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n //! Pulls type information out of the AST and attaches it to the document\n \n+use core::prelude::*;\n+\n use astsrv;\n use doc::ItemUtils;\n use doc;"}, {"sha": "ef34de113cfc55b78037d55b32b63fe8f1311698", "filename": "src/librustdoc/unindent_pass.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Funindent_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Funindent_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Funindent_pass.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -19,6 +19,8 @@ instances where the string containing the doc comment is opened in the\n middle of a line, and each of the following lines is indented.\n */\n \n+use core::prelude::*;\n+\n use pass::Pass;\n use text_pass;\n "}, {"sha": "fe39ac6bc505cb58d5ceb555d97ea66b0fc467c9", "filename": "src/librustdoc/util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustdoc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Futil.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n // Just a named container for our op, so it can have impls\n pub struct NominalOp<T> {\n     op: T"}, {"sha": "c79714bba3682fab8bd23843b1ed805fa3442d47", "filename": "src/librusti/rusti.rc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrusti%2Frusti.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrusti%2Frusti.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrusti%2Frusti.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -18,11 +18,17 @@\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n-extern mod std;\n+#[no_std];\n+\n+extern mod core(name = \"std\");\n+extern mod std(name = \"extra\");\n+\n extern mod rustc;\n extern mod syntax;\n \n+use core::prelude::*;\n use core::*;\n+\n use core::cell::Cell;\n use rustc::driver::{driver, session};\n use syntax::{ast, diagnostic};"}, {"sha": "4f67118e52059351cbd01265dcb95a1b356aa9e1", "filename": "src/librustpkg/context.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fcontext.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Context data structure used by rustpkg\n \n+use core::prelude::*;\n+\n use core::hashmap::HashMap;\n \n pub struct Ctx {"}, {"sha": "700b3338a3a22faee149ecf4d4d72a3f934e1692", "filename": "src/librustpkg/path_util.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Fpath_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Fpath_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fpath_util.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,7 @@\n \n // rustpkg utilities having to do with paths and directories\n \n+use core::prelude::*;\n pub use util::{PkgId, RemotePath, LocalPath};\n use core::libc::consts::os::posix88::{S_IRUSR, S_IWUSR, S_IXUSR};\n use core::os::mkdir_recursive;"}, {"sha": "79e978c01d1bba519e4e732a0a1f240998f6d406", "filename": "src/librustpkg/rustpkg.rc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Frustpkg.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Frustpkg.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Frustpkg.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -18,10 +18,15 @@\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"lib\"];\n \n-extern mod std;\n+#[no_std];\n+\n+extern mod core(name = \"std\");\n+extern mod std(name = \"extra\");\n+\n extern mod rustc;\n extern mod syntax;\n \n+use core::prelude::*;\n use core::*;\n pub use core::path::Path;\n use core::hashmap::HashMap;"}, {"sha": "1425e68a857738381f5bffac556fbf5266b17a32", "filename": "src/librustpkg/util.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibrustpkg%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Futil.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n use core::*;\n use core::cmp::Ord;\n use core::hash::Streaming;"}, {"sha": "f9c4612d043f61ec29c30883397812500eb918dc", "filename": "src/libstd/core.rc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibstd%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibstd%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcore.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -47,7 +47,7 @@ they contained the following prologue:\n */\n \n \n-#[link(name = \"core\",\n+#[link(name = \"std\",\n        vers = \"0.7-pre\",\n        uuid = \"c70c24a7-5551-4f73-8e37-380b11d80be8\",\n        url = \"https://github.com/mozilla/rust/tree/master/src/libcore\")];\n@@ -64,10 +64,10 @@ they contained the following prologue:\n #[deny(non_camel_case_types)];\n \n // Make core testable by not duplicating lang items. See #2912\n-#[cfg(test)] extern mod realcore(name = \"core\");\n-#[cfg(test)] pub use kinds = realcore::kinds;\n-#[cfg(test)] pub use ops = realcore::ops;\n-#[cfg(test)] pub use cmp = realcore::cmp;\n+#[cfg(test)] extern mod realstd(name = \"std\");\n+#[cfg(test)] pub use kinds = realstd::kinds;\n+#[cfg(test)] pub use ops = realstd::ops;\n+#[cfg(test)] pub use cmp = realstd::cmp;\n \n // On Linux, link to the runtime with -lrt.\n #[cfg(target_os = \"linux\")]\n@@ -213,8 +213,8 @@ mod stackwalk;\n pub mod rt;\n \n // A curious inner-module that's not exported that contains the binding\n-// 'core' so that macro-expanded references to core::error and such\n-// can be resolved within libcore.\n+// 'std' so that macro-expanded references to std::error and such\n+// can be resolved within libstd.\n #[doc(hidden)]\n mod core {\n     pub use clone;\n@@ -225,3 +225,4 @@ mod core {\n     pub use sys;\n     pub use pipes;\n }\n+"}, {"sha": "2d4bc9a8c49fa043bdaee6422271f112f8145f34", "filename": "src/libsyntax/abi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fabi.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use core::to_bytes;\n \n #[deriving(Eq)]"}, {"sha": "f82d8d3798a616fdebc83084d8080ec4178616e7", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // The Rust abstract syntax tree.\n \n+use core::prelude::*;\n+\n use codemap::{span, spanned};\n use abi::AbiSet;\n use opt_vec::OptVec;"}, {"sha": "e3ef56541b8fbaaa1c8e67dcca8d0630b7a58e08", "filename": "src/libsyntax/ast_map.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use abi::AbiSet;\n use ast::*;\n use ast;"}, {"sha": "283203059c8886bfe3d48a17b705195b0af40183", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::*;\n use ast;\n use ast_util;"}, {"sha": "4ac4aeed63a109496042ab3b719edea48b630f98", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Functions dealing with attributes and meta_items\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::{spanned, dummy_spanned};\n use attr;"}, {"sha": "5f701c4be8b6791aef6c767720bade4a897034aa", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -21,6 +21,8 @@ source code snippets, etc.\n \n */\n \n+use core::prelude::*;\n+\n use core::to_bytes;\n use std::serialize::{Encodable, Decodable, Encoder, Decoder};\n "}, {"sha": "528bc546fa30b85f66b37a42f6c2cbf6bb0cd46e", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use codemap::{Pos, span};\n use codemap;\n "}, {"sha": "204eb9a9f8b77ff5114951c114fdc9cb85b525fa", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,6 +12,8 @@\n  * Inline assembly support.\n  */\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::span;\n use ext::base;"}, {"sha": "311636ee7c14884c504103453d015b3e5d4cfd14", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap;\n use codemap::{CodeMap, span, ExpnInfo, ExpandedFrom};"}, {"sha": "58ea03ffceefebd1051fe86997080d88b48d5d03", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use abi::AbiSet;\n use ast::ident;\n use ast;"}, {"sha": "788f047773abc5d0aef4f814e992dedf3b2488c9", "filename": "src/libsyntax/ext/concat_idents.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fconcat_idents.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::span;\n use ext::base::*;"}, {"sha": "69e15a8dd67c06add8706a02dae71d31528ea654", "filename": "src/libsyntax/ext/deriving/clone.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,13 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::{meta_item, item, expr};\n use codemap::span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n use ext::deriving::generic::*;\n \n-\n pub fn expand_deriving_clone(cx: @ExtCtxt,\n                              span: span,\n                              mitem: @meta_item,"}, {"sha": "81434e8ec623bc33df7d5e5d620352a2e7ac74a8", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::{meta_item, item, expr};\n use codemap::span;\n use ext::base::ExtCtxt;"}, {"sha": "7e549c25665e3a30f0233923f29a60f3a5f2250a", "filename": "src/libsyntax/ext/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use ast::{meta_item, item, expr};\n use codemap::span;"}, {"sha": "39764a72ece74834cf7d3d0ae054c2671bb3207b", "filename": "src/libsyntax/ext/deriving/cmp/totaleq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use ast::{meta_item, item, expr};\n use codemap::span;"}, {"sha": "561a1577e7e6d6bfea6a1057b8a31d2acf45f59a", "filename": "src/libsyntax/ext/deriving/cmp/totalord.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::{meta_item, item, expr};\n use codemap::span;\n use ext::base::ExtCtxt;"}, {"sha": "f3ea6f28a0044335538593c8acdcd2f2aa6f7ce0", "filename": "src/libsyntax/ext/deriving/decodable.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -13,6 +13,8 @@ The compiler code necessary for #[deriving(Decodable)]. See\n encodable.rs for more.\n */\n \n+use core::prelude::*;\n+\n use ast;\n use ast::*;\n use ext::base::ExtCtxt;"}, {"sha": "00f7b7a1ebd1ca2d82554680bc9063200e34d894", "filename": "src/libsyntax/ext/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -75,6 +75,7 @@ would yield functions like:\n     }\n */\n \n+use core::prelude::*;\n \n use ast;\n use ast::*;"}, {"sha": "49f7ea598644b6d56dc0599d3f7b77931181e66a", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -162,6 +162,8 @@ StaticEnum(<ast::enum_def of C>, ~[(<ident of C0>, Left(1)),\n \n */\n \n+use core::prelude::*;\n+\n use ast;\n use ast::{enum_def, expr, ident, Generics, struct_def};\n "}, {"sha": "7a818a4e04f52f4caf5343b395ec6fb0c0c7d813", "filename": "src/libsyntax/ext/deriving/iter_bytes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::{meta_item, item, expr, and};\n use codemap::span;\n use ext::base::ExtCtxt;"}, {"sha": "e96682676bdd835714a5251b3ae7da7ce77a0a0d", "filename": "src/libsyntax/ext/deriving/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fmod.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -18,6 +18,8 @@ library.\n \n */\n \n+use core::prelude::*;\n+\n use ast;\n use ast::{Ty, enum_def, expr, ident, item, Generics, meta_item, struct_def};\n use ext::base::ExtCtxt;"}, {"sha": "df92693d3246a32b83978a468da3c87a33411fc9", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use ast::{meta_item, item, expr, ident};\n use codemap::span;"}, {"sha": "2e00bba27b3e38b231bab918ca0ab030adda1a38", "filename": "src/libsyntax/ext/deriving/to_str.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::{meta_item, item, expr};\n use codemap::span;\n use ext::base::ExtCtxt;"}, {"sha": "f8f7dc8db5fd6a03b5eeb9d5012406f5f938392b", "filename": "src/libsyntax/ext/deriving/ty.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fderiving%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fty.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -13,6 +13,8 @@ A mini version of ast::Ty, which is easier to use, and features an\n explicit `Self` type to use when specifying impls to be derived.\n */\n \n+use core::prelude::*;\n+\n use ast;\n use ast::{expr,Generics,ident};\n use ext::base::ExtCtxt;"}, {"sha": "3e5fb939f62411372a21848d211b153c06c00a4e", "filename": "src/libsyntax/ext/env.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fenv.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,6 +14,8 @@\n  * interface.\n  */\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::span;\n use ext::base::*;"}, {"sha": "c74a4dfb5cdfec7967598998829f03a76ab0014e", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::{blk_, attribute_, attr_outer, meta_word};\n use ast::{crate, expr_, expr_mac, mac_invoc_tt};\n use ast::{item_mac, stmt_, stmt_mac, stmt_expr, stmt_semi};"}, {"sha": "987f7fc319abb26c137e79042b240c26ad83eeb2", "filename": "src/libsyntax/ext/fmt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ffmt.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -14,6 +14,8 @@\n  * compiler syntax extension plugin interface.\n  */\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::span;\n use ext::base::*;"}, {"sha": "423ade835a07523370dfb7899a6222efc04d6a19", "filename": "src/libsyntax/ext/log_syntax.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Flog_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Flog_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Flog_syntax.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap;\n use ext::base::*;"}, {"sha": "6d6db23a3785ee622162741a7e5620e6adb3dbbd", "filename": "src/libsyntax/ext/pipes/ast_builder.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -13,6 +13,9 @@\n // To start with, it will be use dummy spans, but it might someday do\n // something smarter.\n \n+use core::prelude::*;\n+\n+use abi::AbiSet;\n use ast::ident;\n use ast;\n use codemap::span;"}, {"sha": "694a7c1cf8411d742d0d0c3bc501746e37c25823", "filename": "src/libsyntax/ext/pipes/check.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fcheck.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -29,6 +29,8 @@ that.\n \n */\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::span;\n use ext::base::ExtCtxt;"}, {"sha": "9cdd35aaf3221bc57bf8447372f1a3309a6ac435", "filename": "src/libsyntax/ext/pipes/liveness.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fliveness.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -37,6 +37,8 @@ updating the states using rule (2) until there are no changes.\n \n */\n \n+use core::prelude::*;\n+\n use ext::base::ExtCtxt;\n use ext::pipes::proto::{protocol_};\n "}, {"sha": "67ef3347ff71c3a8bfc7882d1f78692f556b566b", "filename": "src/libsyntax/ext/pipes/parse_proto.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fparse_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fparse_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fparse_proto.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // Parsing pipes protocols from token trees.\n \n+use core::prelude::*;\n+\n use ast_util;\n use ext::pipes::proto::*;\n use parse::common::SeqSep;"}, {"sha": "7ed375efc547cc18d3bdf6152bb68c1c0ea93e5f", "filename": "src/libsyntax/ext/pipes/pipec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fpipec.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -10,6 +10,8 @@\n \n // A protocol compiler for Rust.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::{dummy_sp, spanned};\n use ext::base::ExtCtxt;"}, {"sha": "80e4520b09419e34404d1f92101f077c3da37369", "filename": "src/libsyntax/ext/pipes/proto.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fproto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fpipes%2Fproto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fproto.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::span;\n use ext::base::ExtCtxt;"}, {"sha": "9a5645a5b0cab96ac14d5a9bf34fefd22d849877", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::{BytePos, Pos, span};\n use ext::base::ExtCtxt;\n@@ -29,6 +31,8 @@ use parse;\n */\n \n pub mod rt {\n+    use core::prelude::*;\n+\n     use ast;\n     use ext::base::ExtCtxt;\n     use parse;"}, {"sha": "73b84c2a5ab9a5963e441e0f4ef7138eb618e966", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap;\n use codemap::{FileMap, Loc, Pos, ExpandedFrom, span};"}, {"sha": "185d2fac11be8e7ead6d040fb97310ecb91cbc73", "filename": "src/libsyntax/ext/trace_macros.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftrace_macros.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::span;\n use ext::base::ExtCtxt;"}, {"sha": "be79722373bda1fbb8737c9208a17ef5ecfb2da0", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -9,6 +9,9 @@\n // except according to those terms.\n \n // Earley-like parser for macros.\n+\n+use core::prelude::*;\n+\n use ast;\n use ast::{matcher, match_tok, match_seq, match_nonterminal, ident};\n use codemap::{BytePos, mk_sp};"}, {"sha": "04ac311579fed1f0df8bf84133d475c17e6c1862", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use ast::{ident, matcher_, matcher, match_tok, match_nonterminal, match_seq};\n use ast::{tt_delim};"}, {"sha": "3e63360fbec6900e3936f05754aef69c978d57ca", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use ast::{token_tree, tt_delim, tt_tok, tt_seq, tt_nonterminal,ident};\n use codemap::{span, dummy_sp};"}, {"sha": "709463159c52c52d1eb6cb89a8268d465647f034", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast::*;\n use ast;\n use codemap::{span, spanned};"}, {"sha": "66d2d46cc584d0119f6c649d9d335cabd0ab4ad8", "filename": "src/libsyntax/parse/comments.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcomments.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::{BytePos, CharPos, CodeMap, Pos};\n use diagnostic;"}, {"sha": "7182b80880ff912aaf50966a12143d3c2f5afe27", "filename": "src/libsyntax/parse/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcommon.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::{BytePos, spanned};\n use parse::lexer::reader;"}, {"sha": "86284a3923a2a8eaeeb04f6d868443423e2ac36d", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use codemap::{BytePos, CharPos, CodeMap, Pos, span};\n use codemap;"}, {"sha": "34205e7b9abcb099ed628550409bc12a0c6059fd", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -17,6 +17,7 @@ Obsolete syntax that becomes too hard to parse can be\n removed.\n */\n \n+use core::prelude::*;\n \n use ast::{expr, expr_lit, lit_nil, attribute};\n use ast;"}, {"sha": "0a2d0ed924edfa6f903a12b95dcbab9309c47dee", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use abi;\n use abi::AbiSet;\n use ast::{Sigil, BorrowedSigil, ManagedSigil, OwnedSigil};"}, {"sha": "1153c361e69fa0e4e0795cc9751f815ed64b866e", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use ast;\n use ast_util;\n use parse::token;"}, {"sha": "4e2fd5592dfa0b429516f2d2ccb8de0a214cf9d8", "filename": "src/libsyntax/print/pp.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fprint%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fprint%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpp.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -60,6 +60,9 @@\n  * line (which it can't) and so naturally place the content on its own line to\n  * avoid combining it with other lines and making matters even worse.\n  */\n+\n+use core::prelude::*;\n+\n #[deriving(Eq)]\n pub enum breaks { consistent, inconsistent, }\n "}, {"sha": "9110becefbce94c2dfa48f62c9082098ec3055a0", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n \n use abi::AbiSet;\n use ast::{RegionTyParamBound, TraitTyParamBound, required, provided};"}, {"sha": "1b9b7b2c8c38955fb1b0b57f2bd92037149404a4", "filename": "src/libsyntax/syntax.rc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fsyntax.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fsyntax.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rc?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -23,7 +23,13 @@\n #[allow(non_camel_case_types)];\n #[deny(deprecated_pattern)];\n \n-extern mod std;\n+#[no_core];\n+#[no_std];\n+\n+extern mod core(name = \"std\");\n+extern mod std(name = \"extra\");\n+\n+use core::prelude::*;\n \n pub mod util {\n     pub mod interner;"}, {"sha": "e2736a00564bd4d994f7a2040f910f70772cb61e", "filename": "src/libsyntax/util/interner.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Futil%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Futil%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Finterner.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -12,6 +12,11 @@\n // allows bidirectional lookup; i.e. given a value, one can easily find the\n // type, and vice versa.\n \n+// allow the interner_key macro to escape this module:\n+#[macro_escape];\n+\n+use core::prelude::*;\n+\n use core::cmp::Equiv;\n use core::hashmap::HashMap;\n use syntax::parse::token::StringRef;"}, {"sha": "a2b89243cfd1ba6ccc5f2e7159506219bb6e474b", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3723cf7c486fd22544b71d27eca5ed7082c6dff/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=f3723cf7c486fd22544b71d27eca5ed7082c6dff", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use core::prelude::*;\n+\n use abi::AbiSet;\n use ast::*;\n use ast;"}]}