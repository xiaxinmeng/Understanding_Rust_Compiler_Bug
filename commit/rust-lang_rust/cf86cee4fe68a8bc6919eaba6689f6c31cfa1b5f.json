{"sha": "cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "node_id": "C_kwDOAAsO6NoAKGNmODZjZWU0ZmU2OGE4YmM2OTE5ZWFiYTY2ODlmNmMzMWNmYTFiNWY", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2022-01-10T14:36:13Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2022-01-10T14:36:13Z"}, "message": "Downgrade mutex_atomic to nursery", "tree": {"sha": "4425ce8580b75d14800a69b018f55e9888233791", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4425ce8580b75d14800a69b018f55e9888233791"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "html_url": "https://github.com/rust-lang/rust/commit/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b66dbe87f10c56f86270ce6eb0efd88e6e7fc1c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b66dbe87f10c56f86270ce6eb0efd88e6e7fc1c9", "html_url": "https://github.com/rust-lang/rust/commit/b66dbe87f10c56f86270ce6eb0efd88e6e7fc1c9"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "47b85caa5803e8dd20404e8f68e4d97fbb10d0ce", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "patch": "@@ -204,7 +204,6 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(mut_key::MUTABLE_KEY_TYPE),\n     LintId::of(mut_mutex_lock::MUT_MUTEX_LOCK),\n     LintId::of(mut_reference::UNNECESSARY_MUT_PASSED),\n-    LintId::of(mutex_atomic::MUTEX_ATOMIC),\n     LintId::of(needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE),\n     LintId::of(needless_bool::BOOL_COMPARISON),\n     LintId::of(needless_bool::NEEDLESS_BOOL),"}, {"sha": "d21d9506ede11b49bb5a27b5494baf2a3a3f4066", "filename": "clippy_lints/src/lib.register_nursery.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Flib.register_nursery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_nursery.rs?ref=cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "patch": "@@ -17,6 +17,7 @@ store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n     LintId::of(let_if_seq::USELESS_LET_IF_SEQ),\n     LintId::of(missing_const_for_fn::MISSING_CONST_FOR_FN),\n     LintId::of(mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL),\n+    LintId::of(mutex_atomic::MUTEX_ATOMIC),\n     LintId::of(mutex_atomic::MUTEX_INTEGER),\n     LintId::of(non_send_fields_in_send_ty::NON_SEND_FIELDS_IN_SEND_TY),\n     LintId::of(nonstandard_macro_braces::NONSTANDARD_MACRO_BRACES),"}, {"sha": "f9ffd4cf829fa220ac198750eedf317b4ba93916", "filename": "clippy_lints/src/lib.register_perf.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Flib.register_perf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Flib.register_perf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_perf.rs?ref=cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "patch": "@@ -19,7 +19,6 @@ store.register_group(true, \"clippy::perf\", Some(\"clippy_perf\"), vec![\n     LintId::of(methods::SINGLE_CHAR_PATTERN),\n     LintId::of(methods::UNNECESSARY_TO_OWNED),\n     LintId::of(misc::CMP_OWNED),\n-    LintId::of(mutex_atomic::MUTEX_ATOMIC),\n     LintId::of(redundant_clone::REDUNDANT_CLONE),\n     LintId::of(slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),\n     LintId::of(stable_sort_primitive::STABLE_SORT_PRIMITIVE),"}, {"sha": "73823779e493d98e52e6642777db0db1dee9df1a", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "patch": "@@ -38,7 +38,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub MUTEX_ATOMIC,\n-    perf,\n+    nursery,\n     \"using a mutex where an atomic value could be used instead\"\n }\n "}, {"sha": "71063d9ce46347f03b77473493762ba8c4099135", "filename": "tests/ui/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/tests%2Fui%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/tests%2Fui%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.rs?ref=cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::all)]\n #![warn(clippy::mutex_integer)]\n+#![warn(clippy::mutex_atomic)]\n \n fn main() {\n     use std::sync::Mutex;"}, {"sha": "ef7ad9b757614694ae3e6a6cf453453a3f214ac5", "filename": "tests/ui/mutex_atomic.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/tests%2Fui%2Fmutex_atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f/tests%2Fui%2Fmutex_atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.stderr?ref=cf86cee4fe68a8bc6919eaba6689f6c31cfa1b5f", "patch": "@@ -1,45 +1,45 @@\n error: consider using an `AtomicBool` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`\n-  --> $DIR/mutex_atomic.rs:6:5\n+  --> $DIR/mutex_atomic.rs:7:5\n    |\n LL |     Mutex::new(true);\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mutex-atomic` implied by `-D warnings`\n \n error: consider using an `AtomicUsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`\n-  --> $DIR/mutex_atomic.rs:7:5\n+  --> $DIR/mutex_atomic.rs:8:5\n    |\n LL |     Mutex::new(5usize);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: consider using an `AtomicIsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`\n-  --> $DIR/mutex_atomic.rs:8:5\n+  --> $DIR/mutex_atomic.rs:9:5\n    |\n LL |     Mutex::new(9isize);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: consider using an `AtomicPtr` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`\n-  --> $DIR/mutex_atomic.rs:10:5\n+  --> $DIR/mutex_atomic.rs:11:5\n    |\n LL |     Mutex::new(&x as *const u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: consider using an `AtomicPtr` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`\n-  --> $DIR/mutex_atomic.rs:11:5\n+  --> $DIR/mutex_atomic.rs:12:5\n    |\n LL |     Mutex::new(&mut x as *mut u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: consider using an `AtomicUsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`\n-  --> $DIR/mutex_atomic.rs:12:5\n+  --> $DIR/mutex_atomic.rs:13:5\n    |\n LL |     Mutex::new(0u32);\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mutex-integer` implied by `-D warnings`\n \n error: consider using an `AtomicIsize` instead of a `Mutex` here; if you just want the locking behavior and not the internal type, consider using `Mutex<()>`\n-  --> $DIR/mutex_atomic.rs:13:5\n+  --> $DIR/mutex_atomic.rs:14:5\n    |\n LL |     Mutex::new(0i32);\n    |     ^^^^^^^^^^^^^^^^"}]}