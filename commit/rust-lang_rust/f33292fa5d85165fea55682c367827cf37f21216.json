{"sha": "f33292fa5d85165fea55682c367827cf37f21216", "node_id": "C_kwDOAAsO6NoAKGYzMzI5MmZhNWQ4NTE2NWZlYTU1NjgyYzM2NzgyN2NmMzdmMjEyMTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-13T20:55:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-13T20:55:37Z"}, "message": "Rollup merge of #109055 - ozkanonur:detect_src_and_out, r=albertlarsan68\n\ncreate `config::tests::detect_src_and_out` test for bootstrap\n\nResolves one of the `FIXME` in bootstrap", "tree": {"sha": "c9c7871b47163a9ed30d9dd8eaaae5c01b2dd741", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9c7871b47163a9ed30d9dd8eaaae5c01b2dd741"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f33292fa5d85165fea55682c367827cf37f21216", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkD43JCRBK7hj4Ov3rIwAADwQIALHPZqox5JTs4XzJDvB3n7lN\n4NIGW/UW6yybKloz1gcIzkbmg5T3ZzDkOGXMy05p8Ke5qzrC4bAkTe9RMI39+4+d\ninPGKFq5us97tHht7YGgKEOFmgmDo3CCQjkVuKyMeUvwTU51/JW2gLASjmzfBOaP\nORSIZZjGBoXiK15C+SKxa9cTYuU2pbcZj2WX1e7j8wWDugq9L22xaIH3QS6GTvzD\nDgT44TqIYH+Q3BHcXHRRbnrq+H6DvuHzUyd9xzT7k9jjFUVcHSzKDz3vWu3TEupL\nduZjTeW/A2axXeKxz5Ffay1LGfC+k8bzcgekA6e4UoTywXJ8YH4bDiZ1i/r+XSw=\n=r4SH\n-----END PGP SIGNATURE-----\n", "payload": "tree c9c7871b47163a9ed30d9dd8eaaae5c01b2dd741\nparent 6cec8cb5c2e3653b9d533e2d280b91a9114cf15a\nparent 58c7b670adee30a3fb987297ceb03483756c8f0f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678740937 +0100\ncommitter GitHub <noreply@github.com> 1678740937 +0100\n\nRollup merge of #109055 - ozkanonur:detect_src_and_out, r=albertlarsan68\n\ncreate `config::tests::detect_src_and_out` test for bootstrap\n\nResolves one of the `FIXME` in bootstrap\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f33292fa5d85165fea55682c367827cf37f21216", "html_url": "https://github.com/rust-lang/rust/commit/f33292fa5d85165fea55682c367827cf37f21216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f33292fa5d85165fea55682c367827cf37f21216/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cec8cb5c2e3653b9d533e2d280b91a9114cf15a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cec8cb5c2e3653b9d533e2d280b91a9114cf15a", "html_url": "https://github.com/rust-lang/rust/commit/6cec8cb5c2e3653b9d533e2d280b91a9114cf15a"}, {"sha": "58c7b670adee30a3fb987297ceb03483756c8f0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/58c7b670adee30a3fb987297ceb03483756c8f0f", "html_url": "https://github.com/rust-lang/rust/commit/58c7b670adee30a3fb987297ceb03483756c8f0f"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "16dc8c63abc96e989ac6016c37a80a378b46fee2", "filename": "src/bootstrap/config/tests.rs", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f33292fa5d85165fea55682c367827cf37f21216/src%2Fbootstrap%2Fconfig%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33292fa5d85165fea55682c367827cf37f21216/src%2Fbootstrap%2Fconfig%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig%2Ftests.rs?ref=f33292fa5d85165fea55682c367827cf37f21216", "patch": "@@ -1,5 +1,5 @@\n use super::{Config, TomlConfig};\n-use std::path::Path;\n+use std::{env, path::Path};\n \n fn toml(config: &str) -> impl '_ + Fn(&Path) -> TomlConfig {\n     |&_| toml::from_str(config).unwrap()\n@@ -33,4 +33,35 @@ fn download_ci_llvm() {\n     ));\n }\n \n-// FIXME: add test for detecting `src` and `out`\n+#[test]\n+fn detect_src_and_out() {\n+    let cfg = parse(\"\");\n+\n+    // This will bring absolute form of `src/bootstrap` path\n+    let current_dir = std::env::current_dir().unwrap();\n+\n+    // get `src` by moving into project root path\n+    let expected_src = current_dir.ancestors().nth(2).unwrap();\n+\n+    assert_eq!(&cfg.src, expected_src);\n+\n+    // This should bring output path of bootstrap in absolute form\n+    let cargo_target_dir = env::var_os(\"CARGO_TARGET_DIR\")\n+        .expect(\"CARGO_TARGET_DIR must been provided for the test environment from bootstrap\");\n+\n+    // Move to `build` from `build/bootstrap`\n+    let expected_out = Path::new(&cargo_target_dir).parent().unwrap();\n+    assert_eq!(&cfg.out, expected_out);\n+\n+    let args: Vec<String> = env::args().collect();\n+\n+    // Another test for `out` as a sanity check\n+    //\n+    // This will bring something similar to:\n+    //     `{config_toml_place}/build/bootstrap/debug/deps/bootstrap-c7ee91d5661e2804`\n+    // `{config_toml_place}` can be anywhere, not just in the rust project directory.\n+    let dep = Path::new(args.first().unwrap());\n+    let expected_out = dep.ancestors().nth(4).unwrap();\n+\n+    assert_eq!(&cfg.out, expected_out);\n+}"}]}