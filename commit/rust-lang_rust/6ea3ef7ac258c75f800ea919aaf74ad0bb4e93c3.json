{"sha": "6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYTNlZjdhYzI1OGM3NWY4MDBlYTkxOWFhZjc0YWQwYmI0ZTkzYzM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-07-30T08:14:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-30T08:14:47Z"}, "message": "Rollup merge of #35094 - mcarton:multispan, r=jonathandturner\n\nRevert \"Remove unused methods from MultiSpan\"\n\nThis reverts commit f7019a4e2f80577d38ec35fcebd64d5970b15f78.\n\nThat commit removed the only way to make a suggestion with more than one substitute. That feature is not used directly by rustc but exists and is used by Clippy. Bring it back until we come up with a better solution (suggestions don't use span labels, so it would make sense for them to use their own type).\nRational there: https://github.com/Manishearth/rust-clippy/pull/1119.\n\nr? @jonathandturner\nCc @Manishearth", "tree": {"sha": "e85196d3360b3cec516a2b768a6e74979049f1ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e85196d3360b3cec516a2b768a6e74979049f1ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3", "html_url": "https://github.com/rust-lang/rust/commit/6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e649a2535f150d02a8e87edd184b6412a3d9604a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e649a2535f150d02a8e87edd184b6412a3d9604a", "html_url": "https://github.com/rust-lang/rust/commit/e649a2535f150d02a8e87edd184b6412a3d9604a"}, {"sha": "6dc98cf099d1fc3209e1354144f2190c052c8a0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc98cf099d1fc3209e1354144f2190c052c8a0b", "html_url": "https://github.com/rust-lang/rust/commit/6dc98cf099d1fc3209e1354144f2190c052c8a0b"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "0f171805bb0a988fb95853932fa3619b46b37627", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=6ea3ef7ac258c75f800ea919aaf74ad0bb4e93c3", "patch": "@@ -193,6 +193,20 @@ impl MultiSpan {\n         }\n     }\n \n+    pub fn from_span(primary_span: Span) -> MultiSpan {\n+        MultiSpan {\n+            primary_spans: vec![primary_span],\n+            span_labels: vec![]\n+        }\n+    }\n+\n+    pub fn from_spans(vec: Vec<Span>) -> MultiSpan {\n+        MultiSpan {\n+            primary_spans: vec,\n+            span_labels: vec![]\n+        }\n+    }\n+\n     pub fn push_span_label(&mut self, span: Span, label: String) {\n         self.span_labels.push((span, label));\n     }\n@@ -240,10 +254,7 @@ impl MultiSpan {\n \n impl From<Span> for MultiSpan {\n     fn from(span: Span) -> MultiSpan {\n-        MultiSpan {\n-            primary_spans: vec![span],\n-            span_labels: vec![]\n-        }\n+        MultiSpan::from_span(span)\n     }\n }\n "}]}