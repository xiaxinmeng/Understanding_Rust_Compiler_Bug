{"sha": "97a71c0c777fa5873aca866a9a8f4adfab48feef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YTcxYzBjNzc3ZmE1ODczYWNhODY2YTlhOGY0YWRmYWI0OGZlZWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-18T11:34:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-18T11:34:25Z"}, "message": "fmt\n\nCo-authored-by: Oli Scherer <github35764891676564198441@oli-obk.de>", "tree": {"sha": "0958c22299def121ed44e5d8026b09c0121bda2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0958c22299def121ed44e5d8026b09c0121bda2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97a71c0c777fa5873aca866a9a8f4adfab48feef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfZJtBCRBK7hj4Ov3rIwAAdHIIADyNrtZnTVjJdcrtZ61C7or2\n+SvmOl1xLNqB9ZBaN5xtqEJfzeQ4asxmZ4vBn2nzz2uFrEyjSyhab4S270XO8GEm\n6NHFz0qvtj7ZcmDA/uhWHEoBuz0u+7JA2rsP8BHo2s0DIHT292Sh/Vlm3nsIclzH\nYzILA3w3HiNAmn0rSKYZNeircnXS97wKhSdDq0XqIcHu3QGayw0LI+L32h9MNwLf\nqV2hqEAaQM+0VQRfD5cTsFxukDfN2V2XB1Fe7NMs4wKNHGou09n9RgwC90o6Lgs9\nqj3RJALVts60LoFlrB4eX3I/y/nkLjlp0nPPWnuq2JLIVWflevcxfO+7DTqVreY=\n=kB8M\n-----END PGP SIGNATURE-----\n", "payload": "tree 0958c22299def121ed44e5d8026b09c0121bda2f\nparent 32cdb7131b275c00f6a711e2c0f71d5ae76b67d5\nauthor Ralf Jung <post@ralfj.de> 1600428865 +0200\ncommitter GitHub <noreply@github.com> 1600428865 +0200\n\nfmt\n\nCo-authored-by: Oli Scherer <github35764891676564198441@oli-obk.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97a71c0c777fa5873aca866a9a8f4adfab48feef", "html_url": "https://github.com/rust-lang/rust/commit/97a71c0c777fa5873aca866a9a8f4adfab48feef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97a71c0c777fa5873aca866a9a8f4adfab48feef/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32cdb7131b275c00f6a711e2c0f71d5ae76b67d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/32cdb7131b275c00f6a711e2c0f71d5ae76b67d5", "html_url": "https://github.com/rust-lang/rust/commit/32cdb7131b275c00f6a711e2c0f71d5ae76b67d5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5bcbd797ca3c95dd23d4c597eacc7145b1975abd", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97a71c0c777fa5873aca866a9a8f4adfab48feef/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97a71c0c777fa5873aca866a9a8f4adfab48feef/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=97a71c0c777fa5873aca866a9a8f4adfab48feef", "patch": "@@ -162,7 +162,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // We forward this to the underlying *implementation* in the panic runtime crate.\n             // Normally, this will be either `libpanic_unwind` or `libpanic_abort`, but it could\n             // also be a custom user-provided implementation via `#![feature(panic_runtime)]`\n-            \"__rust_start_panic\" | \"__rust_panic_cleanup\"=> {\n+            \"__rust_start_panic\" | \"__rust_panic_cleanup\" => {\n                 // This replicates some of the logic in `inject_panic_runtime`.\n                 // FIXME: is there a way to reuse that logic?\n                 let panic_runtime = match this.tcx.sess.panic_strategy() {"}]}