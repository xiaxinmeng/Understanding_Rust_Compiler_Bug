{"sha": "09b3ea71db85e07622cbaca8da12d14139868928", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YjNlYTcxZGI4NWUwNzYyMmNiYWNhOGRhMTJkMTQxMzk4Njg5Mjg=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-07-15T03:57:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-15T03:57:19Z"}, "message": "Rollup merge of #43229 - kennytm:return-false-if-path-is-relative-hahaha, r=steveklabnik\n\nFix minor typo in std::path documentation.\n\nFix minor typo in `std::path` documentation.\n\nReplace all `'C' as u8` with `b'C'`.", "tree": {"sha": "e1fdde335026623ce63ffcdc03841f1ab9b07b4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1fdde335026623ce63ffcdc03841f1ab9b07b4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09b3ea71db85e07622cbaca8da12d14139868928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09b3ea71db85e07622cbaca8da12d14139868928", "html_url": "https://github.com/rust-lang/rust/commit/09b3ea71db85e07622cbaca8da12d14139868928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09b3ea71db85e07622cbaca8da12d14139868928/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57bc82d637905457a2ae4869e21302d576209cb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/57bc82d637905457a2ae4869e21302d576209cb8", "html_url": "https://github.com/rust-lang/rust/commit/57bc82d637905457a2ae4869e21302d576209cb8"}, {"sha": "1da51cca9ea13aa9dea06d8434d55aac95541c63", "url": "https://api.github.com/repos/rust-lang/rust/commits/1da51cca9ea13aa9dea06d8434d55aac95541c63", "html_url": "https://github.com/rust-lang/rust/commit/1da51cca9ea13aa9dea06d8434d55aac95541c63"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "432605cf3b25b271e8bb1bf9bdff10048a302f77", "filename": "src/libstd/path.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/09b3ea71db85e07622cbaca8da12d14139868928/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b3ea71db85e07622cbaca8da12d14139868928/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=09b3ea71db85e07622cbaca8da12d14139868928", "patch": "@@ -135,12 +135,12 @@ use sys::path::{is_sep_byte, is_verbatim_sep, MAIN_SEP_STR, parse_prefix};\n ///            get_path_prefix(r\"\\\\?\\pictures\\kittens\"));\n /// assert_eq!(VerbatimUNC(OsStr::new(\"server\"), OsStr::new(\"share\")),\n ///            get_path_prefix(r\"\\\\?\\UNC\\server\\share\"));\n-/// assert_eq!(VerbatimDisk('C' as u8), get_path_prefix(r\"\\\\?\\c:\\\"));\n+/// assert_eq!(VerbatimDisk(b'C'), get_path_prefix(r\"\\\\?\\c:\\\"));\n /// assert_eq!(DeviceNS(OsStr::new(\"BrainInterface\")),\n ///            get_path_prefix(r\"\\\\.\\BrainInterface\"));\n /// assert_eq!(UNC(OsStr::new(\"server\"), OsStr::new(\"share\")),\n ///            get_path_prefix(r\"\\\\server\\share\"));\n-/// assert_eq!(Disk('C' as u8), get_path_prefix(r\"C:\\Users\\Rust\\Pictures\\Ferris\"));\n+/// assert_eq!(Disk(b'C'), get_path_prefix(r\"C:\\Users\\Rust\\Pictures\\Ferris\"));\n /// # }\n /// ```\n #[derive(Copy, Clone, Debug, Hash, PartialOrd, Ord, PartialEq, Eq)]\n@@ -235,10 +235,10 @@ impl<'a> Prefix<'a> {\n     ///\n     /// assert!(Verbatim(OsStr::new(\"pictures\")).is_verbatim());\n     /// assert!(VerbatimUNC(OsStr::new(\"server\"), OsStr::new(\"share\")).is_verbatim());\n-    /// assert!(VerbatimDisk('C' as u8).is_verbatim());\n+    /// assert!(VerbatimDisk(b'C').is_verbatim());\n     /// assert!(!DeviceNS(OsStr::new(\"BrainInterface\")).is_verbatim());\n     /// assert!(!UNC(OsStr::new(\"server\"), OsStr::new(\"share\")).is_verbatim());\n-    /// assert!(!Disk('C' as u8).is_verbatim());\n+    /// assert!(!Disk(b'C').is_verbatim());\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -401,7 +401,7 @@ enum State {\n /// let path = Path::new(r\"c:\\you\\later\\\");\n /// match path.components().next().unwrap() {\n ///     Component::Prefix(prefix_component) => {\n-///         assert_eq!(Prefix::Disk('C' as u8), prefix_component.kind());\n+///         assert_eq!(Prefix::Disk(b'C'), prefix_component.kind());\n ///         assert_eq!(OsStr::new(\"c:\"), prefix_component.as_os_str());\n ///     }\n ///     _ => unreachable!(),\n@@ -1040,7 +1040,7 @@ impl<'a> cmp::Ord for Components<'a> {\n /// [`Deref`]: ../ops/trait.Deref.html\n ///\n /// More details about the overall approach can be found in\n-/// the module documentation.\n+/// the [module documentation](index.html).\n ///\n /// # Examples\n ///\n@@ -1186,7 +1186,7 @@ impl PathBuf {\n         self.inner.push(path);\n     }\n \n-    /// Truncate `self` to [`self.parent`].\n+    /// Truncates `self` to [`self.parent`].\n     ///\n     /// Returns `false` and does nothing if [`self.file_name`] is [`None`].\n     /// Otherwise, returns `true`.\n@@ -1512,7 +1512,7 @@ impl AsRef<OsStr> for PathBuf {\n /// [`PathBuf`]: struct.PathBuf.html\n ///\n /// More details about the overall approach can be found in\n-/// the module documentation.\n+/// the [module documentation](index.html).\n ///\n /// # Examples\n ///\n@@ -1689,7 +1689,7 @@ impl Path {\n         self.has_root() && (cfg!(unix) || cfg!(target_os = \"redox\") || self.prefix().is_some())\n     }\n \n-    /// Return `false` if the `Path` is relative, i.e. not absolute.\n+    /// Returns `true` if the `Path` is relative, i.e. not absolute.\n     ///\n     /// See [`is_absolute`]'s documentation for more details.\n     ///\n@@ -2019,7 +2019,7 @@ impl Path {\n     /// * Repeated separators are ignored, so `a/b` and `a//b` both have\n     ///   `a` and `b` as components.\n     ///\n-    /// * Occurentces of `.` are normalized away, exept if they are at the\n+    /// * Occurences of `.` are normalized away, except if they are at the\n     ///   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and\n     ///   `a/b` all have `a` and `b` as components, but `./a/b` starts with\n     ///   an additional [`CurDir`] component."}]}