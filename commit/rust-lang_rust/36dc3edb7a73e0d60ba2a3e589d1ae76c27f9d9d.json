{"sha": "36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZGMzZWRiN2E3M2UwZDYwYmEyYTNlNTg5ZDFhZTc2YzI3ZjlkOWQ=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-11T21:58:20Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-11T21:58:48Z"}, "message": "vscode: added error handling to download file streams", "tree": {"sha": "cdea9366cb5ecd415830524e61fad3195f71bd84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdea9366cb5ecd415830524e61fad3195f71bd84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "html_url": "https://github.com/rust-lang/rust/commit/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/comments", "author": null, "committer": null, "parents": [{"sha": "759100fb0dcb41518f2a593dae5de5bbedd07776", "url": "https://api.github.com/repos/rust-lang/rust/commits/759100fb0dcb41518f2a593dae5de5bbedd07776", "html_url": "https://github.com/rust-lang/rust/commit/759100fb0dcb41518f2a593dae5de5bbedd07776"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "e737d6aceb468f14263248dc224ea7417aa33760", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "patch": "@@ -753,6 +753,11 @@\n                 \"os-tmpdir\": \"~1.0.1\"\n             }\n         },\n+        \"ts-nested-error\": {\n+            \"version\": \"1.1.3\",\n+            \"resolved\": \"https://registry.npmjs.org/ts-nested-error/-/ts-nested-error-1.1.3.tgz\",\n+            \"integrity\": \"sha512-CJSRAhXr6phdkuu65U/ctkY/TBzjkg2g1sL9juSG/PP3ONQNCbeksMy54OfCBTUt13hSpHNbnTO1OBPunOHj/Q==\"\n+        },\n         \"tslib\": {\n             \"version\": \"1.10.0\",\n             \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-1.10.0.tgz\","}, {"sha": "ce7117c69410b1b0e768685ab63e9bb6687cd541", "filename": "editors/code/package.json", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "patch": "@@ -27,6 +27,7 @@\n         \"jsonc-parser\": \"^2.1.0\",\n         \"node-fetch\": \"^2.6.0\",\n         \"throttle-debounce\": \"^2.1.0\",\n+        \"ts-nested-error\": \"^1.1.3\",\n         \"vscode-languageclient\": \"^6.1.0\"\n     },\n     \"devDependencies\": {"}, {"sha": "71700ec8aec5ae4d5964e6b2f96df94b04f28545", "filename": "editors/code/src/installation/download_file.ts", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "raw_url": "https://github.com/rust-lang/rust/raw/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts?ref=36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "patch": "@@ -1,6 +1,9 @@\n import fetch from \"node-fetch\";\n import * as fs from \"fs\";\n import { strict as assert } from \"assert\";\n+import { NestedError } from \"ts-nested-error\";\n+\n+class DownloadFileError extends NestedError {}\n \n /**\n  * Downloads file from `url` and stores it at `destFilePath` with `destFilePermissions`.\n@@ -14,13 +17,13 @@ export async function downloadFile(\n     destFilePermissions: number,\n     onProgress: (readBytes: number, totalBytes: number) => void\n ): Promise<void> {\n-    const res = await fetch(url);\n+    const res = await fetch(url).catch(DownloadFileError.rethrow(\"Failed at initial fetch\"));\n \n     if (!res.ok) {\n         console.log(\"Error\", res.status, \"while downloading file from\", url);\n         console.dir({ body: await res.text(), headers: res.headers }, { depth: 3 });\n \n-        throw new Error(`Got response ${res.status} when trying to download a file`);\n+        throw new DownloadFileError(`Got response ${res.status}`);\n     }\n \n     const totalBytes = Number(res.headers.get('content-length'));\n@@ -30,15 +33,21 @@ export async function downloadFile(\n \n     console.log(\"Downloading file of\", totalBytes, \"bytes size from\", url, \"to\", destFilePath);\n \n+    // Here reject() may be called 2 times. As per ECMAScript standard, 2-d call is ignored\n+    // https://tc39.es/ecma262/#sec-promise-reject-functions\n+\n     return new Promise<void>((resolve, reject) => res.body\n         .on(\"data\", (chunk: Buffer) => {\n             readBytes += chunk.length;\n             onProgress(readBytes, totalBytes);\n         })\n-        .on(\"error\", reject)\n-        .pipe(fs\n-            .createWriteStream(destFilePath, { mode: destFilePermissions })\n-            .on(\"close\", resolve)\n-        )\n+        .on(\"error\", err => reject(\n+            new DownloadFileError(`Read-stream error, read bytes: ${readBytes}`, err)\n+        ))\n+        .pipe(fs.createWriteStream(destFilePath, { mode: destFilePermissions }))\n+        .on(\"error\", err => reject(\n+            new DownloadFileError(`Write-stream error, read bytes: ${readBytes}`, err)\n+        ))\n+        .on(\"close\", resolve)\n     );\n }"}, {"sha": "4797c3f01adb857e514194bcb2c1ef4ea193c9c9", "filename": "editors/code/src/installation/language_server.ts", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts", "raw_url": "https://github.com/rust-lang/rust/raw/36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts?ref=36dc3edb7a73e0d60ba2a3e589d1ae76c27f9d9d", "patch": "@@ -104,6 +104,8 @@ export async function ensureLanguageServerBinary(\n                     `GitHub repository: ${err.message}`\n                 );\n \n+                console.error(err);\n+\n                 dns.resolve('example.com').then(\n                     addrs => console.log(\"DNS resolution for example.com was successful\", addrs),\n                     err => {"}]}