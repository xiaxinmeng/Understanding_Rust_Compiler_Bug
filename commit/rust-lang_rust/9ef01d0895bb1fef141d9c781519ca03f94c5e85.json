{"sha": "9ef01d0895bb1fef141d9c781519ca03f94c5e85", "node_id": "C_kwDOAAsO6NoAKDllZjAxZDA4OTViYjFmZWYxNDFkOWM3ODE1MTljYTAzZjk0YzVlODU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-10T20:33:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-10T20:33:17Z"}, "message": "Auto merge of #12490 - yue4u:fix/show-enum-in-fresh-use-tree, r=Veykril\n\nfix: complete non-std enum at the start of `use` completions\n\nclose: #12421", "tree": {"sha": "8d273a09ad3db0b0b3c62373abc480dc5b8a05ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d273a09ad3db0b0b3c62373abc480dc5b8a05ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ef01d0895bb1fef141d9c781519ca03f94c5e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef01d0895bb1fef141d9c781519ca03f94c5e85", "html_url": "https://github.com/rust-lang/rust/commit/9ef01d0895bb1fef141d9c781519ca03f94c5e85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ef01d0895bb1fef141d9c781519ca03f94c5e85/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b663a3a4a5e5c7be4214531d6120627f7b90470", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b663a3a4a5e5c7be4214531d6120627f7b90470", "html_url": "https://github.com/rust-lang/rust/commit/7b663a3a4a5e5c7be4214531d6120627f7b90470"}, {"sha": "29428637093cce62829e863eb5c8143da9860bef", "url": "https://api.github.com/repos/rust-lang/rust/commits/29428637093cce62829e863eb5c8143da9860bef", "html_url": "https://github.com/rust-lang/rust/commit/29428637093cce62829e863eb5c8143da9860bef"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "dc7a342dce2a48c2430d0c68ebe2b51bb101373c", "filename": "crates/ide-completion/src/completions/use_.rs", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9ef01d0895bb1fef141d9c781519ca03f94c5e85/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ef01d0895bb1fef141d9c781519ca03f94c5e85/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs?ref=9ef01d0895bb1fef141d9c781519ca03f94c5e85", "patch": "@@ -1,13 +1,13 @@\n //! Completion for use trees\n \n use hir::ScopeDef;\n-use ide_db::FxHashSet;\n+use ide_db::{FxHashSet, SymbolKind};\n use syntax::{ast, AstNode};\n \n use crate::{\n     context::{CompletionContext, NameRefContext, PathCompletionCtx, PathKind, PathQualifierCtx},\n     item::Builder,\n-    CompletionRelevance, Completions,\n+    CompletionItem, CompletionItemKind, CompletionRelevance, Completions,\n };\n \n pub(crate) fn complete_use_tree(acc: &mut Completions, ctx: &CompletionContext) {\n@@ -101,13 +101,30 @@ pub(crate) fn complete_use_tree(acc: &mut Completions, ctx: &CompletionContext)\n             cov_mark::hit!(use_tree_crate_roots_only);\n             acc.add_crate_roots(ctx);\n         }\n-        // only show modules in a fresh UseTree\n+        // only show modules and non-std enum in a fresh UseTree\n         None => {\n-            cov_mark::hit!(unqualified_path_only_modules_in_import);\n+            cov_mark::hit!(unqualified_path_selected_only);\n             ctx.process_all_names(&mut |name, res| {\n-                if let ScopeDef::ModuleDef(hir::ModuleDef::Module(_)) = res {\n-                    acc.add_resolution(ctx, name, res);\n-                }\n+                match res {\n+                    ScopeDef::ModuleDef(hir::ModuleDef::Module(_)) => {\n+                        acc.add_resolution(ctx, name, res);\n+                    }\n+                    ScopeDef::ModuleDef(hir::ModuleDef::Adt(hir::Adt::Enum(e))) => {\n+                        // exclude prelude enum\n+                        let is_builtin =\n+                            res.krate(ctx.db).map_or(false, |krate| krate.is_builtin(ctx.db));\n+\n+                        if !is_builtin {\n+                            let item = CompletionItem::new(\n+                                CompletionItemKind::SymbolKind(SymbolKind::Enum),\n+                                ctx.source_range(),\n+                                format!(\"{}::\", e.name(ctx.db)),\n+                            );\n+                            acc.add(item.build());\n+                        }\n+                    }\n+                    _ => {}\n+                };\n             });\n             acc.add_nameref_keywords_with_colon(ctx);\n         }"}, {"sha": "c169a62077cc6aa1ac5fd90cbe8b7943513e0084", "filename": "crates/ide-completion/src/tests/use_tree.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9ef01d0895bb1fef141d9c781519ca03f94c5e85/crates%2Fide-completion%2Fsrc%2Ftests%2Fuse_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ef01d0895bb1fef141d9c781519ca03f94c5e85/crates%2Fide-completion%2Fsrc%2Ftests%2Fuse_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fuse_tree.rs?ref=9ef01d0895bb1fef141d9c781519ca03f94c5e85", "patch": "@@ -10,18 +10,23 @@ fn check(ra_fixture: &str, expect: Expect) {\n \n #[test]\n fn use_tree_start() {\n-    cov_mark::check!(unqualified_path_only_modules_in_import);\n+    cov_mark::check!(unqualified_path_selected_only);\n     check(\n         r#\"\n //- /lib.rs crate:main deps:other_crate\n use f$0\n \n struct Foo;\n+enum FooBar {\n+    Foo,\n+    Bar\n+}\n mod foo {}\n //- /other_crate/lib.rs crate:other_crate\n // nothing here\n \"#,\n         expect![[r#\"\n+            en FooBar::\n             md foo\n             md other_crate\n             kw crate::"}]}