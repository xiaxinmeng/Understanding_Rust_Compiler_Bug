{"sha": "4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee", "node_id": "C_kwDOAAsO6NoAKDRkMDUxOWE0ZTc1ZTE2YWZlMDhjYTZkYTM2YzY1YzliN2RmZTVjZWU", "commit": {"author": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-09-01T17:29:59Z"}, "committer": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-09-27T18:29:19Z"}, "message": "Remove error condition in parse_attribute\n\nThis function is only ever called when the `#` has already been\nconsumed, no need to produce an error message here.", "tree": {"sha": "c9bc696ae101d8aeca907797f62d2f797b5c50a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9bc696ae101d8aeca907797f62d2f797b5c50a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee", "html_url": "https://github.com/rust-lang/rust/commit/4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee/comments", "author": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b1d7b029f8a8e6bade71cb03ae59b364745c31", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b1d7b029f8a8e6bade71cb03ae59b364745c31", "html_url": "https://github.com/rust-lang/rust/commit/e1b1d7b029f8a8e6bade71cb03ae59b364745c31"}], "stats": {"total": 37, "additions": 12, "deletions": 25}, "files": [{"sha": "297f4964116f030c91b744344bd04ab0fcff9ead", "filename": "compiler/rustc_parse/src/parser/attr.rs", "status": "modified", "additions": 12, "deletions": 25, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fattr.rs?ref=4d0519a4e75e16afe08ca6da36c65c9b7dfe5cee", "patch": "@@ -124,35 +124,22 @@ impl<'a> Parser<'a> {\n         let lo = self.token.span;\n         // Attributes can't have attributes of their own [Editor's note: not with that attitude]\n         self.collect_tokens_no_attrs(|this| {\n-            if this.eat(&token::Pound) {\n-                let style = if this.eat(&token::Not) {\n-                    ast::AttrStyle::Inner\n-                } else {\n-                    ast::AttrStyle::Outer\n-                };\n+            assert!(this.eat(&token::Pound), \"parse_attribute called in non-attribute position\");\n \n-                this.expect(&token::OpenDelim(Delimiter::Bracket))?;\n-                let item = this.parse_attr_item(false)?;\n-                this.expect(&token::CloseDelim(Delimiter::Bracket))?;\n-                let attr_sp = lo.to(this.prev_token.span);\n+            let style =\n+                if this.eat(&token::Not) { ast::AttrStyle::Inner } else { ast::AttrStyle::Outer };\n \n-                // Emit error if inner attribute is encountered and forbidden.\n-                if style == ast::AttrStyle::Inner {\n-                    this.error_on_forbidden_inner_attr(attr_sp, inner_parse_policy);\n-                }\n+            this.expect(&token::OpenDelim(Delimiter::Bracket))?;\n+            let item = this.parse_attr_item(false)?;\n+            this.expect(&token::CloseDelim(Delimiter::Bracket))?;\n+            let attr_sp = lo.to(this.prev_token.span);\n \n-                Ok(attr::mk_attr_from_item(\n-                    &self.sess.attr_id_generator,\n-                    item,\n-                    None,\n-                    style,\n-                    attr_sp,\n-                ))\n-            } else {\n-                let token_str = pprust::token_to_string(&this.token);\n-                let msg = &format!(\"expected `#`, found `{token_str}`\");\n-                Err(this.struct_span_err(this.token.span, msg))\n+            // Emit error if inner attribute is encountered and forbidden.\n+            if style == ast::AttrStyle::Inner {\n+                this.error_on_forbidden_inner_attr(attr_sp, inner_parse_policy);\n             }\n+\n+            Ok(attr::mk_attr_from_item(&self.sess.attr_id_generator, item, None, style, attr_sp))\n         })\n     }\n "}]}