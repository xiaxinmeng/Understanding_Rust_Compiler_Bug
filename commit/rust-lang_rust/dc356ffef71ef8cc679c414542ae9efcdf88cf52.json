{"sha": "dc356ffef71ef8cc679c414542ae9efcdf88cf52", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMzU2ZmZlZjcxZWY4Y2M2NzljNDE0NTQyYWU5ZWZjZGY4OGNmNTI=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2017-11-14T13:42:48Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-12-27T03:33:21Z"}, "message": "Add rudimentary timing of parsing and formatting phases", "tree": {"sha": "624037c053df89323911946f9a821891f38be82d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/624037c053df89323911946f9a821891f38be82d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc356ffef71ef8cc679c414542ae9efcdf88cf52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc356ffef71ef8cc679c414542ae9efcdf88cf52", "html_url": "https://github.com/rust-lang/rust/commit/dc356ffef71ef8cc679c414542ae9efcdf88cf52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc356ffef71ef8cc679c414542ae9efcdf88cf52/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9feb4988f2e9a0424030dc2a8dd762738c9fbf49", "url": "https://api.github.com/repos/rust-lang/rust/commits/9feb4988f2e9a0424030dc2a8dd762738c9fbf49", "html_url": "https://github.com/rust-lang/rust/commit/9feb4988f2e9a0424030dc2a8dd762738c9fbf49"}], "stats": {"total": 154, "additions": 134, "deletions": 20}, "files": [{"sha": "b1c986eba834be10967022d4e485beded0c2d5cb", "filename": "Cargo.lock", "status": "modified", "additions": 49, "deletions": 18, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/dc356ffef71ef8cc679c414542ae9efcdf88cf52/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/dc356ffef71ef8cc679c414542ae9efcdf88cf52/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=dc356ffef71ef8cc679c414542ae9efcdf88cf52", "patch": "@@ -36,8 +36,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -84,7 +84,7 @@ name = \"env_logger\"\n version = \"0.4.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -127,8 +127,19 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"log\"\n-version = \"0.3.8\"\n+version = \"0.3.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"log 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"log\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cfg-if 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n \n [[package]]\n name = \"memchr\"\n@@ -148,6 +159,11 @@ name = \"quote\"\n version = \"0.3.15\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"redox_syscall\"\n+version = \"0.1.32\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"regex\"\n version = \"0.2.3\"\n@@ -181,12 +197,13 @@ dependencies = [\n  \"getopts 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"time 0.1.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-segmentation 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -198,7 +215,7 @@ version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -208,22 +225,22 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.24\"\n+version = \"1.0.25\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.24\"\n+version = \"1.0.25\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde_derive_internals 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_derive_internals 0.18.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"serde_derive_internals\"\n-version = \"0.18.0\"\n+version = \"0.18.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -238,7 +255,7 @@ dependencies = [\n  \"dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itoa 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -277,12 +294,23 @@ dependencies = [\n  \"unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"time\"\n+version = \"0.1.38\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.34 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_syscall 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"toml\"\n version = \"0.4.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"serde 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -341,23 +369,26 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n \"checksum lazy_static 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8f31047daa365f19be14b47c29df4f7c3b581832407daabe6ae77397619237d\"\n \"checksum libc 0.2.34 (registry+https://github.com/rust-lang/crates.io-index)\" = \"36fbc8a8929c632868295d0178dd8f63fc423fd7537ad0738372bd010b3ac9b0\"\n-\"checksum log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"880f77541efa6e5cc74e76910c9884d9859683118839d6a1dc3b11e63512565b\"\n+\"checksum log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e19e8d5c34a3e0e2223db8e060f9e8264aeeb5c5fc64a4ee9965c062211c024b\"\n+\"checksum log 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3a89a0c46ba789b8a247d4c567aed4d7c68e624672d238b45cc3ec20dc9f940\"\n \"checksum memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"796fba70e76612589ed2ce7f45282f5af869e0fdd7cc6199fa1aa1f1d591ba9d\"\n \"checksum num-traits 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cacfcab5eb48250ee7d0c7896b51a2c5eec99c1feea5f32025635f5ae4b00070\"\n \"checksum quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e920b65c65f10b2ae65c831a81a073a89edd28c7cce89475bff467ab4167a\"\n+\"checksum redox_syscall 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab105df655884ede59d45b7070c8a65002d921461ee813a024558ca16030eea0\"\n \"checksum regex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac6ab4e9218ade5b423358bbd2567d1617418403c7a512603630181813316322\"\n \"checksum regex-syntax 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad890a5eef7953f55427c50575c680c42841653abd2b028b68cd223d157f62db\"\n \"checksum rustc-demangle 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aee45432acc62f7b9a108cc054142dac51f979e69e71ddce7d6fc7adf29e817e\"\n \"checksum semver 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bee2bc909ab2d8d60dab26e8cad85b25d795b14603a0dcb627b78b9d30b6454b\"\n \"checksum semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n-\"checksum serde 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1c57ab4ec5fa85d08aaf8ed9245899d9bbdd66768945b21113b84d5f595cb6a1\"\n-\"checksum serde_derive 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"02c92ea07b6e49b959c1481804ebc9bfd92d3c459f1274c9a9546829e42a66ce\"\n-\"checksum serde_derive_internals 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"75c6aac7b99801a16db5b40b7bf0d7e4ba16e76fbf231e32a4677f271cac0603\"\n+\"checksum serde 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\" = \"386122ba68c214599c44587e0c0b411e8d90894503a95425b4f9508e4317901f\"\n+\"checksum serde_derive 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ec0bfa6c5784e7d110514448da0e1dbad41ea5514c3e68be755b23858b83a399\"\n+\"checksum serde_derive_internals 0.18.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"730fe9f29fe8db69a601837f416e46cba07792031ed6b27557a43e49d62d89ae\"\n \"checksum serde_json 1.0.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7cf5b0b5b4bd22eeecb7e01ac2e1225c7ef5e4272b79ee28a8392a8c8489c839\"\n \"checksum syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d3b891b9015c88c576343b9b3e41c2c11a51c219ef067b264bd9c8aa9b441dad\"\n \"checksum synom 0.11.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a393066ed9010ebaed60b9eafa373d4b1baac186dd7e008555b0f702b51945b6\"\n \"checksum term 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fa63644f74ce96fbeb9b794f66aff2a52d601cbd5e80f4b97123e3899f4570f1\"\n \"checksum thread_local 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"279ef31c19ededf577bfd12dfae728040a21f635b06a24cd670ff510edd38963\"\n+\"checksum time 0.1.38 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d5d788d3aa77bc0ef3e9621256885555368b47bd495c13dd2e7413c89f845520\"\n \"checksum toml 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a7540f4ffc193e0d3c94121edb19b055670d369f77d5804db11ae053a45b6e7e\"\n \"checksum unicode-segmentation 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a8083c594e02b8ae1654ae26f0ade5158b119bd88ad0e8227a5d8fcd72407946\"\n \"checksum unicode-xid 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c1f860d7d29cf02cb2f3f359fd35991af3d30bac52c57d265a3c461074cb4dc\""}, {"sha": "5fd98c005e38356ea67d5b8b7f9ad319263dc6ee", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc356ffef71ef8cc679c414542ae9efcdf88cf52/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dc356ffef71ef8cc679c414542ae9efcdf88cf52/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=dc356ffef71ef8cc679c414542ae9efcdf88cf52", "patch": "@@ -44,6 +44,7 @@ env_logger = \"0.4\"\n getopts = \"0.2\"\n derive-new = \"0.5\"\n cargo_metadata = \"0.4\"\n+time = \"0.1\"\n \n [target.'cfg(unix)'.dependencies]\n libc = \"0.2.11\""}, {"sha": "c371d81efad38e4bb33b6fecf5451d7216b508ea", "filename": "src/lib.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/dc356ffef71ef8cc679c414542ae9efcdf88cf52/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc356ffef71ef8cc679c414542ae9efcdf88cf52/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=dc356ffef71ef8cc679c414542ae9efcdf88cf52", "patch": "@@ -23,6 +23,7 @@ extern crate serde_derive;\n extern crate serde_json;\n extern crate syntax;\n extern crate term;\n+extern crate time;\n extern crate unicode_segmentation;\n \n use std::collections::HashMap;\n@@ -616,6 +617,8 @@ pub fn format_input<T: Write>(\n         }\n     };\n \n+    summary.mark_parse_time();\n+\n     if parse_session.span_diagnostic.has_errors() {\n         summary.add_parsing_error();\n     }\n@@ -630,7 +633,7 @@ pub fn format_input<T: Write>(\n \n     let mut report = FormatReport::new();\n \n-    match format_ast(\n+    let format_result = format_ast(\n         &krate,\n         &mut parse_session,\n         &main_file,\n@@ -647,7 +650,19 @@ pub fn format_input<T: Write>(\n             }\n             Ok(false)\n         },\n-    ) {\n+    );\n+\n+    summary.mark_format_time();\n+\n+    if config.verbose() {\n+        println!(\n+            \"Spent {} in the parsing phase, and {} in the formatting phase\",\n+            summary.get_parse_time().unwrap(),\n+            summary.get_format_time().unwrap(),\n+        );\n+    }\n+\n+    match format_result {\n         Ok((file_map, has_diff)) => {\n             if report.has_warnings() {\n                 summary.add_formatting_error();"}, {"sha": "33260d8c91ec2c1a001ef25aa63594f12626544d", "filename": "src/summary.rs", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/dc356ffef71ef8cc679c414542ae9efcdf88cf52/src%2Fsummary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc356ffef71ef8cc679c414542ae9efcdf88cf52/src%2Fsummary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsummary.rs?ref=dc356ffef71ef8cc679c414542ae9efcdf88cf52", "patch": "@@ -1,3 +1,6 @@\n+use time::{precise_time_ns, Duration};\n+use std::default::Default;\n+\n #[must_use]\n #[derive(Debug, Default, Clone, Copy)]\n pub struct Summary {\n@@ -12,9 +15,42 @@ pub struct Summary {\n \n     // Formatted code differs from existing code (write-mode diff only).\n     pub has_diff: bool,\n+\n+    // Keeps track of time spent in parsing and formatting steps.\n+    timer: Timer,\n }\n \n impl Summary {\n+    pub fn mark_parse_time(&mut self) {\n+        self.timer = self.timer.done_parsing();\n+    }\n+\n+    pub fn mark_format_time(&mut self) {\n+        self.timer = self.timer.done_formatting();\n+    }\n+\n+    /// Returns the time it took to parse the source files in nanoseconds.\n+    pub fn get_parse_time(&self) -> Option<Duration> {\n+        match self.timer {\n+            Timer::DoneParsing(init, parse_time) | Timer::DoneFormatting(init, parse_time, _) => {\n+                // This should never underflow since `precise_time_ns()` guarantees monotonicity.\n+                Some(Duration::nanoseconds((parse_time - init) as i64))\n+            }\n+            Timer::Initialized(..) => None,\n+        }\n+    }\n+\n+    /// Returns the time it took to go from the parsed AST to the formatted output. Parsing time is\n+    /// not included.\n+    pub fn get_format_time(&self) -> Option<Duration> {\n+        match self.timer {\n+            Timer::DoneFormatting(_init, parse_time, format_time) => {\n+                Some(Duration::nanoseconds((format_time - parse_time) as i64))\n+            }\n+            Timer::DoneParsing(..) | Timer::Initialized(..) => None,\n+        }\n+    }\n+\n     pub fn has_operational_errors(&self) -> bool {\n         self.has_operational_errors\n     }\n@@ -65,3 +101,34 @@ impl Summary {\n         println!(\"{}\", exit_codes);\n     }\n }\n+\n+#[derive(Clone, Copy, Debug)]\n+enum Timer {\n+    Initialized(u64),\n+    DoneParsing(u64, u64),\n+    DoneFormatting(u64, u64, u64),\n+}\n+\n+impl Default for Timer {\n+    fn default() -> Self {\n+        Timer::Initialized(precise_time_ns())\n+    }\n+}\n+\n+impl Timer {\n+    fn done_parsing(self) -> Self {\n+        match self {\n+            Timer::Initialized(init_time) => Timer::DoneParsing(init_time, precise_time_ns()),\n+            _ => panic!(\"Timer can only transition to DoneParsing from Initialized state\"),\n+        }\n+    }\n+\n+    fn done_formatting(self) -> Self {\n+        match self {\n+            Timer::DoneParsing(init_time, parse_time) => {\n+                Timer::DoneFormatting(init_time, parse_time, precise_time_ns())\n+            }\n+            _ => panic!(\"Timer can only transition to DoneFormatting from DoneParsing state\"),\n+        }\n+    }\n+}"}]}