{"sha": "51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMjY4ZDI3MzVlZDU5YjRmNmI2MzUxZmQ3NWVkZDBmNGNmMTljOWY=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-11-24T19:50:24Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-11-24T19:50:24Z"}, "message": "Check for LLVM 11+ when using `-Z instrument-coverage`\n\n* `rustc` should now compile under LLVM 9 or 10\n* Compiler generates an error if `-Z instrument-coverage` is specified\n  but LLVM version is less than 11\n* Coverage tests that require `-Z instrument-coverage` and run codegen\n  should be skipped if LLVM version is less than 11", "tree": {"sha": "500074e708757effa726f9ac33514548c29dad0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/500074e708757effa726f9ac33514548c29dad0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "html_url": "https://github.com/rust-lang/rust/commit/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d5dc4c9d86499854a50a54a8dab73c180f7cbbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5dc4c9d86499854a50a54a8dab73c180f7cbbc", "html_url": "https://github.com/rust-lang/rust/commit/5d5dc4c9d86499854a50a54a8dab73c180f7cbbc"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "d3de960fbec84154fc9de778fbcac9e91c6aa424", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mapgen.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs?ref=51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "patch": "@@ -39,7 +39,7 @@ pub fn finalize<'ll, 'tcx>(cx: &CodegenCx<'ll, 'tcx>) {\n \n     // Encode coverage mappings and generate function records\n     let mut function_data = Vec::new();\n-    for (instance, function_coverage) in function_coverage_map.into_iter() {\n+    for (instance, function_coverage) in function_coverage_map {\n         debug!(\"Generate coverage map for: {:?}\", instance);\n \n         let mangled_function_name = cx.tcx.symbol_name(instance).to_string();\n@@ -172,7 +172,7 @@ impl CoverageMapGenerator {\n         // as of `llvm::coverage::CovMapVersion::Version4`.\n         let zero_was_n_records_val = cx.const_u32(0);\n         let filenames_size_val = cx.const_u32(filenames_size as u32);\n-        let zero_was_coverage_size_val = cx.const_u32(0 as u32);\n+        let zero_was_coverage_size_val = cx.const_u32(0);\n         let version_val = cx.const_u32(coverageinfo::mapping_version());\n         let cov_data_header_val = cx.const_struct(\n             &[zero_was_n_records_val, filenames_size_val, zero_was_coverage_size_val, version_val],"}, {"sha": "2b76cd5849d3e5abf36f4dd5f52d6b19d643a5f4", "filename": "compiler/rustc_llvm/llvm-wrapper/CoverageMappingWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp?ref=51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "patch": "@@ -71,7 +71,11 @@ extern \"C\" void LLVMRustCoverageWriteMapSectionNameToString(LLVMModuleRef M,\n \n extern \"C\" void LLVMRustCoverageWriteFuncSectionNameToString(LLVMModuleRef M,\n                                                              RustStringRef Str) {\n+#if LLVM_VERSION_GE(11, 0)\n   WriteSectionNameToString(M, IPSK_covfun, Str);\n+#else\n+  report_fatal_error(\"rustc option `-Z instrument-coverage` requires LLVM 11 or higher.\");\n+#endif\n }\n \n extern \"C\" void LLVMRustCoverageWriteMappingVarNameToString(RustStringRef Str) {\n@@ -81,5 +85,9 @@ extern \"C\" void LLVMRustCoverageWriteMappingVarNameToString(RustStringRef Str) {\n }\n \n extern \"C\" uint32_t LLVMRustCoverageMappingVersion() {\n+#if LLVM_VERSION_GE(11, 0)\n   return coverage::CovMapVersion::Version4;\n+#else\n+  report_fatal_error(\"rustc option `-Z instrument-coverage` requires LLVM 11 or higher.\");\n+#endif\n }"}, {"sha": "2b803b95053aead8ad744c37e3bdb158725d273c", "filename": "src/test/run-make-fulldeps/coverage-llvmir-base/Makefile", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2FMakefile?ref=51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "patch": "@@ -56,7 +56,14 @@ else\n \t\t-DINSTR_PROF_ORDERFILE='$(DATA_SECTION_PREFIX)__llvm_orderfile'\n endif\n \n+ifeq ($(LLVM_VERSION_11_PLUS),false)\n+all: test_llvm_ir\n+else\n+$(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n all:\n+endif\n+\n+test_llvm_ir:\n \t# Compile the test program with non-experimental coverage instrumentation, and generate LLVM IR\n \t#\n \t# Note: `-Clink-dead-code=no` disables the option, needed because the option is automatically\n@@ -68,4 +75,5 @@ all:\n \t\t\t-Clink-dead-code=$(LINK_DEAD_CODE) \\\n \t\t\t--emit=llvm-ir\n \n-\tcat \"$(TMPDIR)\"/testprog.ll | \"$(LLVM_FILECHECK)\" $(BASEDIR)/filecheck.testprog.txt $(LLVM_FILECHECK_OPTIONS)\n+\tcat \"$(TMPDIR)\"/testprog.ll | \\\n+\t\t\t\"$(LLVM_FILECHECK)\" $(BASEDIR)/filecheck.testprog.txt $(LLVM_FILECHECK_OPTIONS)"}, {"sha": "2dac8fc2225bf5010f86979c7950ea6b85b0c72b", "filename": "src/test/run-make-fulldeps/coverage-reports-base/Makefile", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile?ref=51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "patch": "@@ -18,7 +18,10 @@ SOURCEDIR=../coverage\n # `llvm/release_debuginfo`. Note that some CI builds disable debug assertions (by setting\n # `NO_LLVM_ASSERTIONS=1`), so it is not OK to fail the test, but `bless`ed test results cannot be\n # generated without debug assertions.\n-LLVM_COV_DEBUG := $(shell \"$(LLVM_BIN_DIR)\"/llvm-cov show --debug 2>&1 | grep -q \"Unknown command line argument '--debug'\"; echo $$?)\n+LLVM_COV_DEBUG := $(shell \\\n+\t\t\"$(LLVM_BIN_DIR)\"/llvm-cov show --debug 2>&1 | \\\n+\t\tgrep -q \"Unknown command line argument '--debug'\"; \\\n+\t\techo $$?)\n ifeq ($(LLVM_COV_DEBUG), 1)\n DEBUG_FLAG=--debug\n endif\n@@ -30,7 +33,12 @@ ifdef RUSTC_BLESS_TEST\n DEBUG_FLAG=--debug\n endif\n \n+ifeq ($(LLVM_VERSION_11_PLUS),true)\n all: $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n+else\n+$(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n+all:\n+endif\n \n # Ensure there are no `expected` results for tests that may have been removed or renamed\n .PHONY: clear_expected_if_blessed"}, {"sha": "9f9440340e0eddfd7f4aee505f8e3caf31d74c8e", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/Makefile", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile?ref=51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "patch": "@@ -24,7 +24,12 @@ For revisions in Pull Requests (PR):\n endef\n export SPANVIEW_HEADER\n \n+ifeq ($(LLVM_VERSION_11_PLUS),true)\n all: $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n+else\n+$(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)\n+all:\n+endif\n \n # Ensure there are no `expected` results for tests that may have been removed or renamed\n .PHONY: clear_expected_if_blessed"}, {"sha": "99a2e0ba9523e874c658326865df9505bfacf73d", "filename": "src/test/run-make-fulldeps/coverage/coverage_tools.mk", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk?ref=51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "patch": "@@ -38,6 +38,13 @@ endif\n \n UNAME = $(shell uname)\n \n+# Rust option `-Z instrument-coverage` uses LLVM Coverage Mapping Format version 4,\n+# which requires LLVM 11 or greater.\n+LLVM_VERSION_11_PLUS := $(shell \\\n+\t\tLLVM_VERSION=$$(\"$(LLVM_BIN_DIR)\"/llvm-config --version) && \\\n+\t\tLLVM_VERSION_MAJOR=$${LLVM_VERSION/.*/} && \\\n+\t\t[ $$LLVM_VERSION_MAJOR -ge 11 ] && echo true || echo false)\n+\n # FIXME(richkadel): Can any of the features tested by `run-make-fulldeps/coverage-*` tests be tested\n # just as completely by more focused unit tests of the code logic itself, to reduce the number of\n # test result files generated and maintained, and to help identify specific test failures and root"}]}