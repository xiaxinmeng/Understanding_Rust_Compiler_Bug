{"sha": "432ce39c8bb5520cdaea7a633c86eb11036a5985", "node_id": "C_kwDOAAsO6NoAKDQzMmNlMzljOGJiNTUyMGNkYWVhN2E2MzNjODZlYjExMDM2YTU5ODU", "commit": {"author": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-06-05T07:17:49Z"}, "committer": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-06-09T12:05:46Z"}, "message": "Suggest using `ptr::null_mut` when user supplied `ptr::null` to a function expecting `ptr::null_mut`", "tree": {"sha": "35a14a0319c6c6100ff0b15bd4806d232794ad88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35a14a0319c6c6100ff0b15bd4806d232794ad88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/432ce39c8bb5520cdaea7a633c86eb11036a5985", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEze4qXcfh0ileWqZTxf1dMgFP20cFAmSDFZwACgkQxf1dMgFP\n20efwA//RaKxeq9wqBTJzcbHsMQBmd+/dgBp+d4yts4WDKg60MLIT9JSd98c40+2\nNTKpIbj858ATX8iFRi2OEZ77tUKNDvWcBCO7Ri0en9Qz/iI0a6ajG5oAGAOH6Vas\nbl5Z3FK1Dsq0sBJ5N4KymWIv/qTuRGp70qdUp5OgJGvD8i956ths6GEKyK/RrQFK\nNOl/Ef2tw090fPc/Y/sbye1Kqyw40hi8Pg4ewTtEcuhw5uTrrWqEvDm4cS4D/z65\nM0Jk5z4qeR7qA5lscOgXo39xzgP0wL5+Kald+qq1cYtgAEcDOrjMzpXo185+BsAM\n9XLMnhoU8TFYvsq5IAh4EvIzXaQD6fOx6w/Bb/djwuvEaoX34lsomugHEVHoyeuW\nbjAnmSDz0KFLpxQcS9ee7o4hcZDTPqXBOMr4I94cJRZhAfTJ6qq+4kblE8nLzHTx\nRf8uHSGzVotVm9i24K5IPV8J1d2IZx9JTgd45NKI3xdsmLvGT8Zz4cI14wsTeHGA\njwjbzy28wav414MC/8Cg8KV+oN+YPV/mi5Is+nVJVE63Ef3fft9iCthKf6a01wa7\nYDLHph/myFtnDg4fTqZpg9yI4enTr8CUOv69lAA9/AHFgfGhAk7ACJZgYyk7srVC\nRz+9EcpBlJ+6WhlBp+6QwgcxKVxfJwyUgt8Yc7nS0bD5x9X/eUg=\n=JtXW\n-----END PGP SIGNATURE-----", "payload": "tree 35a14a0319c6c6100ff0b15bd4806d232794ad88\nparent 8b35c0bb0f833c0077dc57006eb317edde2a2d1e\nauthor \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1685949469 +0800\ncommitter \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1686312346 +0800\n\nSuggest using `ptr::null_mut` when user supplied `ptr::null` to a function expecting `ptr::null_mut`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/432ce39c8bb5520cdaea7a633c86eb11036a5985", "html_url": "https://github.com/rust-lang/rust/commit/432ce39c8bb5520cdaea7a633c86eb11036a5985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/432ce39c8bb5520cdaea7a633c86eb11036a5985/comments", "author": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b35c0bb0f833c0077dc57006eb317edde2a2d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b35c0bb0f833c0077dc57006eb317edde2a2d1e", "html_url": "https://github.com/rust-lang/rust/commit/8b35c0bb0f833c0077dc57006eb317edde2a2d1e"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "13ad524a32f41fc7070e20d7faf230c772fb6bdd", "filename": "compiler/rustc_hir_typeck/messages.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/432ce39c8bb5520cdaea7a633c86eb11036a5985/compiler%2Frustc_hir_typeck%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/432ce39c8bb5520cdaea7a633c86eb11036a5985/compiler%2Frustc_hir_typeck%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fmessages.ftl?ref=432ce39c8bb5520cdaea7a633c86eb11036a5985", "patch": "@@ -87,6 +87,8 @@ hir_typeck_suggest_boxing_note = for more on the distinction between the stack a\n \n hir_typeck_suggest_boxing_when_appropriate = store this in the heap by calling `Box::new`\n \n+hir_typeck_suggest_ptr_null_mut = consider using `core::ptr::null_mut` instead\n+\n hir_typeck_union_pat_dotdot = `..` cannot be used in union patterns\n \n hir_typeck_union_pat_multiple_fields = union patterns should have exactly one field"}, {"sha": "92fed230a08beeae17f0875f2d45114d2476f896", "filename": "compiler/rustc_hir_typeck/src/errors.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/432ce39c8bb5520cdaea7a633c86eb11036a5985/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/432ce39c8bb5520cdaea7a633c86eb11036a5985/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs?ref=432ce39c8bb5520cdaea7a633c86eb11036a5985", "patch": "@@ -298,6 +298,17 @@ pub enum SuggestBoxing {\n     },\n }\n \n+#[derive(Subdiagnostic)]\n+#[suggestion(\n+    hir_typeck_suggest_ptr_null_mut,\n+    applicability = \"maybe-incorrect\",\n+    code = \"core::ptr::null_mut()\"\n+)]\n+pub struct SuggestPtrNullMut {\n+    #[primary_span]\n+    pub span: Span,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(hir_typeck_no_associated_item, code = \"E0599\")]\n pub struct NoAssociatedItem {"}, {"sha": "b7ddfcf006d5adf61ec8bebd305a537a37adae60", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/432ce39c8bb5520cdaea7a633c86eb11036a5985/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/432ce39c8bb5520cdaea7a633c86eb11036a5985/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs?ref=432ce39c8bb5520cdaea7a633c86eb11036a5985", "patch": "@@ -1,4 +1,5 @@\n use crate::coercion::CoerceMany;\n+use crate::errors::SuggestPtrNullMut;\n use crate::fn_ctxt::arg_matrix::{ArgMatrix, Compatibility, Error, ExpectedIdx, ProvidedIdx};\n use crate::gather_locals::Declaration;\n use crate::method::MethodCallee;\n@@ -814,6 +815,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 );\n             }\n \n+            self.suggest_ptr_null_mut(\n+                expected_ty,\n+                provided_ty,\n+                provided_args[*provided_idx],\n+                &mut err,\n+            );\n+\n             // Call out where the function is defined\n             self.label_fn_like(\n                 &mut err,\n@@ -1271,6 +1279,28 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         err.emit();\n     }\n \n+    fn suggest_ptr_null_mut(\n+        &self,\n+        expected_ty: Ty<'tcx>,\n+        provided_ty: Ty<'tcx>,\n+        arg: &hir::Expr<'tcx>,\n+        err: &mut rustc_errors::DiagnosticBuilder<'tcx, ErrorGuaranteed>,\n+    ) {\n+        if let ty::RawPtr(ty::TypeAndMut { mutbl: hir::Mutability::Mut, .. }) = expected_ty.kind()\n+            && let ty::RawPtr(ty::TypeAndMut { mutbl: hir::Mutability::Not, .. }) = provided_ty.kind()\n+            && let hir::ExprKind::Call(callee, _) = arg.kind\n+            && let hir::ExprKind::Path(hir::QPath::Resolved(_, path)) = callee.kind\n+            && let Res::Def(_, def_id) = path.res\n+            && self.tcx.get_diagnostic_item(sym::ptr_null) == Some(def_id)\n+        {\n+            // The user provided `ptr::null()`, but the function expects\n+            // `ptr::null_mut()`.\n+            err.subdiagnostic(SuggestPtrNullMut {\n+                span: arg.span\n+            });\n+        }\n+    }\n+\n     // AST fragment checking\n     pub(in super::super) fn check_lit(\n         &self,"}, {"sha": "d00536b29cff8fdb1348ca4649cf09f7ac528cdb", "filename": "tests/ui/typeck/ptr-null-mutability-suggestions.fixed", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/432ce39c8bb5520cdaea7a633c86eb11036a5985/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/432ce39c8bb5520cdaea7a633c86eb11036a5985/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.fixed?ref=432ce39c8bb5520cdaea7a633c86eb11036a5985", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+\n+#[allow(unused_imports)]\n+use std::ptr;\n+\n+fn expecting_null_mut(_: *mut u8) {}\n+\n+fn main() {\n+    expecting_null_mut(core::ptr::null_mut());\n+    //~^ ERROR mismatched types\n+}"}, {"sha": "ea3066d2289f5fbaab980b5b427340aec226cecd", "filename": "tests/ui/typeck/ptr-null-mutability-suggestions.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/432ce39c8bb5520cdaea7a633c86eb11036a5985/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/432ce39c8bb5520cdaea7a633c86eb11036a5985/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.rs?ref=432ce39c8bb5520cdaea7a633c86eb11036a5985", "patch": "@@ -0,0 +1,11 @@\n+// run-rustfix\n+\n+#[allow(unused_imports)]\n+use std::ptr;\n+\n+fn expecting_null_mut(_: *mut u8) {}\n+\n+fn main() {\n+    expecting_null_mut(ptr::null());\n+    //~^ ERROR mismatched types\n+}"}, {"sha": "705b029bdeab593569c9651b0a8e277465223a34", "filename": "tests/ui/typeck/ptr-null-mutability-suggestions.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/432ce39c8bb5520cdaea7a633c86eb11036a5985/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/432ce39c8bb5520cdaea7a633c86eb11036a5985/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fptr-null-mutability-suggestions.stderr?ref=432ce39c8bb5520cdaea7a633c86eb11036a5985", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/ptr-null-mutability-suggestions.rs:9:24\n+   |\n+LL |     expecting_null_mut(ptr::null());\n+   |     ------------------ ^^^^^^^^^^^\n+   |     |                  |\n+   |     |                  types differ in mutability\n+   |     |                  help: consider using `core::ptr::null_mut` instead: `core::ptr::null_mut()`\n+   |     arguments to this function are incorrect\n+   |\n+   = note: expected raw pointer `*mut u8`\n+              found raw pointer `*const _`\n+note: function defined here\n+  --> $DIR/ptr-null-mutability-suggestions.rs:6:4\n+   |\n+LL | fn expecting_null_mut(_: *mut u8) {}\n+   |    ^^^^^^^^^^^^^^^^^^ ----------\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}