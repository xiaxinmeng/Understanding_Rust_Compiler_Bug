{"sha": "bbef9756ea5a0b30f737aa038ea8622159cff08a", "node_id": "C_kwDOAAsO6NoAKGJiZWY5NzU2ZWE1YTBiMzBmNzM3YWEwMzhlYTg2MjIxNTljZmYwOGE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-03T04:23:19Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-03T20:15:36Z"}, "message": "Fix spelling of an identifier.", "tree": {"sha": "20e50bfe6845f621a7532a240d890a9be2508c92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20e50bfe6845f621a7532a240d890a9be2508c92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbef9756ea5a0b30f737aa038ea8622159cff08a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbef9756ea5a0b30f737aa038ea8622159cff08a", "html_url": "https://github.com/rust-lang/rust/commit/bbef9756ea5a0b30f737aa038ea8622159cff08a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbef9756ea5a0b30f737aa038ea8622159cff08a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "637a93cb5d2ac75ce683d71bf83695907abc323a", "url": "https://api.github.com/repos/rust-lang/rust/commits/637a93cb5d2ac75ce683d71bf83695907abc323a", "html_url": "https://github.com/rust-lang/rust/commit/637a93cb5d2ac75ce683d71bf83695907abc323a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "fdd8dc93fc1a58a8c99b9d75a1b398c2584c08e8", "filename": "compiler/rustc_expand/src/mbe/transcribe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbef9756ea5a0b30f737aa038ea8622159cff08a/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbef9756ea5a0b30f737aa038ea8622159cff08a/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Ftranscribe.rs?ref=bbef9756ea5a0b30f737aa038ea8622159cff08a", "patch": "@@ -217,10 +217,10 @@ pub(super) fn transcribe<'a>(\n             }\n \n             // Replace the meta-var with the matched token tree from the invocation.\n-            mbe::TokenTree::MetaVar(mut sp, mut orignal_ident) => {\n+            mbe::TokenTree::MetaVar(mut sp, mut original_ident) => {\n                 // Find the matched nonterminal from the macro invocation, and use it to replace\n                 // the meta-var.\n-                let ident = MacroRulesNormalizedIdent::new(orignal_ident);\n+                let ident = MacroRulesNormalizedIdent::new(original_ident);\n                 if let Some(cur_matched) = lookup_cur_matched(ident, interp, &repeats) {\n                     match cur_matched {\n                         MatchedTokenTree(ref tt) => {\n@@ -249,9 +249,9 @@ pub(super) fn transcribe<'a>(\n                     // If we aren't able to match the meta-var, we push it back into the result but\n                     // with modified syntax context. (I believe this supports nested macros).\n                     marker.visit_span(&mut sp);\n-                    marker.visit_ident(&mut orignal_ident);\n+                    marker.visit_ident(&mut original_ident);\n                     result.push(TokenTree::token(token::Dollar, sp).into());\n-                    result.push(TokenTree::Token(Token::from_ast_ident(orignal_ident)).into());\n+                    result.push(TokenTree::Token(Token::from_ast_ident(original_ident)).into());\n                 }\n             }\n "}]}