{"sha": "067284b2917561f5bff1db4c521347d897dcaf3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NzI4NGIyOTE3NTYxZjViZmYxZGI0YzUyMTM0N2Q4OTdkY2FmM2I=", "commit": {"author": {"name": "Wang Xuerui", "email": "idontknw.wang@gmail.com", "date": "2016-05-16T08:59:27Z"}, "committer": {"name": "Wang Xuerui", "email": "idontknw.wang@gmail.com", "date": "2016-05-16T08:59:27Z"}, "message": "syntax_ext: format: nest_level's are no more\n\n`nest_level` is long dead since cac7a2053aba7be214d5e58e13867089638a8f50\n(PR #14831), so is `check_positional_ok()`. Let's bid them farewell.", "tree": {"sha": "edde5037b9431b8e21d48d5e7e76688323888f9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edde5037b9431b8e21d48d5e7e76688323888f9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/067284b2917561f5bff1db4c521347d897dcaf3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/067284b2917561f5bff1db4c521347d897dcaf3b", "html_url": "https://github.com/rust-lang/rust/commit/067284b2917561f5bff1db4c521347d897dcaf3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/067284b2917561f5bff1db4c521347d897dcaf3b/comments", "author": {"login": "xen0n", "id": 1175567, "node_id": "MDQ6VXNlcjExNzU1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1175567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xen0n", "html_url": "https://github.com/xen0n", "followers_url": "https://api.github.com/users/xen0n/followers", "following_url": "https://api.github.com/users/xen0n/following{/other_user}", "gists_url": "https://api.github.com/users/xen0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/xen0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xen0n/subscriptions", "organizations_url": "https://api.github.com/users/xen0n/orgs", "repos_url": "https://api.github.com/users/xen0n/repos", "events_url": "https://api.github.com/users/xen0n/events{/privacy}", "received_events_url": "https://api.github.com/users/xen0n/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xen0n", "id": 1175567, "node_id": "MDQ6VXNlcjExNzU1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1175567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xen0n", "html_url": "https://github.com/xen0n", "followers_url": "https://api.github.com/users/xen0n/followers", "following_url": "https://api.github.com/users/xen0n/following{/other_user}", "gists_url": "https://api.github.com/users/xen0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/xen0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xen0n/subscriptions", "organizations_url": "https://api.github.com/users/xen0n/orgs", "repos_url": "https://api.github.com/users/xen0n/repos", "events_url": "https://api.github.com/users/xen0n/events{/privacy}", "received_events_url": "https://api.github.com/users/xen0n/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22ac88f1a47a82195a49fbff3cf24a2c395d7a81", "url": "https://api.github.com/repos/rust-lang/rust/commits/22ac88f1a47a82195a49fbff3cf24a2c395d7a81", "html_url": "https://github.com/rust-lang/rust/commit/22ac88f1a47a82195a49fbff3cf24a2c395d7a81"}], "stats": {"total": 24, "additions": 4, "deletions": 20}, "files": [{"sha": "7d57614fd79820c8bd994b1c6872d2c90b06cea6", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/067284b2917561f5bff1db4c521347d897dcaf3b/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/067284b2917561f5bff1db4c521347d897dcaf3b/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=067284b2917561f5bff1db4c521347d897dcaf3b", "patch": "@@ -68,7 +68,6 @@ struct Context<'a, 'b:'a> {\n     name_positions: HashMap<String, usize>,\n \n     /// Updated as arguments are consumed or methods are entered\n-    nest_level: usize,\n     next_arg: usize,\n }\n \n@@ -164,9 +163,7 @@ impl<'a, 'b> Context<'a, 'b> {\n                 let pos = match arg.position {\n                     parse::ArgumentNext => {\n                         let i = self.next_arg;\n-                        if self.check_positional_ok() {\n-                            self.next_arg += 1;\n-                        }\n+                        self.next_arg += 1;\n                         Exact(i)\n                     }\n                     parse::ArgumentIs(i) => Exact(i),\n@@ -189,25 +186,13 @@ impl<'a, 'b> Context<'a, 'b> {\n                 self.verify_arg_type(Named(s.to_string()), Unsigned);\n             }\n             parse::CountIsNextParam => {\n-                if self.check_positional_ok() {\n-                    let next_arg = self.next_arg;\n-                    self.verify_arg_type(Exact(next_arg), Unsigned);\n-                    self.next_arg += 1;\n-                }\n+                let next_arg = self.next_arg;\n+                self.verify_arg_type(Exact(next_arg), Unsigned);\n+                self.next_arg += 1;\n             }\n         }\n     }\n \n-    fn check_positional_ok(&mut self) -> bool {\n-        if self.nest_level != 0 {\n-            self.ecx.span_err(self.fmtsp, \"cannot use implicit positional \\\n-                                           arguments nested inside methods\");\n-            false\n-        } else {\n-            true\n-        }\n-    }\n-\n     fn describe_num_args(&self) -> String {\n         match self.args.len() {\n             0 => \"no arguments given\".to_string(),\n@@ -655,7 +640,6 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt, sp: Span,\n         name_positions: HashMap::new(),\n         name_types: HashMap::new(),\n         name_ordering: name_ordering,\n-        nest_level: 0,\n         next_arg: 0,\n         literal: String::new(),\n         pieces: Vec::new(),"}]}