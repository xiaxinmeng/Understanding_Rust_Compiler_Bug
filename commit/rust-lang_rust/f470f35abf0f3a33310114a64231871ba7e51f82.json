{"sha": "f470f35abf0f3a33310114a64231871ba7e51f82", "node_id": "C_kwDOAAsO6NoAKGY0NzBmMzVhYmYwZjNhMzMzMTAxMTRhNjQyMzE4NzFiYTdlNTFmODI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-03T17:34:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-03T17:34:00Z"}, "message": "Merge #11609\n\n11609: Add another case to the syntax fixup code r=flodiebold a=flodiebold\n\n\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "18e38046bcb17c59458f42522620a84a4091265d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18e38046bcb17c59458f42522620a84a4091265d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f470f35abf0f3a33310114a64231871ba7e51f82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiIPwICRBK7hj4Ov3rIwAATlEIADImbjcTgqfVQNVXJ4Rt9jXW\nmgun3OT8yENptltadlaMYLSYe7jzltQPmmU1Q4JGjiUyTTN33ULv9vpUglZmCL4N\nb8LQ66YizZME6BidcxdJfE1Yi4+AunoGVoDxBXcMH4qnxfWjsOLD9D0rtjVQBwHa\n8Az0nmAZvQSvDNw4NtRsuYSQTnIUIUex9De3QrYlimMP4M51+1lEPezF7M+k9KsZ\n6NWEm1BypQ9P9DQN3h0XRGETGF7PamtvYGXS6yGpbWK2wL4tOIzq7Evbc6OV7S8R\nPyLsnd2nIhV2FJUTnRA8pMGgyiWGj7Dp8chnZFE/lJ6TU0HjCf0rGpsKXyS4wjQ=\n=CJ0g\n-----END PGP SIGNATURE-----\n", "payload": "tree 18e38046bcb17c59458f42522620a84a4091265d\nparent a55dd29e88c6f2aa37c39b790ab7036596e74686\nparent ac51eea3094561253a84a90a8af1683eb64d43f0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1646328840 +0000\ncommitter GitHub <noreply@github.com> 1646328840 +0000\n\nMerge #11609\n\n11609: Add another case to the syntax fixup code r=flodiebold a=flodiebold\n\n\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f470f35abf0f3a33310114a64231871ba7e51f82", "html_url": "https://github.com/rust-lang/rust/commit/f470f35abf0f3a33310114a64231871ba7e51f82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f470f35abf0f3a33310114a64231871ba7e51f82/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a55dd29e88c6f2aa37c39b790ab7036596e74686", "url": "https://api.github.com/repos/rust-lang/rust/commits/a55dd29e88c6f2aa37c39b790ab7036596e74686", "html_url": "https://github.com/rust-lang/rust/commit/a55dd29e88c6f2aa37c39b790ab7036596e74686"}, {"sha": "ac51eea3094561253a84a90a8af1683eb64d43f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac51eea3094561253a84a90a8af1683eb64d43f0", "html_url": "https://github.com/rust-lang/rust/commit/ac51eea3094561253a84a90a8af1683eb64d43f0"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "63ab5e9b4a0d2088ff5d648a870d05331cb98c51", "filename": "crates/hir_expand/src/fixup.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f470f35abf0f3a33310114a64231871ba7e51f82/crates%2Fhir_expand%2Fsrc%2Ffixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f470f35abf0f3a33310114a64231871ba7e51f82/crates%2Fhir_expand%2Fsrc%2Ffixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Ffixup.rs?ref=f470f35abf0f3a33310114a64231871ba7e51f82", "patch": "@@ -97,6 +97,18 @@ pub(crate) fn fixup_syntax(node: &SyntaxNode) -> SyntaxFixups {\n                         ]);\n                     }\n                 },\n+                ast::LetStmt(it) => {\n+                    if it.semicolon_token().is_none() {\n+                        append.insert(node.clone(), vec![\n+                            SyntheticToken {\n+                                kind: SyntaxKind::SEMICOLON,\n+                                text: \";\".into(),\n+                                range: end_range,\n+                                id: EMPTY_ID,\n+                            },\n+                        ]);\n+                    }\n+                },\n                 _ => (),\n             }\n         }\n@@ -229,6 +241,34 @@ fn foo () {a . __ra_fixup ; bar () ;}\n         )\n     }\n \n+    #[test]\n+    fn incomplete_let() {\n+        check(\n+            r#\"\n+fn foo() {\n+    let x = a\n+}\n+\"#,\n+            expect![[r#\"\n+fn foo () {let x = a ;}\n+\"#]],\n+        )\n+    }\n+\n+    #[test]\n+    fn incomplete_field_expr_in_let() {\n+        check(\n+            r#\"\n+fn foo() {\n+    let x = a.\n+}\n+\"#,\n+            expect![[r#\"\n+fn foo () {let x = a . __ra_fixup ;}\n+\"#]],\n+        )\n+    }\n+\n     #[test]\n     fn field_expr_before_call() {\n         // another case that easily happens while typing"}]}