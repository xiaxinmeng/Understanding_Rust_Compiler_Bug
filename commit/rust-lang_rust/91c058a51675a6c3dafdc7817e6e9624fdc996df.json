{"sha": "91c058a51675a6c3dafdc7817e6e9624fdc996df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYzA1OGE1MTY3NWE2YzNkYWZkYzc4MTdlNmU5NjI0ZmRjOTk2ZGY=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-05T05:34:34Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-05T05:34:34Z"}, "message": "Veto putting a chain with comment in a single line", "tree": {"sha": "a47401bf3c1e0566b5e00ba138a4466603e12cb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a47401bf3c1e0566b5e00ba138a4466603e12cb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91c058a51675a6c3dafdc7817e6e9624fdc996df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91c058a51675a6c3dafdc7817e6e9624fdc996df", "html_url": "https://github.com/rust-lang/rust/commit/91c058a51675a6c3dafdc7817e6e9624fdc996df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91c058a51675a6c3dafdc7817e6e9624fdc996df/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caefd218c9f6c43493c28c5cc4ea8828c494830e", "url": "https://api.github.com/repos/rust-lang/rust/commits/caefd218c9f6c43493c28c5cc4ea8828c494830e", "html_url": "https://github.com/rust-lang/rust/commit/caefd218c9f6c43493c28c5cc4ea8828c494830e"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "25c3a8bbdd7cb7e6b3825a48fa6f1b1c10dda11c", "filename": "src/chains.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/91c058a51675a6c3dafdc7817e6e9624fdc996df/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91c058a51675a6c3dafdc7817e6e9624fdc996df/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=91c058a51675a6c3dafdc7817e6e9624fdc996df", "patch": "@@ -209,6 +209,13 @@ impl ChainItem {\n         }\n     }\n \n+    fn is_comment(&self) -> bool {\n+        match self.kind {\n+            ChainItemKind::Comment => true,\n+            _ => false,\n+        }\n+    }\n+\n     fn rewrite_method_call(\n         method_name: ast::Ident,\n         types: &[ast::GenericArg],\n@@ -458,7 +465,9 @@ impl<'a> ChainFormatterShared<'a> {\n         }.saturating_sub(almost_total);\n \n         let all_in_one_line =\n-            self.rewrites.iter().all(|s| !s.contains('\\n')) && one_line_budget > 0;\n+            !self.children.iter().any(ChainItem::is_comment)\n+            && self.rewrites.iter().all(|s| !s.contains('\\n'))\n+            && one_line_budget > 0;\n         let last_shape = if all_in_one_line {\n             shape.sub_width(last.tries)?\n         } else if extendable {"}]}