{"sha": "197116d7ce7862b21eac6af498a2726d7a1bc3d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NzExNmQ3Y2U3ODYyYjIxZWFjNmFmNDk4YTI3MjZkN2ExYmMzZDY=", "commit": {"author": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-25T02:45:27Z"}, "committer": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-27T12:35:46Z"}, "message": "Removed list::any() in favor of iter().any()", "tree": {"sha": "1119d3904eb0554c0622eca639d21ec5fdbb935f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1119d3904eb0554c0622eca639d21ec5fdbb935f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/197116d7ce7862b21eac6af498a2726d7a1bc3d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/197116d7ce7862b21eac6af498a2726d7a1bc3d6", "html_url": "https://github.com/rust-lang/rust/commit/197116d7ce7862b21eac6af498a2726d7a1bc3d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/197116d7ce7862b21eac6af498a2726d7a1bc3d6/comments", "author": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68190706448b5a1ca09be690f360c08a7a4f831", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68190706448b5a1ca09be690f360c08a7a4f831", "html_url": "https://github.com/rust-lang/rust/commit/d68190706448b5a1ca09be690f360c08a7a4f831"}], "stats": {"total": 32, "additions": 7, "deletions": 25}, "files": [{"sha": "ddac516d8bbdf1faf895b36ec7958b105114f1cb", "filename": "src/libcollections/list.rs", "status": "modified", "additions": 7, "deletions": 25, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/197116d7ce7862b21eac6af498a2726d7a1bc3d6/src%2Flibcollections%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/197116d7ce7862b21eac6af498a2726d7a1bc3d6/src%2Flibcollections%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flist.rs?ref=197116d7ce7862b21eac6af498a2726d7a1bc3d6", "patch": "@@ -53,26 +53,6 @@ impl<T> List<T> {\n     }\n }\n \n-/**\n- * Returns true if a list contains an element that matches a given predicate\n- *\n- * Apply function `f` to each element of `list`, starting from the first.\n- * When function `f` returns true then it also returns true. If `f` matches no\n- * elements then false is returned.\n- */\n-pub fn any<T>(list: @List<T>, f: |&T| -> bool) -> bool {\n-    let mut list = list;\n-    loop {\n-        list = match *list {\n-            Cons(ref head, tail) => {\n-                if f(head) { return true; }\n-                tail\n-            }\n-            Nil => return false\n-        }\n-    };\n-}\n-\n /// Returns true if a list contains an element with the given value\n pub fn has<T:Eq>(list: @List<T>, element: T) -> bool {\n     let mut found = false;\n@@ -251,11 +231,13 @@ mod tests {\n \n     #[test]\n     fn test_any() {\n-        fn match_(i: &int) -> bool { return *i == 2; }\n-        let list = @List::from_vec([0, 1, 2]);\n-        let empty = @list::Nil::<int>;\n-        assert_eq!(list::any(list, match_), true);\n-        assert_eq!(list::any(empty, match_), false);\n+        fn match_(i: &int) -> bool { *i == 2 }\n+\n+        let empty = Nil::<int>;\n+        assert_eq!(empty.iter().any(match_), false);\n+\n+        let list = List::from_vec([0, 1, 2]);\n+        assert_eq!(list.iter().any(match_), true);\n     }\n \n     #[test]"}]}