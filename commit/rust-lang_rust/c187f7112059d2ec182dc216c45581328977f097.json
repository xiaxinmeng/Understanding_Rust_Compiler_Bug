{"sha": "c187f7112059d2ec182dc216c45581328977f097", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxODdmNzExMjA1OWQyZWMxODJkYzIxNmM0NTU4MTMyODk3N2YwOTc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-03T13:42:04Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-04T13:39:43Z"}, "message": "Fix subst error for consts in astconv", "tree": {"sha": "76358dca1937fd9a4e8bb172421219b75dbfbafe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76358dca1937fd9a4e8bb172421219b75dbfbafe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c187f7112059d2ec182dc216c45581328977f097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c187f7112059d2ec182dc216c45581328977f097", "html_url": "https://github.com/rust-lang/rust/commit/c187f7112059d2ec182dc216c45581328977f097", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c187f7112059d2ec182dc216c45581328977f097/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0439efbbee8eae0fff98640697adb00d0b0b9357", "url": "https://api.github.com/repos/rust-lang/rust/commits/0439efbbee8eae0fff98640697adb00d0b0b9357", "html_url": "https://github.com/rust-lang/rust/commit/0439efbbee8eae0fff98640697adb00d0b0b9357"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "16033c6c50fd0c91c143eac552b20aaeb20e5c5f", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c187f7112059d2ec182dc216c45581328977f097/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c187f7112059d2ec182dc216c45581328977f097/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=c187f7112059d2ec182dc216c45581328977f097", "patch": "@@ -553,7 +553,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n         tcx.intern_substs(&substs)\n     }\n \n-    /// Given the type/region arguments provided to some path (along with\n+    /// Given the type/lifetime/const arguments provided to some path (along with\n     /// an implicit `Self`, if this is a trait reference) returns the complete\n     /// set of substitutions. This may involve applying defaulted type parameters.\n     ///\n@@ -678,7 +678,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n                     GenericParamDefKind::Const => {\n                         // FIXME(const_generics:defaults)\n                         // We've already errored above about the mismatch.\n-                        tcx.types.err.into()\n+                        tcx.consts.err.into()\n                     }\n                 }\n             },"}]}