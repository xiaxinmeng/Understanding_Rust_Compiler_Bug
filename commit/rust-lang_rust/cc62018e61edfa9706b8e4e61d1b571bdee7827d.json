{"sha": "cc62018e61edfa9706b8e4e61d1b571bdee7827d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNjIwMThlNjFlZGZhOTcwNmI4ZTRlNjFkMWI1NzFiZGVlNzgyN2Q=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-30T04:16:16Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-02T00:29:15Z"}, "message": "Rename rustdoc lints to be a tool lint instead of built-in.\n\n- Rename `broken_intra_doc_links` to `rustdoc::broken_intra_doc_links`\n- Ensure that the old lint names still work and give deprecation errors\n- Register lints even when running doctests\n\n  Otherwise, all `rustdoc::` lints would be ignored.\n\n- Register all existing lints as removed\n\n  This unfortunately doesn't work with `register_renamed` because tool\n  lints have not yet been registered when rustc is running. For similar\n  reasons, `check_backwards_compat` doesn't work either. Call\n  `register_removed` directly instead.\n\n- Fix fallout\n\n  + Rustdoc lints for compiler/\n  + Rustdoc lints for library/\n\nNote that this does *not* suggest `rustdoc::broken_intra_doc_links` for\n`rustdoc::intra_doc_link_resolution_failure`, since there was no time\nwhen the latter was valid.", "tree": {"sha": "1ebbd81e12417c7e57f99d3bf7dbb96247bbab1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ebbd81e12417c7e57f99d3bf7dbb96247bbab1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc62018e61edfa9706b8e4e61d1b571bdee7827d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc62018e61edfa9706b8e4e61d1b571bdee7827d", "html_url": "https://github.com/rust-lang/rust/commit/cc62018e61edfa9706b8e4e61d1b571bdee7827d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc62018e61edfa9706b8e4e61d1b571bdee7827d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f20caa6258d4c74ce6b316fd347e3efe81cf557", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f20caa6258d4c74ce6b316fd347e3efe81cf557", "html_url": "https://github.com/rust-lang/rust/commit/4f20caa6258d4c74ce6b316fd347e3efe81cf557"}], "stats": {"total": 544, "additions": 301, "deletions": 243}, "files": [{"sha": "1e224dbf83390e61c67ee795d9a3fbea34574e8f", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -34,7 +34,7 @@ impl MarkedAttrs {\n }\n \n pub fn is_known_lint_tool(m_item: Ident) -> bool {\n-    [sym::clippy, sym::rustc].contains(&m_item.name)\n+    [sym::clippy, sym::rustc, sym::rustdoc].contains(&m_item.name)\n }\n \n impl NestedMetaItem {"}, {"sha": "14ddb3e20793a24a2db9eaf8829e23bab5aa563c", "filename": "compiler/rustc_error_codes/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_error_codes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_error_codes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Flib.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,5 @@\n-#![deny(invalid_codeblock_attributes)]\n+#![cfg_attr(bootstrap, deny(invalid_codeblock_attributes))]\n+#![cfg_attr(not(bootstrap), deny(rustdoc::invalid_codeblock_attributes))]\n //! This library is used to gather all error codes into one place,\n //! the goal being to make their maintenance easier.\n "}, {"sha": "7d5577cdca6639b8d13349a4df67a51c269337f8", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -89,6 +89,7 @@ impl SessionLintStore for LintStore {\n }\n \n /// The target of the `by_name` map, which accounts for renaming/deprecation.\n+#[derive(Debug)]\n enum TargetLint {\n     /// A direct lint target\n     Id(LintId),\n@@ -470,7 +471,10 @@ impl LintStore {\n             Some(&Id(ref id)) => {\n                 CheckLintNameResult::Tool(Err((Some(slice::from_ref(id)), complete_name)))\n             }\n-            _ => CheckLintNameResult::NoLint(None),\n+            Some(other) => {\n+                tracing::debug!(\"got renamed lint {:?}\", other);\n+                CheckLintNameResult::NoLint(None)\n+            }\n         }\n     }\n }"}, {"sha": "67c0e999f55183ce3faceebd912dfe26f1a527ed", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -69,9 +69,7 @@ use rustc_hir::def_id::LocalDefId;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::builtin::{\n-    BARE_TRAIT_OBJECTS, BROKEN_INTRA_DOC_LINKS, ELIDED_LIFETIMES_IN_PATHS,\n-    EXPLICIT_OUTLIVES_REQUIREMENTS, INVALID_CODEBLOCK_ATTRIBUTES, INVALID_HTML_TAGS,\n-    MISSING_DOC_CODE_EXAMPLES, NON_AUTOLINKS, PRIVATE_DOC_TESTS,\n+    BARE_TRAIT_OBJECTS, ELIDED_LIFETIMES_IN_PATHS, EXPLICIT_OUTLIVES_REQUIREMENTS,\n };\n use rustc_span::symbol::{Ident, Symbol};\n use rustc_span::Span;\n@@ -314,17 +312,6 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n                                        // MACRO_USE_EXTERN_CRATE\n     );\n \n-    add_lint_group!(\n-        \"rustdoc\",\n-        NON_AUTOLINKS,\n-        BROKEN_INTRA_DOC_LINKS,\n-        PRIVATE_INTRA_DOC_LINKS,\n-        INVALID_CODEBLOCK_ATTRIBUTES,\n-        MISSING_DOC_CODE_EXAMPLES,\n-        PRIVATE_DOC_TESTS,\n-        INVALID_HTML_TAGS\n-    );\n-\n     // Register renamed and removed lints.\n     store.register_renamed(\"single_use_lifetime\", \"single_use_lifetimes\");\n     store.register_renamed(\"elided_lifetime_in_path\", \"elided_lifetimes_in_paths\");\n@@ -334,8 +321,25 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n     store.register_renamed(\"async_idents\", \"keyword_idents\");\n     store.register_renamed(\"exceeding_bitshifts\", \"arithmetic_overflow\");\n     store.register_renamed(\"redundant_semicolon\", \"redundant_semicolons\");\n-    store.register_renamed(\"intra_doc_link_resolution_failure\", \"broken_intra_doc_links\");\n     store.register_renamed(\"overlapping_patterns\", \"overlapping_range_endpoints\");\n+\n+    // These were moved to tool lints, but rustc still sees them when compiling normally, before\n+    // tool lints are registered, so `check_tool_name_for_backwards_compat` doesn't work. Use\n+    // `register_renamed` explicitly.\n+    const RUSTDOC_LINTS: &[&str] = &[\n+        \"broken_intra_doc_links\",\n+        \"private_intra_doc_links\",\n+        \"missing_doc_code_examples\",\n+        \"private_doc_tests\",\n+        \"invalid_codeblock_attributes\",\n+        \"invalid_html_tags\",\n+        \"non_autolinks\",\n+    ];\n+    for rustdoc_lint in RUSTDOC_LINTS {\n+        // FIXME: maybe we could get `register_renamed` to work for tool lints?\n+        store.register_removed(rustdoc_lint, &format!(\"use `rustdoc::{}` instead\", rustdoc_lint));\n+    }\n+\n     store.register_removed(\"unknown_features\", \"replaced by an error\");\n     store.register_removed(\"unsigned_negation\", \"replaced by negate_unsigned feature gate\");\n     store.register_removed(\"negate_unsigned\", \"cast a signed value instead\");"}, {"sha": "53bb0fb28a65b5387b1c62c6dea5917f854050cf", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1875,39 +1875,6 @@ declare_lint! {\n     \"detects labels that are never used\"\n }\n \n-declare_lint! {\n-    /// The `broken_intra_doc_links` lint detects failures in resolving\n-    /// intra-doc link targets. This is a `rustdoc` only lint, see the\n-    /// documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#broken_intra_doc_links\n-    pub BROKEN_INTRA_DOC_LINKS,\n-    Warn,\n-    \"failures in resolving intra-doc link targets\"\n-}\n-\n-declare_lint! {\n-    /// This is a subset of `broken_intra_doc_links` that warns when linking from\n-    /// a public item to a private one. This is a `rustdoc` only lint, see the\n-    /// documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#private_intra_doc_links\n-    pub PRIVATE_INTRA_DOC_LINKS,\n-    Warn,\n-    \"linking from a public item to a private one\"\n-}\n-\n-declare_lint! {\n-    /// The `invalid_codeblock_attributes` lint detects code block attributes\n-    /// in documentation examples that have potentially mis-typed values. This\n-    /// is a `rustdoc` only lint, see the documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_codeblock_attributes\n-    pub INVALID_CODEBLOCK_ATTRIBUTES,\n-    Warn,\n-    \"codeblock attribute looks a lot like a known one\"\n-}\n-\n declare_lint! {\n     /// The `missing_crate_level_docs` lint detects if documentation is\n     /// missing at the crate root. This is a `rustdoc` only lint, see the\n@@ -1919,49 +1886,6 @@ declare_lint! {\n     \"detects crates with no crate-level documentation\"\n }\n \n-declare_lint! {\n-    /// The `missing_doc_code_examples` lint detects publicly-exported items\n-    /// without code samples in their documentation. This is a `rustdoc` only\n-    /// lint, see the documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#missing_doc_code_examples\n-    pub MISSING_DOC_CODE_EXAMPLES,\n-    Allow,\n-    \"detects publicly-exported items without code samples in their documentation\"\n-}\n-\n-declare_lint! {\n-    /// The `private_doc_tests` lint detects code samples in docs of private\n-    /// items not documented by `rustdoc`. This is a `rustdoc` only lint, see\n-    /// the documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#private_doc_tests\n-    pub PRIVATE_DOC_TESTS,\n-    Allow,\n-    \"detects code samples in docs of private items not documented by rustdoc\"\n-}\n-\n-declare_lint! {\n-    /// The `invalid_html_tags` lint detects invalid HTML tags. This is a\n-    /// `rustdoc` only lint, see the documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_html_tags\n-    pub INVALID_HTML_TAGS,\n-    Allow,\n-    \"detects invalid HTML tags in doc comments\"\n-}\n-\n-declare_lint! {\n-    /// The `non_autolinks` lint detects when a URL could be written using\n-    /// only angle brackets. This is a `rustdoc` only lint, see the\n-    /// documentation in the [rustdoc book].\n-    ///\n-    /// [rustdoc book]: ../../../rustdoc/lints.html#non_autolinks\n-    pub NON_AUTOLINKS,\n-    Warn,\n-    \"detects URLs that could be written using only angle brackets\"\n-}\n-\n declare_lint! {\n     /// The `where_clauses_object_safety` lint detects for [object safety] of\n     /// [where clauses].\n@@ -3020,14 +2944,7 @@ declare_lint_pass! {\n         ABSOLUTE_PATHS_NOT_STARTING_WITH_CRATE,\n         UNSTABLE_NAME_COLLISIONS,\n         IRREFUTABLE_LET_PATTERNS,\n-        BROKEN_INTRA_DOC_LINKS,\n-        PRIVATE_INTRA_DOC_LINKS,\n-        INVALID_CODEBLOCK_ATTRIBUTES,\n         MISSING_CRATE_LEVEL_DOCS,\n-        MISSING_DOC_CODE_EXAMPLES,\n-        INVALID_HTML_TAGS,\n-        PRIVATE_DOC_TESTS,\n-        NON_AUTOLINKS,\n         WHERE_CLAUSES_OBJECT_SAFETY,\n         PROC_MACRO_DERIVE_RESOLUTION_FALLBACK,\n         MACRO_USE_EXTERN_CRATE,"}, {"sha": "a74ca5c1f76988937f5c9dbe4bb0478f3a0801bd", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1020,6 +1020,7 @@ symbols! {\n         rustc_then_this_would_need,\n         rustc_unsafe_specialization_marker,\n         rustc_variance,\n+        rustdoc,\n         rustfmt,\n         rvalue_static_promotion,\n         sanitize,"}, {"sha": "cb2bfa034188bcec5641a5101c6d0c40a5430e98", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -297,7 +297,8 @@ pub mod primitive;\n     unused_imports,\n     unsafe_op_in_unsafe_fn\n )]\n-#[allow(non_autolinks)]\n+#[cfg_attr(bootstrap, allow(non_autolinks))]\n+#[cfg_attr(not(bootstrap), allow(rustdoc::non_autolinks))]\n // FIXME: This annotation should be moved into rust-lang/stdarch after clashing_extern_declarations is\n // merged. It currently cannot because bootstrap fails as the lint hasn't been defined yet.\n #[allow(clashing_extern_declarations)]"}, {"sha": "9317c89625d066086ad6b765c1f90c4bd400bd32", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -735,8 +735,15 @@ impl<'a> Builder<'a> {\n             .env(\"RUSTDOC_LIBDIR\", self.rustc_libdir(compiler))\n             .env(\"CFG_RELEASE_CHANNEL\", &self.config.channel)\n             .env(\"RUSTDOC_REAL\", self.rustdoc(compiler))\n-            .env(\"RUSTC_BOOTSTRAP\", \"1\")\n-            .arg(\"-Winvalid_codeblock_attributes\");\n+            .env(\"RUSTC_BOOTSTRAP\", \"1\");\n+\n+        // cfg(bootstrap), can be removed on the next beta bump\n+        if compiler.stage == 0 {\n+            cmd.arg(\"-Winvalid_codeblock_attributes\");\n+        } else {\n+            cmd.arg(\"-Wrustdoc::invalid_codeblock_attributes\");\n+        }\n+\n         if self.config.deny_warnings {\n             cmd.arg(\"-Dwarnings\");\n         }\n@@ -1292,7 +1299,12 @@ impl<'a> Builder<'a> {\n             // fixed via better support from Cargo.\n             cargo.env(\"RUSTC_LINT_FLAGS\", lint_flags.join(\" \"));\n \n-            rustdocflags.arg(\"-Winvalid_codeblock_attributes\");\n+            // cfg(bootstrap), can be removed on the next beta bump\n+            if compiler.stage == 0 {\n+                rustdocflags.arg(\"-Winvalid_codeblock_attributes\");\n+            } else {\n+                rustdocflags.arg(\"-Wrustdoc::invalid_codeblock_attributes\");\n+            }\n         }\n \n         if mode == Mode::Rustc {"}, {"sha": "0dc762ea2766564715c568415d015d2cb1ad5211", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 117, "deletions": 27, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -12,6 +12,8 @@ use rustc_hir::{\n     Path,\n };\n use rustc_interface::{interface, Queries};\n+use rustc_lint::LintStore;\n+use rustc_lint_defs::{declare_tool_lint, Lint, LintId};\n use rustc_middle::hir::map::Map;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::ty::{ParamEnv, Ty, TyCtxt};\n@@ -24,9 +26,11 @@ use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n \n+use std::cell::RefCell;\n+use std::collections::hash_map::Entry;\n+use std::lazy::SyncLazy as Lazy;\n use std::mem;\n use std::rc::Rc;\n-use std::{cell::RefCell, collections::hash_map::Entry};\n \n use crate::clean;\n use crate::clean::inline::build_external_trait;\n@@ -286,6 +290,106 @@ where\n     (lint_opts, lint_caps)\n }\n \n+declare_tool_lint! {\n+    /// The `broken_intra_doc_links` lint detects failures in resolving\n+    /// intra-doc link targets. This is a `rustdoc` only lint, see the\n+    /// documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#broken_intra_doc_links\n+    pub rustdoc::BROKEN_INTRA_DOC_LINKS,\n+    Warn,\n+    \"failures in resolving intra-doc link targets\"\n+}\n+\n+declare_tool_lint! {\n+    /// This is a subset of `broken_intra_doc_links` that warns when linking from\n+    /// a public item to a private one. This is a `rustdoc` only lint, see the\n+    /// documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#private_intra_doc_links\n+    pub rustdoc::PRIVATE_INTRA_DOC_LINKS,\n+    Warn,\n+    \"linking from a public item to a private one\"\n+}\n+\n+declare_tool_lint! {\n+    /// The `invalid_codeblock_attributes` lint detects code block attributes\n+    /// in documentation examples that have potentially mis-typed values. This\n+    /// is a `rustdoc` only lint, see the documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_codeblock_attributes\n+    pub rustdoc::INVALID_CODEBLOCK_ATTRIBUTES,\n+    Warn,\n+    \"codeblock attribute looks a lot like a known one\"\n+}\n+\n+declare_tool_lint! {\n+    /// The `missing_doc_code_examples` lint detects publicly-exported items\n+    /// without code samples in their documentation. This is a `rustdoc` only\n+    /// lint, see the documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#missing_doc_code_examples\n+    pub rustdoc::MISSING_DOC_CODE_EXAMPLES,\n+    Allow,\n+    \"detects publicly-exported items without code samples in their documentation\"\n+}\n+\n+declare_tool_lint! {\n+    /// The `private_doc_tests` lint detects code samples in docs of private\n+    /// items not documented by `rustdoc`. This is a `rustdoc` only lint, see\n+    /// the documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#private_doc_tests\n+    pub rustdoc::PRIVATE_DOC_TESTS,\n+    Allow,\n+    \"detects code samples in docs of private items not documented by rustdoc\"\n+}\n+\n+declare_tool_lint! {\n+    /// The `invalid_html_tags` lint detects invalid HTML tags. This is a\n+    /// `rustdoc` only lint, see the documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_html_tags\n+    pub rustdoc::INVALID_HTML_TAGS,\n+    Allow,\n+    \"detects invalid HTML tags in doc comments\"\n+}\n+\n+declare_tool_lint! {\n+    /// The `non_autolinks` lint detects when a URL could be written using\n+    /// only angle brackets. This is a `rustdoc` only lint, see the\n+    /// documentation in the [rustdoc book].\n+    ///\n+    /// [rustdoc book]: ../../../rustdoc/lints.html#non_autolinks\n+    pub rustdoc::NON_AUTOLINKS,\n+    Warn,\n+    \"detects URLs that could be written using only angle brackets\"\n+}\n+\n+static RUSTDOC_LINTS: Lazy<Vec<&'static Lint>> = Lazy::new(|| {\n+    vec![\n+        BROKEN_INTRA_DOC_LINKS,\n+        PRIVATE_INTRA_DOC_LINKS,\n+        MISSING_DOC_CODE_EXAMPLES,\n+        PRIVATE_DOC_TESTS,\n+        INVALID_CODEBLOCK_ATTRIBUTES,\n+        INVALID_HTML_TAGS,\n+        NON_AUTOLINKS,\n+    ]\n+});\n+\n+crate fn register_lints(_sess: &Session, lint_store: &mut LintStore) {\n+    lint_store.register_lints(&**RUSTDOC_LINTS);\n+    lint_store.register_group(\n+        true,\n+        \"rustdoc\",\n+        None,\n+        RUSTDOC_LINTS.iter().map(|&lint| LintId::of(lint)).collect(),\n+    );\n+    lint_store\n+        .register_renamed(\"intra_doc_link_resolution_failure\", \"rustdoc::broken_intra_doc_links\");\n+}\n+\n /// Parse, resolve, and typecheck the given crate.\n crate fn create_config(\n     RustdocOptions {\n@@ -314,37 +418,23 @@ crate fn create_config(\n     let cpath = Some(input.clone());\n     let input = Input::File(input);\n \n-    let broken_intra_doc_links = lint::builtin::BROKEN_INTRA_DOC_LINKS.name;\n-    let private_intra_doc_links = lint::builtin::PRIVATE_INTRA_DOC_LINKS.name;\n-    let missing_docs = rustc_lint::builtin::MISSING_DOCS.name;\n-    let missing_doc_example = rustc_lint::builtin::MISSING_DOC_CODE_EXAMPLES.name;\n-    let private_doc_tests = rustc_lint::builtin::PRIVATE_DOC_TESTS.name;\n-    let no_crate_level_docs = rustc_lint::builtin::MISSING_CRATE_LEVEL_DOCS.name;\n-    let invalid_codeblock_attributes_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES.name;\n-    let invalid_html_tags = rustc_lint::builtin::INVALID_HTML_TAGS.name;\n-    let renamed_and_removed_lints = rustc_lint::builtin::RENAMED_AND_REMOVED_LINTS.name;\n-    let non_autolinks = rustc_lint::builtin::NON_AUTOLINKS.name;\n-    let unknown_lints = rustc_lint::builtin::UNKNOWN_LINTS.name;\n-\n     // In addition to those specific lints, we also need to allow those given through\n     // command line, otherwise they'll get ignored and we don't want that.\n-    let lints_to_show = vec![\n-        broken_intra_doc_links.to_owned(),\n-        private_intra_doc_links.to_owned(),\n-        missing_docs.to_owned(),\n-        missing_doc_example.to_owned(),\n-        private_doc_tests.to_owned(),\n-        no_crate_level_docs.to_owned(),\n-        invalid_codeblock_attributes_name.to_owned(),\n-        invalid_html_tags.to_owned(),\n-        renamed_and_removed_lints.to_owned(),\n-        unknown_lints.to_owned(),\n-        non_autolinks.to_owned(),\n+    let mut lints_to_show = vec![\n+        // it's unclear whether these should be part of rustdoc directly\n+        rustc_lint::builtin::MISSING_DOCS.name.to_string(),\n+        rustc_lint::builtin::MISSING_CRATE_LEVEL_DOCS.name.to_string(),\n+        // these are definitely not part of rustdoc, but we want to warn on them anyway.\n+        rustc_lint::builtin::RENAMED_AND_REMOVED_LINTS.name.to_string(),\n+        rustc_lint::builtin::UNKNOWN_LINTS.name.to_string(),\n     ];\n+    lints_to_show.extend(RUSTDOC_LINTS.iter().map(|lint| lint.name.to_string()));\n \n     let (lint_opts, lint_caps) = init_lints(lints_to_show, lint_opts, |lint| {\n         // FIXME: why is this necessary?\n-        if lint.name == broken_intra_doc_links || lint.name == invalid_codeblock_attributes_name {\n+        if lint.name == BROKEN_INTRA_DOC_LINKS.name\n+            || lint.name == INVALID_CODEBLOCK_ATTRIBUTES.name\n+        {\n             None\n         } else {\n             Some((lint.name_lower(), lint::Allow))\n@@ -384,7 +474,7 @@ crate fn create_config(\n         diagnostic_output: DiagnosticOutput::Default,\n         stderr: None,\n         lint_caps,\n-        register_lints: None,\n+        register_lints: Some(box register_lints),\n         override_queries: Some(|_sess, providers, _external_providers| {\n             // Most lints will require typechecking, so just don't run them.\n             providers.lint_mod = |_, _| {};"}, {"sha": "eac0ad688d4a2c220387273797a08807010d8546", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -44,11 +44,15 @@ crate struct TestOptions {\n crate fn run(options: Options) -> Result<(), ErrorReported> {\n     let input = config::Input::File(options.input.clone());\n \n-    let invalid_codeblock_attributes_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES.name;\n+    let invalid_codeblock_attributes_name = crate::core::INVALID_CODEBLOCK_ATTRIBUTES.name;\n \n     // In addition to those specific lints, we also need to allow those given through\n     // command line, otherwise they'll get ignored and we don't want that.\n-    let allowed_lints = vec![invalid_codeblock_attributes_name.to_owned()];\n+    let allowed_lints = vec![\n+        invalid_codeblock_attributes_name.to_owned(),\n+        lint::builtin::UNKNOWN_LINTS.name.to_owned(),\n+        lint::builtin::RENAMED_AND_REMOVED_LINTS.name.to_owned(),\n+    ];\n \n     let (lint_opts, lint_caps) = init_lints(allowed_lints, options.lint_opts.clone(), |lint| {\n         if lint.name == invalid_codeblock_attributes_name {\n@@ -92,7 +96,7 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n         diagnostic_output: DiagnosticOutput::Default,\n         stderr: None,\n         lint_caps,\n-        register_lints: None,\n+        register_lints: Some(box crate::core::register_lints),\n         override_queries: None,\n         make_codegen_backend: None,\n         registry: rustc_driver::diagnostics_registry(),"}, {"sha": "8c8840e38e6a6cfbc048b4f3a0ed63ee4fbfe7fe", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -21,7 +21,6 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;\n use rustc_hir::HirId;\n use rustc_middle::ty::TyCtxt;\n-use rustc_session::lint;\n use rustc_span::edition::Edition;\n use rustc_span::Span;\n use std::borrow::Cow;\n@@ -721,7 +720,7 @@ impl<'tcx> ExtraInfo<'tcx> {\n             (None, None) => return,\n         };\n         self.tcx.struct_span_lint_hir(\n-            lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES,\n+            crate::core::INVALID_CODEBLOCK_ATTRIBUTES,\n             hir_id,\n             self.sp,\n             |lint| {"}, {"sha": "6388733c8b219d545bca3edf90649f0a410fa17e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -45,6 +45,7 @@ extern crate rustc_infer;\n extern crate rustc_interface;\n extern crate rustc_lexer;\n extern crate rustc_lint;\n+extern crate rustc_lint_defs;\n extern crate rustc_metadata;\n extern crate rustc_middle;\n extern crate rustc_mir;"}, {"sha": "6619adb5b7650b75522e02e2e68a7bcb89b95fdb", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -16,10 +16,7 @@ use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_middle::ty::TyCtxt;\n use rustc_middle::{bug, ty};\n use rustc_resolve::ParentScope;\n-use rustc_session::lint::{\n-    builtin::{BROKEN_INTRA_DOC_LINKS, PRIVATE_INTRA_DOC_LINKS},\n-    Lint,\n-};\n+use rustc_session::lint::Lint;\n use rustc_span::hygiene::{MacroKind, SyntaxContext};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::DUMMY_SP;\n@@ -35,6 +32,7 @@ use std::ops::Range;\n \n use crate::clean::{self, utils::find_nearest_parent_module, Crate, Item, ItemLink, PrimitiveType};\n use crate::core::DocContext;\n+use crate::core::{BROKEN_INTRA_DOC_LINKS, PRIVATE_INTRA_DOC_LINKS};\n use crate::fold::DocFolder;\n use crate::html::markdown::{markdown_links, MarkdownLink};\n use crate::passes::Pass;"}, {"sha": "85547e557df5be6911a2fe4b03f5dd1a12c940ac", "filename": "src/librustdoc/passes/doc_test_lints.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -68,8 +68,7 @@ crate fn should_have_doc_example(cx: &DocContext<'_>, item: &clean::Item) -> boo\n         return false;\n     }\n     let hir_id = cx.tcx.hir().local_def_id_to_hir_id(item.def_id.expect_local());\n-    let (level, source) =\n-        cx.tcx.lint_level_at_node(lint::builtin::MISSING_DOC_CODE_EXAMPLES, hir_id);\n+    let (level, source) = cx.tcx.lint_level_at_node(crate::core::MISSING_DOC_CODE_EXAMPLES, hir_id);\n     level != lint::Level::Allow || matches!(source, LintLevelSource::Default)\n }\n \n@@ -91,15 +90,15 @@ crate fn look_for_tests<'tcx>(cx: &DocContext<'tcx>, dox: &str, item: &Item) {\n             debug!(\"reporting error for {:?} (hir_id={:?})\", item, hir_id);\n             let sp = span_of_attrs(&item.attrs).unwrap_or(item.source.span());\n             cx.tcx.struct_span_lint_hir(\n-                lint::builtin::MISSING_DOC_CODE_EXAMPLES,\n+                crate::core::MISSING_DOC_CODE_EXAMPLES,\n                 hir_id,\n                 sp,\n                 |lint| lint.build(\"missing code example in this documentation\").emit(),\n             );\n         }\n     } else if tests.found_tests > 0 && !cx.renderinfo.access_levels.is_public(item.def_id) {\n         cx.tcx.struct_span_lint_hir(\n-            lint::builtin::PRIVATE_DOC_TESTS,\n+            crate::core::PRIVATE_DOC_TESTS,\n             hir_id,\n             span_of_attrs(&item.attrs).unwrap_or(item.source.span()),\n             |lint| lint.build(\"documentation test in private item\").emit(),"}, {"sha": "b97872c6333927d0fa85a2f4258cbe5b2d3c4c4b", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -5,7 +5,6 @@ use crate::fold::DocFolder;\n use crate::html::markdown::opts;\n use core::ops::Range;\n use pulldown_cmark::{Event, Parser, Tag};\n-use rustc_session::lint;\n use std::iter::Peekable;\n use std::str::CharIndices;\n \n@@ -183,7 +182,7 @@ impl<'a, 'tcx> DocFolder for InvalidHtmlTagsLinter<'a, 'tcx> {\n                     Some(sp) => sp,\n                     None => span_of_attrs(&item.attrs).unwrap_or(item.source.span()),\n                 };\n-                cx.tcx.struct_span_lint_hir(lint::builtin::INVALID_HTML_TAGS, hir_id, sp, |lint| {\n+                cx.tcx.struct_span_lint_hir(crate::core::INVALID_HTML_TAGS, hir_id, sp, |lint| {\n                     lint.build(msg).emit()\n                 });\n             };"}, {"sha": "fe21887fc050baa316ce812e4368ff8ebdcc615c", "filename": "src/librustdoc/passes/non_autolinks.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fnon_autolinks.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,7 +7,6 @@ use core::ops::Range;\n use pulldown_cmark::{Event, LinkType, Parser, Tag};\n use regex::Regex;\n use rustc_errors::Applicability;\n-use rustc_session::lint;\n \n crate const CHECK_NON_AUTOLINKS: Pass = Pass {\n     name: \"check-non-autolinks\",\n@@ -74,7 +73,7 @@ impl<'a, 'tcx> DocFolder for NonAutolinksLinter<'a, 'tcx> {\n                 let sp = super::source_span_for_markdown_range(cx, &dox, &range, &item.attrs)\n                     .or_else(|| span_of_attrs(&item.attrs))\n                     .unwrap_or(item.source.span());\n-                cx.tcx.struct_span_lint_hir(lint::builtin::NON_AUTOLINKS, hir_id, sp, |lint| {\n+                cx.tcx.struct_span_lint_hir(crate::core::NON_AUTOLINKS, hir_id, sp, |lint| {\n                     lint.build(msg)\n                         .span_suggestion(\n                             sp,"}, {"sha": "0976515f4a42610f9f3eb8417c1edbacbdd3274b", "filename": "src/test/rustdoc-ui/assoc-item-not-in-scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fassoc-item-not-in-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fassoc-item-not-in-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fassoc-item-not-in-scope.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n #[derive(Debug)]\n /// Link to [`S::fmt`]"}, {"sha": "358871b532313e5668536932e78ca6fe04eca8b3", "filename": "src/test/rustdoc-ui/assoc-item-not-in-scope.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fassoc-item-not-in-scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fassoc-item-not-in-scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fassoc-item-not-in-scope.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// Link to [`S::fmt`]\n note: the lint level is defined here\n   --> $DIR/assoc-item-not-in-scope.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "023d620bea2225d13fa04217d591d26c2d424217", "filename": "src/test/rustdoc-ui/check-attr-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,6 +1,6 @@\n // compile-flags:--test\n \n-#![deny(invalid_codeblock_attributes)]\n+#![deny(rustdoc::invalid_codeblock_attributes)]\n \n /// foo\n ///"}, {"sha": "affd0372a1f5e6d49412d3d2ee70a52a934930f5", "filename": "src/test/rustdoc-ui/check-attr-test.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -11,8 +11,8 @@ error: unknown attribute `compile-fail`. Did you mean `compile_fail`?\n note: the lint level is defined here\n  --> $DIR/check-attr-test.rs:3:9\n   |\n-3 | #![deny(invalid_codeblock_attributes)]\n-  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+3 | #![deny(rustdoc::invalid_codeblock_attributes)]\n+  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: the code block will either not be tested if not marked as a rust one or won't fail if it compiles successfully\n \n error: unknown attribute `compilefail`. Did you mean `compile_fail`?"}, {"sha": "763bc4c6cddb90028ab956064225984c7f40fcc6", "filename": "src/test/rustdoc-ui/check-attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(invalid_codeblock_attributes)]\n+#![deny(rustdoc::invalid_codeblock_attributes)]\n \n /// foo\n //~^ ERROR"}, {"sha": "9312cfb76f35f4a52e35bffb7242571b30f80819", "filename": "src/test/rustdoc-ui/check-attr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -13,8 +13,8 @@ LL | | /// ```\n note: the lint level is defined here\n   --> $DIR/check-attr.rs:1:9\n    |\n-LL | #![deny(invalid_codeblock_attributes)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::invalid_codeblock_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: the code block will either not be tested if not marked as a rust one or won't fail if it compiles successfully\n \n error: unknown attribute `compilefail`. Did you mean `compile_fail`?"}, {"sha": "9f5ccbc6687c2d986ec71c1cf39899f8967f62b4", "filename": "src/test/rustdoc-ui/check-fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-fail.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -21,7 +21,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n-   = note: `#[deny(missing_doc_code_examples)]` implied by `#[deny(rustdoc)]`\n+   = note: `#[deny(rustdoc::missing_doc_code_examples)]` implied by `#[deny(rustdoc)]`\n \n error: unknown attribute `testharness`. Did you mean `test_harness`?\n   --> $DIR/check-fail.rs:6:1\n@@ -37,7 +37,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n-   = note: `#[deny(invalid_codeblock_attributes)]` implied by `#[deny(rustdoc)]`\n+   = note: `#[deny(rustdoc::invalid_codeblock_attributes)]` implied by `#[deny(rustdoc)]`\n    = help: the code block will either not be tested if not marked as a rust one or the code will be wrapped inside a main function\n \n error: unknown attribute `testharness`. Did you mean `test_harness`?"}, {"sha": "3c29a45a64a985d234b8ec04e7f99e053517d4b7", "filename": "src/test/rustdoc-ui/check.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -37,7 +37,7 @@ note: the lint level is defined here\n    |\n LL | #![warn(rustdoc)]\n    |         ^^^^^^^\n-   = note: `#[warn(missing_doc_code_examples)]` implied by `#[warn(rustdoc)]`\n+   = note: `#[warn(rustdoc::missing_doc_code_examples)]` implied by `#[warn(rustdoc)]`\n \n warning: missing code example in this documentation\n   --> $DIR/check.rs:9:1"}, {"sha": "09da124b16206c2210e08156388dac3770905185", "filename": "src/test/rustdoc-ui/deny-intra-link-resolution-failure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n /// [v2] //~ ERROR\n pub fn foo() {}"}, {"sha": "67d9c3989f5aeaee4d7eca0af371d907dae25e8a", "filename": "src/test/rustdoc-ui/deny-intra-link-resolution-failure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdeny-intra-link-resolution-failure.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [v2]\n note: the lint level is defined here\n   --> $DIR/deny-intra-link-resolution-failure.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: aborting due to previous error"}, {"sha": "6812a454157b9a98b3ac5bc5ef1d68fb5628665d", "filename": "src/test/rustdoc-ui/doc-without-codeblock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(missing_doc_code_examples)] //~ ERROR missing code example in this documentation\n+#![deny(rustdoc::missing_doc_code_examples)] //~ ERROR missing code example in this documentation\n \n /// Some docs.\n //~^ ERROR missing code example in this documentation"}, {"sha": "aac537e9783cd7ae9519e368985dfe7f0516a97d", "filename": "src/test/rustdoc-ui/doc-without-codeblock.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-without-codeblock.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,7 +1,7 @@\n error: missing code example in this documentation\n   --> $DIR/doc-without-codeblock.rs:1:1\n    |\n-LL | / #![deny(missing_doc_code_examples)]\n+LL | / #![deny(rustdoc::missing_doc_code_examples)]\n LL | |\n LL | | /// Some docs.\n LL | |\n@@ -13,8 +13,8 @@ LL | | }\n note: the lint level is defined here\n   --> $DIR/doc-without-codeblock.rs:1:9\n    |\n-LL | #![deny(missing_doc_code_examples)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::missing_doc_code_examples)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing code example in this documentation\n   --> $DIR/doc-without-codeblock.rs:7:1"}, {"sha": "51922caeb2543a61304bcd6e2dfbcfc61b392b2a", "filename": "src/test/rustdoc-ui/intra-doc/alias-ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n pub type TypeAlias = usize;\n "}, {"sha": "5e7ffeeb8a2198f86a766c403afd8eb01a6e5d7e", "filename": "src/test/rustdoc-ui/intra-doc/alias-ice.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Falias-ice.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [broken cross-reference](TypeAlias::hoge)\n note: the lint level is defined here\n   --> $DIR/alias-ice.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "1f3dc722eff8d81f3c0a13586682bbab9a096571", "filename": "src/test/rustdoc-ui/intra-doc/ambiguity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n #![allow(non_camel_case_types)]\n #![allow(non_upper_case_globals)]\n "}, {"sha": "0f23b9b8adf6721150a74dafccc7fab1c13eab2e", "filename": "src/test/rustdoc-ui/intra-doc/ambiguity.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [true]\n note: the lint level is defined here\n   --> $DIR/ambiguity.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: to link to the module, prefix with `mod@`\n    |\n LL | /// [mod@true]"}, {"sha": "009b291be1f084bfed0ef845d6a945bd3fa40dc7", "filename": "src/test/rustdoc-ui/intra-doc/anchors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n // A few tests on anchors.\n "}, {"sha": "97b0cea0c1e4d6731f50c3d63dab98f165c26882", "filename": "src/test/rustdoc-ui/intra-doc/anchors.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fanchors.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// Or maybe [Foo::f#hola].\n note: the lint level is defined here\n   --> $DIR/anchors.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `hello#people#!` contains multiple anchors\n   --> $DIR/anchors.rs:31:28"}, {"sha": "862faa50b4ddd20bf7c9d3017a9715adec6878aa", "filename": "src/test/rustdoc-ui/intra-doc/broken-reexport.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fbroken-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fbroken-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fbroken-reexport.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,7 +1,7 @@\n // aux-build:intra-doc-broken.rs\n // check-pass\n \n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n extern crate intra_doc_broken;\n "}, {"sha": "596623190a33fa614d211bcd95b8c882eeaa5fa2", "filename": "src/test/rustdoc-ui/intra-doc/disambiguator-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n //~^ NOTE lint level is defined\n pub enum S {}\n "}, {"sha": "5d4d4a699e4f351f7811bd16a8c03efea2016594", "filename": "src/test/rustdoc-ui/intra-doc/disambiguator-mismatch.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdisambiguator-mismatch.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// Link to [struct@S]\n note: the lint level is defined here\n   --> $DIR/disambiguator-mismatch.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this link resolved to an enum, which is not a struct\n \n error: incompatible link kind for `S`"}, {"sha": "c0241b98b78c1f24904361ecc1020871a2d9bebd", "filename": "src/test/rustdoc-ui/intra-doc/double-anchor.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fdouble-anchor.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,7 +4,7 @@ warning: `with#anchor#error` contains multiple anchors\n LL | /// docs [label][with#anchor#error]\n    |                  ^^^^^^^^^^^^^^^^^ contains invalid anchor\n    |\n-   = note: `#[warn(broken_intra_doc_links)]` on by default\n+   = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n \n warning: 1 warning emitted\n "}, {"sha": "b29f7c29b5d86021aa9bc163a814dc7a82fdf0e3", "filename": "src/test/rustdoc-ui/intra-doc/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n //~^ NOTE lint level is defined\n \n // FIXME: this should say that it was skipped (maybe an allowed by default lint?)"}, {"sha": "061151720578be511db1f9a0e267bfd4c0503983", "filename": "src/test/rustdoc-ui/intra-doc/errors.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Ferrors.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [path::to::nonexistent::module]\n note: the lint level is defined here\n   --> $DIR/errors.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: unresolved link to `path::to::nonexistent::macro`\n   --> $DIR/errors.rs:11:6"}, {"sha": "3088bcd46531e9e7b4c1ed77b2f7466c75228fac", "filename": "src/test/rustdoc-ui/intra-doc/incompatible-primitive-disambiguator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fincompatible-primitive-disambiguator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fincompatible-primitive-disambiguator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fincompatible-primitive-disambiguator.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,3 +1,3 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n //! [static@u8::MIN]\n //~^ ERROR incompatible link kind"}, {"sha": "d4dcc493c8b6a7befad9675021ed09c7877bb549", "filename": "src/test/rustdoc-ui/intra-doc/incompatible-primitive-disambiguator.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fincompatible-primitive-disambiguator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fincompatible-primitive-disambiguator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fincompatible-primitive-disambiguator.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | //! [static@u8::MIN]\n note: the lint level is defined here\n   --> $DIR/incompatible-primitive-disambiguator.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this link resolved to an associated constant, which is not a static\n \n error: aborting due to previous error"}, {"sha": "15e02925ed90decd0366af6a61e756205244aa7d", "filename": "src/test/rustdoc-ui/intra-doc/malformed-generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n //! [Vec<] //~ ERROR\n //! [Vec<Box<T] //~ ERROR"}, {"sha": "5bc0f84e24d138a47bcb8df6777d4d8ff53cc9af", "filename": "src/test/rustdoc-ui/intra-doc/malformed-generics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fmalformed-generics.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | //! [Vec<]\n note: the lint level is defined here\n   --> $DIR/malformed-generics.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: unresolved link to `Vec<Box<T`\n   --> $DIR/malformed-generics.rs:4:6"}, {"sha": "75159979e8890d10fd2368e5ec3eb88d2f17c0dd", "filename": "src/test/rustdoc-ui/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n #![feature(intra_doc_pointers)]\n // These are links that could reasonably expected to work, but don't.\n "}, {"sha": "610c830560527035f65fe1d173ee235c134a94cf", "filename": "src/test/rustdoc-ui/intra-doc/non-path-primitives.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fnon-path-primitives.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | //! [[T]::rotate_left]\n note: the lint level is defined here\n   --> $DIR/non-path-primitives.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: unresolved link to `Z`"}, {"sha": "2c1a8b5357aa165c38b29a9f43e090878d330e7e", "filename": "src/test/rustdoc-ui/intra-doc/prim-conflict.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n //~^ NOTE lint level is defined\n \n /// [char]"}, {"sha": "e4bd9fd4b8f1a5bd82fd7f94f4b21b32cfa73f03", "filename": "src/test/rustdoc-ui/intra-doc/prim-conflict.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprim-conflict.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [char]\n note: the lint level is defined here\n   --> $DIR/prim-conflict.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: to link to the module, prefix with `mod@`\n    |\n LL | /// [mod@char]"}, {"sha": "cae5b1f20e6c35f0419095d2968fae0cac3abd6e", "filename": "src/test/rustdoc-ui/intra-doc/private.private.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.private.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,7 +4,7 @@ warning: public documentation for `DocMe` links to private item `DontDocMe`\n LL | /// docs [DontDocMe] [DontDocMe::f]\n    |           ^^^^^^^^^ this item is private\n    |\n-   = note: `#[warn(private_intra_doc_links)]` on by default\n+   = note: `#[warn(rustdoc::private_intra_doc_links)]` on by default\n    = note: this link resolves only because you passed `--document-private-items`, but will break without\n \n warning: public documentation for `DocMe` links to private item `DontDocMe::f`"}, {"sha": "05b202e37fbcb0f938ff771479cf5665ac013374", "filename": "src/test/rustdoc-ui/intra-doc/private.public.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.public.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.public.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fprivate.public.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,7 +4,7 @@ warning: public documentation for `DocMe` links to private item `DontDocMe`\n LL | /// docs [DontDocMe] [DontDocMe::f]\n    |           ^^^^^^^^^ this item is private\n    |\n-   = note: `#[warn(private_intra_doc_links)]` on by default\n+   = note: `#[warn(rustdoc::private_intra_doc_links)]` on by default\n    = note: this link will resolve properly if you pass `--document-private-items`\n \n warning: public documentation for `DocMe` links to private item `DontDocMe::f`"}, {"sha": "041ec293259233d535f182b521a8b1843ae9e478", "filename": "src/test/rustdoc-ui/intra-doc/span-ice-55723.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n // An error in calculating spans while reporting intra-doc link resolution errors caused rustdoc to\n // attempt to slice in the middle of a multibyte character. See"}, {"sha": "bf4ab9fdd18b1b8b650e667942144f46ce3d0d91", "filename": "src/test/rustdoc-ui/intra-doc/span-ice-55723.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fspan-ice-55723.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// \uff08arr[i]\uff09\n note: the lint level is defined here\n   --> $DIR/span-ice-55723.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: aborting due to previous error"}, {"sha": "9565830930f414402ce16569bfcabe6fb09ed60e", "filename": "src/test/rustdoc-ui/intra-doc/unused-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funused-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funused-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funused-extern-crate.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: --extern zip=whatever.rlib\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n /// See [zip] crate.\n //~^ ERROR unresolved\n pub struct ArrayZip;"}, {"sha": "5c0df1d1b9e4f4e89c6f366aaad06ae2cadfd773", "filename": "src/test/rustdoc-ui/intra-doc/unused-extern-crate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funused-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funused-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funused-extern-crate.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// See [zip] crate.\n note: the lint level is defined here\n   --> $DIR/unused-extern-crate.rs:2:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: aborting due to previous error"}, {"sha": "d46df92649d172f9d725280fd4ea75329f83862e", "filename": "src/test/rustdoc-ui/intra-doc/warning-crlf.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning-crlf.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,7 +4,7 @@ warning: unresolved link to `error`\n LL | /// [error]\n    |      ^^^^^ no item named `error` in scope\n    |\n-   = note: `#[warn(broken_intra_doc_links)]` on by default\n+   = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n warning: unresolved link to `error1`"}, {"sha": "135c432e05342a788179ce610e1b0c0746d17961", "filename": "src/test/rustdoc-ui/intra-doc/warning.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,7 +4,7 @@ warning: unresolved link to `Foo::baz`\n LL |        //! Test with [Foo::baz], [Bar::foo], ...\n    |                       ^^^^^^^^ the struct `Foo` has no field or associated item named `baz`\n    |\n-   = note: `#[warn(broken_intra_doc_links)]` on by default\n+   = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n \n warning: unresolved link to `Bar::foo`\n   --> $DIR/warning.rs:3:35"}, {"sha": "cec44b6d2ca62fa263631e563201118867d5f2ee", "filename": "src/test/rustdoc-ui/invalid-html-tags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(invalid_html_tags)]\n+#![deny(rustdoc::invalid_html_tags)]\n \n //! <p>\ud83d\udca9<p>\n //~^ ERROR unclosed HTML tag `p`"}, {"sha": "335e100c89d890c5d82155416762d0479f255bdf", "filename": "src/test/rustdoc-ui/invalid-html-tags.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | //! <p>\ud83d\udca9<p>\n note: the lint level is defined here\n   --> $DIR/invalid-html-tags.rs:1:9\n    |\n-LL | #![deny(invalid_html_tags)]\n-   |         ^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::invalid_html_tags)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: unclosed HTML tag `p`\n   --> $DIR/invalid-html-tags.rs:3:9"}, {"sha": "000b6a329c1a7ea869a8f11789fdf5c9f2bd4901", "filename": "src/test/rustdoc-ui/issue-58473-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fissue-58473-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fissue-58473-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-58473-2.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![deny(private_doc_tests)]\n+#![deny(rustdoc::private_doc_tests)]\n \n mod foo {\n     /**"}, {"sha": "457987e207496096cb1ac16b0298af6b2679970d", "filename": "src/test/rustdoc-ui/issue-74134.private.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fissue-74134.private.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fissue-74134.private.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-74134.private.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,7 +4,7 @@ warning: public documentation for `public_item` links to private item `PrivateTy\n LL |     /// [`PrivateType`]\n    |          ^^^^^^^^^^^^^ this item is private\n    |\n-   = note: `#[warn(private_intra_doc_links)]` on by default\n+   = note: `#[warn(rustdoc::private_intra_doc_links)]` on by default\n    = note: this link resolves only because you passed `--document-private-items`, but will break without\n \n warning: 1 warning emitted"}, {"sha": "07aebc3541fe32185e159e190fb0daf3a2c6b807", "filename": "src/test/rustdoc-ui/issue-74134.public.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fissue-74134.public.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fissue-74134.public.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-74134.public.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,7 +4,7 @@ warning: public documentation for `public_item` links to private item `PrivateTy\n LL |     /// [`PrivateType`]\n    |          ^^^^^^^^^^^^^ this item is private\n    |\n-   = note: `#[warn(private_intra_doc_links)]` on by default\n+   = note: `#[warn(rustdoc::private_intra_doc_links)]` on by default\n    = note: this link will resolve properly if you pass `--document-private-items`\n \n warning: 1 warning emitted"}, {"sha": "6f8a20f7d53f0ada2627b7458d5c7f8c2ef00089", "filename": "src/test/rustdoc-ui/lint-group.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Flint-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Flint-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Flint-group.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -9,7 +9,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n-   = note: `#[deny(missing_doc_code_examples)]` implied by `#[deny(rustdoc)]`\n+   = note: `#[deny(rustdoc::missing_doc_code_examples)]` implied by `#[deny(rustdoc)]`\n \n error: documentation test in private item\n   --> $DIR/lint-group.rs:19:1\n@@ -26,7 +26,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n-   = note: `#[deny(private_doc_tests)]` implied by `#[deny(rustdoc)]`\n+   = note: `#[deny(rustdoc::private_doc_tests)]` implied by `#[deny(rustdoc)]`\n \n error: missing code example in this documentation\n   --> $DIR/lint-group.rs:26:1\n@@ -45,7 +45,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n-   = note: `#[deny(broken_intra_doc_links)]` implied by `#[deny(rustdoc)]`\n+   = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(rustdoc)]`\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: unclosed HTML tag `unknown`\n@@ -59,7 +59,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(rustdoc)]\n    |         ^^^^^^^\n-   = note: `#[deny(invalid_html_tags)]` implied by `#[deny(rustdoc)]`\n+   = note: `#[deny(rustdoc::invalid_html_tags)]` implied by `#[deny(rustdoc)]`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "8d727b0d0b5500dc8aed76a93dbdc135adfee4f0", "filename": "src/test/rustdoc-ui/lint-missing-doc-code-example.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,5 +1,5 @@\n #![deny(missing_docs)]\n-#![deny(missing_doc_code_examples)]\n+#![deny(rustdoc::missing_doc_code_examples)]\n \n //! crate level doc\n //! ```\n@@ -19,7 +19,7 @@ fn test() {\n mod module1 { //~ ERROR\n }\n \n-#[allow(missing_doc_code_examples)]\n+#[allow(rustdoc::missing_doc_code_examples)]\n /// doc\n mod module2 {\n "}, {"sha": "370c577f85d8fb1bf91a54660fc314cb0e0d217c", "filename": "src/test/rustdoc-ui/lint-missing-doc-code-example.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Flint-missing-doc-code-example.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -8,8 +8,8 @@ LL | | }\n note: the lint level is defined here\n   --> $DIR/lint-missing-doc-code-example.rs:2:9\n    |\n-LL | #![deny(missing_doc_code_examples)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::missing_doc_code_examples)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing code example in this documentation\n   --> $DIR/lint-missing-doc-code-example.rs:37:3"}, {"sha": "a1f9f8dca083ecf7c7eda6a5f3e129133a99d1f0", "filename": "src/test/rustdoc-ui/private-doc-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fprivate-doc-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fprivate-doc-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fprivate-doc-test.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![deny(private_doc_tests)]\n+#![deny(rustdoc::private_doc_tests)]\n \n mod foo {\n     /// private doc test"}, {"sha": "1a3d6cc636d31e37c78ba94af760fe90c3557614", "filename": "src/test/rustdoc-ui/private-item-doc-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(private_doc_tests)]\n+#![deny(rustdoc::private_doc_tests)]\n \n mod foo {\n     /// private doc test"}, {"sha": "5df6132987c9fe4f6eda4291cbf97f538ebc7e72", "filename": "src/test/rustdoc-ui/private-item-doc-test.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fprivate-item-doc-test.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -11,8 +11,8 @@ LL | |     /// ```\n note: the lint level is defined here\n   --> $DIR/private-item-doc-test.rs:1:9\n    |\n-LL | #![deny(private_doc_tests)]\n-   |         ^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::private_doc_tests)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f2e66b77bf3eaf54e1b5b98e5ed1bb78974d0d7f", "filename": "src/test/rustdoc-ui/pub-export-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fpub-export-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fpub-export-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fpub-export-lint.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n /// [aloha]\n //~^ ERROR unresolved link to `aloha`"}, {"sha": "c6be9c6a9f504a39ed7183128b1545623ed02de7", "filename": "src/test/rustdoc-ui/pub-export-lint.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fpub-export-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Fpub-export-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fpub-export-lint.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [aloha]\n note: the lint level is defined here\n   --> $DIR/pub-export-lint.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: aborting due to previous error"}, {"sha": "71bd2c522ff86e295ffddf8f05a5f32cf59bb855", "filename": "src/test/rustdoc-ui/reference-link-reports-error-once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-link-reports-error-once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-link-reports-error-once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Freference-link-reports-error-once.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n /// Links to [a] [link][a]\n /// And also a [third link][a]"}, {"sha": "b46a51e93fb8be41cc1484e5cc6dd6f43bc1f6e9", "filename": "src/test/rustdoc-ui/reference-link-reports-error-once.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-link-reports-error-once.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-link-reports-error-once.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Freference-link-reports-error-once.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [a]: ref\n note: the lint level is defined here\n   --> $DIR/reference-link-reports-error-once.rs:1:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: to escape `[` and `]` characters, add '\\' before them like `\\[` or `\\]`\n \n error: unresolved link to `ref2`"}, {"sha": "e81e034465d7f9589c04cbde87378ac4d7aa772a", "filename": "src/test/rustdoc-ui/reference-links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Freference-links.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,5 +1,5 @@\n // Test that errors point to the reference, not to the title text.\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n //! Links to [a] [link][a]\n //!\n //! [a]: std::process::Comman"}, {"sha": "c98a2fd7ce69020e8034dabbea1c36fed4c782e2", "filename": "src/test/rustdoc-ui/reference-links.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-links.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Freference-links.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Freference-links.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | //! [a]: std::process::Comman\n note: the lint level is defined here\n   --> $DIR/reference-links.rs:2:9\n    |\n-LL | #![deny(broken_intra_doc_links)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e2238a4004c1b93a8f38bf802162136d23b9b206", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -4,5 +4,16 @@\n //~^ NOTE lint level is defined\n #![deny(x)]\n //~^ ERROR unknown lint\n+#![deny(rustdoc::x)]\n+//~^ ERROR unknown lint: `rustdoc::x`\n #![deny(intra_doc_link_resolution_failure)]\n-//~^ ERROR lint `intra_doc_link_resolution_failure` has been renamed\n+//~^ ERROR has been renamed\n+\n+// This would ideally say 'renamed to rustdoc::non_autolinks', but this is close enough.\n+#![deny(non_autolinks)]\n+//~^ ERROR has been removed: use `rustdoc::non_autolinks` instead [renamed_and_removed_lints]\n+\n+// This doesn't give you the right code directly, but at least points you on the\n+// right path.\n+#![deny(rustdoc::intra_doc_link_resolution_failure)]\n+//~^ ERROR unknown lint"}, {"sha": "1a45f68ae810f39a404f78c69ca6d519b1ec8878", "filename": "src/test/rustdoc-ui/unknown-renamed-lints.stderr", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funknown-renamed-lints.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -10,19 +10,37 @@ note: the lint level is defined here\n LL | #![deny(unknown_lints)]\n    |         ^^^^^^^^^^^^^\n \n-error: lint `intra_doc_link_resolution_failure` has been renamed to `broken_intra_doc_links`\n+error: unknown lint: `rustdoc::x`\n   --> $DIR/unknown-renamed-lints.rs:7:9\n    |\n+LL | #![deny(rustdoc::x)]\n+   |         ^^^^^^^^^^\n+\n+error: lint `intra_doc_link_resolution_failure` has been renamed to `rustdoc::broken_intra_doc_links`\n+  --> $DIR/unknown-renamed-lints.rs:9:9\n+   |\n LL | #![deny(intra_doc_link_resolution_failure)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `broken_intra_doc_links`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `rustdoc::broken_intra_doc_links`\n    |\n note: the lint level is defined here\n   --> $DIR/unknown-renamed-lints.rs:3:9\n    |\n LL | #![deny(renamed_and_removed_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error: lint `non_autolinks` has been removed: use `rustdoc::non_autolinks` instead\n+  --> $DIR/unknown-renamed-lints.rs:13:9\n+   |\n+LL | #![deny(non_autolinks)]\n+   |         ^^^^^^^^^^^^^\n+\n+error: unknown lint: `rustdoc::intra_doc_link_resolution_failure`\n+  --> $DIR/unknown-renamed-lints.rs:18:9\n+   |\n+LL | #![deny(rustdoc::intra_doc_link_resolution_failure)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: Compilation failed, aborting rustdoc\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "d0b43de2f0e0ec9f669165ca03dc85edda4bd7a0", "filename": "src/test/rustdoc-ui/url-improvements.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,4 +1,4 @@\n-#![deny(non_autolinks)]\n+#![deny(rustdoc::non_autolinks)]\n \n /// [http://aa.com](http://aa.com)\n //~^ ERROR unneeded long form for URL\n@@ -59,7 +59,7 @@ pub fn c() {}\n /// [should_not.lint](should_not.lint)\n pub fn everything_is_fine_here() {}\n \n-#[allow(non_autolinks)]\n+#[allow(rustdoc::non_autolinks)]\n pub mod foo {\n     /// https://somewhere.com/a?hello=12&bye=11#xyz\n     pub fn bar() {}"}, {"sha": "f377973656a8392ef32c36b0ba988b5309c75237", "filename": "src/test/rustdoc-ui/url-improvements.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Furl-improvements.stderr?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -7,8 +7,8 @@ LL | /// [http://aa.com](http://aa.com)\n note: the lint level is defined here\n   --> $DIR/url-improvements.rs:1:9\n    |\n-LL | #![deny(non_autolinks)]\n-   |         ^^^^^^^^^^^^^\n+LL | #![deny(rustdoc::non_autolinks)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: unneeded long form for URL\n   --> $DIR/url-improvements.rs:5:5"}, {"sha": "ffa02b0c635b3d94877231398f6307d5b5571765", "filename": "src/test/rustdoc/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc62018e61edfa9706b8e4e61d1b571bdee7827d/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs?ref=cc62018e61edfa9706b8e4e61d1b571bdee7827d", "patch": "@@ -1,7 +1,7 @@\n // ignore-tidy-linelength\n #![crate_name = \"foo\"]\n #![feature(intra_doc_pointers)]\n-#![deny(broken_intra_doc_links)]\n+#![deny(rustdoc::broken_intra_doc_links)]\n \n // @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html#method.rotate_left\"]' 'slice::rotate_left'\n //! [slice::rotate_left]"}]}