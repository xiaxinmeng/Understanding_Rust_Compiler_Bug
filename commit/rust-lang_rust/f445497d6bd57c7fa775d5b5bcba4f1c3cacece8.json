{"sha": "f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NDU0OTdkNmJkNTdjN2ZhNzc1ZDViNWJjYmE0ZjFjM2NhY2VjZTg=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-09-04T19:14:09Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2012-09-04T19:14:09Z"}, "message": "Merge pull request #3383 from crabtw/fbsd\n\nuse native log2 function and enable freebsd tests in uv_ll", "tree": {"sha": "76fe26b18f6dfe52afc88fa16aa67f1617166b3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76fe26b18f6dfe52afc88fa16aa67f1617166b3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "html_url": "https://github.com/rust-lang/rust/commit/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a26837c47872066b8bfb4e455fcf75fc573e862f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a26837c47872066b8bfb4e455fcf75fc573e862f", "html_url": "https://github.com/rust-lang/rust/commit/a26837c47872066b8bfb4e455fcf75fc573e862f"}, {"sha": "ff4b754958cc3acc32dcb9231aafceff692a4f95", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff4b754958cc3acc32dcb9231aafceff692a4f95", "html_url": "https://github.com/rust-lang/rust/commit/ff4b754958cc3acc32dcb9231aafceff692a4f95"}], "stats": {"total": 46, "additions": 0, "deletions": 46}, "files": [{"sha": "f01af54e4755212546fac4d02c81c522ab19df5a", "filename": "src/libcore/cmath.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibcore%2Fcmath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibcore%2Fcmath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmath.rs?ref=f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "patch": "@@ -65,9 +65,6 @@ extern mod c_double {\n     // renamed: to be consitent with log as ln\n     #[link_name=\"log1p\"] pure fn ln1p(n: c_double) -> c_double;\n     pure fn log10(n: c_double) -> c_double;\n-    #[cfg(target_os=\"linux\")]\n-    #[cfg(target_os=\"macos\")]\n-    #[cfg(target_os=\"win32\")]\n     pure fn log2(n: c_double) -> c_double;\n     #[link_name=\"ilogb\"] pure fn ilog_radix(n: c_double) -> c_int;\n     pure fn modf(n: c_double, &iptr: c_double) -> c_double;\n@@ -143,9 +140,6 @@ extern mod c_float {\n     #[link_name=\"logf\"] pure fn ln(n: c_float) -> c_float;\n     #[link_name=\"logbf\"] pure fn log_radix(n: c_float) -> c_float;\n     #[link_name=\"log1pf\"] pure fn ln1p(n: c_float) -> c_float;\n-    #[cfg(target_os=\"linux\")]\n-    #[cfg(target_os=\"macos\")]\n-    #[cfg(target_os=\"win32\")]\n     #[link_name=\"log2f\"] pure fn log2(n: c_float) -> c_float;\n     #[link_name=\"log10f\"] pure fn log10(n: c_float) -> c_float;\n     #[link_name=\"ilogbf\"] pure fn ilog_radix(n: c_float) -> c_int;"}, {"sha": "f7376ab5df4531a83465667aaada8ca413eed1c7", "filename": "src/libcore/f32.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibcore%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibcore%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff32.rs?ref=f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "patch": "@@ -152,25 +152,10 @@ pure fn signbit(x: f32) -> int {\n     if is_negative(x) { return 1; } else { return 0; }\n }\n \n-#[cfg(target_os=\"linux\")]\n-#[cfg(target_os=\"macos\")]\n-#[cfg(target_os=\"win32\")]\n pure fn logarithm(n: f32, b: f32) -> f32 {\n     return log2(n) / log2(b);\n }\n \n-#[cfg(target_os=\"freebsd\")]\n-pure fn logarithm(n: f32, b: f32) -> f32 {\n-    // FIXME (#2000): check if it is good to use log2 instead of ln here;\n-    // in theory should be faster since the radix is 2\n-    return ln(n) / ln(b);\n-}\n-\n-#[cfg(target_os=\"freebsd\")]\n-pure fn log2(n: f32) -> f32 {\n-    return ln(n) / consts::ln_2;\n-}\n-\n impl f32: num::Num {\n     pure fn add(&&other: f32)    -> f32 { return self + other; }\n     pure fn sub(&&other: f32)    -> f32 { return self - other; }"}, {"sha": "33b228ba34564932629d8478ba96b4a0d0c51e92", "filename": "src/libcore/f64.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibcore%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibcore%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ff64.rs?ref=f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "patch": "@@ -179,25 +179,10 @@ pure fn signbit(x: f64) -> int {\n     if is_negative(x) { return 1; } else { return 0; }\n }\n \n-#[cfg(target_os=\"linux\")]\n-#[cfg(target_os=\"macos\")]\n-#[cfg(target_os=\"win32\")]\n pure fn logarithm(n: f64, b: f64) -> f64 {\n     return log2(n) / log2(b);\n }\n \n-#[cfg(target_os=\"freebsd\")]\n-pure fn logarithm(n: f64, b: f64) -> f64 {\n-    // FIXME (#2000): check if it is good to use log2 instead of ln here; in\n-    // theory should be faster since the radix is 2\n-    return ln(n) / ln(b);\n-}\n-\n-#[cfg(target_os=\"freebsd\")]\n-pure fn log2(n: f64) -> f64 {\n-    return ln(n) / consts::ln_2;\n-}\n-\n impl f64: num::Num {\n     pure fn add(&&other: f64)    -> f64 { return self + other; }\n     pure fn sub(&&other: f64)    -> f64 { return self - other; }"}, {"sha": "cd150fc1abf98be5ebfa4817b524fd0db607c65f", "filename": "src/libstd/uv_ll.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibstd%2Fuv_ll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f445497d6bd57c7fa775d5b5bcba4f1c3cacece8/src%2Flibstd%2Fuv_ll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_ll.rs?ref=f445497d6bd57c7fa775d5b5bcba4f1c3cacece8", "patch": "@@ -1522,7 +1522,6 @@ mod test {\n \n     // struct size tests\n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_uv_tcp_t() {\n         let foreign_handle_size = rustrt::rust_uv_helper_uv_tcp_t_size();\n         let rust_handle_size = sys::size_of::<uv_tcp_t>();\n@@ -1532,7 +1531,6 @@ mod test {\n         assert foreign_handle_size as uint == rust_handle_size;\n     }\n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_uv_connect_t() {\n         let foreign_handle_size =\n             rustrt::rust_uv_helper_uv_connect_t_size();\n@@ -1543,7 +1541,6 @@ mod test {\n         assert foreign_handle_size as uint == rust_handle_size;\n     }\n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_uv_buf_t() {\n         let foreign_handle_size =\n             rustrt::rust_uv_helper_uv_buf_t_size();\n@@ -1554,7 +1551,6 @@ mod test {\n         assert foreign_handle_size as uint == rust_handle_size;\n     }\n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_uv_write_t() {\n         let foreign_handle_size =\n             rustrt::rust_uv_helper_uv_write_t_size();\n@@ -1566,7 +1562,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_sockaddr_in() {\n         let foreign_handle_size =\n             rustrt::rust_uv_helper_sockaddr_in_size();\n@@ -1577,7 +1572,6 @@ mod test {\n         assert foreign_handle_size as uint == rust_handle_size;\n     }\n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_sockaddr_in6() {\n         let foreign_handle_size =\n             rustrt::rust_uv_helper_sockaddr_in6_size();\n@@ -1605,7 +1599,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_uv_async_t() {\n         let foreign_handle_size =\n             rustrt::rust_uv_helper_uv_async_t_size();\n@@ -1617,7 +1610,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     fn test_uv_ll_struct_size_uv_timer_t() {\n         let foreign_handle_size =\n             rustrt::rust_uv_helper_uv_timer_t_size();\n@@ -1629,7 +1621,6 @@ mod test {\n     }\n \n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     #[ignore(cfg(target_os = \"win32\"))]\n     fn test_uv_ll_struct_size_uv_getaddrinfo_t() {\n         let foreign_handle_size =\n@@ -1641,7 +1632,6 @@ mod test {\n         assert foreign_handle_size as uint == rust_handle_size;\n     }\n     #[test]\n-    #[ignore(cfg(target_os = \"freebsd\"))]\n     #[ignore(cfg(target_os = \"macos\"))]\n     #[ignore(cfg(target_os = \"win32\"))]\n     fn test_uv_ll_struct_size_addrinfo() {"}]}