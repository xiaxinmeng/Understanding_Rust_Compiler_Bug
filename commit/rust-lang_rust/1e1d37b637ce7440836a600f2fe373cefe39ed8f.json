{"sha": "1e1d37b637ce7440836a600f2fe373cefe39ed8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMWQzN2I2MzdjZTc0NDA4MzZhNjAwZjJmZTM3M2NlZmUzOWVkOGY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-01T10:55:25Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-01T14:52:11Z"}, "message": "Rollup merge of #55522 - matthiaskrgr:no_format, r=zackmdavis\n\nuse String::from() instead of format!() macro to construct Strings.", "tree": {"sha": "7b29eb0594978d8df4856268c802274d7e7d7eb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b29eb0594978d8df4856268c802274d7e7d7eb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e1d37b637ce7440836a600f2fe373cefe39ed8f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvbExsACgkQ/vbIBR0O\nATyHFhAAuvfQOMm+Nk8zu3HHNc8WDYe3Nv1L6mvyxsL5Hn5ubXfCs1/JzJOdYWIr\ngrMI2uDoel2tneLC7Z6tZC7bFTh37+vFZChyMREAX3QF6NQrxH6jy+VmaNjeEZ/5\nRnJ8VPTD8BLCSpK0x6GBnixh58tV3z7Vcdbgt8vcN/9rJhmSzJ0YYWK09r67q0H/\nn2FOmbf4e23J36efeUu15Y4oVaGxFqARc0LtwW2Xh/216/TONrWV73sc6a81tfEV\nKa1SXbRJ96VGGJUkg9qORY0wZrwWmNkjicc5mET/iw4t/aLKBqDzpfFYySFarTKP\nPiMj9+PqGJPTqvSfJA2l115SQnLPz/eBFihyDFNzDOTtnQGk+PrhMm77Ct+vCzc2\n1wSuyyL7AZc4HwvhCk7EyXF6d5XpeUCtRCPtJSREG19nrnQwy3+dK34LoLY815wP\nIzs8aZTTb85R35MTp9FXPWVV6fLvvT/4mrjIlQ3Q2YZLADpdRRLEeYrIK872ntif\nulUBO+CXOo1vv9tQ2PBecXMXJuJrRsG7RZp2lGaV+rAVcCOxrdM+Nm8y8ydQDbtV\nT/A50VBZf9WJxkjHFkRRICbk8X+vC4QdUiD+r7Mf2XrdKEl5IVWGox1NyEmFCahk\n8oyxh6Glr9bxvFpO1XEXZy73qFt1xdmoWEOTIdQs4lc11IKLnzQ=\n=iaTe\n-----END PGP SIGNATURE-----", "payload": "tree 7b29eb0594978d8df4856268c802274d7e7d7eb5\nparent 876841267bd66d5594808997225e5e542bd5c029\nparent f6b8876d45841a2b3b082376d3a5d265851208d7\nauthor Pietro Albini <pietro@pietroalbini.org> 1541069725 +0100\ncommitter kennytm <kennytm@gmail.com> 1541083931 +0800\n\nRollup merge of #55522 - matthiaskrgr:no_format, r=zackmdavis\n\nuse String::from() instead of format!() macro to construct Strings.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e1d37b637ce7440836a600f2fe373cefe39ed8f", "html_url": "https://github.com/rust-lang/rust/commit/1e1d37b637ce7440836a600f2fe373cefe39ed8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e1d37b637ce7440836a600f2fe373cefe39ed8f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "876841267bd66d5594808997225e5e542bd5c029", "url": "https://api.github.com/repos/rust-lang/rust/commits/876841267bd66d5594808997225e5e542bd5c029", "html_url": "https://github.com/rust-lang/rust/commit/876841267bd66d5594808997225e5e542bd5c029"}, {"sha": "f6b8876d45841a2b3b082376d3a5d265851208d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6b8876d45841a2b3b082376d3a5d265851208d7", "html_url": "https://github.com/rust-lang/rust/commit/f6b8876d45841a2b3b082376d3a5d265851208d7"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "f5f8e3512a0eaa9ad355f3290c0088d6ea5d3666", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=1e1d37b637ce7440836a600f2fe373cefe39ed8f", "patch": "@@ -1254,7 +1254,7 @@ fn node_id_to_string(map: &Map<'_>, id: NodeId, include_id: bool) -> String {\n         Some(Node::MacroDef(_)) => {\n             format!(\"macro {}{}\",  path_str(), id_str)\n         }\n-        Some(Node::Crate) => format!(\"root_crate\"),\n+        Some(Node::Crate) => String::from(\"root_crate\"),\n         None => format!(\"unknown node{}\", id_str),\n     }\n }"}, {"sha": "3c4d8e09fc166b00018e7888b108579b3161c668", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=1e1d37b637ce7440836a600f2fe373cefe39ed8f", "patch": "@@ -788,7 +788,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n \n         let what_was_dropped = match self.describe_place(place) {\n             Some(name) => format!(\"`{}`\", name.as_str()),\n-            None => format!(\"temporary value\"),\n+            None => String::from(\"temporary value\"),\n         };\n \n         let label = match self.describe_place(&borrow.borrowed_place) {\n@@ -1028,7 +1028,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n \n         match category {\n             ConstraintCategory::Return => {\n-                err.span_note(constraint_span, &format!(\"closure is returned here\"));\n+                err.span_note(constraint_span, \"closure is returned here\");\n             }\n             ConstraintCategory::CallArgument => {\n                 fr_name.highlight_region_name(&mut err);"}, {"sha": "15d0a9166a6781037bd6fb3ff222f8e2e059f14a", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=1e1d37b637ce7440836a600f2fe373cefe39ed8f", "patch": "@@ -408,7 +408,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n                             ),\n                         _ =>\n                             return validation_failure!(\n-                                format!(\"non-integer enum discriminant\"), path\n+                                String::from(\"non-integer enum discriminant\"), path\n                             ),\n                     }\n                 };"}, {"sha": "ae0483e3c140c8dcc810702a2018b9c3d347d09f", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=1e1d37b637ce7440836a600f2fe373cefe39ed8f", "patch": "@@ -575,7 +575,7 @@ pub trait BorrowckErrors<'cx>: Sized + Copy {\n             OGN = o\n         );\n         err.span_label(mutate_span, format!(\"cannot {}\", action));\n-        err.span_label(match_span, format!(\"value is immutable in match guard\"));\n+        err.span_label(match_span, String::from(\"value is immutable in match guard\"));\n \n         self.cancel_if_wrong_origin(err, o)\n     }"}, {"sha": "ce326b728df458acb2c269e2f6b49a4cff38b47d", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=1e1d37b637ce7440836a600f2fe373cefe39ed8f", "patch": "@@ -687,7 +687,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                         \"proc_macro_hygiene\",\n                         self.span,\n                         GateIssue::Language,\n-                        &format!(\"procedural macros cannot expand to macro definitions\"),\n+                        \"procedural macros cannot expand to macro definitions\",\n                     );\n                 }\n                 visit::walk_item(self, i);"}, {"sha": "f63950b448a143565fc33a3c366da5dd6e4edfc7", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e1d37b637ce7440836a600f2fe373cefe39ed8f/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=1e1d37b637ce7440836a600f2fe373cefe39ed8f", "patch": "@@ -766,7 +766,7 @@ fn make_test_name(\n         .join(&testpaths.file.file_name().unwrap());\n     let mode_suffix = match config.compare_mode {\n         Some(ref mode) => format!(\" ({})\", mode.to_str()),\n-        None => format!(\"\"),\n+        None => String::new(),\n     };\n     test::DynTestName(format!(\n         \"[{}{}] {}{}\","}]}