{"sha": "80451de390dde969057230345e44adfab21de6b8", "node_id": "C_kwDOAAsO6NoAKDgwNDUxZGUzOTBkZGU5NjkwNTcyMzAzNDVlNDRhZGZhYjIxZGU2Yjg", "commit": {"author": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-17T14:52:16Z"}, "committer": {"name": "finalchild", "email": "finalchild2@gmail.com", "date": "2022-08-21T15:57:21Z"}, "message": "Use DiagnosticMessage for BufferedEarlyLint.msg", "tree": {"sha": "d6e645ab0851815fab8edcd5616326cfcde02697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6e645ab0851815fab8edcd5616326cfcde02697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80451de390dde969057230345e44adfab21de6b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80451de390dde969057230345e44adfab21de6b8", "html_url": "https://github.com/rust-lang/rust/commit/80451de390dde969057230345e44adfab21de6b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80451de390dde969057230345e44adfab21de6b8/comments", "author": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "committer": {"login": "finalchild", "id": 8557044, "node_id": "MDQ6VXNlcjg1NTcwNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8557044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finalchild", "html_url": "https://github.com/finalchild", "followers_url": "https://api.github.com/users/finalchild/followers", "following_url": "https://api.github.com/users/finalchild/following{/other_user}", "gists_url": "https://api.github.com/users/finalchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/finalchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finalchild/subscriptions", "organizations_url": "https://api.github.com/users/finalchild/orgs", "repos_url": "https://api.github.com/users/finalchild/repos", "events_url": "https://api.github.com/users/finalchild/events{/privacy}", "received_events_url": "https://api.github.com/users/finalchild/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6", "html_url": "https://github.com/rust-lang/rust/commit/d6fdf14eb783969b4e20e91d39a97bb56b50f1c6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e76f5711b7b63555b08c1d9f2527577a59ed5506", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80451de390dde969057230345e44adfab21de6b8/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80451de390dde969057230345e44adfab21de6b8/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=80451de390dde969057230345e44adfab21de6b8", "patch": "@@ -1176,7 +1176,7 @@ fn create_lints_for_named_arguments_used_positionally(cx: &mut Context<'_, '_>)\n \n         cx.ecx.buffered_early_lint.push(BufferedEarlyLint {\n             span: MultiSpan::from_span(named_arg.positional_named_arg_span),\n-            msg: msg.clone(),\n+            msg: msg.clone().into(),\n             node_id: ast::CRATE_NODE_ID,\n             lint_id: LintId::of(&NAMED_ARGUMENTS_USED_POSITIONALLY),\n             diagnostic: BuiltinLintDiagnostics::NamedArgumentUsedPositionally {"}, {"sha": "cdb5b3c4284a8d37afc0dd2f6bb7b4f8c3006937", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80451de390dde969057230345e44adfab21de6b8/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80451de390dde969057230345e44adfab21de6b8/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=80451de390dde969057230345e44adfab21de6b8", "patch": "@@ -45,7 +45,7 @@ impl<'a, T: EarlyLintPass> EarlyContextAndPass<'a, T> {\n                 lint_id.lint,\n                 Some(span),\n                 |lint| {\n-                    lint.build(&msg).emit();\n+                    lint.build(msg).emit();\n                 },\n                 diagnostic,\n             );"}, {"sha": "32b653f669bd181fb9583dc2f67894788754fb6e", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80451de390dde969057230345e44adfab21de6b8/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80451de390dde969057230345e44adfab21de6b8/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=80451de390dde969057230345e44adfab21de6b8", "patch": "@@ -9,7 +9,7 @@ pub use self::Level::*;\n use rustc_ast::node_id::{NodeId, NodeMap};\n use rustc_ast::{AttrId, Attribute};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHashKey};\n-use rustc_error_messages::MultiSpan;\n+use rustc_error_messages::{MultiSpan, DiagnosticMessage};\n use rustc_hir::HashStableContext;\n use rustc_hir::HirId;\n use rustc_span::edition::Edition;\n@@ -491,7 +491,7 @@ pub struct BufferedEarlyLint {\n     pub span: MultiSpan,\n \n     /// The lint message.\n-    pub msg: String,\n+    pub msg: DiagnosticMessage,\n \n     /// The `NodeId` of the AST node that generated the lint.\n     pub node_id: NodeId,\n@@ -520,11 +520,11 @@ impl LintBuffer {\n         lint: &'static Lint,\n         node_id: NodeId,\n         span: MultiSpan,\n-        msg: &str,\n+        msg: impl Into<DiagnosticMessage>,\n         diagnostic: BuiltinLintDiagnostics,\n     ) {\n         let lint_id = LintId::of(lint);\n-        let msg = msg.to_string();\n+        let msg = msg.into();\n         self.add_early_lint(BufferedEarlyLint { lint_id, node_id, span, msg, diagnostic });\n     }\n "}]}