{"sha": "b8d577d82dd5cd0b13d493e07418d57ab19ead11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZDU3N2Q4MmRkNWNkMGIxM2Q0OTNlMDc0MThkNTdhYjE5ZWFkMTE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-28T11:00:42Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-28T11:00:42Z"}, "message": "Rustup", "tree": {"sha": "f4d3dd8b2784dc1b1b84ec51da5d9626193f7526", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4d3dd8b2784dc1b1b84ec51da5d9626193f7526"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8d577d82dd5cd0b13d493e07418d57ab19ead11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8d577d82dd5cd0b13d493e07418d57ab19ead11", "html_url": "https://github.com/rust-lang/rust/commit/b8d577d82dd5cd0b13d493e07418d57ab19ead11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8d577d82dd5cd0b13d493e07418d57ab19ead11/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52dec9d20bfd039014b234b71e19ae091eca8f97", "url": "https://api.github.com/repos/rust-lang/rust/commits/52dec9d20bfd039014b234b71e19ae091eca8f97", "html_url": "https://github.com/rust-lang/rust/commit/52dec9d20bfd039014b234b71e19ae091eca8f97"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "3432ce59c7d1a2654860386bbad55517ee84577f", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -149,7 +149,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n                                         if_let_chain!{[\n                                             parent_impl != ast::CRATE_NODE_ID,\n                                             let hir::map::Node::NodeItem(item) = cx.tcx.hir.get(parent_impl),\n-                                            let hir::Item_::ItemImpl(_, _, _, Some(ref trait_ref), _, _) = item.node,\n+                                            let hir::Item_::ItemImpl(_, _, _, _, Some(ref trait_ref), _, _) = item.node,\n                                             trait_ref.path.def.def_id() == trait_id\n                                         ], { return; }}\n                                         implements_trait($cx, $ty, trait_id, &[$rty], None)"}, {"sha": "dc1747fd3eb72b5fa587dc8ba01ecf26be650d74", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -72,7 +72,7 @@ impl LintPass for Derive {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Derive {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n-        if let ItemImpl(_, _, _, Some(ref trait_ref), _, _) = item.node {\n+        if let ItemImpl(_, _, _, _, Some(ref trait_ref), _, _) = item.node {\n             let ty = cx.tcx.type_of(cx.tcx.hir.local_def_id(item.id));\n             let is_automatically_derived = is_automatically_derived(&*item.attrs);\n "}, {"sha": "58d49c6fd238cf9966fc69a8578b2c1efa7b4d4e", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -81,7 +81,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Functions {\n         use rustc::hir::map::Node::*;\n \n         let is_impl = if let Some(NodeItem(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent_node(nodeid)) {\n-            matches!(item.node, hir::ItemImpl(_, _, _, Some(_), _, _) | hir::ItemDefaultImpl(..))\n+            matches!(item.node, hir::ItemImpl(_, _, _, _, Some(_), _, _) | hir::ItemDefaultImpl(..))\n         } else {\n             false\n         };"}, {"sha": "e275787935e0d87b741b8803911ed43f6cd4f78f", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -67,7 +67,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LenZero {\n \n         match item.node {\n             ItemTrait(_, _, _, ref trait_items) => check_trait_items(cx, item, trait_items),\n-            ItemImpl(_, _, _, None, _, ref impl_items) => check_impl_items(cx, item, impl_items),\n+            ItemImpl(_, _, _, _, None, _, ref impl_items) => check_impl_items(cx, item, impl_items),\n             _ => (),\n         }\n     }"}, {"sha": "7e1acd8b673163b14182f842f292676fc82d88d8", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -642,7 +642,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n             let hir::ImplItemKind::Method(ref sig, id) = implitem.node,\n             let Some(first_arg_ty) = sig.decl.inputs.get(0),\n             let Some(first_arg) = iter_input_pats(&sig.decl, cx.tcx.hir.body(id)).next(),\n-            let hir::ItemImpl(_, _, _, None, ref self_ty, _) = item.node,\n+            let hir::ItemImpl(_, _, _, _, None, ref self_ty, _) = item.node,\n         ], {\n             // check missing trait implementations\n             for &(method_name, n_args, self_kind, out_type, trait_name) in &TRAIT_METHODS {"}, {"sha": "64b58b6e2774769c21dac0151bd27cee29f6cc02", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -38,7 +38,7 @@ impl LintPass for Pass {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n         if_let_chain! {[\n-            let ItemImpl(_, _, _, Some(ref trait_ref), _, ref impl_items) = item.node,\n+            let ItemImpl(_, _, _, _, Some(ref trait_ref), _, ref impl_items) = item.node,\n             !is_automatically_derived(&*item.attrs),\n             let Some(eq_trait) = cx.tcx.lang_items.eq_trait(),\n             trait_ref.path.def.def_id() == eq_trait"}, {"sha": "a7f498af5c21f389543611021e99c9aac4303a70", "filename": "clippy_lints/src/print.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprint.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -141,7 +141,7 @@ fn is_in_debug_impl(cx: &LateContext, expr: &Expr) -> bool {\n     if let Some(NodeImplItem(item)) = map.find(map.get_parent(expr.id)) {\n         // `Debug` impl\n         if let Some(NodeItem(item)) = map.find(map.get_parent(item.id)) {\n-            if let ItemImpl(_, _, _, Some(ref tr), _, _) = item.node {\n+            if let ItemImpl(_, _, _, _, Some(ref tr), _, _) = item.node {\n                 return match_path_old(&tr.path, &[\"Debug\"]);\n             }\n         }"}, {"sha": "c4cd1b4bab0ea608e330b640854d5d7fd8f9da98", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -85,7 +85,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for PointerPass {\n     fn check_impl_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx ImplItem) {\n         if let ImplItemKind::Method(ref sig, _) = item.node {\n             if let Some(NodeItem(it)) = cx.tcx.hir.find(cx.tcx.hir.get_parent(item.id)) {\n-                if let ItemImpl(_, _, _, Some(_), _, _) = it.node {\n+                if let ItemImpl(_, _, _, _, Some(_), _, _) = it.node {\n                     return; // ignore trait impls\n                 }\n             }"}, {"sha": "df803473a2a588e1a6d1a43e751973f85cfeba2e", "filename": "clippy_lints/src/serde.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fserde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Fserde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -28,7 +28,7 @@ impl LintPass for Serde {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Serde {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n-        if let ItemImpl(_, _, _, Some(ref trait_ref), _, ref items) = item.node {\n+        if let ItemImpl(_, _, _, _, Some(ref trait_ref), _, ref items) = item.node {\n             let did = trait_ref.path.def.def_id();\n             if let Some(visit_did) = get_trait_def_id(cx, &paths::SERDE_DE_VISITOR) {\n                 if did == visit_did {"}, {"sha": "0c9497752dbd54ce1720fa9b8ced4afc47e9fe12", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -74,7 +74,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypePass {\n     fn check_fn(&mut self, cx: &LateContext, _: FnKind, decl: &FnDecl, _: &Body, _: Span, id: NodeId) {\n         // skip trait implementations, see #605\n         if let Some(map::NodeItem(item)) = cx.tcx.hir.find(cx.tcx.hir.get_parent(id)) {\n-            if let ItemImpl(_, _, _, Some(..), _, _) = item.node {\n+            if let ItemImpl(_, _, _, _, Some(..), _, _) = item.node {\n                 return;\n             }\n         }"}, {"sha": "4a4ddf5f3fc2ea816c771840a0fc9324bb543185", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d577d82dd5cd0b13d493e07418d57ab19ead11/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=b8d577d82dd5cd0b13d493e07418d57ab19ead11", "patch": "@@ -396,10 +396,10 @@ fn print_item(cx: &LateContext, item: &hir::Item) {\n         hir::ItemDefaultImpl(_, ref _trait_ref) => {\n             println!(\"default impl\");\n         },\n-        hir::ItemImpl(_, _, _, Some(ref _trait_ref), _, _) => {\n+        hir::ItemImpl(_, _, _, _, Some(ref _trait_ref), _, _) => {\n             println!(\"trait impl\");\n         },\n-        hir::ItemImpl(_, _, _, None, _, _) => {\n+        hir::ItemImpl(_, _, _, _, None, _, _) => {\n             println!(\"impl\");\n         },\n     }"}]}