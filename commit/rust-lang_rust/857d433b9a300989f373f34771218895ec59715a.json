{"sha": "857d433b9a300989f373f34771218895ec59715a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1N2Q0MzNiOWEzMDA5ODlmMzczZjM0NzcxMjE4ODk1ZWM1OTcxNWE=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-06-03T21:48:52Z"}, "committer": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-06-06T20:11:48Z"}, "message": "Added IteratorUtil::collect", "tree": {"sha": "a58bb0110b7b397672af67861b4e946156d1bd9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a58bb0110b7b397672af67861b4e946156d1bd9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/857d433b9a300989f373f34771218895ec59715a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/857d433b9a300989f373f34771218895ec59715a", "html_url": "https://github.com/rust-lang/rust/commit/857d433b9a300989f373f34771218895ec59715a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/857d433b9a300989f373f34771218895ec59715a/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af2086a2f1914f5e4db8534b6c0784b612f3a33d", "url": "https://api.github.com/repos/rust-lang/rust/commits/af2086a2f1914f5e4db8534b6c0784b612f3a33d", "html_url": "https://github.com/rust-lang/rust/commit/af2086a2f1914f5e4db8534b6c0784b612f3a33d"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "14f161380aadfa5352a9840c6d64483d87bcf953", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/857d433b9a300989f373f34771218895ec59715a/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857d433b9a300989f373f34771218895ec59715a/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=857d433b9a300989f373f34771218895ec59715a", "patch": "@@ -19,6 +19,7 @@ implementing the `Iterator` trait.\n \n use cmp;\n use iter;\n+use iter::FromIter;\n use num::{Zero, One};\n use prelude::*;\n \n@@ -255,6 +256,20 @@ pub trait IteratorUtil<A> {\n     /// ~~~\n     fn to_vec(&mut self) -> ~[A];\n \n+    /// Loops through the entire iterator, collecting all of the elements into\n+    /// a container implementing `FromIter`.\n+    ///\n+    /// # Example\n+    ///\n+    /// ~~~ {.rust}\n+    /// use std::iterator::*;\n+    ///\n+    /// let a = [1, 2, 3, 4, 5];\n+    /// let b: ~[int] = a.iter().transform(|&x| x).collect();\n+    /// assert!(a == b);\n+    /// ~~~\n+    fn collect<B: FromIter<A>>(&mut self) -> B;\n+\n     /// Loops through `n` iterations, returning the `n`th element of the\n     /// iterator.\n     ///\n@@ -419,6 +434,11 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n         iter::to_vec::<A>(|f| self.advance(f))\n     }\n \n+    #[inline(always)]\n+    fn collect<B: FromIter<A>>(&mut self) -> B {\n+        FromIter::from_iter::<A, B>(|f| self.advance(f))\n+    }\n+\n     /// Return the `n`th item yielded by an iterator.\n     #[inline(always)]\n     fn nth(&mut self, mut n: uint) -> Option<A> {\n@@ -1062,6 +1082,13 @@ mod tests {\n         assert_eq!(v.slice(0, 0).iter().transform(|&x| x).min(), None);\n     }\n \n+    #[test]\n+    fn test_collect() {\n+        let a = [1, 2, 3, 4, 5];\n+        let b: ~[int] = a.iter().transform(|&x| x).collect();\n+        assert_eq!(a, b);\n+    }\n+\n     #[test]\n     fn test_all() {\n         let v = ~&[1, 2, 3, 4, 5];"}]}