{"sha": "255231d9edf467a6dbcf30f1ce943e750232012e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NTIzMWQ5ZWRmNDY3YTZkYmNmMzBmMWNlOTQzZTc1MDIzMjAxMmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-04-02T20:41:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-04-02T20:41:25Z"}, "message": "don't read config twice during tests", "tree": {"sha": "7cc116b752f39f9bc67f7420a661c8d1bb1e919f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cc116b752f39f9bc67f7420a661c8d1bb1e919f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/255231d9edf467a6dbcf30f1ce943e750232012e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/255231d9edf467a6dbcf30f1ce943e750232012e", "html_url": "https://github.com/rust-lang/rust/commit/255231d9edf467a6dbcf30f1ce943e750232012e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/255231d9edf467a6dbcf30f1ce943e750232012e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84fb2f402e92976c34c4a60cab5b918d377388fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/84fb2f402e92976c34c4a60cab5b918d377388fb", "html_url": "https://github.com/rust-lang/rust/commit/84fb2f402e92976c34c4a60cab5b918d377388fb"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "7081d73f778ae27ed0d232f294787ec8cabf387b", "filename": "tests/system.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/255231d9edf467a6dbcf30f1ce943e750232012e/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/255231d9edf467a6dbcf30f1ce943e750232012e/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=255231d9edf467a6dbcf30f1ce943e750232012e", "patch": "@@ -74,12 +74,8 @@ fn checkstyle_test() {\n // Helper function for comparing the results of rustfmt\n // to a known output file generated by one of the write modes.\n fn assert_output(source: &str, expected_filename: &str, write_mode: Option<WriteMode>) {\n-    let file_map = run_rustfmt(source.to_string(), write_mode);\n-\n-    let mut config = read_config(&source);\n-    if let Some(write_mode) = write_mode {\n-        config.write_mode = write_mode;\n-    }\n+    let config = read_config(&source, write_mode);\n+    let file_map = run_rustfmt(source.to_string(), &config);\n \n     // Populate output by writing to a vec.\n     let mut out = vec![];\n@@ -180,7 +176,7 @@ fn print_mismatches(result: HashMap<String, Vec<Mismatch>>) {\n     assert!(t.reset().unwrap());\n }\n \n-fn read_config(filename: &str) -> Config {\n+fn read_config(filename: &str, write_mode: Option<WriteMode>) -> Config {\n     let sig_comments = read_significant_comments(&filename);\n     let mut config = get_config(sig_comments.get(\"config\").map(|x| &(*x)[..]));\n \n@@ -192,24 +188,25 @@ fn read_config(filename: &str) -> Config {\n \n     // Don't generate warnings for to-do items.\n     config.report_todo = ReportTactic::Never;\n+\n+    if let Some(mode) = write_mode {\n+        config.write_mode = mode\n+    }\n+\n     config\n }\n \n // Simulate run()\n-fn run_rustfmt(filename: String, write_mode: Option<WriteMode>) -> FileMap {\n-    let mut config = read_config(&filename);\n-    if let Some(write_mode) = write_mode {\n-        config.write_mode = write_mode;\n-    }\n+fn run_rustfmt(filename: String, config: &Config) -> FileMap {\n     format(Path::new(&filename), &config)\n }\n \n pub fn idempotent_check(filename: String,\n                         write_mode: Option<WriteMode>)\n                         -> Result<FormatReport, HashMap<String, Vec<Mismatch>>> {\n     let sig_comments = read_significant_comments(&filename);\n-    let config = read_config(&filename);\n-    let mut file_map = run_rustfmt(filename, write_mode);\n+    let config = read_config(&filename, write_mode);\n+    let mut file_map = run_rustfmt(filename, &config);\n     let format_report = fmt_lines(&mut file_map, &config);\n \n     let mut write_result = HashMap::new();"}]}