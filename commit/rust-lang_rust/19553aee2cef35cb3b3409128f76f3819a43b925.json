{"sha": "19553aee2cef35cb3b3409128f76f3819a43b925", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NTUzYWVlMmNlZjM1Y2IzYjM0MDkxMjhmNzZmMzgxOWE0M2I5MjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-14T14:50:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-14T14:50:27Z"}, "message": "Auto merge of #3657 - roblabla:bugfix-missing-docs-global-asm, r=phansch\n\nMissing docs: don't require documenting Global Asm items.\n\nglobal_asm! items cannot be documented, the lint still gets triggered after adding documentation to the macro invocation. Furthermore, even if we could add documentation to the AST node, rustdoc doesn't render it anyways.\n\nPlayground example: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=5182df182f0ffbbab4c3107e43368ac3", "tree": {"sha": "3a547f66c88f367be1e07847d3a1c310f7451a84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a547f66c88f367be1e07847d3a1c310f7451a84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19553aee2cef35cb3b3409128f76f3819a43b925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19553aee2cef35cb3b3409128f76f3819a43b925", "html_url": "https://github.com/rust-lang/rust/commit/19553aee2cef35cb3b3409128f76f3819a43b925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19553aee2cef35cb3b3409128f76f3819a43b925/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11ba624e38fb81eb05730072f4a2033caee23da2", "url": "https://api.github.com/repos/rust-lang/rust/commits/11ba624e38fb81eb05730072f4a2033caee23da2", "html_url": "https://github.com/rust-lang/rust/commit/11ba624e38fb81eb05730072f4a2033caee23da2"}, {"sha": "79203653d17ae9abcd6ee3af7ce97fded41d6b8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/79203653d17ae9abcd6ee3af7ce97fded41d6b8d", "html_url": "https://github.com/rust-lang/rust/commit/79203653d17ae9abcd6ee3af7ce97fded41d6b8d"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "22084bd12cbed4228ec425449a596471f4af7d6f", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19553aee2cef35cb3b3409128f76f3819a43b925/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19553aee2cef35cb3b3409128f76f3819a43b925/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=19553aee2cef35cb3b3409128f76f3819a43b925", "patch": "@@ -133,12 +133,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ItemKind::Struct(..) => \"a struct\",\n             hir::ItemKind::Trait(..) => \"a trait\",\n             hir::ItemKind::TraitAlias(..) => \"a trait alias\",\n-            hir::ItemKind::GlobalAsm(..) => \"an assembly blob\",\n             hir::ItemKind::Ty(..) => \"a type alias\",\n             hir::ItemKind::Union(..) => \"a union\",\n             hir::ItemKind::Existential(..) => \"an existential type\",\n             hir::ItemKind::ExternCrate(..)\n             | hir::ItemKind::ForeignMod(..)\n+            | hir::ItemKind::GlobalAsm(..)\n             | hir::ItemKind::Impl(..)\n             | hir::ItemKind::Use(..) => return,\n         };"}, {"sha": "e65bce8e783fe6d8aedd02b8f1fc6457b61cdcf6", "filename": "tests/ui/missing-doc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/19553aee2cef35cb3b3409128f76f3819a43b925/tests%2Fui%2Fmissing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19553aee2cef35cb3b3409128f76f3819a43b925/tests%2Fui%2Fmissing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.rs?ref=19553aee2cef35cb3b3409128f76f3819a43b925", "patch": "@@ -2,7 +2,7 @@\n // When denying at the crate level, be sure to not get random warnings from the\n // injected intrinsics by the compiler.\n #![allow(dead_code)]\n-#![feature(associated_type_defaults)]\n+#![feature(associated_type_defaults, global_asm)]\n \n //! Some garbage docs for the crate here\n #![doc = \"More garbage\"]\n@@ -176,3 +176,6 @@ pub mod public_interface {\n }\n \n fn main() {}\n+\n+// Ensure global asm doesn't require documentation.\n+global_asm! { \"\" }"}]}