{"sha": "5734558881353d5f95454f44c81d71c2293d047d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MzQ1NTg4ODEzNTNkNWY5NTQ1NGY0NGM4MWQ3MWMyMjkzZDA0N2Q=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-13T15:05:32Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T07:52:35Z"}, "message": "The future is now", "tree": {"sha": "671f1e8668ce80e03a4c1ccfd5fce6733fa32448", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/671f1e8668ce80e03a4c1ccfd5fce6733fa32448"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5734558881353d5f95454f44c81d71c2293d047d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5734558881353d5f95454f44c81d71c2293d047d", "html_url": "https://github.com/rust-lang/rust/commit/5734558881353d5f95454f44c81d71c2293d047d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5734558881353d5f95454f44c81d71c2293d047d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98bf7376142633a6674668365d4ea47b9c5be287", "url": "https://api.github.com/repos/rust-lang/rust/commits/98bf7376142633a6674668365d4ea47b9c5be287", "html_url": "https://github.com/rust-lang/rust/commit/98bf7376142633a6674668365d4ea47b9c5be287"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "e43ebbffe90aa26df3e0b0f14d93a3feada16e0d", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5734558881353d5f95454f44c81d71c2293d047d/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5734558881353d5f95454f44c81d71c2293d047d/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=5734558881353d5f95454f44c81d71c2293d047d", "patch": "@@ -162,10 +162,6 @@ for\n             // Check if we have encountered this pointer+layout combination before.\n             // Only recurse for allocation-backed pointers.\n             if let Scalar::Ptr(ptr) = mplace.ptr {\n-                // In the future we will probably allow `& &mut T`, and thus will want to merge\n-                // `mutability` with `self.mutability` to only choose `Mutable` if both are\n-                // `Mutable`.\n-\n                 // We do not have any `frozen` logic here, because it's essentially equivalent to\n                 // the mutability except for the outermost item. Only `UnsafeCell` can \"unfreeze\",\n                 // and we check that in `visit_aggregate`."}]}