{"sha": "fba116fc5fb7018faeb1834d42422d7bdbcc4f64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYTExNmZjNWZiNzAxOGZhZWIxODM0ZDQyNDIyZDdiZGJjYzRmNjQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-22T21:50:15Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-11-26T21:30:50Z"}, "message": "Remove duplicate tests for uniform paths", "tree": {"sha": "90f6a6bbef4cbe3f63ff444b9d71f5a11aeba338", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90f6a6bbef4cbe3f63ff444b9d71f5a11aeba338"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fba116fc5fb7018faeb1834d42422d7bdbcc4f64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fba116fc5fb7018faeb1834d42422d7bdbcc4f64", "html_url": "https://github.com/rust-lang/rust/commit/fba116fc5fb7018faeb1834d42422d7bdbcc4f64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fba116fc5fb7018faeb1834d42422d7bdbcc4f64/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "html_url": "https://github.com/rust-lang/rust/commit/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb"}], "stats": {"total": 312, "additions": 0, "deletions": 312}, "files": [{"sha": "4819711115c27a76a5f25123447bd20bf04cb70b", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,29 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// edition:2018\n-\n-// This test is similar to `ambiguity-macros.rs`, but nested in a module.\n-\n-mod foo {\n-    pub use std::io;\n-    //~^ ERROR `std` is ambiguous\n-\n-    macro_rules! m {\n-        () => {\n-            mod std {\n-                pub struct io;\n-            }\n-        }\n-    }\n-    m!();\n-}\n-\n-fn main() {}"}, {"sha": "204e0a7e1411ed4c8437a4c66917e0c6a6913b93", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros-nested.stderr", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros-nested.stderr?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,23 +0,0 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n-  --> $DIR/ambiguity-macros-nested.rs:16:13\n-   |\n-LL |     pub use std::io;\n-   |             ^^^ ambiguous name\n-   |\n-   = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to this extern crate unambiguously\n-note: `std` could also refer to the module defined here\n-  --> $DIR/ambiguity-macros-nested.rs:21:13\n-   |\n-LL | /             mod std {\n-LL | |                 pub struct io;\n-LL | |             }\n-   | |_____________^\n-...\n-LL |       m!();\n-   |       ----- in this macro invocation\n-   = help: use `self::std` to refer to this module unambiguously\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0659`."}, {"sha": "148320de556d30d4633d90afacbccedaf4da14ea", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// edition:2018\n-\n-// This test is similar to `ambiguity.rs`, but with macros defining local items.\n-\n-use std::io;\n-//~^ ERROR `std` is ambiguous\n-\n-macro_rules! m {\n-    () => {\n-        mod std {\n-            pub struct io;\n-        }\n-    }\n-}\n-m!();\n-\n-fn main() {}"}, {"sha": "ac8d3b9d0cbe4d0dc347f35a2c901d89e375f29b", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-macros.stderr", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-macros.stderr?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,23 +0,0 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n-  --> $DIR/ambiguity-macros.rs:15:5\n-   |\n-LL | use std::io;\n-   |     ^^^ ambiguous name\n-   |\n-   = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to this extern crate unambiguously\n-note: `std` could also refer to the module defined here\n-  --> $DIR/ambiguity-macros.rs:20:9\n-   |\n-LL | /         mod std {\n-LL | |             pub struct io;\n-LL | |         }\n-   | |_________^\n-...\n-LL |   m!();\n-   |   ----- in this macro invocation\n-   = help: use `self::std` to refer to this module unambiguously\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0659`."}, {"sha": "2791d4580daf1a476deeff60b98c9cbbe4ab5faf", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-nested.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// edition:2018\n-\n-// This test is similar to `ambiguity.rs`, but nested in a module.\n-\n-mod foo {\n-    pub use std::io;\n-    //~^ ERROR `std` is ambiguous\n-\n-    mod std {\n-        pub struct io;\n-    }\n-}\n-\n-fn main() {}"}, {"sha": "7bcfc563d39fc288da54189a482753efc48e984f", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity-nested.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity-nested.stderr?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,20 +0,0 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n-  --> $DIR/ambiguity-nested.rs:16:13\n-   |\n-LL |     pub use std::io;\n-   |             ^^^ ambiguous name\n-   |\n-   = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to this extern crate unambiguously\n-note: `std` could also refer to the module defined here\n-  --> $DIR/ambiguity-nested.rs:19:5\n-   |\n-LL | /     mod std {\n-LL | |         pub struct io;\n-LL | |     }\n-   | |_____^\n-   = help: use `self::std` to refer to this module unambiguously\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0659`."}, {"sha": "2bfbb6b287153ded300d89545cab2ff528019c5e", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// edition:2018\n-\n-use std::io;\n-//~^ ERROR `std` is ambiguous\n-\n-mod std {\n-    pub struct io;\n-}\n-\n-fn main() {}"}, {"sha": "beeb74654e5b5bc7194dc9c2fba8a68703f7834c", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/ambiguity.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fambiguity.stderr?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,20 +0,0 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n-  --> $DIR/ambiguity.rs:13:5\n-   |\n-LL | use std::io;\n-   |     ^^^ ambiguous name\n-   |\n-   = note: `std` could refer to a built-in extern crate\n-   = help: use `::std` to refer to this extern crate unambiguously\n-note: `std` could also refer to the module defined here\n-  --> $DIR/ambiguity.rs:16:1\n-   |\n-LL | / mod std {\n-LL | |     pub struct io;\n-LL | | }\n-   | |_^\n-   = help: use `self::std` to refer to this module unambiguously\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0659`."}, {"sha": "2853b4b3a5b3f6c9dc4c242df7efe5ab3c95b389", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/block-scoped-shadow.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// edition:2018\n-\n-struct std;\n-\n-fn main() {\n-    fn std() {}\n-    enum std {}\n-    use std as foo;\n-    //~^ ERROR `std` is ambiguous\n-    //~| ERROR `std` is ambiguous\n-}"}, {"sha": "5d539e2d59f1549ca3ba2498cba8236c33662059", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/block-scoped-shadow.stderr", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fblock-scoped-shadow.stderr?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,39 +0,0 @@\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n-  --> $DIR/block-scoped-shadow.rs:18:9\n-   |\n-LL |     use std as foo;\n-   |         ^^^ ambiguous name\n-   |\n-note: `std` could refer to the enum defined here\n-  --> $DIR/block-scoped-shadow.rs:17:5\n-   |\n-LL |     enum std {}\n-   |     ^^^^^^^^^^^\n-note: `std` could also refer to the struct defined here\n-  --> $DIR/block-scoped-shadow.rs:13:1\n-   |\n-LL | struct std;\n-   | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to this struct unambiguously\n-\n-error[E0659]: `std` is ambiguous (name vs any other name during import resolution)\n-  --> $DIR/block-scoped-shadow.rs:18:9\n-   |\n-LL |     use std as foo;\n-   |         ^^^ ambiguous name\n-   |\n-note: `std` could refer to the function defined here\n-  --> $DIR/block-scoped-shadow.rs:16:5\n-   |\n-LL |     fn std() {}\n-   |     ^^^^^^^^^^^\n-note: `std` could also refer to the unit struct defined here\n-  --> $DIR/block-scoped-shadow.rs:13:1\n-   |\n-LL | struct std;\n-   | ^^^^^^^^^^^\n-   = help: use `self::std` to refer to this unit struct unambiguously\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0659`."}, {"sha": "ef2a1e3c70c6f873153f220db5a07d7575df1493", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/issue-54253.rs", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fissue-54253.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fissue-54253.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fissue-54253.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,27 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// edition:2018\n-\n-// Dummy import that previously introduced uniform path canaries.\n-use std;\n-\n-// fn version() -> &'static str {\"\"}\n-\n-mod foo {\n-    // Error wasn't reported, despite `version` being commented out above.\n-    use crate::version; //~ ERROR unresolved import `crate::version`\n-\n-    fn bar() {\n-        version();\n-    }\n-}\n-\n-fn main() {}"}, {"sha": "6dcc451c60a6125c45150ba350febf7ca78fd3d2", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/issue-54253.stderr", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fissue-54253.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fissue-54253.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fissue-54253.stderr?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,9 +0,0 @@\n-error[E0432]: unresolved import `crate::version`\n-  --> $DIR/issue-54253.rs:20:9\n-   |\n-LL |     use crate::version; //~ ERROR unresolved import `crate::version`\n-   |         ^^^^^^^^^^^^^^ no `version` in the root\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0432`."}, {"sha": "05048cfd451050e39382c4bf39b22df15476c412", "filename": "src/test/ui/rust-2018/uniform-paths-forward-compat/redundant.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fredundant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fredundant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths-forward-compat%2Fredundant.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// run-pass\n-// edition:2018\n-\n-use std;\n-use std::io;\n-\n-mod foo {\n-    pub use std as my_std;\n-}\n-\n-mod bar {\n-    pub use std::{self};\n-}\n-\n-fn main() {\n-    io::stdout();\n-    self::std::io::stdout();\n-    foo::my_std::io::stdout();\n-    bar::std::io::stdout();\n-}"}]}