{"sha": "13dfbb64d313137b7d3c33067910e90f27bc6345", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZGZiYjY0ZDMxMzEzN2I3ZDNjMzMwNjc5MTBlOTBmMjdiYzYzNDU=", "commit": {"author": {"name": "Temirkhan Myrzamadi", "email": "hirrolot@gmail.com", "date": "2020-08-06T05:53:09Z"}, "committer": {"name": "Temirkhan Myrzamadi", "email": "hirrolot@gmail.com", "date": "2020-09-30T06:00:59Z"}, "message": "Suggest imports of unresolved macros", "tree": {"sha": "79d989687cb92691590316930b7f781cb130602a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79d989687cb92691590316930b7f781cb130602a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13dfbb64d313137b7d3c33067910e90f27bc6345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13dfbb64d313137b7d3c33067910e90f27bc6345", "html_url": "https://github.com/rust-lang/rust/commit/13dfbb64d313137b7d3c33067910e90f27bc6345", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13dfbb64d313137b7d3c33067910e90f27bc6345/comments", "author": {"login": "Hirrolot", "id": 40539574, "node_id": "MDQ6VXNlcjQwNTM5NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/40539574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hirrolot", "html_url": "https://github.com/Hirrolot", "followers_url": "https://api.github.com/users/Hirrolot/followers", "following_url": "https://api.github.com/users/Hirrolot/following{/other_user}", "gists_url": "https://api.github.com/users/Hirrolot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hirrolot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hirrolot/subscriptions", "organizations_url": "https://api.github.com/users/Hirrolot/orgs", "repos_url": "https://api.github.com/users/Hirrolot/repos", "events_url": "https://api.github.com/users/Hirrolot/events{/privacy}", "received_events_url": "https://api.github.com/users/Hirrolot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Hirrolot", "id": 40539574, "node_id": "MDQ6VXNlcjQwNTM5NTc0", "avatar_url": "https://avatars.githubusercontent.com/u/40539574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hirrolot", "html_url": "https://github.com/Hirrolot", "followers_url": "https://api.github.com/users/Hirrolot/followers", "following_url": "https://api.github.com/users/Hirrolot/following{/other_user}", "gists_url": "https://api.github.com/users/Hirrolot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hirrolot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hirrolot/subscriptions", "organizations_url": "https://api.github.com/users/Hirrolot/orgs", "repos_url": "https://api.github.com/users/Hirrolot/repos", "events_url": "https://api.github.com/users/Hirrolot/events{/privacy}", "received_events_url": "https://api.github.com/users/Hirrolot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ac6c675744ecce378b13a34686bc3095e9ebc72", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ac6c675744ecce378b13a34686bc3095e9ebc72", "html_url": "https://github.com/rust-lang/rust/commit/6ac6c675744ecce378b13a34686bc3095e9ebc72"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "42af8a2fb0edb8a753f831681122e222e894ed54", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13dfbb64d313137b7d3c33067910e90f27bc6345/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13dfbb64d313137b7d3c33067910e90f27bc6345/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=13dfbb64d313137b7d3c33067910e90f27bc6345", "patch": "@@ -929,6 +929,10 @@ impl<'a> Resolver<'a> {\n         );\n         self.add_typo_suggestion(err, suggestion, ident.span);\n \n+        let import_suggestions =\n+            self.lookup_import_candidates(ident, Namespace::MacroNS, parent_scope, |_| true);\n+        show_candidates(err, None, &import_suggestions, false, true);\n+\n         if macro_kind == MacroKind::Derive && (ident.name == sym::Send || ident.name == sym::Sync) {\n             let msg = format!(\"unsafe traits like `{}` should be implemented explicitly\", ident);\n             err.span_note(ident.span, &msg);"}]}