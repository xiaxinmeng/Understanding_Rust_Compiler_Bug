{"sha": "e434f613fddec939f357e5afad79c90b6fc4a7a1", "node_id": "C_kwDOAAsO6NoAKGU0MzRmNjEzZmRkZWM5MzlmMzU3ZTVhZmFkNzljOTBiNmZjNGE3YTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-06T22:13:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-06T22:13:49Z"}, "message": "Rollup merge of #105298 - krasimirgg:llvm-16-dec-1, r=cuviper\n\nllvm-wrapper: adapt for an LLVM API change\n\nAdapts llvm-wrapper for https://github.com/llvm/llvm-project/commit/8c7c20f033c7036a8bf231ca6f9e02172cb581f0.\nNo functional changes intended.\n\nFound via our experimental rust + llvm @ HEAD bot: https://buildkite.com/llvm-project/rust-llvm-integrate-prototype/builds/15404#0184d95d-5a68-4db6-ad32-51ddbc3ab543/202-571", "tree": {"sha": "a779d29d5b394833ef23a82ec26a7ac60730f570", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a779d29d5b394833ef23a82ec26a7ac60730f570"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e434f613fddec939f357e5afad79c90b6fc4a7a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjj76dCRBK7hj4Ov3rIwAA7xkIADXhHs9R2CMOqeABiQR0QxZM\niqtlp/KGzFyWMk8gC074lG5h3IbtkdAvQhP16nS5xAeDYDI3hxC0cMFDttpqqZ5w\n3ao+Mwcbae3MKanMTaAm0cv72UUjCPVHCMaDxW/FrwyWH8LzQSldziGiZs/Wiucx\nTjfUpnmHZl0mCeOtHvTlfuCskF0YUn/wH/2y7EPi6Zu2qxnx9oDuEyUtM2h1GrLa\nIJhvlb02jMey4szJxvlXNLsNVbmuER47akirPsmNfpPDeUWoq4txAqT55jIlkV9W\ngoJld7tYH5EhfoIRFS1PhvtGB+0dmWlUysvyCQ/Pb40o3IPEPg78FqPc0X+Zs94=\n=CURh\n-----END PGP SIGNATURE-----\n", "payload": "tree a779d29d5b394833ef23a82ec26a7ac60730f570\nparent b28d30e1e3c2b90fd08b7dd79d8e63884d1e0339\nparent 75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670364829 +0100\ncommitter GitHub <noreply@github.com> 1670364829 +0100\n\nRollup merge of #105298 - krasimirgg:llvm-16-dec-1, r=cuviper\n\nllvm-wrapper: adapt for an LLVM API change\n\nAdapts llvm-wrapper for https://github.com/llvm/llvm-project/commit/8c7c20f033c7036a8bf231ca6f9e02172cb581f0.\nNo functional changes intended.\n\nFound via our experimental rust + llvm @ HEAD bot: https://buildkite.com/llvm-project/rust-llvm-integrate-prototype/builds/15404#0184d95d-5a68-4db6-ad32-51ddbc3ab543/202-571\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e434f613fddec939f357e5afad79c90b6fc4a7a1", "html_url": "https://github.com/rust-lang/rust/commit/e434f613fddec939f357e5afad79c90b6fc4a7a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e434f613fddec939f357e5afad79c90b6fc4a7a1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b28d30e1e3c2b90fd08b7dd79d8e63884d1e0339", "url": "https://api.github.com/repos/rust-lang/rust/commits/b28d30e1e3c2b90fd08b7dd79d8e63884d1e0339", "html_url": "https://github.com/rust-lang/rust/commit/b28d30e1e3c2b90fd08b7dd79d8e63884d1e0339"}, {"sha": "75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "url": "https://api.github.com/repos/rust-lang/rust/commits/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff", "html_url": "https://github.com/rust-lang/rust/commit/75aec4703dea7ef8e13924ccfa3a3d2e8c5c7cff"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "1a3d458c30067cfce22e11625a5c9e5fa9ccaf53", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e434f613fddec939f357e5afad79c90b6fc4a7a1/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e434f613fddec939f357e5afad79c90b6fc4a7a1/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=e434f613fddec939f357e5afad79c90b6fc4a7a1", "patch": "@@ -205,7 +205,12 @@ enum class LLVMRustCodeModel {\n   None,\n };\n \n-static Optional<CodeModel::Model> fromRust(LLVMRustCodeModel Model) {\n+#if LLVM_VERSION_LT(16, 0)\n+static Optional<CodeModel::Model>\n+#else\n+static std::optional<CodeModel::Model>\n+#endif\n+fromRust(LLVMRustCodeModel Model) {\n   switch (Model) {\n   case LLVMRustCodeModel::Tiny:\n     return CodeModel::Tiny;\n@@ -638,7 +643,11 @@ LLVMRustOptimize(\n     LLVMSelfProfileInitializeCallbacks(PIC,LlvmSelfProfiler,BeforePassCallback,AfterPassCallback);\n   }\n \n+#if LLVM_VERSION_LT(16, 0)\n   Optional<PGOOptions> PGOOpt;\n+#else\n+  std::optional<PGOOptions> PGOOpt;\n+#endif\n   if (PGOGenPath) {\n     assert(!PGOUsePath && !PGOSampleUsePath);\n     PGOOpt = PGOOptions(PGOGenPath, \"\", \"\", PGOOptions::IRInstr,"}, {"sha": "3a748f38995bbc77bf8102379e227ab4a922d2f4", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e434f613fddec939f357e5afad79c90b6fc4a7a1/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e434f613fddec939f357e5afad79c90b6fc4a7a1/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=e434f613fddec939f357e5afad79c90b6fc4a7a1", "patch": "@@ -17,7 +17,9 @@\n #include \"llvm/Pass.h\"\n #include \"llvm/Bitcode/BitcodeWriter.h\"\n #include \"llvm/Support/Signals.h\"\n+#if LLVM_VERSION_LT(16, 0)\n #include \"llvm/ADT/Optional.h\"\n+#endif\n \n #include <iostream>\n \n@@ -708,7 +710,11 @@ enum class LLVMRustChecksumKind {\n   SHA256,\n };\n \n+#if LLVM_VERSION_LT(16, 0)\n static Optional<DIFile::ChecksumKind> fromRust(LLVMRustChecksumKind Kind) {\n+#else\n+static std::optional<DIFile::ChecksumKind> fromRust(LLVMRustChecksumKind Kind) {\n+#endif\n   switch (Kind) {\n   case LLVMRustChecksumKind::None:\n     return None;\n@@ -787,8 +793,18 @@ extern \"C\" LLVMMetadataRef LLVMRustDIBuilderCreateFile(\n     const char *Filename, size_t FilenameLen,\n     const char *Directory, size_t DirectoryLen, LLVMRustChecksumKind CSKind,\n     const char *Checksum, size_t ChecksumLen) {\n+\n+#if LLVM_VERSION_LT(16, 0)\n   Optional<DIFile::ChecksumKind> llvmCSKind = fromRust(CSKind);\n+#else\n+  std::optional<DIFile::ChecksumKind> llvmCSKind = fromRust(CSKind);\n+#endif\n+\n+#if LLVM_VERSION_LT(16, 0)\n   Optional<DIFile::ChecksumInfo<StringRef>> CSInfo{};\n+#else\n+  std::optional<DIFile::ChecksumInfo<StringRef>> CSInfo{};\n+#endif\n   if (llvmCSKind)\n     CSInfo.emplace(*llvmCSKind, StringRef{Checksum, ChecksumLen});\n   return wrap(Builder->createFile(StringRef(Filename, FilenameLen),"}]}