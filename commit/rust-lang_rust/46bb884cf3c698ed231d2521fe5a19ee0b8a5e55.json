{"sha": "46bb884cf3c698ed231d2521fe5a19ee0b8a5e55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YmI4ODRjZjNjNjk4ZWQyMzFkMjUyMWZlNWExOWVlMGI4YTVlNTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-19T09:47:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-19T09:47:47Z"}, "message": "Rollup merge of #76525 - fusion-engineering-forks:string-drain, r=dtolnay\n\nAdd as_str() to string::Drain.\n\nVec's Drain recently [had its `.as_slice()` stabilized](https://github.com/rust-lang/rust/pull/72584), but String's Drain was still missing the analogous `.as_str()`. This adds that.\n\nAlso improves the Debug implementation, which now shows the remaining data instead of just `\"Drain { .. }\"`.", "tree": {"sha": "2532a205ff8dbadbcbb933f26350d4e4f8e886ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2532a205ff8dbadbcbb933f26350d4e4f8e886ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46bb884cf3c698ed231d2521fe5a19ee0b8a5e55", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfZdPDCRBK7hj4Ov3rIwAAdHIIADMeEEPl/jKDb+to+2e7GoEK\nM4EQq5G+Z1AUw3Nnn7Dzk5BxIAsFJim5MUSPT8FrqPkhWQZeXIgvl+zezUjWIwEK\nD8LI1akCgr8eCkSAMfU3htT2mm+QMbPfBfw8Um059++EIrcU7oyJmILAKUemj9Pu\nknpZT6ycToTPSAwXLFZNgd9aJmNSe9aJa+qRjETayptOkHWRDlW1jxKGMqkvEaO/\n7pvItElgUS2km/VytVf1ayA5O0RpH4MnAVVl4APEkzcHKMQa9MZrNmmjiD2PA7vm\nZBdVXoTZv2QAJzG1FcMEgt6JNFZwKew49W5wlkMhXbXRYaFChoQSbIsb56JZTz8=\n=Aa4q\n-----END PGP SIGNATURE-----\n", "payload": "tree 2532a205ff8dbadbcbb933f26350d4e4f8e886ca\nparent fef332404341e89e4fe09416d01d82a99f7e8c5f\nparent 15eb638dc9c9f663ab9e596a838c33821ae7f772\nauthor Ralf Jung <post@ralfj.de> 1600508867 +0200\ncommitter GitHub <noreply@github.com> 1600508867 +0200\n\nRollup merge of #76525 - fusion-engineering-forks:string-drain, r=dtolnay\n\nAdd as_str() to string::Drain.\n\nVec's Drain recently [had its `.as_slice()` stabilized](https://github.com/rust-lang/rust/pull/72584), but String's Drain was still missing the analogous `.as_str()`. This adds that.\n\nAlso improves the Debug implementation, which now shows the remaining data instead of just `\"Drain { .. }\"`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46bb884cf3c698ed231d2521fe5a19ee0b8a5e55", "html_url": "https://github.com/rust-lang/rust/commit/46bb884cf3c698ed231d2521fe5a19ee0b8a5e55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46bb884cf3c698ed231d2521fe5a19ee0b8a5e55/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef332404341e89e4fe09416d01d82a99f7e8c5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef332404341e89e4fe09416d01d82a99f7e8c5f", "html_url": "https://github.com/rust-lang/rust/commit/fef332404341e89e4fe09416d01d82a99f7e8c5f"}, {"sha": "15eb638dc9c9f663ab9e596a838c33821ae7f772", "url": "https://api.github.com/repos/rust-lang/rust/commits/15eb638dc9c9f663ab9e596a838c33821ae7f772", "html_url": "https://github.com/rust-lang/rust/commit/15eb638dc9c9f663ab9e596a838c33821ae7f772"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "d3598ccfce81f341e319dc7ccb61489de0b7c8a8", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/46bb884cf3c698ed231d2521fe5a19ee0b8a5e55/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46bb884cf3c698ed231d2521fe5a19ee0b8a5e55/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=46bb884cf3c698ed231d2521fe5a19ee0b8a5e55", "patch": "@@ -2440,7 +2440,7 @@ pub struct Drain<'a> {\n #[stable(feature = \"collection_debug\", since = \"1.17.0\")]\n impl fmt::Debug for Drain<'_> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.pad(\"Drain { .. }\")\n+        f.debug_tuple(\"Drain\").field(&self.as_str()).finish()\n     }\n }\n \n@@ -2463,6 +2463,40 @@ impl Drop for Drain<'_> {\n     }\n }\n \n+impl<'a> Drain<'a> {\n+    /// Returns the remaining (sub)string of this iterator as a slice.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(string_drain_as_str)]\n+    /// let mut s = String::from(\"abc\");\n+    /// let mut drain = s.drain(..);\n+    /// assert_eq!(drain.as_str(), \"abc\");\n+    /// let _ = drain.next().unwrap();\n+    /// assert_eq!(drain.as_str(), \"bc\");\n+    /// ```\n+    #[unstable(feature = \"string_drain_as_str\", issue = \"76905\")] // Note: uncomment AsRef impls below when stabilizing.\n+    pub fn as_str(&self) -> &str {\n+        self.iter.as_str()\n+    }\n+}\n+\n+// Uncomment when stabilizing `string_drain_as_str`.\n+// #[unstable(feature = \"string_drain_as_str\", issue = \"76905\")]\n+// impl<'a> AsRef<str> for Drain<'a> {\n+//     fn as_ref(&self) -> &str {\n+//         self.as_str()\n+//     }\n+// }\n+//\n+// #[unstable(feature = \"string_drain_as_str\", issue = \"76905\")]\n+// impl<'a> AsRef<[u8]> for Drain<'a> {\n+//     fn as_ref(&self) -> &[u8] {\n+//         self.as_str().as_bytes()\n+//     }\n+// }\n+\n #[stable(feature = \"drain\", since = \"1.6.0\")]\n impl Iterator for Drain<'_> {\n     type Item = char;"}]}