{"sha": "36ad34d343c364f9d9570d5bea4d253882577f4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YWQzNGQzNDNjMzY0ZjlkOTU3MGQ1YmVhNGQyNTM4ODI1NzdmNGU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-25T01:40:47Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-26T18:21:06Z"}, "message": "save-analysis: get tables directly, accomodating them being missing\n\nFixes an ICE when running with save-analsysis after an error", "tree": {"sha": "d13da683d92c9e95129eff19f75583af43e1cf0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d13da683d92c9e95129eff19f75583af43e1cf0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36ad34d343c364f9d9570d5bea4d253882577f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36ad34d343c364f9d9570d5bea4d253882577f4e", "html_url": "https://github.com/rust-lang/rust/commit/36ad34d343c364f9d9570d5bea4d253882577f4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36ad34d343c364f9d9570d5bea4d253882577f4e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "491b978822a56f23acf9ba46f90861958bc1e36c", "url": "https://api.github.com/repos/rust-lang/rust/commits/491b978822a56f23acf9ba46f90861958bc1e36c", "html_url": "https://github.com/rust-lang/rust/commit/491b978822a56f23acf9ba46f90861958bc1e36c"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "f128167bbf621b50e074a27a3d34bd2227ddaf70", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/36ad34d343c364f9d9570d5bea4d253882577f4e/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36ad34d343c364f9d9570d5bea4d253882577f4e/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=36ad34d343c364f9d9570d5bea4d253882577f4e", "patch": "@@ -111,11 +111,16 @@ impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> {\n     fn nest_tables<F>(&mut self, item_id: NodeId, f: F)\n         where F: FnOnce(&mut DumpVisitor<'l, 'tcx, 'll, D>)\n     {\n-        let old_tables = self.save_ctxt.tables;\n         let item_def_id = self.tcx.hir.local_def_id(item_id);\n-        self.save_ctxt.tables = self.tcx.item_tables(item_def_id);\n-        f(self);\n-        self.save_ctxt.tables = old_tables;\n+        match self.tcx.tables.borrow().get(&item_def_id) {\n+            Some(tables) => {\n+                let old_tables = self.save_ctxt.tables;\n+                self.save_ctxt.tables = tables;\n+                f(self);\n+                self.save_ctxt.tables = old_tables;\n+            }\n+            None => f(self),\n+        }\n     }\n \n     pub fn dump_crate_info(&mut self, name: &str, krate: &ast::Crate) {"}]}