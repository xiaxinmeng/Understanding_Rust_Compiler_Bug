{"sha": "944f30bd694be71d76e1a175033e19409fe9f8b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NGYzMGJkNjk0YmU3MWQ3NmUxYTE3NTAzM2UxOTQwOWZlOWY4YjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-08T13:28:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-08T13:28:21Z"}, "message": "Open Cargo.toml opens more specific manifest", "tree": {"sha": "7e5f94903cf0777c37789d94d0d3cc251e1834cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e5f94903cf0777c37789d94d0d3cc251e1834cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/944f30bd694be71d76e1a175033e19409fe9f8b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/944f30bd694be71d76e1a175033e19409fe9f8b4", "html_url": "https://github.com/rust-lang/rust/commit/944f30bd694be71d76e1a175033e19409fe9f8b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/944f30bd694be71d76e1a175033e19409fe9f8b4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2", "html_url": "https://github.com/rust-lang/rust/commit/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "8a8b4a32cb4f416a41f44cd5e4566292703f3a28", "filename": "crates/rust-analyzer/src/cargo_target_spec.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/944f30bd694be71d76e1a175033e19409fe9f8b4/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944f30bd694be71d76e1a175033e19409fe9f8b4/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcargo_target_spec.rs?ref=944f30bd694be71d76e1a175033e19409fe9f8b4", "patch": "@@ -14,6 +14,7 @@ use crate::{global_state::GlobalStateSnapshot, Result};\n #[derive(Clone)]\n pub(crate) struct CargoTargetSpec {\n     pub(crate) workspace_root: AbsPathBuf,\n+    pub(crate) cargo_toml: AbsPathBuf,\n     pub(crate) package: String,\n     pub(crate) target: String,\n     pub(crate) target_kind: TargetKind,\n@@ -115,12 +116,17 @@ impl CargoTargetSpec {\n             Some(it) => it,\n             None => return Ok(None),\n         };\n+\n+        let target_data = &cargo_ws[target];\n+        let package_data = &cargo_ws[target_data.package];\n         let res = CargoTargetSpec {\n             workspace_root: cargo_ws.workspace_root().to_path_buf(),\n-            package: cargo_ws.package_flag(&cargo_ws[cargo_ws[target].package]),\n-            target: cargo_ws[target].name.clone(),\n-            target_kind: cargo_ws[target].kind,\n+            cargo_toml: package_data.manifest.clone(),\n+            package: cargo_ws.package_flag(&package_data),\n+            target: target_data.name.clone(),\n+            target_kind: target_data.kind,\n         };\n+\n         Ok(Some(res))\n     }\n "}, {"sha": "6250171bab1cecb9509887f9c15aca025f9ffe2b", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/944f30bd694be71d76e1a175033e19409fe9f8b4/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944f30bd694be71d76e1a175033e19409fe9f8b4/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=944f30bd694be71d76e1a175033e19409fe9f8b4", "patch": "@@ -1342,13 +1342,9 @@ pub(crate) fn handle_open_cargo_toml(\n         None => return Ok(None),\n     };\n \n-    let cargo_toml_path = cargo_spec.workspace_root.join(\"Cargo.toml\");\n-    if !cargo_toml_path.exists() {\n-        return Ok(None);\n-    }\n-    let cargo_toml_url = to_proto::url_from_abs_path(&cargo_toml_path);\n-    let cargo_toml_location = Location::new(cargo_toml_url, Range::default());\n-    let res = lsp_types::GotoDefinitionResponse::from(cargo_toml_location);\n+    let cargo_toml_url = to_proto::url_from_abs_path(&cargo_spec.cargo_toml);\n+    let res: lsp_types::GotoDefinitionResponse =\n+        Location::new(cargo_toml_url, Range::default()).into();\n     Ok(Some(res))\n }\n "}]}