{"sha": "c3151c65c6a353080fbe8e901c7b540547d3d11a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTUxYzY1YzZhMzUzMDgwZmJlOGU5MDFjN2I1NDA1NDdkM2QxMWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-02T10:31:05Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-02T10:31:05Z"}, "message": "Fix rustdoc", "tree": {"sha": "ae42ec5e167e8850cf780c794b70d06389a266f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae42ec5e167e8850cf780c794b70d06389a266f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3151c65c6a353080fbe8e901c7b540547d3d11a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3151c65c6a353080fbe8e901c7b540547d3d11a", "html_url": "https://github.com/rust-lang/rust/commit/c3151c65c6a353080fbe8e901c7b540547d3d11a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3151c65c6a353080fbe8e901c7b540547d3d11a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a1ea44bdc5a8fd1723686020c1bbe7f4da86d1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a1ea44bdc5a8fd1723686020c1bbe7f4da86d1d", "html_url": "https://github.com/rust-lang/rust/commit/2a1ea44bdc5a8fd1723686020c1bbe7f4da86d1d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "b32e76a6f2e382c77dea8684f7990736149d4719", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3151c65c6a353080fbe8e901c7b540547d3d11a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3151c65c6a353080fbe8e901c7b540547d3d11a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c3151c65c6a353080fbe8e901c7b540547d3d11a", "patch": "@@ -2416,6 +2416,14 @@ impl Clean<Type> for hir::Ty {\n                 Array(box ty.clean(cx), length)\n             },\n             TyKind::Tup(ref tys) => Tuple(tys.clean(cx)),\n+            TyKind::Def(item_id, _) => {\n+                let item = cx.tcx.hir.expect_item(item_id.id);\n+                if let hir::ItemKind::Existential(ref ty) = item.node {\n+                    ImplTrait(ty.bounds.clean(cx))\n+                } else {\n+                    unreachable!()\n+                }\n+            }\n             TyKind::Path(hir::QPath::Resolved(None, ref path)) => {\n                 if let Some(new_ty) = cx.ty_substs.borrow().get(&path.def).cloned() {\n                     return new_ty;\n@@ -2425,14 +2433,6 @@ impl Clean<Type> for hir::Ty {\n                     if let Some(bounds) = cx.impl_trait_bounds.borrow_mut().remove(&did) {\n                         return ImplTrait(bounds);\n                     }\n-                } else if let Def::Existential(did) = path.def {\n-                    // This block is for returned impl trait only.\n-                    if let Some(node_id) = cx.tcx.hir.as_local_node_id(did) {\n-                        let item = cx.tcx.hir.expect_item(node_id);\n-                        if let hir::ItemKind::Existential(ref ty) = item.node {\n-                            return ImplTrait(ty.bounds.clean(cx));\n-                        }\n-                    }\n                 }\n \n                 let mut alias = None;"}]}