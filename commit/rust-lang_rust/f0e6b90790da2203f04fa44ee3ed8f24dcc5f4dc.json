{"sha": "f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTZiOTA3OTBkYTIyMDNmMDRmYTQ0ZWUzZWQ4ZjI0ZGNjNWY0ZGM=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-11-03T23:24:59Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-11-04T00:00:55Z"}, "message": "Link the tracking issue for TrustedLen", "tree": {"sha": "a1a62f10a4eca96852b88276aaaf9405643d6d4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1a62f10a4eca96852b88276aaaf9405643d6d4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "html_url": "https://github.com/rust-lang/rust/commit/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dc9db541e810839f4193fee43c62ebefbe6f260", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc9db541e810839f4193fee43c62ebefbe6f260", "html_url": "https://github.com/rust-lang/rust/commit/5dc9db541e810839f4193fee43c62ebefbe6f260"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "053dcd8272e29389f160733216bc96258f2410e7", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "patch": "@@ -1931,7 +1931,7 @@ impl<T> ExactSizeIterator for IntoIter<T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<T> FusedIterator for IntoIter<T> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<T> TrustedLen for IntoIter<T> {}\n \n #[stable(feature = \"vec_into_iter_clone\", since = \"1.8.0\")]"}, {"sha": "58d04218e072c58be8cc388e0ab0e5adfecd9b89", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "patch": "@@ -328,7 +328,7 @@ pub use self::traits::{FromIterator, IntoIterator, DoubleEndedIterator, Extend};\n pub use self::traits::{ExactSizeIterator, Sum, Product};\n #[unstable(feature = \"fused\", issue = \"35602\")]\n pub use self::traits::FusedIterator;\n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n pub use self::traits::TrustedLen;\n \n mod iterator;\n@@ -374,7 +374,7 @@ impl<I> ExactSizeIterator for Rev<I>\n impl<I> FusedIterator for Rev<I>\n     where I: FusedIterator + DoubleEndedIterator {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<I> TrustedLen for Rev<I>\n     where I: TrustedLen + DoubleEndedIterator {}\n \n@@ -438,7 +438,7 @@ unsafe impl<'a, I, T: 'a> TrustedRandomAccess for Cloned<I>\n     fn may_have_side_effect() -> bool { true }\n }\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, I, T: 'a> TrustedLen for Cloned<I>\n     where I: TrustedLen<Item=&'a T>,\n           T: Clone\n@@ -654,7 +654,7 @@ impl<A, B> FusedIterator for Chain<A, B>\n           B: FusedIterator<Item=A::Item>,\n {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<A, B> TrustedLen for Chain<A, B>\n     where A: TrustedLen, B: TrustedLen<Item=A::Item>,\n {}\n@@ -876,7 +876,7 @@ unsafe impl<A, B> TrustedRandomAccess for Zip<A, B>\n impl<A, B> FusedIterator for Zip<A, B>\n     where A: FusedIterator, B: FusedIterator, {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<A, B> TrustedLen for Zip<A, B>\n     where A: TrustedLen, B: TrustedLen,\n {}\n@@ -981,7 +981,7 @@ impl<B, I: ExactSizeIterator, F> ExactSizeIterator for Map<I, F>\n impl<B, I: FusedIterator, F> FusedIterator for Map<I, F>\n     where F: FnMut(I::Item) -> B {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<B, I, F> TrustedLen for Map<I, F>\n     where I: TrustedLen,\n           F: FnMut(I::Item) -> B {}\n@@ -1222,7 +1222,7 @@ unsafe impl<I> TrustedRandomAccess for Enumerate<I>\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<I> FusedIterator for Enumerate<I> where I: FusedIterator {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<I> TrustedLen for Enumerate<I>\n     where I: TrustedLen,\n {}"}, {"sha": "7c96be2facb485a38171167448751db6c63fd4b5", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "patch": "@@ -482,7 +482,7 @@ macro_rules! range_incl_exact_iter_impl {\n \n macro_rules! range_trusted_len_impl {\n     ($($t:ty)*) => ($(\n-        #[unstable(feature = \"trusted_len\", issue = \"0\")]\n+        #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n         unsafe impl TrustedLen for ops::Range<$t> { }\n     )*)\n }"}, {"sha": "2b0dd63a5714a61416ee2b8d712149dde8a14dc0", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "patch": "@@ -679,8 +679,8 @@ impl<'a, I: FusedIterator + ?Sized> FusedIterator for &'a mut I {}\n ///\n /// This trait must only be implemented when the contract is upheld.\n /// Consumers of this trait must inspect `.size_hint()`\u2019s upper bound.\n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n pub unsafe trait TrustedLen : Iterator {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, I: TrustedLen + ?Sized> TrustedLen for &'a mut I {}"}, {"sha": "063adc2ac9f8a039c131bbc3978c836bc0afc8cd", "filename": "src/libcore/option.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "patch": "@@ -834,7 +834,7 @@ impl<'a, A> ExactSizeIterator for Iter<'a, A> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, A> FusedIterator for Iter<'a, A> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, A> TrustedLen for Iter<'a, A> {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -872,7 +872,7 @@ impl<'a, A> ExactSizeIterator for IterMut<'a, A> {}\n \n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, A> FusedIterator for IterMut<'a, A> {}\n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, A> TrustedLen for IterMut<'a, A> {}\n \n /// An iterator over the item contained inside an [`Option`].\n@@ -904,7 +904,7 @@ impl<A> ExactSizeIterator for IntoIter<A> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<A> FusedIterator for IntoIter<A> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<A> TrustedLen for IntoIter<A> {}\n \n /////////////////////////////////////////////////////////////////////////////"}, {"sha": "bae1eda7c4a9b0cb271a3aa1f9f4c049b7fb0a11", "filename": "src/libcore/result.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "patch": "@@ -886,7 +886,7 @@ impl<'a, T> ExactSizeIterator for Iter<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for Iter<'a, T> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, A> TrustedLen for Iter<'a, A> {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -927,7 +927,7 @@ impl<'a, T> ExactSizeIterator for IterMut<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for IterMut<'a, T> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, A> TrustedLen for IterMut<'a, A> {}\n \n /// An iterator over the value in a [`Ok`] variant of a [`Result`]. This struct is\n@@ -967,7 +967,7 @@ impl<T> ExactSizeIterator for IntoIter<T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<T> FusedIterator for IntoIter<T> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<A> TrustedLen for IntoIter<A> {}\n \n /////////////////////////////////////////////////////////////////////////////"}, {"sha": "871b63145ca6d24c8981bae053aadc54bfee7a6c", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=f0e6b90790da2203f04fa44ee3ed8f24dcc5f4dc", "patch": "@@ -988,7 +988,7 @@ impl<'a, T> ExactSizeIterator for Iter<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for Iter<'a, T> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, T> TrustedLen for Iter<'a, T> {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1112,7 +1112,7 @@ impl<'a, T> ExactSizeIterator for IterMut<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for IterMut<'a, T> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<'a, T> TrustedLen for IterMut<'a, T> {}\n \n /// An internal abstraction over the splitting iterators, so that"}]}