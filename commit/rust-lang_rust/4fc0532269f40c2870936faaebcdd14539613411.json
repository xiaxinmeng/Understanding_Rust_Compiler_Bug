{"sha": "4fc0532269f40c2870936faaebcdd14539613411", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYzA1MzIyNjlmNDBjMjg3MDkzNmZhYWViY2RkMTQ1Mzk2MTM0MTE=", "commit": {"author": {"name": "David Ross", "email": "daboross@daboross.net", "date": "2020-02-16T00:18:20Z"}, "committer": {"name": "David Ross", "email": "daboross@daboross.net", "date": "2020-02-16T03:51:02Z"}, "message": "Type ascription outputs a Type, not Cast\n\nPreviously this just errored out on all usages of type ascription,\nwhich isn't helpful.", "tree": {"sha": "4a1db5530fb83dd6f38aee1fc1fa517efbeb8522", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a1db5530fb83dd6f38aee1fc1fa517efbeb8522"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fc0532269f40c2870936faaebcdd14539613411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc0532269f40c2870936faaebcdd14539613411", "html_url": "https://github.com/rust-lang/rust/commit/4fc0532269f40c2870936faaebcdd14539613411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fc0532269f40c2870936faaebcdd14539613411/comments", "author": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ce9b80c0f93e54bc83f6cb15942ecdce31c3e6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce9b80c0f93e54bc83f6cb15942ecdce31c3e6a", "html_url": "https://github.com/rust-lang/rust/commit/5ce9b80c0f93e54bc83f6cb15942ecdce31c3e6a"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "645e680d15f4844ba2165d5f340ee159eca5dbe2", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fc0532269f40c2870936faaebcdd14539613411/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc0532269f40c2870936faaebcdd14539613411/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=4fc0532269f40c2870936faaebcdd14539613411", "patch": "@@ -645,7 +645,9 @@ impl<'a> Parser<'a> {\n \n         // Check if an illegal postfix operator has been added after the cast.\n         // If the resulting expression is not a cast, or has a different memory location, it is an illegal postfix operator.\n-        if !matches!(with_postfix.kind, ExprKind::Cast(_, _)) || after_hash != before_hash {\n+        if !matches!(with_postfix.kind, ExprKind::Cast(_, _) | ExprKind::Type(_, _))\n+            || after_hash != before_hash\n+        {\n             let expr_str = self.span_to_snippet(span);\n \n             let msg = format!("}]}