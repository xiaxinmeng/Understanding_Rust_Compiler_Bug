{"sha": "43315bc15e274d62b7bb239488066a21d40b4269", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMzE1YmMxNWUyNzRkNjJiN2JiMjM5NDg4MDY2YTIxZDQwYjQyNjk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-02T02:12:29Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-03T21:59:36Z"}, "message": "Adjust tests wrt. 'async_closure' feature gate.", "tree": {"sha": "ca9987a8ceae93d9ff0096d20b9a79a84611367f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca9987a8ceae93d9ff0096d20b9a79a84611367f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43315bc15e274d62b7bb239488066a21d40b4269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43315bc15e274d62b7bb239488066a21d40b4269", "html_url": "https://github.com/rust-lang/rust/commit/43315bc15e274d62b7bb239488066a21d40b4269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43315bc15e274d62b7bb239488066a21d40b4269/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb7fbb99a293e39793a2d6497a472cce107baf56", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7fbb99a293e39793a2d6497a472cce107baf56", "html_url": "https://github.com/rust-lang/rust/commit/bb7fbb99a293e39793a2d6497a472cce107baf56"}], "stats": {"total": 282, "additions": 206, "deletions": 76}, "files": [{"sha": "29622c9d030a3514aeb93ed46ee16097aec0e356", "filename": "src/test/ui/async-await/async-await.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-await.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -70,13 +70,6 @@ fn async_nonmove_block(x: u8) -> impl Future<Output = u8> {\n     }\n }\n \n-fn async_closure(x: u8) -> impl Future<Output = u8> {\n-    (async move |x: u8| -> u8 {\n-        wake_and_yield_once().await;\n-        x\n-    })(x)\n-}\n-\n async fn async_fn(x: u8) -> u8 {\n     wake_and_yield_once().await;\n     x\n@@ -180,7 +173,6 @@ fn main() {\n     test! {\n         async_block,\n         async_nonmove_block,\n-        async_closure,\n         async_fn,\n         generic_async_fn,\n         async_fn_with_internal_borrow,"}, {"sha": "90bd51ec5d0d2cc5cc23f57c723f8cf953e55fed", "filename": "src/test/ui/async-await/async-closure-matches-expr.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure-matches-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure-matches-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure-matches-expr.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,12 @@\n+// compile-pass\n+// edition:2018\n+\n+#![feature(async_await, async_closure)]\n+\n+macro_rules! match_expr {\n+    ($x:expr) => {}\n+}\n+\n+fn main() {\n+    match_expr!(async || {});\n+}"}, {"sha": "f5dc9e24d2d86d0662f8f1305191c9bbea28e2f8", "filename": "src/test/ui/async-await/async-closure.rs", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-closure.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,81 @@\n+// run-pass\n+\n+// edition:2018\n+// aux-build:arc_wake.rs\n+\n+#![feature(async_await, async_closure)]\n+\n+extern crate arc_wake;\n+\n+use std::pin::Pin;\n+use std::future::Future;\n+use std::sync::{\n+    Arc,\n+    atomic::{self, AtomicUsize},\n+};\n+use std::task::{Context, Poll};\n+use arc_wake::ArcWake;\n+\n+struct Counter {\n+    wakes: AtomicUsize,\n+}\n+\n+impl ArcWake for Counter {\n+    fn wake(self: Arc<Self>) {\n+        Self::wake_by_ref(&self)\n+    }\n+    fn wake_by_ref(arc_self: &Arc<Self>) {\n+        arc_self.wakes.fetch_add(1, atomic::Ordering::SeqCst);\n+    }\n+}\n+\n+struct WakeOnceThenComplete(bool);\n+\n+fn wake_and_yield_once() -> WakeOnceThenComplete { WakeOnceThenComplete(false) }\n+\n+impl Future for WakeOnceThenComplete {\n+    type Output = ();\n+    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {\n+        if self.0 {\n+            Poll::Ready(())\n+        } else {\n+            cx.waker().wake_by_ref();\n+            self.0 = true;\n+            Poll::Pending\n+        }\n+    }\n+}\n+\n+fn async_closure(x: u8) -> impl Future<Output = u8> {\n+    (async move |x: u8| -> u8 {\n+        wake_and_yield_once().await;\n+        x\n+    })(x)\n+}\n+\n+fn test_future_yields_once_then_returns<F, Fut>(f: F)\n+where\n+    F: FnOnce(u8) -> Fut,\n+    Fut: Future<Output = u8>,\n+{\n+    let mut fut = Box::pin(f(9));\n+    let counter = Arc::new(Counter { wakes: AtomicUsize::new(0) });\n+    let waker = ArcWake::into_waker(counter.clone());\n+    let mut cx = Context::from_waker(&waker);\n+    assert_eq!(0, counter.wakes.load(atomic::Ordering::SeqCst));\n+    assert_eq!(Poll::Pending, fut.as_mut().poll(&mut cx));\n+    assert_eq!(1, counter.wakes.load(atomic::Ordering::SeqCst));\n+    assert_eq!(Poll::Ready(9), fut.as_mut().poll(&mut cx));\n+}\n+\n+fn main() {\n+    macro_rules! test {\n+        ($($fn_name:expr,)*) => { $(\n+            test_future_yields_once_then_returns($fn_name);\n+        )* }\n+    }\n+\n+    test! {\n+        async_closure,\n+    }\n+}"}, {"sha": "5fb584b0e2c63d4b6f23630844b01d17c4b5a2c9", "filename": "src/test/ui/async-await/async-matches-expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-matches-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fasync-matches-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-matches-expr.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -1,13 +1,12 @@\n // compile-pass\n // edition:2018\n \n-#![feature(async_await, await_macro)]\n+#![feature(async_await)]\n \n macro_rules! match_expr {\n     ($x:expr) => {}\n }\n \n fn main() {\n     match_expr!(async {});\n-    match_expr!(async || {});\n }"}, {"sha": "c37835d73e92be5b38148a95ab74ccf5b6b53cfe", "filename": "src/test/ui/async-await/await-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fawait-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fawait-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fawait-macro.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -3,7 +3,7 @@\n // edition:2018\n // aux-build:arc_wake.rs\n \n-#![feature(async_await, await_macro)]\n+#![feature(async_await, async_closure, await_macro)]\n \n extern crate arc_wake;\n "}, {"sha": "d07116b13a2b50676befb3b37dd2beb491723272", "filename": "src/test/ui/async-await/feature-async-closure.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,8 @@\n+// edition:2018\n+// gate-test-async_closure\n+\n+fn f() {\n+    let _ = async || {}; //~ ERROR async closures are unstable\n+}\n+\n+fn main() {}"}, {"sha": "61909f8659ed062dcc40f4a84df2fd4bad345bdc", "filename": "src/test/ui/async-await/feature-async-closure.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.stderr?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: async closures are unstable\n+  --> $DIR/feature-async-closure.rs:5:13\n+   |\n+LL |     let _ = async || {};\n+   |             ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/62290\n+   = help: add #![feature(async_closure)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "ac6605bcefff956201c8dc1a84d344d262ee2eb9", "filename": "src/test/ui/async-await/issues/issue-62009-1.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -11,8 +11,6 @@ fn main() {\n     //~^ ERROR `await` is only allowed inside `async` functions and blocks\n         let task1 = print_dur().await;\n     }.await;\n-    (async || 2333)().await;\n-    //~^ ERROR `await` is only allowed inside `async` functions and blocks\n     (|_| 2333).await;\n     //~^ ERROR `await` is only allowed inside `async` functions and blocks\n     //~^^ ERROR", "previous_filename": "src/test/ui/async-await/issues/issue-62009.rs"}, {"sha": "2bbb6d079ead11279045a8881c6dd77f5dc906bc", "filename": "src/test/ui/async-await/issues/issue-62009-1.stderr", "status": "renamed", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -1,13 +1,13 @@\n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009.rs:8:5\n+  --> $DIR/issue-62009-1.rs:8:5\n    |\n LL | fn main() {\n    |    ---- this is not `async`\n LL |     async { let (); }.await;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009.rs:10:5\n+  --> $DIR/issue-62009-1.rs:10:5\n    |\n LL |   fn main() {\n    |      ---- this is not `async`\n@@ -19,31 +19,22 @@ LL | |     }.await;\n    | |___________^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009.rs:14:5\n-   |\n-LL | fn main() {\n-   |    ---- this is not `async`\n-...\n-LL |     (async || 2333)().await;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n-\n-error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009.rs:16:5\n+  --> $DIR/issue-62009-1.rs:14:5\n    |\n LL | fn main() {\n    |    ---- this is not `async`\n ...\n LL |     (|_| 2333).await;\n    |     ^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n-error[E0277]: the trait bound `[closure@$DIR/issue-62009.rs:16:5: 16:15]: std::future::Future` is not satisfied\n-  --> $DIR/issue-62009.rs:16:5\n+error[E0277]: the trait bound `[closure@$DIR/issue-62009-1.rs:14:5: 14:15]: std::future::Future` is not satisfied\n+  --> $DIR/issue-62009-1.rs:14:5\n    |\n LL |     (|_| 2333).await;\n-   |     ^^^^^^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `[closure@$DIR/issue-62009.rs:16:5: 16:15]`\n+   |     ^^^^^^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `[closure@$DIR/issue-62009-1.rs:14:5: 14:15]`\n    |\n    = note: required by `std::future::poll_with_tls_context`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0277`.", "previous_filename": "src/test/ui/async-await/issues/issue-62009.stderr"}, {"sha": "52b62eaa9e0a7054ad8f9f26448f2c391b653ea1", "filename": "src/test/ui/async-await/issues/issue-62009-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,10 @@\n+// edition:2018\n+\n+#![feature(async_await, async_closure)]\n+\n+async fn print_dur() {}\n+\n+fn main() {\n+    (async || 2333)().await;\n+    //~^ ERROR `await` is only allowed inside `async` functions and blocks\n+}"}, {"sha": "79b6803263eecdec36667c8747f879819e0045fa", "filename": "src/test/ui/async-await/issues/issue-62009-2.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-2.stderr?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,10 @@\n+error[E0728]: `await` is only allowed inside `async` functions and blocks\n+  --> $DIR/issue-62009-2.rs:8:5\n+   |\n+LL | fn main() {\n+   |    ---- this is not `async`\n+LL |     (async || 2333)().await;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n+\n+error: aborting due to previous error\n+"}, {"sha": "0615f290692036cd056b002a2c34331d5fadd277", "filename": "src/test/ui/async-await/no-args-non-move-async-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fno-args-non-move-async-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fno-args-non-move-async-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-args-non-move-async-closure.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -1,6 +1,6 @@\n // edition:2018\n \n-#![feature(async_await, await_macro)]\n+#![feature(async_await, async_closure, await_macro)]\n \n fn main() {\n     let _ = async |x: u8| {};"}, {"sha": "60c9a8581ac9ee7a4a58f950b668c71b7730d610", "filename": "src/test/ui/async-await/suggest-missing-await-closure.fixed", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.fixed?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,23 @@\n+// edition:2018\n+// run-rustfix\n+\n+#![feature(async_await, async_closure)]\n+\n+fn take_u32(_x: u32) {}\n+\n+async fn make_u32() -> u32 {\n+    22\n+}\n+\n+#[allow(unused)]\n+async fn suggest_await_in_async_closure() {\n+    async || {\n+        let x = make_u32();\n+        take_u32(x.await)\n+        //~^ ERROR mismatched types [E0308]\n+        //~| HELP consider using `.await` here\n+        //~| SUGGESTION x.await\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "cb992a27bc1c610ea28b8b563c73c5d2612054a1", "filename": "src/test/ui/async-await/suggest-missing-await-closure.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,23 @@\n+// edition:2018\n+// run-rustfix\n+\n+#![feature(async_await, async_closure)]\n+\n+fn take_u32(_x: u32) {}\n+\n+async fn make_u32() -> u32 {\n+    22\n+}\n+\n+#[allow(unused)]\n+async fn suggest_await_in_async_closure() {\n+    async || {\n+        let x = make_u32();\n+        take_u32(x)\n+        //~^ ERROR mismatched types [E0308]\n+        //~| HELP consider using `.await` here\n+        //~| SUGGESTION x.await\n+    };\n+}\n+\n+fn main() {}"}, {"sha": "487ca6c0fc57ce8ba9f5771f19db694acf70e37a", "filename": "src/test/ui/async-await/suggest-missing-await-closure.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await-closure.stderr?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-missing-await-closure.rs:16:18\n+   |\n+LL |         take_u32(x)\n+   |                  ^\n+   |                  |\n+   |                  expected u32, found opaque type\n+   |                  help: consider using `.await` here: `x.await`\n+   |\n+   = note: expected type `u32`\n+              found type `impl std::future::Future`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "aa032682be82249e6df7ef28d5f936fd67a2ca16", "filename": "src/test/ui/async-await/suggest-missing-await.fixed", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.fixed?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -18,15 +18,4 @@ async fn suggest_await_in_async_fn() {\n     //~| SUGGESTION x.await\n }\n \n-#[allow(unused)]\n-async fn suggest_await_in_async_closure() {\n-    async || {\n-        let x = make_u32();\n-        take_u32(x.await)\n-        //~^ ERROR mismatched types [E0308]\n-        //~| HELP consider using `.await` here\n-        //~| SUGGESTION x.await\n-    };\n-}\n-\n fn main() {}"}, {"sha": "2ca814fbb22b5d57a6d54176c6aecdc2ef324def", "filename": "src/test/ui/async-await/suggest-missing-await.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -18,15 +18,4 @@ async fn suggest_await_in_async_fn() {\n     //~| SUGGESTION x.await\n }\n \n-#[allow(unused)]\n-async fn suggest_await_in_async_closure() {\n-    async || {\n-        let x = make_u32();\n-        take_u32(x)\n-        //~^ ERROR mismatched types [E0308]\n-        //~| HELP consider using `.await` here\n-        //~| SUGGESTION x.await\n-    };\n-}\n-\n fn main() {}"}, {"sha": "9bae7150276a865ba90cd6647d18566ec57bbc8f", "filename": "src/test/ui/async-await/suggest-missing-await.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -10,18 +10,6 @@ LL |     take_u32(x)\n    = note: expected type `u32`\n               found type `impl std::future::Future`\n \n-error[E0308]: mismatched types\n-  --> $DIR/suggest-missing-await.rs:25:18\n-   |\n-LL |         take_u32(x)\n-   |                  ^\n-   |                  |\n-   |                  expected u32, found opaque type\n-   |                  help: consider using `.await` here: `x.await`\n-   |\n-   = note: expected type `u32`\n-              found type `impl std::future::Future`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "78391c0e104cc3e26a441fb48491320524f2c2d3", "filename": "src/test/ui/feature-gates/feature-gate-async-await.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.rs?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -15,5 +15,4 @@ async fn foo() {} //~ ERROR async fn is unstable\n \n fn main() {\n     let _ = async {}; //~ ERROR async blocks are unstable\n-    let _ = async || {}; //~ ERROR async closures are unstable\n }"}, {"sha": "1ea4da8da0c5e323f0d024b380164a66c873fe83", "filename": "src/test/ui/feature-gates/feature-gate-async-await.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43315bc15e274d62b7bb239488066a21d40b4269/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr?ref=43315bc15e274d62b7bb239488066a21d40b4269", "patch": "@@ -40,15 +40,6 @@ LL |     let _ = async {};\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n    = help: add #![feature(async_await)] to the crate attributes to enable\n \n-error[E0658]: async closures are unstable\n-  --> $DIR/feature-gate-async-await.rs:18:13\n-   |\n-LL |     let _ = async || {};\n-   |             ^^^^^^^^^^^\n-   |\n-   = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n-   = help: add #![feature(async_await)] to the crate attributes to enable\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}