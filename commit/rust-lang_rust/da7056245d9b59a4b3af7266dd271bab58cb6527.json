{"sha": "da7056245d9b59a4b3af7266dd271bab58cb6527", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNzA1NjI0NWQ5YjU5YTRiM2FmNzI2NmRkMjcxYmFiNThjYjY1Mjc=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-16T20:19:24Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-16T22:06:41Z"}, "message": "Add generic params to impl blocks", "tree": {"sha": "4f6f813e9c489311d3e402e2e664d248cde1f1ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f6f813e9c489311d3e402e2e664d248cde1f1ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da7056245d9b59a4b3af7266dd271bab58cb6527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da7056245d9b59a4b3af7266dd271bab58cb6527", "html_url": "https://github.com/rust-lang/rust/commit/da7056245d9b59a4b3af7266dd271bab58cb6527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da7056245d9b59a4b3af7266dd271bab58cb6527/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccfc6b11c1e55e28e42bb79414d8349e8eb36086", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccfc6b11c1e55e28e42bb79414d8349e8eb36086", "html_url": "https://github.com/rust-lang/rust/commit/ccfc6b11c1e55e28e42bb79414d8349e8eb36086"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "6ae0ead1b19005f3a0c402defcbf6f821967ec53", "filename": "crates/ra_hir/src/generics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fgenerics.rs?ref=da7056245d9b59a4b3af7266dd271bab58cb6527", "patch": "@@ -7,7 +7,7 @@ use std::sync::Arc;\n \n use ra_syntax::ast::{self, NameOwner, TypeParamsOwner};\n \n-use crate::{db::PersistentHirDatabase, Name, AsName, Function, Struct, Enum, Trait, Type};\n+use crate::{db::PersistentHirDatabase, Name, AsName, Function, Struct, Enum, Trait, Type, ImplBlock};\n \n /// Data about a generic parameter (to a function, struct, impl, ...).\n #[derive(Clone, PartialEq, Eq, Debug)]\n@@ -30,8 +30,9 @@ pub enum GenericDef {\n     Enum(Enum),\n     Trait(Trait),\n     Type(Type),\n+    ImplBlock(ImplBlock),\n }\n-impl_froms!(GenericDef: Function, Struct, Enum, Trait, Type);\n+impl_froms!(GenericDef: Function, Struct, Enum, Trait, Type, ImplBlock);\n \n impl GenericParams {\n     pub(crate) fn generic_params_query(\n@@ -45,6 +46,7 @@ impl GenericParams {\n             GenericDef::Enum(it) => generics.fill(&*it.source(db).1),\n             GenericDef::Trait(it) => generics.fill(&*it.source(db).1),\n             GenericDef::Type(it) => generics.fill(&*it.source(db).1),\n+            GenericDef::ImplBlock(it) => generics.fill(&*it.source(db).1),\n         }\n \n         Arc::new(generics)"}, {"sha": "7d862882d15cafd4b94a0495c7d55924164a9fb4", "filename": "crates/ra_hir/src/impl_block.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs?ref=da7056245d9b59a4b3af7266dd271bab58cb6527", "patch": "@@ -13,7 +13,7 @@ use crate::{\n     type_ref::TypeRef,\n     ids::LocationCtx,\n     resolve::Resolver,\n-    ty::Ty,\n+    ty::Ty, generics::GenericParams\n };\n \n use crate::code_model_api::{Module, ModuleSource};\n@@ -38,7 +38,7 @@ impl ImplSourceMap {\n     }\n }\n \n-#[derive(Debug, Clone, Copy, PartialEq, Eq)]\n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct ImplBlock {\n     module: Module,\n     impl_id: ImplId,\n@@ -58,7 +58,7 @@ impl ImplBlock {\n     }\n \n     /// Returns the syntax of the impl block\n-    pub fn source(&self, db: &impl HirDatabase) -> (HirFileId, TreeArc<ast::ImplBlock>) {\n+    pub fn source(&self, db: &impl PersistentHirDatabase) -> (HirFileId, TreeArc<ast::ImplBlock>) {\n         let source_map = db.impls_in_module_source_map(self.module);\n         let (file_id, source) = self.module.definition_source(db);\n         (file_id, source_map.get(&source, self.impl_id))\n@@ -72,11 +72,11 @@ impl ImplBlock {\n         self.module\n     }\n \n-    pub fn target_trait_ref(&self, db: &impl HirDatabase) -> Option<TypeRef> {\n+    pub fn target_trait_ref(&self, db: &impl PersistentHirDatabase) -> Option<TypeRef> {\n         db.impls_in_module(self.module).impls[self.impl_id].target_trait().cloned()\n     }\n \n-    pub fn target_type(&self, db: &impl HirDatabase) -> TypeRef {\n+    pub fn target_type(&self, db: &impl PersistentHirDatabase) -> TypeRef {\n         db.impls_in_module(self.module).impls[self.impl_id].target_type().clone()\n     }\n \n@@ -96,10 +96,14 @@ impl ImplBlock {\n         None\n     }\n \n-    pub fn items(&self, db: &impl HirDatabase) -> Vec<ImplItem> {\n+    pub fn items(&self, db: &impl PersistentHirDatabase) -> Vec<ImplItem> {\n         db.impls_in_module(self.module).impls[self.impl_id].items().to_vec()\n     }\n \n+    pub fn generic_params(&self, db: &impl PersistentHirDatabase) -> Arc<GenericParams> {\n+        db.generic_params((*self).into())\n+    }\n+\n     pub fn resolver(&self, db: &impl HirDatabase) -> Resolver {\n         let r = self.module().resolver(db);\n         // TODO: add generics"}, {"sha": "aa9da92da9101dd1da770b46361910e1d38287cc", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=da7056245d9b59a4b3af7266dd271bab58cb6527", "patch": "@@ -1352,6 +1352,7 @@ impl ToOwned for ImplBlock {\n }\n \n \n+impl ast::TypeParamsOwner for ImplBlock {}\n impl ImplBlock {\n     pub fn item_list(&self) -> Option<&ItemList> {\n         super::child_opt(self)"}, {"sha": "5ec68014bdedab637d4e2db47a69002c757c5dbb", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/da7056245d9b59a4b3af7266dd271bab58cb6527/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=da7056245d9b59a4b3af7266dd271bab58cb6527", "patch": "@@ -322,7 +322,7 @@ Grammar(\n             ],\n             options: [\"TypeRef\"]\n         ),\n-        \"ImplBlock\": (options: [\"ItemList\"]),\n+        \"ImplBlock\": (options: [\"ItemList\"], traits: [\"TypeParamsOwner\"]),\n \n         \"ParenType\": (options: [\"TypeRef\"]),\n         \"TupleType\": ( collections: [[\"fields\", \"TypeRef\"]] ),"}]}