{"sha": "4fba518b02e36a24ed278ca82412112684c52b26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYmE1MThiMDJlMzZhMjRlZDI3OGNhODI0MTIxMTI2ODRjNTJiMjY=", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-08-10T07:31:30Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-08-10T07:31:30Z"}, "message": "[semantic-highlighting] functions that consume  are marked as HlMod::Consuming", "tree": {"sha": "6756b8cd0ded96f3d84d7d160ba612c01bb4c0cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6756b8cd0ded96f3d84d7d160ba612c01bb4c0cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fba518b02e36a24ed278ca82412112684c52b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fba518b02e36a24ed278ca82412112684c52b26", "html_url": "https://github.com/rust-lang/rust/commit/4fba518b02e36a24ed278ca82412112684c52b26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fba518b02e36a24ed278ca82412112684c52b26/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e4fb4f5184ba69927bd155d38b76cb8f4a45b37", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4fb4f5184ba69927bd155d38b76cb8f4a45b37", "html_url": "https://github.com/rust-lang/rust/commit/8e4fb4f5184ba69927bd155d38b76cb8f4a45b37"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "5a7683c5779577126962db5762b2a843d00ce185", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fba518b02e36a24ed278ca82412112684c52b26/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fba518b02e36a24ed278ca82412112684c52b26/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=4fba518b02e36a24ed278ca82412112684c52b26", "patch": "@@ -381,7 +381,7 @@ fn highlight_def(db: &RootDatabase, krate: Option<hir::Crate>, def: Definition)\n                                 h |= HlMod::Reference;\n                             }\n                             hir::Access::Shared => h |= HlMod::Reference,\n-                            _ => {}\n+                            hir::Access::Owned => h |= HlMod::Consuming,\n                         },\n                         None => h |= HlMod::Static,\n                     }"}, {"sha": "e43119aa3b0f42b03037552154912a0af1b8f379", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4fba518b02e36a24ed278ca82412112684c52b26/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/4fba518b02e36a24ed278ca82412112684c52b26/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=4fba518b02e36a24ed278ca82412112684c52b26", "patch": "@@ -79,7 +79,7 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration\">baz</span><span class=\"parenthesis\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">Foo</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated consuming declaration\">baz</span><span class=\"parenthesis\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword declaration mutable\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">Foo</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n         <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated consuming\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword consuming mutable\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n@@ -98,7 +98,7 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">FooCopy</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword declaration\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">FooCopy</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated consuming declaration\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword declaration\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">FooCopy</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n         <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n@@ -216,7 +216,7 @@\n     <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"variable mutable\">copy</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"variable callable declaration\">a</span> <span class=\"operator\">=</span> <span class=\"punctuation\">|</span><span class=\"value_param declaration\">x</span><span class=\"punctuation\">|</span> <span class=\"value_param\">x</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable callable declaration\">bar</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span><span class=\"operator\">::</span><span class=\"function associated\">baz</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable callable declaration\">bar</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span><span class=\"operator\">::</span><span class=\"function associated consuming\">baz</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"parenthesis\">(</span><span class=\"numeric_literal\">-</span><span class=\"numeric_literal\">42</span><span class=\"comma\">,</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">baz</span> <span class=\"operator\">=</span> <span class=\"operator\">-</span><span class=\"variable\">baz</span><span class=\"operator\">.</span><span class=\"field\">0</span><span class=\"semicolon\">;</span>\n@@ -236,7 +236,7 @@\n <span class=\"keyword\">use</span> <span class=\"enum\">Option</span><span class=\"operator\">::</span><span class=\"punctuation\">*</span><span class=\"semicolon\">;</span>\n \n <span class=\"keyword\">impl</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"angle\">&gt;</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"type_param\">T</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function associated declaration\">and</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"self_keyword declaration\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">other</span><span class=\"colon\">:</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"type_param\">U</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"parenthesis\">(</span><span class=\"type_param\">T</span><span class=\"comma\">,</span> <span class=\"type_param\">U</span><span class=\"parenthesis\">)</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated consuming declaration\">and</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"self_keyword declaration\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">other</span><span class=\"colon\">:</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"type_param\">U</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"parenthesis\">(</span><span class=\"type_param\">T</span><span class=\"comma\">,</span> <span class=\"type_param\">U</span><span class=\"parenthesis\">)</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n         <span class=\"keyword control\">match</span> <span class=\"value_param\">other</span> <span class=\"brace\">{</span>\n             <span class=\"enum_variant\">None</span> <span class=\"operator\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n             <span class=\"variable declaration\">Nope</span> <span class=\"operator\">=&gt;</span> <span class=\"variable\">Nope</span><span class=\"comma\">,</span>\n@@ -274,7 +274,7 @@\n <span class=\"keyword\">pub</span> <span class=\"keyword\">enum</span> <span class=\"enum declaration public\">Bool</span> <span class=\"brace\">{</span> <span class=\"enum_variant declaration public\">True</span><span class=\"comma\">,</span> <span class=\"enum_variant declaration public\">False</span> <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"enum public\">Bool</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public\">to_primitive</span><span class=\"parenthesis\">(</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function associated consuming declaration public\">to_primitive</span><span class=\"parenthesis\">(</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n         <span class=\"macro\">matches!</span><span class=\"parenthesis\">(</span>self<span class=\"comma\">,</span> Self<span class=\"colon\">:</span><span class=\"colon\">:</span>True<span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>"}]}