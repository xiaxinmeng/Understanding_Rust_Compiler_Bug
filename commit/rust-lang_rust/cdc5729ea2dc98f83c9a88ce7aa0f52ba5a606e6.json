{"sha": "cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYzU3MjllYTJkYzk4ZjgzYzlhODhjZTdhYTBmNTJiYTVhNjA2ZTY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-26T16:52:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-28T03:59:02Z"}, "message": "rustc: Move local native libs back in link-args\n\nWith linkers on unix systems, libraries on the right of the command line are\nused to resolve symbols in those on the left of the command line. This means\nthat arguments must have a right-to-left dependency chain (things on the left\ndepend on things on the right).\n\nThis is currently done by ordering the linker arguments as\n\n  1. Local object\n  2. Local native libraries\n  3. Upstream rust libraries\n  4. Upstream native libraries\n\nThis commit swaps the order of 2 and 3 so upstream rust libraries have access to\nlocal native libraries. It has been seen that some upstream crates don't specify\nthe library that they link to because the name varies per platform (e.g.\nlua/glfw/etc).\n\nThis commit enables building these libraries by allowing the upstream rust crate\nto have access to local native libraries. I believe that the failure mode for\nthis scheme is when an upstream rust crate depends on a symbol in an upstream\nlibrary which is then redefined in a local library. This failure mode is\nincredibly uncommon, and the failure mode also varies per platform (OSX behaves\ndifferently), so I believe that a change like this is fine to make.\n\nCloses #12446", "tree": {"sha": "9dd75d567098cd5dba4ad4a263e25e7b813d10b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dd75d567098cd5dba4ad4a263e25e7b813d10b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "html_url": "https://github.com/rust-lang/rust/commit/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d4ccb5d81362999ab9dc9534b507340995ad0ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4ccb5d81362999ab9dc9534b507340995ad0ac", "html_url": "https://github.com/rust-lang/rust/commit/4d4ccb5d81362999ab9dc9534b507340995ad0ac"}], "stats": {"total": 79, "additions": 78, "deletions": 1}, "files": [{"sha": "33d3a1c67f2e2a9af033d3801a2aecff586773ee", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "patch": "@@ -1132,8 +1132,41 @@ fn link_args(sess: Session,\n         args.push(~\"-Wl,--allow-multiple-definition\");\n     }\n \n-    add_local_native_libraries(&mut args, sess);\n+    // Take careful note of the ordering of the arguments we pass to the linker\n+    // here. Linkers will assume that things on the left depend on things to the\n+    // right. Things on the right cannot depend on things on the left. This is\n+    // all formally implemented in terms of resolving symbols (libs on the right\n+    // resolve unknown symbols of libs on the left, but not vice versa).\n+    //\n+    // For this reason, we have organized the arguments we pass to the linker as\n+    // such:\n+    //\n+    //  1. The local object that LLVM just generated\n+    //  2. Upstream rust libraries\n+    //  3. Local native libraries\n+    //  4. Upstream native libraries\n+    //\n+    // This is generally fairly natural, but some may expect 2 and 3 to be\n+    // swapped. The reason that all native libraries are put last is that it's\n+    // not recommended for a native library to depend on a symbol from a rust\n+    // crate. If this is the case then a staticlib crate is recommended, solving\n+    // the problem.\n+    //\n+    // Additionally, it is occasionally the case that upstream rust libraries\n+    // depend on a local native library. In the case of libraries such as\n+    // lua/glfw/etc the name of the library isn't the same across all platforms,\n+    // so only the consumer crate of a library knows the actual name. This means\n+    // that downstream crates will provide the #[link] attribute which upstream\n+    // crates will depend on. Hence local native libraries are after out\n+    // upstream rust crates.\n+    //\n+    // In theory this means that a symbol in an upstream native library will be\n+    // shadowed by a local native library when it wouldn't have been before, but\n+    // this kind of behavior is pretty platform specific and generally not\n+    // recommended anyway, so I don't think we're shooting ourself in the foot\n+    // much with that.\n     add_upstream_rust_crates(&mut args, sess, dylib, tmpdir);\n+    add_local_native_libraries(&mut args, sess);\n     add_upstream_native_libraries(&mut args, sess);\n \n     // # Telling the linker what we're doing"}, {"sha": "e864ee0058c7e3da5be9864bbbced3b2b20629c6", "filename": "src/test/run-make/issue-12446/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-12446%2FMakefile?ref=cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "patch": "@@ -0,0 +1,6 @@\n+-include ../tools.mk\n+\n+all: $(call STATICLIB,foo)\n+\t$(RUSTC) foo.rs\n+\t$(RUSTC) bar.rs\n+\t$(call RUN,bar)"}, {"sha": "cd41058744d5a5d9c15b4848fa38b40ecd647e6c", "filename": "src/test/run-make/issue-12446/bar.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-12446%2Fbar.rs?ref=cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate foo;\n+\n+#[link(name = \"foo\")]\n+extern {}\n+\n+fn main() {\n+    foo::foo();\n+}"}, {"sha": "a58cd8bb7c98f32cba0afd0b60a4082884f01203", "filename": "src/test/run-make/issue-12446/foo.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.c?ref=cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "patch": "@@ -0,0 +1 @@\n+void some_c_symbol() {}"}, {"sha": "f16dd5e1d5c30785d258dbc7b9e1219862d9b3d0", "filename": "src/test/run-make/issue-12446/foo.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-12446%2Ffoo.rs?ref=cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[crate_type = \"rlib\"];\n+\n+extern {\n+    fn some_c_symbol();\n+}\n+\n+pub fn foo() {\n+    unsafe { some_c_symbol() }\n+}"}]}