{"sha": "f28f79b79615fc77e65ec42c4e2a3960659150c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyOGY3OWI3OTYxNWZjNzdlNjVlYzQyYzRlMmEzOTYwNjU5MTUwYzk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-08T05:47:27Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-09T00:24:39Z"}, "message": "Fix a span bug for qualified paths", "tree": {"sha": "1d41a9c1b8b3fcd6d73e8d63448e0bc8ff1aab0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d41a9c1b8b3fcd6d73e8d63448e0bc8ff1aab0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f28f79b79615fc77e65ec42c4e2a3960659150c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f28f79b79615fc77e65ec42c4e2a3960659150c9", "html_url": "https://github.com/rust-lang/rust/commit/f28f79b79615fc77e65ec42c4e2a3960659150c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f28f79b79615fc77e65ec42c4e2a3960659150c9/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "374af4aea7878127ca52cbc271fb1237b4afe223", "url": "https://api.github.com/repos/rust-lang/rust/commits/374af4aea7878127ca52cbc271fb1237b4afe223", "html_url": "https://github.com/rust-lang/rust/commit/374af4aea7878127ca52cbc271fb1237b4afe223"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "81ae607fea250cbe09f9b4b17bce90d552b4f057", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f28f79b79615fc77e65ec42c4e2a3960659150c9/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f28f79b79615fc77e65ec42c4e2a3960659150c9/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f28f79b79615fc77e65ec42c4e2a3960659150c9", "patch": "@@ -1566,12 +1566,13 @@ impl<'a> Parser<'a> {\n     // Assumes that the leading `<` has been parsed already.\n     pub fn parse_qualified_path(&mut self, mode: PathParsingMode)\n                                 -> PResult<(QSelf, ast::Path)> {\n+        let span = self.last_span;\n         let self_type = try!(self.parse_ty_sum());\n         let mut path = if try!(self.eat_keyword(keywords::As)) {\n             try!(self.parse_path(LifetimeAndTypesWithoutColons))\n         } else {\n             ast::Path {\n-                span: self.span,\n+                span: span,\n                 global: false,\n                 segments: vec![]\n             }\n@@ -1598,9 +1599,6 @@ impl<'a> Parser<'a> {\n         };\n         path.segments.extend(segments);\n \n-        if path.segments.len() == 1 {\n-            path.span.lo = self.last_span.lo;\n-        }\n         path.span.hi = self.last_span.hi;\n \n         Ok((qself, path))"}, {"sha": "4981ea475d3a8a595709b2902f7df19e0da1a8d8", "filename": "src/test/run-make/save-analysis/foo.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f28f79b79615fc77e65ec42c4e2a3960659150c9/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f28f79b79615fc77e65ec42c4e2a3960659150c9/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs?ref=f28f79b79615fc77e65ec42c4e2a3960659150c9", "patch": "@@ -364,3 +364,18 @@ impl<'a> Pattern<'a> for CharEqPattern {\n }\n \n struct CharSearcher<'a>(<CharEqPattern as Pattern<'a>>::Searcher);\n+\n+pub trait Error {\n+}\n+\n+impl Error + 'static {\n+    pub fn is<T: Error + 'static>(&self) -> bool {\n+        panic!()\n+    }\n+}\n+\n+impl Error + 'static + Send {\n+    pub fn is<T: Error + 'static>(&self) -> bool {\n+        <Error + 'static>::is::<T>(self)\n+    }\n+}"}]}