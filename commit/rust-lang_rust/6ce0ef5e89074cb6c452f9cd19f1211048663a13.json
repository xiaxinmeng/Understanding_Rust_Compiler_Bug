{"sha": "6ce0ef5e89074cb6c452f9cd19f1211048663a13", "node_id": "C_kwDOAAsO6NoAKDZjZTBlZjVlODkwNzRjYjZjNDUyZjljZDE5ZjEyMTEwNDg2NjNhMTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-01T02:33:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-01T02:33:11Z"}, "message": "Rollup merge of #90452 - tmiasko:promote-candidate, r=cjgillot\n\nRemove unnecessary `Option` from `promote_candidate` return type", "tree": {"sha": "50603200f91a57573e69415a58cce3d32364d66f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50603200f91a57573e69415a58cce3d32364d66f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ce0ef5e89074cb6c452f9cd19f1211048663a13", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhf1HnCRBK7hj4Ov3rIwAAKGwIACTCXxV0vSOWYxHllAh38YMh\nYxUQ71QMkqhE/sJFaJ8LaO/1chUEIuYtojgDGStQQ8Cin0WIZGu/xI8pCgJIkh7r\n4weXSrfWeOPln6OkL+xHeFKgtmMBj+WpRGPEq6x0VhWoRMPduhUqAFwWvLo/C4/S\npNZQwm3YiLRGsXH96qn4SatM+J3ws7+LplorINkK6D3MBmy6RiOz8aAOrNhu67GX\nM9rDMb1t5ECYPji0c0m4k/O4DY829y3tdmZ+eyQZVGRs6jH28e3wr/Yj30G2hdl3\nkl52RoPmG+WwbtDntK/1HW2H7Ugdnom1U9sp2BfTJvPt22jd3cJe3UGU61dd0/s=\n=Yk2c\n-----END PGP SIGNATURE-----\n", "payload": "tree 50603200f91a57573e69415a58cce3d32364d66f\nparent 86f5b8a52dedf0cf318757113696622384ca55d9\nparent 3a95338f312c630e89c35ffa9e5ece97520e5253\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635733991 +0100\ncommitter GitHub <noreply@github.com> 1635733991 +0100\n\nRollup merge of #90452 - tmiasko:promote-candidate, r=cjgillot\n\nRemove unnecessary `Option` from `promote_candidate` return type\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce0ef5e89074cb6c452f9cd19f1211048663a13", "html_url": "https://github.com/rust-lang/rust/commit/6ce0ef5e89074cb6c452f9cd19f1211048663a13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ce0ef5e89074cb6c452f9cd19f1211048663a13/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86f5b8a52dedf0cf318757113696622384ca55d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/86f5b8a52dedf0cf318757113696622384ca55d9", "html_url": "https://github.com/rust-lang/rust/commit/86f5b8a52dedf0cf318757113696622384ca55d9"}, {"sha": "3a95338f312c630e89c35ffa9e5ece97520e5253", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a95338f312c630e89c35ffa9e5ece97520e5253", "html_url": "https://github.com/rust-lang/rust/commit/3a95338f312c630e89c35ffa9e5ece97520e5253"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "7bf378601e053317963dcdc036129b94c05be7e3", "filename": "compiler/rustc_const_eval/src/transform/promote_consts.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6ce0ef5e89074cb6c452f9cd19f1211048663a13/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ce0ef5e89074cb6c452f9cd19f1211048663a13/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs?ref=6ce0ef5e89074cb6c452f9cd19f1211048663a13", "patch": "@@ -835,11 +835,7 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n         new_temp\n     }\n \n-    fn promote_candidate(\n-        mut self,\n-        candidate: Candidate,\n-        next_promoted_id: usize,\n-    ) -> Option<Body<'tcx>> {\n+    fn promote_candidate(mut self, candidate: Candidate, next_promoted_id: usize) -> Body<'tcx> {\n         let def = self.source.source.with_opt_param();\n         let mut rvalue = {\n             let promoted = &mut self.promoted;\n@@ -938,7 +934,7 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n \n         let span = self.promoted.span;\n         self.assign(RETURN_PLACE, rvalue, span);\n-        Some(self.promoted)\n+        self.promoted\n     }\n }\n \n@@ -1011,11 +1007,9 @@ pub fn promote_candidates<'tcx>(\n             keep_original: false,\n         };\n \n-        //FIXME(oli-obk): having a `maybe_push()` method on `IndexVec` might be nice\n-        if let Some(mut promoted) = promoter.promote_candidate(candidate, promotions.len()) {\n-            promoted.source.promoted = Some(promotions.next_index());\n-            promotions.push(promoted);\n-        }\n+        let mut promoted = promoter.promote_candidate(candidate, promotions.len());\n+        promoted.source.promoted = Some(promotions.next_index());\n+        promotions.push(promoted);\n     }\n \n     // Insert each of `extra_statements` before its indicated location, which"}]}