{"sha": "094c02121843402465714003eec9501962570720", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NGMwMjEyMTg0MzQwMjQ2NTcxNDAwM2VlYzk1MDE5NjI1NzA3MjA=", "commit": {"author": {"name": "Maik Klein", "email": "maikklein@googlemail.com", "date": "2017-10-25T13:39:54Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-18T15:08:48Z"}, "message": "Move collector to monomorphize", "tree": {"sha": "e8d627531d17d371bb296d04a902c1a99666d063", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8d627531d17d371bb296d04a902c1a99666d063"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/094c02121843402465714003eec9501962570720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/094c02121843402465714003eec9501962570720", "html_url": "https://github.com/rust-lang/rust/commit/094c02121843402465714003eec9501962570720", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/094c02121843402465714003eec9501962570720/comments", "author": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3a7203e2c9ed30a501da86f3fa1f9efe707ac94", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a7203e2c9ed30a501da86f3fa1f9efe707ac94", "html_url": "https://github.com/rust-lang/rust/commit/a3a7203e2c9ed30a501da86f3fa1f9efe707ac94"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "a54f15532b18ff7f64e4ddebe6a925da2933f9ed", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -23,3 +23,4 @@ syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n byteorder = { version = \"1.1\", features = [\"i128\"] }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n+rustc_trans_utils = { path = \"../librustc_trans_utils\" }"}, {"sha": "4d26230e0612b184be9003a135009672892ab699", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -54,6 +54,7 @@ extern crate core; // for NonZero\n extern crate log_settings;\n extern crate rustc_apfloat;\n extern crate byteorder;\n+extern crate rustc_trans_utils;\n \n mod diagnostics;\n \n@@ -65,6 +66,7 @@ mod shim;\n pub mod transform;\n pub mod util;\n pub mod interpret;\n+pub mod monomorphize;\n \n use rustc::ty::maps::Providers;\n "}, {"sha": "498ddf9c85c6415f254583beec186e95647bcbe2", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -207,7 +207,7 @@ use common::{def_ty, instance_ty, type_has_metadata};\n use monomorphize::{self, Instance};\n use rustc::util::nodemap::{FxHashSet, FxHashMap, DefIdMap};\n \n-use trans_item::{TransItemExt, DefPathBasedNames, InstantiationMode};\n+use rustc_trans_utils::trans_item::{TransItemExt, DefPathBasedNames, InstantiationMode};\n \n use rustc_data_structures::bitvec::BitVector;\n ", "previous_filename": "src/librustc_trans_utils/collector.rs"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/librustc_mir/monomorphize/common.rs", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Fmonomorphize%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Fmonomorphize%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcommon.rs?ref=094c02121843402465714003eec9501962570720"}, {"sha": "e0247862ec29ba29e6fd77547a8e2bfbefe04063", "filename": "src/librustc_mir/monomorphize/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fmod.rs?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -0,0 +1 @@\n+pub mod collector;"}, {"sha": "f1549d98421543ca0f25857ffd7aa5310428a753", "filename": "src/librustc_trans/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2FCargo.toml?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -28,6 +28,7 @@ rustc_incremental = { path = \"../librustc_incremental\" }\n rustc_llvm = { path = \"../librustc_llvm\" }\n rustc_platform_intrinsics = { path = \"../librustc_platform_intrinsics\" }\n rustc_trans_utils = { path = \"../librustc_trans_utils\" }\n+rustc_mir = { path = \"../librustc_mir\" }\n serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "d28f0c5bd841e60ac6303f6c9c9b2eb51da8714c", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -55,7 +55,7 @@ use attributes;\n use builder::Builder;\n use callee;\n use common::{C_bool, C_bytes_in_context, C_i32, C_usize};\n-use collector::{self, TransItemCollectionMode};\n+use rustc_mir::monomorphize::collector::{self, TransItemCollectionMode};\n use common::{self, C_struct_in_context, C_array, CrateContext, val_ty};\n use consts;\n use context::{self, LocalCrateContext, SharedCrateContext};"}, {"sha": "7f2b875394cb0ab60c9e7e63f1969a8f896e8f66", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -43,6 +43,7 @@ extern crate libc;\n #[macro_use] extern crate rustc;\n extern crate jobserver;\n extern crate num_cpus;\n+extern crate rustc_mir;\n extern crate rustc_allocator;\n extern crate rustc_apfloat;\n extern crate rustc_back;\n@@ -84,7 +85,6 @@ use rustc::session::config::{OutputFilenames, OutputType};\n use rustc::ty::{self, TyCtxt};\n use rustc::util::nodemap::{FxHashSet, FxHashMap};\n \n-use rustc_trans_utils::collector;\n use rustc_trans_utils::monomorphize;\n \n mod diagnostics;"}, {"sha": "05297761ef1b150d48e22e1a9c857b49e6039b18", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -102,7 +102,7 @@\n //! source-level module, functions from the same module will be available for\n //! inlining, even when they are not marked #[inline].\n \n-use collector::InliningMap;\n+use rustc_mir::monomorphize::collector::InliningMap;\n use common;\n use rustc::dep_graph::WorkProductId;\n use rustc::hir::def_id::DefId;"}, {"sha": "4ee6602dfe63c3827d3f4a8ad4a073dddb91856c", "filename": "src/librustc_trans_utils/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094c02121843402465714003eec9501962570720/src%2Flibrustc_trans_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Flib.rs?ref=094c02121843402465714003eec9501962570720", "patch": "@@ -35,7 +35,6 @@ extern crate log;\n #[macro_use]\n extern crate rustc;\n extern crate rustc_back;\n-extern crate rustc_data_structures;\n extern crate syntax;\n extern crate syntax_pos;\n \n@@ -47,7 +46,6 @@ use rustc::util::nodemap::NodeSet;\n \n pub mod common;\n pub mod link;\n-pub mod collector;\n pub mod trans_item;\n pub mod monomorphize;\n pub mod trans_crate;"}]}