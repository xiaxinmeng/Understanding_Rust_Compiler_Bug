{"sha": "0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "node_id": "C_kwDOAAsO6NoAKDBkNWFjZTNlZDIyZmRkNmVlMjVlZTFkZGE0MjEzOWQzNmMwYWVlYzQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-02T07:38:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-02T07:38:01Z"}, "message": "Auto merge of #8908 - Serial-ATA:doc-comment-issues, r=xFrednet\n\nMake docs more consistent\n\nchangelog: none\n\nThis just fixes some docs to make them more consistent. I mostly just changed `// Good`, `// Bad`, etc to `Use instead:`.", "tree": {"sha": "95d2ea038702df963ae454cbc97c3a2861ced00c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95d2ea038702df963ae454cbc97c3a2861ced00c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "html_url": "https://github.com/rust-lang/rust/commit/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7572b6b75784206f76260387bc647b9acd315d32", "url": "https://api.github.com/repos/rust-lang/rust/commits/7572b6b75784206f76260387bc647b9acd315d32", "html_url": "https://github.com/rust-lang/rust/commit/7572b6b75784206f76260387bc647b9acd315d32"}, {"sha": "b20f95c1a1780934367a019a6adba4ec74895716", "url": "https://api.github.com/repos/rust-lang/rust/commits/b20f95c1a1780934367a019a6adba4ec74895716", "html_url": "https://github.com/rust-lang/rust/commit/b20f95c1a1780934367a019a6adba4ec74895716"}], "stats": {"total": 374, "additions": 197, "deletions": 177}, "files": [{"sha": "159f3b0cd014a5ce66d7994244750d5d9df4706f", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -28,7 +28,7 @@ declare_clippy_lint! {\n     /// let x = 3.14;\n     /// let y = 1_f64 / x;\n     /// ```\n-    /// Use predefined constants instead:\n+    /// Use instead:\n     /// ```rust\n     /// let x = std::f32::consts::PI;\n     /// let y = std::f64::consts::FRAC_1_PI;"}, {"sha": "6e5c8f445818ebfb54bb5c45bbbe87b9a57b9cf9", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -29,15 +29,14 @@ declare_clippy_lint! {\n     /// f(a as u16);\n     /// ```\n     ///\n-    /// Usually better represents the semantics you expect:\n+    /// Use instead:\n     /// ```rust,ignore\n     /// f(a.try_into()?);\n-    /// ```\n-    /// or\n-    /// ```rust,ignore\n+    ///\n+    /// // or\n+    ///\n     /// f(a.try_into().expect(\"Unexpected u16 overflow in f\"));\n     /// ```\n-    ///\n     #[clippy::version = \"1.41.0\"]\n     pub AS_CONVERSIONS,\n     restriction,"}, {"sha": "f81da2d42233380e9bd5a633b8b13237dfcac68a", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -27,10 +27,16 @@ declare_clippy_lint! {\n     /// let mut a = 5;\n     /// let b = 0;\n     /// // ...\n-    /// // Bad\n+    ///\n     /// a = a + b;\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust\n+    /// let mut a = 5;\n+    /// let b = 0;\n+    /// // ...\n     ///\n-    /// // Good\n     /// a += b;\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]"}, {"sha": "770cb6a3d7b8baf0dab02cd28b97115387a314d7", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -89,13 +89,14 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```ignore\n-    /// // Bad\n     /// #[deny(dead_code)]\n     /// extern crate foo;\n     /// #[forbid(dead_code)]\n     /// use foo::bar;\n+    /// ```\n     ///\n-    /// // Ok\n+    /// Use instead:\n+    /// ```rust,ignore\n     /// #[allow(unused_imports)]\n     /// use foo::baz;\n     /// #[allow(unused_imports)]\n@@ -146,15 +147,19 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```rust\n+    /// #[allow(dead_code)]\n+    ///\n+    /// fn not_quite_good_code() { }\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust\n     /// // Good (as inner attribute)\n     /// #![allow(dead_code)]\n     ///\n     /// fn this_is_fine() { }\n     ///\n-    /// // Bad\n-    /// #[allow(dead_code)]\n-    ///\n-    /// fn not_quite_good_code() { }\n+    /// // or\n     ///\n     /// // Good (as outer attribute)\n     /// #[allow(dead_code)]\n@@ -175,12 +180,11 @@ declare_clippy_lint! {\n     /// These lints should only be enabled on a lint-by-lint basis and with careful consideration.\n     ///\n     /// ### Example\n-    /// Bad:\n     /// ```rust\n     /// #![deny(clippy::restriction)]\n     /// ```\n     ///\n-    /// Good:\n+    /// Use instead:\n     /// ```rust\n     /// #![deny(clippy::as_conversions)]\n     /// ```\n@@ -205,13 +209,12 @@ declare_clippy_lint! {\n     /// [#3123](https://github.com/rust-lang/rust-clippy/pull/3123#issuecomment-422321765)\n     ///\n     /// ### Example\n-    /// Bad:\n     /// ```rust\n     /// #[cfg_attr(rustfmt, rustfmt_skip)]\n     /// fn main() { }\n     /// ```\n     ///\n-    /// Good:\n+    /// Use instead:\n     /// ```rust\n     /// #[rustfmt::skip]\n     /// fn main() { }\n@@ -231,20 +234,20 @@ declare_clippy_lint! {\n     /// by the conditional compilation engine.\n     ///\n     /// ### Example\n-    /// Bad:\n     /// ```rust\n     /// #[cfg(linux)]\n     /// fn conditional() { }\n     /// ```\n     ///\n-    /// Good:\n+    /// Use instead:\n     /// ```rust\n+    /// # mod hidden {\n     /// #[cfg(target_os = \"linux\")]\n     /// fn conditional() { }\n-    /// ```\n+    /// # }\n+    ///\n+    /// // or\n     ///\n-    /// Or:\n-    /// ```rust\n     /// #[cfg(unix)]\n     /// fn conditional() { }\n     /// ```\n@@ -266,14 +269,13 @@ declare_clippy_lint! {\n     /// ensure that others understand the reasoning\n     ///\n     /// ### Example\n-    /// Bad:\n     /// ```rust\n     /// #![feature(lint_reasons)]\n     ///\n     /// #![allow(clippy::some_lint)]\n     /// ```\n     ///\n-    /// Good:\n+    /// Use instead:\n     /// ```rust\n     /// #![feature(lint_reasons)]\n     ///"}, {"sha": "5bd7a342389fe50216553f483b4e3c236b35e969", "filename": "clippy_lints/src/blocks_in_if_conditions.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -22,21 +22,17 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust\n-    /// // Bad\n+    /// # fn somefunc() -> bool { true };\n     /// if { true } { /* ... */ }\n     ///\n-    /// // Good\n-    /// if true { /* ... */ }\n+    /// if { let x = somefunc(); x } { /* ... */ }\n     /// ```\n     ///\n-    /// // or\n-    ///\n+    /// Use instead:\n     /// ```rust\n     /// # fn somefunc() -> bool { true };\n-    /// // Bad\n-    /// if { let x = somefunc(); x } { /* ... */ }\n+    /// if true { /* ... */ }\n     ///\n-    /// // Good\n     /// let res = { let x = somefunc(); x };\n     /// if res { /* ... */ }\n     /// ```"}, {"sha": "e4e122ba6eb59af48afd672470aad7d31fcab867", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -27,8 +27,14 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```ignore\n-    /// if a && true  // should be: if a\n-    /// if !(a == b)  // should be: if a != b\n+    /// if a && true {}\n+    /// if !(a == b) {}\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust,ignore\n+    /// if a {}\n+    /// if a != b {}\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub NONMINIMAL_BOOL,\n@@ -48,10 +54,15 @@ declare_clippy_lint! {\n     /// Ignores short circuiting behavior.\n     ///\n     /// ### Example\n-    /// ```ignore\n+    /// ```rust,ignore\n+    /// // The `b` is unnecessary, the expression is equivalent to `if a`.\n     /// if a && b || a { ... }\n     /// ```\n-    /// The `b` is unnecessary, the expression is equivalent to `if a`.\n+    ///\n+    /// Use instead:\n+    /// ```rust,ignore\n+    /// if a {}\n+    /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub LOGIC_BUG,\n     correctness,"}, {"sha": "bfdbaf2413a2502030f6357a1b9c97f7ff3ae8b8", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -28,7 +28,13 @@ declare_clippy_lint! {\n     /// ### Example\n     /// ```rust\n     /// # let vec = vec![1_u8];\n-    /// &vec.iter().filter(|x| **x == 0u8).count(); // use bytecount::count instead\n+    /// let count = vec.iter().filter(|x| **x == 0u8).count();\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust,ignore\n+    /// # let vec = vec![1_u8];\n+    /// let count = bytecount::count(&vec, 0u8);\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub NAIVE_BYTECOUNT,"}, {"sha": "33c44f8b2dba9199a40e7c460f95aa9e570157f2", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -25,7 +25,7 @@ declare_clippy_lint! {\n     /// complexity.\n     ///\n     /// ### Example\n-    /// No. You'll see it when you get the warning.\n+    /// You'll see it when you get the warning.\n     #[clippy::version = \"1.35.0\"]\n     pub COGNITIVE_COMPLEXITY,\n     nursery,"}, {"sha": "3eceb848822e95bfca48bbd2f30d269757e767a2", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -41,7 +41,7 @@ declare_clippy_lint! {\n     ///\n     /// ```\n     ///\n-    /// Should be written:\n+    /// Use instead:\n     ///\n     /// ```rust,ignore\n     /// if x && y {"}, {"sha": "913e081af3bdae6bb8ec557f0e11a66cd586fcb6", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -34,7 +34,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     ///\n-    /// Could be written:\n+    /// Use instead:\n     ///\n     /// ```rust,ignore\n     /// use std::cmp::Ordering;"}, {"sha": "1e9a1153011000397b0b8fdf731935c4fd131973", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -141,7 +141,7 @@ declare_clippy_lint! {\n     /// };\n     /// ```\n     ///\n-    /// Could be written as:\n+    /// Use instead:\n     /// ```ignore\n     /// println!(\"Hello World\");\n     /// let foo = if \u2026 {"}, {"sha": "e98691fd5bb0ac0988185898c174c4f6372af61c", "filename": "clippy_lints/src/derivable_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fderivable_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fderivable_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderivable_impls.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -21,7 +21,7 @@ declare_clippy_lint! {\n     ///     bar: bool\n     /// }\n     ///\n-    /// impl std::default::Default for Foo {\n+    /// impl Default for Foo {\n     ///     fn default() -> Self {\n     ///         Self {\n     ///             bar: false"}, {"sha": "ee0440e52ff85a1ec3bb65d8c88d4801348fa2d3", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -24,7 +24,7 @@ declare_clippy_lint! {\n     /// if x == y || x < y {}\n     /// ```\n     ///\n-    /// Could be written as:\n+    /// Use instead:\n     ///\n     /// ```rust\n     /// # let x = 1;"}, {"sha": "a33ef5ce6e37c5a30b4c9586ffe5590bfba66235", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -13,23 +13,21 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```rust\n-    /// // Bad\n     /// fn simple_double_parens() -> i32 {\n     ///     ((0))\n     /// }\n     ///\n-    /// // Good\n+    /// # fn foo(bar: usize) {}\n+    /// foo((0));\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust\n     /// fn simple_no_parens() -> i32 {\n     ///     0\n     /// }\n     ///\n-    /// // or\n-    ///\n     /// # fn foo(bar: usize) {}\n-    /// // Bad\n-    /// foo((0));\n-    ///\n-    /// // Good\n     /// foo(0);\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]"}, {"sha": "d85ace3a279b3b8e4b9d586301c06c75222f5246", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -22,15 +22,17 @@ declare_clippy_lint! {\n     /// ### Example\n     /// ```rust\n     /// # use std::time::Duration;\n-    /// let dur = Duration::new(5, 0);\n-    ///\n-    /// // Bad\n-    /// let _micros = dur.subsec_nanos() / 1_000;\n-    /// let _millis = dur.subsec_nanos() / 1_000_000;\n+    /// # let duration = Duration::new(5, 0);\n+    /// let micros = duration.subsec_nanos() / 1_000;\n+    /// let millis = duration.subsec_nanos() / 1_000_000;\n+    /// ```\n     ///\n-    /// // Good\n-    /// let _micros = dur.subsec_micros();\n-    /// let _millis = dur.subsec_millis();\n+    /// Use instead:\n+    /// ```rust\n+    /// # use std::time::Duration;\n+    /// # let duration = Duration::new(5, 0);\n+    /// let micros = duration.subsec_micros();\n+    /// let millis = duration.subsec_millis();\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub DURATION_SUBSEC,"}, {"sha": "bf4488570eaf21d190f3c2d252098103070bfaaa", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -26,7 +26,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     ///\n-    /// Could be written:\n+    /// Use instead:\n     ///\n     /// ```rust\n     /// # fn a() {}"}, {"sha": "bbebc02441412aa5ab36a72d8a9574ccea8c58fc", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -23,12 +23,11 @@ declare_clippy_lint! {\n     ///\n     ///\n     /// ### Example\n-    /// Bad:\n     /// ```rust\n     /// enum Test {}\n     /// ```\n     ///\n-    /// Good:\n+    /// Use instead:\n     /// ```rust\n     /// #![feature(never_type)]\n     ///"}, {"sha": "27743a0ebec7e59dc688de5547043a4b2b60e95b", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -46,7 +46,7 @@ declare_clippy_lint! {\n     ///     map.insert(k, v);\n     /// }\n     /// ```\n-    /// can both be rewritten as:\n+    /// Use instead:\n     /// ```rust\n     /// # use std::collections::HashMap;\n     /// # let mut map = HashMap::new();"}, {"sha": "263a5b573c9cf92420e066ff99d7c8183ebbeedf", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -32,7 +32,7 @@ declare_clippy_lint! {\n     ///     BattenbergCake,\n     /// }\n     /// ```\n-    /// Could be written as:\n+    /// Use instead:\n     /// ```rust\n     /// enum Cake {\n     ///     BlackForest,"}, {"sha": "c3176d987c6371ef7f631dc4f2b409bcc68099ca", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -30,9 +30,9 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # let x = 1;\n     /// if x + 1 == x + 1 {}\n-    /// ```\n-    /// or\n-    /// ```rust\n+    ///\n+    /// // or\n+    ///\n     /// # let a = 3;\n     /// # let b = 4;\n     /// assert_eq!(a, a);"}, {"sha": "ef1216358dd97eb8eaa6dd00ddfbf3983c056e85", "filename": "clippy_lints/src/equatable_if_let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fequatable_if_let.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -26,7 +26,7 @@ declare_clippy_lint! {\n     ///     do_thing();\n     /// }\n     /// ```\n-    /// Should be written\n+    /// Use instead:\n     /// ```rust,ignore\n     /// if x == Some(2) {\n     ///     do_thing();"}, {"sha": "b0854ed9bbb45ec380f78d9512dad8f5a18fe140", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -31,12 +31,14 @@ declare_clippy_lint! {\n     /// ### Example\n     /// ```rust\n     /// # fn foo(bar: usize) {}\n-    /// // Bad\n     /// let x = Box::new(1);\n     /// foo(*x);\n     /// println!(\"{}\", *x);\n+    /// ```\n     ///\n-    /// // Good\n+    /// Use instead:\n+    /// ```rust\n+    /// # fn foo(bar: usize) {}\n     /// let x = 1;\n     /// foo(x);\n     /// println!(\"{}\", x);"}, {"sha": "a2af10e2ba5eabf5dd9ada51a7df0a22b8a2be81", "filename": "clippy_lints/src/excessive_bools.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_bools.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -18,7 +18,6 @@ declare_clippy_lint! {\n     /// readability and API.\n     ///\n     /// ### Example\n-    /// Bad:\n     /// ```rust\n     /// struct S {\n     ///     is_pending: bool,\n@@ -27,7 +26,7 @@ declare_clippy_lint! {\n     /// }\n     /// ```\n     ///\n-    /// Good:\n+    /// Use instead:\n     /// ```rust\n     /// enum S {\n     ///     Pending,"}, {"sha": "6b9805efbcfc2d78173eade250e6e78b3c08c9a7", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -21,8 +21,16 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use std::io::Write;\n     /// # let bar = \"furchtbar\";\n-    /// // this would be clearer as `eprintln!(\"foo: {:?}\", bar);`\n     /// writeln!(&mut std::io::stderr(), \"foo: {:?}\", bar).unwrap();\n+    /// writeln!(&mut std::io::stdout(), \"foo: {:?}\", bar).unwrap();\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust\n+    /// # use std::io::Write;\n+    /// # let bar = \"furchtbar\";\n+    /// eprintln!(\"foo: {:?}\", bar);\n+    /// println!(\"foo: {:?}\", bar);\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub EXPLICIT_WRITE,"}, {"sha": "b88e53aeca693d42f40d3d69f82a6ef17ac4b276", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -20,16 +20,15 @@ declare_clippy_lint! {\n     /// ```rust\n     /// struct Foo(i32);\n     ///\n-    /// // Bad\n     /// impl From<String> for Foo {\n     ///     fn from(s: String) -> Self {\n     ///         Foo(s.parse().unwrap())\n     ///     }\n     /// }\n     /// ```\n     ///\n+    /// Use instead:\n     /// ```rust\n-    /// // Good\n     /// struct Foo(i32);\n     ///\n     /// impl TryFrom<String> for Foo {"}, {"sha": "f850ea31f4d6e54b249587e0390df2685d4ed5dd", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -19,11 +19,12 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```rust\n-    /// // Bad\n     /// let v: f32 = 0.123_456_789_9;\n     /// println!(\"{}\", v); //  0.123_456_789\n+    /// ```\n     ///\n-    /// // Good\n+    /// Use instead:\n+    /// ```rust\n     /// let v: f64 = 0.123_456_789_9;\n     /// println!(\"{}\", v); //  0.123_456_789_9\n     /// ```"}, {"sha": "df9b41d2c98bef1fe10d2f1eca1fe10e41477aab", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -35,8 +35,7 @@ declare_clippy_lint! {\n     /// let _ = a.exp() - 1.0;\n     /// ```\n     ///\n-    /// is better expressed as\n-    ///\n+    /// Use instead:\n     /// ```rust\n     /// let a = 3f32;\n     /// let _ = a.cbrt();"}, {"sha": "3084c70589fa331fe89206432622d0ead7fe36fc", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -25,12 +25,13 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust\n-    ///\n-    /// // Bad\n     /// let foo = \"foo\";\n     /// format!(\"{}\", foo);\n+    /// ```\n     ///\n-    /// // Good\n+    /// Use instead:\n+    /// ```rust\n+    /// let foo = \"foo\";\n     /// foo.to_owned();\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]"}, {"sha": "db0166da57f0e343fb65e3898b8320b3b42bd1f3", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -36,12 +36,18 @@ declare_clippy_lint! {\n     /// This is either a typo in the binary operator or confusing.\n     ///\n     /// ### Example\n-    /// ```rust,ignore\n-    /// if foo <- 30 { // this should be `foo < -30` but looks like a different operator\n-    /// }\n+    /// ```rust\n+    /// # let foo = true;\n+    /// # let bar = false;\n+    /// // &&! looks like a different operator\n+    /// if foo &&! bar {}\n+    /// ```\n     ///\n-    /// if foo &&! bar { // this should be `foo && !bar` but looks like a different operator\n-    /// }\n+    /// Use instead:\n+    /// ```rust\n+    /// # let foo = true;\n+    /// # let bar = false;\n+    /// if foo && !bar {}\n     /// ```\n     #[clippy::version = \"1.40.0\"]\n     pub SUSPICIOUS_UNARY_OP_FORMATTING,"}, {"sha": "d61be78895ffc50a41da823a7e10e7dfe5509197", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -180,29 +180,24 @@ declare_clippy_lint! {\n     /// ### Example\n     /// ```rust\n     /// # let opt = Some(1);\n-    ///\n-    /// // Bad\n+    /// # let res: Result<i32, std::io::Error> = Ok(1);\n     /// for x in opt {\n     ///     // ..\n     /// }\n     ///\n-    /// // Good\n-    /// if let Some(x) = opt {\n+    /// for x in &res {\n     ///     // ..\n     /// }\n     /// ```\n     ///\n-    /// // or\n-    ///\n+    /// Use instead:\n     /// ```rust\n+    /// # let opt = Some(1);\n     /// # let res: Result<i32, std::io::Error> = Ok(1);\n-    ///\n-    /// // Bad\n-    /// for x in &res {\n+    /// if let Some(x) = opt {\n     ///     // ..\n     /// }\n     ///\n-    /// // Good\n     /// if let Ok(x) = res {\n     ///     // ..\n     /// }"}, {"sha": "08c89ceb79649b2d6c26edaec777539abf08157d", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 40, "deletions": 59, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -194,25 +194,18 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust\n-    /// # let opt = Some(1);\n-    ///\n-    /// // Bad\n-    /// opt.unwrap();\n-    ///\n-    /// // Good\n-    /// opt.expect(\"more helpful message\");\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option.unwrap();\n+    /// result.unwrap();\n     /// ```\n     ///\n-    /// // or\n-    ///\n+    /// Use instead:\n     /// ```rust\n-    /// # let res: Result<usize, ()> = Ok(1);\n-    ///\n-    /// // Bad\n-    /// res.unwrap();\n-    ///\n-    /// // Good\n-    /// res.expect(\"more helpful message\");\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option.expect(\"more helpful message\");\n+    /// result.expect(\"more helpful message\");\n     /// ```\n     #[clippy::version = \"1.45.0\"]\n     pub UNWRAP_USED,\n@@ -235,27 +228,21 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust,ignore\n-    /// # let opt = Some(1);\n-    ///\n-    /// // Bad\n-    /// opt.expect(\"one\");\n-    ///\n-    /// // Good\n-    /// let opt = Some(1);\n-    /// opt?;\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option.expect(\"one\");\n+    /// result.expect(\"one\");\n     /// ```\n     ///\n-    /// // or\n-    ///\n-    /// ```rust\n-    /// # let res: Result<usize, ()> = Ok(1);\n+    /// Use instead:\n+    /// ```rust,ignore\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// option?;\n     ///\n-    /// // Bad\n-    /// res.expect(\"one\");\n+    /// // or\n     ///\n-    /// // Good\n-    /// res?;\n-    /// # Ok::<(), ()>(())\n+    /// result?;\n     /// ```\n     #[clippy::version = \"1.45.0\"]\n     pub EXPECT_USED,\n@@ -431,26 +418,20 @@ declare_clippy_lint! {\n     ///\n     /// ### Examples\n     /// ```rust\n-    /// # let x = Some(1);\n-    ///\n-    /// // Bad\n-    /// x.map(|a| a + 1).unwrap_or(0);\n-    ///\n-    /// // Good\n-    /// x.map_or(0, |a| a + 1);\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n+    /// # fn some_function(foo: ()) -> usize { 1 }\n+    /// option.map(|a| a + 1).unwrap_or(0);\n+    /// result.map(|a| a + 1).unwrap_or_else(some_function);\n     /// ```\n     ///\n-    /// // or\n-    ///\n+    /// Use instead:\n     /// ```rust\n-    /// # let x: Result<usize, ()> = Ok(1);\n+    /// # let option = Some(1);\n+    /// # let result: Result<usize, ()> = Ok(1);\n     /// # fn some_function(foo: ()) -> usize { 1 }\n-    ///\n-    /// // Bad\n-    /// x.map(|a| a + 1).unwrap_or_else(some_function);\n-    ///\n-    /// // Good\n-    /// x.map_or_else(some_function, |a| a + 1);\n+    /// option.map_or(0, |a| a + 1);\n+    /// result.map_or_else(some_function, |a| a + 1);\n     /// ```\n     #[clippy::version = \"1.45.0\"]\n     pub MAP_UNWRAP_OR,\n@@ -793,13 +774,14 @@ declare_clippy_lint! {\n     /// # let foo = Some(String::new());\n     /// foo.unwrap_or(String::new());\n     /// ```\n-    /// this can instead be written:\n+    ///\n+    /// Use instead:\n     /// ```rust\n     /// # let foo = Some(String::new());\n     /// foo.unwrap_or_else(String::new);\n-    /// ```\n-    /// or\n-    /// ```rust\n+    ///\n+    /// // or\n+    ///\n     /// # let foo = Some(String::new());\n     /// foo.unwrap_or_default();\n     /// ```\n@@ -863,15 +845,14 @@ declare_clippy_lint! {\n     /// # let err_code = \"418\";\n     /// # let err_msg = \"I'm a teapot\";\n     /// foo.expect(&format!(\"Err {}: {}\", err_code, err_msg));\n-    /// ```\n-    /// or\n-    /// ```rust\n+    ///\n+    /// // or\n+    ///\n     /// # let foo = Some(String::new());\n-    /// # let err_code = \"418\";\n-    /// # let err_msg = \"I'm a teapot\";\n     /// foo.expect(format!(\"Err {}: {}\", err_code, err_msg).as_str());\n     /// ```\n-    /// this can instead be written:\n+    ///\n+    /// Use instead:\n     /// ```rust\n     /// # let foo = Some(String::new());\n     /// # let err_code = \"418\";"}, {"sha": "a081cde85725b3518b6f3ae863b2eee3d14f1e44", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -18,11 +18,11 @@ declare_clippy_lint! {\n     /// the least it hurts readability of the code.\n     ///\n     /// ### Example\n-    /// ```ignore\n+    /// ```rust,ignore\n     /// min(0, max(100, x))\n-    /// ```\n-    /// or\n-    /// ```ignore\n+    ///\n+    /// // or\n+    ///\n     /// x.max(100).min(0)\n     /// ```\n     /// It will always be equal to `0`. Probably the author meant to clamp the value"}, {"sha": "5566569945322db0f70b110946eeca6b9bb02c00", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -103,11 +103,14 @@ declare_clippy_lint! {\n     /// let x = 1.2331f64;\n     /// let y = 1.2332f64;\n     ///\n-    /// // Bad\n     /// if y == 1.23f64 { }\n     /// if y != x {} // where both are floats\n+    /// ```\n     ///\n-    /// // Good\n+    /// Use instead:\n+    /// ```rust\n+    /// # let x = 1.2331f64;\n+    /// # let y = 1.2332f64;\n     /// let error_margin = f64::EPSILON; // Use an epsilon for comparison\n     /// // Or, if Rust <= 1.42, use `std::f64::EPSILON` constant instead.\n     /// // let error_margin = std::f64::EPSILON;\n@@ -258,10 +261,13 @@ declare_clippy_lint! {\n     /// let x: f64 = 1.0;\n     /// const ONE: f64 = 1.00;\n     ///\n-    /// // Bad\n     /// if x == ONE { } // where both are floats\n+    /// ```\n     ///\n-    /// // Good\n+    /// Use instead:\n+    /// ```rust\n+    /// # let x: f64 = 1.0;\n+    /// # const ONE: f64 = 1.00;\n     /// let error_margin = f64::EPSILON; // Use an epsilon for comparison\n     /// // Or, if Rust <= 1.42, use `std::f64::EPSILON` constant instead.\n     /// // let error_margin = std::f64::EPSILON;"}, {"sha": "321db08dfe89afeceafa2ced7867c3074eaf2644", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -22,9 +22,12 @@ declare_clippy_lint! {\n     /// ### Example\n     /// ```rust,ignore\n     /// debug_assert_eq!(vec![3].pop(), Some(3));\n+    ///\n     /// // or\n-    /// fn take_a_mut_parameter(_: &mut u32) -> bool { unimplemented!() }\n-    /// debug_assert!(take_a_mut_parameter(&mut 5));\n+    ///\n+    /// # let mut x = 5;\n+    /// # fn takes_a_mut_parameter(_: &mut u32) -> bool { unimplemented!() }\n+    /// debug_assert!(takes_a_mut_parameter(&mut x));\n     /// ```\n     #[clippy::version = \"1.40.0\"]\n     pub DEBUG_ASSERT_WITH_MUT_CALL,"}, {"sha": "b91be0eb4bed8e57168c749998d1c04292ae53b6", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -54,14 +54,14 @@ declare_clippy_lint! {\n     /// fn func<T: Clone + Default>(arg: T) where T: Clone + Default {}\n     /// ```\n     ///\n-    /// Could be written as:\n-    ///\n+    /// Use instead:\n     /// ```rust\n+    /// # mod hidden {\n     /// fn func<T: Clone + Default>(arg: T) {}\n-    /// ```\n-    /// or\n+    /// # }\n+    ///\n+    /// // or\n     ///\n-    /// ```rust\n     /// fn func<T>(arg: T) where T: Clone + Default {}\n     /// ```\n     #[clippy::version = \"1.47.0\"]"}, {"sha": "3e0b1c5c4f782c3d55afab4ee2734b2451a1333c", "filename": "doc/adding_lints.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=0d5ace3ed22fdd6ee25ee1dda42139d36c0aeec4", "patch": "@@ -516,11 +516,12 @@ declare_clippy_lint! {\n     /// ### Example\n     ///\n     /// ```rust,ignore\n-    /// // Bad\n-    /// Insert a short example of code that triggers the lint\n-    ///\n-    /// // Good\n-    /// Insert a short example of improved code that doesn't trigger the lint\n+    /// // A short example of code that triggers the lint\n+    /// ```\n+    /// \n+    /// Use instead:\n+    /// ```rust,ignore\n+    /// // A short example of improved code that doesn't trigger the lint\n     /// ```\n     #[clippy::version = \"1.29.0\"]\n     pub FOO_FUNCTIONS,"}]}