{"sha": "798da237725a8b1292dfbcee6847bb297586eb44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OGRhMjM3NzI1YThiMTI5MmRmYmNlZTY4NDdiYjI5NzU4NmViNDQ=", "commit": {"author": {"name": "Alexander Light", "email": "scialexlight@gmail.com", "date": "2014-11-30T14:51:15Z"}, "committer": {"name": "Alexander Light", "email": "scialexlight@gmail.com", "date": "2014-11-30T14:51:15Z"}, "message": "allow macro expansions in attributes", "tree": {"sha": "da6fa459f994cd6b1972433e7b03670bfa9bb1ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da6fa459f994cd6b1972433e7b03670bfa9bb1ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/798da237725a8b1292dfbcee6847bb297586eb44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/798da237725a8b1292dfbcee6847bb297586eb44", "html_url": "https://github.com/rust-lang/rust/commit/798da237725a8b1292dfbcee6847bb297586eb44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/798da237725a8b1292dfbcee6847bb297586eb44/comments", "author": {"login": "scialex", "id": 726053, "node_id": "MDQ6VXNlcjcyNjA1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/726053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scialex", "html_url": "https://github.com/scialex", "followers_url": "https://api.github.com/users/scialex/followers", "following_url": "https://api.github.com/users/scialex/following{/other_user}", "gists_url": "https://api.github.com/users/scialex/gists{/gist_id}", "starred_url": "https://api.github.com/users/scialex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scialex/subscriptions", "organizations_url": "https://api.github.com/users/scialex/orgs", "repos_url": "https://api.github.com/users/scialex/repos", "events_url": "https://api.github.com/users/scialex/events{/privacy}", "received_events_url": "https://api.github.com/users/scialex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scialex", "id": 726053, "node_id": "MDQ6VXNlcjcyNjA1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/726053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scialex", "html_url": "https://github.com/scialex", "followers_url": "https://api.github.com/users/scialex/followers", "following_url": "https://api.github.com/users/scialex/following{/other_user}", "gists_url": "https://api.github.com/users/scialex/gists{/gist_id}", "starred_url": "https://api.github.com/users/scialex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scialex/subscriptions", "organizations_url": "https://api.github.com/users/scialex/orgs", "repos_url": "https://api.github.com/users/scialex/repos", "events_url": "https://api.github.com/users/scialex/events{/privacy}", "received_events_url": "https://api.github.com/users/scialex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52888a7c47ce409fc80e56430056701d7349d27e", "url": "https://api.github.com/repos/rust-lang/rust/commits/52888a7c47ce409fc80e56430056701d7349d27e", "html_url": "https://github.com/rust-lang/rust/commit/52888a7c47ce409fc80e56430056701d7349d27e"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "b9fd28ecfc8758df917ce7f10d4c98108077e46e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/798da237725a8b1292dfbcee6847bb297586eb44/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798da237725a8b1292dfbcee6847bb297586eb44/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=798da237725a8b1292dfbcee6847bb297586eb44", "patch": "@@ -1669,6 +1669,12 @@ impl<'a> Parser<'a> {\n     /// Matches token_lit = LIT_INTEGER | ...\n     pub fn lit_from_token(&mut self, tok: &token::Token) -> Lit_ {\n         match *tok {\n+            token::Interpolated(token::NtExpr(ref v)) => {\n+                match v.node {\n+                    ExprLit(ref lit) => { lit.node.clone() }\n+                    _ => { self.unexpected_last(tok); }\n+                }\n+            }\n             token::Literal(lit, suf) => {\n                 let (suffix_illegal, out) = match lit {\n                     token::Byte(i) => (true, LitByte(parse::byte_lit(i.as_str()).val0())),"}]}