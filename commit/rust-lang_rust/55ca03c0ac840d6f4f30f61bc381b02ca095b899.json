{"sha": "55ca03c0ac840d6f4f30f61bc381b02ca095b899", "node_id": "C_kwDOAAsO6NoAKDU1Y2EwM2MwYWM4NDBkNmY0ZjMwZjYxYmMzODFiMDJjYTA5NWI4OTk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-08T20:51:13Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-12T17:52:10Z"}, "message": "Insert error after checking for binding usability.", "tree": {"sha": "20c7bb4aa4e317d08b631ba46b280ba9a7ea6727", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20c7bb4aa4e317d08b631ba46b280ba9a7ea6727"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55ca03c0ac840d6f4f30f61bc381b02ca095b899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55ca03c0ac840d6f4f30f61bc381b02ca095b899", "html_url": "https://github.com/rust-lang/rust/commit/55ca03c0ac840d6f4f30f61bc381b02ca095b899", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55ca03c0ac840d6f4f30f61bc381b02ca095b899/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24b37a737467ccb4ef93a95f822b9933f3aa56b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/24b37a737467ccb4ef93a95f822b9933f3aa56b0", "html_url": "https://github.com/rust-lang/rust/commit/24b37a737467ccb4ef93a95f822b9933f3aa56b0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "776ad7047320da28ac3874352499ef80078c6952", "filename": "compiler/rustc_resolve/src/ident.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55ca03c0ac840d6f4f30f61bc381b02ca095b899/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ca03c0ac840d6f4f30f61bc381b02ca095b899/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fident.rs?ref=55ca03c0ac840d6f4f30f61bc381b02ca095b899", "patch": "@@ -913,12 +913,6 @@ impl<'a> Resolver<'a> {\n                 return Err((Determined, Weak::No));\n             };\n \n-            if !restricted_shadowing && binding.expansion != LocalExpnId::ROOT {\n-                if let NameBindingKind::Res(_, true) = binding.kind {\n-                    self.macro_expanded_macro_export_errors.insert((path_span, binding.span));\n-                }\n-            }\n-\n             // If the primary binding is unusable, search further and return the shadowed glob\n             // binding if it exists. What we really want here is having two separate scopes in\n             // a module - one for non-globs and one for globs, but until that's done use this\n@@ -965,6 +959,12 @@ impl<'a> Resolver<'a> {\n                 });\n             }\n \n+            if !restricted_shadowing && binding.expansion != LocalExpnId::ROOT {\n+                if let NameBindingKind::Res(_, true) = binding.kind {\n+                    self.macro_expanded_macro_export_errors.insert((path_span, binding.span));\n+                }\n+            }\n+\n             self.record_use(ident, binding, restricted_shadowing);\n             return Ok(binding);\n         }"}]}