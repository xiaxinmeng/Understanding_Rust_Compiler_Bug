{"sha": "12705b47007f3244ef9d06d2281e1b20cb1dd0f1", "node_id": "C_kwDOAAsO6NoAKDEyNzA1YjQ3MDA3ZjMyNDRlZjlkMDZkMjI4MWUxYjIwY2IxZGQwZjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-21T18:36:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-21T18:36:46Z"}, "message": "Rollup merge of #91192 - r00ster91:futuredocs, r=GuillaumeGomez\n\nSome improvements to the async docs\n\nThe goal here is to make the docs overall a little bit more comprehensive and add more links between the things.\n\nOne thing that's not working yet is the links to the keywords. Somehow I couldn't get them to work.\n\nr? ````@GuillaumeGomez```` do you know how I could get the keyword links to work?", "tree": {"sha": "c27e13c6336c344df60dcab8a74cffeb0880ae50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c27e13c6336c344df60dcab8a74cffeb0880ae50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12705b47007f3244ef9d06d2281e1b20cb1dd0f1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiE9u/CRBK7hj4Ov3rIwAAKEUIAJZiAXyhofRye2msmvGJmwxy\ndhatjJrezrvgXvvH9UyCuqBUcDyxemvu7KuBzx9jwgaULS6qrFk9SRdVR11U2RKQ\ncIyI7zxiDBnuCXDqS27tKsAWbq7eIy8jofKdbVsDNfYWi6ufks3eWentB7UfVFCg\nIRbOJuxLNiqhMMUE+vNQPxbSaCxe/u/jCKckMjYvOp9gVfNFoJUSjmp0wPvHGv/t\nZs1ln4oZED2ixtMDkvv5hk5ivYbhHHm7TqmQX64AYmVyA2RM9cljoPvT8KP202hK\n4t8X+wl+N1tuO/UqDyxfwzPEdmA7kw9Bbhje3nVLaPZvMSiuqrV5C6btAL5gwrc=\n=YJ+x\n-----END PGP SIGNATURE-----\n", "payload": "tree c27e13c6336c344df60dcab8a74cffeb0880ae50\nparent 1103d2e914b67c18b0deb86073c26c6aefda761d\nparent 297364eb07a3f3d1dfab35fc6187202293ecffe0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645468606 +0100\ncommitter GitHub <noreply@github.com> 1645468606 +0100\n\nRollup merge of #91192 - r00ster91:futuredocs, r=GuillaumeGomez\n\nSome improvements to the async docs\n\nThe goal here is to make the docs overall a little bit more comprehensive and add more links between the things.\n\nOne thing that's not working yet is the links to the keywords. Somehow I couldn't get them to work.\n\nr? ````@GuillaumeGomez```` do you know how I could get the keyword links to work?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12705b47007f3244ef9d06d2281e1b20cb1dd0f1", "html_url": "https://github.com/rust-lang/rust/commit/12705b47007f3244ef9d06d2281e1b20cb1dd0f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12705b47007f3244ef9d06d2281e1b20cb1dd0f1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1103d2e914b67c18b0deb86073c26c6aefda761d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1103d2e914b67c18b0deb86073c26c6aefda761d", "html_url": "https://github.com/rust-lang/rust/commit/1103d2e914b67c18b0deb86073c26c6aefda761d"}, {"sha": "297364eb07a3f3d1dfab35fc6187202293ecffe0", "url": "https://api.github.com/repos/rust-lang/rust/commits/297364eb07a3f3d1dfab35fc6187202293ecffe0", "html_url": "https://github.com/rust-lang/rust/commit/297364eb07a3f3d1dfab35fc6187202293ecffe0"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "f29d3e1e98b724777673fef70d399b4408eb2baa", "filename": "library/core/src/future/future.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/12705b47007f3244ef9d06d2281e1b20cb1dd0f1/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12705b47007f3244ef9d06d2281e1b20cb1dd0f1/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs?ref=12705b47007f3244ef9d06d2281e1b20cb1dd0f1", "patch": "@@ -5,7 +5,7 @@ use crate::ops;\n use crate::pin::Pin;\n use crate::task::{Context, Poll};\n \n-/// A future represents an asynchronous computation.\n+/// A future represents an asynchronous computation obtained by use of [`async`].\n ///\n /// A future is a value that might not have finished computing yet. This kind of\n /// \"asynchronous value\" makes it possible for a thread to continue doing useful\n@@ -23,6 +23,7 @@ use crate::task::{Context, Poll};\n /// When using a future, you generally won't call `poll` directly, but instead\n /// `.await` the value.\n ///\n+/// [`async`]: ../../std/keyword.async.html\n /// [`Waker`]: crate::task::Waker\n #[doc(notable_trait)]\n #[must_use = \"futures do nothing unless you `.await` or poll them\"]"}, {"sha": "9b89f766c67bf648779c63e1ddd4df8a555232dc", "filename": "library/core/src/future/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/12705b47007f3244ef9d06d2281e1b20cb1dd0f1/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12705b47007f3244ef9d06d2281e1b20cb1dd0f1/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fmod.rs?ref=12705b47007f3244ef9d06d2281e1b20cb1dd0f1", "patch": "@@ -1,6 +1,13 @@\n #![stable(feature = \"futures_api\", since = \"1.36.0\")]\n \n-//! Asynchronous values.\n+//! Asynchronous basic functionality.\n+//!\n+//! Please see the fundamental [`async`] and [`await`] keywords and the [async book]\n+//! for more information on asynchronous programming in Rust.\n+//!\n+//! [`async`]: ../../std/keyword.async.html\n+//! [`await`]: ../../std/keyword.await.html\n+//! [async book]: https://rust-lang.github.io/async-book/\n \n use crate::{\n     ops::{Generator, GeneratorState},"}, {"sha": "5b76259afc11de8c0bf7f6830e1c33be675fae3e", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/12705b47007f3244ef9d06d2281e1b20cb1dd0f1/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12705b47007f3244ef9d06d2281e1b20cb1dd0f1/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=12705b47007f3244ef9d06d2281e1b20cb1dd0f1", "patch": "@@ -2203,37 +2203,39 @@ mod where_keyword {}\n ///\n /// Use `async` in front of `fn`, `closure`, or a `block` to turn the marked code into a `Future`.\n /// As such the code will not be run immediately, but will only be evaluated when the returned\n-/// future is `.await`ed.\n+/// future is [`.await`]ed.\n ///\n-/// We have written an [async book] detailing async/await and trade-offs compared to using threads.\n+/// We have written an [async book] detailing `async`/`await` and trade-offs compared to using threads.\n ///\n /// ## Editions\n ///\n /// `async` is a keyword from the 2018 edition onwards.\n ///\n-/// It is available for use in stable rust from version 1.39 onwards.\n+/// It is available for use in stable Rust from version 1.39 onwards.\n ///\n /// [`Future`]: future::Future\n+/// [`.await`]: ../std/keyword.await.html\n /// [async book]: https://rust-lang.github.io/async-book/\n mod async_keyword {}\n \n #[doc(keyword = \"await\")]\n //\n /// Suspend execution until the result of a [`Future`] is ready.\n ///\n-/// `.await`ing a future will suspend the current function's execution until the `executor`\n+/// `.await`ing a future will suspend the current function's execution until the executor\n /// has run the future to completion.\n ///\n-/// Read the [async book] for details on how async/await and executors work.\n+/// Read the [async book] for details on how [`async`]/`await` and executors work.\n ///\n /// ## Editions\n ///\n /// `await` is a keyword from the 2018 edition onwards.\n ///\n-/// It is available for use in stable rust from version 1.39 onwards.\n+/// It is available for use in stable Rust from version 1.39 onwards.\n ///\n /// [`Future`]: future::Future\n /// [async book]: https://rust-lang.github.io/async-book/\n+/// [`async`]: ../std/keyword.async.html\n mod await_keyword {}\n \n #[doc(keyword = \"dyn\")]"}]}