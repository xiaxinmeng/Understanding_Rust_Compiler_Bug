{"sha": "a7347a941bc45e2d1488045689bb5606ea156576", "node_id": "C_kwDOAAsO6NoAKGE3MzQ3YTk0MWJjNDVlMmQxNDg4MDQ1Njg5YmI1NjA2ZWExNTY1NzY", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-07-11T13:26:58Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-07-11T13:26:58Z"}, "message": "Keep unstable target features for asm feature checking\n\nInline assembly uses the target features to determine which registers\nare available on the current target. However it needs to be able to\naccess unstable target features for this.\n\nFixes #99071", "tree": {"sha": "b45f08c06f83aa56a557e3983ac20a4b45223f40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b45f08c06f83aa56a557e3983ac20a4b45223f40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7347a941bc45e2d1488045689bb5606ea156576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7347a941bc45e2d1488045689bb5606ea156576", "html_url": "https://github.com/rust-lang/rust/commit/a7347a941bc45e2d1488045689bb5606ea156576", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7347a941bc45e2d1488045689bb5606ea156576/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede985e8b811af92bb07412c838f3d2bde23f92f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede985e8b811af92bb07412c838f3d2bde23f92f", "html_url": "https://github.com/rust-lang/rust/commit/ede985e8b811af92bb07412c838f3d2bde23f92f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "da6e788700624b25d6b31bf8145d5ea2564d5e48", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7347a941bc45e2d1488045689bb5606ea156576/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7347a941bc45e2d1488045689bb5606ea156576/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=a7347a941bc45e2d1488045689bb5606ea156576", "patch": "@@ -167,7 +167,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n         }\n     }\n \n-    fn target_features(&self, _sess: &Session) -> Vec<rustc_span::Symbol> {\n+    fn target_features(&self, _sess: &Session, _allow_unstable: bool) -> Vec<rustc_span::Symbol> {\n         vec![]\n     }\n "}]}