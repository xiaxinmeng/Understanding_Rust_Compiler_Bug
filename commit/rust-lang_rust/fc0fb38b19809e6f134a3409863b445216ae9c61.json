{"sha": "fc0fb38b19809e6f134a3409863b445216ae9c61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMGZiMzhiMTk4MDllNmYxMzRhMzQwOTg2M2I0NDUyMTZhZTljNjE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-30T18:37:07Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-31T14:25:51Z"}, "message": "Add macro test for prelude collision suggestions.", "tree": {"sha": "b2fff326d5a21c581038d247c2cd086ed65fff6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2fff326d5a21c581038d247c2cd086ed65fff6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc0fb38b19809e6f134a3409863b445216ae9c61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc0fb38b19809e6f134a3409863b445216ae9c61", "html_url": "https://github.com/rust-lang/rust/commit/fc0fb38b19809e6f134a3409863b445216ae9c61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc0fb38b19809e6f134a3409863b445216ae9c61/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a15dab9ce28f46fbcebbe117b18fc4a55d2b89b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a15dab9ce28f46fbcebbe117b18fc4a55d2b89b6", "html_url": "https://github.com/rust-lang/rust/commit/a15dab9ce28f46fbcebbe117b18fc4a55d2b89b6"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "a97dc176e1b8b019ccdef82fcb40adcfb3ead81d", "filename": "src/test/ui/rust-2021/future-prelude-collision-macros.fixed", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/fc0fb38b19809e6f134a3409863b445216ae9c61/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/fc0fb38b19809e6f134a3409863b445216ae9c61/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.fixed?ref=fc0fb38b19809e6f134a3409863b445216ae9c61", "patch": "@@ -0,0 +1,45 @@\n+// run-rustfix\n+// edition:2018\n+// check-pass\n+#![warn(rust_2021_prelude_collisions)]\n+#![allow(unreachable_code)]\n+\n+macro_rules! foo {\n+    () => {{\n+        123;\n+        S\n+    }};\n+}\n+\n+trait MyTry<T> {\n+    fn try_into(self, _: u8);\n+}\n+\n+struct S;\n+\n+impl MyTry<i32> for S {\n+    fn try_into(self, _: u8) {}\n+}\n+\n+trait TryFromU8: Sized {\n+    fn try_from(_: u8);\n+}\n+\n+impl TryFromU8 for u32 {\n+    fn try_from(_: u8) {}\n+}\n+\n+macro_rules! bar {\n+    () => {\n+        u32\n+    };\n+}\n+\n+fn main() {\n+    MyTry::try_into(foo!(), todo!());\n+    //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition\n+    <bar!() as TryFromU8>::try_from(0);\n+    //~^ WARNING trait-associated function `try_from` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition\n+}"}, {"sha": "82484b5b3688d52dc8c98fe87fa8a24cd1b03352", "filename": "src/test/ui/rust-2021/future-prelude-collision-macros.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/fc0fb38b19809e6f134a3409863b445216ae9c61/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc0fb38b19809e6f134a3409863b445216ae9c61/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.rs?ref=fc0fb38b19809e6f134a3409863b445216ae9c61", "patch": "@@ -0,0 +1,45 @@\n+// run-rustfix\n+// edition:2018\n+// check-pass\n+#![warn(rust_2021_prelude_collisions)]\n+#![allow(unreachable_code)]\n+\n+macro_rules! foo {\n+    () => {{\n+        123;\n+        S\n+    }};\n+}\n+\n+trait MyTry<T> {\n+    fn try_into(self, _: u8);\n+}\n+\n+struct S;\n+\n+impl MyTry<i32> for S {\n+    fn try_into(self, _: u8) {}\n+}\n+\n+trait TryFromU8: Sized {\n+    fn try_from(_: u8);\n+}\n+\n+impl TryFromU8 for u32 {\n+    fn try_from(_: u8) {}\n+}\n+\n+macro_rules! bar {\n+    () => {\n+        u32\n+    };\n+}\n+\n+fn main() {\n+    foo!().try_into(todo!());\n+    //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition\n+    <bar!()>::try_from(0);\n+    //~^ WARNING trait-associated function `try_from` will become ambiguous in Rust 2021\n+    //~| WARNING this is accepted in the current edition\n+}"}, {"sha": "4c3543ca782e8340e8af45e94af425cdedffdec5", "filename": "src/test/ui/rust-2021/future-prelude-collision-macros.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fc0fb38b19809e6f134a3409863b445216ae9c61/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc0fb38b19809e6f134a3409863b445216ae9c61/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-macros.stderr?ref=fc0fb38b19809e6f134a3409863b445216ae9c61", "patch": "@@ -0,0 +1,25 @@\n+warning: trait method `try_into` will become ambiguous in Rust 2021\n+  --> $DIR/future-prelude-collision-macros.rs:39:5\n+   |\n+LL |     foo!().try_into(todo!());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: disambiguate the associated function: `MyTry::try_into(foo!(), todo!())`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/future-prelude-collision-macros.rs:4:9\n+   |\n+LL | #![warn(rust_2021_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/prelude.html>\n+\n+warning: trait-associated function `try_from` will become ambiguous in Rust 2021\n+  --> $DIR/future-prelude-collision-macros.rs:42:5\n+   |\n+LL |     <bar!()>::try_from(0);\n+   |     ^^^^^^^^^^^^^^^^^^ help: disambiguate the associated function: `<bar!() as TryFromU8>::try_from`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/prelude.html>\n+\n+warning: 2 warnings emitted\n+"}]}