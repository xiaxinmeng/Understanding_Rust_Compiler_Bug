{"sha": "512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMmM4YzFlZGZiYzZmOTQzMTMwNDVkM2Q2YmNhZGNkNDI3NTFjZDc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-19T07:00:04Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-19T07:00:04Z"}, "message": "Apply config.trailing_comma wherever possible", "tree": {"sha": "0a4ab3e736f7a03f6c96169ebbbcbd3d740566f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a4ab3e736f7a03f6c96169ebbbcbd3d740566f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "html_url": "https://github.com/rust-lang/rust/commit/512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2fd4fbf2cec27c94a0a33b640467b0d130c6a46", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2fd4fbf2cec27c94a0a33b640467b0d130c6a46", "html_url": "https://github.com/rust-lang/rust/commit/f2fd4fbf2cec27c94a0a33b640467b0d130c6a46"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "8abc607d6620ee5e762ce8aa83785ed4fdcc2bfe", "filename": "src/expr.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "patch": "@@ -1478,6 +1478,7 @@ fn rewrite_match(\n         .codemap\n         .span_after(mk_sp(cond.span.hi, arm_start_pos(&arms[0])), \"{\");\n \n+    let arm_num = arms.len();\n     for (i, arm) in arms.iter().enumerate() {\n         // Make sure we get the stuff between arms.\n         let missed_str = if i == 0 {\n@@ -1497,12 +1498,21 @@ fn rewrite_match(\n \n         let arm_str = arm.rewrite(&context, arm_shape.with_max_width(context.config));\n         if let Some(ref arm_str) = arm_str {\n-            result.push_str(arm_str);\n+            // Trim the trailing comma if necessary.\n+            if i == arm_num - 1 && context.config.trailing_comma() == SeparatorTactic::Never &&\n+                arm_str.ends_with(',')\n+            {\n+                result.push_str(&arm_str[0..arm_str.len() - 1])\n+            } else {\n+                result.push_str(arm_str)\n+            }\n         } else {\n             // We couldn't format the arm, just reproduce the source.\n             let snippet = context.snippet(mk_sp(arm_start_pos(arm), arm_end_pos(arm)));\n             result.push_str(&snippet);\n-            result.push_str(arm_comma(context.config, &arm.body));\n+            if context.config.trailing_comma() != SeparatorTactic::Never {\n+                result.push_str(arm_comma(context.config, &arm.body))\n+            }\n         }\n     }\n     // BytePos(1) = closing match brace."}, {"sha": "9adecb9be946db34d2b64022e1705e6b04a694b8", "filename": "src/items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "patch": "@@ -2267,12 +2267,12 @@ fn rewrite_args(\n         IndentStyle::Block => {\n             (\n                 indent.block_indent(context.config),\n-                SeparatorTactic::Vertical,\n+                context.config.trailing_comma(),\n                 true,\n             )\n         }\n         IndentStyle::Visual if last_line_ends_with_comment => {\n-            (arg_indent, SeparatorTactic::Vertical, true)\n+            (arg_indent, context.config.trailing_comma(), true)\n         }\n         IndentStyle::Visual => (arg_indent, SeparatorTactic::Never, false),\n     };\n@@ -2564,7 +2564,7 @@ fn rewrite_where_clause_rfc_style(\n     let comma_tactic = if suppress_comma {\n         SeparatorTactic::Never\n     } else {\n-        SeparatorTactic::Always\n+        context.config.trailing_comma()\n     };\n \n     let fmt = ListFormatting {"}, {"sha": "4da3b996f2994fdf3f7020e5b704f6a433108e84", "filename": "tests/source/configs-trailing_comma-never.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/tests%2Fsource%2Fconfigs-trailing_comma-never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/tests%2Fsource%2Fconfigs-trailing_comma-never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-trailing_comma-never.rs?ref=512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "patch": "@@ -10,4 +10,14 @@ fn main() {\n         let _ = safe_assert_eq!(reply_req_num, request_num, op);\n         return Ok((request_num, op, value));\n     }\n+\n+    // #1710\n+    pub struct FileInput {\n+        input: StringInput,\n+        file_name: OsString,\n+    }\n+    match len {\n+        Some(len) => Ok(new(self.input, self.pos + len)),\n+        None => Err(self),\n+    }\n }"}, {"sha": "ae0e50f96d18c99ae85e1d6397de9c1c4997edcc", "filename": "tests/target/configs-trailing_comma-never.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/tests%2Ftarget%2Fconfigs-trailing_comma-never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/512c8c1edfbc6f94313045d3d6bcadcd42751cd7/tests%2Ftarget%2Fconfigs-trailing_comma-never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-trailing_comma-never.rs?ref=512c8c1edfbc6f94313045d3d6bcadcd42751cd7", "patch": "@@ -22,4 +22,14 @@ fn main() {\n         let _ = safe_assert_eq!(reply_req_num, request_num, op);\n         return Ok((request_num, op, value));\n     }\n+\n+    // #1710\n+    pub struct FileInput {\n+        input: StringInput,\n+        file_name: OsString\n+    }\n+    match len {\n+        Some(len) => Ok(new(self.input, self.pos + len)),\n+        None => Err(self)\n+    }\n }"}]}