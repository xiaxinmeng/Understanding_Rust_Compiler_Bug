{"sha": "82a96a11abcb9cc4d342402746af270eb4f28325", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYTk2YTExYWJjYjljYzRkMzQyNDAyNzQ2YWYyNzBlYjRmMjgzMjU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-05T06:04:32Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-05T09:00:10Z"}, "message": "Ungate associated types.\n\nThey work pretty well now, and the stdlib is using them everywhere so\nthey're impossible to avoid anyway.", "tree": {"sha": "4d50e7e503253647ae58622ca7202f9a57505136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d50e7e503253647ae58622ca7202f9a57505136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82a96a11abcb9cc4d342402746af270eb4f28325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82a96a11abcb9cc4d342402746af270eb4f28325", "html_url": "https://github.com/rust-lang/rust/commit/82a96a11abcb9cc4d342402746af270eb4f28325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82a96a11abcb9cc4d342402746af270eb4f28325/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed22606c8382822efc555f72f895c560289a5c70", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed22606c8382822efc555f72f895c560289a5c70", "html_url": "https://github.com/rust-lang/rust/commit/ed22606c8382822efc555f72f895c560289a5c70"}], "stats": {"total": 25, "additions": 1, "deletions": 24}, "files": [{"sha": "caf3bcd77c49f893a113f10f3dd9899046c0f134", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/82a96a11abcb9cc4d342402746af270eb4f28325/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82a96a11abcb9cc4d342402746af270eb4f28325/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=82a96a11abcb9cc4d342402746af270eb4f28325", "patch": "@@ -67,7 +67,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"import_shadowing\", Active),\n     (\"advanced_slice_patterns\", Active),\n     (\"tuple_indexing\", Accepted),\n-    (\"associated_types\", Active),\n+    (\"associated_types\", Accepted),\n     (\"visible_private_types\", Active),\n     (\"slicing_syntax\", Active),\n \n@@ -313,18 +313,6 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                                        many unsafe patterns and may be \\\n                                        removed in the future\");\n                 }\n-\n-                for item in items.iter() {\n-                    match *item {\n-                        ast::MethodImplItem(_) => {}\n-                        ast::TypeImplItem(ref typedef) => {\n-                            self.gate_feature(\"associated_types\",\n-                                              typedef.span,\n-                                              \"associated types are \\\n-                                               experimental\")\n-                        }\n-                    }\n-                }\n             }\n \n             _ => {}\n@@ -333,17 +321,6 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n         visit::walk_item(self, i);\n     }\n \n-    fn visit_trait_item(&mut self, trait_item: &ast::TraitItem) {\n-        match *trait_item {\n-            ast::RequiredMethod(_) | ast::ProvidedMethod(_) => {}\n-            ast::TypeTraitItem(ref ti) => {\n-                self.gate_feature(\"associated_types\",\n-                                  ti.ty_param.span,\n-                                  \"associated types are experimental\")\n-            }\n-        }\n-    }\n-\n     fn visit_foreign_item(&mut self, i: &ast::ForeignItem) {\n         if attr::contains_name(i.attrs[], \"linkage\") {\n             self.gate_feature(\"linkage\", i.span,"}]}