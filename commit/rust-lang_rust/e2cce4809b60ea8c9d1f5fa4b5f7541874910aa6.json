{"sha": "e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyY2NlNDgwOWI2MGVhOGM5ZDFmNWZhNGI1Zjc1NDE4NzQ5MTBhYTY=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T10:07:08Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/copies.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "a58f93626fb10743afbec8a7c5b85f20caad5e9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a58f93626fb10743afbec8a7c5b85f20caad5e9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6", "html_url": "https://github.com/rust-lang/rust/commit/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e45d09c4f78077695a05547fc7f90fa709105db", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e45d09c4f78077695a05547fc7f90fa709105db", "html_url": "https://github.com/rust-lang/rust/commit/5e45d09c4f78077695a05547fc7f90fa709105db"}], "stats": {"total": 436, "additions": 199, "deletions": 237}, "files": [{"sha": "f6f40513be8a5fb9a568613be5cfd4f0a16eb545", "filename": "tests/ui/conf_path_non_string.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6/tests%2Fui%2Fconf_path_non_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6/tests%2Fui%2Fconf_path_non_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_path_non_string.rs?ref=e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6", "patch": "@@ -2,5 +2,4 @@\n #![feature(plugin)]\n #![plugin(clippy(conf_file=42))]\n \n-\n fn main() {}"}, {"sha": "8192593be1ad6ab4641dcea2250b10c5817553d8", "filename": "tests/ui/copies.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6/tests%2Fui%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6/tests%2Fui%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.rs?ref=e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6", "patch": "@@ -28,7 +28,6 @@ pub enum Abc {\n #[deny(match_same_arms)]\n fn if_same_then_else() -> Result<&'static str, ()> {\n     if true {\n-\n         Foo { bar: 42 };\n         0..10;\n         ..;\n@@ -78,8 +77,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = match 42 {\n         42 => {\n-\n-\n             foo();\n             let mut a = 42 + [23].len() as i32;\n             if true {\n@@ -101,8 +98,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = match Abc::A {\n         Abc::A => 0,\n-\n-\n         Abc::B => 1,\n         _ => 0,\n     };\n@@ -112,15 +107,13 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     let _ = if true {\n-\n         42\n     }\n     else {\n         42\n     };\n \n     if true {\n-\n         for _ in &[42] {\n             let foo: &Option<_> = &Some::<u8>(42);\n             if true {\n@@ -142,7 +135,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         let bar = if true {\n             42\n         }\n@@ -166,7 +158,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         let _ = match 42 {\n             42 => 1,\n             a if a > 0 => 2,\n@@ -187,15 +178,13 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         if let Some(a) = Some(42) {}\n     }\n     else {\n         if let Some(a) = Some(42) {}\n     }\n \n     if true {\n-\n         if let (1, .., 3) = (1, 2, 3) {}\n     }\n     else {\n@@ -253,16 +242,12 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = match 42 {\n         42 => foo(),\n-\n-\n         51 => foo(),\n         _ => true,\n     };\n \n     let _ = match Some(42) {\n         Some(_) => 24,\n-\n-\n         None => 24,\n     };\n \n@@ -285,37 +270,29 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     match (Some(42), Some(42)) {\n         (Some(a), None) => bar(a),\n-\n-\n         (None, Some(a)) => bar(a),\n         _ => (),\n     }\n \n     match (Some(42), Some(42)) {\n         (Some(a), ..) => bar(a),\n-\n-\n         (.., Some(a)) => bar(a),\n         _ => (),\n     }\n \n     match (1, 2, 3) {\n         (1, .., 3) => 42,\n-\n-\n         (.., 3) => 42,\n         _ => 0,\n     };\n \n     let _ = if true {\n-\n         0.0\n     } else {\n         0.0\n     };\n \n     let _ = if true {\n-\n         -0.0\n     } else {\n         -0.0\n@@ -336,7 +313,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     // Same NaNs\n     let _ = if true {\n-\n         std::f32::NAN\n     } else {\n         std::f32::NAN\n@@ -354,15 +330,13 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         try!(Ok(\"foo\"));\n     }\n     else {\n         try!(Ok(\"foo\"));\n     }\n \n     if true {\n-\n         let foo = \"\";\n         return Ok(&foo[0..]);\n     }\n@@ -383,19 +357,16 @@ fn ifs_same_cond() {\n     let b = false;\n \n     if b {\n-\n     }\n     else if b {\n     }\n \n     if a == 1 {\n-\n     }\n     else if a == 1 {\n     }\n \n     if 2*a == 1 {\n-\n     }\n     else if 2*a == 2 {\n     }"}, {"sha": "c9ad01f335ed7db0e485f2db34d647ae5f19e397", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 199, "deletions": 207, "changes": 406, "blob_url": "https://github.com/rust-lang/rust/blob/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=e2cce4809b60ea8c9d1f5fa4b5f7541874910aa6", "patch": "@@ -1,11 +1,11 @@\n warning: This else block is redundant.\n \n-   --> $DIR/copies.rs:128:20\n+   --> $DIR/copies.rs:121:20\n     |\n-128 |               } else {\n+121 |               } else {\n     |  ____________________^\n-129 | |                 continue;\n-130 | |             }\n+122 | |                 continue;\n+123 | |             }\n     | |_____________^\n     |\n     = note: #[warn(needless_continue)] on by default\n@@ -18,12 +18,12 @@ warning: This else block is redundant.\n \n warning: This else block is redundant.\n \n-   --> $DIR/copies.rs:138:20\n+   --> $DIR/copies.rs:131:20\n     |\n-138 |               } else {\n+131 |               } else {\n     |  ____________________^\n-139 | |                 continue;\n-140 | |             }\n+132 | |                 continue;\n+133 | |             }\n     | |_____________^\n     |\n     = note: #[warn(needless_continue)] on by default\n@@ -35,16 +35,16 @@ warning: This else block is redundant.\n             \n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:40:10\n+  --> $DIR/copies.rs:39:10\n    |\n-40 |       else {\n+39 |       else {\n    |  __________^\n-41 | |         Foo { bar: 42 };\n-42 | |         0..10;\n-43 | |         ..;\n+40 | |         Foo { bar: 42 };\n+41 | |         0..10;\n+42 | |         ..;\n ...  |\n-47 | |         foo();\n-48 | |     }\n+46 | |         foo();\n+47 | |     }\n    | |_____^\n    |\n note: lint level defined here\n@@ -57,25 +57,25 @@ note: same as this\n    |\n 30 |       if true {\n    |  _____________^\n-31 | |\n-32 | |         Foo { bar: 42 };\n-33 | |         0..10;\n+31 | |         Foo { bar: 42 };\n+32 | |         0..10;\n+33 | |         ..;\n ...  |\n-38 | |         foo();\n-39 | |     }\n+37 | |         foo();\n+38 | |     }\n    | |_____^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:91:14\n+  --> $DIR/copies.rs:88:14\n    |\n-91 |           _ => {\n+88 |           _ => {\n    |  ______________^\n-92 | |             foo();\n-93 | |             let mut a = 42 + [23].len() as i32;\n-94 | |             if true {\n+89 | |             foo();\n+90 | |             let mut a = 42 + [23].len() as i32;\n+91 | |             if true {\n ...  |\n-98 | |             a\n-99 | |         }\n+95 | |             a\n+96 | |         }\n    | |_________^\n    |\n note: lint level defined here\n@@ -84,403 +84,395 @@ note: lint level defined here\n 28 | #[deny(match_same_arms)]\n    |        ^^^^^^^^^^^^^^^\n note: same as this\n-  --> $DIR/copies.rs:80:15\n+  --> $DIR/copies.rs:79:15\n    |\n-80 |           42 => {\n+79 |           42 => {\n    |  _______________^\n-81 | |\n-82 | |\n-83 | |             foo();\n+80 | |             foo();\n+81 | |             let mut a = 42 + [23].len() as i32;\n+82 | |             if true {\n ...  |\n-89 | |             a\n-90 | |         }\n+86 | |             a\n+87 | |         }\n    | |_________^\n note: `42` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/copies.rs:80:15\n+  --> $DIR/copies.rs:79:15\n    |\n-80 |           42 => {\n+79 |           42 => {\n    |  _______________^\n-81 | |\n-82 | |\n-83 | |             foo();\n+80 | |             foo();\n+81 | |             let mut a = 42 + [23].len() as i32;\n+82 | |             if true {\n ...  |\n-89 | |             a\n-90 | |         }\n+86 | |             a\n+87 | |         }\n    | |_________^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:107:14\n+   --> $DIR/copies.rs:102:14\n     |\n-107 |         _ => 0,\n+102 |         _ => 0,\n     |              ^\n     |\n note: same as this\n-   --> $DIR/copies.rs:103:19\n+   --> $DIR/copies.rs:100:19\n     |\n-103 |         Abc::A => 0,\n+100 |         Abc::A => 0,\n     |                   ^\n note: `Abc::A` has the same arm body as the `_` wildcard, consider removing it`\n-   --> $DIR/copies.rs:103:19\n+   --> $DIR/copies.rs:100:19\n     |\n-103 |         Abc::A => 0,\n+100 |         Abc::A => 0,\n     |                   ^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:118:10\n+   --> $DIR/copies.rs:112:10\n     |\n-118 |       else {\n+112 |       else {\n     |  __________^\n-119 | |         42\n-120 | |     };\n+113 | |         42\n+114 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:114:21\n+   --> $DIR/copies.rs:109:21\n     |\n-114 |       let _ = if true {\n+109 |       let _ = if true {\n     |  _____________________^\n-115 | |\n-116 | |         42\n-117 | |     }\n+110 | |         42\n+111 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:133:10\n+   --> $DIR/copies.rs:126:10\n     |\n-133 |       else {\n+126 |       else {\n     |  __________^\n-134 | |         for _ in &[42] {\n-135 | |             let foo: &Option<_> = &Some::<u8>(42);\n-136 | |             if true {\n+127 | |         for _ in &[42] {\n+128 | |             let foo: &Option<_> = &Some::<u8>(42);\n+129 | |             if true {\n ...   |\n-141 | |         }\n-142 | |     }\n+134 | |         }\n+135 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:122:13\n+   --> $DIR/copies.rs:116:13\n     |\n-122 |       if true {\n+116 |       if true {\n     |  _____________^\n-123 | |\n-124 | |         for _ in &[42] {\n-125 | |             let foo: &Option<_> = &Some::<u8>(42);\n+117 | |         for _ in &[42] {\n+118 | |             let foo: &Option<_> = &Some::<u8>(42);\n+119 | |             if true {\n ...   |\n-131 | |         }\n-132 | |     }\n+124 | |         }\n+125 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:156:10\n+   --> $DIR/copies.rs:148:10\n     |\n-156 |       else {\n+148 |       else {\n     |  __________^\n-157 | |         let bar = if true {\n-158 | |             42\n-159 | |         }\n+149 | |         let bar = if true {\n+150 | |             42\n+151 | |         }\n ...   |\n-165 | |         bar + 1;\n-166 | |     }\n+157 | |         bar + 1;\n+158 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:144:13\n+   --> $DIR/copies.rs:137:13\n     |\n-144 |       if true {\n+137 |       if true {\n     |  _____________^\n-145 | |\n-146 | |         let bar = if true {\n-147 | |             42\n+138 | |         let bar = if true {\n+139 | |             42\n+140 | |         }\n ...   |\n-154 | |         bar + 1;\n-155 | |     }\n+146 | |         bar + 1;\n+147 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:180:19\n+   --> $DIR/copies.rs:171:19\n     |\n-180 |       else if foo() {\n+171 |       else if foo() {\n     |  ___________________^\n-181 | |         let _ = match 42 {\n-182 | |             42 => 1,\n-183 | |             a if a > 0 => 2,\n+172 | |         let _ = match 42 {\n+173 | |             42 => 1,\n+174 | |             a if a > 0 => 2,\n ...   |\n-186 | |         };\n-187 | |     }\n+177 | |         };\n+178 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:168:13\n+   --> $DIR/copies.rs:160:13\n     |\n-168 |       if true {\n+160 |       if true {\n     |  _____________^\n-169 | |\n-170 | |         let _ = match 42 {\n-171 | |             42 => 1,\n+161 | |         let _ = match 42 {\n+162 | |             42 => 1,\n+163 | |             a if a > 0 => 2,\n ...   |\n-175 | |         };\n-176 | |     }\n+166 | |         };\n+167 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:193:10\n+   --> $DIR/copies.rs:183:10\n     |\n-193 |       else {\n+183 |       else {\n     |  __________^\n-194 | |         if let Some(a) = Some(42) {}\n-195 | |     }\n+184 | |         if let Some(a) = Some(42) {}\n+185 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:189:13\n+   --> $DIR/copies.rs:180:13\n     |\n-189 |       if true {\n+180 |       if true {\n     |  _____________^\n-190 | |\n-191 | |         if let Some(a) = Some(42) {}\n-192 | |     }\n+181 | |         if let Some(a) = Some(42) {}\n+182 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:201:10\n+   --> $DIR/copies.rs:190:10\n     |\n-201 |       else {\n+190 |       else {\n     |  __________^\n-202 | |         if let (1, .., 3) = (1, 2, 3) {}\n-203 | |     }\n+191 | |         if let (1, .., 3) = (1, 2, 3) {}\n+192 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:197:13\n+   --> $DIR/copies.rs:187:13\n     |\n-197 |       if true {\n+187 |       if true {\n     |  _____________^\n-198 | |\n-199 | |         if let (1, .., 3) = (1, 2, 3) {}\n-200 | |     }\n+188 | |         if let (1, .., 3) = (1, 2, 3) {}\n+189 | |     }\n     | |_____^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:258:15\n+   --> $DIR/copies.rs:245:15\n     |\n-258 |         51 => foo(),\n+245 |         51 => foo(),\n     |               ^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:255:15\n+   --> $DIR/copies.rs:244:15\n     |\n-255 |         42 => foo(),\n+244 |         42 => foo(),\n     |               ^^^^^\n note: consider refactoring into `42 | 51`\n-   --> $DIR/copies.rs:255:15\n+   --> $DIR/copies.rs:244:15\n     |\n-255 |         42 => foo(),\n+244 |         42 => foo(),\n     |               ^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:266:17\n+   --> $DIR/copies.rs:251:17\n     |\n-266 |         None => 24,\n+251 |         None => 24,\n     |                 ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:263:20\n+   --> $DIR/copies.rs:250:20\n     |\n-263 |         Some(_) => 24,\n+250 |         Some(_) => 24,\n     |                    ^^\n note: consider refactoring into `Some(_) | None`\n-   --> $DIR/copies.rs:263:20\n+   --> $DIR/copies.rs:250:20\n     |\n-263 |         Some(_) => 24,\n+250 |         Some(_) => 24,\n     |                    ^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:290:28\n+   --> $DIR/copies.rs:273:28\n     |\n-290 |         (None, Some(a)) => bar(a),\n+273 |         (None, Some(a)) => bar(a),\n     |                            ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:287:28\n+   --> $DIR/copies.rs:272:28\n     |\n-287 |         (Some(a), None) => bar(a),\n+272 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n note: consider refactoring into `(Some(a), None) | (None, Some(a))`\n-   --> $DIR/copies.rs:287:28\n+   --> $DIR/copies.rs:272:28\n     |\n-287 |         (Some(a), None) => bar(a),\n+272 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:298:26\n+   --> $DIR/copies.rs:279:26\n     |\n-298 |         (.., Some(a)) => bar(a),\n+279 |         (.., Some(a)) => bar(a),\n     |                          ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:295:26\n+   --> $DIR/copies.rs:278:26\n     |\n-295 |         (Some(a), ..) => bar(a),\n+278 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n note: consider refactoring into `(Some(a), ..) | (.., Some(a))`\n-   --> $DIR/copies.rs:295:26\n+   --> $DIR/copies.rs:278:26\n     |\n-295 |         (Some(a), ..) => bar(a),\n+278 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:306:20\n+   --> $DIR/copies.rs:285:20\n     |\n-306 |         (.., 3) => 42,\n+285 |         (.., 3) => 42,\n     |                    ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:303:23\n+   --> $DIR/copies.rs:284:23\n     |\n-303 |         (1, .., 3) => 42,\n+284 |         (1, .., 3) => 42,\n     |                       ^^\n note: consider refactoring into `(1, .., 3) | (.., 3)`\n-   --> $DIR/copies.rs:303:23\n+   --> $DIR/copies.rs:284:23\n     |\n-303 |         (1, .., 3) => 42,\n+284 |         (1, .., 3) => 42,\n     |                       ^^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:313:12\n+   --> $DIR/copies.rs:291:12\n     |\n-313 |       } else {\n+291 |       } else {\n     |  ____________^\n-314 | |         0.0\n-315 | |     };\n+292 | |         0.0\n+293 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:310:21\n+   --> $DIR/copies.rs:289:21\n     |\n-310 |       let _ = if true {\n+289 |       let _ = if true {\n     |  _____________________^\n-311 | |\n-312 | |         0.0\n-313 | |     } else {\n+290 | |         0.0\n+291 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:320:12\n+   --> $DIR/copies.rs:297:12\n     |\n-320 |       } else {\n+297 |       } else {\n     |  ____________^\n-321 | |         -0.0\n-322 | |     };\n+298 | |         -0.0\n+299 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:317:21\n+   --> $DIR/copies.rs:295:21\n     |\n-317 |       let _ = if true {\n+295 |       let _ = if true {\n     |  _____________________^\n-318 | |\n-319 | |         -0.0\n-320 | |     } else {\n+296 | |         -0.0\n+297 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:341:12\n+   --> $DIR/copies.rs:317:12\n     |\n-341 |       } else {\n+317 |       } else {\n     |  ____________^\n-342 | |         std::f32::NAN\n-343 | |     };\n+318 | |         std::f32::NAN\n+319 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:338:21\n+   --> $DIR/copies.rs:315:21\n     |\n-338 |       let _ = if true {\n+315 |       let _ = if true {\n     |  _____________________^\n-339 | |\n-340 | |         std::f32::NAN\n-341 | |     } else {\n+316 | |         std::f32::NAN\n+317 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:360:10\n+   --> $DIR/copies.rs:335:10\n     |\n-360 |       else {\n+335 |       else {\n     |  __________^\n-361 | |         try!(Ok(\"foo\"));\n-362 | |     }\n+336 | |         try!(Ok(\"foo\"));\n+337 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:356:13\n+   --> $DIR/copies.rs:332:13\n     |\n-356 |       if true {\n+332 |       if true {\n     |  _____________^\n-357 | |\n-358 | |         try!(Ok(\"foo\"));\n-359 | |     }\n+333 | |         try!(Ok(\"foo\"));\n+334 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:373:10\n+   --> $DIR/copies.rs:347:10\n     |\n-373 |       else {\n+347 |       else {\n     |  __________^\n-374 | |         let foo = \"\";\n-375 | |         return Ok(&foo[0..]);\n-376 | |     }\n+348 | |         let foo = \"\";\n+349 | |         return Ok(&foo[0..]);\n+350 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:364:13\n+   --> $DIR/copies.rs:339:13\n     |\n-364 |       if true {\n+339 |       if true {\n     |  _____________^\n-365 | |\n-366 | |         let foo = \"\";\n-367 | |         return Ok(&foo[0..]);\n-368 | |     }\n+340 | |         let foo = \"\";\n+341 | |         return Ok(&foo[0..]);\n+342 | |     }\n     | |_____^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:388:13\n+   --> $DIR/copies.rs:361:13\n     |\n-388 |     else if b {\n+361 |     else if b {\n     |             ^\n     |\n note: lint level defined here\n-   --> $DIR/copies.rs:379:8\n+   --> $DIR/copies.rs:353:8\n     |\n-379 | #[deny(ifs_same_cond)]\n+353 | #[deny(ifs_same_cond)]\n     |        ^^^^^^^^^^^^^\n note: same as this\n-   --> $DIR/copies.rs:385:8\n+   --> $DIR/copies.rs:359:8\n     |\n-385 |     if b {\n+359 |     if b {\n     |        ^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:394:13\n+   --> $DIR/copies.rs:366:13\n     |\n-394 |     else if a == 1 {\n+366 |     else if a == 1 {\n     |             ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:391:8\n+   --> $DIR/copies.rs:364:8\n     |\n-391 |     if a == 1 {\n+364 |     if a == 1 {\n     |        ^^^^^^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:402:13\n+   --> $DIR/copies.rs:373:13\n     |\n-402 |     else if 2*a == 1 {\n+373 |     else if 2*a == 1 {\n     |             ^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:397:8\n+   --> $DIR/copies.rs:369:8\n     |\n-397 |     if 2*a == 1 {\n+369 |     if 2*a == 1 {\n     |        ^^^^^^^^\n \n error: aborting due to 22 previous errors"}]}