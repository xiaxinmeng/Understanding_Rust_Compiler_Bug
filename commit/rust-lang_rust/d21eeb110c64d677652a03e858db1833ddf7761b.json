{"sha": "d21eeb110c64d677652a03e858db1833ddf7761b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMWVlYjExMGM2NGQ2Nzc2NTJhMDNlODU4ZGIxODMzZGRmNzc2MWI=", "commit": {"author": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-10-04T23:07:13Z"}, "committer": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-10-11T02:49:21Z"}, "message": "Override nth for VecDeque Iter and IterMut", "tree": {"sha": "c5e2e7294d3287cfed0e43325c75ddaed0aad394", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5e2e7294d3287cfed0e43325c75ddaed0aad394"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d21eeb110c64d677652a03e858db1833ddf7761b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d21eeb110c64d677652a03e858db1833ddf7761b", "html_url": "https://github.com/rust-lang/rust/commit/d21eeb110c64d677652a03e858db1833ddf7761b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d21eeb110c64d677652a03e858db1833ddf7761b/comments", "author": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10671f10c3559f6b96593149dce5467b0feccab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/10671f10c3559f6b96593149dce5467b0feccab6", "html_url": "https://github.com/rust-lang/rust/commit/10671f10c3559f6b96593149dce5467b0feccab6"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "0bf573f5e2539fc8d84ddbc2a1c295c1fdb36626", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d21eeb110c64d677652a03e858db1833ddf7761b/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d21eeb110c64d677652a03e858db1833ddf7761b/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=d21eeb110c64d677652a03e858db1833ddf7761b", "patch": "@@ -2286,6 +2286,16 @@ impl<'a, T> Iterator for Iter<'a, T> {\n         final_res\n     }\n \n+    fn nth(&mut self, n: usize) -> Option<Self::Item> {\n+        if n >= count(self.tail, self.head, self.ring.len()) {\n+            self.tail = self.head;\n+            None\n+        } else {\n+            self.tail = wrap_index(self.tail.wrapping_add(n), self.ring.len());\n+            self.next()\n+        }\n+    }\n+\n     #[inline]\n     fn last(mut self) -> Option<&'a T> {\n         self.next_back()\n@@ -2404,6 +2414,16 @@ impl<'a, T> Iterator for IterMut<'a, T> {\n         back.iter_mut().fold(accum, &mut f)\n     }\n \n+    fn nth(&mut self, n: usize) -> Option<Self::Item> {\n+        if n >= count(self.tail, self.head, self.ring.len()) {\n+            self.tail = self.head;\n+            None\n+        } else {\n+            self.tail = wrap_index(self.tail.wrapping_add(n), self.ring.len());\n+            self.next()\n+        }\n+    }\n+\n     #[inline]\n     fn last(mut self) -> Option<&'a mut T> {\n         self.next_back()"}]}