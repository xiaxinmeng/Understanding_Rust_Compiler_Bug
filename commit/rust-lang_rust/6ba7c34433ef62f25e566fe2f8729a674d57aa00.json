{"sha": "6ba7c34433ef62f25e566fe2f8729a674d57aa00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiYTdjMzQ0MzNlZjYyZjI1ZTU2NmZlMmY4NzI5YTY3NGQ1N2FhMDA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-07T10:29:42Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-09T05:07:43Z"}, "message": "Use Option<SeparatorTactic> over bool to control trailing comma", "tree": {"sha": "264c7a88df75077943d4f08b0993a88649e0869d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/264c7a88df75077943d4f08b0993a88649e0869d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ba7c34433ef62f25e566fe2f8729a674d57aa00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba7c34433ef62f25e566fe2f8729a674d57aa00", "html_url": "https://github.com/rust-lang/rust/commit/6ba7c34433ef62f25e566fe2f8729a674d57aa00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ba7c34433ef62f25e566fe2f8729a674d57aa00/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9f5382757866871ef3a79330fda8e33637ca811", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f5382757866871ef3a79330fda8e33637ca811", "html_url": "https://github.com/rust-lang/rust/commit/e9f5382757866871ef3a79330fda8e33637ca811"}], "stats": {"total": 56, "additions": 38, "deletions": 18}, "files": [{"sha": "a38e9b0b8f876eeb26454b29751c591530030de9", "filename": "src/expr.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=6ba7c34433ef62f25e566fe2f8729a674d57aa00", "patch": "@@ -1936,9 +1936,13 @@ pub fn rewrite_call(\n         span,\n         context.config.width_heuristics().fn_call_width,\n         if context.inside_macro {\n-            span_ends_with_comma(context, span)\n+            if span_ends_with_comma(context, span) {\n+                Some(SeparatorTactic::Always)\n+            } else {\n+                Some(SeparatorTactic::Never)\n+            }\n         } else {\n-            false\n+            None\n         },\n     )\n }\n@@ -2422,10 +2426,18 @@ where\n     debug!(\"rewrite_tuple {:?}\", shape);\n     if context.use_block_indent() {\n         // We use the same rule as function calls for rewriting tuples.\n-        let force_trailing_comma = if context.inside_macro {\n-            span_ends_with_comma(context, span)\n+        let force_tactic = if context.inside_macro {\n+            if span_ends_with_comma(context, span) {\n+                Some(SeparatorTactic::Always)\n+            } else {\n+                Some(SeparatorTactic::Never)\n+            }\n         } else {\n-            items.len() == 1\n+            if items.len() == 1 {\n+                Some(SeparatorTactic::Always)\n+            } else {\n+                None\n+            }\n         };\n         overflow::rewrite_with_parens(\n             context,\n@@ -2434,7 +2446,7 @@ where\n             shape,\n             span,\n             context.config.width_heuristics().fn_call_width,\n-            force_trailing_comma,\n+            force_tactic,\n         )\n     } else {\n         rewrite_tuple_in_visual_indent_style(context, items, span, shape)"}, {"sha": "d3286864ce7ddf65f23be83b7b61d7c0f283def2", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6ba7c34433ef62f25e566fe2f8729a674d57aa00", "patch": "@@ -1290,7 +1290,7 @@ fn format_tuple_struct(\n             shape,\n             span,\n             context.config.width_heuristics().fn_call_width,\n-            false,\n+            None,\n         )?;\n     }\n "}, {"sha": "bb870e589eee51336557056501b7f1eaa580ada3", "filename": "src/macros.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=6ba7c34433ef62f25e566fe2f8729a674d57aa00", "patch": "@@ -233,7 +233,11 @@ pub fn rewrite_macro(\n                 shape,\n                 mac.span,\n                 context.config.width_heuristics().fn_call_width,\n-                trailing_comma,\n+                if trailing_comma {\n+                    Some(SeparatorTactic::Always)\n+                } else {\n+                    Some(SeparatorTactic::Never)\n+                },\n             ).map(|rw| match position {\n                 MacroPosition::Item => format!(\"{};\", rw),\n                 _ => rw,"}, {"sha": "294c257d31f49205214ceaf7b6466bfba11ab70d", "filename": "src/overflow.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=6ba7c34433ef62f25e566fe2f8729a674d57aa00", "patch": "@@ -33,7 +33,7 @@ pub fn rewrite_with_parens<T>(\n     shape: Shape,\n     span: Span,\n     item_max_width: usize,\n-    force_trailing_comma: bool,\n+    force_separator_tactic: Option<SeparatorTactic>,\n ) -> Option<String>\n where\n     T: Rewrite + ToExpr + Spanned,\n@@ -47,7 +47,7 @@ where\n         \"(\",\n         \")\",\n         item_max_width,\n-        force_trailing_comma,\n+        force_separator_tactic,\n     ).rewrite(shape)\n }\n \n@@ -70,7 +70,7 @@ where\n         \"<\",\n         \">\",\n         context.config.max_width(),\n-        false,\n+        None,\n     ).rewrite(shape)\n }\n \n@@ -85,7 +85,7 @@ struct Context<'a, T: 'a> {\n     span: Span,\n     item_max_width: usize,\n     one_line_width: usize,\n-    force_trailing_comma: bool,\n+    force_separator_tactic: Option<SeparatorTactic>,\n }\n \n impl<'a, T: 'a + Rewrite + ToExpr + Spanned> Context<'a, T> {\n@@ -98,7 +98,7 @@ impl<'a, T: 'a + Rewrite + ToExpr + Spanned> Context<'a, T> {\n         prefix: &'static str,\n         suffix: &'static str,\n         item_max_width: usize,\n-        force_trailing_comma: bool,\n+        force_separator_tactic: Option<SeparatorTactic>,\n     ) -> Context<'a, T> {\n         // 2 = `( `, 1 = `(`\n         let paren_overhead = if context.config.spaces_within_parens_and_brackets() {\n@@ -134,7 +134,7 @@ impl<'a, T: 'a + Rewrite + ToExpr + Spanned> Context<'a, T> {\n             suffix,\n             item_max_width,\n             one_line_width,\n-            force_trailing_comma,\n+            force_separator_tactic,\n         }\n     }\n \n@@ -336,9 +336,9 @@ impl<'a, T: 'a + Rewrite + ToExpr + Spanned> Context<'a, T> {\n         let fmt = ListFormatting {\n             tactic,\n             separator: \",\",\n-            trailing_separator: if self.force_trailing_comma {\n-                SeparatorTactic::Always\n-            } else if self.context.inside_macro || !self.context.use_block_indent() {\n+            trailing_separator: if let Some(tactic) = self.force_separator_tactic {\n+                tactic\n+            } else if !self.context.use_block_indent() {\n                 SeparatorTactic::Never\n             } else {\n                 self.context.config.trailing_comma()"}, {"sha": "54b7e0f9a4cb003429137bbc5cbd99a32a119bda", "filename": "src/patterns.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ba7c34433ef62f25e566fe2f8729a674d57aa00/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=6ba7c34433ef62f25e566fe2f8729a674d57aa00", "patch": "@@ -343,7 +343,11 @@ fn rewrite_tuple_pat(\n         shape,\n         span,\n         context.config.max_width(),\n-        add_comma,\n+        if add_comma {\n+            Some(SeparatorTactic::Always)\n+        } else {\n+            None\n+        },\n     )\n }\n "}]}