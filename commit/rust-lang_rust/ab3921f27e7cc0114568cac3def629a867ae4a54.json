{"sha": "ab3921f27e7cc0114568cac3def629a867ae4a54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMzkyMWYyN2U3Y2MwMTE0NTY4Y2FjM2RlZjYyOWE4NjdhZTRhNTQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-09T18:59:00Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-09T18:59:00Z"}, "message": "Catch cyclic imports harder. Add 2 tests to confirm.", "tree": {"sha": "334fffa625f550aa946e29b0a98edf7c2e5330bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/334fffa625f550aa946e29b0a98edf7c2e5330bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab3921f27e7cc0114568cac3def629a867ae4a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3921f27e7cc0114568cac3def629a867ae4a54", "html_url": "https://github.com/rust-lang/rust/commit/ab3921f27e7cc0114568cac3def629a867ae4a54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab3921f27e7cc0114568cac3def629a867ae4a54/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdaa723c4aa762de83573f9da0b0dc550021dc66", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdaa723c4aa762de83573f9da0b0dc550021dc66", "html_url": "https://github.com/rust-lang/rust/commit/fdaa723c4aa762de83573f9da0b0dc550021dc66"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "64f2c9399260793f5d94e3264eac4eac59f5f03d", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ab3921f27e7cc0114568cac3def629a867ae4a54/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/ab3921f27e7cc0114568cac3def629a867ae4a54/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=ab3921f27e7cc0114568cac3def629a867ae4a54", "patch": "@@ -1545,10 +1545,18 @@ let rec project_ident_from_items\n     (cx:ctxt)\n     (lchk:loop_check)\n     (scopes:scope list)\n+    (scope_id:node_id)\n     ((view:Ast.mod_view),(items:Ast.mod_items))\n     (ident:Ast.ident)\n     (inside:bool)\n     : resolved =\n+\n+  let lchk =\n+    if List.mem (scope_id, ident) lchk\n+    then err (Some scope_id) \"cyclic import for ident %s\" ident\n+    else (scope_id, ident)::lchk\n+  in\n+\n   if not (inside || (exports_permit view ident))\n   then None\n   else\n@@ -1558,7 +1566,8 @@ let rec project_ident_from_items\n       | None ->\n           match htab_search view.Ast.view_imports ident with\n               None -> None\n-            | Some name -> lookup_by_name cx lchk scopes name\n+            | Some name ->\n+                lookup_by_name cx lchk scopes name\n \n and found cx scopes id =\n   Hashtbl.replace cx.ctxt_node_referenced id ();\n@@ -1578,7 +1587,7 @@ and project_name_comp_from_resolved\n         let ident = get_name_comp_ident ext in\n         let md = get_mod_item cx id in\n           Hashtbl.replace cx.ctxt_node_referenced id ();\n-          project_ident_from_items cx lchk scopes md ident false\n+          project_ident_from_items cx lchk scopes id md ident false\n \n and lookup_by_name\n     (cx:ctxt)\n@@ -1602,12 +1611,6 @@ and lookup_by_ident\n     (ident:Ast.ident)\n     : resolved =\n \n-  let passing id =\n-    if List.mem (id, ident) lchk\n-    then err (Some id) \"cyclic import for ident %s\" ident\n-    else (id, ident)::lchk\n-  in\n-\n   let check_slots scopes islots =\n     arr_search islots\n       (fun _ (sloti,ident') ->\n@@ -1651,7 +1654,7 @@ and lookup_by_ident\n \n       | SCOPE_crate crate ->\n           project_ident_from_items\n-            cx (passing crate.id) scopes crate.node.Ast.crate_items ident true\n+            cx lchk scopes crate.id crate.node.Ast.crate_items ident true\n \n       | SCOPE_obj_fn fn ->\n           would_capture (check_slots scopes fn.node.Ast.fn_input_slots)\n@@ -1671,8 +1674,8 @@ and lookup_by_ident\n                     end\n \n                 | Ast.MOD_ITEM_mod md ->\n-                    project_ident_from_items cx (passing item.id)\n-                      scopes md ident true\n+                    project_ident_from_items cx lchk\n+                      scopes item.id md ident true\n \n                 | _ -> None\n             in"}, {"sha": "474634b520ce8c4102826f91757bb36065a3cb4f", "filename": "src/test/compile-fail/import-loop-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ab3921f27e7cc0114568cac3def629a867ae4a54/src%2Ftest%2Fcompile-fail%2Fimport-loop-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3921f27e7cc0114568cac3def629a867ae4a54/src%2Ftest%2Fcompile-fail%2Fimport-loop-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-loop-2.rs?ref=ab3921f27e7cc0114568cac3def629a867ae4a54", "patch": "@@ -0,0 +1,13 @@\n+// error-pattern:cyclic import\n+\n+mod a {\n+  import b.x;\n+}\n+\n+mod b {\n+  import a.x;\n+\n+  fn main() {\n+    auto y = x;\n+  }\n+}"}, {"sha": "649e2d5d3bca64148812f6ec4ea76656484eeb32", "filename": "src/test/compile-fail/import-loop.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ab3921f27e7cc0114568cac3def629a867ae4a54/src%2Ftest%2Fcompile-fail%2Fimport-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab3921f27e7cc0114568cac3def629a867ae4a54/src%2Ftest%2Fcompile-fail%2Fimport-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-loop.rs?ref=ab3921f27e7cc0114568cac3def629a867ae4a54", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:cyclic import\n+\n+import x;\n+\n+fn main() {\n+  auto y = x;\n+}"}]}