{"sha": "1bc4e3f6a21c3c5d92873f490b646358ea395f9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYzRlM2Y2YTIxYzNjNWQ5Mjg3M2Y0OTBiNjQ2MzU4ZWEzOTVmOWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-22T21:39:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-02-22T21:39:34Z"}, "message": "auto merge of #5078 : bblum/rust/incoming, r=brson\n\nr? @brson", "tree": {"sha": "630edd8aee6b5badd0a89f1a3ec465cf0c882601", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/630edd8aee6b5badd0a89f1a3ec465cf0c882601"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bc4e3f6a21c3c5d92873f490b646358ea395f9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc4e3f6a21c3c5d92873f490b646358ea395f9e", "html_url": "https://github.com/rust-lang/rust/commit/1bc4e3f6a21c3c5d92873f490b646358ea395f9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bc4e3f6a21c3c5d92873f490b646358ea395f9e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c316189d155e233ea04241116b11956626c8e7a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c316189d155e233ea04241116b11956626c8e7a3", "html_url": "https://github.com/rust-lang/rust/commit/c316189d155e233ea04241116b11956626c8e7a3"}, {"sha": "9dae4cf1f0f2fd82ee653d89abc46d349b6e6caa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dae4cf1f0f2fd82ee653d89abc46d349b6e6caa", "html_url": "https://github.com/rust-lang/rust/commit/9dae4cf1f0f2fd82ee653d89abc46d349b6e6caa"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "280eb14b172c4537642147e9961f6b231dd0fcd4", "filename": "src/libcore/private.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1bc4e3f6a21c3c5d92873f490b646358ea395f9e/src%2Flibcore%2Fprivate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc4e3f6a21c3c5d92873f490b646358ea395f9e/src%2Flibcore%2Fprivate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprivate.rs?ref=1bc4e3f6a21c3c5d92873f490b646358ea395f9e", "patch": "@@ -495,7 +495,7 @@ pub mod tests {\n         res.recv();\n     }\n \n-    #[test] #[should_fail] #[ignore(reason = \"random red\")]\n+    #[test] #[should_fail] #[ignore(cfg(windows))]\n     pub fn exclusive_unwrap_conflict() {\n         let x = exclusive(~~\"hello\");\n         let x2 = ~mut Some(x.clone());\n@@ -507,7 +507,8 @@ pub mod tests {\n         }\n         assert unwrap_exclusive(x) == ~~\"hello\";\n         let res = option::swap_unwrap(&mut res);\n-        res.recv();\n+        // See #4689 for why this can't be just \"res.recv()\".\n+        assert res.recv() == task::Success;\n     }\n \n     #[test] #[ignore(cfg(windows))]"}]}