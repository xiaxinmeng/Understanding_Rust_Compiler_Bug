{"sha": "2f85aa736e85544803ff6d3e6b13e44c0729bbdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmODVhYTczNmU4NTU0NDgwM2ZmNmQzZTZiMTNlNDRjMDcyOWJiZGQ=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-10-18T07:30:46Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-11-17T16:28:37Z"}, "message": "Make lint skip closures", "tree": {"sha": "502d4d2fb6a8abd8a56d6758ed6d31aa2d936f56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/502d4d2fb6a8abd8a56d6758ed6d31aa2d936f56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f85aa736e85544803ff6d3e6b13e44c0729bbdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f85aa736e85544803ff6d3e6b13e44c0729bbdd", "html_url": "https://github.com/rust-lang/rust/commit/2f85aa736e85544803ff6d3e6b13e44c0729bbdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f85aa736e85544803ff6d3e6b13e44c0729bbdd/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8392bc7946a212a85bc5a411f5321a1f76d5ccf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8392bc7946a212a85bc5a411f5321a1f76d5ccf6", "html_url": "https://github.com/rust-lang/rust/commit/8392bc7946a212a85bc5a411f5321a1f76d5ccf6"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "a20d1f82e9efd1fda9355204251e334b4775954d", "filename": "clippy_lints/src/unnecessary_wrap.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2f85aa736e85544803ff6d3e6b13e44c0729bbdd/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f85aa736e85544803ff6d3e6b13e44c0729bbdd/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wrap.rs?ref=2f85aa736e85544803ff6d3e6b13e44c0729bbdd", "patch": "@@ -63,12 +63,10 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWrap {\n         span: Span,\n         hir_id: HirId,\n     ) {\n-        if_chain! {\n-            if let FnKind::ItemFn(.., visibility, _) = fn_kind;\n-            if visibility.node.is_pub();\n-            then {\n-                return;\n-            }\n+        match fn_kind {\n+            FnKind::ItemFn(.., visibility, _) if visibility.node.is_pub() => return,\n+            FnKind::Closure(..) => return,\n+            _ => (),\n         }\n \n         let (return_type, path) = if is_type_diagnostic_item(cx, return_ty(cx, hir_id), sym!(option_type)) {"}]}