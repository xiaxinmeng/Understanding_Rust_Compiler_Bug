{"sha": "d26ccf7067ef5e18154db6e16f6285e2f62371dc", "node_id": "C_kwDOAAsO6NoAKGQyNmNjZjcwNjdlZjVlMTgxNTRkYjZlMTZmNjI4NWUyZjYyMzcxZGM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-05T05:12:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-05T05:12:52Z"}, "message": "Rollup merge of #97300 - ChayimFriedman2:patch-1, r=dtolnay\n\nImplement `FusedIterator` for `std::net::[Into]Incoming`\n\nThey never return `None`, so they trivially fulfill the contract.\n\nWhat should I put for the stability attribute of `Incoming`?", "tree": {"sha": "73464a1fb998ee87ace188b8e21c3eb6c56214cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73464a1fb998ee87ace188b8e21c3eb6c56214cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d26ccf7067ef5e18154db6e16f6285e2f62371dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiw8hVCRBK7hj4Ov3rIwAAGygIAAnEZ20v/Ojg2+t51FXGQqfS\n7+q3SGAZCRedIdKz4biZo2CrpwmXNKpxAh53UU6CLR2E3+rlyWIlqC5pDWtPr9ML\neBK22h/oWVUPQWNm1gK74jurOtovg2tYDvZBXsUxX0aJPGAjUG1ExjyebIqQLAZk\nQQgW/JPoXNkeFWAgne+7C4TWwKqxZugfbw2YhSfIf97oFbC7oiiPPncBjlJnp9q5\nrFqF9X2k/rXf03NnSEd1xVIdrArk1GjdjDCB6O3W1xx1xcwIhE1uW1b0+SnhT3H8\nD+YQJLqyZp+oNpbDtSYTKa5lfWtyCIP2qkNamS92BlPl85p8P2Wx1gbrW7w301E=\n=Sd2n\n-----END PGP SIGNATURE-----\n", "payload": "tree 73464a1fb998ee87ace188b8e21c3eb6c56214cf\nparent 4008dd8c6d92a0b81528fd138c6130d784e5958e\nparent 76c0429d86041665dcf05682cd6579d8d2ab153c\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1656997972 +0530\ncommitter GitHub <noreply@github.com> 1656997972 +0530\n\nRollup merge of #97300 - ChayimFriedman2:patch-1, r=dtolnay\n\nImplement `FusedIterator` for `std::net::[Into]Incoming`\n\nThey never return `None`, so they trivially fulfill the contract.\n\nWhat should I put for the stability attribute of `Incoming`?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d26ccf7067ef5e18154db6e16f6285e2f62371dc", "html_url": "https://github.com/rust-lang/rust/commit/d26ccf7067ef5e18154db6e16f6285e2f62371dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d26ccf7067ef5e18154db6e16f6285e2f62371dc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4008dd8c6d92a0b81528fd138c6130d784e5958e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4008dd8c6d92a0b81528fd138c6130d784e5958e", "html_url": "https://github.com/rust-lang/rust/commit/4008dd8c6d92a0b81528fd138c6130d784e5958e"}, {"sha": "76c0429d86041665dcf05682cd6579d8d2ab153c", "url": "https://api.github.com/repos/rust-lang/rust/commits/76c0429d86041665dcf05682cd6579d8d2ab153c", "html_url": "https://github.com/rust-lang/rust/commit/76c0429d86041665dcf05682cd6579d8d2ab153c"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "69b72a81c5b6d8437ccb806256ec91f0278f7b24", "filename": "library/std/src/net/tcp.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d26ccf7067ef5e18154db6e16f6285e2f62371dc/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26ccf7067ef5e18154db6e16f6285e2f62371dc/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Ftcp.rs?ref=d26ccf7067ef5e18154db6e16f6285e2f62371dc", "patch": "@@ -7,6 +7,7 @@ use crate::io::prelude::*;\n \n use crate::fmt;\n use crate::io::{self, IoSlice, IoSliceMut};\n+use crate::iter::FusedIterator;\n use crate::net::{Shutdown, SocketAddr, ToSocketAddrs};\n use crate::sys_common::net as net_imp;\n use crate::sys_common::{AsInner, FromInner, IntoInner};\n@@ -1009,6 +1010,9 @@ impl<'a> Iterator for Incoming<'a> {\n     }\n }\n \n+#[stable(feature = \"tcp_listener_incoming_fused_iterator\", since = \"1.64.0\")]\n+impl FusedIterator for Incoming<'_> {}\n+\n #[unstable(feature = \"tcplistener_into_incoming\", issue = \"88339\")]\n impl Iterator for IntoIncoming {\n     type Item = io::Result<TcpStream>;\n@@ -1017,6 +1021,9 @@ impl Iterator for IntoIncoming {\n     }\n }\n \n+#[unstable(feature = \"tcplistener_into_incoming\", issue = \"88339\")]\n+impl FusedIterator for IntoIncoming {}\n+\n impl AsInner<net_imp::TcpListener> for TcpListener {\n     fn as_inner(&self) -> &net_imp::TcpListener {\n         &self.0"}]}