{"sha": "df51bffe6bef0c15f6e29a15ea54f269b251e179", "node_id": "C_kwDOAAsO6NoAKGRmNTFiZmZlNmJlZjBjMTVmNmUyOWExNWVhNTRmMjY5YjI1MWUxNzk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-04T01:26:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-04T01:26:26Z"}, "message": "Rollup merge of #91488 - compiler-errors:issue-91477, r=estebank\n\nFix ICE when `yield`ing in function returning `impl Trait`\n\nChange an assert to a `delay_span_bug` and remove an unwrap, that should fix it.\n\nFixes #91477", "tree": {"sha": "128ff8192e7f692523f39d3034d79111ea891e6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/128ff8192e7f692523f39d3034d79111ea891e6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df51bffe6bef0c15f6e29a15ea54f269b251e179", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqsPCCRBK7hj4Ov3rIwAA5yAIAAoOpgFt1h5TDFghTy8fk2B5\nmJVFofRMOWb8NNbBfMsZT55eV1RqTsRx7RZQWM2LNBZ8XyXoMwCXV3fpSXpY82Uv\n92zZJ8VMYTlHJqWBl8K/qrTkny4Xqb9D/mB+NCOFl/xZEPkwjMWfA5LeFjsIqaKR\nOUutJh93buKihOxT0s3ha4NXldJSmRPCBRJBj2VbPyDXL097OFEZcLvokDkveId0\nWB90eKuXuur+cX72xtTRL/Irl5ID/ddfkMfxhpgaoznpEMxUdT6QdKl3xyuwduoF\nmfc1LuAENRnfR0gXGHb6mkpGHK4GPda7uaUTcfSMEm7G4K83ES4XytsHj4SIgJQ=\n=qO2U\n-----END PGP SIGNATURE-----\n", "payload": "tree 128ff8192e7f692523f39d3034d79111ea891e6f\nparent af546dba3165b6cf7bb7c521fe27baa49acc13fa\nparent 7c108ababc7a54bd090f85aa7daab606af8ac6e8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638581186 +0100\ncommitter GitHub <noreply@github.com> 1638581186 +0100\n\nRollup merge of #91488 - compiler-errors:issue-91477, r=estebank\n\nFix ICE when `yield`ing in function returning `impl Trait`\n\nChange an assert to a `delay_span_bug` and remove an unwrap, that should fix it.\n\nFixes #91477\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df51bffe6bef0c15f6e29a15ea54f269b251e179", "html_url": "https://github.com/rust-lang/rust/commit/df51bffe6bef0c15f6e29a15ea54f269b251e179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df51bffe6bef0c15f6e29a15ea54f269b251e179/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af546dba3165b6cf7bb7c521fe27baa49acc13fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/af546dba3165b6cf7bb7c521fe27baa49acc13fa", "html_url": "https://github.com/rust-lang/rust/commit/af546dba3165b6cf7bb7c521fe27baa49acc13fa"}, {"sha": "7c108ababc7a54bd090f85aa7daab606af8ac6e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c108ababc7a54bd090f85aa7daab606af8ac6e8", "html_url": "https://github.com/rust-lang/rust/commit/7c108ababc7a54bd090f85aa7daab606af8ac6e8"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "bc740de5150659cc48f1954c0a17b8036fec98a9", "filename": "compiler/rustc_borrowck/src/type_check/input_output.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/df51bffe6bef0c15f6e29a15ea54f269b251e179/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df51bffe6bef0c15f6e29a15ea54f269b251e179/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Finput_output.rs?ref=df51bffe6bef0c15f6e29a15ea54f269b251e179", "patch": "@@ -117,9 +117,29 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n             }\n         }\n \n-        assert!(body.yield_ty().is_some() == universal_regions.yield_ty.is_some());\n-        if let Some(mir_yield_ty) = body.yield_ty() {\n-            let ur_yield_ty = universal_regions.yield_ty.unwrap();\n+        debug!(\n+            \"equate_inputs_and_outputs: body.yield_ty {:?}, universal_regions.yield_ty {:?}\",\n+            body.yield_ty(),\n+            universal_regions.yield_ty\n+        );\n+\n+        // We will not have a universal_regions.yield_ty if we yield (by accident)\n+        // outside of a generator and return an `impl Trait`, so emit a delay_span_bug\n+        // because we don't want to panic in an assert here if we've already got errors.\n+        if body.yield_ty().is_some() != universal_regions.yield_ty.is_some() {\n+            self.tcx().sess.delay_span_bug(\n+                body.span,\n+                &format!(\n+                    \"Expected body to have yield_ty ({:?}) iff we have a UR yield_ty ({:?})\",\n+                    body.yield_ty(),\n+                    universal_regions.yield_ty,\n+                ),\n+            );\n+        }\n+\n+        if let (Some(mir_yield_ty), Some(ur_yield_ty)) =\n+            (body.yield_ty(), universal_regions.yield_ty)\n+        {\n             let yield_span = body.local_decls[RETURN_PLACE].source_info.span;\n             self.equate_normalized_input_or_output(ur_yield_ty, mir_yield_ty, yield_span);\n         }"}, {"sha": "6c027feb422d17f418c18f5bcd1a56408feff6e0", "filename": "src/test/ui/generator/issue-91477.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/df51bffe6bef0c15f6e29a15ea54f269b251e179/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df51bffe6bef0c15f6e29a15ea54f269b251e179/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.rs?ref=df51bffe6bef0c15f6e29a15ea54f269b251e179", "patch": "@@ -0,0 +1,7 @@\n+#![feature(generators)]\n+\n+fn foo() -> impl Sized {\n+    yield 1; //~ ERROR E0627\n+}\n+\n+fn main() {}"}, {"sha": "4597dc1bcdfa55142f49d63af5bae2442f2d9a04", "filename": "src/test/ui/generator/issue-91477.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/df51bffe6bef0c15f6e29a15ea54f269b251e179/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df51bffe6bef0c15f6e29a15ea54f269b251e179/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-91477.stderr?ref=df51bffe6bef0c15f6e29a15ea54f269b251e179", "patch": "@@ -0,0 +1,9 @@\n+error[E0627]: yield expression outside of generator literal\n+  --> $DIR/issue-91477.rs:4:5\n+   |\n+LL |     yield 1;\n+   |     ^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0627`."}]}