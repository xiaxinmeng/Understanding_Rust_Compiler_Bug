{"sha": "38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZWNlYTRjMTE1MTE0YzBlOGExOWQ5MGQxY2E4YjVhZjhmNWNmODU=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-05-27T21:03:38Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-05-27T21:03:38Z"}, "message": "Use Place::local", "tree": {"sha": "9ead0eb291ecb4648d8c0c1f65e279753ed2f762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ead0eb291ecb4648d8c0c1f65e279753ed2f762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85", "html_url": "https://github.com/rust-lang/rust/commit/38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dbc7f96d6438b93c9274675b276cfe934164704", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbc7f96d6438b93c9274675b276cfe934164704", "html_url": "https://github.com/rust-lang/rust/commit/4dbc7f96d6438b93c9274675b276cfe934164704"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "07a9f294fb68cd455919ee2a63fa429b1053ff4d", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=38ecea4c115114c0e8a19d90d1ca8b5af8f5cf85", "patch": "@@ -528,13 +528,9 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             }) => {\n                 // Not projected from the implicit `self` in a closure.\n                 debug_assert!(\n-                    match *base {\n-                        Place::Base(PlaceBase::Local(local)) => local == Local::new(1),\n-                        Place::Projection(box Projection {\n-                            ref base,\n-                            elem: ProjectionElem::Deref,\n-                        }) => *base == Place::Base(PlaceBase::Local(Local::new(1))),\n-                        _ => false,\n+                    match base.local() {\n+                        Some(local) => local == Local::new(1),\n+                        None => false,\n                     },\n                     \"Unexpected capture place\"\n                 );"}]}