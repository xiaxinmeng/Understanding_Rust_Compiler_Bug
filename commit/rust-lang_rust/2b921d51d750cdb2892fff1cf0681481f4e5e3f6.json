{"sha": "2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOTIxZDUxZDc1MGNkYjI4OTJmZmYxY2YwNjgxNDgxZjRlNWUzZjY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-29T19:57:45Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-12-03T13:41:56Z"}, "message": "rustc: rename FnAbi::new to FnAbi::of_fn_ptr.", "tree": {"sha": "61f28489e5b444b17f9fb142a7b3e80891cec7a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61f28489e5b444b17f9fb142a7b3e80891cec7a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "html_url": "https://github.com/rust-lang/rust/commit/2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "052d0edbc1c2572ba735ef911a5ab7e9c2a703bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/052d0edbc1c2572ba735ef911a5ab7e9c2a703bc", "html_url": "https://github.com/rust-lang/rust/commit/052d0edbc1c2572ba735ef911a5ab7e9c2a703bc"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "c8800d6f140e1da2c80114a1114df10a3187cba6", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "patch": "@@ -2347,7 +2347,7 @@ where\n         + HasTyCtxt<'tcx>\n         + HasParamEnv<'tcx>,\n {\n-    fn new(cx: &C, sig: ty::FnSig<'tcx>, extra_args: &[Ty<'tcx>]) -> Self;\n+    fn of_fn_ptr(cx: &C, sig: ty::FnSig<'tcx>, extra_args: &[Ty<'tcx>]) -> Self;\n     fn of_instance(cx: &C, instance: ty::Instance<'tcx>, extra_args: &[Ty<'tcx>]) -> Self;\n     fn new_internal(\n         cx: &C,\n@@ -2366,7 +2366,7 @@ where\n         + HasTyCtxt<'tcx>\n         + HasParamEnv<'tcx>,\n {\n-    fn new(cx: &C, sig: ty::FnSig<'tcx>, extra_args: &[Ty<'tcx>]) -> Self {\n+    fn of_fn_ptr(cx: &C, sig: ty::FnSig<'tcx>, extra_args: &[Ty<'tcx>]) -> Self {\n         call::FnAbi::new_internal(cx, sig, extra_args, |ty, _| ArgAbi::new(cx.layout_of(ty)))\n     }\n "}, {"sha": "223aa7595d8fe3d9c589d43ec6480267e481fcbe", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "patch": "@@ -421,7 +421,7 @@ impl MiscMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n             Abi::C\n         );\n \n-        let fn_abi = FnAbi::new(self, sig, &[]);\n+        let fn_abi = FnAbi::of_fn_ptr(self, sig, &[]);\n         let llfn = self.declare_fn(\"rust_eh_unwind_resume\", &fn_abi);\n         attributes::apply_target_cpu_attr(self, llfn);\n         unwresume.set(Some(llfn));"}, {"sha": "c26b1ed8793cc1d124fda20f09edd4b1703e6e06", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "patch": "@@ -1012,7 +1012,7 @@ fn gen_fn<'ll, 'tcx>(\n         hir::Unsafety::Unsafe,\n         Abi::Rust\n     );\n-    let fn_abi = FnAbi::new(cx, rust_fn_sig, &[]);\n+    let fn_abi = FnAbi::of_fn_ptr(cx, rust_fn_sig, &[]);\n     let llfn = cx.declare_fn(name, &fn_abi);\n     // FIXME(eddyb) find a nicer way to do this.\n     unsafe { llvm::LLVMRustSetLinkage(llfn, llvm::Linkage::InternalLinkage) };"}, {"sha": "aa060e474fa5b3074114a0ba14e3d54852a42a64", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "patch": "@@ -239,7 +239,7 @@ impl<'tcx> LayoutLlvmExt<'tcx> for TyLayout<'tcx> {\n                         ty::ParamEnv::reveal_all(),\n                         &sig,\n                     );\n-                    cx.fn_ptr_backend_type(&FnAbi::new(cx, sig, &[]))\n+                    cx.fn_ptr_backend_type(&FnAbi::of_fn_ptr(cx, sig, &[]))\n                 }\n                 _ => self.scalar_llvm_type_at(cx, scalar, Size::ZERO)\n             };"}, {"sha": "1f63568807179d77938575f1115fe1e676e3aa1a", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b921d51d750cdb2892fff1cf0681481f4e5e3f6/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=2b921d51d750cdb2892fff1cf0681481f4e5e3f6", "patch": "@@ -529,7 +529,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n \n         let fn_abi = match instance {\n             Some(instance) => FnAbi::of_instance(&bx, instance, &extra_args),\n-            None => FnAbi::new(&bx, sig, &extra_args)\n+            None => FnAbi::of_fn_ptr(&bx, sig, &extra_args)\n         };\n \n         // For normal codegen, this Miri-specific intrinsic is just a NOP."}]}