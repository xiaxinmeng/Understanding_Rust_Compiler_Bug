{"sha": "65003fd4e341d0556a4100e4616eec9861b89b93", "node_id": "C_kwDOAAsO6NoAKDY1MDAzZmQ0ZTM0MWQwNTU2YTQxMDBlNDYxNmVlYzk4NjFiODliOTM", "commit": {"author": {"name": "Markus Reiter", "email": "me@reitermark.us", "date": "2022-08-19T22:06:47Z"}, "committer": {"name": "Markus Reiter", "email": "me@reitermark.us", "date": "2022-09-12T17:04:16Z"}, "message": "Add tests for `SockAddr` `Display`.", "tree": {"sha": "313cee01b62015d84d2dbe68146f32ed5471ad60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/313cee01b62015d84d2dbe68146f32ed5471ad60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65003fd4e341d0556a4100e4616eec9861b89b93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJFBAABCAAvFiEEbU1eLXPTwjnhHZwHJFKTtRcCZVsFAmMfZpERHG1lQHJlaXRl\ncm1hcmsudXMACgkQJFKTtRcCZVtd9xAAhTAafw1ET+1SAJbvqh7gma+TsRril1yQ\nhhc5nBZgWcwOG22y1btUXe2kgkEXdPBMJE/RAkbLjGWnSZ7b0ylhqoZ7TEPCuurL\nACZTifGYAOkuBv2qsw1c8BA2j1V1snERSzKof/O96ZDSqxZNPWDxYnZpEFm6tkhr\n/Vj1hd2jiulSVwUQIVXnH8veicl8FDMfc2vT4z5iWIF/NgWdWRYFeChhdtMSlCYc\nsZX/+4elcaFF287/e7L1bIU6fgZKq0X2xGJJSEKz9VF60ioMaoIAUx24ZG9q0pby\nKKsi/7wAka/KwFjsmgADsyGvL/l17JhzHxDvOzYe7SM4NjwDagzVc3YbLv3imhWR\nzQHyGqOwjNZg9S576ppRMyOmTKntJXNxnje5JBh2fMvE+UomK2XlvcYdjfYZJSCv\ntWxZCXy/pMHBYiCs+N7gBZa3fkA5Fyk6dF5DF8JVOAXLR3SOOULeyv9LMDiRFEXy\naJkxoIL1re0hoQF6qwF6qTFG0w5jcQlo+kFf+E1QrEqw3FUgDM0G0nIuBmFcSmJF\nvEspuSJiFNKItmibO8sUZNpNRlPGZXtcfM0f25vwgwHBKGbDr3XhNUkT7pWZyhng\nnqtdDMvmehcUPn3zwl06fK2oidV9TFxxCgEjHsJPxbS0y9Im7PCOU6lrtHz/cOG/\n9/kJjsRBYxc=\n=pKK+\n-----END PGP SIGNATURE-----", "payload": "tree 313cee01b62015d84d2dbe68146f32ed5471ad60\nparent 96b44f6f659acc13bba63e29263e504f84b19fc3\nauthor Markus Reiter <me@reitermark.us> 1660946807 +0200\ncommitter Markus Reiter <me@reitermark.us> 1663002256 +0200\n\nAdd tests for `SockAddr` `Display`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65003fd4e341d0556a4100e4616eec9861b89b93", "html_url": "https://github.com/rust-lang/rust/commit/65003fd4e341d0556a4100e4616eec9861b89b93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65003fd4e341d0556a4100e4616eec9861b89b93/comments", "author": {"login": "reitermarkus", "id": 1309829, "node_id": "MDQ6VXNlcjEzMDk4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1309829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reitermarkus", "html_url": "https://github.com/reitermarkus", "followers_url": "https://api.github.com/users/reitermarkus/followers", "following_url": "https://api.github.com/users/reitermarkus/following{/other_user}", "gists_url": "https://api.github.com/users/reitermarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/reitermarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reitermarkus/subscriptions", "organizations_url": "https://api.github.com/users/reitermarkus/orgs", "repos_url": "https://api.github.com/users/reitermarkus/repos", "events_url": "https://api.github.com/users/reitermarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/reitermarkus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "reitermarkus", "id": 1309829, "node_id": "MDQ6VXNlcjEzMDk4Mjk=", "avatar_url": "https://avatars.githubusercontent.com/u/1309829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reitermarkus", "html_url": "https://github.com/reitermarkus", "followers_url": "https://api.github.com/users/reitermarkus/followers", "following_url": "https://api.github.com/users/reitermarkus/following{/other_user}", "gists_url": "https://api.github.com/users/reitermarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/reitermarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reitermarkus/subscriptions", "organizations_url": "https://api.github.com/users/reitermarkus/orgs", "repos_url": "https://api.github.com/users/reitermarkus/repos", "events_url": "https://api.github.com/users/reitermarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/reitermarkus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96b44f6f659acc13bba63e29263e504f84b19fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/96b44f6f659acc13bba63e29263e504f84b19fc3", "html_url": "https://github.com/rust-lang/rust/commit/96b44f6f659acc13bba63e29263e504f84b19fc3"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "15211f81981ba1f6b5d1e24a06276c3a43eaa65e", "filename": "library/std/src/net/addr/socket/tests.rs", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/65003fd4e341d0556a4100e4616eec9861b89b93/library%2Fstd%2Fsrc%2Fnet%2Faddr%2Fsocket%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65003fd4e341d0556a4100e4616eec9861b89b93/library%2Fstd%2Fsrc%2Fnet%2Faddr%2Fsocket%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Faddr%2Fsocket%2Ftests.rs?ref=65003fd4e341d0556a4100e4616eec9861b89b93", "patch": "@@ -51,6 +51,75 @@ fn to_socket_addr_string() {\n     // s has been moved into the tsa call\n }\n \n+#[test]\n+fn ipv4_socket_addr_to_string() {\n+    // Shortest possible IPv4 length.\n+    assert_eq!(SocketAddrV4::new(Ipv4Addr::new(0, 0, 0, 0), 0).to_string(), \"0.0.0.0:0\");\n+\n+    // Longest possible IPv4 length.\n+    assert_eq!(\n+        SocketAddrV4::new(Ipv4Addr::new(255, 255, 255, 255), u16::MAX).to_string(),\n+        \"255.255.255.255:65535\"\n+    );\n+\n+    // Test padding.\n+    assert_eq!(\n+        &format!(\"{:16}\", SocketAddrV4::new(Ipv4Addr::new(1, 1, 1, 1), 53)),\n+        \"1.1.1.1:53      \"\n+    );\n+    assert_eq!(\n+        &format!(\"{:>16}\", SocketAddrV4::new(Ipv4Addr::new(1, 1, 1, 1), 53)),\n+        \"      1.1.1.1:53\"\n+    );\n+}\n+\n+#[test]\n+fn ipv6_socket_addr_to_string() {\n+    // IPv4-mapped address.\n+    assert_eq!(\n+        SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc000, 0x280), 8080, 0, 0)\n+            .to_string(),\n+        \"[::ffff:192.0.2.128]:8080\"\n+    );\n+\n+    // IPv4-compatible address.\n+    assert_eq!(\n+        SocketAddrV6::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0xc000, 0x280), 8080, 0, 0).to_string(),\n+        \"[::192.0.2.128]:8080\"\n+    );\n+\n+    // IPv6 address with no zero segments.\n+    assert_eq!(\n+        SocketAddrV6::new(Ipv6Addr::new(8, 9, 10, 11, 12, 13, 14, 15), 80, 0, 0).to_string(),\n+        \"[8:9:a:b:c:d:e:f]:80\"\n+    );\n+\n+    // Shortest possible IPv6 length.\n+    assert_eq!(SocketAddrV6::new(Ipv6Addr::UNSPECIFIED, 0, 0, 0).to_string(), \"[::]:0\");\n+\n+    // Longest possible IPv6 length.\n+    assert_eq!(\n+        SocketAddrV6::new(\n+            Ipv6Addr::new(0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888),\n+            u16::MAX,\n+            u32::MAX,\n+            u32::MAX,\n+        )\n+        .to_string(),\n+        \"[1111:2222:3333:4444:5555:6666:7777:8888%4294967295]:65535\"\n+    );\n+\n+    // Test padding.\n+    assert_eq!(\n+        &format!(\"{:22}\", SocketAddrV6::new(Ipv6Addr::new(1, 2, 3, 4, 5, 6, 7, 8), 9, 0, 0)),\n+        \"[1:2:3:4:5:6:7:8]:9   \"\n+    );\n+    assert_eq!(\n+        &format!(\"{:>22}\", SocketAddrV6::new(Ipv6Addr::new(1, 2, 3, 4, 5, 6, 7, 8), 9, 0, 0)),\n+        \"   [1:2:3:4:5:6:7:8]:9\"\n+    );\n+}\n+\n #[test]\n fn bind_udp_socket_bad() {\n     // rust-lang/rust#53957: This is a regression test for a parsing problem"}]}