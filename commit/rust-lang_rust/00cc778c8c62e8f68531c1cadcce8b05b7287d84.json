{"sha": "00cc778c8c62e8f68531c1cadcce8b05b7287d84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwY2M3NzhjOGM2MmU4ZjY4NTMxYzFjYWRjY2U4YjA1YjcyODdkODQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-12T18:31:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-16T16:17:32Z"}, "message": "reduce code duplication in tests", "tree": {"sha": "a021472f303861aae0212aec5b773b6d8562c788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a021472f303861aae0212aec5b773b6d8562c788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00cc778c8c62e8f68531c1cadcce8b05b7287d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00cc778c8c62e8f68531c1cadcce8b05b7287d84", "html_url": "https://github.com/rust-lang/rust/commit/00cc778c8c62e8f68531c1cadcce8b05b7287d84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00cc778c8c62e8f68531c1cadcce8b05b7287d84/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "html_url": "https://github.com/rust-lang/rust/commit/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "af51d73489acb6b5883af6b17c045dcbc5b6ae9b", "filename": "crates/ide_db/src/line_index/tests.rs", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/00cc778c8c62e8f68531c1cadcce8b05b7287d84/crates%2Fide_db%2Fsrc%2Fline_index%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00cc778c8c62e8f68531c1cadcce8b05b7287d84/crates%2Fide_db%2Fsrc%2Fline_index%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fline_index%2Ftests.rs?ref=00cc778c8c62e8f68531c1cadcce8b05b7287d84", "patch": "@@ -3,24 +3,29 @@ use super::*;\n #[test]\n fn test_line_index() {\n     let text = \"hello\\nworld\";\n+    let table = [\n+        (00, 0, 0),\n+        (01, 0, 1),\n+        (05, 0, 5),\n+        (06, 1, 0),\n+        (07, 1, 1),\n+        (08, 1, 2),\n+        (10, 1, 4),\n+        (11, 1, 5),\n+        (12, 1, 6),\n+    ];\n+\n     let index = LineIndex::new(text);\n-    assert_eq!(index.line_col(0.into()), LineColUtf16 { line: 0, col: 0 });\n-    assert_eq!(index.line_col(1.into()), LineColUtf16 { line: 0, col: 1 });\n-    assert_eq!(index.line_col(5.into()), LineColUtf16 { line: 0, col: 5 });\n-    assert_eq!(index.line_col(6.into()), LineColUtf16 { line: 1, col: 0 });\n-    assert_eq!(index.line_col(7.into()), LineColUtf16 { line: 1, col: 1 });\n-    assert_eq!(index.line_col(8.into()), LineColUtf16 { line: 1, col: 2 });\n-    assert_eq!(index.line_col(10.into()), LineColUtf16 { line: 1, col: 4 });\n-    assert_eq!(index.line_col(11.into()), LineColUtf16 { line: 1, col: 5 });\n-    assert_eq!(index.line_col(12.into()), LineColUtf16 { line: 1, col: 6 });\n+    for &(offset, line, col) in &table {\n+        assert_eq!(index.line_col(offset.into()), LineColUtf16 { line, col });\n+    }\n \n     let text = \"\\nhello\\nworld\";\n+    let table = [(0, 0, 0), (1, 1, 0), (2, 1, 1), (6, 1, 5), (7, 2, 0)];\n     let index = LineIndex::new(text);\n-    assert_eq!(index.line_col(0.into()), LineColUtf16 { line: 0, col: 0 });\n-    assert_eq!(index.line_col(1.into()), LineColUtf16 { line: 1, col: 0 });\n-    assert_eq!(index.line_col(2.into()), LineColUtf16 { line: 1, col: 1 });\n-    assert_eq!(index.line_col(6.into()), LineColUtf16 { line: 1, col: 5 });\n-    assert_eq!(index.line_col(7.into()), LineColUtf16 { line: 2, col: 0 });\n+    for &(offset, line, col) in &table {\n+        assert_eq!(index.line_col(offset.into()), LineColUtf16 { line, col });\n+    }\n }\n \n #[test]"}]}