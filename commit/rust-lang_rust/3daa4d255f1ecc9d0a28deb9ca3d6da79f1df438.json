{"sha": "3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYWE0ZDI1NWYxZWNjOWQwYTI4ZGViOWNhM2Q2ZGE3OWYxZGY0Mzg=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-01-19T22:11:59Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-01-27T13:33:10Z"}, "message": "Introduced a new set to stop duplicate errors from MIR passes on one place/span.", "tree": {"sha": "8f3568f79e4be46f215cdee974cacc65bd968540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f3568f79e4be46f215cdee974cacc65bd968540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlpsf5YACgkQAXYLT59T\n8VRiHg/+OcJ22Ka3be5rbRb1TYIumG1hL0F3BfftC78ElNOjXSuB4a9Jt94Y8n5X\nLSh6ptsZ4RLKPzcfwRiukBV3MOKBSkNLRontXsk95cOfPdMOOhwny+BMdnjZeTWZ\nj54bJLhH2fPmoyx9WEUgFqkQQNuwb6Q3+nN6JUP2411JxjMsjaIqleXWOuyvqqZ1\n0ms1OZc7QKWoaNQGM/+5Es3acuTFA4TIU7dJr+RNR8qfExFAgTx5yHFBFpr4UETg\nAg7+qcvq3xrXnW5gqVvvRoKcIrl6dskOhmHixHY55cjaDKbCqZ1ce/v+opSftdMo\njkE4h7/hDzC+RqtcGjVo3dGoDyMyb8lXSbWEQoe0jtGdvyzbOUB3dP7TKYrw9JXE\nyi8u1zVNWpcDzW5narN+pEkuxRYuMp+BJz+Tg/j6MwK3wQ+GR8/cmN9rmd9iA5MK\n6O5EOY4dTSd2n+ue4C1I0NgNV9EV3rP5hdwMz7DYU3X22v1LOGTT7fiFl8hL750i\nlMpJ2eL2bspRmofB2rM/PrBf3/HoR99/lSv6peU05f/KlZpmywr3EGlYUFquoiwy\n8TLOvdm7CNrkjIQJ60F6lZQLWVsoZ8uy74z+eejskw5yx+vFYnUUEywIs32HyUGP\nsDOeMEg5D9GyMJsL4gvicW7ce+JIJwaFeJzvU5OTAU+uZpZw1oA=\n=zDPV\n-----END PGP SIGNATURE-----", "payload": "tree 8f3568f79e4be46f215cdee974cacc65bd968540\nparent f1c1db61e454a6be93a2706ad15a09aad161613f\nauthor David Wood <david@davidtw.co> 1516399919 +0000\ncommitter David Wood <david@davidtw.co> 1517059990 +0000\n\nIntroduced a new set to stop duplicate errors from MIR passes on one place/span.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438", "html_url": "https://github.com/rust-lang/rust/commit/3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1c1db61e454a6be93a2706ad15a09aad161613f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1c1db61e454a6be93a2706ad15a09aad161613f", "html_url": "https://github.com/rust-lang/rust/commit/f1c1db61e454a6be93a2706ad15a09aad161613f"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "1d630b280a5902445ff3697209f42e46eee84cea", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=3daa4d255f1ecc9d0a28deb9ca3d6da79f1df438", "patch": "@@ -230,6 +230,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         },\n         storage_dead_or_drop_error_reported_l: FxHashSet(),\n         storage_dead_or_drop_error_reported_s: FxHashSet(),\n+        read_or_write_error_reported: FxHashSet(),\n         reservation_error_reported: FxHashSet(),\n         nonlexical_regioncx: opt_regioncx.clone(),\n     };\n@@ -300,6 +301,9 @@ pub struct MirBorrowckCtxt<'cx, 'gcx: 'tcx, 'tcx: 'cx> {\n     storage_dead_or_drop_error_reported_l: FxHashSet<Local>,\n     /// Same as the above, but for statics (thread-locals)\n     storage_dead_or_drop_error_reported_s: FxHashSet<DefId>,\n+    /// This field keeps track of when borrow errors are reported in read or write passes\n+    /// so that an error is not reported in both.\n+    read_or_write_error_reported: FxHashSet<(Place<'tcx>, Span)>,\n     /// This field keeps track of when borrow conflict errors are reported\n     /// for reservations, so that we don't report seemingly duplicate\n     /// errors for corresponding activations\n@@ -739,11 +743,23 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             }\n         }\n \n+        if self.read_or_write_error_reported.contains(&(place_span.0.clone(), place_span.1)) {\n+            debug!(\"suppressing access_place write for {:?}\", place_span);\n+            return AccessErrorsReported {\n+                mutability_error: false,\n+                conflict_error: true,\n+            };\n+        }\n+\n         let mutability_error =\n             self.check_access_permissions(place_span, rw, is_local_mutation_allowed);\n         let conflict_error =\n             self.check_access_for_conflict(context, place_span, sd, rw, flow_state);\n \n+        if conflict_error {\n+            self.read_or_write_error_reported.insert((place_span.0.clone(), place_span.1));\n+        }\n+\n         AccessErrorsReported {\n             mutability_error,\n             conflict_error,"}]}