{"sha": "4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlOGM4N2FkMDgxYzE5M2IyYmNkYjVlYzgzYTViMGZjYjQzZWY0Yjc=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-06-16T14:30:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-16T14:30:44Z"}, "message": "Merge pull request #1021 from Manishearth/issue1017\n\nFix FP with `WHILE_LET_LOOP` and break expressions", "tree": {"sha": "3a9dc3bd445eb760b0e91b4cb214d996d91a17ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a9dc3bd445eb760b0e91b4cb214d996d91a17ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7", "html_url": "https://github.com/rust-lang/rust/commit/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be4a8dd3d921ce3a4bccbb2429246aa9ae1b8fde", "url": "https://api.github.com/repos/rust-lang/rust/commits/be4a8dd3d921ce3a4bccbb2429246aa9ae1b8fde", "html_url": "https://github.com/rust-lang/rust/commit/be4a8dd3d921ce3a4bccbb2429246aa9ae1b8fde"}, {"sha": "836554387a86c312a482c95bc9a217303cb399b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/836554387a86c312a482c95bc9a217303cb399b0", "html_url": "https://github.com/rust-lang/rust/commit/836554387a86c312a482c95bc9a217303cb399b0"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "3df766c95d441dfa207b5a7c70f656a888ebb82a", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7", "patch": "@@ -249,7 +249,8 @@ impl LateLintPass for LoopsPass {\n                     match *source {\n                         MatchSource::Normal |\n                         MatchSource::IfLetDesugar { .. } => {\n-                            if arms.len() == 2 && arms[0].pats.len() == 1 && arms[0].guard.is_none() &&\n+                            if arms.len() == 2 &&\n+                               arms[0].pats.len() == 1 && arms[0].guard.is_none() &&\n                                arms[1].pats.len() == 1 && arms[1].guard.is_none() &&\n                                is_break_expr(&arms[1].body) {\n                                 if in_external_macro(cx, expr.span) {\n@@ -787,12 +788,11 @@ fn extract_expr_from_first_stmt(block: &Block) -> Option<&Expr> {\n /// If a block begins with an expression (with or without semicolon), return it.\n fn extract_first_expr(block: &Block) -> Option<&Expr> {\n     match block.expr {\n-        Some(ref expr) => Some(expr),\n+        Some(ref expr) if block.stmts.is_empty() => Some(expr),\n         None if !block.stmts.is_empty() => {\n             match block.stmts[0].node {\n-                StmtExpr(ref expr, _) |\n-                StmtSemi(ref expr, _) => Some(expr),\n-                _ => None,\n+                StmtExpr(ref expr, _) | StmtSemi(ref expr, _) => Some(expr),\n+                StmtDecl(..) => None,\n             }\n         }\n         _ => None,\n@@ -803,7 +803,6 @@ fn extract_first_expr(block: &Block) -> Option<&Expr> {\n fn is_break_expr(expr: &Expr) -> bool {\n     match expr.node {\n         ExprBreak(None) => true,\n-        // there won't be a `let <pat> = break` and so we can safely ignore the StmtDecl case\n         ExprBlock(ref b) => {\n             match extract_first_expr(b) {\n                 Some(ref subexpr) => is_break_expr(subexpr),"}, {"sha": "d8cea42e20bf22a4acd1f142669c09720adf2779", "filename": "tests/compile-fail/while_loop.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7/tests%2Fcompile-fail%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7/tests%2Fcompile-fail%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fwhile_loop.rs?ref=4e8c87ad081c193b2bcdb5ec83a5b0fcb43ef4b7", "patch": "@@ -150,3 +150,18 @@ fn no_panic<T>(slice: &[T]) {\n         loop {} //~ERROR empty `loop {}` detected.\n     }\n }\n+\n+fn issue1017() {\n+    let r: Result<u32, u32> = Ok(42);\n+    let mut len = 1337;\n+\n+    loop {\n+        match r {\n+            Err(_) => len = 0,\n+            Ok(length) => {\n+                len = length;\n+                break\n+            }\n+        }\n+    }\n+}"}]}