{"sha": "9246b3056c1e669d8afc497cd7a98719ec53965b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNDZiMzA1NmMxZTY2OWQ4YWZjNDk3Y2Q3YTk4NzE5ZWM1Mzk2NWI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-01-23T00:02:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-23T00:02:09Z"}, "message": "Rollup merge of #68253 - japaric:bare-metal-cortex-a, r=alexcrichton\n\nadd bare metal ARM Cortex-A targets to rustc\n\n-> `rustc --target armv7a-none-eabi` will work\n\nalso build rust-std (rustup) components for them\n\n-> `rustup target add armv7a-none-eabi` will work\n\nthis completes our bare-metal support of ARMv7 cores on stable Rust (by 1.42 or 1.43)\n\n(these target specifications have been tested on a real (no emulation / QEMU) [Cortex-A7 core](https://github.com/iqlusioninc/usbarmory.rs/))", "tree": {"sha": "4583416786145438ede26e603c8a937d3375a041", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4583416786145438ede26e603c8a937d3375a041"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9246b3056c1e669d8afc497cd7a98719ec53965b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeKOKBCRBK7hj4Ov3rIwAAdHIIAJxQzR9+rXfuf/mhPQvqc7om\n7EksPS7XaGZtCjBZ+crtWZC1zFMDrkopPfxCnuHIA1yaFwtilausuZxzuJcp4WvS\n44obTuLShGIxliJ9gZsyTisS/ON72ddtPfNo7R+FBc0duf2i5FkmeH8whIFLwEuZ\nU2zRO/Jw+lG3H0UELTcDBs/rI80t+X2W6YYePbCjM0QirIcBumkpr4fB610iQdVH\nJq4uNXVLPEMonrMrQkWoOWrLBYaBbFU31pwBrHVNHa2v/xfAo0LnsHVQNy4/pDKZ\naCi7o1FLGD4ZdcndGVNr6UZZ9VsdLAgyggqNRCswvjUi2Jrs9Xs9/TWtG/yRstU=\n=wx12\n-----END PGP SIGNATURE-----\n", "payload": "tree 4583416786145438ede26e603c8a937d3375a041\nparent 0c3827bfa764340298a224bc68d422c52519e0bb\nparent 8abbd0beae79de5186158a759b08cb73d175b5ad\nauthor Tyler Mandry <tmandry@gmail.com> 1579737729 -0800\ncommitter GitHub <noreply@github.com> 1579737729 -0800\n\nRollup merge of #68253 - japaric:bare-metal-cortex-a, r=alexcrichton\n\nadd bare metal ARM Cortex-A targets to rustc\n\n-> `rustc --target armv7a-none-eabi` will work\n\nalso build rust-std (rustup) components for them\n\n-> `rustup target add armv7a-none-eabi` will work\n\nthis completes our bare-metal support of ARMv7 cores on stable Rust (by 1.42 or 1.43)\n\n(these target specifications have been tested on a real (no emulation / QEMU) [Cortex-A7 core](https://github.com/iqlusioninc/usbarmory.rs/))\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9246b3056c1e669d8afc497cd7a98719ec53965b", "html_url": "https://github.com/rust-lang/rust/commit/9246b3056c1e669d8afc497cd7a98719ec53965b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9246b3056c1e669d8afc497cd7a98719ec53965b/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c3827bfa764340298a224bc68d422c52519e0bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3827bfa764340298a224bc68d422c52519e0bb", "html_url": "https://github.com/rust-lang/rust/commit/0c3827bfa764340298a224bc68d422c52519e0bb"}, {"sha": "8abbd0beae79de5186158a759b08cb73d175b5ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/8abbd0beae79de5186158a759b08cb73d175b5ad", "html_url": "https://github.com/rust-lang/rust/commit/8abbd0beae79de5186158a759b08cb73d175b5ad"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "2a68a25be21b3342642d51b6ee7f8494dfbedd6f", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=9246b3056c1e669d8afc497cd7a98719ec53965b", "patch": "@@ -160,6 +160,7 @@ ENV TARGETS=$TARGETS,armebv7r-none-eabihf\n ENV TARGETS=$TARGETS,armv7r-none-eabi\n ENV TARGETS=$TARGETS,armv7r-none-eabihf\n ENV TARGETS=$TARGETS,thumbv7neon-unknown-linux-gnueabihf\n+ENV TARGETS=$TARGETS,armv7a-none-eabi\n \n # riscv targets currently do not need a C compiler, as compiler_builtins\n # doesn't currently have it enabled, and the riscv gcc compiler is not\n@@ -173,6 +174,10 @@ ENV CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n     CC_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-gcc \\\n     AR_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-ar \\\n     CXX_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-g++ \\\n+    CC_armv7a_none_eabi=arm-none-eabi-gcc \\\n+    CC_armv7a_none_eabihf=arm-none-eabi-gcc \\\n+    CFLAGS_armv7a_none_eabi=-march=armv7-a \\\n+    CFLAGS_armv7a_none_eabihf=-march=armv7-a+vfpv3 \\\n     CC_riscv64gc_unknown_linux_gnu=riscv64-unknown-linux-gnu-gcc \\\n     AR_riscv64gc_unknown_linux_gnu=riscv64-unknown-linux-gnu-ar \\\n     CXX_riscv64gc_unknown_linux_gnu=riscv64-unknown-linux-gnu-g++ \\"}, {"sha": "2fbef154f814c19046a8999be1bd6a33dde6ce63", "filename": "src/librustc_target/spec/armv7a_none_eabi.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabi.rs?ref=9246b3056c1e669d8afc497cd7a98719ec53965b", "patch": "@@ -0,0 +1,48 @@\n+// Generic ARMv7-A target for bare-metal code - floating point disabled\n+//\n+// This is basically the `armv7-unknown-linux-gnueabi` target with some changes\n+// (listed below) to bring it closer to the bare-metal `thumb` & `aarch64`\n+// targets:\n+//\n+// - `TargetOptions.features`: added `+strict-align`. rationale: unaligned\n+// memory access is disabled on boot on these cores\n+// - linker changed to LLD. rationale: C is not strictly needed to build\n+// bare-metal binaries (the `gcc` linker has the advantage that it knows where C\n+// libraries and crt*.o are but it's not much of an advantage here); LLD is also\n+// faster\n+// - `target_os` set to `none`. rationale: matches `thumb` targets\n+// - `target_{env,vendor}` set to an empty string. rationale: matches `thumb`\n+// targets\n+// - `panic_strategy` set to `abort`. rationale: matches `thumb` targets\n+// - `relocation-model` set to `static`; also no PIE, no relro and no dynamic\n+// linking. rationale: matches `thumb` targets\n+\n+use super::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions};\n+\n+pub fn target() -> Result<Target, String> {\n+    let opts = TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        features: \"+v7,+thumb2,+soft-float,-neon,+strict-align\".to_string(),\n+        executables: true,\n+        relocation_model: \"static\".to_string(),\n+        disable_redzone: true,\n+        max_atomic_width: Some(64),\n+        panic_strategy: PanicStrategy::Abort,\n+        abi_blacklist: super::arm_base::abi_blacklist(),\n+        emit_debug_gdb_scripts: false,\n+        ..Default::default()\n+    };\n+    Ok(Target {\n+        llvm_target: \"armv7a-none-eabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: String::new(),\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+        options: opts,\n+    })\n+}"}, {"sha": "f31e68c5bd12a51f05e173ead51c590706df5d0b", "filename": "src/librustc_target/spec/armv7a_none_eabihf.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv7a_none_eabihf.rs?ref=9246b3056c1e669d8afc497cd7a98719ec53965b", "patch": "@@ -0,0 +1,36 @@\n+// Generic ARMv7-A target for bare-metal code - floating point enabled (assumes\n+// FPU is present and emits FPU instructions)\n+//\n+// This is basically the `armv7-unknown-linux-gnueabihf` target with some\n+// changes (list in `armv7a_none_eabi.rs`) to bring it closer to the bare-metal\n+// `thumb` & `aarch64` targets.\n+\n+use super::{LinkerFlavor, LldFlavor, PanicStrategy, Target, TargetOptions};\n+\n+pub fn target() -> Result<Target, String> {\n+    let opts = TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        features: \"+v7,+vfp3,-d32,+thumb2,-neon,+strict-align\".to_string(),\n+        executables: true,\n+        relocation_model: \"static\".to_string(),\n+        disable_redzone: true,\n+        max_atomic_width: Some(64),\n+        panic_strategy: PanicStrategy::Abort,\n+        abi_blacklist: super::arm_base::abi_blacklist(),\n+        emit_debug_gdb_scripts: false,\n+        ..Default::default()\n+    };\n+    Ok(Target {\n+        llvm_target: \"armv7a-none-eabihf\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: String::new(),\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+        options: opts,\n+    })\n+}"}, {"sha": "67f45d3d230ef481c6d5ffa795a6673209833560", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=9246b3056c1e669d8afc497cd7a98719ec53965b", "patch": "@@ -472,6 +472,9 @@ supported_targets! {\n     (\"thumbv8m.main-none-eabi\", thumbv8m_main_none_eabi),\n     (\"thumbv8m.main-none-eabihf\", thumbv8m_main_none_eabihf),\n \n+    (\"armv7a-none-eabi\", armv7a_none_eabi),\n+    (\"armv7a-none-eabihf\", armv7a_none_eabihf),\n+\n     (\"msp430-none-elf\", msp430_none_elf),\n \n     (\"aarch64-unknown-cloudabi\", aarch64_unknown_cloudabi),"}, {"sha": "98e9fe7a8b221b47ce53a163f41bcfdc097518db", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9246b3056c1e669d8afc497cd7a98719ec53965b/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=9246b3056c1e669d8afc497cd7a98719ec53965b", "patch": "@@ -69,6 +69,7 @@ static TARGETS: &[&str] = &[\n     \"thumbv7neon-linux-androideabi\",\n     \"armv7-unknown-linux-gnueabi\",\n     \"armv7-unknown-linux-gnueabihf\",\n+    \"armv7a-none-eabi\",\n     \"thumbv7neon-unknown-linux-gnueabihf\",\n     \"armv7-unknown-linux-musleabi\",\n     \"armv7-unknown-linux-musleabihf\","}]}