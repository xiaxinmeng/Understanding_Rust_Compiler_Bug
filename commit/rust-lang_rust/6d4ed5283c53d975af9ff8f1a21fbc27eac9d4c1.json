{"sha": "6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNGVkNTI4M2M1M2Q5NzVhZjlmZjhmMWEyMWZiYzI3ZWFjOWQ0YzE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-05T00:11:30Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-05T18:18:35Z"}, "message": "libsyntax: Separate multiple inherited traits with `+`", "tree": {"sha": "3ee1c6be00c4c215de603c631a9a258a196a76cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ee1c6be00c4c215de603c631a9a258a196a76cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "html_url": "https://github.com/rust-lang/rust/commit/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f55a070757792475a325dfd1786765b7bfc84f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f55a070757792475a325dfd1786765b7bfc84f5", "html_url": "https://github.com/rust-lang/rust/commit/5f55a070757792475a325dfd1786765b7bfc84f5"}], "stats": {"total": 54, "additions": 30, "deletions": 24}, "files": [{"sha": "5013b2c919f7aac87cf1528cdc15d93a49079ac4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -3112,7 +3112,7 @@ pub impl Parser {\n     fn parse_trait_ref_list(&self, ket: &token::Token) -> ~[@trait_ref] {\n         self.parse_seq_to_before_end(\n             ket,\n-            seq_sep_none(),\n+            seq_sep_trailing_disallowed(token::BINOP(token::PLUS)),\n             |p| p.parse_trait_ref()\n         )\n     }"}, {"sha": "d307e3964e71e91ff9b50216d0f177aa78f54c35", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -600,8 +600,11 @@ pub fn print_item(s: @ps, &&item: @ast::item) {\n         print_generics(s, generics);\n         if traits.len() != 0u {\n             word(s.s, ~\":\");\n-            for traits.each |trait_| {\n+            for traits.eachi |i, trait_| {\n                 nbsp(s);\n+                if i != 0 {\n+                    word_space(s, ~\"+\");\n+                }\n                 print_path(s, trait_.path, false);\n             }\n         }"}, {"sha": "ecd43686b773a0b0ec9971c5c49c491e803ec4e6", "filename": "src/test/auxiliary/trait_inheritance_auto_xc_aux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_auto_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_auto_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_auto_xc_aux.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -12,6 +12,6 @@ trait Foo { fn f() -> int; }\n trait Bar { fn g() -> int; }\n trait Baz { fn h() -> int; }\n \n-trait Quux: Foo Bar Baz { }\n+trait Quux: Foo + Bar + Baz { }\n \n impl<T:Foo + Bar + Baz> Quux for T { }"}, {"sha": "e86f7cfd26ad50bbdf3280ec44fe0c9ce6a16c0d", "filename": "src/test/auxiliary/trait_inheritance_overloading_xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_overloading_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_overloading_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_inheritance_overloading_xc.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -10,7 +10,7 @@\n \n use core::cmp::Eq;\n \n-pub trait MyNum : Add<Self,Self> Sub<Self,Self> Mul<Self,Self> Eq {\n+pub trait MyNum : Add<Self,Self> + Sub<Self,Self> + Mul<Self,Self> + Eq {\n }\n \n pub struct MyInt {"}, {"sha": "afd8cf892333f7e910e34cc79adad470b29f3192", "filename": "src/test/compile-fail/issue-3953.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Fcompile-fail%2Fissue-3953.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Fcompile-fail%2Fissue-3953.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3953.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -10,12 +10,15 @@\n \n use core::cmp::Eq;\n \n-trait Hahaha: Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq //~ ERROR Duplicate supertrait in trait declaration\n-              Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq\n-              Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq\n-              Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq\n-              Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq\n-              Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq Eq {}\n+trait Hahaha: Eq + Eq + Eq + Eq + Eq + //~ ERROR Duplicate supertrait\n+              Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq +\n+              Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq +\n+              Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq +\n+              Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq +\n+              Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq +\n+              Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq +\n+              Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq + Eq +\n+              Eq {}\n \n enum Lol = int;\n "}, {"sha": "6b8dd43d58b57b607a9521bf1cc098d273f6dee5", "filename": "src/test/run-pass/trait-inheritance-auto-xc-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -17,7 +17,7 @@ extern mod aux(name = \"trait_inheritance_auto_xc_2_aux\");\n use aux::{Foo, Bar, Baz, A};\n \n // We want to extend all Foo, Bar, Bazes to Quuxes\n-pub trait Quux: Foo Bar Baz { }\n+pub trait Quux: Foo + Bar + Baz { }\n impl<T:Foo + Bar + Baz> Quux for T { }\n \n fn f<T:Quux>(a: &T) {"}, {"sha": "7ebbc8e83cb659b5940c6408399881562ccb0f64", "filename": "src/test/run-pass/trait-inheritance-auto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -16,7 +16,7 @@ trait Foo { fn f() -> int; }\n trait Bar { fn g() -> int; }\n trait Baz { fn h() -> int; }\n \n-trait Quux: Foo Bar Baz { }\n+trait Quux: Foo + Bar + Baz { }\n \n struct A { x: int }\n "}, {"sha": "a4a3991f9e8f9267892a6d68ecb253543a5491b9", "filename": "src/test/run-pass/trait-inheritance-diamond.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-diamond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-diamond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-diamond.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -13,7 +13,7 @@\n trait A { fn a(&self) -> int; }\n trait B: A { fn b(&self) -> int; }\n trait C: A { fn c(&self) -> int; }\n-trait D: B C { fn d(&self) -> int; }\n+trait D: B + C { fn d(&self) -> int; }\n \n struct S { bogus: () }\n "}, {"sha": "92cb25b8d2be7d730121d9b0f942bd9255a57243", "filename": "src/test/run-pass/trait-inheritance-num.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -16,9 +16,9 @@ use core::num::NumCast::from;\n extern mod std;\n use std::cmp::FuzzyEq;\n \n-pub trait NumExt: NumCast Eq Ord {}\n+pub trait NumExt: NumCast + Eq + Ord {}\n \n-pub trait FloatExt: NumExt FuzzyEq<Self> {}\n+pub trait FloatExt: NumExt + FuzzyEq<Self> {}\n \n fn greater_than_one<T:NumExt>(n: &T) -> bool { *n > from(1) }\n fn greater_than_one_float<T:FloatExt>(n: &T) -> bool { *n > from(1) }"}, {"sha": "7f0d4d77b626480837c116d24fc9c01b5d0258f4", "filename": "src/test/run-pass/trait-inheritance-num0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num0.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -19,7 +19,7 @@ trait Num {\n     fn gt(&self, other: &Self) -> bool;\n }\n \n-pub trait NumExt: Num NumCast { }\n+pub trait NumExt: Num + NumCast { }\n \n fn greater_than_one<T:NumExt>(n: &T) -> bool {\n     n.gt(&from(1))"}, {"sha": "07b9772af2970c248c9eb81bd582789fee561e93", "filename": "src/test/run-pass/trait-inheritance-num1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num1.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -11,7 +11,7 @@\n use core::cmp::Ord;\n use core::num::NumCast::from;\n \n-pub trait NumExt: NumCast Ord { }\n+pub trait NumExt: NumCast + Ord { }\n \n fn greater_than_one<T:NumExt>(n: &T) -> bool {\n     *n > from(1)"}, {"sha": "8f8b83c3d7614425b4ae112cd5b22e67b9ec2350", "filename": "src/test/run-pass/trait-inheritance-num2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num2.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -38,7 +38,7 @@ impl TypeExt for f64 {}\n impl TypeExt for float {}\n \n \n-pub trait NumExt: TypeExt Eq Ord NumCast {}\n+pub trait NumExt: TypeExt + Eq + Ord + NumCast {}\n \n impl NumExt for u8 {}\n impl NumExt for u16 {}\n@@ -94,7 +94,7 @@ impl IntegerExt for i64 {}\n impl IntegerExt for int {}\n \n \n-pub trait FloatExt: NumExt FuzzyEq<Self> {}\n+pub trait FloatExt: NumExt + FuzzyEq<Self> {}\n \n impl FloatExt for f32 {}\n impl FloatExt for f64 {}"}, {"sha": "67861709e76f28dea0604da07d8aed3b9faeee69", "filename": "src/test/run-pass/trait-inheritance-num3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num3.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -11,7 +11,7 @@\n use core::cmp::{Eq, Ord};\n use core::num::NumCast::from;\n \n-pub trait NumExt: Eq Ord NumCast {}\n+pub trait NumExt: Eq + Ord + NumCast {}\n \n impl NumExt for f32 {}\n "}, {"sha": "2efe5b23eb57b3de2ec86b4c4edbb26a2b349ceb", "filename": "src/test/run-pass/trait-inheritance-num5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-num5.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -11,7 +11,7 @@\n use core::cmp::{Eq, Ord};\n use core::num::NumCast::from;\n \n-pub trait NumExt: Eq NumCast {}\n+pub trait NumExt: Eq + NumCast {}\n \n impl NumExt for f32 {}\n impl NumExt for int {}"}, {"sha": "a4d7e33891f495b25aa1425ff193bf9605a99274", "filename": "src/test/run-pass/trait-inheritance-overloading.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-overloading.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-overloading.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-overloading.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -10,7 +10,7 @@\n \n use core::cmp::Eq;\n \n-trait MyNum : Add<Self,Self> Sub<Self,Self> Mul<Self,Self> Eq { }\n+trait MyNum : Add<Self,Self> + Sub<Self,Self> + Mul<Self,Self> + Eq { }\n \n struct MyInt { val: int }\n "}, {"sha": "ccc7f1fc4c07ff0bdb1bb4d94a4069affe8ba3a7", "filename": "src/test/run-pass/trait-inheritance-static2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-static2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance-static2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-static2.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -14,7 +14,7 @@ trait MyNum {\n     static fn from_int(int) -> Self;\n }\n \n-pub trait NumExt: MyEq MyNum { }\n+pub trait NumExt: MyEq + MyNum { }\n \n struct S { v: int }\n "}, {"sha": "5925888650d8009c772d54111ba0aaa989d8f1e6", "filename": "src/test/run-pass/trait-inheritance2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1/src%2Ftest%2Frun-pass%2Ftrait-inheritance2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance2.rs?ref=6d4ed5283c53d975af9ff8f1a21fbc27eac9d4c1", "patch": "@@ -12,7 +12,7 @@ trait Foo { fn f() -> int; }\n trait Bar { fn g() -> int; }\n trait Baz { fn h() -> int; }\n \n-trait Quux: Foo Bar Baz { }\n+trait Quux: Foo + Bar + Baz { }\n \n struct A { x: int }\n "}]}