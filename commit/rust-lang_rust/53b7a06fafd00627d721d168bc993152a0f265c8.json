{"sha": "53b7a06fafd00627d721d168bc993152a0f265c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYjdhMDZmYWZkMDA2MjdkNzIxZDE2OGJjOTkzMTUyYTBmMjY1Yzg=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-04-15T07:52:08Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-04-15T07:52:08Z"}, "message": "Remove one allocation for the file path in file opening\n\nFixes #22190.", "tree": {"sha": "058544014d1e7c1e5fa7bc891103dd9a4693ec45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/058544014d1e7c1e5fa7bc891103dd9a4693ec45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53b7a06fafd00627d721d168bc993152a0f265c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53b7a06fafd00627d721d168bc993152a0f265c8", "html_url": "https://github.com/rust-lang/rust/commit/53b7a06fafd00627d721d168bc993152a0f265c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53b7a06fafd00627d721d168bc993152a0f265c8/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dc8060e3fbf49f225885217dc9f966ce95ff72d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc8060e3fbf49f225885217dc9f966ce95ff72d", "html_url": "https://github.com/rust-lang/rust/commit/5dc8060e3fbf49f225885217dc9f966ce95ff72d"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "a92ef2a2aef7d4b161f50f9c55f8504670f57dc1", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/53b7a06fafd00627d721d168bc993152a0f265c8/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b7a06fafd00627d721d168bc993152a0f265c8/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=53b7a06fafd00627d721d168bc993152a0f265c8", "patch": "@@ -51,7 +51,6 @@ use vec::Vec;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct File {\n     inner: fs_imp::File,\n-    path: Option<PathBuf>,\n }\n \n /// Metadata information about a file.\n@@ -193,12 +192,12 @@ impl File {\n         OpenOptions::new().write(true).create(true).truncate(true).open(path)\n     }\n \n-    /// Returns the original path that was used to open this file.\n+    /// Returns `None`.\n     #[unstable(feature = \"file_path\",\n-               reason = \"this abstraction is imposed by this library instead \\\n-                         of the underlying OS and may be removed\")]\n+               reason = \"this abstraction was imposed by this library and was removed\")]\n+    #[deprecated(since = \"1.0.0\", reason = \"abstraction was removed\")]\n     pub fn path(&self) -> Option<&Path> {\n-        self.path.as_ref().map(|p| &**p)\n+        None\n     }\n \n     /// Attempt to sync all OS-internal metadata to disk.\n@@ -302,7 +301,7 @@ impl AsInner<fs_imp::File> for File {\n }\n impl FromInner<fs_imp::File> for File {\n     fn from_inner(f: fs_imp::File) -> File {\n-        File { inner: f, path: None }\n+        File { inner: f }\n     }\n }\n \n@@ -470,7 +469,7 @@ impl OpenOptions {\n     pub fn open<P: AsRef<Path>>(&self, path: P) -> io::Result<File> {\n         let path = path.as_ref();\n         let inner = try!(fs_imp::File::open(path, &self.0));\n-        Ok(File { path: Some(path.to_path_buf()), inner: inner })\n+        Ok(File { inner: inner })\n     }\n }\n "}]}