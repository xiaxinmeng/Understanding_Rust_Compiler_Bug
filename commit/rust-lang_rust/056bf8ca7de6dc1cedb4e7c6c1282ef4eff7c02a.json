{"sha": "056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NmJmOGNhN2RlNmRjMWNlZGI0ZTdjNmMxMjgyZWY0ZWZmN2MwMmE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-09-20T16:20:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-09-20T16:20:04Z"}, "message": "Rustup to rustc 1.30.0-nightly (20dc0c507 2018-09-19)", "tree": {"sha": "657035e0be7d7bd0e9c79436d0292ff23b85bee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/657035e0be7d7bd0e9c79436d0292ff23b85bee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a", "html_url": "https://github.com/rust-lang/rust/commit/056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a92566404c01704a73666bc687e067e846a86c7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a92566404c01704a73666bc687e067e846a86c7f", "html_url": "https://github.com/rust-lang/rust/commit/a92566404c01704a73666bc687e067e846a86c7f"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "9b272a8f34b61265fbc4363c8cb710e28d1adf46", "filename": "0004-Disable-future-and-task-modules-because-they-contain.patch", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a/0004-Disable-future-and-task-modules-because-they-contain.patch", "raw_url": "https://github.com/rust-lang/rust/raw/056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a/0004-Disable-future-and-task-modules-because-they-contain.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/0004-Disable-future-and-task-modules-because-they-contain.patch?ref=056bf8ca7de6dc1cedb4e7c6c1282ef4eff7c02a", "patch": "@@ -1,6 +1,6 @@\n-From 9db209102bf5f7850ccd456be0d5af09405ee950 Mon Sep 17 00:00:00 2001\n+From 8838226899913c8636fa00f4dfbc7497c685abc5 Mon Sep 17 00:00:00 2001\n From: bjorn3 <bjorn3@users.noreply.github.com>\n-Date: Thu, 30 Aug 2018 20:47:12 +0200\n+Date: Thu, 20 Sep 2018 18:16:25 +0200\n Subject: [PATCH] Disable future and task modules, because they contain unsized\n  types\n \n@@ -10,10 +10,10 @@ Subject: [PATCH] Disable future and task modules, because they contain unsized\n  2 files changed, 6 insertions(+), 2 deletions(-)\n \n diff --git a/src/libcore/lib.rs b/src/libcore/lib.rs\n-index 9b64b7d..9d2e230 100644\n+index 09f5035..f129254 100644\n --- a/src/libcore/lib.rs\n +++ b/src/libcore/lib.rs\n-@@ -188,7 +188,7 @@ pub mod cell;\n+@@ -194,7 +194,7 @@ pub mod cell;\n  pub mod char;\n  pub mod panic;\n  pub mod panicking;\n@@ -22,7 +22,7 @@ index 9b64b7d..9d2e230 100644\n  pub mod iter;\n  pub mod option;\n  pub mod raw;\n-@@ -202,9 +202,11 @@ pub mod time;\n+@@ -209,9 +209,11 @@ pub mod time;\n  \n  pub mod unicode;\n  \n@@ -35,28 +35,28 @@ index 9b64b7d..9d2e230 100644\n  /* Heap memory allocator trait */\n  #[allow(missing_docs)]\n diff --git a/src/libcore/option.rs b/src/libcore/option.rs\n-index 3879abb..16204a8 100644\n+index 58bf6be..902d38f 100644\n --- a/src/libcore/option.rs\n +++ b/src/libcore/option.rs\n @@ -147,7 +147,7 @@\n  \n  use iter::{FromIterator, FusedIterator, TrustedLen};\n  use {hint, mem, ops::{self, Deref}};\n--use pin::PinMut;\n-+//use pin::PinMut;\n+-use pin::Pin;\n++//use pin::Pin;\n  \n  // Note that this is not a lang item per se, but it has a hidden dependency on\n  // `Iterator`, which is one. The compiler assumes that the `next` method of\n-@@ -270,6 +270,7 @@ impl<T> Option<T> {\n-         }\n+@@ -271,6 +271,7 @@ impl<T> Option<T> {\n      }\n  \n+ \n +    /*\n-     /// Converts from `Option<T>` to `Option<PinMut<'_, T>>`\n+     /// Converts from `Pin<&Option<T>>` to `Option<Pin<&T>>`\n      #[inline]\n      #[unstable(feature = \"pin\", issue = \"49150\")]\n-@@ -278,6 +279,7 @@ impl<T> Option<T> {\n-             PinMut::get_mut_unchecked(self).as_mut().map(|x| PinMut::new_unchecked(x))\n+@@ -288,6 +289,7 @@ impl<T> Option<T> {\n+             Pin::get_mut_unchecked(self).as_mut().map(|x| Pin::new_unchecked(x))\n          }\n      }\n +    */"}]}