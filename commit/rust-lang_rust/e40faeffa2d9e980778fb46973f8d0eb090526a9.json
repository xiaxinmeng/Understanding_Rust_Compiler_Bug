{"sha": "e40faeffa2d9e980778fb46973f8d0eb090526a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MGZhZWZmYTJkOWU5ODA3NzhmYjQ2OTczZjhkMGViMDkwNTI2YTk=", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-05-01T19:59:26Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-05-01T20:30:26Z"}, "message": "Deduplicate native libs before they are passed to the linker", "tree": {"sha": "7cff0215cf2915cb29fe0ddd6e2dbc004ef5525c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cff0215cf2915cb29fe0ddd6e2dbc004ef5525c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e40faeffa2d9e980778fb46973f8d0eb090526a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmCNumIACgkQcTRy8vRW\nJ95zCQ//foeMff11kkmK9pHFYCIzzF9i75kF4pHP/suTGRYu8/PZn/oHHz5/m+tf\npTW+iXklT526epg/S99/EK7gQ1atskfA6SuhfewGtysOLBXqtw41CUOIx+zI4MFK\nGDnkUnK3izdNNG65pfO8kjv8k8iZnUk0mV+kwy3SDU39mDGyoircnxbJmkV+M/Q3\nS5vd65YWVzvP1XlYdMGIDUmDEr+5MHuxA+1NMkzWi+++/UucTVzOVAVCMyqGdcGW\nNhN938fs1jWUnxmEBw99l15JGN0iFYfuTvfmWXCYGzKPbXzL4L1yOHL8FlEtrz9t\nZByb7S8+toGA2k303axX8VVXuI3OWZsQDyoCoOEi3TP01V37J5aaPA4Vt7W8y1bc\ne1/siQoODGEvOjSHJb8a82B+yrU+ZC/9S63y/YNitxg2jNVayHjkZ28lTEIQx6OP\nPYKMe/huvCZEJQQRHiJyavw2Q1Gnglta3db/kyahV9+/4JKoFQj36OyI1gZgJSRq\nnwdZqCRFuhEBP9914yptANySkIinwrKPP74NBYI2ME5I4zqGzBNym1X7D0Trp/XJ\nwjAjrZ/y9pWhGBNigK0i55SR/kk+cq2tReNru9E4KMntz1hzd6hrE840HZBRMCut\nPoMGns2PsFX2XPkUJSGdAds1X+3ZOnNT2/ixVJcqWkXeJ9fd9Ds=\n=T0+S\n-----END PGP SIGNATURE-----", "payload": "tree 7cff0215cf2915cb29fe0ddd6e2dbc004ef5525c\nparent 5f304a5d7908d9dd55dda3baadd3cf564d907369\nauthor Chris Denton <christophersdenton@gmail.com> 1619899166 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1619901026 +0100\n\nDeduplicate native libs before they are passed to the linker\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e40faeffa2d9e980778fb46973f8d0eb090526a9", "html_url": "https://github.com/rust-lang/rust/commit/e40faeffa2d9e980778fb46973f8d0eb090526a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e40faeffa2d9e980778fb46973f8d0eb090526a9/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f304a5d7908d9dd55dda3baadd3cf564d907369", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f304a5d7908d9dd55dda3baadd3cf564d907369", "html_url": "https://github.com/rust-lang/rust/commit/5f304a5d7908d9dd55dda3baadd3cf564d907369"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "dcdd0910aa6af216348afa4ef2872d65d5116294", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e40faeffa2d9e980778fb46973f8d0eb090526a9/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e40faeffa2d9e980778fb46973f8d0eb090526a9/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=e40faeffa2d9e980778fb46973f8d0eb090526a9", "patch": "@@ -1803,7 +1803,11 @@ fn add_local_native_libraries(\n         codegen_results.crate_info.used_libraries.iter().filter(|l| relevant_lib(sess, l));\n \n     let search_path = archive_search_paths(sess);\n+    let mut last = (NativeLibKind::Unspecified, None);\n     for lib in relevant_libs {\n+        // Skip if this library is the same as the last.\n+        last = if (lib.kind, lib.name) == last { continue } else { (lib.kind, lib.name) };\n+\n         let name = match lib.name {\n             Some(l) => l,\n             None => continue,\n@@ -2127,8 +2131,12 @@ fn add_upstream_native_libraries(\n         .expect(\"failed to find crate type in dependency format list\");\n \n     let crates = &codegen_results.crate_info.used_crates_static;\n+    let mut last = (NativeLibKind::Unspecified, None);\n     for &(cnum, _) in crates {\n         for lib in codegen_results.crate_info.native_libraries[&cnum].iter() {\n+            // Skip if this library is the same as the last.\n+            last = if (lib.kind, lib.name) == last { continue } else { (lib.kind, lib.name) };\n+\n             let name = match lib.name {\n                 Some(l) => l,\n                 None => continue,"}]}