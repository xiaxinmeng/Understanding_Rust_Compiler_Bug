{"sha": "37d338c1efd7840fa96c5eaeaa5785094efdab07", "node_id": "C_kwDOAAsO6NoAKDM3ZDMzOGMxZWZkNzg0MGZhOTZjNWVhZWFhNTc4NTA5NGVmZGFiMDc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-31T00:28:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-31T00:28:59Z"}, "message": "Auto merge of #9506 - blyxyas:master, r=giraffate\n\nAdd lint for confusing use of `^` instead of `.pow`\n\nfixes #4205\nAdds a lint named [`confusing_xor_and_pow`], it warns the user when `a ^ b` is used as the `.pow()` function, it doesn't warn for Hex, Binary... etc.\n\n---\n\nchangelog: New lint: [`confusing_xor_and_pow`]", "tree": {"sha": "e4bd279df1ba7588c6bdb59f315879c836f07bb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4bd279df1ba7588c6bdb59f315879c836f07bb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37d338c1efd7840fa96c5eaeaa5785094efdab07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37d338c1efd7840fa96c5eaeaa5785094efdab07", "html_url": "https://github.com/rust-lang/rust/commit/37d338c1efd7840fa96c5eaeaa5785094efdab07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37d338c1efd7840fa96c5eaeaa5785094efdab07/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60d171873a761feeb2270be248a944a65fa658aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/60d171873a761feeb2270be248a944a65fa658aa", "html_url": "https://github.com/rust-lang/rust/commit/60d171873a761feeb2270be248a944a65fa658aa"}, {"sha": "151395d74e703600a724ecfc219c3f0fb1fe384a", "url": "https://api.github.com/repos/rust-lang/rust/commits/151395d74e703600a724ecfc219c3f0fb1fe384a", "html_url": "https://github.com/rust-lang/rust/commit/151395d74e703600a724ecfc219c3f0fb1fe384a"}], "stats": {"total": 199, "additions": 171, "deletions": 28}, "files": [{"sha": "35864e85673a02d76cc851c068411aef571f1981", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -4251,6 +4251,7 @@ Released 2018-09-13\n [`suspicious_splitn`]: https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_splitn\n [`suspicious_to_owned`]: https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_to_owned\n [`suspicious_unary_op_formatting`]: https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_unary_op_formatting\n+[`suspicious_xor_used_as_pow`]: https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_xor_used_as_pow\n [`swap_ptr_to_ref`]: https://rust-lang.github.io/rust-clippy/master/index.html#swap_ptr_to_ref\n [`tabs_in_doc_comments`]: https://rust-lang.github.io/rust-clippy/master/index.html#tabs_in_doc_comments\n [`temporary_assignment`]: https://rust-lang.github.io/rust-clippy/master/index.html#temporary_assignment"}, {"sha": "f4fc2bd3330992796220dd97a579eaaddb14f23c", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -544,6 +544,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::suspicious_operation_groupings::SUSPICIOUS_OPERATION_GROUPINGS_INFO,\n     crate::suspicious_trait_impl::SUSPICIOUS_ARITHMETIC_IMPL_INFO,\n     crate::suspicious_trait_impl::SUSPICIOUS_OP_ASSIGN_IMPL_INFO,\n+    crate::suspicious_xor_used_as_pow::SUSPICIOUS_XOR_USED_AS_POW_INFO,\n     crate::swap::ALMOST_SWAPPED_INFO,\n     crate::swap::MANUAL_SWAP_INFO,\n     crate::swap_ptr_to_ref::SWAP_PTR_TO_REF_INFO,"}, {"sha": "197d8f2dc0810de27e30c586720b7ecb82f127d2", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -268,6 +268,7 @@ mod strings;\n mod strlen_on_c_strings;\n mod suspicious_operation_groupings;\n mod suspicious_trait_impl;\n+mod suspicious_xor_used_as_pow;\n mod swap;\n mod swap_ptr_to_ref;\n mod tabs_in_doc_comments;\n@@ -916,6 +917,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| Box::new(partial_pub_fields::PartialPubFields));\n     store.register_late_pass(|_| Box::new(missing_trait_methods::MissingTraitMethods));\n     store.register_late_pass(|_| Box::new(from_raw_with_void_ptr::FromRawWithVoidPtr));\n+    store.register_late_pass(|_| Box::new(suspicious_xor_used_as_pow::ConfusingXorAndPow));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "301aa5798bf556eeeb4bf2389fc671c25c08cbf0", "filename": "clippy_lints/src/suspicious_xor_used_as_pow.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/clippy_lints%2Fsrc%2Fsuspicious_xor_used_as_pow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/clippy_lints%2Fsrc%2Fsuspicious_xor_used_as_pow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_xor_used_as_pow.rs?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -0,0 +1,53 @@\n+use clippy_utils::{numeric_literal::NumericLiteral, source::snippet_with_context};\n+use rustc_errors::Applicability;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Warns for a Bitwise XOR (`^`) operator being probably confused as a powering. It will not trigger if any of the numbers are not in decimal.\n+    /// ### Why is this bad?\n+    ///\tIt's most probably a typo and may lead to unexpected behaviours.\n+    /// ### Example\n+    /// ```rust\n+    /// let x = 3_i32 ^ 4_i32;\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// let x = 3_i32.pow(4);\n+    /// ```\n+    #[clippy::version = \"1.66.0\"]\n+    pub SUSPICIOUS_XOR_USED_AS_POW,\n+    restriction,\n+    \"XOR (`^`) operator possibly used as exponentiation operator\"\n+}\n+declare_lint_pass!(ConfusingXorAndPow => [SUSPICIOUS_XOR_USED_AS_POW]);\n+\n+impl LateLintPass<'_> for ConfusingXorAndPow {\n+    fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n+        if !in_external_macro(cx.sess(), expr.span) &&\n+        \tlet ExprKind::Binary(op, left, right) = &expr.kind &&\n+            op.node == BinOpKind::BitXor &&\n+            left.span.ctxt() == right.span.ctxt() &&\n+            let ExprKind::Lit(lit_left) = &left.kind &&\n+            let ExprKind::Lit(lit_right) = &right.kind &&\n+            let snip_left = snippet_with_context(cx, lit_left.span, lit_left.span.ctxt(), \"..\", &mut Applicability::MaybeIncorrect) &&\n+            let snip_right = snippet_with_context(cx, lit_right.span, lit_right.span.ctxt(), \"..\", &mut Applicability::MaybeIncorrect) &&\n+            let Some(left_val) = NumericLiteral::from_lit_kind(&snip_left.0, &lit_left.node) &&\n+            let Some(right_val) = NumericLiteral::from_lit_kind(&snip_right.0, &lit_right.node) &&\n+\t\t\tleft_val.is_decimal() &&\n+\t\t\tright_val.is_decimal() {\n+\t\t\t\t\tclippy_utils::diagnostics::span_lint_and_sugg(\n+\t\t\t\t\t        cx,\n+\t\t\t\t\t        SUSPICIOUS_XOR_USED_AS_POW,\n+\t\t\t\t\t        expr.span,\n+\t\t\t\t\t        \"`^` is not the exponentiation operator\",\n+\t\t\t\t\t        \"did you mean to write\",\n+\t\t\t\t\t        format!(\"{}.pow({})\", left_val.format(), right_val.format()),\n+\t\t\t\t\t        Applicability::MaybeIncorrect,\n+\t\t\t\t\t    );\n+\t\t}\n+    }\n+}"}, {"sha": "e737955026523f973ba31a9f74c5f0f54d6c7ff9", "filename": "tests/ui/eq_op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.rs?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -2,6 +2,7 @@\n \n #![warn(clippy::eq_op)]\n #![allow(clippy::double_parens, clippy::identity_op, clippy::nonminimal_bool)]\n+#![allow(clippy::suspicious_xor_used_as_pow)]\n \n fn main() {\n     // simple values and comparisons"}, {"sha": "d365ab27edc28d5d7ebbe85836dfcf5a2fe8bf11", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -1,169 +1,169 @@\n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:8:13\n+  --> $DIR/eq_op.rs:9:13\n    |\n LL |     let _ = 1 == 1;\n    |             ^^^^^^\n    |\n    = note: `-D clippy::eq-op` implied by `-D warnings`\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:9:13\n+  --> $DIR/eq_op.rs:10:13\n    |\n LL |     let _ = \"no\" == \"no\";\n    |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:11:13\n+  --> $DIR/eq_op.rs:12:13\n    |\n LL |     let _ = false != false;\n    |             ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n-  --> $DIR/eq_op.rs:12:13\n+  --> $DIR/eq_op.rs:13:13\n    |\n LL |     let _ = 1.5 < 1.5;\n    |             ^^^^^^^^^\n \n error: equal expressions as operands to `>=`\n-  --> $DIR/eq_op.rs:13:13\n+  --> $DIR/eq_op.rs:14:13\n    |\n LL |     let _ = 1u64 >= 1u64;\n    |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:16:13\n+  --> $DIR/eq_op.rs:17:13\n    |\n LL |     let _ = (1u32 as u64) & (1u32 as u64);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `^`\n-  --> $DIR/eq_op.rs:19:17\n+  --> $DIR/eq_op.rs:20:17\n    |\n LL |         let _ = 1 ^ ((((((1))))));\n    |                 ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n-  --> $DIR/eq_op.rs:23:13\n+  --> $DIR/eq_op.rs:24:13\n    |\n LL |     let _ = (-(2) < -(2));\n    |             ^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:24:13\n+  --> $DIR/eq_op.rs:25:13\n    |\n LL |     let _ = ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:24:14\n+  --> $DIR/eq_op.rs:25:14\n    |\n LL |     let _ = ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |              ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:24:35\n+  --> $DIR/eq_op.rs:25:35\n    |\n LL |     let _ = ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |                                   ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:25:13\n+  --> $DIR/eq_op.rs:26:13\n    |\n LL |     let _ = (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:28:13\n+  --> $DIR/eq_op.rs:29:13\n    |\n LL |     let _ = ([1] != [1]);\n    |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:29:13\n+  --> $DIR/eq_op.rs:30:13\n    |\n LL |     let _ = ((1, 2) != (1, 2));\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:33:13\n+  --> $DIR/eq_op.rs:34:13\n    |\n LL |     let _ = 1 + 1 == 2;\n    |             ^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:34:13\n+  --> $DIR/eq_op.rs:35:13\n    |\n LL |     let _ = 1 - 1 == 0;\n    |             ^^^^^^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:34:13\n+  --> $DIR/eq_op.rs:35:13\n    |\n LL |     let _ = 1 - 1 == 0;\n    |             ^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:36:13\n+  --> $DIR/eq_op.rs:37:13\n    |\n LL |     let _ = 1 - 1;\n    |             ^^^^^\n \n error: equal expressions as operands to `/`\n-  --> $DIR/eq_op.rs:37:13\n+  --> $DIR/eq_op.rs:38:13\n    |\n LL |     let _ = 1 / 1;\n    |             ^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:38:13\n+  --> $DIR/eq_op.rs:39:13\n    |\n LL |     let _ = true && true;\n    |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `||`\n-  --> $DIR/eq_op.rs:40:13\n+  --> $DIR/eq_op.rs:41:13\n    |\n LL |     let _ = true || true;\n    |             ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:45:13\n+  --> $DIR/eq_op.rs:46:13\n    |\n LL |     let _ = a == b && b == a;\n    |             ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:46:13\n+  --> $DIR/eq_op.rs:47:13\n    |\n LL |     let _ = a != b && b != a;\n    |             ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:47:13\n+  --> $DIR/eq_op.rs:48:13\n    |\n LL |     let _ = a < b && b > a;\n    |             ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:48:13\n+  --> $DIR/eq_op.rs:49:13\n    |\n LL |     let _ = a <= b && b >= a;\n    |             ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:51:13\n+  --> $DIR/eq_op.rs:52:13\n    |\n LL |     let _ = a == a;\n    |             ^^^^^^\n \n error: equal expressions as operands to `/`\n-  --> $DIR/eq_op.rs:61:20\n+  --> $DIR/eq_op.rs:62:20\n    |\n LL |     const D: u32 = A / A;\n    |                    ^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:92:5\n+  --> $DIR/eq_op.rs:93:5\n    |\n LL |     (n1.inner.0).0 == (n1.inner.0).0 && (n1.inner.1).0 == (n2.inner.1).0 && (n1.inner.2).0 == (n2.inner.2).0\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "eb9fc63fb1d4692f2da82445f19857d79a4200c2", "filename": "tests/ui/suspicious_xor_used_as_pow.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Fsuspicious_xor_used_as_pow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Fsuspicious_xor_used_as_pow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_xor_used_as_pow.rs?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -0,0 +1,34 @@\n+#![allow(unused)]\n+#![warn(clippy::suspicious_xor_used_as_pow)]\n+#![allow(clippy::eq_op)]\n+\n+macro_rules! macro_test {\n+    () => {\n+        13\n+    };\n+}\n+\n+macro_rules! macro_test_inside {\n+    () => {\n+        1 ^ 2 // should warn even if inside macro\n+    };\n+}\n+\n+fn main() {\n+    // Should warn:\n+    let _ = 2 ^ 5;\n+    let _ = 2i32 ^ 9i32;\n+    let _ = 2i32 ^ 2i32;\n+    let _ = 50i32 ^ 3i32;\n+    let _ = 5i32 ^ 8i32;\n+    let _ = 2i32 ^ 32i32;\n+    macro_test_inside!();\n+\n+    // Should not warn:\n+    let x = 0x02;\n+    let _ = x ^ 2;\n+    let _ = 2 ^ x;\n+    let _ = x ^ 5;\n+    let _ = 10 ^ 0b0101;\n+    let _ = 2i32 ^ macro_test!();\n+}"}, {"sha": "8bb3c8fbeebd3efb8c74522ce9d9bdd962b14b8b", "filename": "tests/ui/suspicious_xor_used_as_pow.stderr", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Fsuspicious_xor_used_as_pow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37d338c1efd7840fa96c5eaeaa5785094efdab07/tests%2Fui%2Fsuspicious_xor_used_as_pow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_xor_used_as_pow.stderr?ref=37d338c1efd7840fa96c5eaeaa5785094efdab07", "patch": "@@ -0,0 +1,51 @@\n+error: `^` is not the exponentiation operator\n+  --> $DIR/suspicious_xor_used_as_pow.rs:19:13\n+   |\n+LL |     let _ = 2 ^ 5;\n+   |             ^^^^^ help: did you mean to write: `2.pow(5)`\n+   |\n+   = note: `-D clippy::suspicious-xor-used-as-pow` implied by `-D warnings`\n+\n+error: `^` is not the exponentiation operator\n+  --> $DIR/suspicious_xor_used_as_pow.rs:20:13\n+   |\n+LL |     let _ = 2i32 ^ 9i32;\n+   |             ^^^^^^^^^^^ help: did you mean to write: `2_i32.pow(9_i32)`\n+\n+error: `^` is not the exponentiation operator\n+  --> $DIR/suspicious_xor_used_as_pow.rs:21:13\n+   |\n+LL |     let _ = 2i32 ^ 2i32;\n+   |             ^^^^^^^^^^^ help: did you mean to write: `2_i32.pow(2_i32)`\n+\n+error: `^` is not the exponentiation operator\n+  --> $DIR/suspicious_xor_used_as_pow.rs:22:13\n+   |\n+LL |     let _ = 50i32 ^ 3i32;\n+   |             ^^^^^^^^^^^^ help: did you mean to write: `50_i32.pow(3_i32)`\n+\n+error: `^` is not the exponentiation operator\n+  --> $DIR/suspicious_xor_used_as_pow.rs:23:13\n+   |\n+LL |     let _ = 5i32 ^ 8i32;\n+   |             ^^^^^^^^^^^ help: did you mean to write: `5_i32.pow(8_i32)`\n+\n+error: `^` is not the exponentiation operator\n+  --> $DIR/suspicious_xor_used_as_pow.rs:24:13\n+   |\n+LL |     let _ = 2i32 ^ 32i32;\n+   |             ^^^^^^^^^^^^ help: did you mean to write: `2_i32.pow(32_i32)`\n+\n+error: `^` is not the exponentiation operator\n+  --> $DIR/suspicious_xor_used_as_pow.rs:13:9\n+   |\n+LL |         1 ^ 2 // should warn even if inside macro\n+   |         ^^^^^ help: did you mean to write: `1.pow(2)`\n+...\n+LL |     macro_test_inside!();\n+   |     -------------------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `macro_test_inside` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 7 previous errors\n+"}]}