{"sha": "7d574f7b1c842f2675f945528b61064d599366d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNTc0ZjdiMWM4NDJmMjY3NWY5NDU1MjhiNjEwNjRkNTk5MzY2ZDA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-28T13:06:44Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-28T13:06:44Z"}, "message": "don't execute the first statement of a constant/static/promoted right away\n\nThis might create confusion, because attempting to execute a statement can cause\narbitrary stackframes to be added for the constants/statics/promoteds required by that\nstatement. Before this commit, the first statement of the last added stackframe was\nexecuted immediately. Thus there was no way to inspect the state before that first\nstatement.", "tree": {"sha": "46fdd362799b93c5ae6e2c00c7b011d78118c452", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46fdd362799b93c5ae6e2c00c7b011d78118c452"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d574f7b1c842f2675f945528b61064d599366d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXcnZkAAoJEFbW7qD8Z6xGsn8P/1YAPVUGiPV/ZYJKPmyMEI+N\n7JLyvl7RMdS0/fiAocPmLE8SZFDrEVkszJTh8meWCzBO/qdWNxM9wTiVuPEdALts\nmkQ4P8DQXOeo6SuehpUJ/GsN2Fza8yjX4KprTw/BcvOlyEJiVhQG80K4R3vthLok\nMHuHpg6yFCWkj5JOwHBLvJXdEN3UTyb2mwKmpocLq22LOHu+19m1Y8hVH8CJVb8s\nUIb6zDzgPp1MWhBqR9YfUb784wCCD3xmLCgeVwdsSssF2ovKGQpFHyHjakDwhzol\nbMQBLTbFJ8ZQTNyHp5WtyE8GoX3mGKu+5rY7kbLncCDTv+t8HTdKeZe7aYUvPLXV\nA4wMYdU+Eb/0OtcC0I89MLxo3oGELLu3OcCk/XxmNboEmtmcheu5wceEfANWz6ia\nn33/S+VQ//ykPEzR4aEeCVttCxx8fgV84EeimESNwfnLnYuCeWnL/xmEOz4c0Tbg\nOYHj9i4R9Ukq9JHoqc+eBfwzUuQTeLlzIMN6Q3e0xmbjtHySA9gyY4lk0UBDp2u3\njQAnXe2xYUECTd6kffJqBKzr0mrD8IR9K/azALb82SBOcPXjNBGEbJ/iRFO1Ru95\nHxya7W0LHUaBiK+TJG0MlCgAXnh2EkeT8Q4BbGwYg/C5fMb9KDbgDy+be6YX2Qgm\nYEWA33sLJHq5WpWcLlkZ\n=KUMy\n-----END PGP SIGNATURE-----", "payload": "tree 46fdd362799b93c5ae6e2c00c7b011d78118c452\nparent f28feed87d7a99b9863814ecfb6203350244c67c\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1467119204 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1467119204 +0200\n\ndon't execute the first statement of a constant/static/promoted right away\n\nThis might create confusion, because attempting to execute a statement can cause\narbitrary stackframes to be added for the constants/statics/promoteds required by that\nstatement. Before this commit, the first statement of the last added stackframe was\nexecuted immediately. Thus there was no way to inspect the state before that first\nstatement."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d574f7b1c842f2675f945528b61064d599366d0", "html_url": "https://github.com/rust-lang/rust/commit/7d574f7b1c842f2675f945528b61064d599366d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d574f7b1c842f2675f945528b61064d599366d0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f28feed87d7a99b9863814ecfb6203350244c67c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f28feed87d7a99b9863814ecfb6203350244c67c", "html_url": "https://github.com/rust-lang/rust/commit/f28feed87d7a99b9863814ecfb6203350244c67c"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "6d4d8aad2cc0a6005a79a7f5ca20575ec8f03846", "filename": "src/interpreter/step.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7d574f7b1c842f2675f945528b61064d599366d0/src%2Finterpreter%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d574f7b1c842f2675f945528b61064d599366d0/src%2Finterpreter%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstep.rs?ref=7d574f7b1c842f2675f945528b61064d599366d0", "patch": "@@ -39,11 +39,9 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             }.visit_statement(block, stmt);\n             if current_stack == self.stack.len() {\n                 self.statement(stmt)?;\n-            } else {\n-                // ConstantExtractor added some new frames for statics/constants/promoteds\n-                // self.step() can't be \"done\", so it can't return false\n-                assert!(self.step()?);\n             }\n+            // if ConstantExtractor added new frames, we don't execute anything here\n+            // but await the next call to step\n             return Ok(true);\n         }\n \n@@ -58,11 +56,9 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         }.visit_terminator(block, terminator);\n         if current_stack == self.stack.len() {\n             self.terminator(terminator)?;\n-        } else {\n-            // ConstantExtractor added some new frames for statics/constants/promoteds\n-            // self.step() can't be \"done\", so it can't return false\n-            assert!(self.step()?);\n         }\n+        // if ConstantExtractor added new frames, we don't execute anything here\n+        // but await the next call to step\n         Ok(true)\n     }\n "}]}