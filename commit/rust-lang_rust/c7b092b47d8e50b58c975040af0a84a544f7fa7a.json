{"sha": "c7b092b47d8e50b58c975040af0a84a544f7fa7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3YjA5MmI0N2Q4ZTUwYjU4Yzk3NTA0MGFmMGE4NGE1NDRmN2ZhN2E=", "commit": {"author": {"name": "Cesar Eduardo Barros", "email": "cesarb@cesarb.eti.br", "date": "2017-01-20T00:45:57Z"}, "committer": {"name": "Cesar Eduardo Barros", "email": "cesarb@cesarb.eti.br", "date": "2017-01-20T00:45:57Z"}, "message": "No need to mention how these fields are used", "tree": {"sha": "3226fb2c8b70a559dc812f85d14435e92fabfbff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3226fb2c8b70a559dc812f85d14435e92fabfbff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7b092b47d8e50b58c975040af0a84a544f7fa7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b092b47d8e50b58c975040af0a84a544f7fa7a", "html_url": "https://github.com/rust-lang/rust/commit/c7b092b47d8e50b58c975040af0a84a544f7fa7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7b092b47d8e50b58c975040af0a84a544f7fa7a/comments", "author": {"login": "cesarb", "id": 31324, "node_id": "MDQ6VXNlcjMxMzI0", "avatar_url": "https://avatars.githubusercontent.com/u/31324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarb", "html_url": "https://github.com/cesarb", "followers_url": "https://api.github.com/users/cesarb/followers", "following_url": "https://api.github.com/users/cesarb/following{/other_user}", "gists_url": "https://api.github.com/users/cesarb/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarb/subscriptions", "organizations_url": "https://api.github.com/users/cesarb/orgs", "repos_url": "https://api.github.com/users/cesarb/repos", "events_url": "https://api.github.com/users/cesarb/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cesarb", "id": 31324, "node_id": "MDQ6VXNlcjMxMzI0", "avatar_url": "https://avatars.githubusercontent.com/u/31324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarb", "html_url": "https://github.com/cesarb", "followers_url": "https://api.github.com/users/cesarb/followers", "following_url": "https://api.github.com/users/cesarb/following{/other_user}", "gists_url": "https://api.github.com/users/cesarb/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarb/subscriptions", "organizations_url": "https://api.github.com/users/cesarb/orgs", "repos_url": "https://api.github.com/users/cesarb/repos", "events_url": "https://api.github.com/users/cesarb/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "465d24e1a03f21c1c7685f5105a32ffc52bdd68c", "url": "https://api.github.com/repos/rust-lang/rust/commits/465d24e1a03f21c1c7685f5105a32ffc52bdd68c", "html_url": "https://github.com/rust-lang/rust/commit/465d24e1a03f21c1c7685f5105a32ffc52bdd68c"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "00a841a75db864ad44fa61c47de2724d2334501b", "filename": "src/doc/book/trait-objects.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7b092b47d8e50b58c975040af0a84a544f7fa7a/src%2Fdoc%2Fbook%2Ftrait-objects.md", "raw_url": "https://github.com/rust-lang/rust/raw/c7b092b47d8e50b58c975040af0a84a544f7fa7a/src%2Fdoc%2Fbook%2Ftrait-objects.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftrait-objects.md?ref=c7b092b47d8e50b58c975040af0a84a544f7fa7a", "patch": "@@ -263,8 +263,7 @@ any resources of the vtable\u2019s type: for `u8` it is trivial, but for `String` i\n will free the memory. This is necessary for owning trait objects like\n `Box<Foo>`, which need to clean-up both the `Box` allocation as well as the\n internal type when they go out of scope. The `size` and `align` fields store\n-the size of the erased type, and its alignment requirements; these are\n-used by the `std::mem::size_of_val` and `std::mem::align_of_val` functions.\n+the size of the erased type, and its alignment requirements.\n \n Suppose we\u2019ve got some values that implement `Foo`. The explicit form of\n construction and use of `Foo` trait objects might look a bit like (ignoring the"}]}