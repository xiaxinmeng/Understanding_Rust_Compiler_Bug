{"sha": "221ea3080d62a32af8b9ad30c9f3fac5cb084347", "node_id": "C_kwDOAAsO6NoAKDIyMWVhMzA4MGQ2MmEzMmFmOGI5YWQzMGM5ZjNmYWM1Y2IwODQzNDc", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-09T17:27:31Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-09T17:27:31Z"}, "message": "Put deaggregated statements after original constant.", "tree": {"sha": "a40de4d3fc12dc4d5dcdb92d36c2e01d61cbf0a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a40de4d3fc12dc4d5dcdb92d36c2e01d61cbf0a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/221ea3080d62a32af8b9ad30c9f3fac5cb084347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/221ea3080d62a32af8b9ad30c9f3fac5cb084347", "html_url": "https://github.com/rust-lang/rust/commit/221ea3080d62a32af8b9ad30c9f3fac5cb084347", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/221ea3080d62a32af8b9ad30c9f3fac5cb084347/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ff69b49dfcc0f7d37ee17e36f67c57168c44073", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff69b49dfcc0f7d37ee17e36f67c57168c44073", "html_url": "https://github.com/rust-lang/rust/commit/7ff69b49dfcc0f7d37ee17e36f67c57168c44073"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "30d8511153a2b9cbc32d39b072e0f8fa577b3156", "filename": "compiler/rustc_mir_transform/src/sroa.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/221ea3080d62a32af8b9ad30c9f3fac5cb084347/compiler%2Frustc_mir_transform%2Fsrc%2Fsroa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/221ea3080d62a32af8b9ad30c9f3fac5cb084347/compiler%2Frustc_mir_transform%2Fsrc%2Fsroa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsroa.rs?ref=221ea3080d62a32af8b9ad30c9f3fac5cb084347", "patch": "@@ -318,6 +318,8 @@ impl<'tcx, 'll> MutVisitor<'tcx> for ReplacementVisitor<'tcx, 'll> {\n             // ConstProp will pick up the pieces and replace them by actual constants.\n             StatementKind::Assign(box (place, Rvalue::Use(Operand::Constant(_)))) => {\n                 if let Some(final_locals) = self.replacements.place_fragments(place) {\n+                    // Put the deaggregated statements *after* the original one.\n+                    let location = location.successor_within_block();\n                     for (field, ty, new_local) in final_locals {\n                         let rplace = self.tcx.mk_place_field(place, field, ty);\n                         let rvalue = Rvalue::Use(Operand::Move(rplace));"}, {"sha": "9e33215f2b5a67ce19cd202b22747543966dafe8", "filename": "tests/mir-opt/sroa.constant.ScalarReplacementOfAggregates.diff", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/221ea3080d62a32af8b9ad30c9f3fac5cb084347/tests%2Fmir-opt%2Fsroa.constant.ScalarReplacementOfAggregates.diff", "raw_url": "https://github.com/rust-lang/rust/raw/221ea3080d62a32af8b9ad30c9f3fac5cb084347/tests%2Fmir-opt%2Fsroa.constant.ScalarReplacementOfAggregates.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsroa.constant.ScalarReplacementOfAggregates.diff?ref=221ea3080d62a32af8b9ad30c9f3fac5cb084347", "patch": "@@ -0,0 +1,46 @@\n+- // MIR for `constant` before ScalarReplacementOfAggregates\n++ // MIR for `constant` after ScalarReplacementOfAggregates\n+  \n+  fn constant() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/sroa.rs:+0:15: +0:15\n+      let _1: (usize, u8);                 // in scope 0 at $DIR/sroa.rs:+2:9: +2:10\n++     let _4: usize;                       // in scope 0 at $DIR/sroa.rs:+2:9: +2:10\n++     let _5: u8;                          // in scope 0 at $DIR/sroa.rs:+2:9: +2:10\n+      scope 1 {\n+-         debug y => _1;                   // in scope 1 at $DIR/sroa.rs:+2:9: +2:10\n++         debug y => (usize, u8){ .0 => _4, .1 => _5, }; // in scope 1 at $DIR/sroa.rs:+2:9: +2:10\n+          let _2: usize;                   // in scope 1 at $DIR/sroa.rs:+3:9: +3:10\n+          scope 2 {\n+              debug t => _2;               // in scope 2 at $DIR/sroa.rs:+3:9: +3:10\n+              let _3: u8;                  // in scope 2 at $DIR/sroa.rs:+4:9: +4:10\n+              scope 3 {\n+                  debug u => _3;           // in scope 3 at $DIR/sroa.rs:+4:9: +4:10\n+              }\n+          }\n+      }\n+  \n+      bb0: {\n+-         StorageLive(_1);                 // scope 0 at $DIR/sroa.rs:+2:9: +2:10\n++         StorageLive(_4);                 // scope 0 at $DIR/sroa.rs:+2:9: +2:10\n++         StorageLive(_5);                 // scope 0 at $DIR/sroa.rs:+2:9: +2:10\n++         nop;                             // scope 0 at $DIR/sroa.rs:+2:9: +2:10\n+          _1 = const _;                    // scope 0 at $DIR/sroa.rs:+2:13: +2:14\n++         _4 = move (_1.0: usize);         // scope 1 at $DIR/sroa.rs:+3:9: +3:10\n++         _5 = move (_1.1: u8);            // scope 1 at $DIR/sroa.rs:+3:9: +3:10\n+          StorageLive(_2);                 // scope 1 at $DIR/sroa.rs:+3:9: +3:10\n+-         _2 = (_1.0: usize);              // scope 1 at $DIR/sroa.rs:+3:13: +3:16\n++         _2 = _4;                         // scope 1 at $DIR/sroa.rs:+3:13: +3:16\n+          StorageLive(_3);                 // scope 2 at $DIR/sroa.rs:+4:9: +4:10\n+-         _3 = (_1.1: u8);                 // scope 2 at $DIR/sroa.rs:+4:13: +4:16\n++         _3 = _5;                         // scope 2 at $DIR/sroa.rs:+4:13: +4:16\n+          _0 = const ();                   // scope 0 at $DIR/sroa.rs:+0:15: +5:2\n+          StorageDead(_3);                 // scope 2 at $DIR/sroa.rs:+5:1: +5:2\n+          StorageDead(_2);                 // scope 1 at $DIR/sroa.rs:+5:1: +5:2\n+-         StorageDead(_1);                 // scope 0 at $DIR/sroa.rs:+5:1: +5:2\n++         StorageDead(_4);                 // scope 0 at $DIR/sroa.rs:+5:1: +5:2\n++         StorageDead(_5);                 // scope 0 at $DIR/sroa.rs:+5:1: +5:2\n++         nop;                             // scope 0 at $DIR/sroa.rs:+5:1: +5:2\n+          return;                          // scope 0 at $DIR/sroa.rs:+5:2: +5:2\n+      }\n+  }\n+  "}, {"sha": "b69de2e124ec6a51ce14204a1838bb4ed456dfec", "filename": "tests/mir-opt/sroa.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/221ea3080d62a32af8b9ad30c9f3fac5cb084347/tests%2Fmir-opt%2Fsroa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/221ea3080d62a32af8b9ad30c9f3fac5cb084347/tests%2Fmir-opt%2Fsroa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsroa.rs?ref=221ea3080d62a32af8b9ad30c9f3fac5cb084347", "patch": "@@ -87,6 +87,13 @@ fn ref_copies(x: &Foo) {\n     let u = y.c;\n }\n \n+fn constant() {\n+    const U: (usize, u8) = (5, 9);\n+    let y = U;\n+    let t = y.0;\n+    let u = y.1;\n+}\n+\n fn main() {\n     dropping();\n     enums(5);\n@@ -96,6 +103,7 @@ fn main() {\n     escaping();\n     copies(Foo { a: 5, b: (), c: \"a\", d: Some(-4) });\n     ref_copies(&Foo { a: 5, b: (), c: \"a\", d: Some(-4) });\n+    constant();\n }\n \n // EMIT_MIR sroa.dropping.ScalarReplacementOfAggregates.diff\n@@ -106,3 +114,4 @@ fn main() {\n // EMIT_MIR sroa.escaping.ScalarReplacementOfAggregates.diff\n // EMIT_MIR sroa.copies.ScalarReplacementOfAggregates.diff\n // EMIT_MIR sroa.ref_copies.ScalarReplacementOfAggregates.diff\n+// EMIT_MIR sroa.constant.ScalarReplacementOfAggregates.diff"}]}