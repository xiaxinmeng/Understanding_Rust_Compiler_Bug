{"sha": "61e5d549b49152b5fdc714fde93ab5c55e301127", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZTVkNTQ5YjQ5MTUyYjVmZGM3MTRmZGU5M2FiNWM1NWUzMDExMjc=", "commit": {"author": {"name": "Julian Frimmel", "email": "julian.frimmel@gmail.com", "date": "2021-03-18T13:23:05Z"}, "committer": {"name": "Julian Frimmel", "email": "julian.frimmel@gmail.com", "date": "2021-03-18T13:24:13Z"}, "message": "Add more information about panicking\n\nThis includes the description of the default `std` behavior and mentions\nthe `panic::set_hook()` function.", "tree": {"sha": "8e826cbb8da8ce0b85ac54110560bc3ded3fb6fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e826cbb8da8ce0b85ac54110560bc3ded3fb6fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61e5d549b49152b5fdc714fde93ab5c55e301127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61e5d549b49152b5fdc714fde93ab5c55e301127", "html_url": "https://github.com/rust-lang/rust/commit/61e5d549b49152b5fdc714fde93ab5c55e301127", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61e5d549b49152b5fdc714fde93ab5c55e301127/comments", "author": {"login": "jfrimmel", "id": 31166235, "node_id": "MDQ6VXNlcjMxMTY2MjM1", "avatar_url": "https://avatars.githubusercontent.com/u/31166235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrimmel", "html_url": "https://github.com/jfrimmel", "followers_url": "https://api.github.com/users/jfrimmel/followers", "following_url": "https://api.github.com/users/jfrimmel/following{/other_user}", "gists_url": "https://api.github.com/users/jfrimmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrimmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrimmel/subscriptions", "organizations_url": "https://api.github.com/users/jfrimmel/orgs", "repos_url": "https://api.github.com/users/jfrimmel/repos", "events_url": "https://api.github.com/users/jfrimmel/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrimmel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jfrimmel", "id": 31166235, "node_id": "MDQ6VXNlcjMxMTY2MjM1", "avatar_url": "https://avatars.githubusercontent.com/u/31166235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrimmel", "html_url": "https://github.com/jfrimmel", "followers_url": "https://api.github.com/users/jfrimmel/followers", "following_url": "https://api.github.com/users/jfrimmel/following{/other_user}", "gists_url": "https://api.github.com/users/jfrimmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrimmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrimmel/subscriptions", "organizations_url": "https://api.github.com/users/jfrimmel/orgs", "repos_url": "https://api.github.com/users/jfrimmel/repos", "events_url": "https://api.github.com/users/jfrimmel/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrimmel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55d9e0f601d9154d99a2fec3d803b42cbf60ff2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/55d9e0f601d9154d99a2fec3d803b42cbf60ff2a", "html_url": "https://github.com/rust-lang/rust/commit/55d9e0f601d9154d99a2fec3d803b42cbf60ff2a"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "39fe9d8077ebc23591e411a0cc4bbe4c58cd44da", "filename": "library/core/src/macros/panic.md", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/61e5d549b49152b5fdc714fde93ab5c55e301127/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "raw_url": "https://github.com/rust-lang/rust/raw/61e5d549b49152b5fdc714fde93ab5c55e301127/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md?ref=61e5d549b49152b5fdc714fde93ab5c55e301127", "patch": "@@ -9,11 +9,14 @@ tests. `panic!` is closely tied with the `unwrap` method of both\n [`Option`][ounwrap] and [`Result`][runwrap] enums. Both implementations call\n `panic!` when they are set to [`None`] or [`Err`] variants.\n \n-This macro is used to inject panic into a Rust thread, causing the thread to\n-panic entirely. The string built by this macro (using the [`format!`] syntax\n-for building the actual message) is printed to `stderr`.\n-\n-Each thread's panic can be reaped as the [`Box`]`<`[`Any`]`>` type,\n+When using `panic!()` you can specify a string payload, that is built using\n+the [`format!`] syntax. That payload is used when injecting the panic into\n+the calling Rust thread, causing the thread to panic entirely.\n+\n+The default `std` panic handling strategy is to print the message payload to\n+the `stderr` along with the file/line/column information of the `panic!()`\n+call. You can override the panic hook using [`std::panic::set_hook()`].\n+Inside the hook a panic can be reaped as the [`Box`]`<`[`Any`]`>` type,\n which contains either a `&str` or `String` for regular `panic!()` invocations.\n To panic with a value of another other type, [`panic_any`] can be used.\n \n@@ -26,6 +29,7 @@ See also the macro [`compile_error!`], for raising errors during compilation.\n \n [ounwrap]: Option::unwrap\n [runwrap]: Result::unwrap\n+[`std::panic::set_hook()`]: ../std/panic/fn.set_hook.html\n [`panic_any`]: ../std/panic/fn.panic_any.html\n [`Box`]: ../std/boxed/struct.Box.html\n [`Any`]: crate::any::Any"}]}