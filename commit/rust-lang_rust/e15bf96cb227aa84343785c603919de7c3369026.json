{"sha": "e15bf96cb227aa84343785c603919de7c3369026", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNWJmOTZjYjIyN2FhODQzNDM3ODVjNjAzOTE5ZGU3YzMzNjkwMjY=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2019-02-22T19:11:48Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2019-04-23T22:54:14Z"}, "message": "Remove broken tests", "tree": {"sha": "6877f2b3ffe322d14a916f86908204554162c7c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6877f2b3ffe322d14a916f86908204554162c7c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e15bf96cb227aa84343785c603919de7c3369026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e15bf96cb227aa84343785c603919de7c3369026", "html_url": "https://github.com/rust-lang/rust/commit/e15bf96cb227aa84343785c603919de7c3369026", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e15bf96cb227aa84343785c603919de7c3369026/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9325451ec9a044d3baecc4224c65e23941cef150", "url": "https://api.github.com/repos/rust-lang/rust/commits/9325451ec9a044d3baecc4224c65e23941cef150", "html_url": "https://github.com/rust-lang/rust/commit/9325451ec9a044d3baecc4224c65e23941cef150"}], "stats": {"total": 74, "additions": 0, "deletions": 74}, "files": [{"sha": "d1ba9c267b72efb74252eca03b366ec610993518", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/e15bf96cb227aa84343785c603919de7c3369026/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e15bf96cb227aa84343785c603919de7c3369026/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=e15bf96cb227aa84343785c603919de7c3369026", "patch": "@@ -3086,80 +3086,6 @@ mod test_map {\n         assert_eq!(format!(\"{:?}\", empty), \"{}\");\n     }\n \n-    #[test]\n-    fn test_expand() {\n-        let mut m = HashMap::new();\n-\n-        assert_eq!(m.len(), 0);\n-        assert!(m.is_empty());\n-\n-        let mut i = 0;\n-        let old_raw_cap = m.raw_capacity();\n-        while old_raw_cap == m.raw_capacity() {\n-            m.insert(i, i);\n-            i += 1;\n-        }\n-\n-        assert_eq!(m.len(), i);\n-        assert!(!m.is_empty());\n-    }\n-\n-    #[test]\n-    fn test_behavior_resize_policy() {\n-        let mut m = HashMap::new();\n-\n-        assert_eq!(m.len(), 0);\n-        assert_eq!(m.raw_capacity(), 1);\n-        assert!(m.is_empty());\n-\n-        m.insert(0, 0);\n-        m.remove(&0);\n-        assert!(m.is_empty());\n-        let initial_raw_cap = m.raw_capacity();\n-        m.reserve(initial_raw_cap);\n-        let raw_cap = m.raw_capacity();\n-\n-        assert_eq!(raw_cap, initial_raw_cap * 2);\n-\n-        let mut i = 0;\n-        for _ in 0..raw_cap * 3 / 4 {\n-            m.insert(i, i);\n-            i += 1;\n-        }\n-        // three quarters full\n-\n-        assert_eq!(m.len(), i);\n-        assert_eq!(m.raw_capacity(), raw_cap);\n-\n-        for _ in 0..raw_cap / 4 {\n-            m.insert(i, i);\n-            i += 1;\n-        }\n-        // half full\n-\n-        let new_raw_cap = m.raw_capacity();\n-        assert_eq!(new_raw_cap, raw_cap * 2);\n-\n-        for _ in 0..raw_cap / 2 - 1 {\n-            i -= 1;\n-            m.remove(&i);\n-            assert_eq!(m.raw_capacity(), new_raw_cap);\n-        }\n-        // A little more than one quarter full.\n-        m.shrink_to_fit();\n-        assert_eq!(m.raw_capacity(), raw_cap);\n-        // again, a little more than half full\n-        for _ in 0..raw_cap / 2 {\n-            i -= 1;\n-            m.remove(&i);\n-        }\n-        m.shrink_to_fit();\n-\n-        assert_eq!(m.len(), i);\n-        assert!(!m.is_empty());\n-        assert_eq!(m.raw_capacity(), initial_raw_cap);\n-    }\n-\n     #[test]\n     fn test_reserve_shrink_to_fit() {\n         let mut m = HashMap::new();"}]}