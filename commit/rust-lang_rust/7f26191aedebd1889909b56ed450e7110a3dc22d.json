{"sha": "7f26191aedebd1889909b56ed450e7110a3dc22d", "node_id": "C_kwDOAAsO6NoAKDdmMjYxOTFhZWRlYmQxODg5OTA5YjU2ZWQ0NTBlNzExMGEzZGMyMmQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-28T20:08:23Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-28T20:12:45Z"}, "message": "Make drop_flags an IndexVec.", "tree": {"sha": "b469b8bffd342fb62718f87c474c8396444046ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b469b8bffd342fb62718f87c474c8396444046ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f26191aedebd1889909b56ed450e7110a3dc22d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f26191aedebd1889909b56ed450e7110a3dc22d", "html_url": "https://github.com/rust-lang/rust/commit/7f26191aedebd1889909b56ed450e7110a3dc22d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f26191aedebd1889909b56ed450e7110a3dc22d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce22733b973355573efd1e6294e585460e90e17", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce22733b973355573efd1e6294e585460e90e17", "html_url": "https://github.com/rust-lang/rust/commit/6ce22733b973355573efd1e6294e585460e90e17"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "443f469ce52db3d1888cc99a539417e5d48093d6", "filename": "compiler/rustc_mir_transform/src/elaborate_drops.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7f26191aedebd1889909b56ed450e7110a3dc22d/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f26191aedebd1889909b56ed450e7110a3dc22d/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_drops.rs?ref=7f26191aedebd1889909b56ed450e7110a3dc22d", "patch": "@@ -1,7 +1,7 @@\n use crate::deref_separator::deref_finder;\n use crate::MirPass;\n-use rustc_data_structures::fx::FxHashMap;\n use rustc_index::bit_set::BitSet;\n+use rustc_index::IndexVec;\n use rustc_middle::mir::patch::MirPatch;\n use rustc_middle::mir::*;\n use rustc_middle::ty::{self, TyCtxt};\n@@ -84,12 +84,13 @@ impl<'tcx> MirPass<'tcx> for ElaborateDrops {\n \n             let reachable = traversal::reachable_as_bitset(body);\n \n+            let drop_flags = IndexVec::from_elem(None, &env.move_data.move_paths);\n             ElaborateDropsCtxt {\n                 tcx,\n                 body,\n                 env: &env,\n                 init_data: InitializationData { inits, uninits },\n-                drop_flags: Default::default(),\n+                drop_flags,\n                 patch: MirPatch::new(body),\n                 un_derefer: un_derefer,\n                 reachable,\n@@ -293,7 +294,7 @@ struct ElaborateDropsCtxt<'a, 'tcx> {\n     body: &'a Body<'tcx>,\n     env: &'a MoveDataParamEnv<'tcx>,\n     init_data: InitializationData<'a, 'tcx>,\n-    drop_flags: FxHashMap<MovePathIndex, Local>,\n+    drop_flags: IndexVec<MovePathIndex, Option<Local>>,\n     patch: MirPatch<'tcx>,\n     un_derefer: UnDerefer<'tcx>,\n     reachable: BitSet<BasicBlock>,\n@@ -312,11 +313,11 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n         let tcx = self.tcx;\n         let patch = &mut self.patch;\n         debug!(\"create_drop_flag({:?})\", self.body.span);\n-        self.drop_flags.entry(index).or_insert_with(|| patch.new_internal(tcx.types.bool, span));\n+        self.drop_flags[index].get_or_insert_with(|| patch.new_internal(tcx.types.bool, span));\n     }\n \n     fn drop_flag(&mut self, index: MovePathIndex) -> Option<Place<'tcx>> {\n-        self.drop_flags.get(&index).map(|t| Place::from(*t))\n+        self.drop_flags[index].map(Place::from)\n     }\n \n     /// create a patch that elaborates all drops in the input\n@@ -463,7 +464,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n     }\n \n     fn set_drop_flag(&mut self, loc: Location, path: MovePathIndex, val: DropFlagState) {\n-        if let Some(&flag) = self.drop_flags.get(&path) {\n+        if let Some(flag) = self.drop_flags[path] {\n             let span = self.patch.source_info_for_location(self.body, loc).span;\n             let val = self.constant_bool(span, val.value());\n             self.patch.add_assign(loc, Place::from(flag), val);\n@@ -474,7 +475,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n         let loc = Location::START;\n         let span = self.patch.source_info_for_location(self.body, loc).span;\n         let false_ = self.constant_bool(span, false);\n-        for flag in self.drop_flags.values() {\n+        for flag in self.drop_flags.iter().flatten() {\n             self.patch.add_assign(loc, Place::from(*flag), false_.clone());\n         }\n     }"}, {"sha": "46b450a4e47f7fb701801eaf744f10353a56ef09", "filename": "tests/mir-opt/issue_41888.main.ElaborateDrops.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f26191aedebd1889909b56ed450e7110a3dc22d/tests%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/7f26191aedebd1889909b56ed450e7110a3dc22d/tests%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissue_41888.main.ElaborateDrops.diff?ref=7f26191aedebd1889909b56ed450e7110a3dc22d", "patch": "@@ -22,9 +22,9 @@\n       }\n   \n       bb0: {\n-+         _9 = const false;                // scope 0 at $DIR/issue_41888.rs:+1:9: +1:10\n +         _7 = const false;                // scope 0 at $DIR/issue_41888.rs:+1:9: +1:10\n +         _8 = const false;                // scope 0 at $DIR/issue_41888.rs:+1:9: +1:10\n++         _9 = const false;                // scope 0 at $DIR/issue_41888.rs:+1:9: +1:10\n           StorageLive(_1);                 // scope 0 at $DIR/issue_41888.rs:+1:9: +1:10\n           StorageLive(_2);                 // scope 1 at $DIR/issue_41888.rs:+2:8: +2:14\n           _2 = cond() -> [return: bb1, unwind: bb11]; // scope 1 at $DIR/issue_41888.rs:+2:8: +2:14"}]}