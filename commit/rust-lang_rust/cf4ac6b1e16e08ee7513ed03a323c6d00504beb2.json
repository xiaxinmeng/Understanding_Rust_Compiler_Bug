{"sha": "cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "node_id": "C_kwDOAAsO6NoAKGNmNGFjNmIxZTE2ZTA4ZWU3NTEzZWQwM2EzMjNjNmQwMDUwNGJlYjI", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-01-28T22:07:27Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-02-06T20:43:12Z"}, "message": "Add From<u8> for ExitCode\n\nThis should cover a mostly cross-platform subset of supported exit codes.", "tree": {"sha": "81ec543232f3b9d7f95a43920ace3c5e995debbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81ec543232f3b9d7f95a43920ace3c5e995debbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmIAMuAACgkQ+boUO5X/\nbYKfWRAAv7JXPuEus8NzFW9R/+rMDuRb7BeG7f4QlZBdQCncxEIRD3gxFgBDu5+4\neAkq5DLrsG7JoT3tvxJrnM5vvDRNiazKaIsuQt8zeO+I8b7AhcKAGkP58dH3f+jZ\n1RFLMPeGkELpFLLfl1mMi96i6QxdEegZJkyBbWuEi4Zxlqk0kdMdL1OS1aTAlRsj\nGk3mfoF1Bu+sl140W6kw1XdrNFHjOgktWVhRYlyzfFV+MrG404gbY3VJxlr1+M/1\nYHS0yAbhUNKyL/VEwHwXMSZ8SNzxnLaI3PK4cZfE64QZ6F5SvWs2dPaJNtayAs3K\n3JjqDojim0eonhugbiG7J5QSl516GI/w9P82mW3qjIcFcDmy/qgYRXxSbCad11sG\ngisOHVIDZEtkoX9EujN76zZPXE3NB5y0va34H+pfNLnqJSjpS5XHgx8fOZFnyOgA\n+cPprKx4O99aWPv1cIhRfdTB7PE89wkP2alp6wmQMSG7pXYWcxn5qBEyGlNAFviG\n1N+uxPv8OPxp0RaKIz4InCkmoPZtYm3eoAtZcTXhSofGefJ2mlmt1qTTF4NYwQet\n5RAixae/GPbuXzdAELWT8k9CDFC0vBcvjbXcum2x+k9Kijb0rFgGFVkRpHyPXq+5\nkd0ro86A24f6CUv+sRr18KLK0ptYnOJ/e0ykeFrmIlWPvErRJf4=\n=wzDh\n-----END PGP SIGNATURE-----", "payload": "tree 81ec543232f3b9d7f95a43920ace3c5e995debbe\nparent f624427f8771c00819684c783bb841bf72095704\nauthor Jane Lusby <jlusby@yaah.dev> 1643407647 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1644180192 -0800\n\nAdd From<u8> for ExitCode\n\nThis should cover a mostly cross-platform subset of supported exit codes.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "html_url": "https://github.com/rust-lang/rust/commit/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f624427f8771c00819684c783bb841bf72095704", "url": "https://api.github.com/repos/rust-lang/rust/commits/f624427f8771c00819684c783bb841bf72095704", "html_url": "https://github.com/rust-lang/rust/commit/f624427f8771c00819684c783bb841bf72095704"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "1f04890539604e98d04e4cf8b60f0ae68a65f38d", "filename": "library/std/src/process.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "patch": "@@ -1691,6 +1691,14 @@ impl ExitCode {\n     }\n }\n \n+#[unstable(feature = \"process_exitcode_placeholder\", issue = \"48711\")]\n+impl From<u8> for ExitCode {\n+    /// Construct an exit code from an arbitrary u8 value.\n+    fn from(code: u8) -> Self {\n+        ExitCode(imp::ExitCode::from(code))\n+    }\n+}\n+\n impl Child {\n     /// Forces the child process to exit. If the child has already exited, an [`InvalidInput`]\n     /// error is returned."}, {"sha": "97985ddd3316b0e8a40e21bc2355c0a6f12ac1e8", "filename": "library/std/src/sys/unix/process/process_common.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "patch": "@@ -476,6 +476,12 @@ impl ExitCode {\n     }\n }\n \n+impl From<u8> for ExitCode {\n+    fn from(code: u8) -> Self {\n+        Self(code)\n+    }\n+}\n+\n pub struct CommandArgs<'a> {\n     iter: crate::slice::Iter<'a, CString>,\n }"}, {"sha": "deb58ffa8c7decde0160e599be2b272cd024b753", "filename": "library/std/src/sys/unsupported/process.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funsupported%2Fprocess.rs?ref=cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "patch": "@@ -162,6 +162,15 @@ impl ExitCode {\n     }\n }\n \n+impl From<u8> for ExitCode {\n+    fn from(code: u8) -> Self {\n+        match code {\n+            0 => Self::SUCCESS,\n+            1..255 => Self::FAILURE,\n+        }\n+    }\n+}\n+\n pub struct Process(!);\n \n impl Process {"}, {"sha": "f9e71951b2a231a2fb4ac99aaa0cd4f44c2ebfb0", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4ac6b1e16e08ee7513ed03a323c6d00504beb2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=cf4ac6b1e16e08ee7513ed03a323c6d00504beb2", "patch": "@@ -666,6 +666,12 @@ impl ExitCode {\n     }\n }\n \n+impl From<u8> for ExitCode {\n+    fn from(code: u8) -> Self {\n+        ExitCode(c::DWORD::from(code))\n+    }\n+}\n+\n fn zeroed_startupinfo() -> c::STARTUPINFO {\n     c::STARTUPINFO {\n         cb: 0,"}]}