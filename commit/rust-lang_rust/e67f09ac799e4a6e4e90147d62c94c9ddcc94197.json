{"sha": "e67f09ac799e4a6e4e90147d62c94c9ddcc94197", "node_id": "C_kwDOAAsO6NoAKGU2N2YwOWFjNzk5ZTRhNmU0ZTkwMTQ3ZDYyYzk0YzlkZGNjOTQxOTc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-21T22:14:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-21T22:14:00Z"}, "message": "Rollup merge of #103335 - SarthakSingh31:issue-89008, r=jackh726\n\nReplaced wrong test with the correct mcve\n\nCloses #89008.\n\nThe old test was wrong and the compiler was [correctly raising an error](https://github.com/rust-lang/rust/issues/89008#issuecomment-1285128060). The bug in the issue was resolved at some point but due to the wrong test the issue was never closed.\n\nThis pr replaces that test with the correct MCVE (made by ``@jackh726).``\n\nThe error raised by the bug changed between when the bug was posted (2021-09-08) and when the MCVE [was posted](https://github.com/rust-lang/rust/issues/89008#issuecomment-950110735) (2021-10-23).\nI ran them both through `nightly-2021-09-08` and they produce identical error messages. They also produce identical but different from before error messages when ran through `nightly-2021-10-23`.\n\n<details>\n  <summary>Error message with <code>nightly-2021-09-08</code></summary>\n\nThe code with the original bug report:\n  ```\nerror[E0277]: the size for values of type `Repr` cannot be known at compilation time\n  --> src/main.rs:23:43\n   |\n23 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |                        |\n   |                        this type parameter needs to be `std::marker::Sized`\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `test-234234` due to previous error\n  ```\n\nMVCE:\n```\nerror[E0277]: the size for values of type `Repr` cannot be known at compilation time\n  --> src/main.rs:30:43\n   |\n30 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |                        |\n   |                        this type parameter needs to be `std::marker::Sized`\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `test-234234` due to previous error\n```\n</details>\n\n<details>\n<summary>Error message with <code>nightly-2021-10-23</code></summary>\n\nThe code with the original bug report:\n```\nerror[E0271]: type mismatch resolving `<impl futures::Future as futures::Future>::Output == impl futures::Stream`\n  --> src/main.rs:23:43\n   |\n19 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ------------------------ the expected opaque type\n...\n23 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected opaque type, found struct `futures::stream::Empty`\n   |\n   = note: expected opaque type `impl futures::Stream`\n                   found struct `futures::stream::Empty<_>`\n\nerror: could not find defining uses\n  --> src/main.rs:19:33\n   |\n19 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0271`.\nerror: could not compile `test-234234` due to 2 previous errors\n```\n\nMCVE:\n```\nerror[E0271]: type mismatch resolving `<impl Future as Future>::Output == impl Stream`\n  --> src/main.rs:30:43\n   |\n28 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ------------------------ the expected opaque type\n29 |     type LineStreamFut<'a, Repr> = impl Future<Output = Self::LineStream<'a, Repr>>;\n30 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected opaque type, found struct `Empty`\n   |\n   = note: expected opaque type `impl Stream`\n                   found struct `Empty<_>`\n\nerror: could not find defining uses\n  --> src/main.rs:28:33\n   |\n28 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0271`.\nerror: could not compile `test-234234` due to 2 previous errors\n```\n</details>", "tree": {"sha": "bea36a544eadb5c4275c809343f3deec94b9cb17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bea36a544eadb5c4275c809343f3deec94b9cb17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e67f09ac799e4a6e4e90147d62c94c9ddcc94197", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjUxmoCRBK7hj4Ov3rIwAAVPUIAIZBiqC55phmSK31tNl04yg5\nW6v8VGHqMfwOO6rYln8wF/3Wrf0MZxgoZEqPqcA80eYMC/9X8dtZC/tKq1zoiVi1\nMGXjX+8wfqkLt6XKGl2rN7NILhmW4LcmeukYMZWlXnocb/ONVR2jdVtBiPXJscsy\n7SasbTKw6i/veti8TP6iRztjBXqyePBuPilGR/3WloofkZJ0955QyyPvKXcLc580\nmlfjKvfvPIEmPaUW2LFxo/dXyBbhBRW6eFrVmIPQrAeJmvDQ0sVqCDBRKvQu7OrF\np1ViTS4t+uBdUT1jVxJjrqOARcSKdu7n5QUEXsOXQqpKRFS1tRNM0WSdvqTPkGM=\n=5qfY\n-----END PGP SIGNATURE-----\n", "payload": "tree bea36a544eadb5c4275c809343f3deec94b9cb17\nparent ebfdf735acb7c26044a2bb675acfbe4f9ca6d1eb\nparent cc6ad45148af89cf82855df27ec1a1b695592796\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1666390440 +0200\ncommitter GitHub <noreply@github.com> 1666390440 +0200\n\nRollup merge of #103335 - SarthakSingh31:issue-89008, r=jackh726\n\nReplaced wrong test with the correct mcve\n\nCloses #89008.\n\nThe old test was wrong and the compiler was [correctly raising an error](https://github.com/rust-lang/rust/issues/89008#issuecomment-1285128060). The bug in the issue was resolved at some point but due to the wrong test the issue was never closed.\n\nThis pr replaces that test with the correct MCVE (made by ``@jackh726).``\n\nThe error raised by the bug changed between when the bug was posted (2021-09-08) and when the MCVE [was posted](https://github.com/rust-lang/rust/issues/89008#issuecomment-950110735) (2021-10-23).\nI ran them both through `nightly-2021-09-08` and they produce identical error messages. They also produce identical but different from before error messages when ran through `nightly-2021-10-23`.\n\n<details>\n  <summary>Error message with <code>nightly-2021-09-08</code></summary>\n\nThe code with the original bug report:\n  ```\nerror[E0277]: the size for values of type `Repr` cannot be known at compilation time\n  --> src/main.rs:23:43\n   |\n23 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |                        |\n   |                        this type parameter needs to be `std::marker::Sized`\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `test-234234` due to previous error\n  ```\n\nMVCE:\n```\nerror[E0277]: the size for values of type `Repr` cannot be known at compilation time\n  --> src/main.rs:30:43\n   |\n30 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n   |                        |\n   |                        this type parameter needs to be `std::marker::Sized`\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `test-234234` due to previous error\n```\n</details>\n\n<details>\n<summary>Error message with <code>nightly-2021-10-23</code></summary>\n\nThe code with the original bug report:\n```\nerror[E0271]: type mismatch resolving `<impl futures::Future as futures::Future>::Output == impl futures::Stream`\n  --> src/main.rs:23:43\n   |\n19 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ------------------------ the expected opaque type\n...\n23 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected opaque type, found struct `futures::stream::Empty`\n   |\n   = note: expected opaque type `impl futures::Stream`\n                   found struct `futures::stream::Empty<_>`\n\nerror: could not find defining uses\n  --> src/main.rs:19:33\n   |\n19 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0271`.\nerror: could not compile `test-234234` due to 2 previous errors\n```\n\nMCVE:\n```\nerror[E0271]: type mismatch resolving `<impl Future as Future>::Output == impl Stream`\n  --> src/main.rs:30:43\n   |\n28 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ------------------------ the expected opaque type\n29 |     type LineStreamFut<'a, Repr> = impl Future<Output = Self::LineStream<'a, Repr>>;\n30 |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected opaque type, found struct `Empty`\n   |\n   = note: expected opaque type `impl Stream`\n                   found struct `Empty<_>`\n\nerror: could not find defining uses\n  --> src/main.rs:28:33\n   |\n28 |     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0271`.\nerror: could not compile `test-234234` due to 2 previous errors\n```\n</details>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e67f09ac799e4a6e4e90147d62c94c9ddcc94197", "html_url": "https://github.com/rust-lang/rust/commit/e67f09ac799e4a6e4e90147d62c94c9ddcc94197", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e67f09ac799e4a6e4e90147d62c94c9ddcc94197/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebfdf735acb7c26044a2bb675acfbe4f9ca6d1eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebfdf735acb7c26044a2bb675acfbe4f9ca6d1eb", "html_url": "https://github.com/rust-lang/rust/commit/ebfdf735acb7c26044a2bb675acfbe4f9ca6d1eb"}, {"sha": "cc6ad45148af89cf82855df27ec1a1b695592796", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6ad45148af89cf82855df27ec1a1b695592796", "html_url": "https://github.com/rust-lang/rust/commit/cc6ad45148af89cf82855df27ec1a1b695592796"}], "stats": {"total": 47, "additions": 11, "deletions": 36}, "files": [{"sha": "3f72734efa1dce3535b610a4007e66b98a062b75", "filename": "src/test/ui/generic-associated-types/bugs/issue-89008.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ebfdf735acb7c26044a2bb675acfbe4f9ca6d1eb/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ebfdf735acb7c26044a2bb675acfbe4f9ca6d1eb/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-89008.stderr?ref=ebfdf735acb7c26044a2bb675acfbe4f9ca6d1eb", "patch": "@@ -1,19 +0,0 @@\n-error[E0271]: type mismatch resolving `<Empty<_> as Stream>::Item == Repr`\n-  --> $DIR/issue-89008.rs:38:43\n-   |\n-LL |     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n-   |                        ----               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type mismatch resolving `<Empty<_> as Stream>::Item == Repr`\n-   |                        |\n-   |                        this type parameter\n-   |\n-note: expected this to be `()`\n-  --> $DIR/issue-89008.rs:17:17\n-   |\n-LL |     type Item = ();\n-   |                 ^^\n-   = note:   expected unit type `()`\n-           found type parameter `Repr`\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0271`."}, {"sha": "669dbafb5d5deb038e23aa43b7d0ea5a13c6123c", "filename": "src/test/ui/generic-associated-types/issue-89008.rs", "status": "renamed", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e67f09ac799e4a6e4e90147d62c94c9ddcc94197/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-89008.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e67f09ac799e4a6e4e90147d62c94c9ddcc94197/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-89008.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-89008.rs?ref=e67f09ac799e4a6e4e90147d62c94c9ddcc94197", "patch": "@@ -1,42 +1,36 @@\n-// check-fail\n+// check-pass\n // edition:2021\n-// known-bug: #88908\n-\n-// This should pass, but seems to run into a TAIT bug.\n \n #![feature(type_alias_impl_trait)]\n \n use std::future::Future;\n+use std::marker::PhantomData;\n \n trait Stream {\n     type Item;\n }\n \n-struct Empty<T>(T);\n-impl<T> Stream for Empty<T> {\n-    type Item = ();\n+struct Empty<T> {\n+    _phantom: PhantomData<T>,\n }\n-fn empty<T>() -> Empty<T> {\n-    todo!()\n+\n+impl<T> Stream for Empty<T> {\n+    type Item = T;\n }\n \n trait X {\n     type LineStream<'a, Repr>: Stream<Item = Repr> where Self: 'a;\n-\n-    type LineStreamFut<'a,Repr>: Future<Output = Self::LineStream<'a, Repr>> where Self: 'a;\n-\n-    fn line_stream<'a,Repr>(&'a self) -> Self::LineStreamFut<'a,Repr>;\n+    type LineStreamFut<'a, Repr>: Future<Output = Self::LineStream<'a, Repr>> where Self: 'a;\n+    fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr>;\n }\n \n struct Y;\n \n impl X for Y {\n     type LineStream<'a, Repr> = impl Stream<Item = Repr>;\n-\n-    type LineStreamFut<'a, Repr> = impl Future<Output = Self::LineStream<'a, Repr>> ;\n-\n+    type LineStreamFut<'a, Repr> = impl Future<Output = Self::LineStream<'a, Repr>>;\n     fn line_stream<'a, Repr>(&'a self) -> Self::LineStreamFut<'a, Repr> {\n-        async {empty()}\n+        async { Empty { _phantom: PhantomData } }\n     }\n }\n ", "previous_filename": "src/test/ui/generic-associated-types/bugs/issue-89008.rs"}]}