{"sha": "286bb18a9b8c8bafe64eb9add96f597a3d80f832", "node_id": "C_kwDOAAsO6NoAKDI4NmJiMThhOWI4YzhiYWZlNjRlYjlhZGQ5NmY1OTdhM2Q4MGY4MzI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-12T06:12:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-12T06:12:15Z"}, "message": "Rollup merge of #92748 - david-perez:eliminate-boxed-wording-std-error, r=Mark-Simulacrum\n\nEliminate \"boxed\" wording in `std::error::Error` documentation\n\nIn commit 29403ee, documentation for the methods on `std::any::Any` was\nmodified so that they referred to the concrete value behind the trait\nobject as the \"inner\" value. This is a more accurate wording than\n\"boxed\": while putting trait objects inside boxes is arguably the most\ncommon use, they can also be placed behind other pointer types like\n`&mut` or `std::sync::Arc`.\n\nThis commit does the same documentation changes for `std::error::Error`.", "tree": {"sha": "94085cef2429674da61185207ff63ff24d422fd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94085cef2429674da61185207ff63ff24d422fd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/286bb18a9b8c8bafe64eb9add96f597a3d80f832", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh3nFACRBK7hj4Ov3rIwAAqwcIAJ4aBCnZYfPIysJ6r7Mx5Utf\nTi7CUvetZIGvOH+6JPuTEItKaHTE1gtAM8rAQ+V3CrWZXqd5rZzmIp3j8IZ4QFCa\ndexstUvz73PapvnivYU2QQfa7wgYJg2FzveSDrwMi5u49cMlEf7sesBIhe+ltJ8+\nlfkbimslJK79Y6trjIYlr1GjWFn6+eZkRHGO79xgQYbk4+OnmfRM3WPQG69T97se\n9t6NYGFPhjmAvtMwoyfJQ3WRvEJjhCqSJMym2+9SM8rjKDwPrNaJgFUiZ0yBU6oU\nCkhMkx7Ov0aLgmxj4ZRjjGwSVluKMKPTI6Ve4xVzuTct3ufCjCdN66ZykI6ZhB8=\n=bBro\n-----END PGP SIGNATURE-----\n", "payload": "tree 94085cef2429674da61185207ff63ff24d422fd1\nparent bc0a16524097d6c0f2d867c60d68cced19efb1db\nparent 5786bbddc670597af286381b27fbb9f563cf7dc7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641967935 +0100\ncommitter GitHub <noreply@github.com> 1641967935 +0100\n\nRollup merge of #92748 - david-perez:eliminate-boxed-wording-std-error, r=Mark-Simulacrum\n\nEliminate \"boxed\" wording in `std::error::Error` documentation\n\nIn commit 29403ee, documentation for the methods on `std::any::Any` was\nmodified so that they referred to the concrete value behind the trait\nobject as the \"inner\" value. This is a more accurate wording than\n\"boxed\": while putting trait objects inside boxes is arguably the most\ncommon use, they can also be placed behind other pointer types like\n`&mut` or `std::sync::Arc`.\n\nThis commit does the same documentation changes for `std::error::Error`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/286bb18a9b8c8bafe64eb9add96f597a3d80f832", "html_url": "https://github.com/rust-lang/rust/commit/286bb18a9b8c8bafe64eb9add96f597a3d80f832", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/286bb18a9b8c8bafe64eb9add96f597a3d80f832/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc0a16524097d6c0f2d867c60d68cced19efb1db", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0a16524097d6c0f2d867c60d68cced19efb1db", "html_url": "https://github.com/rust-lang/rust/commit/bc0a16524097d6c0f2d867c60d68cced19efb1db"}, {"sha": "5786bbddc670597af286381b27fbb9f563cf7dc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5786bbddc670597af286381b27fbb9f563cf7dc7", "html_url": "https://github.com/rust-lang/rust/commit/5786bbddc670597af286381b27fbb9f563cf7dc7"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "526a1b92b19e295f7ad7ea1bd61fc59c15da36b3", "filename": "library/std/src/error.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/286bb18a9b8c8bafe64eb9add96f597a3d80f832/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/286bb18a9b8c8bafe64eb9add96f597a3d80f832/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=286bb18a9b8c8bafe64eb9add96f597a3d80f832", "patch": "@@ -606,21 +606,21 @@ impl Error for time::FromSecsError {}\n \n // Copied from `any.rs`.\n impl dyn Error + 'static {\n-    /// Returns `true` if the boxed type is the same as `T`\n+    /// Returns `true` if the inner type is the same as `T`.\n     #[stable(feature = \"error_downcast\", since = \"1.3.0\")]\n     #[inline]\n     pub fn is<T: Error + 'static>(&self) -> bool {\n         // Get `TypeId` of the type this function is instantiated with.\n         let t = TypeId::of::<T>();\n \n-        // Get `TypeId` of the type in the trait object.\n-        let boxed = self.type_id(private::Internal);\n+        // Get `TypeId` of the type in the trait object (`self`).\n+        let concrete = self.type_id(private::Internal);\n \n         // Compare both `TypeId`s on equality.\n-        t == boxed\n+        t == concrete\n     }\n \n-    /// Returns some reference to the boxed value if it is of type `T`, or\n+    /// Returns some reference to the inner value if it is of type `T`, or\n     /// `None` if it isn't.\n     #[stable(feature = \"error_downcast\", since = \"1.3.0\")]\n     #[inline]\n@@ -632,7 +632,7 @@ impl dyn Error + 'static {\n         }\n     }\n \n-    /// Returns some mutable reference to the boxed value if it is of type `T`, or\n+    /// Returns some mutable reference to the inner value if it is of type `T`, or\n     /// `None` if it isn't.\n     #[stable(feature = \"error_downcast\", since = \"1.3.0\")]\n     #[inline]"}]}