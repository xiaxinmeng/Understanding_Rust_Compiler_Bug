{"sha": "d41af3e00229c2c32890360eb760219eeb14e724", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MWFmM2UwMDIyOWMyYzMyODkwMzYwZWI3NjAyMTllZWIxNGU3MjQ=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-08-24T05:49:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-08T21:22:15Z"}, "message": "core: fix breakage in TaskBuilder.future_result\n\nthe actual \"fix\" in this change is the chunk that moves\n`let x = self.consume()` to after the option dance that results in\nthe `notify_chan` in TaskBuilder.try()\n\nthe rest is cleanup/sense-making of what some of this code is doing (I'm\nlooking at you, future_result)", "tree": {"sha": "58bf136385f0afdca4f5e47f57d654179df4534b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58bf136385f0afdca4f5e47f57d654179df4534b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d41af3e00229c2c32890360eb760219eeb14e724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d41af3e00229c2c32890360eb760219eeb14e724", "html_url": "https://github.com/rust-lang/rust/commit/d41af3e00229c2c32890360eb760219eeb14e724", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d41af3e00229c2c32890360eb760219eeb14e724/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8fc771f2004c376bbde68d09ead45d679f8f597", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8fc771f2004c376bbde68d09ead45d679f8f597", "html_url": "https://github.com/rust-lang/rust/commit/a8fc771f2004c376bbde68d09ead45d679f8f597"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "24232c544ecc5fb3d92456b858a62d9bd5e5b05e", "filename": "src/libcore/task.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d41af3e00229c2c32890360eb760219eeb14e724/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d41af3e00229c2c32890360eb760219eeb14e724/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=d41af3e00229c2c32890360eb760219eeb14e724", "patch": "@@ -366,17 +366,22 @@ impl TaskBuilder {\n         }\n \n         // Construct the future and give it to the caller.\n-        let (ch, po) = stream::<Notification>();\n+        let (notify_pipe_ch, notify_pipe_po) = stream::<Notification>();\n \n         blk(do future::from_fn {\n-            match po.recv() {\n+            match notify_pipe_po.recv() {\n               Exit(_, result) => result\n             }\n         });\n \n         // Reconfigure self to use a notify channel.\n         TaskBuilder({\n-            opts: { notify_chan: Some(ch),.. self.opts },\n+            opts: {\n+                linked: self.opts.linked,\n+                supervised: self.opts.supervised,\n+                mut notify_chan: Some(notify_pipe_ch),\n+                sched: self.opts.sched\n+            },\n             can_not_copy: None,\n             .. *self.consume()\n         })\n@@ -445,12 +450,14 @@ impl TaskBuilder {\n      * must be greater than zero.\n      */\n     fn spawn(+f: fn~()) {\n-        let x = self.consume();\n-        let notify_chan = if self.opts.notify_chan == None {\n+        let notify_chan = if self.opts.notify_chan == none {\n             None\n         } else {\n-            Some(option::swap_unwrap(&mut self.opts.notify_chan))\n+            let swapped_notify_chan =\n+                option::swap_unwrap(&mut self.opts.notify_chan);\n+            some(swapped_notify_chan)\n         };\n+        let x = self.consume();\n         let opts = {\n             linked: x.opts.linked,\n             supervised: x.opts.supervised,\n@@ -522,7 +529,8 @@ impl TaskBuilder {\n         let ch = comm::Chan(po);\n         let mut result = None;\n \n-        do self.future_result(|+r| { result = Some(r); }).spawn {\n+        let fr_task_builder = self.future_result(|+r| { result = Some(r); });\n+        do fr_task_builder.spawn {\n             comm::send(ch, f());\n         }\n         match future::get(&option::unwrap(result)) {"}]}