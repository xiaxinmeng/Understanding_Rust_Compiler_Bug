{"sha": "d0181447614dfcebcf3a658a6818a4b45cbe90db", "node_id": "C_kwDOAAsO6NoAKGQwMTgxNDQ3NjE0ZGZjZWJjZjNhNjU4YTY4MThhNGI0NWNiZTkwZGI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-29T07:00:11Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-22T02:17:39Z"}, "message": "Optimize subtyping and equation of GeneratorWitness", "tree": {"sha": "2c268101306b1f356dd07cff469682a8757cd651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c268101306b1f356dd07cff469682a8757cd651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0181447614dfcebcf3a658a6818a4b45cbe90db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0181447614dfcebcf3a658a6818a4b45cbe90db", "html_url": "https://github.com/rust-lang/rust/commit/d0181447614dfcebcf3a658a6818a4b45cbe90db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0181447614dfcebcf3a658a6818a4b45cbe90db/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43119d643857efc366bfca527ac2dadfc3f2e906", "url": "https://api.github.com/repos/rust-lang/rust/commits/43119d643857efc366bfca527ac2dadfc3f2e906", "html_url": "https://github.com/rust-lang/rust/commit/43119d643857efc366bfca527ac2dadfc3f2e906"}], "stats": {"total": 58, "additions": 38, "deletions": 20}, "files": [{"sha": "a962bbb03addb2427e1c05207b394beaaa423545", "filename": "compiler/rustc_infer/src/infer/equate.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d0181447614dfcebcf3a658a6818a4b45cbe90db/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0181447614dfcebcf3a658a6818a4b45cbe90db/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fequate.rs?ref=d0181447614dfcebcf3a658a6818a4b45cbe90db", "patch": "@@ -110,6 +110,24 @@ impl<'tcx> TypeRelation<'tcx> for Equate<'_, '_, 'tcx> {\n                         .obligations,\n                 );\n             }\n+            (&ty::GeneratorWitness(a_types), &ty::GeneratorWitness(b_types)) => {\n+                let a_types = infcx.tcx.anonymize_bound_vars(a_types);\n+                let b_types = infcx.tcx.anonymize_bound_vars(b_types);\n+                if a_types.bound_vars() == b_types.bound_vars() {\n+                    let (a_types, b_types) = infcx.replace_bound_vars_with_placeholders(\n+                        a_types.map_bound(|a_types| (a_types, b_types.skip_binder())),\n+                    );\n+                    for (a, b) in std::iter::zip(a_types, b_types) {\n+                        self.relate(a, b)?;\n+                    }\n+                } else {\n+                    self.fields.infcx.super_combine_tys(\n+                        self,\n+                        infcx.tcx.mk_generator_witness(a_types),\n+                        infcx.tcx.mk_generator_witness(b_types),\n+                    )?;\n+                }\n+            }\n \n             _ => {\n                 self.fields.infcx.super_combine_tys(self, a, b)?;"}, {"sha": "2c14a9414f278e8635c0aa837bfb78b3684cd2c9", "filename": "compiler/rustc_infer/src/infer/sub.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d0181447614dfcebcf3a658a6818a4b45cbe90db/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0181447614dfcebcf3a658a6818a4b45cbe90db/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs?ref=d0181447614dfcebcf3a658a6818a4b45cbe90db", "patch": "@@ -164,6 +164,25 @@ impl<'tcx> TypeRelation<'tcx> for Sub<'_, '_, 'tcx> {\n                 );\n                 Ok(ga)\n             }\n+            (&ty::GeneratorWitness(a_types), &ty::GeneratorWitness(b_types)) => {\n+                let a_types = infcx.tcx.anonymize_bound_vars(a_types);\n+                let b_types = infcx.tcx.anonymize_bound_vars(b_types);\n+                if a_types.bound_vars() == b_types.bound_vars() {\n+                    let (a_types, b_types) = infcx.replace_bound_vars_with_placeholders(\n+                        a_types.map_bound(|a_types| (a_types, b_types.skip_binder())),\n+                    );\n+                    for (a, b) in std::iter::zip(a_types, b_types) {\n+                        self.relate(a, b)?;\n+                    }\n+                } else {\n+                    self.fields.infcx.super_combine_tys(\n+                        self,\n+                        infcx.tcx.mk_generator_witness(a_types),\n+                        infcx.tcx.mk_generator_witness(b_types),\n+                    )?;\n+                }\n+                Ok(a)\n+            }\n \n             _ => {\n                 self.fields.infcx.super_combine_tys(self, a, b)?;"}, {"sha": "af4946a187f15bc6ecea91c9d8e2c6f42f6d6a07", "filename": "src/test/ui/higher-rank-trait-bounds/issue-95034.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d0181447614dfcebcf3a658a6818a4b45cbe90db/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-95034.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0181447614dfcebcf3a658a6818a4b45cbe90db/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-95034.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-95034.rs?ref=d0181447614dfcebcf3a658a6818a4b45cbe90db", "patch": "@@ -1,23 +1,5 @@\n-// known-bug: #95034\n-// failure-status: 101\n+// check-pass\n // compile-flags: --edition=2021 --crate-type=lib\n-// rustc-env:RUST_BACKTRACE=0\n-\n-// normalize-stderr-test \"thread 'rustc' panicked.*\" -> \"thread 'rustc' panicked\"\n-// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n-// normalize-stderr-test \"\\nerror: internal compiler error.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note:.*unexpectedly panicked.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\n-// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\n-// normalize-stderr-test \"end of query stack\\n\" -> \"\"\n-// normalize-stderr-test \"#.*\\n\" -> \"\"\n-\n-// This should not ICE.\n-\n-// Refer to the issue for more minimized versions.\n \n use std::{\n     future::Future,"}, {"sha": "1d8329142fc5c0a142f078d1106713135539f7ad", "filename": "src/test/ui/higher-rank-trait-bounds/issue-95034.stderr", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43119d643857efc366bfca527ac2dadfc3f2e906/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-95034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43119d643857efc366bfca527ac2dadfc3f2e906/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-95034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-95034.stderr?ref=43119d643857efc366bfca527ac2dadfc3f2e906", "patch": "@@ -1 +0,0 @@\n-thread 'rustc' panicked"}]}