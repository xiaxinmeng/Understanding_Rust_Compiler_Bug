{"sha": "b06599a7a8001914d64ec191a073684362f5b9b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNjU5OWE3YTgwMDE5MTRkNjRlYzE5MWEwNzM2ODQzNjJmNWI5YjI=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-08-31T22:54:01Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-09-01T20:08:20Z"}, "message": "Demode fun_treemap.rs", "tree": {"sha": "2a56739b40a3f6506dc662edcddf032ec35fcd44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a56739b40a3f6506dc662edcddf032ec35fcd44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b06599a7a8001914d64ec191a073684362f5b9b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b06599a7a8001914d64ec191a073684362f5b9b2", "html_url": "https://github.com/rust-lang/rust/commit/b06599a7a8001914d64ec191a073684362f5b9b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b06599a7a8001914d64ec191a073684362f5b9b2/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf430b70320ef04b983ed5ee53e234a87c27343c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf430b70320ef04b983ed5ee53e234a87c27343c", "html_url": "https://github.com/rust-lang/rust/commit/bf430b70320ef04b983ed5ee53e234a87c27343c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "2cd5f8e24d136bf85809cbb2123d1c99a69c30ce", "filename": "src/libstd/fun_treemap.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b06599a7a8001914d64ec191a073684362f5b9b2/src%2Flibstd%2Ffun_treemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b06599a7a8001914d64ec191a073684362f5b9b2/src%2Flibstd%2Ffun_treemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffun_treemap.rs?ref=b06599a7a8001914d64ec191a073684362f5b9b2", "patch": "@@ -1,4 +1,6 @@\n #[deny(non_camel_case_types)];\n+#[forbid(deprecated_mode)];\n+#[forbid(deprecated_pattern)];\n \n /*!\n  * A functional key,value store that works on anything.\n@@ -32,8 +34,8 @@ enum TreeNode<K, V> {\n fn init<K, V>() -> Treemap<K, V> { @Empty }\n \n /// Insert a value into the map\n-fn insert<K: copy Eq Ord, V: copy>(m: Treemap<K, V>, k: K, v: V)\n-                                -> Treemap<K, V> {\n+fn insert<K: copy Eq Ord, V: copy>(m: Treemap<K, V>, +k: K, +v: V)\n+  -> Treemap<K, V> {\n     @match m {\n        @Empty => Node(@k, @v, @Empty, @Empty),\n        @Node(@kk, vv, left, right) => {\n@@ -47,7 +49,7 @@ fn insert<K: copy Eq Ord, V: copy>(m: Treemap<K, V>, k: K, v: V)\n }\n \n /// Find a value based on the key\n-fn find<K: Eq Ord, V: copy>(m: Treemap<K, V>, k: K) -> Option<V> {\n+fn find<K: Eq Ord, V: copy>(m: Treemap<K, V>, +k: K) -> Option<V> {\n     match *m {\n       Empty => None,\n       Node(@kk, @v, left, right) => {"}]}