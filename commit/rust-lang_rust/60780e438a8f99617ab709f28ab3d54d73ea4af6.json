{"sha": "60780e438a8f99617ab709f28ab3d54d73ea4af6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNzgwZTQzOGE4Zjk5NjE3YWI3MDlmMjhhYjNkNTRkNzNlYTRhZjY=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-04-11T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2021-04-11T00:00:00Z"}, "message": "Remove FixedSizeArray", "tree": {"sha": "622e16ea155d3523a8dda289d50ecaf0ee72c83c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/622e16ea155d3523a8dda289d50ecaf0ee72c83c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60780e438a8f99617ab709f28ab3d54d73ea4af6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60780e438a8f99617ab709f28ab3d54d73ea4af6", "html_url": "https://github.com/rust-lang/rust/commit/60780e438a8f99617ab709f28ab3d54d73ea4af6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60780e438a8f99617ab709f28ab3d54d73ea4af6/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58f32da346642ff3f50186f6f4a0de46e61008be", "url": "https://api.github.com/repos/rust-lang/rust/commits/58f32da346642ff3f50186f6f4a0de46e61008be", "html_url": "https://github.com/rust-lang/rust/commit/58f32da346642ff3f50186f6f4a0de46e61008be"}], "stats": {"total": 58, "additions": 1, "deletions": 57}, "files": [{"sha": "b6ce825e2477a53eed05f3787137e61781d9ebd3", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=60780e438a8f99617ab709f28ab3d54d73ea4af6", "patch": "@@ -12,7 +12,6 @@ use crate::convert::{Infallible, TryFrom};\n use crate::fmt;\n use crate::hash::{self, Hash};\n use crate::iter::TrustedLen;\n-use crate::marker::Unsize;\n use crate::mem::{self, MaybeUninit};\n use crate::ops::{Index, IndexMut};\n use crate::slice::{Iter, IterMut};\n@@ -36,41 +35,6 @@ pub fn from_mut<T>(s: &mut T) -> &mut [T; 1] {\n     unsafe { &mut *(s as *mut T).cast::<[T; 1]>() }\n }\n \n-/// Utility trait implemented only on arrays of fixed size\n-///\n-/// This trait can be used to implement other traits on fixed-size arrays\n-/// without causing much metadata bloat.\n-///\n-/// The trait is marked unsafe in order to restrict implementors to fixed-size\n-/// arrays. A user of this trait can assume that implementors have the exact\n-/// layout in memory of a fixed size array (for example, for unsafe\n-/// initialization).\n-///\n-/// Note that the traits [`AsRef`] and [`AsMut`] provide similar methods for types that\n-/// may not be fixed-size arrays. Implementors should prefer those traits\n-/// instead.\n-#[unstable(feature = \"fixed_size_array\", issue = \"27778\")]\n-pub unsafe trait FixedSizeArray<T> {\n-    /// Converts the array to immutable slice\n-    #[unstable(feature = \"fixed_size_array\", issue = \"27778\")]\n-    fn as_slice(&self) -> &[T];\n-    /// Converts the array to mutable slice\n-    #[unstable(feature = \"fixed_size_array\", issue = \"27778\")]\n-    fn as_mut_slice(&mut self) -> &mut [T];\n-}\n-\n-#[unstable(feature = \"fixed_size_array\", issue = \"27778\")]\n-unsafe impl<T, A: Unsize<[T]>> FixedSizeArray<T> for A {\n-    #[inline]\n-    fn as_slice(&self) -> &[T] {\n-        self\n-    }\n-    #[inline]\n-    fn as_mut_slice(&mut self) -> &mut [T] {\n-        self\n-    }\n-}\n-\n /// The error type returned when a conversion from a slice to an array fails.\n #[stable(feature = \"try_from\", since = \"1.34.0\")]\n #[derive(Debug, Copy, Clone)]"}, {"sha": "ce7480ce2ee892317e744af6794574a1e21ebc54", "filename": "library/core/tests/array.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fcore%2Ftests%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fcore%2Ftests%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Farray.rs?ref=60780e438a8f99617ab709f28ab3d54d73ea4af6", "patch": "@@ -1,24 +1,6 @@\n-use core::array::{self, FixedSizeArray, IntoIter};\n+use core::array::{self, IntoIter};\n use core::convert::TryFrom;\n \n-#[test]\n-fn fixed_size_array() {\n-    let mut array = [0; 64];\n-    let mut zero_sized = [(); 64];\n-    let mut empty_array = [0; 0];\n-    let mut empty_zero_sized = [(); 0];\n-\n-    assert_eq!(FixedSizeArray::as_slice(&array).len(), 64);\n-    assert_eq!(FixedSizeArray::as_slice(&zero_sized).len(), 64);\n-    assert_eq!(FixedSizeArray::as_slice(&empty_array).len(), 0);\n-    assert_eq!(FixedSizeArray::as_slice(&empty_zero_sized).len(), 0);\n-\n-    assert_eq!(FixedSizeArray::as_mut_slice(&mut array).len(), 64);\n-    assert_eq!(FixedSizeArray::as_mut_slice(&mut zero_sized).len(), 64);\n-    assert_eq!(FixedSizeArray::as_mut_slice(&mut empty_array).len(), 0);\n-    assert_eq!(FixedSizeArray::as_mut_slice(&mut empty_zero_sized).len(), 0);\n-}\n-\n #[test]\n fn array_from_ref() {\n     let value: String = \"Hello World!\".into();"}, {"sha": "6624fd473539a98fec245735e5bdab4646088d7d", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=60780e438a8f99617ab709f28ab3d54d73ea4af6", "patch": "@@ -28,7 +28,6 @@\n #![feature(duration_zero)]\n #![feature(exact_size_is_empty)]\n #![feature(extern_types)]\n-#![feature(fixed_size_array)]\n #![feature(flt2dec)]\n #![feature(fmt_internals)]\n #![feature(hashmap_internals)]"}, {"sha": "91695ced6a962899e9bdd2ec3e88a58201b5e1e5", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60780e438a8f99617ab709f28ab3d54d73ea4af6/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=60780e438a8f99617ab709f28ab3d54d73ea4af6", "patch": "@@ -214,7 +214,6 @@\n     feature(slice_index_methods, coerce_unsized, sgx_platform)\n )]\n #![deny(rustc::existing_doc_keyword)]\n-#![cfg_attr(all(test, target_vendor = \"fortanix\", target_env = \"sgx\"), feature(fixed_size_array))]\n // std is implemented with unstable features, many of which are internal\n // compiler details that will never be stable\n // NB: the following list is sorted to minimize merge conflicts."}]}