{"sha": "083e5e604c304d8743a942ef33def704fa4b6012", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4M2U1ZTYwNGMzMDRkODc0M2E5NDJlZjMzZGVmNzA0ZmE0YjYwMTI=", "commit": {"author": {"name": "niluxv", "email": "niluxv.opensource.C-h2ty6xl@yandex.com", "date": "2021-08-23T10:42:13Z"}, "committer": {"name": "niluxv", "email": "niluxv.opensource.C-h2ty6xl@yandex.com", "date": "2021-08-23T10:42:13Z"}, "message": "Add test for `volatile_set_memory`", "tree": {"sha": "e196231de9e44dc3c4aec1572461178ef54bc1de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e196231de9e44dc3c4aec1572461178ef54bc1de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/083e5e604c304d8743a942ef33def704fa4b6012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/083e5e604c304d8743a942ef33def704fa4b6012", "html_url": "https://github.com/rust-lang/rust/commit/083e5e604c304d8743a942ef33def704fa4b6012", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/083e5e604c304d8743a942ef33def704fa4b6012/comments", "author": {"login": "niluxv", "id": 34834616, "node_id": "MDQ6VXNlcjM0ODM0NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/34834616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niluxv", "html_url": "https://github.com/niluxv", "followers_url": "https://api.github.com/users/niluxv/followers", "following_url": "https://api.github.com/users/niluxv/following{/other_user}", "gists_url": "https://api.github.com/users/niluxv/gists{/gist_id}", "starred_url": "https://api.github.com/users/niluxv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niluxv/subscriptions", "organizations_url": "https://api.github.com/users/niluxv/orgs", "repos_url": "https://api.github.com/users/niluxv/repos", "events_url": "https://api.github.com/users/niluxv/events{/privacy}", "received_events_url": "https://api.github.com/users/niluxv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "niluxv", "id": 34834616, "node_id": "MDQ6VXNlcjM0ODM0NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/34834616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niluxv", "html_url": "https://github.com/niluxv", "followers_url": "https://api.github.com/users/niluxv/followers", "following_url": "https://api.github.com/users/niluxv/following{/other_user}", "gists_url": "https://api.github.com/users/niluxv/gists{/gist_id}", "starred_url": "https://api.github.com/users/niluxv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niluxv/subscriptions", "organizations_url": "https://api.github.com/users/niluxv/orgs", "repos_url": "https://api.github.com/users/niluxv/repos", "events_url": "https://api.github.com/users/niluxv/events{/privacy}", "received_events_url": "https://api.github.com/users/niluxv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32c2df87be28205eb87a12362b085917a2a58dc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/32c2df87be28205eb87a12362b085917a2a58dc5", "html_url": "https://github.com/rust-lang/rust/commit/32c2df87be28205eb87a12362b085917a2a58dc5"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "b2050c5393e221f2e3874c0828c12fcd7f6650f7", "filename": "tests/run-pass/write-bytes.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/083e5e604c304d8743a942ef33def704fa4b6012/tests%2Frun-pass%2Fwrite-bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083e5e604c304d8743a942ef33def704fa4b6012/tests%2Frun-pass%2Fwrite-bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fwrite-bytes.rs?ref=083e5e604c304d8743a942ef33def704fa4b6012", "patch": "@@ -1,3 +1,5 @@\n+#![feature(core_intrinsics)] // for `volatile_set_memory`\n+\n #[repr(C)]\n #[derive(Copy, Clone)]\n struct Foo {\n@@ -42,4 +44,42 @@ fn main() {\n         assert_eq!(w[idx].b, 0xcdcdcdcdcdcdcdcd);\n         assert_eq!(w[idx].c, 0xcdcdcdcdcdcdcdcd);\n     }\n+\n+    // -----\n+    // `std::intrinsics::volatile_set_memory` should behave identically\n+\n+    let mut v: [u64; LENGTH] = [0; LENGTH];\n+\n+    for idx in 0..LENGTH {\n+        assert_eq!(v[idx], 0);\n+    }\n+\n+    unsafe {\n+        let p = v.as_mut_ptr();\n+        ::std::intrinsics::volatile_set_memory(p, 0xab, LENGTH);\n+    }\n+\n+    for idx in 0..LENGTH {\n+        assert_eq!(v[idx], 0xabababababababab);\n+    }\n+\n+    // -----\n+\n+    let mut w: [Foo; LENGTH] = [Foo { a: 0, b: 0, c: 0 }; LENGTH];\n+    for idx in 0..LENGTH {\n+        assert_eq!(w[idx].a, 0);\n+        assert_eq!(w[idx].b, 0);\n+        assert_eq!(w[idx].c, 0);\n+    }\n+\n+    unsafe {\n+        let p = w.as_mut_ptr();\n+        ::std::intrinsics::volatile_set_memory(p, 0xcd, LENGTH);\n+    }\n+\n+    for idx in 0..LENGTH {\n+        assert_eq!(w[idx].a, 0xcdcdcdcdcdcdcdcd);\n+        assert_eq!(w[idx].b, 0xcdcdcdcdcdcdcdcd);\n+        assert_eq!(w[idx].c, 0xcdcdcdcdcdcdcdcd);\n+    }\n }"}]}