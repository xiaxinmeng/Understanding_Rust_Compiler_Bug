{"sha": "861698a493fc547254e61dc23a43dfb0683df91a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MTY5OGE0OTNmYzU0NzI1NGU2MWRjMjNhNDNkZmIwNjgzZGY5MWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-13T08:31:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-13T08:31:08Z"}, "message": "make things ugly", "tree": {"sha": "456990164645589c8c73440ce60e1b5be45acadd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/456990164645589c8c73440ce60e1b5be45acadd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/861698a493fc547254e61dc23a43dfb0683df91a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/861698a493fc547254e61dc23a43dfb0683df91a", "html_url": "https://github.com/rust-lang/rust/commit/861698a493fc547254e61dc23a43dfb0683df91a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/861698a493fc547254e61dc23a43dfb0683df91a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b5ae01340fdbb31f56453655472b783e5719eb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5ae01340fdbb31f56453655472b783e5719eb9", "html_url": "https://github.com/rust-lang/rust/commit/5b5ae01340fdbb31f56453655472b783e5719eb9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "03f32e726187b09ea86af46601df58465cd16c31", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/861698a493fc547254e61dc23a43dfb0683df91a/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/861698a493fc547254e61dc23a43dfb0683df91a/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=861698a493fc547254e61dc23a43dfb0683df91a", "patch": "@@ -1572,18 +1572,18 @@ impl<T: ?Sized> UnsafeCell<T> {\n     /// use std::mem::MaybeUninit;\n     ///\n     /// let m = MaybeUninit::<UnsafeCell<i32>>::uninit();\n-    /// unsafe { m.as_ptr().raw_get().write(5); }\n+    /// unsafe { UnsafeCell::raw_get(m.as_ptr()).write(5); }\n     /// let uc = unsafe { m.assume_init() };\n     ///\n     /// assert_eq!(uc.into_inner(), 5);\n     /// ```\n     #[inline]\n     #[unstable(feature = \"unsafe_cell_raw_get\", issue = \"66358\")]\n-    pub const fn raw_get(self: *const Self) -> *mut T {\n+    pub const fn raw_get(this: *const Self) -> *mut T {\n         // We can just cast the pointer from `UnsafeCell<T>` to `T` because of\n         // #[repr(transparent)]. This exploits libstd's special status, there is\n         // no guarantee for user code that this will work in future versions of the compiler!\n-        self as *const T as *mut T\n+        this as *const T as *mut T\n     }\n }\n "}]}