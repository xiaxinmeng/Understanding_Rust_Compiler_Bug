{"sha": "2b1d4bf44e27582242e6a99b51e7759fe8a35acb", "node_id": "C_kwDOAAsO6NoAKDJiMWQ0YmY0NGUyNzU4MjI0MmU2YTk5YjUxZTc3NTlmZThhMzVhY2I", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-13T00:42:23Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-19T22:51:50Z"}, "message": "Add extra debug assertions for equality for Adt/Variant/FieldDef", "tree": {"sha": "9275047f593986d5c5401e3d53d35c55d13d0d49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9275047f593986d5c5401e3d53d35c55d13d0d49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b1d4bf44e27582242e6a99b51e7759fe8a35acb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b1d4bf44e27582242e6a99b51e7759fe8a35acb", "html_url": "https://github.com/rust-lang/rust/commit/2b1d4bf44e27582242e6a99b51e7759fe8a35acb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b1d4bf44e27582242e6a99b51e7759fe8a35acb/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "521f4dae1bdf7fe9cf9436ecef9ee7c7442708bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/521f4dae1bdf7fe9cf9436ecef9ee7c7442708bf", "html_url": "https://github.com/rust-lang/rust/commit/521f4dae1bdf7fe9cf9436ecef9ee7c7442708bf"}], "stats": {"total": 49, "additions": 44, "deletions": 5}, "files": [{"sha": "7c5c030c2764e86409554fc0faf01cc5551b396c", "filename": "compiler/rustc_middle/src/ty/adt.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2b1d4bf44e27582242e6a99b51e7759fe8a35acb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1d4bf44e27582242e6a99b51e7759fe8a35acb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fadt.rs?ref=2b1d4bf44e27582242e6a99b51e7759fe8a35acb", "patch": "@@ -111,12 +111,30 @@ impl Ord for AdtDefData {\n     }\n }\n \n-/// There should be only one AdtDef for each `did`, therefore\n-/// it is fine to implement `PartialEq` only based on `did`.\n impl PartialEq for AdtDefData {\n     #[inline]\n     fn eq(&self, other: &Self) -> bool {\n-        self.did == other.did\n+        // There should be only one `AdtDefData` for each `def_id`, therefore\n+        // it is fine to implement `PartialEq` only based on `def_id`.\n+        //\n+        // Below, we exhaustively destructure `self` and `other` so that if the\n+        // definition of `AdtDefData` changes, a compile-error will be produced,\n+        // reminding us to revisit this assumption.\n+\n+        let Self { did: self_def_id, variants: _, flags: _, repr: _ } = self;\n+        let Self { did: other_def_id, variants: _, flags: _, repr: _ } = other;\n+\n+        let res = self_def_id == other_def_id;\n+\n+        // Double check that implicit assumption detailed above.\n+        if cfg!(debug_assertions) && res {\n+            let deep = self.flags == other.flags\n+                && self.repr == other.repr\n+                && self.variants == other.variants;\n+            assert!(deep, \"AdtDefData for the same def-id has differing data\");\n+        }\n+\n+        res\n     }\n }\n "}, {"sha": "ecb191676c2b0c110987b154e82c496fb2e4c96d", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2b1d4bf44e27582242e6a99b51e7759fe8a35acb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1d4bf44e27582242e6a99b51e7759fe8a35acb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=2b1d4bf44e27582242e6a99b51e7759fe8a35acb", "patch": "@@ -1882,7 +1882,20 @@ impl PartialEq for VariantDef {\n \n         let Self { def_id: lhs_def_id, ctor: _, name: _, discr: _, fields: _, flags: _ } = &self;\n         let Self { def_id: rhs_def_id, ctor: _, name: _, discr: _, fields: _, flags: _ } = other;\n-        lhs_def_id == rhs_def_id\n+\n+        let res = lhs_def_id == rhs_def_id;\n+\n+        // Double check that implicit assumption detailed above.\n+        if cfg!(debug_assertions) && res {\n+            let deep = self.ctor == other.ctor\n+                && self.name == other.name\n+                && self.discr == other.discr\n+                && self.fields == other.fields\n+                && self.flags == other.flags;\n+            assert!(deep, \"VariantDef for the same def-id has differing data\");\n+        }\n+\n+        res\n     }\n }\n \n@@ -1937,7 +1950,15 @@ impl PartialEq for FieldDef {\n \n         let Self { did: rhs_did, name: _, vis: _ } = other;\n \n-        lhs_did == rhs_did\n+        let res = lhs_did == rhs_did;\n+\n+        // Double check that implicit assumption detailed above.\n+        if cfg!(debug_assertions) && res {\n+            let deep = self.name == other.name && self.vis == other.vis;\n+            assert!(deep, \"FieldDef for the same def-id has differing data\");\n+        }\n+\n+        res\n     }\n }\n "}]}