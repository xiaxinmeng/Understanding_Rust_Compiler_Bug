{"sha": "daad966be73fabe13d6704476e1581ac555a281e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYWQ5NjZiZTczZmFiZTEzZDY3MDQ0NzZlMTU4MWFjNTU1YTI4MWU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T09:36:39Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-16T09:36:39Z"}, "message": "Some changes necessary for Windows support\n\ncc #977", "tree": {"sha": "ab8f0e6741e2fe1a1a8975e87eddaaa45cb04c59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab8f0e6741e2fe1a1a8975e87eddaaa45cb04c59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daad966be73fabe13d6704476e1581ac555a281e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daad966be73fabe13d6704476e1581ac555a281e", "html_url": "https://github.com/rust-lang/rust/commit/daad966be73fabe13d6704476e1581ac555a281e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daad966be73fabe13d6704476e1581ac555a281e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6144483ef86ae6f3e0e0a3188c174d16e33825f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6144483ef86ae6f3e0e0a3188c174d16e33825f", "html_url": "https://github.com/rust-lang/rust/commit/b6144483ef86ae6f3e0e0a3188c174d16e33825f"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "9a745ad59520e4c7fe17e00dbd9af638072a55d9", "filename": "config.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/daad966be73fabe13d6704476e1581ac555a281e/config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/daad966be73fabe13d6704476e1581ac555a281e/config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.sh?ref=daad966be73fabe13d6704476e1581ac555a281e", "patch": "@@ -12,6 +12,7 @@ fi\n \n HOST_TRIPLE=$(rustc -vV | grep host | cut -d: -f2 | tr -d \" \")\n TARGET_TRIPLE=$HOST_TRIPLE\n+#TARGET_TRIPLE=\"x86_64-pc-windows-gnu\"\n #TARGET_TRIPLE=\"aarch64-unknown-linux-gnu\"\n \n linker=''\n@@ -21,6 +22,9 @@ if [[ \"$HOST_TRIPLE\" != \"$TARGET_TRIPLE\" ]]; then\n       # We are cross-compiling for aarch64. Use the correct linker and run tests in qemu.\n       linker='-Clinker=aarch64-linux-gnu-gcc'\n       RUN_WRAPPER='qemu-aarch64 -L /usr/aarch64-linux-gnu'\n+   elif [[ \"$TARGET_TRIPLE\" == \"x86_64-pc-windows-gnu\" ]]; then\n+      # We are cross-compiling for Windows. Run tests in wine.\n+      RUN_WRAPPER='wine'\n    else\n       echo \"Unknown non-native platform\"\n    fi"}, {"sha": "8b00304e0409414c18ce2a09a4f07ac79c99c4ee", "filename": "src/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/daad966be73fabe13d6704476e1581ac555a281e/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daad966be73fabe13d6704476e1581ac555a281e/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=daad966be73fabe13d6704476e1581ac555a281e", "patch": "@@ -85,18 +85,12 @@ fn clif_sig_from_fn_sig<'tcx>(\n     requires_caller_location: bool,\n ) -> Signature {\n     let abi = match sig.abi {\n-        Abi::System => {\n-            if tcx.sess.target.target.options.is_like_windows {\n-                unimplemented!()\n-            } else {\n-                Abi::C\n-            }\n-        }\n+        Abi::System => Abi::C,\n         abi => abi,\n     };\n     let (call_conv, inputs, output): (CallConv, Vec<Ty<'tcx>>, Ty<'tcx>) = match abi {\n         Abi::Rust => (CallConv::triple_default(triple), sig.inputs().to_vec(), sig.output()),\n-        Abi::C => (CallConv::triple_default(triple), sig.inputs().to_vec(), sig.output()),\n+        Abi::C | Abi::Unadjusted => (CallConv::triple_default(triple), sig.inputs().to_vec(), sig.output()),\n         Abi::RustCall => {\n             assert_eq!(sig.inputs().len(), 2);\n             let extra_args = match sig.inputs().last().unwrap().kind {"}, {"sha": "547ed01503e25949ffdcebc96f37510f36442f8f", "filename": "src/base.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/daad966be73fabe13d6704476e1581ac555a281e/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daad966be73fabe13d6704476e1581ac555a281e/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=daad966be73fabe13d6704476e1581ac555a281e", "patch": "@@ -679,6 +679,17 @@ fn trans_stmt<'tcx>(\n \n                     crate::trap::trap_unimplemented(fx, \"_xgetbv arch intrinsic is not supported\");\n                 }\n+                // ___chkstk, ___chkstk_ms and __alloca are only used on Windows\n+                _ if fx.tcx.symbol_name(fx.instance).name.as_str().starts_with(\"___chkstk\") => {\n+                    crate::trap::trap_unimplemented(fx, \"Stack probes are not supported\");\n+                }\n+                _ if fx.tcx.symbol_name(fx.instance).name.as_str() == \"__alloca\" => {\n+                    crate::trap::trap_unimplemented(fx, \"Alloca is not supported\");\n+                }\n+                // Used in sys::windows::abort_internal\n+                \"int $$0x29\" => {\n+                    crate::trap::trap_unimplemented(fx, \"Windows abort\");\n+                }\n                 _ => unimpl_fatal!(fx.tcx, stmt.source_info.span, \"Inline assembly is not supported\"),\n             }\n         }"}]}