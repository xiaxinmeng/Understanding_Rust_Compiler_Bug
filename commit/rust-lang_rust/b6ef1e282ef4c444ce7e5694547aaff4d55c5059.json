{"sha": "b6ef1e282ef4c444ce7e5694547aaff4d55c5059", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZWYxZTI4MmVmNGM0NDRjZTdlNTY5NDU0N2FhZmY0ZDU1YzUwNTk=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-27T15:13:42Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "clippy dev crater: add option to only check a single one of the listed crates with  --only crate", "tree": {"sha": "9c47cdb04bac6ad29e033e1e903894a7fe410349", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c47cdb04bac6ad29e033e1e903894a7fe410349"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6ef1e282ef4c444ce7e5694547aaff4d55c5059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6ef1e282ef4c444ce7e5694547aaff4d55c5059", "html_url": "https://github.com/rust-lang/rust/commit/b6ef1e282ef4c444ce7e5694547aaff4d55c5059", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6ef1e282ef4c444ce7e5694547aaff4d55c5059/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d257101109e7ed6ca0a561a9e16d51167d2d92d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d257101109e7ed6ca0a561a9e16d51167d2d92d7", "html_url": "https://github.com/rust-lang/rust/commit/d257101109e7ed6ca0a561a9e16d51167d2d92d7"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "ee4ed451ed5d0d047e08ed96d2f6a5d7673b6845", "filename": "clippy_dev/src/crater.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b6ef1e282ef4c444ce7e5694547aaff4d55c5059/clippy_dev%2Fsrc%2Fcrater.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6ef1e282ef4c444ce7e5694547aaff4d55c5059/clippy_dev%2Fsrc%2Fcrater.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fcrater.rs?ref=b6ef1e282ef4c444ce7e5694547aaff4d55c5059", "patch": "@@ -12,6 +12,7 @@ use std::collections::HashMap;\n use std::process::Command;\n use std::{fmt, fs::write, path::PathBuf};\n \n+use clap::ArgMatches;\n use serde::{Deserialize, Serialize};\n use serde_json::Value;\n \n@@ -200,7 +201,7 @@ fn parse_json_message(json_message: &str, krate: &Crate) -> ClippyWarning {\n }\n \n // the main fn\n-pub fn run() {\n+pub fn run(clap_config: &ArgMatches) {\n     let cargo_clippy_path: PathBuf = PathBuf::from(\"target/debug/cargo-clippy\");\n \n     println!(\"Compiling clippy...\");\n@@ -217,12 +218,23 @@ pub fn run() {\n     // download and extract the crates, then run clippy on them and collect clippys warnings\n     // flatten into one big list of warnings\n \n-    let clippy_warnings: Vec<ClippyWarning> = read_crates()\n-        .into_iter()\n-        .map(|krate| krate.download_and_extract())\n-        .map(|krate| krate.run_clippy_lints(&cargo_clippy_path))\n-        .flatten()\n-        .collect();\n+    let clippy_warnings: Vec<ClippyWarning> = if let Some(only_one_crate) = clap_config.value_of(\"only\") {\n+        // only check a single\n+        read_crates()\n+            .into_iter()\n+            .map(|krate| krate.download_and_extract())\n+            .filter(|krate| krate.name == only_one_crate)\n+            .map(|krate| krate.run_clippy_lints(&cargo_clippy_path))\n+            .flatten()\n+            .collect()\n+    } else {\n+        read_crates()\n+            .into_iter()\n+            .map(|krate| krate.download_and_extract())\n+            .map(|krate| krate.run_clippy_lints(&cargo_clippy_path))\n+            .flatten()\n+            .collect()\n+    };\n \n     // generate some stats:\n "}, {"sha": "c4688ba3000a3f217b7f3e8b2d2d37fed9b01d40", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b6ef1e282ef4c444ce7e5694547aaff4d55c5059/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6ef1e282ef4c444ce7e5694547aaff4d55c5059/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=b6ef1e282ef4c444ce7e5694547aaff4d55c5059", "patch": "@@ -10,8 +10,8 @@ fn main() {\n         (\"bless\", Some(matches)) => {\n             bless::bless(matches.is_present(\"ignore-timestamp\"));\n         },\n-        (\"crater\", Some(_)) => {\n-            crater::run();\n+        (\"crater\", Some(matches)) => {\n+            crater::run(&matches);\n         },\n         (\"fmt\", Some(matches)) => {\n             fmt::run(matches.is_present(\"check\"), matches.is_present(\"verbose\"));\n@@ -59,7 +59,17 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n                         .help(\"Include files updated before clippy was built\"),\n                 ),\n         )\n-        .subcommand(SubCommand::with_name(\"crater\").about(\"run clippy on a set of crates and check output\"))\n+        .subcommand(\n+            SubCommand::with_name(\"crater\")\n+                .about(\"run clippy on a set of crates and check output\")\n+                .arg(\n+                    Arg::with_name(\"only\")\n+                        .takes_value(true)\n+                        .value_name(\"CRATE\")\n+                        .long(\"only\")\n+                        .help(\"only process a single crate of the list\"),\n+                ),\n+        )\n         .subcommand(\n             SubCommand::with_name(\"fmt\")\n                 .about(\"Run rustfmt on all projects and tests\")"}]}