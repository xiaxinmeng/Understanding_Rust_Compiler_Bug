{"sha": "e2151497bfb65945102619e019adb677b2f3ed31", "node_id": "C_kwDOAAsO6NoAKGUyMTUxNDk3YmZiNjU5NDUxMDI2MTllMDE5YWRiNjc3YjJmM2VkMzE", "commit": {"author": {"name": "Yuval Dolev", "email": "yuvaldolev2@gmail.com", "date": "2021-10-27T21:05:38Z"}, "committer": {"name": "Yuval Dolev", "email": "yuvaldolev2@gmail.com", "date": "2021-10-29T12:49:55Z"}, "message": "Skip suggestions for the AsRef trait", "tree": {"sha": "02624ffec0a7c3b98108988d89842455201627d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02624ffec0a7c3b98108988d89842455201627d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2151497bfb65945102619e019adb677b2f3ed31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2151497bfb65945102619e019adb677b2f3ed31", "html_url": "https://github.com/rust-lang/rust/commit/e2151497bfb65945102619e019adb677b2f3ed31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2151497bfb65945102619e019adb677b2f3ed31/comments", "author": {"login": "yuvaldolev", "id": 26309875, "node_id": "MDQ6VXNlcjI2MzA5ODc1", "avatar_url": "https://avatars.githubusercontent.com/u/26309875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvaldolev", "html_url": "https://github.com/yuvaldolev", "followers_url": "https://api.github.com/users/yuvaldolev/followers", "following_url": "https://api.github.com/users/yuvaldolev/following{/other_user}", "gists_url": "https://api.github.com/users/yuvaldolev/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvaldolev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvaldolev/subscriptions", "organizations_url": "https://api.github.com/users/yuvaldolev/orgs", "repos_url": "https://api.github.com/users/yuvaldolev/repos", "events_url": "https://api.github.com/users/yuvaldolev/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvaldolev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yuvaldolev", "id": 26309875, "node_id": "MDQ6VXNlcjI2MzA5ODc1", "avatar_url": "https://avatars.githubusercontent.com/u/26309875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvaldolev", "html_url": "https://github.com/yuvaldolev", "followers_url": "https://api.github.com/users/yuvaldolev/followers", "following_url": "https://api.github.com/users/yuvaldolev/following{/other_user}", "gists_url": "https://api.github.com/users/yuvaldolev/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvaldolev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvaldolev/subscriptions", "organizations_url": "https://api.github.com/users/yuvaldolev/orgs", "repos_url": "https://api.github.com/users/yuvaldolev/repos", "events_url": "https://api.github.com/users/yuvaldolev/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvaldolev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37f70a0e1e04086aee7ae57fbefd6d4071953506", "url": "https://api.github.com/repos/rust-lang/rust/commits/37f70a0e1e04086aee7ae57fbefd6d4071953506", "html_url": "https://github.com/rust-lang/rust/commit/37f70a0e1e04086aee7ae57fbefd6d4071953506"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "934b83bd700e1f5daabb61c5aee84b54e54a5610", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2151497bfb65945102619e019adb677b2f3ed31/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2151497bfb65945102619e019adb677b2f3ed31/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=e2151497bfb65945102619e019adb677b2f3ed31", "patch": "@@ -1251,6 +1251,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 self.tcx.lang_items().deref_trait(),\n                 self.tcx.lang_items().deref_mut_trait(),\n                 self.tcx.lang_items().drop_trait(),\n+                self.tcx.get_diagnostic_item(sym::AsRef),\n             ];\n             // Try alternative arbitrary self types that could fulfill this call.\n             // FIXME: probe for all types that *could* be arbitrary self-types, not"}, {"sha": "69cec08652ae92f690eee2b7ef079c7d0f7dff89", "filename": "src/test/ui/typeck/issue-89806.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2151497bfb65945102619e019adb677b2f3ed31/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2151497bfb65945102619e019adb677b2f3ed31/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.rs?ref=e2151497bfb65945102619e019adb677b2f3ed31", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    0u8.as_ref(); //~ ERROR no method named `as_ref` found for type `u8` in the current scope\n+}"}, {"sha": "9a54fac526159cd22e1778b35567b0e45654bbcb", "filename": "src/test/ui/typeck/issue-89806.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e2151497bfb65945102619e019adb677b2f3ed31/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2151497bfb65945102619e019adb677b2f3ed31/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-89806.stderr?ref=e2151497bfb65945102619e019adb677b2f3ed31", "patch": "@@ -0,0 +1,26 @@\n+error[E0599]: no method named `as_ref` found for type `u8` in the current scope\n+  --> $DIR/issue-89806.rs:2:9\n+   |\n+LL |     0u8.as_ref();\n+   |         ^^^^^^ method not found in `u8`\n+   |\n+  ::: $SRC_DIR/core/src/pin.rs:LL:COL\n+   |\n+LL |     pub fn as_ref(&self) -> Pin<&P::Target> {\n+   |            ------\n+   |            |\n+   |            the method is available for `Pin<&mut u8>` here\n+   |            the method is available for `Pin<&u8>` here\n+   |\n+help: consider wrapping the receiver expression with the appropriate type\n+   |\n+LL |     Pin::new(&mut 0u8).as_ref();\n+   |     +++++++++++++    +\n+help: consider wrapping the receiver expression with the appropriate type\n+   |\n+LL |     Pin::new(&0u8).as_ref();\n+   |     ++++++++++   +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}