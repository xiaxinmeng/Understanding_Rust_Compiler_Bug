{"sha": "2daa1b75309be4c98e5614d2fac089b246d6ba79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYWExYjc1MzA5YmU0Yzk4ZTU2MTRkMmZhYzA4OWIyNDZkNmJhNzk=", "commit": {"author": {"name": "diaphore", "email": "diaphore@gmail.com", "date": "2015-08-06T20:44:50Z"}, "committer": {"name": "diaphore", "email": "diaphore@gmail.com", "date": "2015-08-07T01:49:31Z"}, "message": "Trim trailing newline from FormatMessageW", "tree": {"sha": "b72c7ac853c39e98a3851e8c633d2bdce9865516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b72c7ac853c39e98a3851e8c633d2bdce9865516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2daa1b75309be4c98e5614d2fac089b246d6ba79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2daa1b75309be4c98e5614d2fac089b246d6ba79", "html_url": "https://github.com/rust-lang/rust/commit/2daa1b75309be4c98e5614d2fac089b246d6ba79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2daa1b75309be4c98e5614d2fac089b246d6ba79/comments", "author": {"login": "diaphore", "id": 10867111, "node_id": "MDQ6VXNlcjEwODY3MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/10867111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diaphore", "html_url": "https://github.com/diaphore", "followers_url": "https://api.github.com/users/diaphore/followers", "following_url": "https://api.github.com/users/diaphore/following{/other_user}", "gists_url": "https://api.github.com/users/diaphore/gists{/gist_id}", "starred_url": "https://api.github.com/users/diaphore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diaphore/subscriptions", "organizations_url": "https://api.github.com/users/diaphore/orgs", "repos_url": "https://api.github.com/users/diaphore/repos", "events_url": "https://api.github.com/users/diaphore/events{/privacy}", "received_events_url": "https://api.github.com/users/diaphore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "diaphore", "id": 10867111, "node_id": "MDQ6VXNlcjEwODY3MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/10867111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diaphore", "html_url": "https://github.com/diaphore", "followers_url": "https://api.github.com/users/diaphore/followers", "following_url": "https://api.github.com/users/diaphore/following{/other_user}", "gists_url": "https://api.github.com/users/diaphore/gists{/gist_id}", "starred_url": "https://api.github.com/users/diaphore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diaphore/subscriptions", "organizations_url": "https://api.github.com/users/diaphore/orgs", "repos_url": "https://api.github.com/users/diaphore/repos", "events_url": "https://api.github.com/users/diaphore/events{/privacy}", "received_events_url": "https://api.github.com/users/diaphore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb92de75c1c4b7eaaf5d425fb2587407c00701fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb92de75c1c4b7eaaf5d425fb2587407c00701fc", "html_url": "https://github.com/rust-lang/rust/commit/fb92de75c1c4b7eaaf5d425fb2587407c00701fc"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "694d873d0d265f053e38631337f2f292ce628d34", "filename": "src/libstd/sys/windows/os.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2daa1b75309be4c98e5614d2fac089b246d6ba79/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2daa1b75309be4c98e5614d2fac089b246d6ba79/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos.rs?ref=2daa1b75309be4c98e5614d2fac089b246d6ba79", "patch": "@@ -84,9 +84,13 @@ pub fn error_string(errnum: i32) -> String {\n         }\n \n         let b = buf.iter().position(|&b| b == 0).unwrap_or(buf.len());\n-        let msg = String::from_utf16(&buf[..b]);\n-        match msg {\n-            Ok(msg) => msg,\n+        match String::from_utf16(&buf[..b]) {\n+            Ok(mut msg) => {\n+                // Trim trailing CRLF inserted by FormatMessageW\n+                let len = msg.trim_right().len();\n+                msg.truncate(len);\n+                msg\n+            },\n             Err(..) => format!(\"OS Error {} (FormatMessageW() returned \\\n                                 invalid UTF-16)\", errnum),\n         }"}]}