{"sha": "d3024138f8e49e815a205dcb80e2e21decc57aa6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMDI0MTM4ZjhlNDllODE1YTIwNWRjYjgwZTJlMjFkZWNjNTdhYTY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-14T07:00:21Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-14T07:00:21Z"}, "message": "PatKind::Path: avoid calling resolve_ty_and_res_ufcs twice.", "tree": {"sha": "27f1d66d62234732745b90a69e037cac535d1bfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27f1d66d62234732745b90a69e037cac535d1bfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3024138f8e49e815a205dcb80e2e21decc57aa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3024138f8e49e815a205dcb80e2e21decc57aa6", "html_url": "https://github.com/rust-lang/rust/commit/d3024138f8e49e815a205dcb80e2e21decc57aa6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3024138f8e49e815a205dcb80e2e21decc57aa6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdd743755adef8eb27410a9f4e480d3cf74abeaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdd743755adef8eb27410a9f4e480d3cf74abeaf", "html_url": "https://github.com/rust-lang/rust/commit/cdd743755adef8eb27410a9f4e480d3cf74abeaf"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "d27c62037631a883e9b68e7543be525a57f25226", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d3024138f8e49e815a205dcb80e2e21decc57aa6/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3024138f8e49e815a205dcb80e2e21decc57aa6/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=d3024138f8e49e815a205dcb80e2e21decc57aa6", "patch": "@@ -50,6 +50,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n         debug!(\"check_pat_walk(pat={:?},expected={:?},def_bm={:?})\", pat, expected, def_bm);\n \n+        let mut path_resolution = None;\n         let is_non_ref_pat = match pat.node {\n             PatKind::Struct(..) |\n             PatKind::TupleStruct(..) |\n@@ -65,8 +66,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 }\n             }\n             PatKind::Path(ref qpath) => {\n-                let (def, _, _) = self.resolve_ty_and_res_ufcs(qpath, pat.hir_id, pat.span);\n-                match def {\n+                let resolution = self.resolve_ty_and_res_ufcs(qpath, pat.hir_id, pat.span);\n+                path_resolution = Some(resolution);\n+                match resolution.0 {\n                     Res::Def(DefKind::Const, _) | Res::Def(DefKind::AssocConst, _) => false,\n                     _ => true,\n                 }\n@@ -294,7 +296,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 )\n             }\n             PatKind::Path(ref qpath) => {\n-                self.check_pat_path(pat, qpath, expected)\n+                self.check_pat_path(pat, path_resolution.unwrap(), qpath, expected)\n             }\n             PatKind::Struct(ref qpath, ref fields, etc) => {\n                 self.check_pat_struct(pat, qpath, fields, etc, expected, def_bm, discrim_span)\n@@ -1055,13 +1057,14 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n     fn check_pat_path(\n         &self,\n         pat: &hir::Pat,\n+        path_resolution: (Res, Option<Ty<'tcx>>, &'b [hir::PathSegment]),\n         qpath: &hir::QPath,\n         expected: Ty<'tcx>,\n     ) -> Ty<'tcx> {\n         let tcx = self.tcx;\n \n-        // Resolve the path and check the definition for errors.\n-        let (res, opt_ty, segments) = self.resolve_ty_and_res_ufcs(qpath, pat.hir_id, pat.span);\n+        // We have already resolved the path.\n+        let (res, opt_ty, segments) = path_resolution;\n         match res {\n             Res::Err => {\n                 self.set_tainted_by_errors();"}]}