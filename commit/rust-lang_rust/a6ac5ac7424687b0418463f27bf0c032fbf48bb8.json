{"sha": "a6ac5ac7424687b0418463f27bf0c032fbf48bb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YWM1YWM3NDI0Njg3YjA0MTg0NjNmMjdiZjBjMDMyZmJmNDhiYjg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-10T15:57:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-10T15:57:18Z"}, "message": "Merge #5297\n\n5297: Better name r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "71ffb649b48ee965ae0c99df422fc0acc3fdbcc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71ffb649b48ee965ae0c99df422fc0acc3fdbcc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6ac5ac7424687b0418463f27bf0c032fbf48bb8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfCI/eCRBK7hj4Ov3rIwAAdHIIAAfB0Ak6fa4sl6iZmPPYNne3\n0uI3KWMzVEbO2zdRIXAF5syMf57Ok/7qTaFjIOFYBCxNtI7jTwjgq7xKzFf77jxc\nzkx1ShVsXhog7HsSprlS5rGgNlN4QFNFXMYJRic0Hqy0OMihfhPDwkOomcionC06\nGYSOzgGImfNHQnf8Vay2V0uU95dF+BkDwBa5TzAhHqKVCDUjQvQKCSRGuySNGcIT\nZXjiPD/+tDYfmwwE++pxct1gqA26+QszX7zHIFIwl9v9vjXbz8zopwl9+66rWYw/\nVd+BF1qdZBMPkC8Iu/XxCI2V1T+LXrrBE4l1gJZvdnvU9QCLtE1yuBmSBs9lNAg=\n=dKUk\n-----END PGP SIGNATURE-----\n", "payload": "tree 71ffb649b48ee965ae0c99df422fc0acc3fdbcc5\nparent 4ff47096f4a4676be1f4991138865a0154fb4731\nparent 3558736582eebdf47a14940143f87f31304430ee\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1594396638 +0000\ncommitter GitHub <noreply@github.com> 1594396638 +0000\n\nMerge #5297\n\n5297: Better name r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6ac5ac7424687b0418463f27bf0c032fbf48bb8", "html_url": "https://github.com/rust-lang/rust/commit/a6ac5ac7424687b0418463f27bf0c032fbf48bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6ac5ac7424687b0418463f27bf0c032fbf48bb8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff47096f4a4676be1f4991138865a0154fb4731", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff47096f4a4676be1f4991138865a0154fb4731", "html_url": "https://github.com/rust-lang/rust/commit/4ff47096f4a4676be1f4991138865a0154fb4731"}, {"sha": "3558736582eebdf47a14940143f87f31304430ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/3558736582eebdf47a14940143f87f31304430ee", "html_url": "https://github.com/rust-lang/rust/commit/3558736582eebdf47a14940143f87f31304430ee"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "fcdaeef49b000a8ce7cba54a07bde78e69962698", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6ac5ac7424687b0418463f27bf0c032fbf48bb8/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ac5ac7424687b0418463f27bf0c032fbf48bb8/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=a6ac5ac7424687b0418463f27bf0c032fbf48bb8", "patch": "@@ -92,7 +92,7 @@ pub(super) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n         add_keyword(ctx, acc, \"union\", \"union $0 {}\");\n     }\n \n-    if ctx.can_be_expr {\n+    if ctx.is_expr {\n         add_keyword(ctx, acc, \"match\", \"match $0 {}\");\n         add_keyword(ctx, acc, \"while\", \"while $0 {}\");\n         add_keyword(ctx, acc, \"loop\", \"loop {$0}\");"}, {"sha": "02811a91e21399ef805279b2d279443cce61e45e", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6ac5ac7424687b0418463f27bf0c032fbf48bb8/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6ac5ac7424687b0418463f27bf0c032fbf48bb8/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=a6ac5ac7424687b0418463f27bf0c032fbf48bb8", "patch": "@@ -54,7 +54,7 @@ pub(crate) struct CompletionContext<'a> {\n     /// `true` if we are a statement or a last expr in the block.\n     pub(super) can_be_stmt: bool,\n     /// `true` if we expect an expression at the cursor position.\n-    pub(super) can_be_expr: bool,\n+    pub(super) is_expr: bool,\n     /// Something is typed at the \"top\" level, in module or impl/trait.\n     pub(super) is_new_item: bool,\n     /// The receiver if this is a field or method access, i.e. writing something.<|>\n@@ -129,7 +129,7 @@ impl<'a> CompletionContext<'a> {\n             path_prefix: None,\n             after_if: false,\n             can_be_stmt: false,\n-            can_be_expr: false,\n+            is_expr: false,\n             is_new_item: false,\n             dot_receiver: None,\n             is_call: false,\n@@ -406,7 +406,7 @@ impl<'a> CompletionContext<'a> {\n                         None\n                     })\n                     .unwrap_or(false);\n-                self.can_be_expr = path.syntax().parent().and_then(ast::PathExpr::cast).is_some();\n+                self.is_expr = path.syntax().parent().and_then(ast::PathExpr::cast).is_some();\n \n                 if let Some(off) = name_ref.syntax().text_range().start().checked_sub(2.into()) {\n                     if let Some(if_expr) ="}]}