{"sha": "8e50e500a6778b012259821748f2bb271d5d39ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNTBlNTAwYTY3NzhiMDEyMjU5ODIxNzQ4ZjJiYjI3MWQ1ZDM5ZWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-06-09T07:54:32Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-06-09T07:54:32Z"}, "message": "Merge pull request #996 from Manishearth/feature\n\nAutomatically defines the `clippy` feature", "tree": {"sha": "120340c5d8b81fa3df0a73a16c26b9991d3f2806", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/120340c5d8b81fa3df0a73a16c26b9991d3f2806"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e50e500a6778b012259821748f2bb271d5d39ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e50e500a6778b012259821748f2bb271d5d39ea", "html_url": "https://github.com/rust-lang/rust/commit/8e50e500a6778b012259821748f2bb271d5d39ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e50e500a6778b012259821748f2bb271d5d39ea/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8411c5eb4c051c816beaadcb39ed7eb359363d84", "url": "https://api.github.com/repos/rust-lang/rust/commits/8411c5eb4c051c816beaadcb39ed7eb359363d84", "html_url": "https://github.com/rust-lang/rust/commit/8411c5eb4c051c816beaadcb39ed7eb359363d84"}, {"sha": "d7ba66bf44f993e64114e17cc15f1b0d56ae8f70", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ba66bf44f993e64114e17cc15f1b0d56ae8f70", "html_url": "https://github.com/rust-lang/rust/commit/d7ba66bf44f993e64114e17cc15f1b0d56ae8f70"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "4009246507c261cfd02dba424a5eb6a46f21160e", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8e50e500a6778b012259821748f2bb271d5d39ea/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/8e50e500a6778b012259821748f2bb271d5d39ea/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=8e50e500a6778b012259821748f2bb271d5d39ea", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.76 \u2014 TBD\n+* `cargo clippy` now automatically defines the `clippy` feature\n+\n ## 0.0.75 \u2014 2016-06-08\n * Rustup to *rustc 1.11.0-nightly (763f9234b 2016-06-06)*\n "}, {"sha": "2e40f6ed74c5642617d757f4e0a535476fcb5bbb", "filename": "README.md", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/8e50e500a6778b012259821748f2bb271d5d39ea/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8e50e500a6778b012259821748f2bb271d5d39ea/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8e50e500a6778b012259821748f2bb271d5d39ea", "patch": "@@ -245,22 +245,6 @@ similar crates.\n SYSROOT=/path/to/rustc/sysroot cargo install clippy\n ```\n \n-### Configuring clippy\n-\n-You can add options  to `allow`/`warn`/`deny`:\n-\n-*   the whole set of `Warn` lints using the `clippy` lint group (`#![deny(clippy)]`)\n-\n-*   all lints using both the `clippy` and `clippy_pedantic` lint groups (`#![deny(clippy)]`,\n-    `#![deny(clippy_pedantic)]`). Note that `clippy_pedantic` contains some very aggressive\n-    lints prone to false positives.\n-\n-*   only some lints (`#![deny(single_match, box_vec)]`, etc)\n-\n-*   `allow`/`warn`/`deny` can be limited to a single function or module using `#[allow(...)]`, etc\n-\n-Note: `deny` produces errors instead of warnings\n-\n ### Running clippy from the command line without installing\n \n To have cargo compile your crate with clippy without needing `#![plugin(clippy)]`\n@@ -321,6 +305,29 @@ You can also specify the path to the configuration file with:\n To deactivate the \u201cfor further information visit *wiki-link*\u201d message you can\n define the `CLIPPY_DISABLE_WIKI_LINKS` environment variable.\n \n+### Allowing/denying lints\n+\n+You can add options  to `allow`/`warn`/`deny`:\n+\n+*   the whole set of `Warn` lints using the `clippy` lint group (`#![deny(clippy)]`)\n+\n+*   all lints using both the `clippy` and `clippy_pedantic` lint groups (`#![deny(clippy)]`,\n+    `#![deny(clippy_pedantic)]`). Note that `clippy_pedantic` contains some very aggressive\n+    lints prone to false positives.\n+\n+*   only some lints (`#![deny(single_match, box_vec)]`, etc)\n+\n+*   `allow`/`warn`/`deny` can be limited to a single function or module using `#[allow(...)]`, etc\n+\n+Note: `deny` produces errors instead of warnings.\n+\n+For convenience, `cargo clippy` automatically defines a `clippy` features. This\n+lets you set lints level and compile with or without clippy transparently:\n+\n+```rust\n+#[cfg_attr(feature = \"clippy\", allow(needless_lifetimes))]\n+```\n+\n ## Link with clippy service\n \n `clippy-service` is a rust web initiative providing `rust-clippy` as a web service."}, {"sha": "43483e76a0fda28f000f4c87ea27fe050fe18590", "filename": "src/main.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8e50e500a6778b012259821748f2bb271d5d39ea/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e50e500a6778b012259821748f2bb271d5d39ea/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=8e50e500a6778b012259821748f2bb271d5d39ea", "patch": "@@ -141,11 +141,14 @@ pub fn main() {\n             }\n         }\n     } else {\n-        let args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n+        let mut args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n             env::args().collect()\n         } else {\n             env::args().chain(Some(\"--sysroot\".to_owned())).chain(Some(sys_root)).collect()\n         };\n+\n+        args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"clippy\"\"#.to_owned()]);\n+\n         let (result, _) = rustc_driver::run_compiler(&args, &mut ClippyCompilerCalls::new());\n \n         if let Err(err_count) = result {\n@@ -174,6 +177,8 @@ fn process<P, I>(old_args: I, dep_path: P, sysroot: &str) -> Result<(), i32>\n     args.push(String::from(\"--sysroot\"));\n     args.push(sysroot.to_owned());\n     args.push(\"-Zno-trans\".to_owned());\n+    args.push(\"--cfg\".to_owned());\n+    args.push(r#\"feature=\"clippy\"\"#.to_owned());\n \n     let path = std::env::current_exe().expect(\"current executable path invalid\");\n     let exit_status = std::process::Command::new(\"cargo\")"}]}