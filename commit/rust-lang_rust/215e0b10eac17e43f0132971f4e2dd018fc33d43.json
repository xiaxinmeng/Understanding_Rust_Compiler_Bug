{"sha": "215e0b10eac17e43f0132971f4e2dd018fc33d43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNWUwYjEwZWFjMTdlNDNmMDEzMjk3MWY0ZTJkZDAxOGZjMzNkNDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-08T19:34:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-08T19:34:05Z"}, "message": "Auto merge of #43711 - lu-zero:master, r=nagisa\n\nMore Altivec intrinsics\n\nBeside the usual json + generated files, I added two additional modifiers in the generator.", "tree": {"sha": "400d0b6314c7e0c51621848ebbbf4da6ab79dca9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/400d0b6314c7e0c51621848ebbbf4da6ab79dca9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/215e0b10eac17e43f0132971f4e2dd018fc33d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/215e0b10eac17e43f0132971f4e2dd018fc33d43", "html_url": "https://github.com/rust-lang/rust/commit/215e0b10eac17e43f0132971f4e2dd018fc33d43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/215e0b10eac17e43f0132971f4e2dd018fc33d43/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc02deb07d609fc14d119622a53c55eca3e534e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc02deb07d609fc14d119622a53c55eca3e534e", "html_url": "https://github.com/rust-lang/rust/commit/ddc02deb07d609fc14d119622a53c55eca3e534e"}, {"sha": "8b78ea5b84cd528bce291bd8196bc83cd96c9819", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b78ea5b84cd528bce291bd8196bc83cd96c9819", "html_url": "https://github.com/rust-lang/rust/commit/8b78ea5b84cd528bce291bd8196bc83cd96c9819"}], "stats": {"total": 199, "additions": 198, "deletions": 1}, "files": [{"sha": "e9cf71c32fe9a2d83821dffcdf8b7543fac7757b", "filename": "src/etc/platform-intrinsics/generator.py", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/215e0b10eac17e43f0132971f4e2dd018fc33d43/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "raw_url": "https://github.com/rust-lang/rust/raw/215e0b10eac17e43f0132971f4e2dd018fc33d43/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py?ref=215e0b10eac17e43f0132971f4e2dd018fc33d43", "patch": "@@ -19,7 +19,7 @@\n SPEC = re.compile(\n     r'^(?:(?P<void>V)|(?P<id>[iusfIUSF])(?:\\((?P<start>\\d+)-(?P<end>\\d+)\\)|'\n     r'(?P<width>\\d+)(:?/(?P<llvm_width>\\d+))?)'\n-    r'|(?P<reference>\\d+))(?P<index>\\.\\d+)?(?P<modifiers>[vShdnwusfDMC]*)(?P<force_width>x\\d+)?'\n+    r'|(?P<reference>\\d+))(?P<index>\\.\\d+)?(?P<modifiers>[vShdnwusfDMCNW]*)(?P<force_width>x\\d+)?'\n     r'(?:(?P<pointer>Pm|Pc)(?P<llvm_pointer>/.*)?|(?P<bitcast>->.*))?$'\n )\n \n@@ -246,6 +246,12 @@ def modify(self, spec, width, previous):\n             return Vector(self._elem, self._length // 2)\n         elif spec == 'd':\n             return Vector(self._elem, self._length * 2)\n+        elif spec == 'N':\n+            elem = self._elem.__class__(self._elem.bitwidth() // 2)\n+            return Vector(elem, self._length * 2)\n+        elif spec == 'W':\n+            elem = self._elem.__class__(self._elem.bitwidth() * 2)\n+            return Vector(elem, self._length // 2)\n         elif spec.startswith('x'):\n             new_bitwidth = int(spec[1:])\n             return Vector(self._elem, new_bitwidth // self._elem.bitwidth())\n@@ -714,6 +720,8 @@ def parse_args():\n         - 'd': double the length of the vector (u32x2 -> u32x4)\n         - 'n': narrow the element of the vector (u32x4 -> u16x4)\n         - 'w': widen the element of the vector (u16x4 -> u32x4)\n+        - 'N': half the length of the vector element (u32x4 -> u16x8)\n+        - 'W': double the length of the vector element (u16x8 -> u32x4)\n         - 'u': force a number (vector or scalar) to be unsigned int (f32x4 -> u32x4)\n         - 's': force a number (vector or scalar) to be signed int (u32x4 -> i32x4)\n         - 'f': force a number (vector or scalar) to be float (u32x4 -> f32x4)"}, {"sha": "c70791be030f7afa3710b4f7fe7abfed59542de8", "filename": "src/etc/platform-intrinsics/powerpc.json", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/215e0b10eac17e43f0132971f4e2dd018fc33d43/src%2Fetc%2Fplatform-intrinsics%2Fpowerpc.json", "raw_url": "https://github.com/rust-lang/rust/raw/215e0b10eac17e43f0132971f4e2dd018fc33d43/src%2Fetc%2Fplatform-intrinsics%2Fpowerpc.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fpowerpc.json?ref=215e0b10eac17e43f0132971f4e2dd018fc33d43", "patch": "@@ -72,6 +72,55 @@\n             \"llvm\": \"vmin{0.kind}{0.data_type_short}\",\n             \"ret\": \"i(8-32)\",\n             \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"sub{0.kind}{0.data_type_short}s\",\n+            \"width\": [128],\n+            \"llvm\": \"vsub{0.kind}{0.data_type_short}s\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"subc\",\n+            \"width\": [128],\n+            \"llvm\": \"vsubcuw\",\n+            \"ret\": \"u32\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"add{0.kind}{0.data_type_short}s\",\n+            \"width\": [128],\n+            \"llvm\": \"vadd{0.kind}{0.data_type_short}s\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"addc\",\n+            \"width\": [128],\n+            \"llvm\": \"vaddcuw\",\n+            \"ret\": \"u32\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"mule{1.kind}{1.data_type_short}\",\n+            \"width\": [128],\n+            \"llvm\": \"vmule{0.kind}{1.data_type_short}\",\n+            \"ret\": \"i(16-32)\",\n+            \"args\": [\"0N\", \"1\"]\n+        },\n+        {\n+            \"intrinsic\": \"mulo{1.kind}{1.data_type_short}\",\n+            \"width\": [128],\n+            \"llvm\": \"vmulo{0.kind}{1.data_type_short}\",\n+            \"ret\": \"i(16-32)\",\n+            \"args\": [\"0N\", \"1\"]\n+        },\n+        {\n+            \"intrinsic\": \"avg{0.kind}{0.data_type_short}\",\n+            \"width\": [128],\n+            \"llvm\": \"vavg{0.kind}{0.data_type_short}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\", \"0\"]\n         }\n     ]\n }"}, {"sha": "b38369665f89c442c7df8a8d2c0bea9cfa9a079c", "filename": "src/librustc_platform_intrinsics/powerpc.rs", "status": "modified", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/215e0b10eac17e43f0132971f4e2dd018fc33d43/src%2Flibrustc_platform_intrinsics%2Fpowerpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/215e0b10eac17e43f0132971f4e2dd018fc33d43/src%2Flibrustc_platform_intrinsics%2Fpowerpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Fpowerpc.rs?ref=215e0b10eac17e43f0132971f4e2dd018fc33d43", "patch": "@@ -142,6 +142,146 @@ pub fn find(name: &str) -> Option<Intrinsic> {\n             output: &::U32x4,\n             definition: Named(\"llvm.ppc.altivec.vminuw\")\n         },\n+        \"_vec_subsbs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I8x16, &::I8x16]; &INPUTS },\n+            output: &::I8x16,\n+            definition: Named(\"llvm.ppc.altivec.vsubsbs\")\n+        },\n+        \"_vec_sububs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U8x16, &::U8x16]; &INPUTS },\n+            output: &::U8x16,\n+            definition: Named(\"llvm.ppc.altivec.vsububs\")\n+        },\n+        \"_vec_subshs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I16x8, &::I16x8]; &INPUTS },\n+            output: &::I16x8,\n+            definition: Named(\"llvm.ppc.altivec.vsubshs\")\n+        },\n+        \"_vec_subuhs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U16x8, &::U16x8]; &INPUTS },\n+            output: &::U16x8,\n+            definition: Named(\"llvm.ppc.altivec.vsubuhs\")\n+        },\n+        \"_vec_subsws\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I32x4, &::I32x4]; &INPUTS },\n+            output: &::I32x4,\n+            definition: Named(\"llvm.ppc.altivec.vsubsws\")\n+        },\n+        \"_vec_subuws\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U32x4, &::U32x4]; &INPUTS },\n+            output: &::U32x4,\n+            definition: Named(\"llvm.ppc.altivec.vsubuws\")\n+        },\n+        \"_vec_subc\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U32x4, &::U32x4]; &INPUTS },\n+            output: &::U32x4,\n+            definition: Named(\"llvm.ppc.altivec.vsubcuw\")\n+        },\n+        \"_vec_addsbs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I8x16, &::I8x16]; &INPUTS },\n+            output: &::I8x16,\n+            definition: Named(\"llvm.ppc.altivec.vaddsbs\")\n+        },\n+        \"_vec_addubs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U8x16, &::U8x16]; &INPUTS },\n+            output: &::U8x16,\n+            definition: Named(\"llvm.ppc.altivec.vaddubs\")\n+        },\n+        \"_vec_addshs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I16x8, &::I16x8]; &INPUTS },\n+            output: &::I16x8,\n+            definition: Named(\"llvm.ppc.altivec.vaddshs\")\n+        },\n+        \"_vec_adduhs\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U16x8, &::U16x8]; &INPUTS },\n+            output: &::U16x8,\n+            definition: Named(\"llvm.ppc.altivec.vadduhs\")\n+        },\n+        \"_vec_addsws\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I32x4, &::I32x4]; &INPUTS },\n+            output: &::I32x4,\n+            definition: Named(\"llvm.ppc.altivec.vaddsws\")\n+        },\n+        \"_vec_adduws\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U32x4, &::U32x4]; &INPUTS },\n+            output: &::U32x4,\n+            definition: Named(\"llvm.ppc.altivec.vadduws\")\n+        },\n+        \"_vec_addc\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U32x4, &::U32x4]; &INPUTS },\n+            output: &::U32x4,\n+            definition: Named(\"llvm.ppc.altivec.vaddcuw\")\n+        },\n+        \"_vec_mulesb\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I8x16, &::I8x16]; &INPUTS },\n+            output: &::I16x8,\n+            definition: Named(\"llvm.ppc.altivec.vmulesb\")\n+        },\n+        \"_vec_muleub\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U8x16, &::U8x16]; &INPUTS },\n+            output: &::U16x8,\n+            definition: Named(\"llvm.ppc.altivec.vmuleub\")\n+        },\n+        \"_vec_mulesh\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I16x8, &::I16x8]; &INPUTS },\n+            output: &::I32x4,\n+            definition: Named(\"llvm.ppc.altivec.vmulesh\")\n+        },\n+        \"_vec_muleuh\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U16x8, &::U16x8]; &INPUTS },\n+            output: &::U32x4,\n+            definition: Named(\"llvm.ppc.altivec.vmuleuh\")\n+        },\n+        \"_vec_mulosb\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I8x16, &::I8x16]; &INPUTS },\n+            output: &::I16x8,\n+            definition: Named(\"llvm.ppc.altivec.vmulosb\")\n+        },\n+        \"_vec_muloub\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U8x16, &::U8x16]; &INPUTS },\n+            output: &::U16x8,\n+            definition: Named(\"llvm.ppc.altivec.vmuloub\")\n+        },\n+        \"_vec_mulosh\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I16x8, &::I16x8]; &INPUTS },\n+            output: &::I32x4,\n+            definition: Named(\"llvm.ppc.altivec.vmulosh\")\n+        },\n+        \"_vec_mulouh\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U16x8, &::U16x8]; &INPUTS },\n+            output: &::U32x4,\n+            definition: Named(\"llvm.ppc.altivec.vmulouh\")\n+        },\n+        \"_vec_avgsb\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I8x16, &::I8x16]; &INPUTS },\n+            output: &::I8x16,\n+            definition: Named(\"llvm.ppc.altivec.vavgsb\")\n+        },\n+        \"_vec_avgub\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U8x16, &::U8x16]; &INPUTS },\n+            output: &::U8x16,\n+            definition: Named(\"llvm.ppc.altivec.vavgub\")\n+        },\n+        \"_vec_avgsh\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I16x8, &::I16x8]; &INPUTS },\n+            output: &::I16x8,\n+            definition: Named(\"llvm.ppc.altivec.vavgsh\")\n+        },\n+        \"_vec_avguh\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U16x8, &::U16x8]; &INPUTS },\n+            output: &::U16x8,\n+            definition: Named(\"llvm.ppc.altivec.vavguh\")\n+        },\n+        \"_vec_avgsw\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::I32x4, &::I32x4]; &INPUTS },\n+            output: &::I32x4,\n+            definition: Named(\"llvm.ppc.altivec.vavgsw\")\n+        },\n+        \"_vec_avguw\" => Intrinsic {\n+            inputs: { static INPUTS: [&'static Type; 2] = [&::U32x4, &::U32x4]; &INPUTS },\n+            output: &::U32x4,\n+            definition: Named(\"llvm.ppc.altivec.vavguw\")\n+        },\n         _ => return None,\n     })\n }"}]}