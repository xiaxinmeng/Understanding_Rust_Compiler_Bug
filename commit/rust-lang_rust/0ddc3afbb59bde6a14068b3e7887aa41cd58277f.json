{"sha": "0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZGMzYWZiYjU5YmRlNmExNDA2OGIzZTc4ODdhYTQxY2Q1ODI3N2Y=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-06-07T19:17:11Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-06-07T19:17:11Z"}, "message": "build doctests with lld if use-lld = true", "tree": {"sha": "deeec84146b9f1169dc0fda6a5ef7f4990b40365", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/deeec84146b9f1169dc0fda6a5ef7f4990b40365"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "html_url": "https://github.com/rust-lang/rust/commit/0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2312ff1a850db449b79fd3c4b215395cd2598c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/2312ff1a850db449b79fd3c4b215395cd2598c25", "html_url": "https://github.com/rust-lang/rust/commit/2312ff1a850db449b79fd3c4b215395cd2598c25"}], "stats": {"total": 43, "additions": 27, "deletions": 16}, "files": [{"sha": "e4396d53016ea5cf6cf0b95a90de99249cb2f0ab", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "patch": "@@ -41,7 +41,12 @@ fn main() {\n         cmd.arg(arg);\n     }\n     if env::var_os(\"RUSTDOC_FUSE_LD_LLD\").is_some() {\n-        cmd.arg(\"-Clink-args=-fuse-ld=lld\");\n+        cmd.arg(\"-Clink-arg=-fuse-ld=lld\");\n+        if cfg!(windows) {\n+            cmd.arg(\"-Clink-arg=-Wl,/threads:1\");\n+        } else {\n+            cmd.arg(\"-Clink-arg=-Wl,--threads=1\");\n+        }\n     }\n \n     // Needed to be able to run all rustdoc tests."}, {"sha": "bc499fdba5996379d74b4926102d371705d77684", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "patch": "@@ -1142,6 +1142,7 @@ impl<'a> Builder<'a> {\n         }\n         if self.is_fuse_ld_lld(compiler.host) {\n             cargo.env(\"RUSTC_HOST_FUSE_LD_LLD\", \"1\");\n+            cargo.env(\"RUSTDOC_FUSE_LD_LLD\", \"1\");\n         }\n \n         if let Some(target_linker) = self.linker(target) {\n@@ -1151,6 +1152,9 @@ impl<'a> Builder<'a> {\n         if self.is_fuse_ld_lld(target) {\n             rustflags.arg(\"-Clink-args=-fuse-ld=lld\");\n         }\n+        self.lld_flags(target).for_each(|flag| {\n+            rustdocflags.arg(&flag);\n+        });\n \n         if !([\"build\", \"check\", \"clippy\", \"fix\", \"rustc\"].contains(&cmd)) && want_rustdoc {\n             cargo.env(\"RUSTDOC_LIBDIR\", self.rustc_libdir(compiler));"}, {"sha": "347236c655a02d90a3af1740b308d4d6fc226453", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "patch": "@@ -923,6 +923,21 @@ impl Build {\n         self.config.use_lld && !target.contains(\"msvc\")\n     }\n \n+    fn lld_flags(&self, target: TargetSelection) -> impl Iterator<Item = String> {\n+        let mut options = [None, None];\n+\n+        if self.config.use_lld {\n+            if self.is_fuse_ld_lld(target) {\n+                options[0] = Some(\"-Clink-arg=-fuse-ld=lld\".to_string());\n+            }\n+\n+            let threads = if target.contains(\"windows\") { \"/threads:1\" } else { \"--threads=1\" };\n+            options[1] = Some(format!(\"-Clink-arg=-Wl,{}\", threads));\n+        }\n+\n+        std::array::IntoIter::new(options).flatten()\n+    }\n+\n     /// Returns if this target should statically link the C runtime, if specified\n     fn crt_static(&self, target: TargetSelection) -> Option<bool> {\n         if target.contains(\"pc-windows-msvc\") {"}, {"sha": "70cf1b105c0620d934d86a7c95192a871ca9cfa1", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ddc3afbb59bde6a14068b3e7887aa41cd58277f/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=0ddc3afbb59bde6a14068b3e7887aa41cd58277f", "patch": "@@ -1131,19 +1131,6 @@ struct Compiletest {\n     compare_mode: Option<&'static str>,\n }\n \n-impl Compiletest {\n-    fn add_lld_flags(builder: &Builder<'_>, target: TargetSelection, flags: &mut Vec<String>) {\n-        if builder.config.use_lld {\n-            if builder.is_fuse_ld_lld(target) {\n-                flags.push(\"-Clink-arg=-fuse-ld=lld\".to_string());\n-            }\n-\n-            let threads = if target.contains(\"windows\") { \"/threads:1\" } else { \"--threads=1\" };\n-            flags.push(format!(\"-Clink-arg=-Wl,{}\", threads));\n-        }\n-    }\n-}\n-\n impl Step for Compiletest {\n     type Output = ();\n \n@@ -1289,12 +1276,12 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n \n         let mut hostflags = flags.clone();\n         hostflags.push(format!(\"-Lnative={}\", builder.test_helpers_out(compiler.host).display()));\n-        Self::add_lld_flags(builder, compiler.host, &mut hostflags);\n+        hostflags.extend(builder.lld_flags(compiler.host));\n         cmd.arg(\"--host-rustcflags\").arg(hostflags.join(\" \"));\n \n         let mut targetflags = flags;\n         targetflags.push(format!(\"-Lnative={}\", builder.test_helpers_out(target).display()));\n-        Self::add_lld_flags(builder, target, &mut targetflags);\n+        targetflags.extend(builder.lld_flags(target));\n         cmd.arg(\"--target-rustcflags\").arg(targetflags.join(\" \"));\n \n         cmd.arg(\"--docck-python\").arg(builder.python());"}]}