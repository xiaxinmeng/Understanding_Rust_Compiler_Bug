{"sha": "991d466c180d1c5733fc29d14f131d81e3d2db13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MWQ0NjZjMTgwZDFjNTczM2ZjMjlkMTRmMTMxZDgxZTNkMmRiMTM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-21T18:54:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-21T18:54:00Z"}, "message": "rustc: Compress bytecode files in rlibs\n\nThese are only ever used with LTO, so there's no need for reading them to be\nspeedy.", "tree": {"sha": "80c4becceea707b8c8d2c0e066138a889ec52936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80c4becceea707b8c8d2c0e066138a889ec52936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/991d466c180d1c5733fc29d14f131d81e3d2db13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/991d466c180d1c5733fc29d14f131d81e3d2db13", "html_url": "https://github.com/rust-lang/rust/commit/991d466c180d1c5733fc29d14f131d81e3d2db13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/991d466c180d1c5733fc29d14f131d81e3d2db13/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6532d2fa0d173e4f815ac2144ff9860f5343cd7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6532d2fa0d173e4f815ac2144ff9860f5343cd7d", "html_url": "https://github.com/rust-lang/rust/commit/6532d2fa0d173e4f815ac2144ff9860f5343cd7d"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "bd0748761ee7ab376959bb7d4dc61cfdcf58b825", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/991d466c180d1c5733fc29d14f131d81e3d2db13/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991d466c180d1c5733fc29d14f131d81e3d2db13/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=991d466c180d1c5733fc29d14f131d81e3d2db13", "patch": "@@ -34,6 +34,7 @@ use std::run;\n use std::str;\n use std::io;\n use std::io::fs;\n+use flate;\n use serialize::hex::ToHex;\n use extra::tempfile::TempDir;\n use syntax::abi;\n@@ -942,6 +943,15 @@ fn link_rlib(sess: Session,\n             // For LTO purposes, the bytecode of this library is also inserted\n             // into the archive.\n             let bc = obj_filename.with_extension(\"bc\");\n+            match fs::File::open(&bc).read_to_end().and_then(|data| {\n+                fs::File::create(&bc).write(flate::deflate_bytes(data))\n+            }) {\n+                Ok(()) => {}\n+                Err(e) => {\n+                    sess.err(format!(\"failed to compress bytecode: {}\", e));\n+                    sess.abort_if_errors()\n+                }\n+            }\n             a.add_file(&bc, false);\n             if !sess.opts.cg.save_temps &&\n                !sess.opts.output_types.contains(&OutputTypeBitcode) {"}, {"sha": "75fde2fdc51403bde3a8e0ad26dcd5f2eaa24387", "filename": "src/librustc/back/lto.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/991d466c180d1c5733fc29d14f131d81e3d2db13/src%2Flibrustc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991d466c180d1c5733fc29d14f131d81e3d2db13/src%2Flibrustc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flto.rs?ref=991d466c180d1c5733fc29d14f131d81e3d2db13", "patch": "@@ -16,6 +16,7 @@ use metadata::cstore;\n use util::common::time;\n \n use std::libc;\n+use flate;\n \n pub fn run(sess: session::Session, llmod: ModuleRef,\n            tm: TargetMachineRef, reachable: &[~str]) {\n@@ -55,6 +56,8 @@ pub fn run(sess: session::Session, llmod: ModuleRef,\n         let bc = time(sess.time_passes(), format!(\"read {}.bc\", name), (), |_|\n                       archive.read(format!(\"{}.bc\", name)));\n         let bc = bc.expect(\"missing bytecode in archive!\");\n+        let bc = time(sess.time_passes(), format!(\"inflate {}.bc\", name), (), |_|\n+                      flate::inflate_bytes(bc));\n         let ptr = bc.as_ptr();\n         debug!(\"linking {}\", name);\n         time(sess.time_passes(), format!(\"ll link {}\", name), (), |()| unsafe {"}]}