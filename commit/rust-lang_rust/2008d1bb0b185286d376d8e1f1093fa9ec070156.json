{"sha": "2008d1bb0b185286d376d8e1f1093fa9ec070156", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMDhkMWJiMGIxODUyODZkMzc2ZDhlMWYxMDkzZmE5ZWMwNzAxNTY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-29T03:08:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-29T03:08:38Z"}, "message": "Rollup merge of #77213 - ijackson:wip-rustdoc-settings, r=jyn514,GuillaumeGomez\n\nrustdoc options to set default theme (and other settings)\n\nHi.  This is the MR I promised in #77024\n\nIt is a little more general than I envisaged there.  Once I had found the settings-handling machinery it seemed foolish to add this feature just for the theme.\n\nCloses #77024", "tree": {"sha": "3841b4703a7378269013f1b4bb44f16dc5710f51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3841b4703a7378269013f1b4bb44f16dc5710f51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2008d1bb0b185286d376d8e1f1093fa9ec070156", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfmjI2CRBK7hj4Ov3rIwAAdHIIAKC4c+XH/AtntfmjFTU6odmP\nRdvrNDrR89RXJTzFOwXu/lTbr+BPri9WMFXszIZTYIYAabN4bGrb2s/o0oNTMu/S\n/DFYHbgI5pGFRQu3R7rPvRir5LQd43g/ZxGvigs5dIlI1w23/pY0sRShCaGqT6aD\nKFzcvpfBncpfkvbHDEFrSBU8w+dZtfUTUb8H5ZBZEcwvyPhdnB3b6PEEVqYd28AR\nPesobwVK68iXOiNPyoYfoEsu6Tl06xOlNohifz8PSt7t9b+GGWcMbQHoajRUZAuf\nNihsUYKBmiSex0R/2pHKMpeJp9pov+9kDdjdFyWfBVBuFFCgOT6qprxpkN0frBU=\n=qZWU\n-----END PGP SIGNATURE-----\n", "payload": "tree 3841b4703a7378269013f1b4bb44f16dc5710f51\nparent 31ee872db5aae4750e3da1ca4ed1523c4356947f\nparent 776e204609fe4c664eb64af47703427807627c8e\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603940918 +0900\ncommitter GitHub <noreply@github.com> 1603940918 +0900\n\nRollup merge of #77213 - ijackson:wip-rustdoc-settings, r=jyn514,GuillaumeGomez\n\nrustdoc options to set default theme (and other settings)\n\nHi.  This is the MR I promised in #77024\n\nIt is a little more general than I envisaged there.  Once I had found the settings-handling machinery it seemed foolish to add this feature just for the theme.\n\nCloses #77024\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2008d1bb0b185286d376d8e1f1093fa9ec070156", "html_url": "https://github.com/rust-lang/rust/commit/2008d1bb0b185286d376d8e1f1093fa9ec070156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2008d1bb0b185286d376d8e1f1093fa9ec070156/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ee872db5aae4750e3da1ca4ed1523c4356947f", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ee872db5aae4750e3da1ca4ed1523c4356947f", "html_url": "https://github.com/rust-lang/rust/commit/31ee872db5aae4750e3da1ca4ed1523c4356947f"}, {"sha": "776e204609fe4c664eb64af47703427807627c8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/776e204609fe4c664eb64af47703427807627c8e", "html_url": "https://github.com/rust-lang/rust/commit/776e204609fe4c664eb64af47703427807627c8e"}], "stats": {"total": 134, "additions": 109, "deletions": 25}, "files": [{"sha": "02885f519363c1b0b06ec735eb1f0f48eca3a205", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -1,4 +1,4 @@\n-use std::collections::BTreeMap;\n+use std::collections::{BTreeMap, HashMap};\n use std::convert::TryFrom;\n use std::ffi::OsStr;\n use std::fmt;\n@@ -216,6 +216,9 @@ pub struct RenderOptions {\n     pub extension_css: Option<PathBuf>,\n     /// A map of crate names to the URL to use instead of querying the crate's `html_root_url`.\n     pub extern_html_root_urls: BTreeMap<String, String>,\n+    /// A map of the default settings (values are as for DOM storage API). Keys should lack the\n+    /// `rustdoc-` prefix.\n+    pub default_settings: HashMap<String, String>,\n     /// If present, suffix added to CSS/JavaScript files when referencing them in generated pages.\n     pub resource_suffix: String,\n     /// Whether to run the static CSS/JavaScript through a minifier when outputting them. `true` by\n@@ -374,6 +377,32 @@ impl Options {\n             }\n         };\n \n+        let default_settings: Vec<Vec<(String, String)>> = vec![\n+            matches\n+                .opt_str(\"default-theme\")\n+                .iter()\n+                .map(|theme| {\n+                    vec![\n+                        (\"use-system-theme\".to_string(), \"false\".to_string()),\n+                        (\"theme\".to_string(), theme.to_string()),\n+                    ]\n+                })\n+                .flatten()\n+                .collect(),\n+            matches\n+                .opt_strs(\"default-setting\")\n+                .iter()\n+                .map(|s| {\n+                    let mut kv = s.splitn(2, '=');\n+                    // never panics because `splitn` always returns at least one element\n+                    let k = kv.next().unwrap().to_string();\n+                    let v = kv.next().unwrap_or(\"true\").to_string();\n+                    (k, v)\n+                })\n+                .collect(),\n+        ];\n+        let default_settings = default_settings.into_iter().flatten().collect();\n+\n         let test_args = matches.opt_strs(\"test-args\");\n         let test_args: Vec<String> =\n             test_args.iter().flat_map(|s| s.split_whitespace()).map(|s| s.to_string()).collect();\n@@ -596,6 +625,7 @@ impl Options {\n                 themes,\n                 extension_css,\n                 extern_html_root_urls,\n+                default_settings,\n                 resource_suffix,\n                 enable_minification,\n                 enable_index_page,"}, {"sha": "b089bcb0862a54bbb944398ebcdcea1a6b9422f1", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -1,3 +1,4 @@\n+use std::collections::HashMap;\n use std::path::PathBuf;\n \n use crate::externalfiles::ExternalHtml;\n@@ -10,6 +11,7 @@ pub struct Layout {\n     pub logo: String,\n     pub favicon: String,\n     pub external_html: ExternalHtml,\n+    pub default_settings: HashMap<String, String>,\n     pub krate: String,\n     /// The given user css file which allow to customize the generated\n     /// documentation theme.\n@@ -53,6 +55,7 @@ pub fn render<T: Print, S: Print>(\n     <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}rustdoc{suffix}.css\\\" \\\n           id=\\\"mainThemeStyle\\\">\\\n     {style_files}\\\n+    <script id=\\\"default-settings\\\"{default_settings}></script>\\\n     <script src=\\\"{static_root_path}storage{suffix}.js\\\"></script>\\\n     <noscript><link rel=\\\"stylesheet\\\" href=\\\"{static_root_path}noscript{suffix}.css\\\"></noscript>\\\n     {css_extension}\\\n@@ -172,6 +175,11 @@ pub fn render<T: Print, S: Print>(\n         after_content = layout.external_html.after_content,\n         sidebar = Buffer::html().to_display(sidebar),\n         krate = layout.krate,\n+        default_settings = layout\n+            .default_settings\n+            .iter()\n+            .map(|(k, v)| format!(r#\" data-{}=\"{}\"\"#, k.replace('-', \"_\"), Escape(v)))\n+            .collect::<String>(),\n         style_files = style_files\n             .iter()\n             .filter_map(|t| {"}, {"sha": "ca8b811681cc9c9c60a4da433477b3450e056100", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -1228,6 +1228,7 @@ fn init_id_map() -> FxHashMap<String, usize> {\n     map.insert(\"render-detail\".to_owned(), 1);\n     map.insert(\"toggle-all-docs\".to_owned(), 1);\n     map.insert(\"all-types\".to_owned(), 1);\n+    map.insert(\"default-settings\".to_owned(), 1);\n     // This is the list of IDs used by rustdoc sections.\n     map.insert(\"fields\".to_owned(), 1);\n     map.insert(\"variants\".to_owned(), 1);"}, {"sha": "0621eafd913474a5ff1181cc848621caf3aa5345", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -392,6 +392,7 @@ impl FormatRenderer for Context {\n             playground_url,\n             sort_modules_alphabetically,\n             themes: style_files,\n+            default_settings,\n             extension_css,\n             resource_suffix,\n             static_root_path,\n@@ -415,6 +416,7 @@ impl FormatRenderer for Context {\n             logo: String::new(),\n             favicon: String::new(),\n             external_html,\n+            default_settings,\n             krate: krate.name.clone(),\n             css_file_extension: extension_css,\n             generate_search_filter,"}, {"sha": "28bd1ba5247d600858c77bff1c08889fa271480c", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -89,7 +89,7 @@ function defocusSearchBar() {\n                      \"derive\",\n                      \"traitalias\"];\n \n-    var disableShortcuts = getCurrentValue(\"rustdoc-disable-shortcuts\") === \"true\";\n+    var disableShortcuts = getSettingValue(\"disable-shortcuts\") === \"true\";\n     var search_input = getSearchInput();\n     var searchTimeout = null;\n     var toggleAllDocsId = \"toggle-all-docs\";\n@@ -1580,7 +1580,7 @@ function defocusSearchBar() {\n         function showResults(results) {\n             var search = getSearchElement();\n             if (results.others.length === 1\n-                && getCurrentValue(\"rustdoc-go-to-only-result\") === \"true\"\n+                && getSettingValue(\"go-to-only-result\") === \"true\"\n                 // By default, the search DOM element is \"empty\" (meaning it has no children not\n                 // text content). Once a search has been run, it won't be empty, even if you press\n                 // ESC or empty the search input (which also \"cancels\" the search).\n@@ -2296,7 +2296,7 @@ function defocusSearchBar() {\n     function autoCollapse(pageId, collapse) {\n         if (collapse) {\n             toggleAllDocs(pageId, true);\n-        } else if (getCurrentValue(\"rustdoc-auto-hide-trait-implementations\") !== \"false\") {\n+        } else if (getSettingValue(\"auto-hide-trait-implementations\") !== \"false\") {\n             var impl_list = document.getElementById(\"trait-implementations-list\");\n \n             if (impl_list !== null) {\n@@ -2370,8 +2370,8 @@ function defocusSearchBar() {\n         }\n \n         var toggle = createSimpleToggle(false);\n-        var hideMethodDocs = getCurrentValue(\"rustdoc-auto-hide-method-docs\") === \"true\";\n-        var hideImplementors = getCurrentValue(\"rustdoc-auto-collapse-implementors\") !== \"false\";\n+        var hideMethodDocs = getSettingValue(\"auto-hide-method-docs\") === \"true\";\n+        var hideImplementors = getSettingValue(\"auto-collapse-implementors\") !== \"false\";\n         var pageId = getPageId();\n \n         var func = function(e) {\n@@ -2487,15 +2487,15 @@ function defocusSearchBar() {\n                 });\n             }\n         }\n-        var showItemDeclarations = getCurrentValue(\"rustdoc-auto-hide-\" + className);\n+        var showItemDeclarations = getSettingValue(\"auto-hide-\" + className);\n         if (showItemDeclarations === null) {\n             if (className === \"enum\" || className === \"macro\") {\n                 showItemDeclarations = \"false\";\n             } else if (className === \"struct\" || className === \"union\" || className === \"trait\") {\n                 showItemDeclarations = \"true\";\n             } else {\n                 // In case we found an unknown type, we just use the \"parent\" value.\n-                showItemDeclarations = getCurrentValue(\"rustdoc-auto-hide-declarations\");\n+                showItemDeclarations = getSettingValue(\"auto-hide-declarations\");\n             }\n         }\n         showItemDeclarations = showItemDeclarations === \"false\";\n@@ -2569,7 +2569,7 @@ function defocusSearchBar() {\n         onEachLazy(document.getElementsByClassName(\"sub-variant\"), buildToggleWrapper);\n         var pageId = getPageId();\n \n-        autoCollapse(pageId, getCurrentValue(\"rustdoc-collapse\") === \"true\");\n+        autoCollapse(pageId, getSettingValue(\"collapse\") === \"true\");\n \n         if (pageId !== null) {\n             expandSection(pageId);\n@@ -2592,7 +2592,7 @@ function defocusSearchBar() {\n     (function() {\n         // To avoid checking on \"rustdoc-item-attributes\" value on every loop...\n         var itemAttributesFunc = function() {};\n-        if (getCurrentValue(\"rustdoc-auto-hide-attributes\") !== \"false\") {\n+        if (getSettingValue(\"auto-hide-attributes\") !== \"false\") {\n             itemAttributesFunc = function(x) {\n                 collapseDocs(x.previousSibling.childNodes[0], \"toggle\");\n             };\n@@ -2611,7 +2611,7 @@ function defocusSearchBar() {\n     (function() {\n         // To avoid checking on \"rustdoc-line-numbers\" value on every loop...\n         var lineNumbersFunc = function() {};\n-        if (getCurrentValue(\"rustdoc-line-numbers\") === \"true\") {\n+        if (getSettingValue(\"line-numbers\") === \"true\") {\n             lineNumbersFunc = function(x) {\n                 var count = x.textContent.split(\"\\n\").length;\n                 var elems = [];\n@@ -2768,7 +2768,7 @@ function defocusSearchBar() {\n             }\n             return 0;\n         });\n-        var savedCrate = getCurrentValue(\"rustdoc-saved-filter-crate\");\n+        var savedCrate = getSettingValue(\"saved-filter-crate\");\n         for (var i = 0; i < crates_text.length; ++i) {\n             var option = document.createElement(\"option\");\n             option.value = crates_text[i];"}, {"sha": "da3378ccf0dd06f128ccdd11116fa427ff08622f", "filename": "src/librustdoc/html/static/settings.js", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsettings.js?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -14,10 +14,6 @@\n         }\n     }\n \n-    function getSettingValue(settingName) {\n-        return getCurrentValue(\"rustdoc-\" + settingName);\n-    }\n-\n     function setEvents() {\n         var elems = {\n             toggles: document.getElementsByClassName(\"slider\"),"}, {"sha": "d081781f14be15b8fba7e86ca367c87c2365b405", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 36, "deletions": 9, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -1,10 +1,37 @@\n // From rust:\n-/* global resourcesSuffix */\n+/* global resourcesSuffix, getSettingValue */\n \n var darkThemes = [\"dark\", \"ayu\"];\n var currentTheme = document.getElementById(\"themeStyle\");\n var mainTheme = document.getElementById(\"mainThemeStyle\");\n-var localStoredTheme = getCurrentValue(\"rustdoc-theme\");\n+\n+var settingsDataset = (function () {\n+    var settingsElement = document.getElementById(\"default-settings\");\n+    if (settingsElement === null) {\n+        return null;\n+    }\n+    var dataset = settingsElement.dataset;\n+    if (dataset === undefined) {\n+        return null;\n+    }\n+    return dataset;\n+})();\n+\n+function getSettingValue(settingName) {\n+    var current = getCurrentValue('rustdoc-' + settingName);\n+    if (current !== null) {\n+        return current;\n+    }\n+    if (settingsDataset !== null) {\n+        var def = settingsDataset[settingName.replace(/-/g,'_')];\n+        if (def !== undefined) {\n+            return def;\n+        }\n+    }\n+    return null;\n+}\n+\n+var localStoredTheme = getSettingValue(\"theme\");\n \n var savedHref = [];\n \n@@ -156,9 +183,9 @@ var updateSystemTheme = (function() {\n \n     function handlePreferenceChange(mql) {\n         // maybe the user has disabled the setting in the meantime!\n-        if (getCurrentValue(\"rustdoc-use-system-theme\") !== \"false\") {\n-            var lightTheme = getCurrentValue(\"rustdoc-preferred-light-theme\") || \"light\";\n-            var darkTheme = getCurrentValue(\"rustdoc-preferred-dark-theme\") || \"dark\";\n+        if (getSettingValue(\"use-system-theme\") !== \"false\") {\n+            var lightTheme = getSettingValue(\"preferred-light-theme\") || \"light\";\n+            var darkTheme = getSettingValue(\"preferred-dark-theme\") || \"dark\";\n \n             if (mql.matches) {\n                 // prefers a dark theme\n@@ -181,11 +208,11 @@ var updateSystemTheme = (function() {\n     };\n })();\n \n-if (getCurrentValue(\"rustdoc-use-system-theme\") !== \"false\" && window.matchMedia) {\n+if (getSettingValue(\"use-system-theme\") !== \"false\" && window.matchMedia) {\n     // update the preferred dark theme if the user is already using a dark theme\n     // See https://github.com/rust-lang/rust/pull/77809#issuecomment-707875732\n-    if (getCurrentValue(\"rustdoc-use-system-theme\") === null\n-        && getCurrentValue(\"rustdoc-preferred-dark-theme\") === null\n+    if (getSettingValue(\"use-system-theme\") === null\n+        && getSettingValue(\"preferred-dark-theme\") === null\n         && darkThemes.indexOf(localStoredTheme) >= 0) {\n         updateLocalStorage(\"rustdoc-preferred-dark-theme\", localStoredTheme);\n     }\n@@ -196,7 +223,7 @@ if (getCurrentValue(\"rustdoc-use-system-theme\") !== \"false\" && window.matchMedia\n     switchTheme(\n         currentTheme,\n         mainTheme,\n-        getCurrentValue(\"rustdoc-theme\") || \"light\",\n+        getSettingValue(\"theme\") || \"light\",\n         false\n     );\n }"}, {"sha": "7efbca5c6c3b7c4df7d3275fd99917f107909f48", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2008d1bb0b185286d376d8e1f1093fa9ec070156/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=2008d1bb0b185286d376d8e1f1093fa9ec070156", "patch": "@@ -269,6 +269,26 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"sort modules by where they appear in the program, rather than alphabetically\",\n             )\n         }),\n+        unstable(\"default-theme\", |o| {\n+            o.optopt(\n+                \"\",\n+                \"default-theme\",\n+                \"Set the default theme. THEME should be the theme name, generally lowercase. \\\n+                 If an unknown default theme is specified, the builtin default is used. \\\n+                 The set of themes, and the rustdoc built-in default is not stable.\",\n+                \"THEME\",\n+            )\n+        }),\n+        unstable(\"default-setting\", |o| {\n+            o.optmulti(\n+                \"\",\n+                \"default-setting\",\n+                \"Default value for a rustdoc setting (used when \\\"rustdoc-SETTING\\\" is absent \\\n+                 from web browser Local Storage). If VALUE is not supplied, \\\"true\\\" is used. \\\n+                 Supported SETTINGs and VALUEs are not documented and not stable.\",\n+                \"SETTING[=VALUE]\",\n+            )\n+        }),\n         stable(\"theme\", |o| {\n             o.optmulti(\n                 \"\","}]}