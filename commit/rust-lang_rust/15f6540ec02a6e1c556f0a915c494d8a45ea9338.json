{"sha": "15f6540ec02a6e1c556f0a915c494d8a45ea9338", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZjY1NDBlYzAyYTZlMWM1NTZmMGE5MTVjNDk0ZDhhNDVlYTkzMzg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-08-21T13:44:42Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-08-29T16:45:32Z"}, "message": "resolve type vars with obligations in more places\n\nThis fixes a few cases of inference misses, some of them regressions\ncaused by the impl selected for a method not being immediately evaluated.", "tree": {"sha": "e226cdc81e2e9883026d922c1a39b245d7bfb227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e226cdc81e2e9883026d922c1a39b245d7bfb227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15f6540ec02a6e1c556f0a915c494d8a45ea9338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15f6540ec02a6e1c556f0a915c494d8a45ea9338", "html_url": "https://github.com/rust-lang/rust/commit/15f6540ec02a6e1c556f0a915c494d8a45ea9338", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15f6540ec02a6e1c556f0a915c494d8a45ea9338/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de0e695f629c27030584cf5263601fed333f5c0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/de0e695f629c27030584cf5263601fed333f5c0a", "html_url": "https://github.com/rust-lang/rust/commit/de0e695f629c27030584cf5263601fed333f5c0a"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "e937770bb016135413130aa0a521420987593fc6", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15f6540ec02a6e1c556f0a915c494d8a45ea9338/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15f6540ec02a6e1c556f0a915c494d8a45ea9338/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=15f6540ec02a6e1c556f0a915c494d8a45ea9338", "patch": "@@ -2818,6 +2818,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                            formal_ret: Ty<'tcx>,\n                                            formal_args: &[Ty<'tcx>])\n                                            -> Vec<Ty<'tcx>> {\n+        let formal_ret = self.resolve_type_vars_with_obligations(formal_ret);\n         let expected_args = expected_ret.only_has_type(self).and_then(|ret_ty| {\n             self.fudge_regions_if_ok(&RegionVariableOrigin::Coercion(call_span), || {\n                 // Attempt to apply a subtyping relationship between the formal\n@@ -3978,6 +3979,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n           }\n           hir::ExprTup(ref elts) => {\n             let flds = expected.only_has_type(self).and_then(|ty| {\n+                let ty = self.resolve_type_vars_with_obligations(ty);\n                 match ty.sty {\n                     ty::TyTuple(ref flds, _) => Some(&flds[..]),\n                     _ => None"}, {"sha": "76b8cf92329d1ccc6446442f31e3b40dbb6cd6c5", "filename": "src/test/run-pass/method-argument-inference-associated-type.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/15f6540ec02a6e1c556f0a915c494d8a45ea9338/src%2Ftest%2Frun-pass%2Fmethod-argument-inference-associated-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15f6540ec02a6e1c556f0a915c494d8a45ea9338/src%2Ftest%2Frun-pass%2Fmethod-argument-inference-associated-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmethod-argument-inference-associated-type.rs?ref=15f6540ec02a6e1c556f0a915c494d8a45ea9338", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct ClientMap;\n+pub struct ClientMap2;\n+\n+pub trait Service {\n+    type Request;\n+    fn call(&self, _req: Self::Request);\n+}\n+\n+pub struct S<T>(T);\n+\n+impl Service for ClientMap {\n+    type Request = S<Box<Fn(i32)>>;\n+    fn call(&self, _req: Self::Request) {}\n+}\n+\n+\n+impl Service for ClientMap2 {\n+    type Request = (Box<Fn(i32)>,);\n+    fn call(&self, _req: Self::Request) {}\n+}\n+\n+\n+fn main() {\n+    ClientMap.call(S { 0: Box::new(|_msgid| ()) });\n+    ClientMap.call(S(Box::new(|_msgid| ())));\n+    ClientMap2.call((Box::new(|_msgid| ()),));\n+}"}]}