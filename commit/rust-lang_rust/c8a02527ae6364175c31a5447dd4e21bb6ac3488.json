{"sha": "c8a02527ae6364175c31a5447dd4e21bb6ac3488", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4YTAyNTI3YWU2MzY0MTc1YzMxYTU0NDdkZDRlMjFiYjZhYzM0ODg=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-06-25T00:44:50Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-09T07:06:29Z"}, "message": "lexer: add ident_from and ident_from_to methods", "tree": {"sha": "86ddfccfb08be24ba4cd4a9e4016dcaa417eb746", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86ddfccfb08be24ba4cd4a9e4016dcaa417eb746"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8a02527ae6364175c31a5447dd4e21bb6ac3488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a02527ae6364175c31a5447dd4e21bb6ac3488", "html_url": "https://github.com/rust-lang/rust/commit/c8a02527ae6364175c31a5447dd4e21bb6ac3488", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8a02527ae6364175c31a5447dd4e21bb6ac3488/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47fe8aa6bfaa18d42561801dc230d2043b984b76", "url": "https://api.github.com/repos/rust-lang/rust/commits/47fe8aa6bfaa18d42561801dc230d2043b984b76", "html_url": "https://github.com/rust-lang/rust/commit/47fe8aa6bfaa18d42561801dc230d2043b984b76"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "7a9051c16aed63f5e5a8f096f52e169cef5fe8c9", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c8a02527ae6364175c31a5447dd4e21bb6ac3488/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8a02527ae6364175c31a5447dd4e21bb6ac3488/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=c8a02527ae6364175c31a5447dd4e21bb6ac3488", "patch": "@@ -217,6 +217,20 @@ impl<'a> StringReader<'a> {\n         self.with_str_from_to(start, self.last_pos, f)\n     }\n \n+    /// Create an Ident from a given offset to the current offset, each\n+    /// adjusted 1 towards each other (assumes that on either side there is a\n+    /// single-byte delimiter).\n+    pub fn ident_from(&self, start: BytePos) -> ast::Ident {\n+        debug!(\"taking an ident from {} to {}\", start, self.last_pos);\n+        self.with_str_from(start, str_to_ident)\n+    }\n+\n+    /// As ident_from, with an explicit endpoint.\n+    pub fn ident_from_to(&self, start: BytePos, end: BytePos) -> ast::Ident {\n+        debug!(\"taking an ident from {} to {}\", start, end);\n+        self.with_str_from_to(start, end, str_to_ident)\n+    }\n+\n     /// Calls `f` with a string slice of the source text spanning from `start`\n     /// up to but excluding `end`.\n     fn with_str_from_to<T>(&self, start: BytePos, end: BytePos, f: |s: &str| -> T) -> T {"}]}