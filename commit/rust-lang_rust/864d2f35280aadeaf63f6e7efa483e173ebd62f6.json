{"sha": "864d2f35280aadeaf63f6e7efa483e173ebd62f6", "node_id": "C_kwDOAAsO6NoAKDg2NGQyZjM1MjgwYWFkZWFmNjNmNmU3ZWZhNDgzZTE3M2ViZDYyZjY", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-14T10:47:38Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-14T10:48:50Z"}, "message": "eagerly check for bound vars of predicates", "tree": {"sha": "608de1f6e23879ad0a8111c7247f497e0eb2ab01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/608de1f6e23879ad0a8111c7247f497e0eb2ab01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/864d2f35280aadeaf63f6e7efa483e173ebd62f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/864d2f35280aadeaf63f6e7efa483e173ebd62f6", "html_url": "https://github.com/rust-lang/rust/commit/864d2f35280aadeaf63f6e7efa483e173ebd62f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/864d2f35280aadeaf63f6e7efa483e173ebd62f6/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39a990d2f126b4751bd7821f26d166e07b073915", "url": "https://api.github.com/repos/rust-lang/rust/commits/39a990d2f126b4751bd7821f26d166e07b073915", "html_url": "https://github.com/rust-lang/rust/commit/39a990d2f126b4751bd7821f26d166e07b073915"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "878f31af00f07e867493bd2748a10243b9bb425a", "filename": "compiler/rustc_middle/src/ty/fold.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/864d2f35280aadeaf63f6e7efa483e173ebd62f6/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/864d2f35280aadeaf63f6e7efa483e173ebd62f6/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs?ref=864d2f35280aadeaf63f6e7efa483e173ebd62f6", "patch": "@@ -448,6 +448,10 @@ impl<'a, 'tcx> TypeFolder<'tcx> for BoundVarReplacer<'a, 'tcx> {\n             _ => ct.super_fold_with(self),\n         }\n     }\n+\n+    fn fold_predicate(&mut self, p: ty::Predicate<'tcx>) -> ty::Predicate<'tcx> {\n+        if p.has_vars_bound_at_or_above(self.current_index) { p.super_fold_with(self) } else { p }\n+    }\n }\n \n impl<'tcx> TyCtxt<'tcx> {"}, {"sha": "9de4d3a646cb306e2264b6e4179a75336b6600df", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/864d2f35280aadeaf63f6e7efa483e173ebd62f6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/864d2f35280aadeaf63f6e7efa483e173ebd62f6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=864d2f35280aadeaf63f6e7efa483e173ebd62f6", "patch": "@@ -756,6 +756,10 @@ impl<'tcx> TypeFolder<'tcx> for BoundVarReplacer<'_, 'tcx> {\n             _ => ct.super_fold_with(self),\n         }\n     }\n+\n+    fn fold_predicate(&mut self, p: ty::Predicate<'tcx>) -> ty::Predicate<'tcx> {\n+        if p.has_vars_bound_at_or_above(self.current_index) { p.super_fold_with(self) } else { p }\n+    }\n }\n \n // The inverse of `BoundVarReplacer`: replaces placeholders with the bound vars from which they came."}]}