{"sha": "b8b957d4792be619a3251c917199fe7e7c01997c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4Yjk1N2Q0NzkyYmU2MTlhMzI1MWM5MTcxOTlmZTdlN2MwMTk5N2M=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-08T15:15:42Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-09T14:05:32Z"}, "message": "Make CrateNum allocation more thread-safe.", "tree": {"sha": "83211cef4b8f59f18e16d296f683489f2c7c4c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83211cef4b8f59f18e16d296f683489f2c7c4c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8b957d4792be619a3251c917199fe7e7c01997c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b957d4792be619a3251c917199fe7e7c01997c", "html_url": "https://github.com/rust-lang/rust/commit/b8b957d4792be619a3251c917199fe7e7c01997c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8b957d4792be619a3251c917199fe7e7c01997c/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31d2012ef7468a3da17299c9964e8b01d68a67fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/31d2012ef7468a3da17299c9964e8b01d68a67fc", "html_url": "https://github.com/rust-lang/rust/commit/31d2012ef7468a3da17299c9964e8b01d68a67fc"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "d9038105da08b571a5a29ce23b74d23a5f60f7ac", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b8b957d4792be619a3251c917199fe7e7c01997c/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8b957d4792be619a3251c917199fe7e7c01997c/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=b8b957d4792be619a3251c917199fe7e7c01997c", "patch": "@@ -51,7 +51,6 @@ pub struct Library {\n pub struct CrateLoader<'a> {\n     pub sess: &'a Session,\n     cstore: &'a CStore,\n-    next_crate_num: CrateNum,\n     local_crate_name: Symbol,\n }\n \n@@ -102,7 +101,6 @@ impl<'a> CrateLoader<'a> {\n         CrateLoader {\n             sess,\n             cstore,\n-            next_crate_num: cstore.next_crate_num(),\n             local_crate_name: Symbol::intern(local_crate_name),\n         }\n     }\n@@ -198,8 +196,7 @@ impl<'a> CrateLoader<'a> {\n         self.verify_no_symbol_conflicts(span, &crate_root);\n \n         // Claim this crate number and cache it\n-        let cnum = self.next_crate_num;\n-        self.next_crate_num = CrateNum::from_u32(cnum.as_u32() + 1);\n+        let cnum = self.cstore.alloc_new_crate_num();\n \n         // Stash paths for top-most crate locally if necessary.\n         let crate_paths = if root.is_none() {"}, {"sha": "4872d560d27f0697c5276d49edb76f6a18cadc81", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b8b957d4792be619a3251c917199fe7e7c01997c/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8b957d4792be619a3251c917199fe7e7c01997c/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=b8b957d4792be619a3251c917199fe7e7c01997c", "patch": "@@ -96,29 +96,27 @@ pub struct CStore {\n impl CStore {\n     pub fn new(metadata_loader: Box<MetadataLoader + Sync>) -> CStore {\n         CStore {\n-            metas: RwLock::new(IndexVec::new()),\n+            metas: RwLock::new(IndexVec::from_elem_n(None, 1)),\n             extern_mod_crate_map: Lock::new(FxHashMap()),\n             metadata_loader,\n         }\n     }\n \n-    /// You cannot use this function to allocate a CrateNum in a thread-safe manner.\n-    /// It is currently only used in CrateLoader which is single-threaded code.\n-    pub(super) fn next_crate_num(&self) -> CrateNum {\n-        CrateNum::new(self.metas.borrow().len() + 1)\n+    pub(super) fn alloc_new_crate_num(&self) -> CrateNum {\n+        let mut metas = self.metas.borrow_mut();\n+        let cnum = CrateNum::new(metas.len());\n+        metas.push(None);\n+        cnum\n     }\n \n     pub(super) fn get_crate_data(&self, cnum: CrateNum) -> Lrc<CrateMetadata> {\n         self.metas.borrow()[cnum].clone().unwrap()\n     }\n \n     pub(super) fn set_crate_data(&self, cnum: CrateNum, data: Lrc<CrateMetadata>) {\n-        use rustc_data_structures::indexed_vec::Idx;\n-        let mut met = self.metas.borrow_mut();\n-        while met.len() <= cnum.index() {\n-            met.push(None);\n-        }\n-        met[cnum] = Some(data);\n+        let mut metas = self.metas.borrow_mut();\n+        assert!(metas[cnum].is_none(), \"Overwriting crate metadata entry\");\n+        metas[cnum] = Some(data);\n     }\n \n     pub(super) fn iter_crate_data<I>(&self, mut i: I)"}]}