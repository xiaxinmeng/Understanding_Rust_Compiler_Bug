{"sha": "8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "node_id": "C_kwDOAAsO6NoAKDhhMWMxZWM4YjJkODA2YzEzNWUxOWM3NDhmMGJjMjgxODhhNzlkMDA", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-07-07T17:34:33Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-07-07T18:49:40Z"}, "message": "MIR dataflow: Rename function to `always_storage_live_locals`\n\nRelated to #99021.", "tree": {"sha": "efd2a4bd79655c9718eaa78251ef785966a2c7c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efd2a4bd79655c9718eaa78251ef785966a2c7c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "html_url": "https://github.com/rust-lang/rust/commit/8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20dd6930134d07a5ef90393a040a1594ac8d714c", "url": "https://api.github.com/repos/rust-lang/rust/commits/20dd6930134d07a5ef90393a040a1594ac8d714c", "html_url": "https://github.com/rust-lang/rust/commit/20dd6930134d07a5ef90393a040a1594ac8d714c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "2e47cf89210737b50de1ee1885dfa428b5669872", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::ty::layout::{\n use rustc_middle::ty::{\n     self, query::TyCtxtAt, subst::SubstsRef, ParamEnv, Ty, TyCtxt, TypeFoldable,\n };\n-use rustc_mir_dataflow::storage::always_live_locals;\n+use rustc_mir_dataflow::storage::always_storage_live_locals;\n use rustc_query_system::ich::StableHashingContext;\n use rustc_session::Limit;\n use rustc_span::{Pos, Span};\n@@ -707,7 +707,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let mut locals = IndexVec::from_elem(dummy, &body.local_decls);\n \n         // Now mark those locals as live that have no `Storage*` annotations.\n-        let always_live = always_live_locals(self.body());\n+        let always_live = always_storage_live_locals(self.body());\n         for local in locals.indices() {\n             if always_live.contains(local) {\n                 locals[local].value = LocalValue::Live(Operand::Immediate(Immediate::Uninit));"}, {"sha": "a02d17283f557643cae66aafc252ed19ef6e1f84", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::mir::{\n use rustc_middle::ty::fold::BottomUpFolder;\n use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt, TypeFoldable, TypeVisitable};\n use rustc_mir_dataflow::impls::MaybeStorageLive;\n-use rustc_mir_dataflow::storage::always_live_locals;\n+use rustc_mir_dataflow::storage::always_storage_live_locals;\n use rustc_mir_dataflow::{Analysis, ResultsCursor};\n use rustc_target::abi::{Size, VariantIdx};\n \n@@ -48,7 +48,7 @@ impl<'tcx> MirPass<'tcx> for Validator {\n         let param_env = tcx.param_env(def_id);\n         let mir_phase = self.mir_phase;\n \n-        let always_live_locals = always_live_locals(body);\n+        let always_live_locals = always_storage_live_locals(body);\n         let storage_liveness = MaybeStorageLive::new(always_live_locals)\n             .into_engine(tcx, body)\n             .iterate_to_fixpoint()"}, {"sha": "566c9d2d5054e6d1bf4333d3aead9fdae586b552", "filename": "compiler/rustc_mir_dataflow/src/storage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_mir_dataflow%2Fsrc%2Fstorage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_mir_dataflow%2Fsrc%2Fstorage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fstorage.rs?ref=8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "patch": "@@ -7,7 +7,7 @@ use rustc_middle::mir::{self, Local};\n //\n // FIXME: Currently, we need to traverse the entire MIR to compute this. We should instead store it\n // as a field in the `LocalDecl` for each `Local`.\n-pub fn always_live_locals(body: &mir::Body<'_>) -> BitSet<Local> {\n+pub fn always_storage_live_locals(body: &mir::Body<'_>) -> BitSet<Local> {\n     let mut always_live_locals = BitSet::new_filled(body.local_decls.len());\n \n     for block in body.basic_blocks() {"}, {"sha": "9fdea8359671f0240cc3cc1573d3efd89a88b1c7", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a1c1ec8b2d806c135e19c748f0bc28188a79d00/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=8a1c1ec8b2d806c135e19c748f0bc28188a79d00", "patch": "@@ -67,7 +67,7 @@ use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt};\n use rustc_mir_dataflow::impls::{\n     MaybeBorrowedLocals, MaybeLiveLocals, MaybeRequiresStorage, MaybeStorageLive,\n };\n-use rustc_mir_dataflow::storage;\n+use rustc_mir_dataflow::storage::always_storage_live_locals;\n use rustc_mir_dataflow::{self, Analysis};\n use rustc_target::abi::VariantIdx;\n use rustc_target::spec::PanicStrategy;\n@@ -1379,7 +1379,7 @@ impl<'tcx> MirPass<'tcx> for StateTransform {\n             },\n         );\n \n-        let always_live_locals = storage::always_live_locals(&body);\n+        let always_live_locals = always_storage_live_locals(&body);\n \n         let liveness_info =\n             locals_live_across_suspend_points(tcx, body, &always_live_locals, movable);"}]}