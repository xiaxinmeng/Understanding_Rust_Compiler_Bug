{"sha": "7f8ada9acf128507106e67834c8d0d780f38636c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmOGFkYTlhY2YxMjg1MDcxMDZlNjc4MzRjOGQwZDc4MGYzODYzNmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-07T20:51:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-07T20:51:02Z"}, "message": "auto merge of #9043 : sfackler/rust/uuid-from-bytes, r=alexcrichton\n\nThis method doesn't deal with utf8. I guess it got caught in a mass\r\nrename.", "tree": {"sha": "4d1803ab691b3b1d7e1325f3e8ac9ec83d607478", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d1803ab691b3b1d7e1325f3e8ac9ec83d607478"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f8ada9acf128507106e67834c8d0d780f38636c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f8ada9acf128507106e67834c8d0d780f38636c", "html_url": "https://github.com/rust-lang/rust/commit/7f8ada9acf128507106e67834c8d0d780f38636c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f8ada9acf128507106e67834c8d0d780f38636c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82b6ef66c22ac876cfc319eae7010648468919b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b6ef66c22ac876cfc319eae7010648468919b9", "html_url": "https://github.com/rust-lang/rust/commit/82b6ef66c22ac876cfc319eae7010648468919b9"}, {"sha": "3eaf750a0de8acd5662d725b651e366fb703e5fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eaf750a0de8acd5662d725b651e366fb703e5fa", "html_url": "https://github.com/rust-lang/rust/commit/3eaf750a0de8acd5662d725b651e366fb703e5fa"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b2c0f24824fce579c163afab16704f59532a85f6", "filename": "src/libextra/uuid.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f8ada9acf128507106e67834c8d0d780f38636c/src%2Flibextra%2Fuuid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f8ada9acf128507106e67834c8d0d780f38636c/src%2Flibextra%2Fuuid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuuid.rs?ref=7f8ada9acf128507106e67834c8d0d780f38636c", "patch": "@@ -210,7 +210,7 @@ impl Uuid {\n     ///\n     /// # Arguments\n     /// * `b` An array or slice of 16 bytes\n-    pub fn from_utf8(b: &[u8]) -> Option<Uuid> {\n+    pub fn from_bytes(b: &[u8]) -> Option<Uuid> {\n         if b.len() != 16 {\n             return None\n         }\n@@ -413,7 +413,7 @@ impl Uuid {\n             ub[i] = FromStrRadix::from_str_radix(vs.slice(i*2, (i+1)*2), 16).unwrap();\n         }\n \n-        Ok(Uuid::from_utf8(ub).unwrap())\n+        Ok(Uuid::from_bytes(ub).unwrap())\n     }\n }\n \n@@ -705,11 +705,11 @@ mod test {\n     }\n \n     #[test]\n-    fn test_from_utf8() {\n+    fn test_from_bytes() {\n         let b = ~[ 0xa1, 0xa2, 0xa3, 0xa4, 0xb1, 0xb2, 0xc1, 0xc2,\n                    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8 ];\n \n-        let u = Uuid::from_utf8(b).unwrap();\n+        let u = Uuid::from_bytes(b).unwrap();\n         let expected = ~\"a1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8\";\n \n         assert!(u.to_simple_str() == expected);\n@@ -729,7 +729,7 @@ mod test {\n         let b_in: [u8, ..16] = [ 0xa1, 0xa2, 0xa3, 0xa4, 0xb1, 0xb2, 0xc1, 0xc2,\n                                  0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8 ];\n \n-        let u = Uuid::from_utf8(b_in.clone()).unwrap();\n+        let u = Uuid::from_bytes(b_in.clone()).unwrap();\n \n         let b_out = u.to_bytes();\n "}]}