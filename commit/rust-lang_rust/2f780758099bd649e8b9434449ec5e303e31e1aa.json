{"sha": "2f780758099bd649e8b9434449ec5e303e31e1aa", "node_id": "C_kwDOAAsO6NoAKDJmNzgwNzU4MDk5YmQ2NDllOGI5NDM0NDQ5ZWM1ZTMwM2UzMWUxYWE", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-04-06T08:12:42Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-04-06T08:43:58Z"}, "message": "get rid of visit_constant in thir visitor", "tree": {"sha": "6ce5a7afee47015abb3609cf8a7f304726d6ca30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ce5a7afee47015abb3609cf8a7f304726d6ca30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f780758099bd649e8b9434449ec5e303e31e1aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f780758099bd649e8b9434449ec5e303e31e1aa", "html_url": "https://github.com/rust-lang/rust/commit/2f780758099bd649e8b9434449ec5e303e31e1aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f780758099bd649e8b9434449ec5e303e31e1aa/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bca346b90b3423de3d333960f864d379b3cd7c0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bca346b90b3423de3d333960f864d379b3cd7c0f", "html_url": "https://github.com/rust-lang/rust/commit/bca346b90b3423de3d333960f864d379b3cd7c0f"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "c0b3e95b18523fcbd40bb7523be6d0b96d6b6731", "filename": "clippy_lints/src/matches/overlapping_arms.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2f780758099bd649e8b9434449ec5e303e31e1aa/clippy_lints%2Fsrc%2Fmatches%2Foverlapping_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f780758099bd649e8b9434449ec5e303e31e1aa/clippy_lints%2Fsrc%2Fmatches%2Foverlapping_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Foverlapping_arms.rs?ref=2f780758099bd649e8b9434449ec5e303e31e1aa", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::consts::{constant, constant_full_int, FullInt};\n+use clippy_utils::consts::{constant, constant_full_int, miri_to_const, FullInt};\n use clippy_utils::diagnostics::span_lint_and_note;\n use core::cmp::Ordering;\n use rustc_hir::{Arm, Expr, PatKind, RangeEnd};\n@@ -32,15 +32,16 @@ fn all_ranges<'tcx>(cx: &LateContext<'tcx>, arms: &'tcx [Arm<'_>], ty: Ty<'tcx>)\n         .filter_map(|arm| {\n             if let Arm { pat, guard: None, .. } = *arm {\n                 if let PatKind::Range(ref lhs, ref rhs, range_end) = pat.kind {\n-                    let lhs_val = match lhs {\n-                        Some(lhs) => constant(cx, cx.typeck_results(), lhs)?.0.int_value(cx, ty)?,\n-                        None => FullInt::U(ty.numeric_min_val(cx.tcx)?),\n+                    let lhs_const = match lhs {\n+                        Some(lhs) => constant(cx, cx.typeck_results(), lhs)?.0,\n+                        None => miri_to_const(ty.numeric_min_val(cx.tcx)?)?,\n                     };\n-                    let rhs_val = match rhs {\n-                        Some(rhs) => constant(cx, cx.typeck_results(), rhs)?.0.int_value(cx, ty)?,\n-                        None => FullInt::U(ty.numeric_max_val(cx.tcx)?),\n+                    let rhs_const = match rhs {\n+                        Some(rhs) => constant(cx, cx.typeck_results(), rhs)?.0,\n+                        None => miri_to_const(ty.numeric_max_val(cx.tcx)?)?,\n                     };\n-\n+                    let lhs_val = lhs_const.int_value(cx, ty)?;\n+                    let rhs_val = rhs_const.int_value(cx, ty)?;\n                     let rhs_bound = match range_end {\n                         RangeEnd::Included => EndBound::Included(rhs_val),\n                         RangeEnd::Excluded => EndBound::Excluded(rhs_val),"}]}