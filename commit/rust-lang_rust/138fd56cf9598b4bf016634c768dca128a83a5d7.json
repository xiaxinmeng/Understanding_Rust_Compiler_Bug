{"sha": "138fd56cf9598b4bf016634c768dca128a83a5d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOGZkNTZjZjk1OThiNGJmMDE2NjM0Yzc2OGRjYTEyOGE4M2E1ZDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T20:06:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T20:06:11Z"}, "message": "Auto merge of #83790 - Dylan-DPC:rollup-p6ep8jo, r=Dylan-DPC\n\nRollup of 7 pull requests\n\nSuccessful merges:\n\n - #83065 (Rework `std::sys::windows::alloc`)\n - #83478 (rustdoc: Add unstable option to only emit shared/crate-specific files)\n - #83629 (Fix double-drop in `Vec::from_iter(vec.into_iter())` specialization when items drop during panic)\n - #83673 (give full path of constraint in suggest_constraining_type_param)\n - #83755 (Simplify coverage tests)\n - #83757 (2229: Support migration via rustfix)\n - #83771 (Fix stack overflow detection on FreeBSD 11.1+)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "81347b4283d3b4f92352666e9659ba8e9dc2007e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81347b4283d3b4f92352666e9659ba8e9dc2007e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/138fd56cf9598b4bf016634c768dca128a83a5d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/138fd56cf9598b4bf016634c768dca128a83a5d7", "html_url": "https://github.com/rust-lang/rust/commit/138fd56cf9598b4bf016634c768dca128a83a5d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/138fd56cf9598b4bf016634c768dca128a83a5d7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23fa5360502be2554382c9d860e6438d3b822858", "url": "https://api.github.com/repos/rust-lang/rust/commits/23fa5360502be2554382c9d860e6438d3b822858", "html_url": "https://github.com/rust-lang/rust/commit/23fa5360502be2554382c9d860e6438d3b822858"}, {"sha": "cb7133f6934843408b36ce163cf1c3f3596fac68", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb7133f6934843408b36ce163cf1c3f3596fac68", "html_url": "https://github.com/rust-lang/rust/commit/cb7133f6934843408b36ce163cf1c3f3596fac68"}], "stats": {"total": 28777, "additions": 1544, "deletions": 27233}, "files": [{"sha": "2b8c8d369738432190929873367922a5450580af", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -28,6 +28,7 @@ use std::fmt;\n \n use super::InferCtxtPrivExt;\n use crate::traits::query::evaluate_obligation::InferCtxtExt as _;\n+use rustc_middle::ty::print::with_no_trimmed_paths;\n \n #[derive(Debug)]\n pub enum GeneratorInteriorOrUpvar {\n@@ -440,7 +441,8 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 {\n                     // Missing generic type parameter bound.\n                     let param_name = self_ty.to_string();\n-                    let constraint = trait_ref.print_only_trait_path().to_string();\n+                    let constraint =\n+                        with_no_trimmed_paths(|| trait_ref.print_only_trait_path().to_string());\n                     if suggest_constraining_type_param(\n                         self.tcx,\n                         generics,"}, {"sha": "6f8dd39958c04f020153fc8c0653a7efa3711f55", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 81, "deletions": 28, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -34,6 +34,7 @@ use super::FnCtxt;\n \n use crate::expr_use_visitor as euv;\n use rustc_data_structures::fx::FxIndexMap;\n+use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::def_id::LocalDefId;\n@@ -91,7 +92,7 @@ impl<'a, 'tcx> Visitor<'tcx> for InferBorrowKindVisitor<'a, 'tcx> {\n         if let hir::ExprKind::Closure(cc, _, body_id, _, _) = expr.kind {\n             let body = self.fcx.tcx.hir().body(body_id);\n             self.visit_body(body);\n-            self.fcx.analyze_closure(expr.hir_id, expr.span, body, cc);\n+            self.fcx.analyze_closure(expr.hir_id, expr.span, body_id, body, cc);\n         }\n \n         intravisit::walk_expr(self, expr);\n@@ -104,6 +105,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         &self,\n         closure_hir_id: hir::HirId,\n         span: Span,\n+        body_id: hir::BodyId,\n         body: &'tcx hir::Body<'tcx>,\n         capture_clause: hir::CaptureBy,\n     ) {\n@@ -167,7 +169,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         let closure_hir_id = self.tcx.hir().local_def_id_to_hir_id(local_def_id);\n         if should_do_migration_analysis(self.tcx, closure_hir_id) {\n-            self.perform_2229_migration_anaysis(closure_def_id, capture_clause, span);\n+            self.perform_2229_migration_anaysis(closure_def_id, body_id, capture_clause, span);\n         }\n \n         // We now fake capture information for all variables that are mentioned within the closure\n@@ -465,6 +467,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     fn perform_2229_migration_anaysis(\n         &self,\n         closure_def_id: DefId,\n+        body_id: hir::BodyId,\n         capture_clause: hir::CaptureBy,\n         span: Span,\n     ) {\n@@ -476,7 +479,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         );\n \n         if !need_migrations.is_empty() {\n-            let migrations_text = migration_suggestion_for_2229(self.tcx, &need_migrations);\n+            let (migration_string, migrated_variables_concat) =\n+                migration_suggestion_for_2229(self.tcx, &need_migrations);\n \n             let local_def_id = closure_def_id.expect_local();\n             let closure_hir_id = self.tcx.hir().local_def_id_to_hir_id(local_def_id);\n@@ -488,7 +492,35 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     let mut diagnostics_builder = lint.build(\n                         \"drop order affected for closure because of `capture_disjoint_fields`\",\n                     );\n-                    diagnostics_builder.note(&migrations_text);\n+                    let closure_body_span = self.tcx.hir().span(body_id.hir_id);\n+                    let (sugg, app) =\n+                        match self.tcx.sess.source_map().span_to_snippet(closure_body_span) {\n+                            Ok(s) => {\n+                                let trimmed = s.trim_start();\n+\n+                                // If the closure contains a block then replace the opening brace\n+                                // with \"{ let _ = (..); \"\n+                                let sugg = if let Some('{') = trimmed.chars().next() {\n+                                    format!(\"{{ {}; {}\", migration_string, &trimmed[1..])\n+                                } else {\n+                                    format!(\"{{ {}; {} }}\", migration_string, s)\n+                                };\n+                                (sugg, Applicability::MachineApplicable)\n+                            }\n+                            Err(_) => (migration_string.clone(), Applicability::HasPlaceholders),\n+                        };\n+\n+                    let diagnostic_msg = format!(\n+                        \"add a dummy let to cause {} to be fully captured\",\n+                        migrated_variables_concat\n+                    );\n+\n+                    diagnostics_builder.span_suggestion(\n+                        closure_body_span,\n+                        &diagnostic_msg,\n+                        sugg,\n+                        app,\n+                    );\n                     diagnostics_builder.emit();\n                 },\n             );\n@@ -621,7 +653,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// `w[c]`.\n     /// Notation:\n     /// - Ty(place): Type of place\n-    /// - `(a, b)`: Represents the function parameters `base_path_ty` and `captured_projs`\n+    /// - `(a, b)`: Represents the function parameters `base_path_ty` and `captured_by_move_projs`\n     /// respectively.\n     /// ```\n     ///                  (Ty(w), [ &[p, x], &[c] ])\n@@ -682,7 +714,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         closure_def_id: DefId,\n         closure_span: Span,\n         base_path_ty: Ty<'tcx>,\n-        captured_projs: Vec<&[Projection<'tcx>]>,\n+        captured_by_move_projs: Vec<&[Projection<'tcx>]>,\n     ) -> bool {\n         let needs_drop = |ty: Ty<'tcx>| {\n             ty.needs_drop(self.tcx, self.tcx.param_env(closure_def_id.expect_local()))\n@@ -707,33 +739,37 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         //\n         // eg. If `a.b` is captured and we are processing `a.b`, then we can't have the closure also\n         //     capture `a.b.c`, because that voilates min capture.\n-        let is_completely_captured = captured_projs.iter().any(|projs| projs.is_empty());\n+        let is_completely_captured = captured_by_move_projs.iter().any(|projs| projs.is_empty());\n \n-        assert!(!is_completely_captured || (captured_projs.len() == 1));\n+        assert!(!is_completely_captured || (captured_by_move_projs.len() == 1));\n \n         if is_completely_captured {\n             // The place is captured entirely, so doesn't matter if needs dtor, it will be drop\n             // when the closure is dropped.\n             return false;\n         }\n \n+        if captured_by_move_projs.is_empty() {\n+            return needs_drop(base_path_ty);\n+        }\n+\n         if is_drop_defined_for_ty {\n             // If drop is implemented for this type then we need it to be fully captured,\n-            // which we know it is not because of the previous check. Therefore we need to\n-            // do migrate.\n-            return true;\n-        }\n+            // and we know it is not completely captured because of the previous checks.\n \n-        if captured_projs.is_empty() {\n-            return needs_drop(base_path_ty);\n+            // Note that this is a bug in the user code that will be reported by the\n+            // borrow checker, since we can't move out of drop types.\n+\n+            // The bug exists in the user's code pre-migration, and we don't migrate here.\n+            return false;\n         }\n \n         match base_path_ty.kind() {\n             // Observations:\n-            // - `captured_projs` is not empty. Therefore we can call\n-            //   `captured_projs.first().unwrap()` safely.\n-            // - All entries in `captured_projs` have atleast one projection.\n-            //   Therefore we can call `captured_projs.first().unwrap().first().unwrap()` safely.\n+            // - `captured_by_move_projs` is not empty. Therefore we can call\n+            //   `captured_by_move_projs.first().unwrap()` safely.\n+            // - All entries in `captured_by_move_projs` have atleast one projection.\n+            //   Therefore we can call `captured_by_move_projs.first().unwrap().first().unwrap()` safely.\n \n             // We don't capture derefs in case of move captures, which would have be applied to\n             // access any further paths.\n@@ -743,19 +779,19 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             ty::Adt(def, substs) => {\n                 // Multi-varaint enums are captured in entirety,\n-                // which would've been handled in the case of single empty slice in `captured_projs`.\n+                // which would've been handled in the case of single empty slice in `captured_by_move_projs`.\n                 assert_eq!(def.variants.len(), 1);\n \n                 // Only Field projections can be applied to a non-box Adt.\n                 assert!(\n-                    captured_projs.iter().all(|projs| matches!(\n+                    captured_by_move_projs.iter().all(|projs| matches!(\n                         projs.first().unwrap().kind,\n                         ProjectionKind::Field(..)\n                     ))\n                 );\n                 def.variants.get(VariantIdx::new(0)).unwrap().fields.iter().enumerate().any(\n                     |(i, field)| {\n-                        let paths_using_field = captured_projs\n+                        let paths_using_field = captured_by_move_projs\n                             .iter()\n                             .filter_map(|projs| {\n                                 if let ProjectionKind::Field(field_idx, _) =\n@@ -782,14 +818,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             ty::Tuple(..) => {\n                 // Only Field projections can be applied to a tuple.\n                 assert!(\n-                    captured_projs.iter().all(|projs| matches!(\n+                    captured_by_move_projs.iter().all(|projs| matches!(\n                         projs.first().unwrap().kind,\n                         ProjectionKind::Field(..)\n                     ))\n                 );\n \n                 base_path_ty.tuple_fields().enumerate().any(|(i, element_ty)| {\n-                    let paths_using_field = captured_projs\n+                    let paths_using_field = captured_by_move_projs\n                         .iter()\n                         .filter_map(|projs| {\n                             if let ProjectionKind::Field(field_idx, _) = projs.first().unwrap().kind\n@@ -1515,12 +1551,29 @@ fn should_do_migration_analysis(tcx: TyCtxt<'_>, closure_id: hir::HirId) -> bool\n     !matches!(level, lint::Level::Allow)\n }\n \n-fn migration_suggestion_for_2229(tcx: TyCtxt<'_>, need_migrations: &Vec<hir::HirId>) -> String {\n-    let need_migrations_strings =\n-        need_migrations.iter().map(|v| format!(\"{}\", var_name(tcx, *v))).collect::<Vec<_>>();\n-    let migrations_list_concat = need_migrations_strings.join(\", \");\n+/// Return a two string tuple (s1, s2)\n+/// - s1: Line of code that is needed for the migration: eg: `let _ = (&x, ...)`.\n+/// - s2: Comma separated names of the variables being migrated.\n+fn migration_suggestion_for_2229(\n+    tcx: TyCtxt<'_>,\n+    need_migrations: &Vec<hir::HirId>,\n+) -> (String, String) {\n+    let need_migrations_variables =\n+        need_migrations.iter().map(|v| var_name(tcx, *v)).collect::<Vec<_>>();\n+\n+    let migration_ref_concat =\n+        need_migrations_variables.iter().map(|v| format!(\"&{}\", v)).collect::<Vec<_>>().join(\", \");\n+\n+    let migration_string = if 1 == need_migrations.len() {\n+        format!(\"let _ = {}\", migration_ref_concat)\n+    } else {\n+        format!(\"let _ = ({})\", migration_ref_concat)\n+    };\n+\n+    let migrated_variables_concat =\n+        need_migrations_variables.iter().map(|v| format!(\"`{}`\", v)).collect::<Vec<_>>().join(\", \");\n \n-    format!(\"drop(&({}));\", migrations_list_concat)\n+    (migration_string, migrated_variables_concat)\n }\n \n /// Helper function to determine if we need to escalate CaptureKind from"}, {"sha": "324e894bafd23a0d698573a507dd57a2bcf6e13e", "filename": "library/alloc/src/vec/into_iter.rs", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -85,20 +85,29 @@ impl<T, A: Allocator> IntoIter<T, A> {\n         ptr::slice_from_raw_parts_mut(self.ptr as *mut T, self.len())\n     }\n \n-    pub(super) fn drop_remaining(&mut self) {\n-        unsafe {\n-            ptr::drop_in_place(self.as_mut_slice());\n-        }\n-        self.ptr = self.end;\n-    }\n+    /// Drops remaining elements and relinquishes the backing allocation.\n+    ///\n+    /// This is roughly equivalent to the following, but more efficient\n+    ///\n+    /// ```\n+    /// # let mut into_iter = Vec::<u8>::with_capacity(10).into_iter();\n+    /// (&mut into_iter).for_each(core::mem::drop);\n+    /// unsafe { core::ptr::write(&mut into_iter, Vec::new().into_iter()); }\n+    /// ```\n+    pub(super) fn forget_allocation_drop_remaining(&mut self) {\n+        let remaining = self.as_raw_mut_slice();\n \n-    /// Relinquishes the backing allocation, equivalent to\n-    /// `ptr::write(&mut self, Vec::new().into_iter())`\n-    pub(super) fn forget_allocation(&mut self) {\n+        // overwrite the individual fields instead of creating a new\n+        // struct and then overwriting &mut self.\n+        // this creates less assembly\n         self.cap = 0;\n         self.buf = unsafe { NonNull::new_unchecked(RawVec::NEW.ptr()) };\n         self.ptr = self.buf.as_ptr();\n         self.end = self.buf.as_ptr();\n+\n+        unsafe {\n+            ptr::drop_in_place(remaining);\n+        }\n     }\n }\n "}, {"sha": "e857d284d3ab654d14710d73d08a921f96f6661e", "filename": "library/alloc/src/vec/source_iter_marker.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Falloc%2Fsrc%2Fvec%2Fsource_iter_marker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Falloc%2Fsrc%2Fvec%2Fsource_iter_marker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fsource_iter_marker.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -69,9 +69,9 @@ where\n         }\n \n         // drop any remaining values at the tail of the source\n-        src.drop_remaining();\n         // but prevent drop of the allocation itself once IntoIter goes out of scope\n-        src.forget_allocation();\n+        // if the drop panics then we also leak any elements collected into dst_buf\n+        src.forget_allocation_drop_remaining();\n \n         let vec = unsafe { Vec::from_raw_parts(dst_buf, len, cap) };\n "}, {"sha": "b926c697d58abe739526f809d274ae6fa4be0fc2", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1027,7 +1027,7 @@ fn test_from_iter_specialization_head_tail_drop() {\n }\n \n #[test]\n-fn test_from_iter_specialization_panic_drop() {\n+fn test_from_iter_specialization_panic_during_iteration_drops() {\n     let drop_count: Vec<_> = (0..=2).map(|_| Rc::new(())).collect();\n     let src: Vec<_> = drop_count.iter().cloned().collect();\n     let iter = src.into_iter();\n@@ -1050,6 +1050,42 @@ fn test_from_iter_specialization_panic_drop() {\n     );\n }\n \n+#[test]\n+fn test_from_iter_specialization_panic_during_drop_leaks() {\n+    static mut DROP_COUNTER: usize = 0;\n+\n+    #[derive(Debug)]\n+    enum Droppable {\n+        DroppedTwice(Box<i32>),\n+        PanicOnDrop,\n+    }\n+\n+    impl Drop for Droppable {\n+        fn drop(&mut self) {\n+            match self {\n+                Droppable::DroppedTwice(_) => {\n+                    unsafe {\n+                        DROP_COUNTER += 1;\n+                    }\n+                    println!(\"Dropping!\")\n+                }\n+                Droppable::PanicOnDrop => {\n+                    if !std::thread::panicking() {\n+                        panic!();\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    let _ = std::panic::catch_unwind(AssertUnwindSafe(|| {\n+        let v = vec![Droppable::DroppedTwice(Box::new(123)), Droppable::PanicOnDrop];\n+        let _ = v.into_iter().take(0).collect::<Vec<_>>();\n+    }));\n+\n+    assert_eq!(unsafe { DROP_COUNTER }, 1);\n+}\n+\n #[test]\n fn test_cow_from() {\n     let borrowed: &[_] = &[\"borrowed\", \"(slice)\"];"}, {"sha": "b8f43caec32a3962e219cd6bbc0c7521a9bde4fc", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -343,6 +343,20 @@ pub mod guard {\n             // it can eventually grow to. It cannot be used to determine\n             // the position of kernel's stack guard.\n             None\n+        } else if cfg!(target_os = \"freebsd\") {\n+            // FreeBSD's stack autogrows, and optionally includes a guard page\n+            // at the bottom.  If we try to remap the bottom of the stack\n+            // ourselves, FreeBSD's guard page moves upwards.  So we'll just use\n+            // the builtin guard page.\n+            let stackaddr = get_stack_start_aligned()?;\n+            let guardaddr = stackaddr as usize;\n+            // Technically the number of guard pages is tunable and controlled\n+            // by the security.bsd.stack_guard_page sysctl, but there are\n+            // few reasons to change it from the default.  The default value has\n+            // been 1 ever since FreeBSD 11.1 and 10.4.\n+            const GUARD_PAGES: usize = 1;\n+            let guard = guardaddr..guardaddr + GUARD_PAGES * page_size;\n+            Some(guard)\n         } else {\n             // Reallocate the last page of the stack.\n             // This ensures SIGBUS will be raised on\n@@ -371,9 +385,8 @@ pub mod guard {\n             }\n \n             let guardaddr = stackaddr as usize;\n-            let offset = if cfg!(target_os = \"freebsd\") { 2 } else { 1 };\n \n-            Some(guardaddr..guardaddr + offset * page_size)\n+            Some(guardaddr..guardaddr + page_size)\n         }\n     }\n \n@@ -417,11 +430,7 @@ pub mod guard {\n             assert_eq!(libc::pthread_attr_getstack(&attr, &mut stackaddr, &mut size), 0);\n \n             let stackaddr = stackaddr as usize;\n-            ret = if cfg!(target_os = \"freebsd\") {\n-                // FIXME does freebsd really fault *below* the guard addr?\n-                let guardaddr = stackaddr - guardsize;\n-                Some(guardaddr - PAGE_SIZE.load(Ordering::Relaxed)..guardaddr)\n-            } else if cfg!(target_os = \"netbsd\") {\n+            ret = if cfg!(any(target_os = \"freebsd\", target_os = \"netbsd\")) {\n                 Some(stackaddr - guardsize..stackaddr)\n             } else if cfg!(all(target_os = \"linux\", target_env = \"musl\")) {\n                 Some(stackaddr - guardsize..stackaddr)"}, {"sha": "af93cd7a3e27d43f53d52db60136f2ac87a0126e", "filename": "library/std/src/sys/windows/alloc.rs", "status": "modified", "additions": 211, "deletions": 26, "changes": 237, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1,61 +1,246 @@\n+#![deny(unsafe_op_in_unsafe_fn)]\n+\n use crate::alloc::{GlobalAlloc, Layout, System};\n+use crate::ffi::c_void;\n+use crate::ptr;\n+use crate::sync::atomic::{AtomicPtr, Ordering};\n use crate::sys::c;\n use crate::sys_common::alloc::{realloc_fallback, MIN_ALIGN};\n \n-#[repr(C)]\n-struct Header(*mut u8);\n+#[cfg(test)]\n+mod tests;\n+\n+// Heap memory management on Windows is done by using the system Heap API (heapapi.h)\n+// See https://docs.microsoft.com/windows/win32/api/heapapi/\n+\n+// Flag to indicate that the memory returned by `HeapAlloc` should be zeroed.\n+const HEAP_ZERO_MEMORY: c::DWORD = 0x00000008;\n \n-unsafe fn get_header<'a>(ptr: *mut u8) -> &'a mut Header {\n-    &mut *(ptr as *mut Header).offset(-1)\n+extern \"system\" {\n+    // Get a handle to the default heap of the current process, or null if the operation fails.\n+    //\n+    // SAFETY: Successful calls to this function within the same process are assumed to\n+    // always return the same handle, which remains valid for the entire lifetime of the process.\n+    //\n+    // See https://docs.microsoft.com/windows/win32/api/heapapi/nf-heapapi-getprocessheap\n+    fn GetProcessHeap() -> c::HANDLE;\n+\n+    // Allocate a block of `dwBytes` bytes of memory from a given heap `hHeap`.\n+    // The allocated memory may be uninitialized, or zeroed if `dwFlags` is\n+    // set to `HEAP_ZERO_MEMORY`.\n+    //\n+    // Returns a pointer to the newly-allocated memory or null if the operation fails.\n+    // The returned pointer will be aligned to at least `MIN_ALIGN`.\n+    //\n+    // SAFETY:\n+    //  - `hHeap` must be a non-null handle returned by `GetProcessHeap`.\n+    //  - `dwFlags` must be set to either zero or `HEAP_ZERO_MEMORY`.\n+    //\n+    // Note that `dwBytes` is allowed to be zero, contrary to some other allocators.\n+    //\n+    // See https://docs.microsoft.com/windows/win32/api/heapapi/nf-heapapi-heapalloc\n+    fn HeapAlloc(hHeap: c::HANDLE, dwFlags: c::DWORD, dwBytes: c::SIZE_T) -> c::LPVOID;\n+\n+    // Reallocate a block of memory behind a given pointer `lpMem` from a given heap `hHeap`,\n+    // to a block of at least `dwBytes` bytes, either shrinking the block in place,\n+    // or allocating at a new location, copying memory, and freeing the original location.\n+    //\n+    // Returns a pointer to the reallocated memory or null if the operation fails.\n+    // The returned pointer will be aligned to at least `MIN_ALIGN`.\n+    // If the operation fails the given block will never have been freed.\n+    //\n+    // SAFETY:\n+    //  - `hHeap` must be a non-null handle returned by `GetProcessHeap`.\n+    //  - `dwFlags` must be set to zero.\n+    //  - `lpMem` must be a non-null pointer to an allocated block returned by `HeapAlloc` or\n+    //     `HeapReAlloc`, that has not already been freed.\n+    // If the block was successfully reallocated at a new location, pointers pointing to\n+    // the freed memory, such as `lpMem`, must not be dereferenced ever again.\n+    //\n+    // Note that `dwBytes` is allowed to be zero, contrary to some other allocators.\n+    //\n+    // See https://docs.microsoft.com/windows/win32/api/heapapi/nf-heapapi-heaprealloc\n+    fn HeapReAlloc(\n+        hHeap: c::HANDLE,\n+        dwFlags: c::DWORD,\n+        lpMem: c::LPVOID,\n+        dwBytes: c::SIZE_T,\n+    ) -> c::LPVOID;\n+\n+    // Free a block of memory behind a given pointer `lpMem` from a given heap `hHeap`.\n+    // Returns a nonzero value if the operation is successful, and zero if the operation fails.\n+    //\n+    // SAFETY:\n+    //  - `hHeap` must be a non-null handle returned by `GetProcessHeap`.\n+    //  - `dwFlags` must be set to zero.\n+    //  - `lpMem` must be a pointer to an allocated block returned by `HeapAlloc` or `HeapReAlloc`,\n+    //     that has not already been freed.\n+    // If the block was successfully freed, pointers pointing to the freed memory, such as `lpMem`,\n+    // must not be dereferenced ever again.\n+    //\n+    // Note that `lpMem` is allowed to be null, which will not cause the operation to fail.\n+    //\n+    // See https://docs.microsoft.com/windows/win32/api/heapapi/nf-heapapi-heapfree\n+    fn HeapFree(hHeap: c::HANDLE, dwFlags: c::DWORD, lpMem: c::LPVOID) -> c::BOOL;\n }\n \n-unsafe fn align_ptr(ptr: *mut u8, align: usize) -> *mut u8 {\n-    let aligned = ptr.add(align - (ptr as usize & (align - 1)));\n-    *get_header(aligned) = Header(ptr);\n-    aligned\n+// Cached handle to the default heap of the current process.\n+// Either a non-null handle returned by `GetProcessHeap`, or null when not yet initialized or `GetProcessHeap` failed.\n+static HEAP: AtomicPtr<c_void> = AtomicPtr::new(ptr::null_mut());\n+\n+// Get a handle to the default heap of the current process, or null if the operation fails.\n+// If this operation is successful, `HEAP` will be successfully initialized and contain\n+// a non-null handle returned by `GetProcessHeap`.\n+#[inline]\n+fn init_or_get_process_heap() -> c::HANDLE {\n+    let heap = HEAP.load(Ordering::Relaxed);\n+    if heap.is_null() {\n+        // `HEAP` has not yet been successfully initialized\n+        let heap = unsafe { GetProcessHeap() };\n+        if !heap.is_null() {\n+            // SAFETY: No locking is needed because within the same process,\n+            // successful calls to `GetProcessHeap` will always return the same value, even on different threads.\n+            HEAP.store(heap, Ordering::Release);\n+\n+            // SAFETY: `HEAP` contains a non-null handle returned by `GetProcessHeap`\n+            heap\n+        } else {\n+            // Could not get the current process heap.\n+            ptr::null_mut()\n+        }\n+    } else {\n+        // SAFETY: `HEAP` contains a non-null handle returned by `GetProcessHeap`\n+        heap\n+    }\n }\n \n+// Get a non-null handle to the default heap of the current process.\n+// SAFETY: `HEAP` must have been successfully initialized.\n #[inline]\n-unsafe fn allocate_with_flags(layout: Layout, flags: c::DWORD) -> *mut u8 {\n-    if layout.align() <= MIN_ALIGN {\n-        return c::HeapAlloc(c::GetProcessHeap(), flags, layout.size()) as *mut u8;\n+unsafe fn get_process_heap() -> c::HANDLE {\n+    HEAP.load(Ordering::Acquire)\n+}\n+\n+// Header containing a pointer to the start of an allocated block.\n+// SAFETY: Size and alignment must be <= `MIN_ALIGN`.\n+#[repr(C)]\n+struct Header(*mut u8);\n+\n+// Allocate a block of optionally zeroed memory for a given `layout`.\n+// SAFETY: Returns a pointer satisfying the guarantees of `System` about allocated pointers,\n+// or null if the operation fails. If this returns non-null `HEAP` will have been successfully\n+// initialized.\n+#[inline]\n+unsafe fn allocate(layout: Layout, zeroed: bool) -> *mut u8 {\n+    let heap = init_or_get_process_heap();\n+    if heap.is_null() {\n+        // Allocation has failed, could not get the current process heap.\n+        return ptr::null_mut();\n     }\n \n-    let size = layout.size() + layout.align();\n-    let ptr = c::HeapAlloc(c::GetProcessHeap(), flags, size);\n-    if ptr.is_null() { ptr as *mut u8 } else { align_ptr(ptr as *mut u8, layout.align()) }\n+    // Allocated memory will be either zeroed or uninitialized.\n+    let flags = if zeroed { HEAP_ZERO_MEMORY } else { 0 };\n+\n+    if layout.align() <= MIN_ALIGN {\n+        // SAFETY: `heap` is a non-null handle returned by `GetProcessHeap`.\n+        // The returned pointer points to the start of an allocated block.\n+        unsafe { HeapAlloc(heap, flags, layout.size()) as *mut u8 }\n+    } else {\n+        // Allocate extra padding in order to be able to satisfy the alignment.\n+        let total = layout.align() + layout.size();\n+\n+        // SAFETY: `heap` is a non-null handle returned by `GetProcessHeap`.\n+        let ptr = unsafe { HeapAlloc(heap, flags, total) as *mut u8 };\n+        if ptr.is_null() {\n+            // Allocation has failed.\n+            return ptr::null_mut();\n+        }\n+\n+        // Create a correctly aligned pointer offset from the start of the allocated block,\n+        // and write a header before it.\n+\n+        let offset = layout.align() - (ptr as usize & (layout.align() - 1));\n+        // SAFETY: `MIN_ALIGN` <= `offset` <= `layout.align()` and the size of the allocated\n+        // block is `layout.align() + layout.size()`. `aligned` will thus be a correctly aligned\n+        // pointer inside the allocated block with at least `layout.size()` bytes after it and at\n+        // least `MIN_ALIGN` bytes of padding before it.\n+        let aligned = unsafe { ptr.add(offset) };\n+        // SAFETY: Because the size and alignment of a header is <= `MIN_ALIGN` and `aligned`\n+        // is aligned to at least `MIN_ALIGN` and has at least `MIN_ALIGN` bytes of padding before\n+        // it, it is safe to write a header directly before it.\n+        unsafe { ptr::write((aligned as *mut Header).offset(-1), Header(ptr)) };\n+\n+        // SAFETY: The returned pointer does not point to the to the start of an allocated block,\n+        // but there is a header readable directly before it containing the location of the start\n+        // of the block.\n+        aligned\n+    }\n }\n \n+// All pointers returned by this allocator have, in addition to the guarantees of `GlobalAlloc`, the\n+// following properties:\n+//\n+// If the pointer was allocated or reallocated with a `layout` specifying an alignment <= `MIN_ALIGN`\n+// the pointer will be aligned to at least `MIN_ALIGN` and point to the start of the allocated block.\n+//\n+// If the pointer was allocated or reallocated with a `layout` specifying an alignment > `MIN_ALIGN`\n+// the pointer will be aligned to the specified alignment and not point to the start of the allocated block.\n+// Instead there will be a header readable directly before the returned pointer, containing the actual\n+// location of the start of the block.\n #[stable(feature = \"alloc_system_type\", since = \"1.28.0\")]\n unsafe impl GlobalAlloc for System {\n     #[inline]\n     unsafe fn alloc(&self, layout: Layout) -> *mut u8 {\n-        allocate_with_flags(layout, 0)\n+        // SAFETY: Pointers returned by `allocate` satisfy the guarantees of `System`\n+        let zeroed = false;\n+        unsafe { allocate(layout, zeroed) }\n     }\n \n     #[inline]\n     unsafe fn alloc_zeroed(&self, layout: Layout) -> *mut u8 {\n-        allocate_with_flags(layout, c::HEAP_ZERO_MEMORY)\n+        // SAFETY: Pointers returned by `allocate` satisfy the guarantees of `System`\n+        let zeroed = true;\n+        unsafe { allocate(layout, zeroed) }\n     }\n \n     #[inline]\n     unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {\n-        if layout.align() <= MIN_ALIGN {\n-            let err = c::HeapFree(c::GetProcessHeap(), 0, ptr as c::LPVOID);\n-            debug_assert!(err != 0, \"Failed to free heap memory: {}\", c::GetLastError());\n-        } else {\n-            let header = get_header(ptr);\n-            let err = c::HeapFree(c::GetProcessHeap(), 0, header.0 as c::LPVOID);\n-            debug_assert!(err != 0, \"Failed to free heap memory: {}\", c::GetLastError());\n-        }\n+        let block = {\n+            if layout.align() <= MIN_ALIGN {\n+                ptr\n+            } else {\n+                // The location of the start of the block is stored in the padding before `ptr`.\n+\n+                // SAFETY: Because of the contract of `System`, `ptr` is guaranteed to be non-null\n+                // and have a header readable directly before it.\n+                unsafe { ptr::read((ptr as *mut Header).offset(-1)).0 }\n+            }\n+        };\n+\n+        // SAFETY: because `ptr` has been successfully allocated with this allocator,\n+        // `HEAP` must have been successfully initialized.\n+        let heap = unsafe { get_process_heap() };\n+\n+        // SAFETY: `heap` is a non-null handle returned by `GetProcessHeap`,\n+        // `block` is a pointer to the start of an allocated block.\n+        unsafe { HeapFree(heap, 0, block as c::LPVOID) };\n     }\n \n     #[inline]\n     unsafe fn realloc(&self, ptr: *mut u8, layout: Layout, new_size: usize) -> *mut u8 {\n         if layout.align() <= MIN_ALIGN {\n-            c::HeapReAlloc(c::GetProcessHeap(), 0, ptr as c::LPVOID, new_size) as *mut u8\n+            // SAFETY: because `ptr` has been successfully allocated with this allocator,\n+            // `HEAP` must have been successfully initialized.\n+            let heap = unsafe { get_process_heap() };\n+\n+            // SAFETY: `heap` is a non-null handle returned by `GetProcessHeap`,\n+            // `ptr` is a pointer to the start of an allocated block.\n+            // The returned pointer points to the start of an allocated block.\n+            unsafe { HeapReAlloc(heap, 0, ptr as c::LPVOID, new_size) as *mut u8 }\n         } else {\n-            realloc_fallback(self, ptr, layout, new_size)\n+            // SAFETY: `realloc_fallback` is implemented using `dealloc` and `alloc`, which will\n+            // correctly handle `ptr` and return a pointer satisfying the guarantees of `System`\n+            unsafe { realloc_fallback(self, ptr, layout, new_size) }\n         }\n     }\n }"}, {"sha": "674a3e1d92d175443147e8d223d7c4d57e4e2bd3", "filename": "library/std/src/sys/windows/alloc/tests.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Falloc%2Ftests.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,9 @@\n+use super::{Header, MIN_ALIGN};\n+use crate::mem;\n+\n+#[test]\n+fn alloc_header() {\n+    // Header must fit in the padding before an aligned pointer\n+    assert!(mem::size_of::<Header>() <= MIN_ALIGN);\n+    assert!(mem::align_of::<Header>() <= MIN_ALIGN);\n+}"}, {"sha": "3e4176ef7f8fec9b5956c6350a9a8ae04e45201f", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -285,8 +285,6 @@ pub const FD_SETSIZE: usize = 64;\n \n pub const STACK_SIZE_PARAM_IS_A_RESERVATION: DWORD = 0x00010000;\n \n-pub const HEAP_ZERO_MEMORY: DWORD = 0x00000008;\n-\n pub const STATUS_SUCCESS: NTSTATUS = 0x00000000;\n \n #[repr(C)]\n@@ -1017,11 +1015,6 @@ extern \"system\" {\n         timeout: *const timeval,\n     ) -> c_int;\n \n-    pub fn GetProcessHeap() -> HANDLE;\n-    pub fn HeapAlloc(hHeap: HANDLE, dwFlags: DWORD, dwBytes: SIZE_T) -> LPVOID;\n-    pub fn HeapReAlloc(hHeap: HANDLE, dwFlags: DWORD, lpMem: LPVOID, dwBytes: SIZE_T) -> LPVOID;\n-    pub fn HeapFree(hHeap: HANDLE, dwFlags: DWORD, lpMem: LPVOID) -> BOOL;\n-\n     // >= Vista / Server 2008\n     // https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw\n     pub fn CreateSymbolicLinkW("}, {"sha": "246e0ebbb2ba0a1daa060781a1cf5fc5e715ca29", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -3,6 +3,7 @@ use std::convert::TryFrom;\n use std::ffi::OsStr;\n use std::fmt;\n use std::path::PathBuf;\n+use std::str::FromStr;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_session::config::{self, parse_crate_types_from_list, parse_externs, CrateType};\n@@ -266,6 +267,34 @@ crate struct RenderOptions {\n     /// If `true`, generate a JSON file in the crate folder instead of HTML redirection files.\n     crate generate_redirect_map: bool,\n     crate unstable_features: rustc_feature::UnstableFeatures,\n+    crate emit: Vec<EmitType>,\n+}\n+\n+#[derive(Copy, Clone, Debug, PartialEq, Eq)]\n+crate enum EmitType {\n+    Unversioned,\n+    Toolchain,\n+    InvocationSpecific,\n+}\n+\n+impl FromStr for EmitType {\n+    type Err = ();\n+\n+    fn from_str(s: &str) -> Result<Self, Self::Err> {\n+        use EmitType::*;\n+        match s {\n+            \"unversioned-shared-resources\" => Ok(Unversioned),\n+            \"toolchain-shared-resources\" => Ok(Toolchain),\n+            \"invocation-specific\" => Ok(InvocationSpecific),\n+            _ => Err(()),\n+        }\n+    }\n+}\n+\n+impl RenderOptions {\n+    crate fn should_emit_crate(&self) -> bool {\n+        self.emit.is_empty() || self.emit.contains(&EmitType::InvocationSpecific)\n+    }\n }\n \n impl Options {\n@@ -334,6 +363,19 @@ impl Options {\n         // check for deprecated options\n         check_deprecated_options(&matches, &diag);\n \n+        let mut emit = Vec::new();\n+        for list in matches.opt_strs(\"emit\") {\n+            for kind in list.split(',') {\n+                match kind.parse() {\n+                    Ok(kind) => emit.push(kind),\n+                    Err(()) => {\n+                        diag.err(&format!(\"unrecognized emission type: {}\", kind));\n+                        return Err(1);\n+                    }\n+                }\n+            }\n+        }\n+\n         let to_check = matches.opt_strs(\"check-theme\");\n         if !to_check.is_empty() {\n             let paths = theme::load_css_paths(static_files::themes::LIGHT.as_bytes());\n@@ -641,6 +683,7 @@ impl Options {\n                 unstable_features: rustc_feature::UnstableFeatures::from_environment(\n                     crate_name.as_deref(),\n                 ),\n+                emit,\n             },\n             crate_name,\n             output_format,"}, {"sha": "ae97cd64fb5fbe5010f7878f2d77ee3a66a48113", "filename": "src/librustdoc/formats/renderer.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fformats%2Frenderer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fformats%2Frenderer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Frenderer.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -63,10 +63,15 @@ crate fn run_format<'tcx, T: FormatRenderer<'tcx>>(\n ) -> Result<(), Error> {\n     let prof = &tcx.sess.prof;\n \n+    let emit_crate = options.should_emit_crate();\n     let (mut format_renderer, krate) = prof\n         .extra_verbose_generic_activity(\"create_renderer\", T::descr())\n         .run(|| T::init(krate, options, edition, cache, tcx))?;\n \n+    if !emit_crate {\n+        return Ok(());\n+    }\n+\n     // Render the crate documentation\n     let crate_name = krate.name;\n     let mut work = vec![(format_renderer.make_child_renderer(), krate.module)];"}, {"sha": "07c850a20a9a42c3c3121d3cec2d2e3bba153c33", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -79,17 +79,6 @@ crate struct Context<'tcx> {\n rustc_data_structures::static_assert_size!(Context<'_>, 152);\n \n impl<'tcx> Context<'tcx> {\n-    pub(super) fn path(&self, filename: &str) -> PathBuf {\n-        // We use splitn vs Path::extension here because we might get a filename\n-        // like `style.min.css` and we want to process that into\n-        // `style-suffix.min.css`.  Path::extension would just return `css`\n-        // which would result in `style.min-suffix.css` which isn't what we\n-        // want.\n-        let (base, ext) = filename.split_once('.').unwrap();\n-        let filename = format!(\"{}{}.{}\", base, self.shared.resource_suffix, ext);\n-        self.dst.join(&filename)\n-    }\n-\n     pub(super) fn tcx(&self) -> TyCtxt<'tcx> {\n         self.shared.tcx\n     }\n@@ -301,6 +290,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n     ) -> Result<(Self, clean::Crate), Error> {\n         // need to save a copy of the options for rendering the index page\n         let md_opts = options.clone();\n+        let emit_crate = options.should_emit_crate();\n         let RenderOptions {\n             output,\n             external_html,\n@@ -406,7 +396,9 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n \n         let dst = output;\n         scx.ensure_dir(&dst)?;\n-        krate = sources::render(&dst, &mut scx, krate)?;\n+        if emit_crate {\n+            krate = sources::render(&dst, &mut scx, krate)?;\n+        }\n \n         // Build our search index\n         let index = build_index(&krate, &mut cache, tcx);\n@@ -489,7 +481,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             |buf: &mut Buffer| all.print(buf),\n             &self.shared.style_files,\n         );\n-        self.shared.fs.write(&final_file, v.as_bytes())?;\n+        self.shared.fs.write(final_file, v.as_bytes())?;\n \n         // Generating settings page.\n         page.title = \"Rustdoc settings\";"}, {"sha": "59dc4ef944909c55f7e9b608723404aacc9cfc48", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 173, "deletions": 121, "changes": 294, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -13,8 +13,8 @@ use serde::Serialize;\n \n use super::{collect_paths_for_type, ensure_trailing_slash, Context, BASIC_KEYWORDS};\n use crate::clean::Crate;\n-use crate::config::RenderOptions;\n-use crate::docfs::{DocFS, PathError};\n+use crate::config::{EmitType, RenderOptions};\n+use crate::docfs::PathError;\n use crate::error::Error;\n use crate::formats::FormatRenderer;\n use crate::html::{layout, static_files};\n@@ -40,6 +40,102 @@ crate static FILES_UNVERSIONED: Lazy<FxHashMap<&str, &[u8]>> = Lazy::new(|| {\n     }\n });\n \n+enum SharedResource<'a> {\n+    /// This file will never change, no matter what toolchain is used to build it.\n+    ///\n+    /// It does not have a resource suffix.\n+    Unversioned { name: &'static str },\n+    /// This file may change depending on the toolchain.\n+    ///\n+    /// It has a resource suffix.\n+    ToolchainSpecific { basename: &'static str },\n+    /// This file may change for any crate within a build, or based on the CLI arguments.\n+    ///\n+    /// This differs from normal invocation-specific files because it has a resource suffix.\n+    InvocationSpecific { basename: &'a str },\n+}\n+\n+impl SharedResource<'_> {\n+    fn extension(&self) -> Option<&OsStr> {\n+        use SharedResource::*;\n+        match self {\n+            Unversioned { name }\n+            | ToolchainSpecific { basename: name }\n+            | InvocationSpecific { basename: name } => Path::new(name).extension(),\n+        }\n+    }\n+\n+    fn path(&self, cx: &Context<'_>) -> PathBuf {\n+        match self {\n+            SharedResource::Unversioned { name } => cx.dst.join(name),\n+            SharedResource::ToolchainSpecific { basename } => cx.suffix_path(basename),\n+            SharedResource::InvocationSpecific { basename } => cx.suffix_path(basename),\n+        }\n+    }\n+\n+    fn should_emit(&self, emit: &[EmitType]) -> bool {\n+        if emit.is_empty() {\n+            return true;\n+        }\n+        let kind = match self {\n+            SharedResource::Unversioned { .. } => EmitType::Unversioned,\n+            SharedResource::ToolchainSpecific { .. } => EmitType::Toolchain,\n+            SharedResource::InvocationSpecific { .. } => EmitType::InvocationSpecific,\n+        };\n+        emit.contains(&kind)\n+    }\n+}\n+\n+impl Context<'_> {\n+    fn suffix_path(&self, filename: &str) -> PathBuf {\n+        // We use splitn vs Path::extension here because we might get a filename\n+        // like `style.min.css` and we want to process that into\n+        // `style-suffix.min.css`.  Path::extension would just return `css`\n+        // which would result in `style.min-suffix.css` which isn't what we\n+        // want.\n+        let (base, ext) = filename.split_once('.').unwrap();\n+        let filename = format!(\"{}{}.{}\", base, self.shared.resource_suffix, ext);\n+        self.dst.join(&filename)\n+    }\n+\n+    fn write_shared<C: AsRef<[u8]>>(\n+        &self,\n+        resource: SharedResource<'_>,\n+        contents: C,\n+        emit: &[EmitType],\n+    ) -> Result<(), Error> {\n+        if resource.should_emit(emit) {\n+            self.shared.fs.write(resource.path(self), contents)\n+        } else {\n+            Ok(())\n+        }\n+    }\n+\n+    fn write_minify(\n+        &self,\n+        resource: SharedResource<'_>,\n+        contents: &str,\n+        minify: bool,\n+        emit: &[EmitType],\n+    ) -> Result<(), Error> {\n+        let tmp;\n+        let contents = if minify {\n+            tmp = if resource.extension() == Some(&OsStr::new(\"css\")) {\n+                minifier::css::minify(contents).map_err(|e| {\n+                    Error::new(format!(\"failed to minify CSS file: {}\", e), resource.path(self))\n+                })?\n+            } else {\n+                minifier::js::minify(contents)\n+            };\n+            tmp.as_bytes()\n+        } else {\n+            contents.as_bytes()\n+        };\n+\n+        self.write_shared(resource, contents, emit)\n+    }\n+}\n+\n pub(super) fn write_shared(\n     cx: &Context<'_>,\n     krate: &Crate,\n@@ -52,27 +148,31 @@ pub(super) fn write_shared(\n     let lock_file = cx.dst.join(\".lock\");\n     let _lock = try_err!(flock::Lock::new(&lock_file, true, true, true), &lock_file);\n \n+    // The weird `: &_` is to work around a borrowck bug: https://github.com/rust-lang/rust/issues/41078#issuecomment-293646723\n+    let write_minify = |p, c: &_| {\n+        cx.write_minify(\n+            SharedResource::ToolchainSpecific { basename: p },\n+            c,\n+            options.enable_minification,\n+            &options.emit,\n+        )\n+    };\n+    // Toolchain resources should never be dynamic.\n+    let write_toolchain = |p: &'static _, c: &'static _| {\n+        cx.write_shared(SharedResource::ToolchainSpecific { basename: p }, c, &options.emit)\n+    };\n+\n+    // Crate resources should always be dynamic.\n+    let write_crate = |p: &_, make_content: &dyn Fn() -> Result<Vec<u8>, Error>| {\n+        let content = make_content()?;\n+        cx.write_shared(SharedResource::InvocationSpecific { basename: p }, content, &options.emit)\n+    };\n+\n     // Add all the static files. These may already exist, but we just\n     // overwrite them anyway to make sure that they're fresh and up-to-date.\n-\n-    write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"rustdoc.css\"),\n-        static_files::RUSTDOC_CSS,\n-        options.enable_minification,\n-    )?;\n-    write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"settings.css\"),\n-        static_files::SETTINGS_CSS,\n-        options.enable_minification,\n-    )?;\n-    write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"noscript.css\"),\n-        static_files::NOSCRIPT_CSS,\n-        options.enable_minification,\n-    )?;\n+    write_minify(\"rustdoc.css\", static_files::RUSTDOC_CSS)?;\n+    write_minify(\"settings.css\", static_files::SETTINGS_CSS)?;\n+    write_minify(\"noscript.css\", static_files::NOSCRIPT_CSS)?;\n \n     // To avoid \"light.css\" to be overwritten, we'll first run over the received themes and only\n     // then we'll run over the \"official\" styles.\n@@ -85,106 +185,73 @@ pub(super) fn write_shared(\n \n         // Handle the official themes\n         match theme {\n-            \"light\" => write_minify(\n-                &cx.shared.fs,\n-                cx.path(\"light.css\"),\n-                static_files::themes::LIGHT,\n-                options.enable_minification,\n-            )?,\n-            \"dark\" => write_minify(\n-                &cx.shared.fs,\n-                cx.path(\"dark.css\"),\n-                static_files::themes::DARK,\n-                options.enable_minification,\n-            )?,\n-            \"ayu\" => write_minify(\n-                &cx.shared.fs,\n-                cx.path(\"ayu.css\"),\n-                static_files::themes::AYU,\n-                options.enable_minification,\n-            )?,\n+            \"light\" => write_minify(\"light.css\", static_files::themes::LIGHT)?,\n+            \"dark\" => write_minify(\"dark.css\", static_files::themes::DARK)?,\n+            \"ayu\" => write_minify(\"ayu.css\", static_files::themes::AYU)?,\n             _ => {\n                 // Handle added third-party themes\n-                let content = try_err!(fs::read(&entry.path), &entry.path);\n-                cx.shared\n-                    .fs\n-                    .write(cx.path(&format!(\"{}.{}\", theme, extension)), content.as_slice())?;\n+                let filename = format!(\"{}.{}\", theme, extension);\n+                write_crate(&filename, &|| Ok(try_err!(fs::read(&entry.path), &entry.path)))?;\n             }\n         };\n \n         themes.insert(theme.to_owned());\n     }\n \n-    let write = |p, c| cx.shared.fs.write(p, c);\n     if (*cx.shared).layout.logo.is_empty() {\n-        write(cx.path(\"rust-logo.png\"), static_files::RUST_LOGO)?;\n+        write_toolchain(\"rust-logo.png\", static_files::RUST_LOGO)?;\n     }\n     if (*cx.shared).layout.favicon.is_empty() {\n-        write(cx.path(\"favicon.svg\"), static_files::RUST_FAVICON_SVG)?;\n-        write(cx.path(\"favicon-16x16.png\"), static_files::RUST_FAVICON_PNG_16)?;\n-        write(cx.path(\"favicon-32x32.png\"), static_files::RUST_FAVICON_PNG_32)?;\n+        write_toolchain(\"favicon.svg\", static_files::RUST_FAVICON_SVG)?;\n+        write_toolchain(\"favicon-16x16.png\", static_files::RUST_FAVICON_PNG_16)?;\n+        write_toolchain(\"favicon-32x32.png\", static_files::RUST_FAVICON_PNG_32)?;\n     }\n-    write(cx.path(\"brush.svg\"), static_files::BRUSH_SVG)?;\n-    write(cx.path(\"wheel.svg\"), static_files::WHEEL_SVG)?;\n-    write(cx.path(\"down-arrow.svg\"), static_files::DOWN_ARROW_SVG)?;\n+    write_toolchain(\"brush.svg\", static_files::BRUSH_SVG)?;\n+    write_toolchain(\"wheel.svg\", static_files::WHEEL_SVG)?;\n+    write_toolchain(\"down-arrow.svg\", static_files::DOWN_ARROW_SVG)?;\n \n     let mut themes: Vec<&String> = themes.iter().collect();\n     themes.sort();\n \n+    // FIXME: this should probably not be a toolchain file since it depends on `--theme`.\n+    // But it seems a shame to copy it over and over when it's almost always the same.\n+    // Maybe we can change the representation to move this out of main.js?\n     write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"main.js\"),\n+        \"main.js\",\n         &static_files::MAIN_JS.replace(\n             \"/* INSERT THEMES HERE */\",\n             &format!(\" = {}\", serde_json::to_string(&themes).unwrap()),\n         ),\n-        options.enable_minification,\n-    )?;\n-    write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"settings.js\"),\n-        static_files::SETTINGS_JS,\n-        options.enable_minification,\n     )?;\n+    write_minify(\"settings.js\", static_files::SETTINGS_JS)?;\n     if cx.shared.include_sources {\n-        write_minify(\n-            &cx.shared.fs,\n-            cx.path(\"source-script.js\"),\n-            static_files::sidebar::SOURCE_SCRIPT,\n-            options.enable_minification,\n-        )?;\n+        write_minify(\"source-script.js\", static_files::sidebar::SOURCE_SCRIPT)?;\n     }\n \n     {\n         write_minify(\n-            &cx.shared.fs,\n-            cx.path(\"storage.js\"),\n+            \"storage.js\",\n             &format!(\n                 \"var resourcesSuffix = \\\"{}\\\";{}\",\n                 cx.shared.resource_suffix,\n                 static_files::STORAGE_JS\n             ),\n-            options.enable_minification,\n         )?;\n     }\n \n     if let Some(ref css) = cx.shared.layout.css_file_extension {\n-        let out = cx.path(\"theme.css\");\n         let buffer = try_err!(fs::read_to_string(css), css);\n-        if !options.enable_minification {\n-            cx.shared.fs.write(&out, &buffer)?;\n-        } else {\n-            write_minify(&cx.shared.fs, out, &buffer, options.enable_minification)?;\n-        }\n+        // This varies based on the invocation, so it can't go through the write_minify wrapper.\n+        cx.write_minify(\n+            SharedResource::InvocationSpecific { basename: \"theme.css\" },\n+            &buffer,\n+            options.enable_minification,\n+            &options.emit,\n+        )?;\n     }\n-    write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"normalize.css\"),\n-        static_files::NORMALIZE_CSS,\n-        options.enable_minification,\n-    )?;\n-    for (file, contents) in &*FILES_UNVERSIONED {\n-        write(cx.dst.join(file), contents)?;\n+    write_minify(\"normalize.css\", static_files::NORMALIZE_CSS)?;\n+    for (name, contents) in &*FILES_UNVERSIONED {\n+        cx.write_shared(SharedResource::Unversioned { name }, contents, &options.emit)?;\n     }\n \n     fn collect(path: &Path, krate: &str, key: &str) -> io::Result<(Vec<String>, Vec<String>)> {\n@@ -312,19 +379,22 @@ pub(super) fn write_shared(\n         }\n \n         let dst = cx.dst.join(&format!(\"source-files{}.js\", cx.shared.resource_suffix));\n-        let (mut all_sources, _krates) =\n-            try_err!(collect(&dst, &krate.name.as_str(), \"sourcesIndex\"), &dst);\n-        all_sources.push(format!(\n-            \"sourcesIndex[\\\"{}\\\"] = {};\",\n-            &krate.name,\n-            hierarchy.to_json_string()\n-        ));\n-        all_sources.sort();\n-        let v = format!(\n-            \"var N = null;var sourcesIndex = {{}};\\n{}\\ncreateSourceSidebar();\\n\",\n-            all_sources.join(\"\\n\")\n-        );\n-        cx.shared.fs.write(&dst, v.as_bytes())?;\n+        let make_sources = || {\n+            let (mut all_sources, _krates) =\n+                try_err!(collect(&dst, &krate.name.as_str(), \"sourcesIndex\"), &dst);\n+            all_sources.push(format!(\n+                \"sourcesIndex[\\\"{}\\\"] = {};\",\n+                &krate.name,\n+                hierarchy.to_json_string()\n+            ));\n+            all_sources.sort();\n+            Ok(format!(\n+                \"var N = null;var sourcesIndex = {{}};\\n{}\\ncreateSourceSidebar();\\n\",\n+                all_sources.join(\"\\n\")\n+            )\n+            .into_bytes())\n+        };\n+        write_crate(\"source-files.js\", &make_sources)?;\n     }\n \n     // Update the search index and crate list.\n@@ -337,17 +407,17 @@ pub(super) fn write_shared(\n     // Sort the indexes by crate so the file will be generated identically even\n     // with rustdoc running in parallel.\n     all_indexes.sort();\n-    {\n+    write_crate(\"search-index.js\", &|| {\n         let mut v = String::from(\"var searchIndex = JSON.parse('{\\\\\\n\");\n         v.push_str(&all_indexes.join(\",\\\\\\n\"));\n         v.push_str(\"\\\\\\n}');\\ninitSearch(searchIndex);\");\n-        cx.shared.fs.write(&dst, &v)?;\n-    }\n+        Ok(v.into_bytes())\n+    })?;\n \n-    let crate_list_dst = cx.dst.join(&format!(\"crates{}.js\", cx.shared.resource_suffix));\n-    let crate_list =\n-        format!(\"window.ALL_CRATES = [{}];\", krates.iter().map(|k| format!(\"\\\"{}\\\"\", k)).join(\",\"));\n-    cx.shared.fs.write(&crate_list_dst, &crate_list)?;\n+    write_crate(\"crates.js\", &|| {\n+        let krates = krates.iter().map(|k| format!(\"\\\"{}\\\"\", k)).join(\",\");\n+        Ok(format!(\"window.ALL_CRATES = [{}];\", krates).into_bytes())\n+    })?;\n \n     if options.enable_index_page {\n         if let Some(index_page) = options.index_page.clone() {\n@@ -481,21 +551,3 @@ pub(super) fn write_shared(\n     }\n     Ok(())\n }\n-\n-fn write_minify(\n-    fs: &DocFS,\n-    dst: PathBuf,\n-    contents: &str,\n-    enable_minification: bool,\n-) -> Result<(), Error> {\n-    if enable_minification {\n-        if dst.extension() == Some(&OsStr::new(\"css\")) {\n-            let res = try_none!(minifier::css::minify(contents).ok(), &dst);\n-            fs.write(dst, res.as_bytes())\n-        } else {\n-            fs.write(dst, minifier::js::minify(contents).as_bytes())\n-        }\n-    } else {\n-        fs.write(dst, contents.as_bytes())\n-    }\n-}"}, {"sha": "54a6fc625a6152f6e55c925436757de9c87452ae", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -527,6 +527,14 @@ fn opts() -> Vec<RustcOptGroup> {\n         unstable(\"print\", |o| {\n             o.optmulti(\"\", \"print\", \"Rustdoc information to print on stdout\", \"[unversioned-files]\")\n         }),\n+        unstable(\"emit\", |o| {\n+            o.optmulti(\n+                \"\",\n+                \"emit\",\n+                \"Comma separated list of types of output for rustdoc to emit\",\n+                \"[unversioned-shared-resources,toolchain-shared-resources,invocation-specific]\",\n+            )\n+        }),\n     ]\n }\n "}, {"sha": "d3d398f1fac2972097b6a3c348b26858f4333aaf", "filename": "src/test/run-make-fulldeps/coverage-reports/Makefile", "status": "modified", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports%2FMakefile?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -61,13 +61,6 @@ endif\n LLVM_COV_IGNORE_FILES=\\\n \t--ignore-filename-regex='(uses_crate.rs|uses_inline_crate.rs)'\n \n-# When generating `expected_*` results (using `x.py test --bless`), the `--debug` flag is forced.\n-# If assertions are disabled, the command will fail with an error, rather than attempt to generate\n-# only partial results.\n-ifdef RUSTC_BLESS_TEST\n-DEBUG_FLAG=--debug\n-endif\n-\n all: $(patsubst $(SOURCEDIR)/lib/%.rs,%,$(wildcard $(SOURCEDIR)/lib/*.rs)) $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n \n # Ensure there are no `expected` results for tests that may have been removed or renamed\n@@ -177,76 +170,3 @@ else\n \t\t\tfalse \\\n \t\t)\n endif\n-\n-####################################################################################################\n-\n-# The following Makefile content was used to copy the generated `counters` files\n-# to `expected_` files (when `--bless`ed) and to compare them via `diff`; but for\n-# multiple reasons, these files cannot easily be used for test validation:\n-#\n-#   * Output lines can be produced in non-deterministic order (depending on the\n-#     target platform, and sometimes on unrelated codegen changes).\n-#   * Some lines include demangled function names, making them more challenging\n-#     to interpret and compare.\n-#\n-# The files are still generated (in `$(TMPDIR)`) to support developers wanting\n-# to inspect the counters, for debugging purposes.\n-#\n-# ifdef RUSTC_BLESS_TEST\n-# \tcp \"$(TMPDIR)\"/actual_show_coverage_counters.$@.txt \\\n-# \t\t\texpected_show_coverage_counters.$@.txt\n-# else\n-#\n-# ifdef DEBUG_FLAG\n-# \t$(DIFF) expected_show_coverage_counters.$@.txt \"$(TMPDIR)\"/actual_show_coverage_counters.$@.txt || \\\n-# \t\t( grep -q '^\\/\\/ ignore-llvm-cov-show-diffs' $(SOURCEDIR)/$@.rs && \\\n-# \t\t\t>&2 echo 'diff failed, but suppressed with `// ignore-llvm-cov-show-diffs` in $(SOURCEDIR)/$@.rs' \\\n-# \t\t) || \\\n-# \t\t( >&2 echo 'diff failed, and not suppressed without `// ignore-llvm-cov-show-diffs` in $(SOURCEDIR)/$@.rs'; \\\n-# \t\t\t>&2 echo '(Ignore anyway until mangled function names in \"counters\" files are demangled.)' \\\n-# \t\t)\n-# endif\n-#\n-# endif\n-\n-####################################################################################################\n-\n-# The following Makefile content, and short JSON script, were used to generate\n-# coverage reports in JSON when the `llvm-cov show` reports were less reliable for\n-# testing. At the present time, however, the `llvm-cov show` results, and methods\n-# for comparing them, are working for all tests, making the JSON reports redundant.\n-#\n-# If this changes in the future, the scripts are left here, commented out, but can\n-# be resurrected if desired. This could be used to compare *only* the JSON files;\n-# and in that case, the `llvm-cov show` reports can be ignored by inserting\n-# `// ignore-llvm-cov-show-diffs` at the top of the source file.\n-#\n-# \t# Generate a coverage report in JSON, using `llvm-cov export`, and fail if\n-# \t# there are differences from the expected output.\n-# \t\"$(LLVM_BIN_DIR)\"/llvm-cov export \\\n-# \t\t\t$(LLVM_COV_IGNORE_FILES) \\\n-# \t\t\t--summary-only \\\n-# \t\t\t--instr-profile=\"$(TMPDIR)\"/$@.profdata \\\n-# \t\t\t$(call BIN,\"$(TMPDIR)\"/$@) \\\n-# \t\t| \"$(PYTHON)\" $(BASEDIR)/prettify_json.py \\\n-# \t\t> \"$(TMPDIR)\"/actual_export_coverage.$@.json\n-#\n-# ifdef RUSTC_BLESS_TEST\n-# \tcp \"$(TMPDIR)\"/actual_export_coverage.$@.json expected_export_coverage.$@.json\n-# else\n-# \t# Check that exported JSON coverage data matches what we expect (`--bless` refreshes `expected`)\n-# \t$(DIFF) expected_export_coverage.$@.json \"$(TMPDIR)\"/actual_export_coverage.$@.json\n-# endif\n-#\n-# # # If generating coverage reports in JSON, this Makefile is accompanied by\n-# # # a Python script, `prettify_json.py`, which is defined:\n-# #\n-# # #!/usr/bin/env python\n-# #\n-# # import sys\n-# # import json\n-# #\n-# # # Try to decode line in order to ensure it is a valid JSON document\n-# # for line in sys.stdin:\n-# #     parsed = json.loads(line)\n-# #     print (json.dumps(parsed, indent=2, separators=(',', ': '), sort_keys=True))"}, {"sha": "b3d1009dbd09260611bb6c4e7439e3af1ee60214", "filename": "src/test/run-make-fulldeps/coverage-spanview/Makefile", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,92 +0,0 @@\n-# needs-profiler-support\n-# min-llvm-version: 11.0\n-\n--include ../coverage/coverage_tools.mk\n-\n-BASEDIR=../coverage-spanview\n-SOURCEDIR=../coverage\n-\n-define SPANVIEW_HEADER\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.%s/%s\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-endef\n-export SPANVIEW_HEADER\n-\n-all: $(patsubst $(SOURCEDIR)/lib/%.rs,%,$(wildcard $(SOURCEDIR)/lib/*.rs)) $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n-\n-# Ensure there are no `expected` results for tests that may have been removed or renamed\n-.PHONY: clear_expected_if_blessed\n-clear_expected_if_blessed:\n-ifdef RUSTC_BLESS_TEST\n-\trm -rf expected_mir_dump.*/\n-endif\n-\n--include clear_expected_if_blessed\n-\n-# FIXME(richkadel): The actions for these two types of targets (libraries and binaries) should be\n-# combined.\n-\n-%: $(SOURCEDIR)/lib/%.rs\n-\t# Compile the test library with coverage instrumentation\n-\t$(RUSTC) $(SOURCEDIR)/lib/$@.rs \\\n-\t    $$( sed -n 's/^\\/\\/ compile-flags: \\([^#]*\\).*/\\1/p' $(SOURCEDIR)/lib/$@.rs ) \\\n-\t\t\t--crate-type rlib \\\n-\t\t\t-Ztrim-diagnostic-paths=no \\\n-\t\t\t-Zdump-mir=InstrumentCoverage -Zdump-mir-spanview -Zdump-mir-dir=\"$(TMPDIR)\"/mir_dump.$@ \\\n-\t\t\t-Zinstrument-coverage\n-\n-\tfor path in \"$(TMPDIR)\"/mir_dump.$@/*; do \\\n-\t\tfile=\"$$(basename \"$$path\")\"; \\\n-\t\turlescaped=\"$$(\"$(PYTHON)\" $(BASEDIR)/escape_url.py $$file)\" || exit $$?; \\\n-\t\tprintf \"$$SPANVIEW_HEADER\\n\" \"$@\" \"$$urlescaped\" > \"$$path\".modified; \\\n-\t\ttail -n +2 \"$$path\" >> \"$$path\".modified; \\\n-\t\tmv \"$$path\".modified \"$$path\"; \\\n-\tdone && true # for/done ends in non-zero status\n-\n-ifdef RUSTC_BLESS_TEST\n-\tmkdir -p expected_mir_dump.$@\n-\tcp \"$(TMPDIR)\"/mir_dump.$@/*InstrumentCoverage.0.html expected_mir_dump.$@/\n-else\n-\t# Check that the selected `mir_dump` files match what we expect (`--bless` refreshes `expected`)\n-\tmkdir -p \"$(TMPDIR)\"/actual_mir_dump.$@\n-\trm -f \"$(TMPDIR)\"/actual_mir_dump.$@/*\n-\tcp \"$(TMPDIR)\"/mir_dump.$@/*InstrumentCoverage.0.html \"$(TMPDIR)\"/actual_mir_dump.$@/\n-\t$(DIFF) -r expected_mir_dump.$@/ \"$(TMPDIR)\"/actual_mir_dump.$@/\n-endif\n-\n-%: $(SOURCEDIR)/%.rs\n-\t# Compile the test program with coverage instrumentation\n-\t$(RUSTC) $(SOURCEDIR)/$@.rs \\\n-\t\t\t$$( sed -n 's/^\\/\\/ compile-flags: \\([^#]*\\).*/\\1/p' $(SOURCEDIR)/$@.rs ) \\\n-\t\t\t-L \"$(TMPDIR)\" \\\n-\t\t\t-Ztrim-diagnostic-paths=no \\\n-\t\t\t-Zdump-mir=InstrumentCoverage -Zdump-mir-spanview -Zdump-mir-dir=\"$(TMPDIR)\"/mir_dump.$@ \\\n-\t\t\t-Zinstrument-coverage\n-\n-\tfor path in \"$(TMPDIR)\"/mir_dump.$@/*; do \\\n-\t\tfile=\"$$(basename \"$$path\")\"; \\\n-\t\turlescaped=\"$$(\"$(PYTHON)\" $(BASEDIR)/escape_url.py $$file)\" || exit $$?; \\\n-\t\tprintf \"$$SPANVIEW_HEADER\\n\" \"$@\" \"$$urlescaped\" > \"$$path\".modified; \\\n-\t\ttail -n +2 \"$$path\" >> \"$$path\".modified; \\\n-\t\tmv \"$$path\".modified \"$$path\"; \\\n-\tdone && true # for/done ends in non-zero status\n-\n-ifdef RUSTC_BLESS_TEST\n-\tmkdir -p expected_mir_dump.$@\n-\tcp \"$(TMPDIR)\"/mir_dump.$@/*InstrumentCoverage.0.html expected_mir_dump.$@/\n-else\n-\t# Check that the selected `mir_dump` files match what we expect (`--bless` refreshes `expected`)\n-\tmkdir -p \"$(TMPDIR)\"/actual_mir_dump.$@\n-\trm -f \"$(TMPDIR)\"/actual_mir_dump.$@/*\n-\tcp \"$(TMPDIR)\"/mir_dump.$@/*InstrumentCoverage.0.html \"$(TMPDIR)\"/actual_mir_dump.$@/\n-\t$(DIFF) -r expected_mir_dump.$@/ \"$(TMPDIR)\"/actual_mir_dump.$@/\n-endif"}, {"sha": "b725ed46303020c357069dacd2af536f15e3a3de", "filename": "src/test/run-make-fulldeps/coverage-spanview/escape_url.py", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fescape_url.py", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fescape_url.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fescape_url.py?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,12 +0,0 @@\n-#!/usr/bin/env python\n-\n-import sys\n-\n-# Support python 2 or 3\n-try:\n-    from urllib.parse import quote\n-except ImportError:\n-    from urllib import quote\n-\n-# Converts the input string into a valid URL parameter string.\n-print (quote(' '.join(sys.argv[1:])))"}, {"sha": "176587af25be05aac85a7236beffa5d8595020c7", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 106, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,106 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>abort.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:25-15:27: @0[1]: _1 = const 10_i32\n-15:9-15:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(), u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:25-15:27: @0[1]: _1 = const 10_i32\n-15:9-15:22: @0[2]: FakeRead(ForLet, _1)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:11-16:20: @2[2]: _5 = _1\n-16:11-16:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n-16:11-16:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:12-17:21: @5[3]: _8 = _1\n-17:12-17:25: @5[4]: _7 = Lt(move _8, const 5_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @6.Call: _9 = might_abort(const false) -&gt; [return: bb8, unwind: bb19]\n-17:26-19:10: @8[1]: _6 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @6.Call: _9 = might_abort(const false) -&gt; [return: bb8, unwind: bb19]\n-17:26-19:10: @8[1]: _6 = const ()\">            might_abort(false);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @6.Call: _9 = might_abort(const false) -&gt; [return: bb8, unwind: bb19]\n-17:26-19:10: @8[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:10-19:10: @7[0]: _6 = const ()\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // See discussion (below the `Notes` section) on coverage results for the closing brace.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:12-21:21: @9[5]: _12 = _1\n-21:12-21:25: @9[6]: _11 = Lt(move _12, const 5_i32)\"><span class=\"annotation\">@9\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:28-21:46: @10.Call: _13 = might_abort(const false) -&gt; [return: bb12, unwind: bb19]\n-21:26-21:49: @12[1]: _10 = const ()\"><span class=\"annotation\">@10,12\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@10,12</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:49-21:49: @11[0]: _10 = const ()\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"> // Counts for different regions on one line.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // For the following example, the closing brace is the last character on the line.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // This shows the character after the closing brace is highlighted, even if that next</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // character is a newline.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:12-25:21: @13[5]: _16 = _1\n-25:12-25:25: @13[6]: _15 = Lt(move _16, const 5_i32)\"><span class=\"annotation\">@13\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:28-25:46: @14.Call: _17 = might_abort(const false) -&gt; [return: bb16, unwind: bb19]\n-25:26-25:49: @16[1]: _14 = const ()\"><span class=\"annotation\">@14,16\u298a</span>{ might_abort(false); }<span class=\"annotation\">\u2989@14,16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:49-25:49: @15[0]: _14 = const ()\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:23: @17[2]: _18 = CheckedSub(_1, const 1_i32)\n-26:9-26:23: @18[0]: _1 = move (_18.0: i32)\"><span class=\"annotation\">@17,18\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@17,18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:10: @4[4]: _20 = ()\n-28:5-28:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _20)\n-29:2-29:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:10: @4[4]: _20 = ()\n-28:5-28:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _20)\n-29:2-29:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a302b974ae1d2285b50078b2a8e7b2cb844733a5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,163 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>abort.might_abort - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn might_abort(should_abort: bool) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:20: @0[1]: _2 = _1\"><span class=\"annotation\">@0\u298a</span>should_abort<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @1[6]: _33 = const might_abort::promoted[3]\n-7:18-7:31: @1[7]: _9 = &amp;(*_33)\n-7:18-7:31: @1[8]: _8 = &amp;(*_9)\n-7:18-7:31: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-7:9-7:33: @1[15]: _15 = ()\n-7:9-7:33: @1[16]: FakeRead(ForMatchedPlace, _15)\n-7:9-7:33: @1[17]: _32 = const might_abort::promoted[2]\n-7:9-7:33: @1[18]: _13 = &amp;(*_32)\n-7:9-7:33: @1[19]: _12 = &amp;(*_13)\n-7:9-7:33: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:9-7:33: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-7:9-7:33: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n-7:9-7:33: @4[5]: _4 = const ()\n-8:9-8:37: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"aborting...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @1[6]: _33 = const might_abort::promoted[3]\n-7:18-7:31: @1[7]: _9 = &amp;(*_33)\n-7:18-7:31: @1[8]: _8 = &amp;(*_9)\n-7:18-7:31: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-7:9-7:33: @1[15]: _15 = ()\n-7:9-7:33: @1[16]: FakeRead(ForMatchedPlace, _15)\n-7:9-7:33: @1[17]: _32 = const might_abort::promoted[2]\n-7:9-7:33: @1[18]: _13 = &amp;(*_32)\n-7:9-7:33: @1[19]: _12 = &amp;(*_13)\n-7:9-7:33: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:9-7:33: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-7:9-7:33: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n-7:9-7:33: @4[5]: _4 = const ()\n-8:9-8:37: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n-10:18-10:31: @2[7]: _23 = &amp;(*_31)\n-10:18-10:31: @2[8]: _22 = &amp;(*_23)\n-10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-10:9-10:33: @2[15]: _29 = ()\n-10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n-10:9-10:33: @2[18]: _27 = &amp;(*_30)\n-10:9-10:33: @2[19]: _26 = &amp;(*_27)\n-10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-10:9-10:33: @6[5]: _18 = const ()\n-9:12-11:6: @6[7]: _0 = const ()\n-12:2-12:2: @6.Return: return\"><span class=\"annotation\">@2,5,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n-10:18-10:31: @2[7]: _23 = &amp;(*_31)\n-10:18-10:31: @2[8]: _22 = &amp;(*_23)\n-10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-10:9-10:33: @2[15]: _29 = ()\n-10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n-10:9-10:33: @2[18]: _27 = &amp;(*_30)\n-10:9-10:33: @2[19]: _26 = &amp;(*_27)\n-10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-10:9-10:33: @6[5]: _18 = const ()\n-9:12-11:6: @6[7]: _0 = const ()\n-12:2-12:2: @6.Return: return\">        println!(\"Don't Panic\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n-10:18-10:31: @2[7]: _23 = &amp;(*_31)\n-10:18-10:31: @2[8]: _22 = &amp;(*_23)\n-10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-10:9-10:33: @2[15]: _29 = ()\n-10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n-10:9-10:33: @2[18]: _27 = &amp;(*_30)\n-10:9-10:33: @2[19]: _26 = &amp;(*_27)\n-10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-10:9-10:33: @6[5]: _18 = const ()\n-9:12-11:6: @6[7]: _0 = const ()\n-12:2-12:2: @6.Return: return\">    }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n-10:18-10:31: @2[7]: _23 = &amp;(*_31)\n-10:18-10:31: @2[8]: _22 = &amp;(*_23)\n-10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-10:9-10:33: @2[15]: _29 = ()\n-10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n-10:9-10:33: @2[18]: _27 = &amp;(*_30)\n-10:9-10:33: @2[19]: _26 = &amp;(*_27)\n-10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-10:9-10:33: @6[5]: _18 = const ()\n-9:12-11:6: @6[7]: _0 = const ()\n-12:2-12:2: @6.Return: return\">}<span class=\"annotation\">\u2989@2,5,6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "365e94cd31e50f6951608e54b2721ce55b0ec3f8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,102 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>assert.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:25-10:27: @0[1]: _1 = const 10_i32\n-10:9-10:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:25-10:27: @0[1]: _1 = const 10_i32\n-10:9-10:22: @0[2]: FakeRead(ForLet, _1)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:11-11:20: @2[2]: _5 = _1\n-11:11-11:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n-11:11-11:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:12-12:21: @5[3]: _8 = _1\n-12:12-12:26: @5[4]: _7 = Eq(move _8, const 1_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @6.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb8, unwind: bb15]\n-12:27-14:10: @8[1]: _6 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @6.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb8, unwind: bb15]\n-12:27-14:10: @8[1]: _6 = const ()\">            might_fail_assert(3);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @6.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb8, unwind: bb15]\n-12:27-14:10: @8[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:19-14:28: @7[2]: _11 = _1\n-14:19-14:32: @7[3]: _10 = Lt(move _11, const 5_i32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @9.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb11, unwind: bb15]\n-14:33-16:10: @11[1]: _6 = const ()\"><span class=\"annotation\">@9,11\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @9.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb11, unwind: bb15]\n-14:33-16:10: @11[1]: _6 = const ()\">            might_fail_assert(2);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @9.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb11, unwind: bb15]\n-14:33-16:10: @11[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@9,11</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:10-16:10: @10[0]: _6 = const ()\"><span class=\"annotation\">@10\u298a</span>\u2038<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:23: @13[2]: _13 = CheckedSub(_1, const 1_i32)\n-17:9-17:23: @14[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@13,14\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n-19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n-20:2-20:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n-19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n-20:2-20:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "db72a5306ff709d81d1068d94a0ae5353b37d75e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,97 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>assert.might_fail_assert - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn might_fail_assert(one_plus_one: u32) <span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:32: @0[6]: _53 = const might_fail_assert::promoted[3]\n-5:14-5:32: @0[7]: _7 = &amp;(*_53)\n-5:14-5:32: @0[8]: _6 = &amp;(*_7)\n-5:14-5:32: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-5:34-5:46: @0[17]: _14 = &amp;_1\n-5:5-5:48: @0[18]: _13 = (move _14,)\n-5:5-5:48: @0[20]: FakeRead(ForMatchedPlace, _13)\n-5:5-5:48: @0[22]: _15 = (_13.0: &amp;u32)\n-5:5-5:48: @0[25]: _17 = &amp;(*_15)\n-5:5-5:48: @0[27]: _18 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:5-5:48: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb8]\n-5:5-5:48: @1[2]: _12 = [move _16]\n-5:5-5:48: @1[5]: _11 = &amp;_12\n-5:5-5:48: @1[6]: _10 = &amp;(*_11)\n-5:5-5:48: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-5:5-5:48: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb8]\n-5:5-5:48: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb8]\n-5:5-5:48: @3[6]: _2 = const ()\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>println!(\"does 1 + 1 = {}?\", one_plus_one);<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @5[19]: _51 = const might_fail_assert::promoted[1]\n-6:37-6:61: @5[20]: _43 = &amp;(*_51)\n-6:37-6:61: @5[21]: _42 = &amp;(*_43)\n-6:37-6:61: @5[22]: _41 = move _42 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:2-7:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "21bfce701fe6e5f6e4b175847bdac5d68525f8f6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.c-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\">                        <span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:9: @0[5]: _5 = _3\n-6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:9: @0[5]: _5 = _3\n-6:8-6:14: @0[6]: _4 = Eq(move _5, const 8_u8)\">    if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:10: @1[0]: _0 = const 1_u8\"><span class=\"annotation\">@1\u298a</span>1<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:9-9:10: @2[0]: _0 = const 0_u8\"><span class=\"annotation\">@2\u298a</span>0<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:2-11:2: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3eee0dd4100edcc0f838537a9f61699b9aa6d3b1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.c.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,80 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.c.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.c - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn c(x: u8) -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if x == 8 {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        0</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n-</body>\n-</html>"}, {"sha": "7cf34f077954f64bcba944fabf32d53dc5e60b7e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.d-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 12\"><span class=\"line\">                   <span><span class=\"code even\" style=\"--layer: 1\" title=\"13:22-13:23: @0[0]: _0 = const 1_u8\n-13:25-13:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n-</body>\n-</html>"}, {"sha": "5c7f6e00224a060a18d3cae348d0238ee1a023a4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.d.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.d.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.d - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 12\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn d() -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n-</body>\n-</html>"}, {"sha": "1f95a7d35af8888a45e22e704fb1fde024702acc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.e-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\">                   <span><span class=\"code even\" style=\"--layer: 1\" title=\"15:22-15:23: @0[0]: _0 = const 1_u8\n-15:25-15:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n-</body>\n-</html>"}, {"sha": "ee3b7b1d7ffc72689f8b4d3d98a89cd11905a86d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.e.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.e.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.e - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn e() -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n-</body>\n-</html>"}, {"sha": "64fc1568b00855750595b71995304508851b60d3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,84 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.executor-block_on-VTABLE-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 23\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"24:38-24:74: @1[3]: _13 = (move _14,)\n-24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n-24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n-24:38-24:74: @1[10]: _27 = &amp;(*_25)\n-24:38-24:74: @1[12]: _28 = &lt;std::fmt::Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:38-24:74: @1.Call: _26 = std::fmt::ArgumentV1::new::&lt;std::fmt::Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n-24:38-24:74: @2[2]: _12 = [move _26]\n-24:38-24:74: @2[5]: _11 = &amp;_12\n-24:38-24:74: @2[6]: _10 = &amp;(*_11)\n-24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:38-24:74: @2.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n-</body>\n-</html>"}, {"sha": "1bbcfa5744b6bf32efb2f1301ba7e4826e47094b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#1}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,84 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.executor-block_on-VTABLE-{closure#1} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 23\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"24:38-24:74: @1[3]: _13 = (move _14,)\n-24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n-24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n-24:38-24:74: @1[10]: _27 = &amp;(*_25)\n-24:38-24:74: @1[12]: _28 = &lt;std::fmt::Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:38-24:74: @1.Call: _26 = std::fmt::ArgumentV1::new::&lt;std::fmt::Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n-24:38-24:74: @2[2]: _12 = [move _26]\n-24:38-24:74: @2[5]: _11 = &amp;_12\n-24:38-24:74: @2[6]: _10 = &amp;(*_11)\n-24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:38-24:74: @2.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n-</body>\n-</html>"}, {"sha": "14cb98d20c98885e1b2324fcb865671ceaadbf00", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#2}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,84 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.executor-block_on-VTABLE-{closure#2} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 23\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"24:38-24:74: @1[3]: _13 = (move _14,)\n-24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n-24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n-24:38-24:74: @1[10]: _27 = &amp;(*_25)\n-24:38-24:74: @1[12]: _28 = &lt;std::fmt::Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:38-24:74: @1.Call: _26 = std::fmt::ArgumentV1::new::&lt;std::fmt::Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n-24:38-24:74: @2[2]: _12 = [move _26]\n-24:38-24:74: @2[5]: _11 = &amp;_12\n-24:38-24:74: @2[6]: _10 = &amp;(*_11)\n-24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:38-24:74: @2.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n-</body>\n-</html>"}, {"sha": "ef2fe7d06825daf40e7e68dfe22ced004a7b7c32", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#3}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.executor-block_on-VTABLE-{closure#3} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 116\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">|_| </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"117:17-117:19: @0[0]: _0 = ()\n-117:19-117:19: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>()<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "9a5bd6e42cd3762785fd6a0f29cf2bc33025db42", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 239, "changes": 239, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,239 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.executor-block_on - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 109\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>pub fn block_on&lt;F: Future&gt;(mut future: F) -&gt; F::Output {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let mut future = unsafe { Pin::new_unchecked(&amp;mut future) };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        static VTABLE: RawWakerVTable = RawWakerVTable::new(</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"clone\"),</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake\"),</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake_by_ref\"),</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| (),</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        );</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &amp;VTABLE)) };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n-111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n-119:79-119:86: @2[4]: _8 = &amp;(*_9)\n-119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n-119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n-120:47-120:53: @4[7]: _12 = &amp;_4\n-120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n-120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let mut context = Context::from_waker(&amp;waker)<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        loop {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if let Poll::Ready(</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"123:32-123:35: @12[1]: _20 = move ((_14 as Ready).0: &lt;F as std::future::Future&gt;::Output)\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">) = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"123:39-123:45: @7[3]: _16 = &amp;mut _2\n-123:39-123:54: @7.Call: _15 = std::pin::Pin::&lt;&amp;mut F&gt;::as_mut(move _16) -&gt; [return: bb8, unwind: bb19]\n-123:60-123:72: @8[3]: _18 = &amp;mut _10\n-123:60-123:72: @8[4]: _17 = &amp;mut (*_18)\n-123:39-123:73: @8.Call: _14 = &lt;F as std::future::Future&gt;::poll(move _15, move _17) -&gt; [return: bb9, unwind: bb19]\n-123:39-123:73: @9[2]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@6,7,8,9\u298a</span>future.as_mut().poll(&amp;mut context)<span class=\"annotation\">\u2989@6,7,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                break </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"124:23-124:26: @12[2]: _0 = move _20\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"125:14-125:14: @11[0]: _13 = const ()\"><span class=\"annotation\">@11,13\u298a</span>\u2038<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"127:6-127:6: @17.Return: return\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "74b62673ac94bbe3f04aa3f406231236582d0280", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.f-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">                   <span><span class=\"code even\" style=\"--layer: 1\" title=\"17:22-17:23: @0[0]: _0 = const 1_u8\n-17:25-17:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n-</body>\n-</html>"}, {"sha": "a31bca54df2e5ecda7a0de9bc6cdbc39962dc706", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.f - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn f() -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ 1 }</span></span></div>\n-</body>\n-</html>"}, {"sha": "b8c53cccabda12156f5d73c0811353202f8155a8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.foo-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 18\"><span class=\"line\">                             <span><span class=\"code even\" style=\"--layer: 1\" title=\"19:32-19:43: @0[0]: _0 = [const false; 10]\n-19:45-19:45: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{ [false; 10] }</span></span></div>\n-</body>\n-</html>"}, {"sha": "cf72a9d532c79d850d52511735f3f8af7289fb29", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.foo - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 18\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn foo() -&gt; [bool; 10] <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ [false; 10] }</span></span></div>\n-</body>\n-</html>"}, {"sha": "b10012621b7dd980754e87082cb27aeae38926e5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.g-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"22:11-22:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,3,4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:11-22:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:14-23:17: @3.Call: _8 = e() -&gt; [return: bb4, unwind: bb58]\n-23:14-23:17: @4[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,3,4\u298a</span>e()<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:27-23:28: @15[2]: _24 = (*_5)\"><span class=\"annotation\">@10,13,15,16\u298a</span>y<span class=\"annotation\">\u2989@10,13,15,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:32-23:34: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:9-24:10: @33[3]: _25 = _3\"><span class=\"annotation\">@33\u298a</span>y<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:14-24:17: @19.Call: _29 = f() -&gt; [return: bb20, unwind: bb51]\n-24:14-24:17: @20[0]: FakeRead(ForMatchedPlace, _29)\"><span class=\"annotation\">@1,19,20\u298a</span>f()<span class=\"annotation\">\u2989@1,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:27-24:28: @31[2]: _44 = (*_26)\"><span class=\"annotation\">@26,29,31,32\u298a</span>y<span class=\"annotation\">\u2989@26,29,31,32</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:32-24:34: @33[4]: _0 = ()\"><span class=\"annotation\">@33\u298a</span>()<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:14-25:16: @2[0]: _0 = ()\"><span class=\"annotation\">@2\u298a</span>()<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:2-27:2: @36.Return: return\"><span class=\"annotation\">@35,36\u298a</span>\u2038<span class=\"annotation\">\u2989@35,36</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "973995477b9aab4e69d2c8ce6cb1d0b32de305d0", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,80 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.g - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>pub async fn g(x: u8) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if e().await == y =&gt; (),</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y =&gt; (),</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n-</body>\n-</html>"}, {"sha": "6b4b43f836580d6515c9eda53aa81a948ed31f41", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.h-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 28\"><span class=\"line\">                     <span><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{ // The function signature is counted when called, but the body is not</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                       // executed (not awaited) so the open brace has a `0` count (at least when</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                       // displayed with `llvm-cov show` in color-mode).</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"32:11-32:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:9-33:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:14-33:19: @2.Call: _8 = foo() -&gt; [return: bb3, unwind: bb33]\n-33:14-33:19: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>foo()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await[</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:26-33:27: @14[2]: _24 = (*_5)\"><span class=\"annotation\">@9,12,14,15,16\u298a</span>y<span class=\"annotation\">\u2989@9,12,14,15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">] =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:32-33:34: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:14-34:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @20.Return: return\"><span class=\"annotation\">@19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@19,20</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "f2ea01281fe1e59d597626c3ea58a48a5f9644bb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,81 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.h - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 28\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn h(x: usize) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ // The function signature is counted when called, but the body is not</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                       // executed (not awaited) so the open brace has a `0` count (at least when</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                       // displayed with `llvm-cov show` in color-mode).</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if foo().await[y] =&gt; (),</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n-</body>\n-</html>"}, {"sha": "1c63875a8be9bb7a94b609697ee325ac05ae0d13", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,89 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.i-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 37\"><span class=\"line\">                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,3,4\u298a</span>{ // line coverage is 1, but there are 2 regions:</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                    // (a) the function signature, counted when the function is called; and</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                    // (b) the open brace for the function body, counted once when the body is</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">                    // executed asynchronously.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"42:11-42:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17,19\u298a</span>y<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:16-43:17: @3[6]: _9 = _3\n-43:14-43:18: @3.Call: _8 = c(move _9) -&gt; [return: bb4, unwind: bb82]\n-43:14-43:18: @4[1]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,3,4\u298a</span>c(x)<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:28-43:29: @15[3]: _26 = (*_5)\n-43:28-43:33: @15[4]: _25 = Add(move _26, const 1_u8)\"><span class=\"annotation\">@10,13,15,16\u298a</span>y + 1<span class=\"annotation\">\u2989@10,13,15,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; { </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:39-43:42: @17.Call: _28 = d() -&gt; [return: bb19, unwind: bb75]\n-43:39-43:42: @19[0]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@17,19\u298a</span>d()<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\">.await; }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:9-44:10: @46[3]: _43 = _3\"><span class=\"annotation\">@46\u298a</span>y<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:14-44:17: @32.Call: _47 = f() -&gt; [return: bb33, unwind: bb68]\n-44:14-44:17: @33[0]: FakeRead(ForMatchedPlace, _47)\"><span class=\"annotation\">@1,32,33\u298a</span>f()<span class=\"annotation\">\u2989@1,32,33</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:27-44:28: @44[3]: _63 = (*_44)\n-44:27-44:32: @44[4]: _62 = Add(move _63, const 1_u8)\"><span class=\"annotation\">@39,42,44,45\u298a</span>y + 1<span class=\"annotation\">\u2989@39,42,44,45</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:36-44:38: @46[4]: _0 = ()\"><span class=\"annotation\">@46\u298a</span>()<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:14-45:16: @2[0]: _0 = ()\"><span class=\"annotation\">@2\u298a</span>()<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:2-47:2: @49.Return: return\"><span class=\"annotation\">@48,49\u298a</span>\u2038<span class=\"annotation\">\u2989@48,49</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "e5dc6ecd4eb63cba7cd12d50f7fd989756dd2102", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 83, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,83 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.i - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 37\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn i(x: u8) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ // line coverage is 1, but there are 2 regions:</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    // (a) the function signature, counted when the function is called; and</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    // (b) the open brace for the function body, counted once when the body is</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    // executed asynchronously.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if c(x).await == y + 1 =&gt; { d().await; }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y + 1 =&gt; (),</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span></span></div>\n-</body>\n-</html>"}, {"sha": "e6384b7598fc28f7a4943c0554ece1d949fb5fd1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-c.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-c.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,90 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-c.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.j-c - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 50\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"52:12-52:13: @0[2]: _3 = _1\n-52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\"><span class=\"annotation\">@0\u298a</span>fn c(x: u8) -&gt; u8 {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:12-52:13: @0[2]: _3 = _1\n-52:12-52:18: @0[3]: _2 = Eq(move _3, const 8_u8)\">        if x == 8<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"53:13-53:14: @1[0]: _0 = const 1_u8\"><span class=\"annotation\">@1\u298a</span>1<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"> // This line appears covered, but the 1-character expression span covering the `1`</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // is not executed. (`llvm-cov show` displays a `^0` below the `1` ). This is because</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // `fn j()` executes the open brace for the funciton body, followed by the function's</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // first executable statement, `match x`. Inner function declarations are not</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // \"visible\" to the MIR for `j()`, so the code region counts all lines between the</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // open brace and the first statement as executed, which is, in a sense, true.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // `llvm-cov show` overcomes this kind of situation by showing the actual counts</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // of the enclosed coverages, (that is, the `1` expression was not executed, and</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">              // accurately displays a `0`).</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:13-63:14: @2[0]: _0 = const 0_u8\"><span class=\"annotation\">@2\u298a</span>0<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:6-65:6: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4eed8ee60dd64e11081fabed100754c42321fc64", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-d.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-d.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-d.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-d.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-d.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.j-d - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 65\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"66:20-66:21: @0[0]: _0 = const 1_u8\n-66:23-66:23: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>fn d() -&gt; u8 { 1 }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "6e80c8c786ecb87b9b3cf51dece5470fc8869880", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-f.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-f.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-f.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j-f.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j-f.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.j-f - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 66\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"67:20-67:21: @0[0]: _0 = const 1_u8\n-67:23-67:23: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>fn f() -&gt; u8 { 1 }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "2b43c7bd25d90bcbf8cf6bc533f69380c06216ab", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 106, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.j.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,106 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.j.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.j - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 48\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0,3,4\u298a</span>fn j(x: u8) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    // non-async versions of `c()`, `d()`, and `f()` to make it similar to async `i()`.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    fn c(x: u8) -&gt; u8 {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">        if x == 8 {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">            1 // This line appears covered, but the 1-character expression span covering the `1`</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // is not executed. (`llvm-cov show` displays a `^0` below the `1` ). This is because</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // `fn j()` executes the open brace for the funciton body, followed by the function's</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // first executable statement, `match x`. Inner function declarations are not</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // \"visible\" to the MIR for `j()`, so the code region counts all lines between the</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // open brace and the first statement as executed, which is, in a sense, true.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // `llvm-cov show` overcomes this kind of situation by showing the actual counts</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // of the enclosed coverages, (that is, the `1` expression was not executed, and</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">              // accurately displays a `0`).</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">        } else {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">            0</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">        }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    fn d() -&gt; u8 { 1 }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    fn f() -&gt; u8 { 1 }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:11-68:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    match x<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:9-69:10: @5[3]: _2 = _1\"><span class=\"annotation\">@5,7\u298a</span>y<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"69:16-69:17: @3[5]: _6 = _1\n-69:14-69:18: @3.Call: _5 = j::c(move _6) -&gt; [return: bb4, unwind: bb13]\n-69:22-69:23: @4[3]: _8 = (*_3)\n-69:22-69:27: @4[4]: _7 = Add(move _8, const 1_u8)\n-69:14-69:27: @4[6]: _4 = Eq(move _5, move _7)\"><span class=\"annotation\">@0,3,4\u298a</span>c(x) == y + 1<span class=\"annotation\">\u2989@0,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:33-69:36: @5.Call: _9 = j::d() -&gt; [return: bb7, unwind: bb13]\n-69:31-69:39: @7[1]: _0 = const ()\"><span class=\"annotation\">@5,7\u298a</span>{ d(); }<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:9-70:10: @10[3]: _10 = _1\"><span class=\"annotation\">@10\u298a</span>y<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"70:14-70:17: @8.Call: _13 = j::f() -&gt; [return: bb9, unwind: bb13]\n-70:21-70:22: @9[2]: _15 = (*_11)\n-70:21-70:26: @9[3]: _14 = Add(move _15, const 1_u8)\n-70:14-70:26: @9[5]: _12 = Eq(move _13, move _14)\"><span class=\"annotation\">@1,8,9\u298a</span>f() == y + 1<span class=\"annotation\">\u2989@1,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:30-70:32: @10[4]: _0 = ()\"><span class=\"annotation\">@10\u298a</span>()<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"71:14-71:16: @2[0]: _0 = ()\"><span class=\"annotation\">@2\u298a</span>()<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"73:2-73:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "5792521bb2c57c323b05547c84ef260cb0d61f02", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.k.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.k.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.k.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.k.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,80 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.k.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.k - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"76:11-76:12: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>fn k(x: u8) { // unused function</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"76:11-76:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    match x<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"77:14-77:16: @4[0]: _0 = ()\"><span class=\"annotation\">@1,4\u298a</span>()<span class=\"annotation\">\u2989@1,4</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:14-78:16: @5[0]: _0 = ()\"><span class=\"annotation\">@2,5\u298a</span>()<span class=\"annotation\">\u2989@2,5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:14-79:16: @3[0]: _0 = ()\"><span class=\"annotation\">@3\u298a</span>()<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:2-81:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "cd92b88c24cbb4a1e71ceb3e9c8c08f97b5b9ccf", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.l.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.l.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.l.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.l.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,80 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.l.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.l - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 82\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"84:11-84:12: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>fn l(x: u8) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"84:11-84:12: @0[0]: FakeRead(ForMatchedPlace, _1)\">    match x<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"85:14-85:16: @4[0]: _0 = ()\"><span class=\"annotation\">@1,4\u298a</span>()<span class=\"annotation\">\u2989@1,4</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"86:14-86:16: @5[0]: _0 = ()\"><span class=\"annotation\">@2,5\u298a</span>()<span class=\"annotation\">\u2989@2,5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"87:14-87:16: @3[0]: _0 = ()\"><span class=\"annotation\">@3\u298a</span>()<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"89:2-89:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "5cec484a964dae5a9469ef63d9dee2a19eeb3865", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,78 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.m-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 90\"><span class=\"line\">                        <span><span class=\"code even\" style=\"--layer: 1\" title=\"91:25-91:34: @0[1]: _3 = (_1.0: u8)\n-91:25-91:34: @0[2]: FakeRead(ForLet, _3)\n-91:27-91:28: @0[4]: _4 = _3\n-91:27-91:32: @0[5]: _0 = Sub(move _4, const 1_u8)\n-91:34-91:34: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>{ x - 1 }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "04412c1d9942780ec21622e5ed8827a5cbbf5eff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.m.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.m.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.m - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 90\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>async fn m(x: u8) -&gt; u8 <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{ x - 1 }</span></span></div>\n-</body>\n-</html>"}, {"sha": "b892af0ed37d5c4ab809861a8d37da8ca42c0bc8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 190, "changes": 190, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,190 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>async.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 92\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9,10,11,12,13\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">    let _ = g(10);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">    let _ = h(9);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">    let mut future = Box::pin(i(8));</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">    j(7);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">    l(6);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">    let _ = m(5);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">    executor::block_on(future.as_mut());</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n-95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n-96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n-96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n-97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n-98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n-99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n-100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n-93:11-101:2: @12[2]: _0 = const ()\n-101:2-101:2: @13.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9,10,11,12,13</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3998295a0525e70eb9a2aa6e4880d233e7ec1e6b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,96 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n-35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n-36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n-35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n-36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"35:29-35:30: @0[1]: _2 = const 0_i32\n-35:13-35:26: @0[2]: FakeRead(ForLet, _2)\n-36:12-36:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @1[0]: _2 = const 10_i32\n-36:21-38:10: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @1[0]: _2 = const 10_i32\n-36:21-38:10: @1[1]: _3 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"37:13-37:27: @1[0]: _2 = const 10_i32\n-36:21-38:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @3[4]: _6 = const &quot;alt string 2&quot;\n-39:9-39:23: @3[5]: _5 = &amp;(*_6)\n-39:9-39:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-40:6-40:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 2\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @3[4]: _6 = const &quot;alt string 2&quot;\n-39:9-39:23: @3[5]: _5 = &amp;(*_6)\n-39:9-39:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-40:6-40:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3bdfe71b48c2760d745c786fe6390454379c5071", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#10}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,96 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#10} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n-20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n-21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n-20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n-21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:37-20:38: @0[1]: _2 = const 0_i32\n-20:21-20:34: @0[2]: FakeRead(ForLet, _2)\n-21:20-21:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @1[0]: _2 = const 10_i32\n-21:29-23:18: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @1[0]: _2 = const 10_i32\n-21:29-23:18: @1[1]: _3 = const ()\">                    countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:21-22:35: @1[0]: _2 = const 10_i32\n-21:29-23:18: @1[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @3[4]: _6 = const &quot;alt string 1&quot;\n-24:17-24:31: @3[5]: _5 = &amp;(*_6)\n-24:17-24:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-25:14-25:14: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 1\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @3[4]: _6 = const &quot;alt string 1&quot;\n-24:17-24:31: @3[5]: _5 = &amp;(*_6)\n-24:17-24:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-25:14-25:14: @4.Return: return\">            }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4b3f04b5a0c7e6cd81c94195c028656269f33ec0", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#11}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,96 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#11} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 59\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n-62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n-63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n-62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n-63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"62:37-62:38: @0[1]: _2 = const 0_i32\n-62:21-62:34: @0[2]: FakeRead(ForLet, _2)\n-63:20-63:28: @0[5]: _4 = (*(_1.0: &amp;bool))\">                if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @1[0]: _2 = const 10_i32\n-63:29-65:18: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @1[0]: _2 = const 10_i32\n-63:29-65:18: @1[1]: _3 = const ()\">                    countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"64:21-64:35: @1[0]: _2 = const 10_i32\n-63:29-65:18: @1[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @3[4]: _6 = const &quot;alt string 3&quot;\n-66:17-66:31: @3[5]: _5 = &amp;(*_6)\n-66:17-66:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-67:14-67:14: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 3\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @3[4]: _6 = const &quot;alt string 3&quot;\n-66:17-66:31: @3[5]: _5 = &amp;(*_6)\n-66:17-66:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-67:14-67:14: @4.Return: return\">            }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "8ae494178f70b41a8a458595690ad787337a6661", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,96 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#1} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 74\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n-77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n-78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n-77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n-78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:29-77:30: @0[1]: _2 = const 0_i32\n-77:13-77:26: @0[2]: FakeRead(ForLet, _2)\n-78:12-78:20: @0[5]: _4 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @1[0]: _2 = const 10_i32\n-78:21-80:10: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @1[0]: _2 = const 10_i32\n-78:21-80:10: @1[1]: _3 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"79:13-79:27: @1[0]: _2 = const 10_i32\n-78:21-80:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @3[4]: _6 = const &quot;alt string 4&quot;\n-81:9-81:23: @3[5]: _5 = &amp;(*_6)\n-81:9-81:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-82:6-82:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 4\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @3[4]: _6 = const &quot;alt string 4&quot;\n-81:9-81:23: @3[5]: _5 = &amp;(*_6)\n-81:9-81:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-82:6-82:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "ad40ba57d69be40f4b21548c8e0e8c166b0dc394", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 128, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,128 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#2} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 96\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">|val|</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n-99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n-99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\">        let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"99:29-99:30: @0[1]: _3 = const 0_i32\n-99:13-99:26: @0[2]: FakeRead(ForLet, _3)\n-100:12-100:20: @0[5]: _5 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n-100:21-102:10: @1[1]: _4 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n-100:21-102:10: @1[1]: _4 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"101:13-101:27: @1[0]: _3 = const 10_i32\n-100:21-102:10: @1[1]: _4 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"102:10-102:10: @2[0]: _4 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @3[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @3[8]: _10 = &amp;(*_22)\n-103:17-103:23: @3[9]: _9 = &amp;(*_10)\n-103:17-103:23: @3[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @3[18]: _17 = &amp;_2\n-103:9-103:29: @3[19]: _16 = (move _17,)\n-103:9-103:29: @3[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @3[26]: _20 = &amp;(*_18)\n-103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @3.Call: _19 = std::fmt::ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n-103:9-103:29: @4[2]: _15 = [move _19]\n-103:9-103:29: @4[5]: _14 = &amp;_15\n-103:9-103:29: @4[6]: _13 = &amp;(*_14)\n-103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @4.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n-103:9-103:29: @5.Call: _6 = std::fmt::format(move _7) -&gt; [return: bb6, unwind: bb8]\n-103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @6[6]: _0 = move _6\n-104:6-104:6: @7.Return: return\"><span class=\"annotation\">@3,4,5,6,7\u298a</span>format!(\"'{}'\", val)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"103:17-103:23: @3[7]: _22 = const main::{closure#2}::promoted[0]\n-103:17-103:23: @3[8]: _10 = &amp;(*_22)\n-103:17-103:23: @3[9]: _9 = &amp;(*_10)\n-103:17-103:23: @3[10]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-103:25-103:28: @3[18]: _17 = &amp;_2\n-103:9-103:29: @3[19]: _16 = (move _17,)\n-103:9-103:29: @3[21]: FakeRead(ForMatchedPlace, _16)\n-103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n-103:9-103:29: @3[26]: _20 = &amp;(*_18)\n-103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @3.Call: _19 = std::fmt::ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n-103:9-103:29: @4[2]: _15 = [move _19]\n-103:9-103:29: @4[5]: _14 = &amp;_15\n-103:9-103:29: @4[6]: _13 = &amp;(*_14)\n-103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @4.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n-103:9-103:29: @5.Call: _6 = std::fmt::format(move _7) -&gt; [return: bb6, unwind: bb8]\n-103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n-103:9-103:29: @6[6]: _0 = move _6\n-104:6-104:6: @7.Return: return\">    }<span class=\"annotation\">\u2989@3,4,5,6,7</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "23101d76a8ef46c8b2fa6348e90c1967fb2bb610", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,91 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#3} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 119\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">|</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            mut countdown</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        |</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"124:12-124:20: @0[2]: _4 = (*((*_1).0: &amp;bool))\">        if is_false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @1[0]: _2 = const 10_i32\n-124:21-126:10: @1[1]: _3 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @1[0]: _2 = const 10_i32\n-124:21-126:10: @1[1]: _3 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"125:13-125:27: @1[0]: _2 = const 10_i32\n-124:21-126:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"126:10-126:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @3[4]: _6 = const &quot;closure should be unused&quot;\n-127:9-127:35: @3[5]: _5 = &amp;(*_6)\n-127:9-127:46: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-128:6-128:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"closure should be unused\".to_owned()</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @3[4]: _6 = const &quot;closure should be unused&quot;\n-127:9-127:35: @3[5]: _5 = &amp;(*_6)\n-127:9-127:46: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n-128:6-128:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "420135e143dbfcffb2c8c2f178fd8a28a8340eda", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#4}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,76 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%234%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#4} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 130\"><span class=\"line\">                                <span class=\"code\" style=\"--layer: 0\">| _unused_arg: u8 | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"131:53-131:67: @0[0]: (*((*_1).0: &amp;mut i32)) = Add((*((*_1).0: &amp;mut i32)), const 1_i32)\n-131:53-131:67: @0[1]: _0 = const ()\n-131:67-131:67: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>countdown += 1<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "1c19aa8eeefaacd30dbb678ef49c1470c05e84b4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#5}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,115 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#5} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 95\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"96:23-98:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n-96:23-98:6: @0[6]: _7 = &amp;(*_15)\n-96:23-98:6: @0[7]: _6 = &amp;(*_7)\n-96:23-98:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-97:28-97:61: @0[14]: _13 = ()\n-97:28-97:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n-97:28-97:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n-97:28-97:61: @0[17]: _11 = &amp;(*_14)\n-97:28-97:61: @0[18]: _10 = &amp;(*_11)\n-97:28-97:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-97:28-97:61: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-97:9-97:62: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-96:23-98:6: @2[5]: _0 = const ()\n-96:23-98:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"96:23-98:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n-96:23-98:6: @0[6]: _7 = &amp;(*_15)\n-96:23-98:6: @0[7]: _6 = &amp;(*_7)\n-96:23-98:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-97:28-97:61: @0[14]: _13 = ()\n-97:28-97:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n-97:28-97:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n-97:28-97:61: @0[17]: _11 = &amp;(*_14)\n-97:28-97:61: @0[18]: _10 = &amp;(*_11)\n-97:28-97:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-97:28-97:61: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-97:9-97:62: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-96:23-98:6: @2[5]: _0 = const ()\n-96:23-98:6: @2.Return: return\">        $crate::io::_print($crate::format_args_nl!($($arg)*));</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"96:23-98:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n-96:23-98:6: @0[6]: _7 = &amp;(*_15)\n-96:23-98:6: @0[7]: _6 = &amp;(*_7)\n-96:23-98:6: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-97:28-97:61: @0[14]: _13 = ()\n-97:28-97:61: @0[15]: FakeRead(ForMatchedPlace, _13)\n-97:28-97:61: @0[16]: _14 = const main::{closure#5}::promoted[0]\n-97:28-97:61: @0[17]: _11 = &amp;(*_14)\n-97:28-97:61: @0[18]: _10 = &amp;(*_11)\n-97:28-97:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-97:28-97:61: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-97:9-97:62: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-96:23-98:6: @2[5]: _0 = const ()\n-96:23-98:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "74c75c6c46ca20fbad7f47d09e05be610aa77523", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#6}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,87 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#6} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 140\"><span class=\"line\">                                      <span class=\"code\" style=\"--layer: 0\">| _unused_arg: u8 | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"141:70-141:82: @0[5]: _15 = const main::{closure#6}::promoted[1]\n-141:70-141:82: @0[6]: _7 = &amp;(*_15)\n-141:70-141:82: @0[7]: _6 = &amp;(*_7)\n-141:70-141:82: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-141:61-141:83: @0[14]: _13 = ()\n-141:61-141:83: @0[15]: FakeRead(ForMatchedPlace, _13)\n-141:61-141:83: @0[16]: _14 = const main::{closure#6}::promoted[0]\n-141:61-141:83: @0[17]: _11 = &amp;(*_14)\n-141:61-141:83: @0[18]: _10 = &amp;(*_11)\n-141:61-141:83: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-141:61-141:83: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-141:61-141:83: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-141:61-141:83: @2[5]: _0 = const ()\n-141:85-141:85: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "386fb1b9e6f954080afd8d40398b944006de6109", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#7}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,115 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#7} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 142\"><span class=\"line\">                                   <span class=\"code\" style=\"--layer: 0\">| _unused_arg: u8 | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n-144:18-144:30: @0[6]: _7 = &amp;(*_15)\n-144:18-144:30: @0[7]: _6 = &amp;(*_7)\n-144:18-144:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-144:9-144:31: @0[14]: _13 = ()\n-144:9-144:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n-144:9-144:31: @0[16]: _14 = const main::{closure#7}::promoted[0]\n-144:9-144:31: @0[17]: _11 = &amp;(*_14)\n-144:9-144:31: @0[18]: _10 = &amp;(*_11)\n-144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-144:9-144:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-144:9-144:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-144:9-144:31: @2[5]: _0 = const ()\n-145:6-145:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n-144:18-144:30: @0[6]: _7 = &amp;(*_15)\n-144:18-144:30: @0[7]: _6 = &amp;(*_7)\n-144:18-144:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-144:9-144:31: @0[14]: _13 = ()\n-144:9-144:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n-144:9-144:31: @0[16]: _14 = const main::{closure#7}::promoted[0]\n-144:9-144:31: @0[17]: _11 = &amp;(*_14)\n-144:9-144:31: @0[18]: _10 = &amp;(*_11)\n-144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-144:9-144:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-144:9-144:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-144:9-144:31: @2[5]: _0 = const ()\n-145:6-145:6: @2.Return: return\">        println!(\"not called\")</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n-144:18-144:30: @0[6]: _7 = &amp;(*_15)\n-144:18-144:30: @0[7]: _6 = &amp;(*_7)\n-144:18-144:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-144:9-144:31: @0[14]: _13 = ()\n-144:9-144:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n-144:9-144:31: @0[16]: _14 = const main::{closure#7}::promoted[0]\n-144:9-144:31: @0[17]: _11 = &amp;(*_14)\n-144:9-144:31: @0[18]: _10 = &amp;(*_11)\n-144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-144:9-144:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-144:9-144:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-144:9-144:31: @2[5]: _0 = const ()\n-145:6-145:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "f9da6ac9dfc342dd9ca6f7695fe7ef6abccd9770", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#8}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,89 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#8} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 146\"><span class=\"line\">                                   <span class=\"code\" style=\"--layer: 0\">|</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _unused_arg: u8</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"149:18-149:30: @0[5]: _15 = const main::{closure#8}::promoted[1]\n-149:18-149:30: @0[6]: _7 = &amp;(*_15)\n-149:18-149:30: @0[7]: _6 = &amp;(*_7)\n-149:18-149:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-149:9-149:31: @0[14]: _13 = ()\n-149:9-149:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n-149:9-149:31: @0[16]: _14 = const main::{closure#8}::promoted[0]\n-149:9-149:31: @0[17]: _11 = &amp;(*_14)\n-149:9-149:31: @0[18]: _10 = &amp;(*_11)\n-149:9-149:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-149:9-149:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-149:9-149:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-149:9-149:31: @2[5]: _0 = const ()\n-149:33-149:33: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "e259fc9bb67e7f25345619201dcb5a010c57e86a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#9}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,89 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>closure.main-{closure#9} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 150\"><span class=\"line\">                                          <span class=\"code\" style=\"--layer: 0\">|</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _unused_arg: u8</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    | </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"153:18-153:30: @0[5]: _15 = const main::{closure#9}::promoted[1]\n-153:18-153:30: @0[6]: _7 = &amp;(*_15)\n-153:18-153:30: @0[7]: _6 = &amp;(*_7)\n-153:18-153:30: @0[8]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-153:9-153:31: @0[14]: _13 = ()\n-153:9-153:31: @0[15]: FakeRead(ForMatchedPlace, _13)\n-153:9-153:31: @0[16]: _14 = const main::{closure#9}::promoted[0]\n-153:9-153:31: @0[17]: _11 = &amp;(*_14)\n-153:9-153:31: @0[18]: _10 = &amp;(*_11)\n-153:9-153:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-153:9-153:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-153:9-153:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n-153:9-153:31: @2[5]: _0 = const ()\n-153:33-153:33: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a7d1728114ec9efe34d341f1e32bf3696d7c1cdc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 10921, "changes": 10921, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858"}, {"sha": "3d1b737ec2d7e82247774c41c6c53de9c8209b3c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 307, "changes": 307, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,307 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>conditions.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn main() <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n-4:9-4:22: @0[2]: FakeRead(ForLet, _1)\n-5:8-5:12: @0[5]: _3 = const true\"><span class=\"annotation\">@0\u298a</span>mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"4:25-4:26: @0[1]: _1 = const 0_u32\n-4:9-4:22: @0[2]: FakeRead(ForLet, _1)\n-5:8-5:12: @0[5]: _3 = const true\">    if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @1[0]: _1 = const 10_u32\n-5:13-7:6: @1[1]: _2 = const ()\"><span class=\"annotation\">@1\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @1[0]: _1 = const 10_u32\n-5:13-7:6: @1[1]: _2 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:9-6:23: @1[0]: _1 = const 10_u32\n-5:13-7:6: @1[1]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2[0]: _2 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const B: u32 = 100;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @19[1]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@19\u298a</span>x<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @3[5]: _6 = _1\n-10:16-10:29: @3[6]: _5 = Gt(move _6, const 7_u32)\"><span class=\"annotation\">@3\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _7 = CheckedSub(_1, const 4_u32)\n-11:9-11:23: @6[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @6[1]: _4 = const main::B\"><span class=\"annotation\">@4,6\u298a</span>countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _7 = CheckedSub(_1, const 4_u32)\n-11:9-11:23: @6[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @6[1]: _4 = const main::B\">        B<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @5[2]: _9 = _1\n-13:15-13:28: @5[3]: _8 = Gt(move _9, const 2_u32)\"><span class=\"annotation\">@5\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @7[5]: _14 = _1\n-14:12-14:25: @7[6]: _13 = Lt(move _14, const 1_u32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:29-14:38: @13[2]: _16 = _1\n-14:29-14:42: @13[3]: _15 = Gt(move _16, const 5_u32)\"><span class=\"annotation\">@13\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:46-14:55: @10[2]: _18 = _1\n-14:46-14:60: @10[3]: _17 = Ne(move _18, const 9_u32)\"><span class=\"annotation\">@10\u298a</span>countdown != 9<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @15[0]: _1 = const 0_u32\n-14:61-16:10: @15[1]: _10 = const ()\"><span class=\"annotation\">@15\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @15[0]: _1 = const 0_u32\n-14:61-16:10: @15[1]: _10 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @15[0]: _1 = const 0_u32\n-14:61-16:10: @15[1]: _10 = const ()\">        }<span class=\"annotation\">\u2989@15</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @16[0]: _10 = const ()\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @17[2]: _19 = CheckedSub(_1, const 5_u32)\n-17:9-17:23: @18[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @18[1]: _4 = _1\"><span class=\"annotation\">@17,18\u298a</span>countdown -= 5;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @17[2]: _19 = CheckedSub(_1, const 5_u32)\n-17:9-17:23: @18[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @18[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@17,18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @8[0]: _0 = const ()\"><span class=\"annotation\">@8\u298a</span>return<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @19[3]: _21 = const 0_i32\n-23:9-23:22: @19[4]: FakeRead(ForLet, _21)\n-24:8-24:12: @19[7]: _23 = const true\"><span class=\"annotation\">@19\u298a</span>mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:25-23:26: @19[3]: _21 = const 0_i32\n-23:9-23:22: @19[4]: FakeRead(ForLet, _21)\n-24:8-24:12: @19[7]: _23 = const true\">    if true<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @20[0]: _21 = const 10_i32\n-24:13-26:6: @20[1]: _22 = const ()\"><span class=\"annotation\">@20\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @20[0]: _21 = const 10_i32\n-24:13-26:6: @20[1]: _22 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @20[0]: _21 = const 10_i32\n-24:13-26:6: @20[1]: _22 = const ()\">    }<span class=\"annotation\">\u2989@20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @21[0]: _22 = const ()\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @22[5]: _26 = _21\n-28:8-28:21: @22[6]: _25 = Gt(move _26, const 7_i32)\"><span class=\"annotation\">@22\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @23[0]: _27 = CheckedSub(_21, const 4_i32)\n-29:9-29:23: @25[0]: _21 = move (_27.0: i32)\n-28:22-30:6: @25[1]: _24 = const ()\"><span class=\"annotation\">@23,25\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @23[0]: _27 = CheckedSub(_21, const 4_i32)\n-29:9-29:23: @25[0]: _21 = move (_27.0: i32)\n-28:22-30:6: @25[1]: _24 = const ()\">        countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @23[0]: _27 = CheckedSub(_21, const 4_i32)\n-29:9-29:23: @25[0]: _21 = move (_27.0: i32)\n-28:22-30:6: @25[1]: _24 = const ()\">    }<span class=\"annotation\">\u2989@23,25</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @24[2]: _29 = _21\n-30:15-30:28: @24[3]: _28 = Gt(move _29, const 2_i32)\"><span class=\"annotation\">@24\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @26[5]: _34 = _21\n-31:12-31:25: @26[6]: _33 = Lt(move _34, const 1_i32)\"><span class=\"annotation\">@26\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@26</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:29-31:38: @32[2]: _36 = _21\n-31:29-31:42: @32[3]: _35 = Gt(move _36, const 5_i32)\"><span class=\"annotation\">@32\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:46-31:55: @29[2]: _38 = _21\n-31:46-31:60: @29[3]: _37 = Ne(move _38, const 9_i32)\"><span class=\"annotation\">@29\u298a</span>countdown != 9<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @34[0]: _21 = const 0_i32\n-31:61-33:10: @34[1]: _30 = const ()\"><span class=\"annotation\">@34\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @34[0]: _21 = const 0_i32\n-31:61-33:10: @34[1]: _30 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @34[0]: _21 = const 0_i32\n-31:61-33:10: @34[1]: _30 = const ()\">        }<span class=\"annotation\">\u2989@34</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @35[0]: _30 = const ()\"><span class=\"annotation\">@35\u298a</span>\u2038<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @36[2]: _39 = CheckedSub(_21, const 5_i32)\n-34:9-34:23: @37[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@36,37\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@36,37</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @27[0]: _0 = const ()\"><span class=\"annotation\">@27\u298a</span>return<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:8-39:12: @38[4]: _42 = const true\"><span class=\"annotation\">@38\u298a</span>true<span class=\"annotation\">\u2989@38</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:29-40:30: @39[1]: _43 = const 0_i32\n-40:13-40:26: @39[2]: FakeRead(ForLet, _43)\n-41:12-41:16: @39[5]: _45 = const true\"><span class=\"annotation\">@39\u298a</span>mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"40:29-40:30: @39[1]: _43 = const 0_i32\n-40:13-40:26: @39[2]: FakeRead(ForLet, _43)\n-41:12-41:16: @39[5]: _45 = const true\">        if true<span class=\"annotation\">\u2989@39</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @41[0]: _43 = const 10_i32\n-41:17-43:10: @41[1]: _44 = const ()\"><span class=\"annotation\">@41\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @41[0]: _43 = const 10_i32\n-41:17-43:10: @41[1]: _44 = const ()\">            countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:13-42:27: @41[0]: _43 = const 10_i32\n-41:17-43:10: @41[1]: _44 = const ()\">        }<span class=\"annotation\">\u2989@41</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:10-43:10: @42[0]: _44 = const ()\"><span class=\"annotation\">@42\u298a</span>\u2038<span class=\"annotation\">\u2989@42</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"45:12-45:21: @43[4]: _47 = _43\n-45:12-45:25: @43[5]: _46 = Gt(move _47, const 7_i32)\"><span class=\"annotation\">@43\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@43</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @44[0]: _48 = CheckedSub(_43, const 4_i32)\n-46:13-46:27: @46[0]: _43 = move (_48.0: i32)\n-45:26-47:10: @46[1]: _41 = const ()\"><span class=\"annotation\">@44,46\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @44[0]: _48 = CheckedSub(_43, const 4_i32)\n-46:13-46:27: @46[0]: _43 = move (_48.0: i32)\n-45:26-47:10: @46[1]: _41 = const ()\">            countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:13-46:27: @44[0]: _48 = CheckedSub(_43, const 4_i32)\n-46:13-46:27: @46[0]: _43 = move (_48.0: i32)\n-45:26-47:10: @46[1]: _41 = const ()\">        }<span class=\"annotation\">\u2989@44,46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:17-48:26: @45[2]: _50 = _43\n-48:17-48:30: @45[3]: _49 = Gt(move _50, const 2_i32)\"><span class=\"annotation\">@45\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@45</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:16-49:25: @47[5]: _55 = _43\n-49:16-49:29: @47[6]: _54 = Lt(move _55, const 1_i32)\"><span class=\"annotation\">@47\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@47</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:33-49:42: @53[2]: _57 = _43\n-49:33-49:46: @53[3]: _56 = Gt(move _57, const 5_i32)\"><span class=\"annotation\">@53\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@53</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:50-49:59: @50[2]: _59 = _43\n-49:50-49:64: @50[3]: _58 = Ne(move _59, const 9_i32)\"><span class=\"annotation\">@50\u298a</span>countdown != 9<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @55[0]: _43 = const 0_i32\n-49:65-51:14: @55[1]: _51 = const ()\"><span class=\"annotation\">@55\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @55[0]: _43 = const 0_i32\n-49:65-51:14: @55[1]: _51 = const ()\">                countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"50:17-50:30: @55[0]: _43 = const 0_i32\n-49:65-51:14: @55[1]: _51 = const ()\">            }<span class=\"annotation\">\u2989@55</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"51:14-51:14: @56[0]: _51 = const ()\"><span class=\"annotation\">@56\u298a</span>\u2038<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"52:13-52:27: @57[2]: _60 = CheckedSub(_43, const 5_i32)\n-52:13-52:27: @58[0]: _43 = move (_60.0: i32)\"><span class=\"annotation\">@57,58\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@57,58</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"54:13-54:19: @48[0]: _0 = const ()\"><span class=\"annotation\">@48\u298a</span>return<span class=\"annotation\">\u2989@48</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"56:6-56:6: @40[0]: _41 = const ()\"><span class=\"annotation\">@40\u298a</span>\u2038<span class=\"annotation\">\u2989@40</span></span></span><span class=\"code\" style=\"--layer: 0\"> // Note: closing brace shows uncovered (vs. `0` for implicit else) because condition literal</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">      // `true` was const-evaluated. The compiler knows the `if` block will be executed.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:25-59:26: @60[3]: _62 = const 0_i32\n-59:9-59:22: @60[4]: FakeRead(ForLet, _62)\n-60:8-60:12: @60[7]: _64 = const true\"><span class=\"annotation\">@60\u298a</span>mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:25-59:26: @60[3]: _62 = const 0_i32\n-59:9-59:22: @60[4]: FakeRead(ForLet, _62)\n-60:8-60:12: @60[7]: _64 = const true\">    if true<span class=\"annotation\">\u2989@60</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @61[0]: _62 = const 1_i32\n-60:13-62:6: @61[1]: _63 = const ()\"><span class=\"annotation\">@61\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @61[0]: _62 = const 1_i32\n-60:13-62:6: @61[1]: _63 = const ()\">        countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"61:9-61:22: @61[0]: _62 = const 1_i32\n-60:13-62:6: @61[1]: _63 = const ()\">    }<span class=\"annotation\">\u2989@61</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:6-62:6: @62[0]: _63 = const ()\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"64:9-64:10: @81[1]: FakeRead(ForLet, _65)\"><span class=\"annotation\">@81\u298a</span>z<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"64:16-64:25: @63[5]: _67 = _62\n-64:16-64:29: @63[6]: _66 = Gt(move _67, const 7_i32)\"><span class=\"annotation\">@63\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @64[0]: _68 = CheckedSub(_62, const 4_i32)\n-65:9-65:23: @66[0]: _62 = move (_68.0: i32)\n-64:30-66:6: @66[1]: _65 = const ()\"><span class=\"annotation\">@64,66\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @64[0]: _68 = CheckedSub(_62, const 4_i32)\n-65:9-65:23: @66[0]: _62 = move (_68.0: i32)\n-64:30-66:6: @66[1]: _65 = const ()\">        countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:23: @64[0]: _68 = CheckedSub(_62, const 4_i32)\n-65:9-65:23: @66[0]: _62 = move (_68.0: i32)\n-64:30-66:6: @66[1]: _65 = const ()\">    }<span class=\"annotation\">\u2989@64,66</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:15-66:24: @65[2]: _70 = _62\n-66:15-66:28: @65[3]: _69 = Gt(move _70, const 2_i32)\"><span class=\"annotation\">@65\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@65</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:12-67:21: @67[5]: _75 = _62\n-67:12-67:25: @67[6]: _74 = Lt(move _75, const 1_i32)\"><span class=\"annotation\">@67\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:29-67:38: @73[2]: _77 = _62\n-67:29-67:42: @73[3]: _76 = Gt(move _77, const 5_i32)\"><span class=\"annotation\">@73\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@73</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:46-67:55: @70[2]: _79 = _62\n-67:46-67:60: @70[3]: _78 = Ne(move _79, const 9_i32)\"><span class=\"annotation\">@70\u298a</span>countdown != 9<span class=\"annotation\">\u2989@70</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @75[0]: _62 = const 0_i32\n-67:61-69:10: @75[1]: _71 = const ()\"><span class=\"annotation\">@75\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @75[0]: _62 = const 0_i32\n-67:61-69:10: @75[1]: _71 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"68:13-68:26: @75[0]: _62 = const 0_i32\n-67:61-69:10: @75[1]: _71 = const ()\">        }<span class=\"annotation\">\u2989@75</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:10-69:10: @76[0]: _71 = const ()\"><span class=\"annotation\">@76\u298a</span>\u2038<span class=\"annotation\">\u2989@76</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:9-70:23: @77[2]: _80 = CheckedSub(_62, const 5_i32)\n-70:9-70:23: @78[0]: _62 = move (_80.0: i32)\"><span class=\"annotation\">@77,78\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@77,78</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @68[1]: _82 = _62\n-72:13-72:32: @68[2]: FakeRead(ForLet, _82)\n-73:18-73:27: @68[9]: _113 = const main::promoted[1]\n-73:18-73:27: @68[10]: _88 = &amp;(*_113)\n-73:18-73:27: @68[11]: _87 = &amp;(*_88)\n-73:18-73:27: @68[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n-73:9-73:29: @68[18]: _94 = ()\n-73:9-73:29: @68[19]: FakeRead(ForMatchedPlace, _94)\n-73:9-73:29: @68[20]: _112 = const main::promoted[0]\n-73:9-73:29: @68[21]: _92 = &amp;(*_112)\n-73:9-73:29: @68[22]: _91 = &amp;(*_92)\n-73:9-73:29: @68[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @68.Call: _85 = std::fmt::Arguments::new_v1(move _86, move _90) -&gt; [return: bb79, unwind: bb102]\n-73:9-73:29: @79.Call: _84 = std::io::_print(move _85) -&gt; [return: bb80, unwind: bb102]\n-73:9-73:29: @80[5]: _83 = const ()\n-74:9-74:15: @80[7]: _0 = const ()\"><span class=\"annotation\">@68,79,80\u298a</span>should_be_reachable = countdown;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @68[1]: _82 = _62\n-72:13-72:32: @68[2]: FakeRead(ForLet, _82)\n-73:18-73:27: @68[9]: _113 = const main::promoted[1]\n-73:18-73:27: @68[10]: _88 = &amp;(*_113)\n-73:18-73:27: @68[11]: _87 = &amp;(*_88)\n-73:18-73:27: @68[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n-73:9-73:29: @68[18]: _94 = ()\n-73:9-73:29: @68[19]: FakeRead(ForMatchedPlace, _94)\n-73:9-73:29: @68[20]: _112 = const main::promoted[0]\n-73:9-73:29: @68[21]: _92 = &amp;(*_112)\n-73:9-73:29: @68[22]: _91 = &amp;(*_92)\n-73:9-73:29: @68[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @68.Call: _85 = std::fmt::Arguments::new_v1(move _86, move _90) -&gt; [return: bb79, unwind: bb102]\n-73:9-73:29: @79.Call: _84 = std::io::_print(move _85) -&gt; [return: bb80, unwind: bb102]\n-73:9-73:29: @80[5]: _83 = const ()\n-74:9-74:15: @80[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @68[1]: _82 = _62\n-72:13-72:32: @68[2]: FakeRead(ForLet, _82)\n-73:18-73:27: @68[9]: _113 = const main::promoted[1]\n-73:18-73:27: @68[10]: _88 = &amp;(*_113)\n-73:18-73:27: @68[11]: _87 = &amp;(*_88)\n-73:18-73:27: @68[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n-73:9-73:29: @68[18]: _94 = ()\n-73:9-73:29: @68[19]: FakeRead(ForMatchedPlace, _94)\n-73:9-73:29: @68[20]: _112 = const main::promoted[0]\n-73:9-73:29: @68[21]: _92 = &amp;(*_112)\n-73:9-73:29: @68[22]: _91 = &amp;(*_92)\n-73:9-73:29: @68[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @68.Call: _85 = std::fmt::Arguments::new_v1(move _86, move _90) -&gt; [return: bb79, unwind: bb102]\n-73:9-73:29: @79.Call: _84 = std::io::_print(move _85) -&gt; [return: bb80, unwind: bb102]\n-73:9-73:29: @80[5]: _83 = const ()\n-74:9-74:15: @80[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@68,79,80</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:10: @97[1]: FakeRead(ForLet, _95)\"><span class=\"annotation\">@97\u298a</span>w<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"77:16-77:25: @81[5]: _97 = _62\n-77:16-77:29: @81[6]: _96 = Gt(move _97, const 7_i32)\"><span class=\"annotation\">@81\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @82[0]: _98 = CheckedSub(_62, const 4_i32)\n-78:9-78:23: @84[0]: _62 = move (_98.0: i32)\n-77:30-79:6: @84[1]: _95 = const ()\"><span class=\"annotation\">@82,84\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @82[0]: _98 = CheckedSub(_62, const 4_i32)\n-78:9-78:23: @84[0]: _62 = move (_98.0: i32)\n-77:30-79:6: @84[1]: _95 = const ()\">        countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"78:9-78:23: @82[0]: _98 = CheckedSub(_62, const 4_i32)\n-78:9-78:23: @84[0]: _62 = move (_98.0: i32)\n-77:30-79:6: @84[1]: _95 = const ()\">    }<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:15-79:24: @83[2]: _100 = _62\n-79:15-79:28: @83[3]: _99 = Gt(move _100, const 2_i32)\"><span class=\"annotation\">@83\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:12-80:21: @85[5]: _105 = _62\n-80:12-80:25: @85[6]: _104 = Lt(move _105, const 1_i32)\"><span class=\"annotation\">@85\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@85</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"80:29-80:38: @91[2]: _107 = _62\n-80:29-80:42: @91[3]: _106 = Gt(move _107, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:46-80:55: @88[2]: _109 = _62\n-80:46-80:60: @88[3]: _108 = Ne(move _109, const 9_i32)\"><span class=\"annotation\">@88\u298a</span>countdown != 9<span class=\"annotation\">\u2989@88</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @93[0]: _62 = const 0_i32\n-80:61-82:10: @93[1]: _101 = const ()\"><span class=\"annotation\">@93\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @93[0]: _62 = const 0_i32\n-80:61-82:10: @93[1]: _101 = const ()\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:13-81:26: @93[0]: _62 = const 0_i32\n-80:61-82:10: @93[1]: _101 = const ()\">        }<span class=\"annotation\">\u2989@93</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"82:10-82:10: @94[0]: _101 = const ()\"><span class=\"annotation\">@94\u298a</span>\u2038<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:9-83:23: @95[2]: _110 = CheckedSub(_62, const 5_i32)\n-83:9-83:23: @96[0]: _62 = move (_110.0: i32)\"><span class=\"annotation\">@95,96\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@95,96</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"85:9-85:15: @86[0]: _0 = const ()\"><span class=\"annotation\">@86\u298a</span>return<span class=\"annotation\">\u2989@86</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"87:2-87:2: @101.Return: return\"><span class=\"annotation\">@101\u298a</span>\u2038<span class=\"annotation\">\u2989@101</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "be06ddd126da9564128ccb33cefd5ad3c6661360", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,143 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>dead_code.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 26\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n-33:25-33:26: @3[2]: _5 = const 0_i32\n-33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n-34:8-34:15: @3[5]: _6 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @4[0]: _5 = const 10_i32\n-34:16-36:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @4[0]: _5 = const 10_i32\n-34:16-36:6: @4[1]: _0 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-35:23: @4[0]: _5 = const 10_i32\n-34:16-36:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:6-36:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:2-37:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "7f2d8d3c8ec1ed96fe15491b3ed68acd3601c41f", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_fn.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,143 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_fn.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>dead_code.unused_fn - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_fn() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n-21:25-21:26: @3[2]: _5 = const 0_i32\n-21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n-22:8-22:15: @3[5]: _6 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @4[0]: _5 = const 10_i32\n-22:16-24:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @4[0]: _5 = const 10_i32\n-22:16-24:6: @4[1]: _0 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @4[0]: _5 = const 10_i32\n-22:16-24:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "be44f71348c1719d7d97c70addff82fdd79e76b6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,143 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>dead_code.unused_pub_fn_not_in_library - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_pub_fn_not_in_library() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[5]: _6 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_i32\n-10:16-12:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_i32\n-10:16-12:6: @4[1]: _0 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_i32\n-10:16-12:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:2-13:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "95813decf9f6a1d7b0648f9e0aa0dba7e176ab41", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest/doctest.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,96 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest/doctest.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>doctest.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 72\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn main() <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"74:8-74:12: @0[1]: _1 = const true\"><span class=\"annotation\">@0\u298a</span>true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">@4\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"75:9-75:26: @3[1]: _15 = core::panicking::AssertKind::Eq\n-75:9-75:26: @3[2]: FakeRead(ForLet, _15)\n-75:9-75:26: @3[5]: _17 = move _15\n-75:9-75:26: @3[8]: _19 = &amp;(*_8)\n-75:9-75:26: @3[9]: _18 = &amp;(*_19)\n-75:9-75:26: @3[12]: _21 = &amp;(*_9)\n-75:9-75:26: @3[13]: _20 = &amp;(*_21)\n-75:9-75:26: @3[15]: _22 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n-75:9-75:26: @3.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _17, move _18, move _20, move _22) -&gt; bb8\"><span class=\"annotation\">@3\u298a</span>assert_eq!(1, 1);<span class=\"annotation\">\u2989@3</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @6[0]: _23 = const ()\"><span class=\"annotation\">@6\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"77:9-77:26: @5[1]: _36 = core::panicking::AssertKind::Eq\n-77:9-77:26: @5[2]: FakeRead(ForLet, _36)\n-77:9-77:26: @5[5]: _38 = move _36\n-77:9-77:26: @5[8]: _40 = &amp;(*_29)\n-77:9-77:26: @5[9]: _39 = &amp;(*_40)\n-77:9-77:26: @5[12]: _42 = &amp;(*_30)\n-77:9-77:26: @5[13]: _41 = &amp;(*_42)\n-77:9-77:26: @5[15]: _43 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n-77:9-77:26: @5.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _38, move _39, move _41, move _43) -&gt; bb8\"><span class=\"annotation\">@5\u298a</span>assert_eq!(1, 2);<span class=\"annotation\">\u2989@5</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @6[0]: _23 = const ()\"><span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:2-79:2: @7.Return: return\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3a41d3482b0b97d7113b843a78c4116aa2613a3b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest_crate/doctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,113 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest_crate/doctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>doctest_crate.fn_run_in_doctests - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 1\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>pub fn fn_run_in_doctests(conditional: usize) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:11-3:22: @0[0]: FakeRead(ForMatchedPlace, _1)\"><span class=\"annotation\">@0\u298a</span>conditional<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        1 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">@7\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"4:14-4:30: @6[1]: _14 = core::panicking::AssertKind::Eq\n-4:14-4:30: @6[2]: FakeRead(ForLet, _14)\n-4:14-4:30: @6[5]: _16 = move _14\n-4:14-4:30: @6[8]: _18 = &amp;(*_7)\n-4:14-4:30: @6[9]: _17 = &amp;(*_18)\n-4:14-4:30: @6[12]: _20 = &amp;(*_8)\n-4:14-4:30: @6[13]: _19 = &amp;(*_20)\n-4:14-4:30: @6[15]: _21 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n-4:14-4:30: @6.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _16, move _17, move _19, move _21) -&gt; bb17\"><span class=\"annotation\">@6\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@6</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this is run,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"5:14-5:30: @9[1]: _34 = core::panicking::AssertKind::Eq\n-5:14-5:30: @9[2]: FakeRead(ForLet, _34)\n-5:14-5:30: @9[5]: _36 = move _34\n-5:14-5:30: @9[8]: _38 = &amp;(*_27)\n-5:14-5:30: @9[9]: _37 = &amp;(*_38)\n-5:14-5:30: @9[12]: _40 = &amp;(*_28)\n-5:14-5:30: @9[13]: _39 = &amp;(*_40)\n-5:14-5:30: @9[15]: _41 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n-5:14-5:30: @9.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _36, move _37, move _39, move _41) -&gt; bb17\"><span class=\"annotation\">@9\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@9</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @10[0]: _0 = const ()\"><span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        3 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @13[0]: _0 = const ()\"><span class=\"annotation\">@13\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"6:14-6:30: @12[1]: _54 = core::panicking::AssertKind::Eq\n-6:14-6:30: @12[2]: FakeRead(ForLet, _54)\n-6:14-6:30: @12[5]: _56 = move _54\n-6:14-6:30: @12[8]: _58 = &amp;(*_47)\n-6:14-6:30: @12[9]: _57 = &amp;(*_58)\n-6:14-6:30: @12[12]: _60 = &amp;(*_48)\n-6:14-6:30: @12[13]: _59 = &amp;(*_60)\n-6:14-6:30: @12[15]: _61 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n-6:14-6:30: @12.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _56, move _57, move _59, move _61) -&gt; bb17\"><span class=\"annotation\">@12\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@12</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @13[0]: _0 = const ()\"><span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\">, // and this too</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @15[0]: _0 = const ()\"><span class=\"annotation\">@15\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"7:14-7:30: @14[1]: _74 = core::panicking::AssertKind::Eq\n-7:14-7:30: @14[2]: FakeRead(ForLet, _74)\n-7:14-7:30: @14[5]: _76 = move _74\n-7:14-7:30: @14[8]: _78 = &amp;(*_67)\n-7:14-7:30: @14[9]: _77 = &amp;(*_78)\n-7:14-7:30: @14[12]: _80 = &amp;(*_68)\n-7:14-7:30: @14[13]: _79 = &amp;(*_80)\n-7:14-7:30: @14[15]: _81 = std::option::Option::&lt;std::fmt::Arguments&gt;::None\n-7:14-7:30: @14.Call: core::panicking::assert_failed::&lt;i32, i32&gt;(move _76, move _77, move _79, move _81) -&gt; bb17\"><span class=\"annotation\">@14\u298a</span>assert_eq!(1, 2)<span class=\"annotation\">\u2989@14</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @15[0]: _0 = const ()\"><span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\">, // however this is not</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:2-9:2: @16.Return: return\"><span class=\"annotation\">@16\u298a</span>\u2038<span class=\"annotation\">\u2989@16</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "66a6e776a0622d57cc54de40d3625699a932b9a2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 152, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,152 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>drop_trait.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\">    let _firecracker = Firework { strength: 1 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\">    let _tnt = Firework { strength: 100 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:24-15:48: @0[1]: _1 = Firework { strength: const 1_i32 }\n-15:9-15:21: @0[2]: FakeRead(ForLet, _1)\n-17:16-17:42: @0[4]: _2 = Firework { strength: const 100_i32 }\n-17:9-17:13: @0[5]: FakeRead(ForLet, _2)\n-19:8-19:12: @0[8]: _4 = const true\">    if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @1[6]: _21 = const main::promoted[1]\n-20:18-20:41: @1[7]: _11 = &amp;(*_21)\n-20:18-20:41: @1[8]: _10 = &amp;(*_11)\n-20:18-20:41: @1[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-20:9-20:43: @1[15]: _17 = ()\n-20:9-20:43: @1[16]: FakeRead(ForMatchedPlace, _17)\n-20:9-20:43: @1[17]: _20 = const main::promoted[0]\n-20:9-20:43: @1[18]: _15 = &amp;(*_20)\n-20:9-20:43: @1[19]: _14 = &amp;(*_15)\n-20:9-20:43: @1[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @1.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n-20:9-20:43: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb11]\n-20:9-20:43: @4[5]: _6 = const ()\n-21:16-21:22: @4[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,8,9\u298a</span>println!(\"Exiting with error...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @1[6]: _21 = const main::promoted[1]\n-20:18-20:41: @1[7]: _11 = &amp;(*_21)\n-20:18-20:41: @1[8]: _10 = &amp;(*_11)\n-20:18-20:41: @1[9]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-20:9-20:43: @1[15]: _17 = ()\n-20:9-20:43: @1[16]: FakeRead(ForMatchedPlace, _17)\n-20:9-20:43: @1[17]: _20 = const main::promoted[0]\n-20:9-20:43: @1[18]: _15 = &amp;(*_20)\n-20:9-20:43: @1[19]: _14 = &amp;(*_15)\n-20:9-20:43: @1[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @1.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n-20:9-20:43: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb11]\n-20:9-20:43: @4[5]: _6 = const ()\n-21:16-21:22: @4[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n-24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,5,6,7\u298a</span></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n-24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n-24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    let _ = Firework { strength: 1000 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n-24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n-24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n-26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,5,6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @10.Return: return\"><span class=\"annotation\">@10\u298a</span>\u2038<span class=\"annotation\">\u2989@10</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "57d56c5cf736954fb6b408b659c57702d286f906", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.{impl#0}-drop.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>drop_trait.{impl#0}-drop - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as std::ops::Drop&gt;::drop::promoted[0]\n-10:18-10:36: @0[7]: _7 = &amp;(*_19)\n-10:18-10:36: @0[8]: _6 = &amp;(*_7)\n-10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n-10:9-10:53: @0[18]: _13 = (move _14,)\n-10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n-10:9-10:53: @0[25]: _17 = &amp;(*_15)\n-10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-10:9-10:53: @1[2]: _12 = [move _16]\n-10:9-10:53: @1[5]: _11 = &amp;_12\n-10:9-10:53: @1[6]: _10 = &amp;(*_11)\n-10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-10:9-10:53: @3[6]: _2 = const ()\n-9:24-11:6: @3[8]: _0 = const ()\n-11:6-11:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn drop(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as std::ops::Drop&gt;::drop::promoted[0]\n-10:18-10:36: @0[7]: _7 = &amp;(*_19)\n-10:18-10:36: @0[8]: _6 = &amp;(*_7)\n-10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n-10:9-10:53: @0[18]: _13 = (move _14,)\n-10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n-10:9-10:53: @0[25]: _17 = &amp;(*_15)\n-10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-10:9-10:53: @1[2]: _12 = [move _16]\n-10:9-10:53: @1[5]: _11 = &amp;_12\n-10:9-10:53: @1[6]: _10 = &amp;(*_11)\n-10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-10:9-10:53: @3[6]: _2 = const ()\n-9:24-11:6: @3[8]: _0 = const ()\n-11:6-11:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as std::ops::Drop&gt;::drop::promoted[0]\n-10:18-10:36: @0[7]: _7 = &amp;(*_19)\n-10:18-10:36: @0[8]: _6 = &amp;(*_7)\n-10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-10:38-10:51: @0[17]: _14 = &amp;((*_1).0: i32)\n-10:9-10:53: @0[18]: _13 = (move _14,)\n-10:9-10:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n-10:9-10:53: @0[25]: _17 = &amp;(*_15)\n-10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-10:9-10:53: @1[2]: _12 = [move _16]\n-10:9-10:53: @1[5]: _11 = &amp;_12\n-10:9-10:53: @1[6]: _10 = &amp;(*_11)\n-10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-10:9-10:53: @3[6]: _2 = const ()\n-9:24-11:6: @3[8]: _0 = const ()\n-11:6-11:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "098c140425160b70e3e9e5dc728143cf9045b373", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 237, "changes": 237, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,237 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>generics.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\">    let mut firecracker = Firework { strength: 1 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\">    firecracker.set_strength(2);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\">    let mut tnt = Firework { strength: 100.1 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\">    tnt.set_strength(200.1);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\">    tnt.set_strength(300.3);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:27-23:51: @0[1]: _1 = Firework::&lt;i32&gt; { strength: const 1_i32 }\n-23:9-23:24: @0[2]: FakeRead(ForLet, _1)\n-24:5-24:16: @0[5]: _3 = &amp;mut _1\n-24:5-24:32: @0.Call: _2 = Firework::&lt;i32&gt;::set_strength(move _3, const 2_i32) -&gt; [return: bb1, unwind: bb15]\n-26:19-26:47: @1[3]: _4 = Firework::&lt;f64&gt; { strength: const 100.09999999999999f64 }\n-26:9-26:16: @1[4]: FakeRead(ForLet, _4)\n-27:5-27:8: @1[7]: _6 = &amp;mut _4\n-27:5-27:28: @1.Call: _5 = Firework::&lt;f64&gt;::set_strength(move _6, const 200.09999999999999f64) -&gt; [return: bb2, unwind: bb14]\n-28:5-28:8: @2[4]: _8 = &amp;mut _4\n-28:5-28:28: @2.Call: _7 = Firework::&lt;f64&gt;::set_strength(move _8, const 300.30000000000001f64) -&gt; [return: bb3, unwind: bb14]\n-30:8-30:12: @3[4]: _10 = const true\">    if true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @4[6]: _27 = const main::promoted[1]\n-31:18-31:41: @4[7]: _17 = &amp;(*_27)\n-31:18-31:41: @4[8]: _16 = &amp;(*_17)\n-31:18-31:41: @4[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-31:9-31:43: @4[15]: _23 = ()\n-31:9-31:43: @4[16]: FakeRead(ForMatchedPlace, _23)\n-31:9-31:43: @4[17]: _26 = const main::promoted[0]\n-31:9-31:43: @4[18]: _21 = &amp;(*_26)\n-31:9-31:43: @4[19]: _20 = &amp;(*_21)\n-31:9-31:43: @4[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @4.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n-31:9-31:43: @6.Call: _13 = std::io::_print(move _14) -&gt; [return: bb7, unwind: bb14]\n-31:9-31:43: @7[5]: _12 = const ()\n-32:16-32:22: @7[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,11,12\u298a</span>println!(\"Exiting with error...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @4[6]: _27 = const main::promoted[1]\n-31:18-31:41: @4[7]: _17 = &amp;(*_27)\n-31:18-31:41: @4[8]: _16 = &amp;(*_17)\n-31:18-31:41: @4[9]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-31:9-31:43: @4[15]: _23 = ()\n-31:9-31:43: @4[16]: FakeRead(ForMatchedPlace, _23)\n-31:9-31:43: @4[17]: _26 = const main::promoted[0]\n-31:9-31:43: @4[18]: _21 = &amp;(*_26)\n-31:9-31:43: @4[19]: _20 = &amp;(*_21)\n-31:9-31:43: @4[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @4.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n-31:9-31:43: @6.Call: _13 = std::io::_print(move _14) -&gt; [return: bb7, unwind: bb14]\n-31:9-31:43: @7[5]: _12 = const ()\n-32:16-32:22: @7[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,8,9,10\u298a</span> // The remaining lines below have no coverage because `if true` (with the constant literal</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // in other tests, the lines below would have coverage (which would show they had `0`</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // executions, assuming the condition still evaluated to `true`).</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    let _ = Firework { strength: 1000 };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n-39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n-41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,8,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:2-42:2: @13.Return: return\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "329641d47bdbc5ee18989b2968144a4a955fc7a8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.{impl#0}-set_strength.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 85, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,85 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.%7Bimpl%230%7D-set_strength.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>generics.{impl#0}-set_strength - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 9\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n-11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n-10:49-12:6: @0[4]: _0 = const ()\n-12:6-12:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>fn set_strength(&amp;mut self, new_strength: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n-11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n-10:49-12:6: @0[4]: _0 = const ()\n-12:6-12:6: @0.Return: return\">        self.strength = new_strength;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:25-11:37: @0[1]: _3 = _2\n-11:9-11:37: @0[2]: ((*_1).0: T) = move _3\n-10:49-12:6: @0[4]: _0 = const ()\n-12:6-12:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4908bc7b4a7723f9f1c8b2726590ffdc024df8bd", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.{impl#1}-drop.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>generics.{impl#1}-drop - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as std::ops::Drop&gt;::drop::promoted[0]\n-18:18-18:36: @0[7]: _7 = &amp;(*_19)\n-18:18-18:36: @0[8]: _6 = &amp;(*_7)\n-18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n-18:9-18:53: @0[18]: _13 = (move _14,)\n-18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n-18:9-18:53: @0[25]: _17 = &amp;(*_15)\n-18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-18:9-18:53: @1[2]: _12 = [move _16]\n-18:9-18:53: @1[5]: _11 = &amp;_12\n-18:9-18:53: @1[6]: _10 = &amp;(*_11)\n-18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-18:9-18:53: @3[6]: _2 = const ()\n-17:24-19:6: @3[8]: _0 = const ()\n-19:6-19:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn drop(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as std::ops::Drop&gt;::drop::promoted[0]\n-18:18-18:36: @0[7]: _7 = &amp;(*_19)\n-18:18-18:36: @0[8]: _6 = &amp;(*_7)\n-18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n-18:9-18:53: @0[18]: _13 = (move _14,)\n-18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n-18:9-18:53: @0[25]: _17 = &amp;(*_15)\n-18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-18:9-18:53: @1[2]: _12 = [move _16]\n-18:9-18:53: @1[5]: _11 = &amp;_12\n-18:9-18:53: @1[6]: _10 = &amp;(*_11)\n-18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-18:9-18:53: @3[6]: _2 = const ()\n-17:24-19:6: @3[8]: _0 = const ()\n-19:6-19:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as std::ops::Drop&gt;::drop::promoted[0]\n-18:18-18:36: @0[7]: _7 = &amp;(*_19)\n-18:18-18:36: @0[8]: _6 = &amp;(*_7)\n-18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:38-18:51: @0[17]: _14 = &amp;((*_1).0: T)\n-18:9-18:53: @0[18]: _13 = (move _14,)\n-18:9-18:53: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n-18:9-18:53: @0[25]: _17 = &amp;(*_15)\n-18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-18:9-18:53: @1[2]: _12 = [move _16]\n-18:9-18:53: @1[5]: _11 = &amp;_12\n-18:9-18:53: @1[6]: _10 = &amp;(*_11)\n-18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-18:9-18:53: @3[6]: _2 = const ()\n-17:24-19:6: @3[8]: _0 = const ()\n-19:6-19:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "d6eccf57846ef4a817c6af1f8d61f57b4a5cf8a4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 238, "changes": 238, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,238 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>if.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    let</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    is_true</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">        std::env::args().len()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    ==</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">        1</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    let</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">        mut</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">        0</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n-8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n-18:9-18:10: @3[2]: _5 = const 0_i32\n-15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n-21:9-21:16: @3[5]: _6 = _1\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n-22:5-27:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n-22:5-27:6: @4[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n-22:5-27:6: @4[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n-22:5-27:6: @4[1]: _0 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n-22:5-27:6: @4[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-25:15: @4[0]: _5 = const 10_i32\n-22:5-27:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:6-27:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "e0f0ac40205947b275aab639c0451c980d1aac79", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 195, "changes": 195, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,195 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>if_else.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-11:9-11:16: @3[6]: _7 = _1\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n-12:5-17:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n-12:5-17:6: @4[1]: _6 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n-12:5-17:6: @4[1]: _6 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n-12:5-17:6: @4[1]: _6 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n-12:5-17:6: @4[1]: _6 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:9-15:15: @4[0]: _5 = const 10_i32\n-12:5-17:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else // Note coverage region difference without semicolon</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n-20:9-22:16: @5[1]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n-20:9-22:16: @5[1]: _6 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"20:9-22:16: @5[0]: _5 = const 100_i32\n-20:9-22:16: @5[1]: _6 = const ()\">            100<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:9-26:16: @6[3]: _8 = _1\"><span class=\"annotation\">@6\u298a</span>is_true<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n-27:5-32:6: @7[1]: _0 = const ()\"><span class=\"annotation\">@7\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n-27:5-32:6: @7[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n-27:5-32:6: @7[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n-27:5-32:6: @7[1]: _0 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n-27:5-32:6: @7[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:9-30:15: @7[0]: _5 = const 10_i32\n-27:5-32:6: @7[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n-34:5-39:6: @8[1]: _0 = const ()\"><span class=\"annotation\">@8\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n-34:5-39:6: @8[1]: _0 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n-34:5-39:6: @8[1]: _0 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n-34:5-39:6: @8[1]: _0 = const ()\">            100</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n-34:5-39:6: @8[1]: _0 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"35:9-37:16: @8[0]: _5 = const 100_i32\n-34:5-39:6: @8[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:2-40:2: @9.Return: return\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "6287516636ea92c35ead06b96f74e68316195e3a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.display.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.display.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.display.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.display.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,161 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.display.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inline.display - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 40\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>fn display&lt;T: Display&gt;(xs: &amp;[T]) <span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:9-42:10: @8[1]: _13 = ((_9 as Some).0: &amp;T)\n-42:9-42:10: @8[3]: _14 = _13\n-42:9-42:10: @8[4]: _7 = move _14\n-42:9-42:10: @8[5]: _8 = const ()\n-42:9-42:10: @8[13]: FakeRead(ForLet, _16)\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>x<span class=\"annotation\">\u2989@6,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:14-42:16: @8[12]: _16 = _7\n-43:16-43:20: @8[20]: _47 = const display::&lt;T&gt;::promoted[2]\n-43:16-43:20: @8[21]: _22 = &amp;(*_47)\n-43:16-43:20: @8[22]: _21 = &amp;(*_22)\n-43:16-43:20: @8[23]: _20 = move _21 as &amp;[&amp;str] (Pointer(Unsize))\n-43:22-43:23: @8[31]: _29 = &amp;_16\n-43:9-43:25: @8[32]: _28 = (move _29,)\n-43:9-43:25: @8[34]: FakeRead(ForMatchedPlace, _28)\n-43:9-43:25: @8[36]: _30 = (_28.0: &amp;&amp;T)\n-43:9-43:25: @8[39]: _32 = &amp;(*_30)\n-43:9-43:25: @8[41]: _33 = &lt;&amp;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-43:9-43:25: @8.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;T&gt;(move _32, move _33) -&gt; [return: bb9, unwind: bb14]\n-43:9-43:25: @9[2]: _27 = [move _31]\n-43:9-43:25: @9[5]: _26 = &amp;_27\n-43:9-43:25: @9[6]: _25 = &amp;(*_26)\n-43:9-43:25: @9[7]: _24 = move _25 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-43:9-43:25: @9.Call: _19 = std::fmt::Arguments::new_v1(move _20, move _24) -&gt; [return: bb10, unwind: bb14]\n-43:9-43:25: @10.Call: _18 = std::io::_print(move _19) -&gt; [return: bb11, unwind: bb14]\n-42:17-44:6: @11[6]: _17 = const ()\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>xs {</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:14-42:16: @8[12]: _16 = _7\n-43:16-43:20: @8[20]: _47 = const display::&lt;T&gt;::promoted[2]\n-43:16-43:20: @8[21]: _22 = &amp;(*_47)\n-43:16-43:20: @8[22]: _21 = &amp;(*_22)\n-43:16-43:20: @8[23]: _20 = move _21 as &amp;[&amp;str] (Pointer(Unsize))\n-43:22-43:23: @8[31]: _29 = &amp;_16\n-43:9-43:25: @8[32]: _28 = (move _29,)\n-43:9-43:25: @8[34]: FakeRead(ForMatchedPlace, _28)\n-43:9-43:25: @8[36]: _30 = (_28.0: &amp;&amp;T)\n-43:9-43:25: @8[39]: _32 = &amp;(*_30)\n-43:9-43:25: @8[41]: _33 = &lt;&amp;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-43:9-43:25: @8.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;T&gt;(move _32, move _33) -&gt; [return: bb9, unwind: bb14]\n-43:9-43:25: @9[2]: _27 = [move _31]\n-43:9-43:25: @9[5]: _26 = &amp;_27\n-43:9-43:25: @9[6]: _25 = &amp;(*_26)\n-43:9-43:25: @9[7]: _24 = move _25 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-43:9-43:25: @9.Call: _19 = std::fmt::Arguments::new_v1(move _20, move _24) -&gt; [return: bb10, unwind: bb14]\n-43:9-43:25: @10.Call: _18 = std::io::_print(move _19) -&gt; [return: bb11, unwind: bb14]\n-42:17-44:6: @11[6]: _17 = const ()\">        print!(\"{}\", x);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:14-42:16: @8[12]: _16 = _7\n-43:16-43:20: @8[20]: _47 = const display::&lt;T&gt;::promoted[2]\n-43:16-43:20: @8[21]: _22 = &amp;(*_47)\n-43:16-43:20: @8[22]: _21 = &amp;(*_22)\n-43:16-43:20: @8[23]: _20 = move _21 as &amp;[&amp;str] (Pointer(Unsize))\n-43:22-43:23: @8[31]: _29 = &amp;_16\n-43:9-43:25: @8[32]: _28 = (move _29,)\n-43:9-43:25: @8[34]: FakeRead(ForMatchedPlace, _28)\n-43:9-43:25: @8[36]: _30 = (_28.0: &amp;&amp;T)\n-43:9-43:25: @8[39]: _32 = &amp;(*_30)\n-43:9-43:25: @8[41]: _33 = &lt;&amp;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-43:9-43:25: @8.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;T&gt;(move _32, move _33) -&gt; [return: bb9, unwind: bb14]\n-43:9-43:25: @9[2]: _27 = [move _31]\n-43:9-43:25: @9[5]: _26 = &amp;_27\n-43:9-43:25: @9[6]: _25 = &amp;(*_26)\n-43:9-43:25: @9[7]: _24 = move _25 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-43:9-43:25: @9.Call: _19 = std::fmt::Arguments::new_v1(move _20, move _24) -&gt; [return: bb10, unwind: bb14]\n-43:9-43:25: @10.Call: _18 = std::io::_print(move _19) -&gt; [return: bb11, unwind: bb14]\n-42:17-44:6: @11[6]: _17 = const ()\">    }<span class=\"annotation\">\u2989@6,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:5-45:16: @5[13]: _46 = const display::&lt;T&gt;::promoted[1]\n-45:5-45:16: @5[14]: _38 = &amp;(*_46)\n-45:5-45:16: @5[15]: _37 = &amp;(*_38)\n-45:5-45:16: @5[16]: _36 = move _37 as &amp;[&amp;str] (Pointer(Unsize))\n-45:5-45:16: @5[22]: _44 = ()\n-45:5-45:16: @5[23]: FakeRead(ForMatchedPlace, _44)\n-45:5-45:16: @5[24]: _45 = const display::&lt;T&gt;::promoted[0]\n-45:5-45:16: @5[25]: _42 = &amp;(*_45)\n-45:5-45:16: @5[26]: _41 = &amp;(*_42)\n-45:5-45:16: @5[27]: _40 = move _41 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-45:5-45:16: @5.Call: _35 = std::fmt::Arguments::new_v1(move _36, move _40) -&gt; [return: bb12, unwind: bb14]\n-45:5-45:16: @12.Call: _34 = std::io::_print(move _35) -&gt; [return: bb13, unwind: bb14]\n-46:2-46:2: @13.Return: return\"><span class=\"annotation\">@5,12,13\u298a</span>println!();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"45:5-45:16: @5[13]: _46 = const display::&lt;T&gt;::promoted[1]\n-45:5-45:16: @5[14]: _38 = &amp;(*_46)\n-45:5-45:16: @5[15]: _37 = &amp;(*_38)\n-45:5-45:16: @5[16]: _36 = move _37 as &amp;[&amp;str] (Pointer(Unsize))\n-45:5-45:16: @5[22]: _44 = ()\n-45:5-45:16: @5[23]: FakeRead(ForMatchedPlace, _44)\n-45:5-45:16: @5[24]: _45 = const display::&lt;T&gt;::promoted[0]\n-45:5-45:16: @5[25]: _42 = &amp;(*_45)\n-45:5-45:16: @5[26]: _41 = &amp;(*_42)\n-45:5-45:16: @5[27]: _40 = move _41 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-45:5-45:16: @5.Call: _35 = std::fmt::Arguments::new_v1(move _36, move _40) -&gt; [return: bb12, unwind: bb14]\n-45:5-45:16: @12.Call: _34 = std::io::_print(move _35) -&gt; [return: bb13, unwind: bb14]\n-46:2-46:2: @13.Return: return\">}<span class=\"annotation\">\u2989@5,12,13</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "bbf19c3e446f9896f191eab7de19ffc610799fc3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.error.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.error.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.error.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.error.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,79 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.error.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inline.error - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 48\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"50:5-50:21: @0.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;error&quot;) -&gt; bb1\n-49:12-51:2: @1.Resume: resume\"><span class=\"annotation\">@0,1\u298a</span>fn error() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"50:5-50:21: @0.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;error&quot;) -&gt; bb1\n-49:12-51:2: @1.Resume: resume\">    panic!(\"error\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"50:5-50:21: @0.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;error&quot;) -&gt; bb1\n-49:12-51:2: @1.Resume: resume\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "8e8efb6d9f6b1a21fc1a6e6481def8ae4f9273dd", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.length.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.length.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.length.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.length.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.length.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inline.length - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 29\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:5-31:7: @0[1]: _2 = &amp;(*_1)\n-31:5-31:13: @0.Call: _0 = core::slice::&lt;impl [T]&gt;::len(move _2) -&gt; [return: bb1, unwind: bb2]\n-32:2-32:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>fn length&lt;T&gt;(xs: &amp;[T]) -&gt; usize {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:5-31:7: @0[1]: _2 = &amp;(*_1)\n-31:5-31:13: @0.Call: _0 = core::slice::&lt;impl [T]&gt;::len(move _2) -&gt; [return: bb1, unwind: bb2]\n-32:2-32:2: @1.Return: return\">    xs.len()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:5-31:7: @0[1]: _2 = &amp;(*_1)\n-31:5-31:13: @0.Call: _0 = core::slice::&lt;impl [T]&gt;::len(move _2) -&gt; [return: bb1, unwind: bb2]\n-32:2-32:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4ec2e9beede309c19f08d52f2c6274a9399365ff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,94 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inline.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:18-6:34: @0[4]: _6 = const main::promoted[0]\n-6:18-6:34: @0[5]: _4 = &amp;(*_6)\n-6:18-6:34: @0[6]: _3 = &amp;(*_4)\n-6:18-6:34: @0[7]: _2 = move _3 as &amp;[char] (Pointer(Unsize))\n-6:5-6:35: @0.Call: _1 = permutations::&lt;char&gt;(move _2) -&gt; [return: bb1, unwind: bb2]\n-5:11-7:2: @1[3]: _0 = const ()\n-7:2-7:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:18-6:34: @0[4]: _6 = const main::promoted[0]\n-6:18-6:34: @0[5]: _4 = &amp;(*_6)\n-6:18-6:34: @0[6]: _3 = &amp;(*_4)\n-6:18-6:34: @0[7]: _2 = move _3 as &amp;[char] (Pointer(Unsize))\n-6:5-6:35: @0.Call: _1 = permutations::&lt;char&gt;(move _2) -&gt; [return: bb1, unwind: bb2]\n-5:11-7:2: @1[3]: _0 = const ()\n-7:2-7:2: @1.Return: return\">    permutations(&amp;['a', 'b', 'c']);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:18-6:34: @0[4]: _6 = const main::promoted[0]\n-6:18-6:34: @0[5]: _4 = &amp;(*_6)\n-6:18-6:34: @0[6]: _3 = &amp;(*_4)\n-6:18-6:34: @0[7]: _2 = move _3 as &amp;[char] (Pointer(Unsize))\n-6:5-6:35: @0.Call: _1 = permutations::&lt;char&gt;(move _2) -&gt; [return: bb1, unwind: bb2]\n-5:11-7:2: @1[3]: _0 = const ()\n-7:2-7:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "fd72973ccd076f4e821da4a0f162e8c8ca668bea", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutate.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 183, "changes": 183, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutate.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutate.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutate.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,183 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutate.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inline.permutate - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:20-16:22: @0[2]: _4 = &amp;(*_1)\n-16:13-16:23: @0.Call: _3 = length::&lt;T&gt;(move _4) -&gt; [return: bb1, unwind: bb22]\n-16:9-16:10: @1[1]: FakeRead(ForLet, _3)\n-17:8-17:9: @1[4]: _6 = _2\n-17:13-17:14: @1[6]: _7 = _3\n-17:8-17:14: @1[7]: _5 = Eq(move _6, move _7)\"><span class=\"annotation\">@0,1\u298a</span>fn permutate&lt;T: Copy + Display&gt;(xs: &amp;mut [T], k: usize) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:20-16:22: @0[2]: _4 = &amp;(*_1)\n-16:13-16:23: @0.Call: _3 = length::&lt;T&gt;(move _4) -&gt; [return: bb1, unwind: bb22]\n-16:9-16:10: @1[1]: FakeRead(ForLet, _3)\n-17:8-17:9: @1[4]: _6 = _2\n-17:13-17:14: @1[6]: _7 = _3\n-17:8-17:14: @1[7]: _5 = Eq(move _6, move _7)\">    let n = length(xs);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:20-16:22: @0[2]: _4 = &amp;(*_1)\n-16:13-16:23: @0.Call: _3 = length::&lt;T&gt;(move _4) -&gt; [return: bb1, unwind: bb22]\n-16:9-16:10: @1[1]: FakeRead(ForLet, _3)\n-17:8-17:9: @1[4]: _6 = _2\n-17:13-17:14: @1[6]: _7 = _3\n-17:8-17:14: @1[7]: _5 = Eq(move _6, move _7)\">    if k == n<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:17-18:19: @2[2]: _9 = &amp;(*_1)\n-18:9-18:20: @2.Call: _8 = display::&lt;T&gt;(move _9) -&gt; [return: bb4, unwind: bb22]\n-17:15-19:6: @4[2]: _0 = const ()\"><span class=\"annotation\">@2,4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:17-18:19: @2[2]: _9 = &amp;(*_1)\n-18:9-18:20: @2.Call: _8 = display::&lt;T&gt;(move _9) -&gt; [return: bb4, unwind: bb22]\n-17:15-19:6: @4[2]: _0 = const ()\">        display(xs);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:17-18:19: @2[2]: _9 = &amp;(*_1)\n-18:9-18:20: @2.Call: _8 = display::&lt;T&gt;(move _9) -&gt; [return: bb4, unwind: bb22]\n-17:15-19:6: @4[2]: _0 = const ()\">    }<span class=\"annotation\">\u2989@2,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:15-19:16: @3[2]: _11 = _2\n-19:19-19:20: @3[4]: _12 = _3\n-19:15-19:20: @3[5]: _10 = Lt(move _11, move _12)\"><span class=\"annotation\">@3\u298a</span>k &lt; n<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @14[1]: _25 = ((_21 as Some).0: usize)\n-20:13-20:14: @14[3]: _26 = _25\n-20:13-20:14: @14[4]: _19 = move _26\n-20:13-20:14: @14[5]: _20 = const ()\n-20:13-20:14: @14[13]: FakeRead(ForLet, _28)\"><span class=\"annotation\">@12,14,15,16,17,18\u298a</span>i<span class=\"annotation\">\u2989@12,14,15,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:18-20:19: @5[3]: _15 = _2\n-20:21-20:22: @5[5]: _16 = _3\"><span class=\"annotation\">@5,7\u298a</span>k..n<span class=\"annotation\">\u2989@5,7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n-21:22-21:23: @14[19]: _32 = _28\n-21:25-21:26: @14[21]: _33 = _2\n-21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n-22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n-22:27-22:28: @15[9]: _37 = _2\n-22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n-22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n-22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n-23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n-23:22-23:23: @17[7]: _41 = _28\n-23:25-23:26: @17[9]: _42 = _2\n-23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n-20:23-24:10: @18[4]: _29 = const ()\"><span class=\"annotation\">@12,14,15,16,17,18\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n-21:22-21:23: @14[19]: _32 = _28\n-21:25-21:26: @14[21]: _33 = _2\n-21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n-22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n-22:27-22:28: @15[9]: _37 = _2\n-22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n-22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n-22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n-23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n-23:22-23:23: @17[7]: _41 = _28\n-23:25-23:26: @17[9]: _42 = _2\n-23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n-20:23-24:10: @18[4]: _29 = const ()\">            swap(xs, i, k);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n-21:22-21:23: @14[19]: _32 = _28\n-21:25-21:26: @14[21]: _33 = _2\n-21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n-22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n-22:27-22:28: @15[9]: _37 = _2\n-22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n-22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n-22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n-23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n-23:22-23:23: @17[7]: _41 = _28\n-23:25-23:26: @17[9]: _42 = _2\n-23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n-20:23-24:10: @18[4]: _29 = const ()\">            permutate(xs, k + 1);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n-21:22-21:23: @14[19]: _32 = _28\n-21:25-21:26: @14[21]: _33 = _2\n-21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n-22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n-22:27-22:28: @15[9]: _37 = _2\n-22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n-22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n-22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n-23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n-23:22-23:23: @17[7]: _41 = _28\n-23:25-23:26: @17[9]: _42 = _2\n-23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n-20:23-24:10: @18[4]: _29 = const ()\">            swap(xs, i, k);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:20: @14[17]: _31 = &amp;mut (*_1)\n-21:22-21:23: @14[19]: _32 = _28\n-21:25-21:26: @14[21]: _33 = _2\n-21:13-21:27: @14.Call: _30 = swap::&lt;T&gt;(move _31, move _32, move _33) -&gt; [return: bb15, unwind: bb22]\n-22:23-22:25: @15[6]: _35 = &amp;mut (*_1)\n-22:27-22:28: @15[9]: _37 = _2\n-22:27-22:32: @15[10]: _38 = CheckedAdd(_37, const 1_usize)\n-22:27-22:32: @16[0]: _36 = move (_38.0: usize)\n-22:13-22:33: @16.Call: _34 = permutate::&lt;T&gt;(move _35, move _36) -&gt; [return: bb17, unwind: bb22]\n-23:18-23:20: @17[5]: _40 = &amp;mut (*_1)\n-23:22-23:23: @17[7]: _41 = _28\n-23:25-23:26: @17[9]: _42 = _2\n-23:13-23:27: @17.Call: _39 = swap::&lt;T&gt;(move _40, move _41, move _42) -&gt; [return: bb18, unwind: bb22]\n-20:23-24:10: @18[4]: _29 = const ()\">        }<span class=\"annotation\">\u2989@12,14,15,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @6.Call: _43 = error() -&gt; [return: bb19, unwind: bb22]\n-25:12-27:6: @19[1]: _0 = const ()\"><span class=\"annotation\">@6,19\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @6.Call: _43 = error() -&gt; [return: bb19, unwind: bb22]\n-25:12-27:6: @19[1]: _0 = const ()\">        error();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:9-26:16: @6.Call: _43 = error() -&gt; [return: bb19, unwind: bb22]\n-25:12-27:6: @19[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@6,19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:2-28:2: @21.Return: return\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4bfd22f3cd9031171fcfb65c02ffd08134074700", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutations.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutations.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutations.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.permutations.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,113 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.permutations.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inline.permutations - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 9\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n-11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n-11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n-12:15-12:22: @1[7]: _8 = &amp;mut _2\n-12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n-12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n-12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n-12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n-10:46-13:2: @3[4]: _0 = const ()\n-13:2-13:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn permutations&lt;T: Copy + Display&gt;(xs: &amp;[T]) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n-11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n-11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n-12:15-12:22: @1[7]: _8 = &amp;mut _2\n-12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n-12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n-12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n-12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n-10:46-13:2: @3[4]: _0 = const ()\n-13:2-13:2: @4.Return: return\">    let mut ys = xs.to_owned();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n-11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n-11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n-12:15-12:22: @1[7]: _8 = &amp;mut _2\n-12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n-12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n-12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n-12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n-10:46-13:2: @3[4]: _0 = const ()\n-13:2-13:2: @4.Return: return\">    permutate(&amp;mut ys, 0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:18-11:20: @0[2]: _3 = &amp;(*_1)\n-11:18-11:31: @0.Call: _2 = &lt;[T] as std::borrow::ToOwned&gt;::to_owned(move _3) -&gt; [return: bb1, unwind: bb6]\n-11:9-11:15: @1[1]: FakeRead(ForLet, _2)\n-12:15-12:22: @1[7]: _8 = &amp;mut _2\n-12:15-12:22: @1[8]: _7 = &amp;mut (*_8)\n-12:15-12:22: @1.Call: _6 = &lt;std::vec::Vec&lt;T&gt; as std::ops::DerefMut&gt;::deref_mut(move _7) -&gt; [return: bb2, unwind: bb5]\n-12:15-12:22: @2[0]: _5 = &amp;mut (*_6)\n-12:5-12:26: @2.Call: _4 = permutate::&lt;T&gt;(move _5, const 0_usize) -&gt; [return: bb3, unwind: bb5]\n-10:46-13:2: @3[4]: _0 = const ()\n-13:2-13:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4c3f63093d30e5e2aa381b9f1c186f2fce61a85a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.swap.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 173, "changes": 173, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.swap.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.swap.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inline%2Finline.swap.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,173 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inline/inline.swap.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inline.swap - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 34\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n-36:13-36:18: @0[3]: _6 = Len((*_1))\n-36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n-36:13-36:18: @1[0]: _4 = (*_1)[_5]\n-36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n-37:16-37:17: @1[5]: _9 = _3\n-37:13-37:18: @1[6]: _10 = Len((*_1))\n-37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n-37:13-37:18: @2[0]: _8 = (*_1)[_9]\n-37:8-37:9: @2[2]: _12 = _2\n-37:5-37:10: @2[3]: _13 = Len((*_1))\n-37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n-37:5-37:18: @3[0]: (*_1)[_12] = move _8\n-38:13-38:14: @3[5]: _15 = _4\n-38:8-38:9: @3[7]: _16 = _3\n-38:5-38:10: @3[8]: _17 = Len((*_1))\n-38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n-38:5-38:14: @4[0]: (*_1)[_16] = move _15\n-35:52-39:2: @4[3]: _0 = const ()\n-39:2-39:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn swap&lt;T: Copy&gt;(xs: &amp;mut [T], i: usize, j: usize) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n-36:13-36:18: @0[3]: _6 = Len((*_1))\n-36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n-36:13-36:18: @1[0]: _4 = (*_1)[_5]\n-36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n-37:16-37:17: @1[5]: _9 = _3\n-37:13-37:18: @1[6]: _10 = Len((*_1))\n-37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n-37:13-37:18: @2[0]: _8 = (*_1)[_9]\n-37:8-37:9: @2[2]: _12 = _2\n-37:5-37:10: @2[3]: _13 = Len((*_1))\n-37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n-37:5-37:18: @3[0]: (*_1)[_12] = move _8\n-38:13-38:14: @3[5]: _15 = _4\n-38:8-38:9: @3[7]: _16 = _3\n-38:5-38:10: @3[8]: _17 = Len((*_1))\n-38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n-38:5-38:14: @4[0]: (*_1)[_16] = move _15\n-35:52-39:2: @4[3]: _0 = const ()\n-39:2-39:2: @4.Return: return\">    let t = xs[i];</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n-36:13-36:18: @0[3]: _6 = Len((*_1))\n-36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n-36:13-36:18: @1[0]: _4 = (*_1)[_5]\n-36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n-37:16-37:17: @1[5]: _9 = _3\n-37:13-37:18: @1[6]: _10 = Len((*_1))\n-37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n-37:13-37:18: @2[0]: _8 = (*_1)[_9]\n-37:8-37:9: @2[2]: _12 = _2\n-37:5-37:10: @2[3]: _13 = Len((*_1))\n-37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n-37:5-37:18: @3[0]: (*_1)[_12] = move _8\n-38:13-38:14: @3[5]: _15 = _4\n-38:8-38:9: @3[7]: _16 = _3\n-38:5-38:10: @3[8]: _17 = Len((*_1))\n-38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n-38:5-38:14: @4[0]: (*_1)[_16] = move _15\n-35:52-39:2: @4[3]: _0 = const ()\n-39:2-39:2: @4.Return: return\">    xs[i] = xs[j];</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n-36:13-36:18: @0[3]: _6 = Len((*_1))\n-36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n-36:13-36:18: @1[0]: _4 = (*_1)[_5]\n-36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n-37:16-37:17: @1[5]: _9 = _3\n-37:13-37:18: @1[6]: _10 = Len((*_1))\n-37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n-37:13-37:18: @2[0]: _8 = (*_1)[_9]\n-37:8-37:9: @2[2]: _12 = _2\n-37:5-37:10: @2[3]: _13 = Len((*_1))\n-37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n-37:5-37:18: @3[0]: (*_1)[_12] = move _8\n-38:13-38:14: @3[5]: _15 = _4\n-38:8-38:9: @3[7]: _16 = _3\n-38:5-38:10: @3[8]: _17 = Len((*_1))\n-38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n-38:5-38:14: @4[0]: (*_1)[_16] = move _15\n-35:52-39:2: @4[3]: _0 = const ()\n-39:2-39:2: @4.Return: return\">    xs[j] = t;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:16-36:17: @0[2]: _5 = _2\n-36:13-36:18: @0[3]: _6 = Len((*_1))\n-36:13-36:18: @0[4]: _7 = Lt(_5, _6)\n-36:13-36:18: @1[0]: _4 = (*_1)[_5]\n-36:9-36:10: @1[1]: FakeRead(ForLet, _4)\n-37:16-37:17: @1[5]: _9 = _3\n-37:13-37:18: @1[6]: _10 = Len((*_1))\n-37:13-37:18: @1[7]: _11 = Lt(_9, _10)\n-37:13-37:18: @2[0]: _8 = (*_1)[_9]\n-37:8-37:9: @2[2]: _12 = _2\n-37:5-37:10: @2[3]: _13 = Len((*_1))\n-37:5-37:10: @2[4]: _14 = Lt(_12, _13)\n-37:5-37:18: @3[0]: (*_1)[_12] = move _8\n-38:13-38:14: @3[5]: _15 = _4\n-38:8-38:9: @3[7]: _16 = _3\n-38:5-38:10: @3[8]: _17 = Len((*_1))\n-38:5-38:10: @3[9]: _18 = Lt(_16, _17)\n-38:5-38:14: @4[0]: (*_1)[_16] = move _15\n-35:52-39:2: @4[3]: _0 = const ()\n-39:2-39:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "1dc5bb64e0bc3c36141ce34fc5cf553864ba69c8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,93 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inner_items.main-InTrait-default_trait_func - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n-35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n-33:42-36:10: @2[2]: _0 = const ()\n-36:10-36:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>fn default_trait_func(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n-35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n-33:42-36:10: @2[2]: _0 = const ()\n-36:10-36:10: @2.Return: return\">            in_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n-35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n-33:42-36:10: @2[2]: _0 = const ()\n-36:10-36:10: @2.Return: return\">            self.trait_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n-35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n-33:42-36:10: @2[2]: _0 = const ()\n-36:10-36:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "82724e5e8651773f8c1b2445f9d4fdeaecfb0151", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 203, "changes": 203, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,203 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inner_items.main-in_func - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n-20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\n-20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n-20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n-20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn in_func(a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n-20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\n-20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n-20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n-20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">        let b = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n-20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\n-20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n-20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n-20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">        let c = a + b;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n-20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\n-20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n-20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n-20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">        println!(\"c = {}\", c)</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n-20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\n-20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n-20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n-20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n-21:18-21:26: @1[10]: _11 = &amp;(*_23)\n-21:18-21:26: @1[11]: _10 = &amp;(*_11)\n-21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n-21:28-21:29: @1[20]: _18 = &amp;_3\n-21:9-21:30: @1[21]: _17 = (move _18,)\n-21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n-21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n-21:9-21:30: @1[28]: _21 = &amp;(*_19)\n-21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n-21:9-21:30: @2[2]: _16 = [move _20]\n-21:9-21:30: @2[5]: _15 = &amp;_16\n-21:9-21:30: @2[6]: _14 = &amp;(*_15)\n-21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n-21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "b00a781a0a74c815968df4353d0ff8a6c6eb5945", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,101 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inner_items.main-{impl#0}-trait_func - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n-41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n-41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n-42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-40:45-43:10: @2[2]: _0 = const ()\n-43:10-43:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n-41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n-41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n-42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-40:45-43:10: @2[2]: _0 = const ()\n-43:10-43:10: @2.Return: return\">            self.in_struct_field += incr;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n-41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n-41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n-42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-40:45-43:10: @2[2]: _0 = const ()\n-43:10-43:10: @2.Return: return\">            in_func(self.in_struct_field);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n-41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n-41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n-42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-40:45-43:10: @2[2]: _0 = const ()\n-43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4a1003dfbed32c7164ef80039f7fc41024c901fc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 189, "changes": 189, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,189 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>inner_items.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() <span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_u32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_u32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_u32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_u32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_u32\n-10:16-12:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_u32\n-10:16-12:6: @4[1]: _6 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _5 = const 10_u32\n-10:16-12:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    mod in_mod {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        const IN_MOD_CONST: u32 = 1000;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    fn in_func(a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let b = 1;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let c = a + b;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        println!(\"c = {}\", c)</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    struct InStruct {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        in_struct_field: u32,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    const IN_CONST: u32 = 1234;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    trait InTrait {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn trait_func(&amp;mut self, incr: u32);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn default_trait_func(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            in_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.trait_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    impl InTrait for InStruct {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += incr;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            in_func(self.in_struct_field);</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InType = String;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:8-48:15: @6[4]: _9 = _1\"><span class=\"annotation\">@6\u298a</span>is_true<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n-49:9-49:27: @7.Call: _10 = main::in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n-48:16-50:6: @9[2]: _8 = const ()\"><span class=\"annotation\">@7,9\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n-49:9-49:27: @7.Call: _10 = main::in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n-48:16-50:6: @9[2]: _8 = const ()\">        in_func(countdown);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n-49:9-49:27: @7.Call: _10 = main::in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n-48:16-50:6: @9[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@7,9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @8[0]: _8 = const ()\"><span class=\"annotation\">@8\u298a</span>\u2038<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n-57:2-57:2: @11.Return: return\"><span class=\"annotation\">@10,11\u298a</span>mut val = InStruct {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n-57:2-57:2: @11.Return: return\">        in_struct_field: 101,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n-57:2-57:2: @11.Return: return\">    };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n-57:2-57:2: @11.Return: return\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n-57:2-57:2: @11.Return: return\">    val.default_trait_func();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n-52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n-56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n-57:2-57:2: @11.Return: return\">}<span class=\"annotation\">\u2989@10,11</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a6f8d500065fa41e6be55c0a3f8998da611f43ed", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 259, "changes": 259, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,259 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>lazy_boolean.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\">    let (mut a, mut b, mut c) = (0, 0, 0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n-9:10-9:15: @3[4]: _5 = (_8.0: i32)\n-9:17-9:22: @3[6]: _6 = (_8.1: i32)\n-9:24-9:29: @3[8]: _7 = (_8.2: i32)\n-10:8-10:15: @3[12]: _10 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n-12:9-12:15: @4[1]: _6 = const 10_i32\n-13:9-13:16: @4[2]: _7 = const 100_i32\n-10:16-14:6: @4[3]: _9 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n-12:9-12:15: @4[1]: _6 = const 10_i32\n-13:9-13:16: @4[2]: _7 = const 100_i32\n-10:16-14:6: @4[3]: _9 = const ()\">        a = 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n-12:9-12:15: @4[1]: _6 = const 10_i32\n-13:9-13:16: @4[2]: _7 = const 100_i32\n-10:16-14:6: @4[3]: _9 = const ()\">        b = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n-12:9-12:15: @4[1]: _6 = const 10_i32\n-13:9-13:16: @4[2]: _7 = const 100_i32\n-10:16-14:6: @4[3]: _9 = const ()\">        c = 100;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:14: @4[0]: _5 = const 1_i32\n-12:9-12:15: @4[1]: _6 = const 10_i32\n-13:9-13:16: @4[2]: _7 = const 100_i32\n-10:16-14:6: @4[3]: _9 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5[0]: _9 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:9-16:17: @9[2]: FakeRead(ForLet, _11)\"><span class=\"annotation\">@9\u298a</span>somebool<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:13-18:14: @6[5]: _13 = _5\n-18:17-18:18: @6[7]: _14 = _6\n-18:13-18:18: @6[8]: _12 = Lt(move _13, move _14)\"><span class=\"annotation\">@6\u298a</span>a &lt; b<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @8[2]: _16 = _6\n-20:17-20:18: @8[4]: _17 = _7\n-20:13-20:18: @8[5]: _15 = Lt(move _16, move _17)\"><span class=\"annotation\">@8\u298a</span>b &lt; c<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:17: @12[2]: FakeRead(ForLet, _18)\"><span class=\"annotation\">@12\u298a</span>somebool<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        =</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:13-25:14: @9[6]: _20 = _6\n-25:17-25:18: @9[8]: _21 = _5\n-25:13-25:18: @9[9]: _19 = Lt(move _20, move _21)\"><span class=\"annotation\">@9\u298a</span>b &lt; a<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ||</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:14: @11[2]: _23 = _6\n-27:17-27:18: @11[4]: _24 = _7\n-27:13-27:18: @11[5]: _22 = Lt(move _23, move _24)\"><span class=\"annotation\">@11\u298a</span>b &lt; c<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:9-29:17: @15[2]: FakeRead(ForLet, _25)\"><span class=\"annotation\">@15\u298a</span>somebool<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:20-29:21: @12[6]: _27 = _5\n-29:24-29:25: @12[8]: _28 = _6\n-29:20-29:25: @12[9]: _26 = Lt(move _27, move _28)\"><span class=\"annotation\">@12\u298a</span>a &lt; b<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:29-29:30: @14[2]: _30 = _6\n-29:33-29:34: @14[4]: _31 = _7\n-29:29-29:34: @14[5]: _29 = Lt(move _30, move _31)\"><span class=\"annotation\">@14\u298a</span>b &lt; c<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-30:17: @18[2]: FakeRead(ForLet, _32)\"><span class=\"annotation\">@18\u298a</span>somebool<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:20-30:21: @15[6]: _34 = _6\n-30:24-30:25: @15[8]: _35 = _5\n-30:20-30:25: @15[9]: _33 = Lt(move _34, move _35)\"><span class=\"annotation\">@15\u298a</span>b &lt; a<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"> &amp;&amp; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:29-30:30: @17[2]: _37 = _6\n-30:33-30:34: @17[4]: _38 = _7\n-30:29-30:34: @17[5]: _36 = Lt(move _37, move _38)\"><span class=\"annotation\">@17\u298a</span>b &lt; c<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @18[6]: _41 = _1\n-33:9-34:16: @18[7]: _40 = Not(move _41)\"><span class=\"annotation\">@18\u298a</span>!</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:16: @18[6]: _41 = _1\n-33:9-34:16: @18[7]: _40 = Not(move _41)\">        is_true<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @19[0]: _5 = const 2_i32\n-35:5-38:6: @19[1]: _39 = const ()\"><span class=\"annotation\">@19\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @19[0]: _5 = const 2_i32\n-35:5-38:6: @19[1]: _39 = const ()\">        a = 2</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @19[0]: _5 = const 2_i32\n-35:5-38:6: @19[1]: _39 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:14: @19[0]: _5 = const 2_i32\n-35:5-38:6: @19[1]: _39 = const ()\">    }<span class=\"annotation\">\u2989@19</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:6-38:6: @20[0]: _39 = const ()\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:16: @21[4]: _43 = _1\"><span class=\"annotation\">@21\u298a</span>is_true<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @22[0]: _6 = const 30_i32\n-42:5-45:6: @22[1]: _42 = const ()\"><span class=\"annotation\">@22\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @22[0]: _6 = const 30_i32\n-42:5-45:6: @22[1]: _42 = const ()\">        b = 30</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @22[0]: _6 = const 30_i32\n-42:5-45:6: @22[1]: _42 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"43:9-43:15: @22[0]: _6 = const 30_i32\n-42:5-45:6: @22[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @23[0]: _7 = const 400_i32\n-47:5-50:6: @23[1]: _42 = const ()\"><span class=\"annotation\">@23\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @23[0]: _7 = const 400_i32\n-47:5-50:6: @23[1]: _42 = const ()\">        c = 400</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @23[0]: _7 = const 400_i32\n-47:5-50:6: @23[1]: _42 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"48:9-48:16: @23[0]: _7 = const 400_i32\n-47:5-50:6: @23[1]: _42 = const ()\">    }<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"52:9-52:16: @24[5]: _46 = _1\n-52:8-52:16: @24[6]: _45 = Not(move _46)\"><span class=\"annotation\">@24\u298a</span>!is_true<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @25[0]: _5 = const 2_i32\n-52:17-54:6: @25[1]: _44 = const ()\"><span class=\"annotation\">@25\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @25[0]: _5 = const 2_i32\n-52:17-54:6: @25[1]: _44 = const ()\">        a = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"53:9-53:14: @25[0]: _5 = const 2_i32\n-52:17-54:6: @25[1]: _44 = const ()\">    }<span class=\"annotation\">\u2989@25</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"54:6-54:6: @26[0]: _44 = const ()\"><span class=\"annotation\">@26\u298a</span>\u2038<span class=\"annotation\">\u2989@26</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"56:8-56:15: @27[3]: _47 = _1\"><span class=\"annotation\">@27\u298a</span>is_true<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @28[0]: _6 = const 30_i32\n-56:16-58:6: @28[1]: _0 = const ()\"><span class=\"annotation\">@28\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @28[0]: _6 = const 30_i32\n-56:16-58:6: @28[1]: _0 = const ()\">        b = 30;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:15: @28[0]: _6 = const 30_i32\n-56:16-58:6: @28[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@28</span></span></span><span class=\"code\" style=\"--layer: 0\"> else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @29[0]: _7 = const 400_i32\n-58:12-60:6: @29[1]: _0 = const ()\"><span class=\"annotation\">@29\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @29[0]: _7 = const 400_i32\n-58:12-60:6: @29[1]: _0 = const ()\">        c = 400;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"59:9-59:16: @29[0]: _7 = const 400_i32\n-58:12-60:6: @29[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"61:2-61:2: @30.Return: return\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "076d036c2aff781611c4d3f71daced38b45a88ff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 128, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loop_break_value%2Floop_break_value.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,128 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loop_break_value/loop_break_value.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>loop_break_value.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">    let result</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">        =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            loop</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">        {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            break</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">            ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">        }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:13-11:10: @0.FalseUnwind: falseUnwind -&gt; [real: bb1, cleanup: bb2]\n-9:13-9:15: @1[0]: _1 = const 10_i32\n-4:9-4:15: @1[1]: FakeRead(ForLet, _1)\n-3:11-13:2: @1[2]: _0 = const ()\n-13:2-13:2: @1.Return: return\">}<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "95e8f0b71eab80dc1a6fe6912d070326801150ec", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,161 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>loops_branches.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\">    let debug_test = DebugTest;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\">    println!(\"{:?}\", debug_test);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:22-23:31: @0[1]: _1 = DebugTest\n-23:9-23:19: @0[2]: FakeRead(ForLet, _1)\n-24:14-24:20: @0[9]: _19 = const main::promoted[0]\n-24:14-24:20: @0[10]: _7 = &amp;(*_19)\n-24:14-24:20: @0[11]: _6 = &amp;(*_7)\n-24:14-24:20: @0[12]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-24:22-24:32: @0[20]: _14 = &amp;_1\n-24:5-24:34: @0[21]: _13 = (move _14,)\n-24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n-24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n-24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n-24:5-24:34: @1[2]: _12 = [move _16]\n-24:5-24:34: @1[5]: _11 = &amp;_12\n-24:5-24:34: @1[6]: _10 = &amp;(*_11)\n-24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n-24:5-24:34: @3[6]: _2 = const ()\n-22:11-25:2: @3[8]: _0 = const ()\n-25:2-25:2: @3.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "f6f08b6a7704bd45ec016b323a493c9db44c613d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 100, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,100 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>loops_branches.{impl#0}-fmt - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\"><span class=\"annotation\">@0\u298a</span>fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:12-10:16: @0[2]: _4 = const true\">        if true<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:16-11:21: @1[2]: _6 = const false\"><span class=\"annotation\">@1\u298a</span>false<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                while </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:23-12:27: @5[1]: _8 = const true\n-12:23-12:27: @5[2]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@4,5\u298a</span>true<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @8[0]: _7 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @8[0]: _7 = const ()\">                }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:14-14:14: @3[0]: _5 = const ()\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:20-15:21: @9[6]: _13 = &amp;mut (*_2)\n-15:23-15:30: @9[11]: _32 = const &lt;DebugTest as std::fmt::Debug&gt;::fmt::promoted[1]\n-15:23-15:30: @9[12]: _17 = &amp;(*_32)\n-15:23-15:30: @9[13]: _16 = &amp;(*_17)\n-15:23-15:30: @9[14]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n-15:13-15:31: @9[20]: _23 = ()\n-15:13-15:31: @9[21]: FakeRead(ForMatchedPlace, _23)\n-15:13-15:31: @9[22]: _31 = const &lt;DebugTest as std::fmt::Debug&gt;::fmt::promoted[0]\n-15:13-15:31: @9[23]: _21 = &amp;(*_31)\n-15:13-15:31: @9[24]: _20 = &amp;(*_21)\n-15:13-15:31: @9[25]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-15:13-15:31: @9.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb21]\n-15:13-15:31: @10.Call: _12 = std::fmt::Formatter::write_fmt(move _13, move _14) -&gt; [return: bb11, unwind: bb21]\"><span class=\"annotation\">@9,10,11,12\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@9,10,11,12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:31-15:32: @16[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n-15:31-15:32: @16[4]: _28 = _25\n-15:31-15:32: @16.Call: _27 = &lt;std::fmt::Error as std::convert::From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb17, unwind: bb21]\"><span class=\"annotation\">@14,16,17,18\u298a</span>?<span class=\"annotation\">\u2989@14,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\">        }<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:14: @19[3]: _30 = ()\n-18:9-18:15: @19[4]: _0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@19\u298a</span>Ok(())<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:6-19:6: @20.Return: return\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "013c292ce9a4318b929f5bddb5c047f993141e15", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.match_or_pattern/match_or_pattern.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 259, "changes": 259, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,259 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.match_or_pattern/match_or_pattern.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>match_or_pattern.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\">    let mut a: u8 = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\">    let mut b: u8 = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:21-9:22: @3[2]: _5 = const 0_u8\n-9:9-9:14: @3[3]: FakeRead(ForLet, _5)\n-9:16-9:18: @3[4]: AscribeUserType(_5, o, UserTypeProjection { base: UserType(1), projs: [] })\n-10:21-10:22: @3[6]: _6 = const 0_u8\n-10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n-10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n-11:8-11:15: @3[11]: _8 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n-13:9-13:14: @4[1]: _6 = const 0_u8\n-11:16-14:6: @4[2]: _7 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n-13:9-13:14: @4[1]: _6 = const 0_u8\n-11:16-14:6: @4[2]: _7 = const ()\">        a = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n-13:9-13:14: @4[1]: _6 = const 0_u8\n-11:16-14:6: @4[2]: _7 = const ()\">        b = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:14: @4[0]: _5 = const 2_u8\n-13:9-13:14: @4[1]: _6 = const 0_u8\n-11:16-14:6: @4[2]: _7 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:6-14:6: @5[0]: _7 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:12-15:13: @6[5]: _11 = _5\n-15:15-15:16: @6[7]: _12 = _6\n-15:11-15:17: @6[8]: _10 = (move _11, move _12)\n-15:11-15:17: @6[11]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@6\u298a</span>(a, b)<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // Or patterns generate MIR `SwitchInt` with multiple targets to the same `BasicBlock`.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // This test confirms a fix for Issue #79569.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:27-18:29: @10[0]: _9 = const ()\"><span class=\"annotation\">@9,10\u298a</span>{}<span class=\"annotation\">\u2989@9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:14-19:16: @7[0]: _9 = const ()\"><span class=\"annotation\">@7\u298a</span>{}<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:8-21:15: @11[4]: _14 = _1\"><span class=\"annotation\">@11\u298a</span>is_true<span class=\"annotation\">\u2989@11</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n-23:9-23:14: @12[1]: _6 = const 0_u8\n-21:16-24:6: @12[2]: _13 = const ()\"><span class=\"annotation\">@12\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n-23:9-23:14: @12[1]: _6 = const 0_u8\n-21:16-24:6: @12[2]: _13 = const ()\">        a = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n-23:9-23:14: @12[1]: _6 = const 0_u8\n-21:16-24:6: @12[2]: _13 = const ()\">        b = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:14: @12[0]: _5 = const 0_u8\n-23:9-23:14: @12[1]: _6 = const 0_u8\n-21:16-24:6: @12[2]: _13 = const ()\">    }<span class=\"annotation\">\u2989@12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @13[0]: _13 = const ()\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:12-25:13: @14[5]: _17 = _5\n-25:15-25:16: @14[7]: _18 = _6\n-25:11-25:17: @14[8]: _16 = (move _17, move _18)\n-25:11-25:17: @14[11]: FakeRead(ForMatchedPlace, _16)\"><span class=\"annotation\">@14\u298a</span>(a, b)<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:27-26:29: @18[0]: _15 = const ()\"><span class=\"annotation\">@17,18\u298a</span>{}<span class=\"annotation\">\u2989@17,18</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:14-27:16: @15[0]: _15 = const ()\"><span class=\"annotation\">@15\u298a</span>{}<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:8-29:15: @19[4]: _20 = _1\"><span class=\"annotation\">@19\u298a</span>is_true<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n-31:9-31:14: @20[1]: _6 = const 2_u8\n-29:16-32:6: @20[2]: _19 = const ()\"><span class=\"annotation\">@20\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n-31:9-31:14: @20[1]: _6 = const 2_u8\n-29:16-32:6: @20[2]: _19 = const ()\">        a = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n-31:9-31:14: @20[1]: _6 = const 2_u8\n-29:16-32:6: @20[2]: _19 = const ()\">        b = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-30:14: @20[0]: _5 = const 2_u8\n-31:9-31:14: @20[1]: _6 = const 2_u8\n-29:16-32:6: @20[2]: _19 = const ()\">    }<span class=\"annotation\">\u2989@20</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:6-32:6: @21[0]: _19 = const ()\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:12-33:13: @22[5]: _23 = _5\n-33:15-33:16: @22[7]: _24 = _6\n-33:11-33:17: @22[8]: _22 = (move _23, move _24)\n-33:11-33:17: @22[11]: FakeRead(ForMatchedPlace, _22)\"><span class=\"annotation\">@22\u298a</span>(a, b)<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:27-34:29: @26[0]: _21 = const ()\"><span class=\"annotation\">@25,26\u298a</span>{}<span class=\"annotation\">\u2989@25,26</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:14-35:16: @23[0]: _21 = const ()\"><span class=\"annotation\">@23\u298a</span>{}<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"37:8-37:15: @27[4]: _26 = _1\"><span class=\"annotation\">@27\u298a</span>is_true<span class=\"annotation\">\u2989@27</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n-39:9-39:14: @28[1]: _6 = const 2_u8\n-37:16-40:6: @28[2]: _25 = const ()\"><span class=\"annotation\">@28\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n-39:9-39:14: @28[1]: _6 = const 2_u8\n-37:16-40:6: @28[2]: _25 = const ()\">        a = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n-39:9-39:14: @28[1]: _6 = const 2_u8\n-37:16-40:6: @28[2]: _25 = const ()\">        b = 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"38:9-38:14: @28[0]: _5 = const 0_u8\n-39:9-39:14: @28[1]: _6 = const 2_u8\n-37:16-40:6: @28[2]: _25 = const ()\">    }<span class=\"annotation\">\u2989@28</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:6-40:6: @29[0]: _25 = const ()\"><span class=\"annotation\">@29\u298a</span>\u2038<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:12-41:13: @30[4]: _28 = _5\n-41:15-41:16: @30[6]: _29 = _6\n-41:11-41:17: @30[7]: _27 = (move _28, move _29)\n-41:11-41:17: @30[10]: FakeRead(ForMatchedPlace, _27)\"><span class=\"annotation\">@30\u298a</span>(a, b)<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        (0 | 1, 2 | 3) =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:27-42:29: @34[0]: _0 = const ()\"><span class=\"annotation\">@33,34\u298a</span>{}<span class=\"annotation\">\u2989@33,34</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:14-43:16: @31[0]: _0 = const ()\"><span class=\"annotation\">@31\u298a</span>{}<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:2-45:2: @35.Return: return\"><span class=\"annotation\">@35\u298a</span>\u2038<span class=\"annotation\">\u2989@35</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "1abc24156d9c384ffedecde1f54ab7f957d2a65d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 166, "changes": 166, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,166 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>nested_loops.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n-3:25-3:27: @3[2]: _5 = const 10_i32\n-3:9-3:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n-3:25-3:27: @3[2]: _5 = const 10_i32\n-3:9-3:22: @3[3]: FakeRead(ForLet, _5)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n-2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n-2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n-3:25-3:27: @3[2]: _5 = const 10_i32\n-3:9-3:22: @3[3]: FakeRead(ForLet, _5)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    'outer: while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:19-5:28: @5[2]: _8 = _5\n-5:19-5:32: @5[3]: _7 = Gt(move _8, const 0_i32)\n-5:19-5:32: @5[5]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@4,5\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n-6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n-7:21-7:24: @8[4]: _10 = const 100_i32\n-7:13-7:18: @8[5]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@6,8,9\u298a</span>mut a = 100;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:21-6:24: @8[1]: _9 = const 100_i32\n-6:13-6:18: @8[2]: FakeRead(ForLet, _9)\n-7:21-7:24: @8[4]: _10 = const 100_i32\n-7:13-7:18: @8[5]: FakeRead(ForLet, _10)\">        let mut b = 100<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        for </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:13-8:14: @16[1]: _21 = ((_17 as Some).0: i32)\n-8:13-8:14: @16[3]: _22 = _21\n-8:13-8:14: @16[4]: _15 = move _22\n-8:13-8:14: @16[5]: _16 = const ()\"><span class=\"annotation\">@14,16\u298a</span>_<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:18-8:23: @11[5]: _19 = &amp;mut _14\n-8:18-8:23: @11[6]: _18 = &amp;mut (*_19)\n-8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as std::iter::Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb32]\n-8:18-8:23: @12[1]: FakeRead(ForMatchedPlace, _17)\"><span class=\"annotation\">@10,11,12\u298a</span>0..50<span class=\"annotation\">\u2989@10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:16-9:17: @16[15]: _27 = _9\n-9:16-9:22: @16[16]: _26 = Lt(move _27, const 30_i32)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @17[0]: _11 = const ()\"><span class=\"annotation\">@17\u298a</span>break<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n-12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @20[3]: _32 = _10\n-14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\"><span class=\"annotation\">@18,19,20\u298a</span></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n-12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @20[3]: _32 = _10\n-14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\">            a -= 5;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n-12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @20[3]: _32 = _10\n-14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\">            b -= 5;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:14-11:14: @18[0]: _25 = const ()\n-12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n-12:13-12:19: @19[0]: _9 = move (_29.0: i32)\n-13:13-13:19: @19[1]: _30 = CheckedSub(_10, const 5_i32)\n-13:13-13:19: @20[0]: _10 = move (_30.0: i32)\n-14:16-14:17: @20[3]: _32 = _10\n-14:16-14:22: @20[4]: _31 = Lt(move _32, const 90_i32)\">            if b &lt; 90<span class=\"annotation\">\u2989@18,19,20</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @21[0]: _33 = CheckedSub(_9, const 10_i32)\n-15:17-15:24: @23[0]: _9 = move (_33.0: i32)\n-16:20-16:27: @23[2]: _34 = _1\"><span class=\"annotation\">@21,23\u298a</span>a -= 10;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @21[0]: _33 = CheckedSub(_9, const 10_i32)\n-15:17-15:24: @23[0]: _9 = move (_33.0: i32)\n-16:20-16:27: @23[2]: _34 = _1\">                if is_true<span class=\"annotation\">\u2989@21,23</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:21-17:33: @24[0]: _0 = const ()\"><span class=\"annotation\">@24\u298a</span>break 'outer<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @25[0]: _36 = CheckedSub(_9, const 2_i32)\n-19:21-19:27: @26[0]: _9 = move (_36.0: i32)\n-18:24-20:18: @26[1]: _24 = const ()\"><span class=\"annotation\">@25,26\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @25[0]: _36 = CheckedSub(_9, const 2_i32)\n-19:21-19:27: @26[0]: _9 = move (_36.0: i32)\n-18:24-20:18: @26[1]: _24 = const ()\">                    a -= 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @25[0]: _36 = CheckedSub(_9, const 2_i32)\n-19:21-19:27: @26[0]: _9 = move (_36.0: i32)\n-18:24-20:18: @26[1]: _24 = const ()\">                }<span class=\"annotation\">\u2989@25,26</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:14-21:14: @22[0]: _24 = const ()\"><span class=\"annotation\">@22\u298a</span>\u2038<span class=\"annotation\">\u2989@22</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:23: @28[4]: _37 = CheckedSub(_5, const 1_i32)\n-23:9-23:23: @29[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@28,29\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@28,29</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @30.Return: return\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "2a9b1b10efcd24006c341b9d123133dbbff65f33", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 258, "changes": 258, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,258 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>overflow.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:25-16:27: @0[1]: _1 = const 10_i32\n-16:9-16:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"16:25-16:27: @0[1]: _1 = const 10_i32\n-16:9-16:22: @0[2]: FakeRead(ForLet, _1)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:11-17:20: @2[2]: _5 = _1\n-17:11-17:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n-17:11-17:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:21: @5[3]: _8 = _1\n-18:12-18:26: @5[4]: _7 = Eq(move _8, const 1_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n-19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @8[7]: _51 = const main::promoted[1]\n-20:22-20:34: @8[8]: _15 = &amp;(*_51)\n-20:22-20:34: @8[9]: _14 = &amp;(*_15)\n-20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @8[18]: _22 = &amp;_9\n-20:13-20:44: @8[19]: _21 = (move _22,)\n-20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @8[26]: _25 = &amp;(*_23)\n-20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n-20:13-20:44: @9[2]: _20 = [move _24]\n-20:13-20:44: @9[5]: _19 = &amp;_20\n-20:13-20:44: @9[6]: _18 = &amp;(*_19)\n-20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n-20:13-20:44: @11[6]: _10 = const ()\n-18:27-21:10: @11[8]: _6 = const ()\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n-19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @8[7]: _51 = const main::promoted[1]\n-20:22-20:34: @8[8]: _15 = &amp;(*_51)\n-20:22-20:34: @8[9]: _14 = &amp;(*_15)\n-20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @8[18]: _22 = &amp;_9\n-20:13-20:44: @8[19]: _21 = (move _22,)\n-20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @8[26]: _25 = &amp;(*_23)\n-20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n-20:13-20:44: @9[2]: _20 = [move _24]\n-20:13-20:44: @9[5]: _19 = &amp;_20\n-20:13-20:44: @9[6]: _18 = &amp;(*_19)\n-20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n-20:13-20:44: @11[6]: _10 = const ()\n-18:27-21:10: @11[8]: _6 = const ()\">            let result = might_overflow(10);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n-19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @8[7]: _51 = const main::promoted[1]\n-20:22-20:34: @8[8]: _15 = &amp;(*_51)\n-20:22-20:34: @8[9]: _14 = &amp;(*_15)\n-20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @8[18]: _22 = &amp;_9\n-20:13-20:44: @8[19]: _21 = (move _22,)\n-20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @8[26]: _25 = &amp;(*_23)\n-20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n-20:13-20:44: @9[2]: _20 = [move _24]\n-20:13-20:44: @9[5]: _19 = &amp;_20\n-20:13-20:44: @9[6]: _18 = &amp;(*_19)\n-20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n-20:13-20:44: @11[6]: _10 = const ()\n-18:27-21:10: @11[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n-19:17-19:23: @8[0]: FakeRead(ForLet, _9)\n-20:22-20:34: @8[7]: _51 = const main::promoted[1]\n-20:22-20:34: @8[8]: _15 = &amp;(*_51)\n-20:22-20:34: @8[9]: _14 = &amp;(*_15)\n-20:22-20:34: @8[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n-20:36-20:42: @8[18]: _22 = &amp;_9\n-20:13-20:44: @8[19]: _21 = (move _22,)\n-20:13-20:44: @8[21]: FakeRead(ForMatchedPlace, _21)\n-20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n-20:13-20:44: @8[26]: _25 = &amp;(*_23)\n-20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n-20:13-20:44: @9[2]: _20 = [move _24]\n-20:13-20:44: @9[5]: _19 = &amp;_20\n-20:13-20:44: @9[6]: _18 = &amp;(*_19)\n-20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n-20:13-20:44: @11[6]: _10 = const ()\n-18:27-21:10: @11[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:19-21:28: @7[2]: _28 = _1\n-21:19-21:32: @7[3]: _27 = Lt(move _28, const 5_i32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n-22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @14[7]: _50 = const main::promoted[0]\n-23:22-23:34: @14[8]: _35 = &amp;(*_50)\n-23:22-23:34: @14[9]: _34 = &amp;(*_35)\n-23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @14[18]: _42 = &amp;_29\n-23:13-23:44: @14[19]: _41 = (move _42,)\n-23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @14[26]: _45 = &amp;(*_43)\n-23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n-23:13-23:44: @15[2]: _40 = [move _44]\n-23:13-23:44: @15[5]: _39 = &amp;_40\n-23:13-23:44: @15[6]: _38 = &amp;(*_39)\n-23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n-23:13-23:44: @17[6]: _30 = const ()\n-21:33-24:10: @17[8]: _6 = const ()\"><span class=\"annotation\">@12,14,15,16,17\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n-22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @14[7]: _50 = const main::promoted[0]\n-23:22-23:34: @14[8]: _35 = &amp;(*_50)\n-23:22-23:34: @14[9]: _34 = &amp;(*_35)\n-23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @14[18]: _42 = &amp;_29\n-23:13-23:44: @14[19]: _41 = (move _42,)\n-23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @14[26]: _45 = &amp;(*_43)\n-23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n-23:13-23:44: @15[2]: _40 = [move _44]\n-23:13-23:44: @15[5]: _39 = &amp;_40\n-23:13-23:44: @15[6]: _38 = &amp;(*_39)\n-23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n-23:13-23:44: @17[6]: _30 = const ()\n-21:33-24:10: @17[8]: _6 = const ()\">            let result = might_overflow(1);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n-22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @14[7]: _50 = const main::promoted[0]\n-23:22-23:34: @14[8]: _35 = &amp;(*_50)\n-23:22-23:34: @14[9]: _34 = &amp;(*_35)\n-23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @14[18]: _42 = &amp;_29\n-23:13-23:44: @14[19]: _41 = (move _42,)\n-23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @14[26]: _45 = &amp;(*_43)\n-23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n-23:13-23:44: @15[2]: _40 = [move _44]\n-23:13-23:44: @15[5]: _39 = &amp;_40\n-23:13-23:44: @15[6]: _38 = &amp;(*_39)\n-23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n-23:13-23:44: @17[6]: _30 = const ()\n-21:33-24:10: @17[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n-22:17-22:23: @14[0]: FakeRead(ForLet, _29)\n-23:22-23:34: @14[7]: _50 = const main::promoted[0]\n-23:22-23:34: @14[8]: _35 = &amp;(*_50)\n-23:22-23:34: @14[9]: _34 = &amp;(*_35)\n-23:22-23:34: @14[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n-23:36-23:42: @14[18]: _42 = &amp;_29\n-23:13-23:44: @14[19]: _41 = (move _42,)\n-23:13-23:44: @14[21]: FakeRead(ForMatchedPlace, _41)\n-23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n-23:13-23:44: @14[26]: _45 = &amp;(*_43)\n-23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n-23:13-23:44: @15[2]: _40 = [move _44]\n-23:13-23:44: @15[5]: _39 = &amp;_40\n-23:13-23:44: @15[6]: _38 = &amp;(*_39)\n-23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n-23:13-23:44: @17[6]: _30 = const ()\n-21:33-24:10: @17[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@12,14,15,16,17</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:10-24:10: @13[0]: _6 = const ()\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @19[2]: _47 = CheckedSub(_1, const 1_i32)\n-25:9-25:23: @20[0]: _1 = move (_47.0: i32)\"><span class=\"annotation\">@19,20\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n-27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n-28:2-28:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n-27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n-28:2-28:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "c6043f0bd07fec61148af490e6570b099fb68818", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 394, "changes": 394, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,394 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>overflow.might_overflow - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:14: @0[3]: _4 = _1\n-5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\"><span class=\"annotation\">@0\u298a</span>fn might_overflow(to_add: u32) -&gt; u32 {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:14: @0[3]: _4 = _1\n-5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\">    if to_add &gt; 5<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n-6:18-6:47: @1[7]: _10 = &amp;(*_61)\n-6:18-6:47: @1[8]: _9 = &amp;(*_10)\n-6:18-6:47: @1[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:49: @1[15]: _16 = ()\n-6:9-6:49: @1[16]: FakeRead(ForMatchedPlace, _16)\n-6:9-6:49: @1[17]: _60 = const might_overflow::promoted[3]\n-6:9-6:49: @1[18]: _14 = &amp;(*_60)\n-6:9-6:49: @1[19]: _13 = &amp;(*_14)\n-6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @1.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n-6:9-6:49: @3.Call: _6 = std::io::_print(move _7) -&gt; [return: bb4, unwind: bb14]\n-6:9-6:49: @4[5]: _5 = const ()\n-5:19-7:6: @4[7]: _2 = const ()\"><span class=\"annotation\">@1,3,4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n-6:18-6:47: @1[7]: _10 = &amp;(*_61)\n-6:18-6:47: @1[8]: _9 = &amp;(*_10)\n-6:18-6:47: @1[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:49: @1[15]: _16 = ()\n-6:9-6:49: @1[16]: FakeRead(ForMatchedPlace, _16)\n-6:9-6:49: @1[17]: _60 = const might_overflow::promoted[3]\n-6:9-6:49: @1[18]: _14 = &amp;(*_60)\n-6:9-6:49: @1[19]: _13 = &amp;(*_14)\n-6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @1.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n-6:9-6:49: @3.Call: _6 = std::io::_print(move _7) -&gt; [return: bb4, unwind: bb14]\n-6:9-6:49: @4[5]: _5 = const ()\n-5:19-7:6: @4[7]: _2 = const ()\">        println!(\"this will probably overflow\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n-6:18-6:47: @1[7]: _10 = &amp;(*_61)\n-6:18-6:47: @1[8]: _9 = &amp;(*_10)\n-6:18-6:47: @1[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:49: @1[15]: _16 = ()\n-6:9-6:49: @1[16]: FakeRead(ForMatchedPlace, _16)\n-6:9-6:49: @1[17]: _60 = const might_overflow::promoted[3]\n-6:9-6:49: @1[18]: _14 = &amp;(*_60)\n-6:9-6:49: @1[19]: _13 = &amp;(*_14)\n-6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @1.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n-6:9-6:49: @3.Call: _6 = std::io::_print(move _7) -&gt; [return: bb4, unwind: bb14]\n-6:9-6:49: @4[5]: _5 = const ()\n-5:19-7:6: @4[7]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3,4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2[0]: _2 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @6[9]: _24 = &amp;(*_59)\n-9:14-9:38: @6[10]: _23 = &amp;(*_24)\n-9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @6[19]: _31 = &amp;_17\n-9:48-9:54: @6[21]: _32 = &amp;_1\n-9:5-9:56: @6[22]: _30 = (move _31, move _32)\n-9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @6[32]: _36 = &amp;(*_33)\n-9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n-9:5-9:56: @7[4]: _39 = &amp;(*_34)\n-9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n-9:5-9:56: @8[2]: _29 = [move _35, move _38]\n-9:5-9:56: @8[7]: _28 = &amp;_29\n-9:5-9:56: @8[8]: _27 = &amp;(*_28)\n-9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n-9:5-9:56: @10[6]: _19 = const ()\n-10:18-10:24: @10[10]: _42 = _1\n-10:27-10:33: @10[12]: _43 = _17\n-10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @11[11]: _50 = &amp;(*_58)\n-11:14-11:47: @11[12]: _49 = &amp;(*_50)\n-11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @11[19]: _56 = ()\n-11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @11[22]: _54 = &amp;(*_57)\n-11:5-11:49: @11[23]: _53 = &amp;(*_54)\n-11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n-11:5-11:49: @13[5]: _45 = const ()\n-12:5-12:11: @13[7]: _0 = _41\n-13:2-13:2: @13.Return: return\"><span class=\"annotation\">@5,6,7,8,9,10,11,12,13\u298a</span>add_to = u32::MAX - 5;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @6[9]: _24 = &amp;(*_59)\n-9:14-9:38: @6[10]: _23 = &amp;(*_24)\n-9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @6[19]: _31 = &amp;_17\n-9:48-9:54: @6[21]: _32 = &amp;_1\n-9:5-9:56: @6[22]: _30 = (move _31, move _32)\n-9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @6[32]: _36 = &amp;(*_33)\n-9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n-9:5-9:56: @7[4]: _39 = &amp;(*_34)\n-9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n-9:5-9:56: @8[2]: _29 = [move _35, move _38]\n-9:5-9:56: @8[7]: _28 = &amp;_29\n-9:5-9:56: @8[8]: _27 = &amp;(*_28)\n-9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n-9:5-9:56: @10[6]: _19 = const ()\n-10:18-10:24: @10[10]: _42 = _1\n-10:27-10:33: @10[12]: _43 = _17\n-10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @11[11]: _50 = &amp;(*_58)\n-11:14-11:47: @11[12]: _49 = &amp;(*_50)\n-11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @11[19]: _56 = ()\n-11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @11[22]: _54 = &amp;(*_57)\n-11:5-11:49: @11[23]: _53 = &amp;(*_54)\n-11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n-11:5-11:49: @13[5]: _45 = const ()\n-12:5-12:11: @13[7]: _0 = _41\n-13:2-13:2: @13.Return: return\">    println!(\"does {} + {} overflow?\", add_to, to_add);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @6[9]: _24 = &amp;(*_59)\n-9:14-9:38: @6[10]: _23 = &amp;(*_24)\n-9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @6[19]: _31 = &amp;_17\n-9:48-9:54: @6[21]: _32 = &amp;_1\n-9:5-9:56: @6[22]: _30 = (move _31, move _32)\n-9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @6[32]: _36 = &amp;(*_33)\n-9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n-9:5-9:56: @7[4]: _39 = &amp;(*_34)\n-9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n-9:5-9:56: @8[2]: _29 = [move _35, move _38]\n-9:5-9:56: @8[7]: _28 = &amp;_29\n-9:5-9:56: @8[8]: _27 = &amp;(*_28)\n-9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n-9:5-9:56: @10[6]: _19 = const ()\n-10:18-10:24: @10[10]: _42 = _1\n-10:27-10:33: @10[12]: _43 = _17\n-10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @11[11]: _50 = &amp;(*_58)\n-11:14-11:47: @11[12]: _49 = &amp;(*_50)\n-11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @11[19]: _56 = ()\n-11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @11[22]: _54 = &amp;(*_57)\n-11:5-11:49: @11[23]: _53 = &amp;(*_54)\n-11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n-11:5-11:49: @13[5]: _45 = const ()\n-12:5-12:11: @13[7]: _0 = _41\n-13:2-13:2: @13.Return: return\">    let result = to_add + add_to;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @6[9]: _24 = &amp;(*_59)\n-9:14-9:38: @6[10]: _23 = &amp;(*_24)\n-9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @6[19]: _31 = &amp;_17\n-9:48-9:54: @6[21]: _32 = &amp;_1\n-9:5-9:56: @6[22]: _30 = (move _31, move _32)\n-9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @6[32]: _36 = &amp;(*_33)\n-9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n-9:5-9:56: @7[4]: _39 = &amp;(*_34)\n-9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n-9:5-9:56: @8[2]: _29 = [move _35, move _38]\n-9:5-9:56: @8[7]: _28 = &amp;_29\n-9:5-9:56: @8[8]: _27 = &amp;(*_28)\n-9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n-9:5-9:56: @10[6]: _19 = const ()\n-10:18-10:24: @10[10]: _42 = _1\n-10:27-10:33: @10[12]: _43 = _17\n-10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @11[11]: _50 = &amp;(*_58)\n-11:14-11:47: @11[12]: _49 = &amp;(*_50)\n-11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @11[19]: _56 = ()\n-11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @11[22]: _54 = &amp;(*_57)\n-11:5-11:49: @11[23]: _53 = &amp;(*_54)\n-11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n-11:5-11:49: @13[5]: _45 = const ()\n-12:5-12:11: @13[7]: _0 = _41\n-13:2-13:2: @13.Return: return\">    println!(\"continuing after overflow check\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @6[9]: _24 = &amp;(*_59)\n-9:14-9:38: @6[10]: _23 = &amp;(*_24)\n-9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @6[19]: _31 = &amp;_17\n-9:48-9:54: @6[21]: _32 = &amp;_1\n-9:5-9:56: @6[22]: _30 = (move _31, move _32)\n-9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @6[32]: _36 = &amp;(*_33)\n-9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n-9:5-9:56: @7[4]: _39 = &amp;(*_34)\n-9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n-9:5-9:56: @8[2]: _29 = [move _35, move _38]\n-9:5-9:56: @8[7]: _28 = &amp;_29\n-9:5-9:56: @8[8]: _27 = &amp;(*_28)\n-9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n-9:5-9:56: @10[6]: _19 = const ()\n-10:18-10:24: @10[10]: _42 = _1\n-10:27-10:33: @10[12]: _43 = _17\n-10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @11[11]: _50 = &amp;(*_58)\n-11:14-11:47: @11[12]: _49 = &amp;(*_50)\n-11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @11[19]: _56 = ()\n-11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @11[22]: _54 = &amp;(*_57)\n-11:5-11:49: @11[23]: _53 = &amp;(*_54)\n-11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n-11:5-11:49: @13[5]: _45 = const ()\n-12:5-12:11: @13[7]: _0 = _41\n-13:2-13:2: @13.Return: return\">    result</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n-8:18-8:30: @6[0]: _17 = move (_18.0: u32)\n-8:9-8:15: @6[1]: FakeRead(ForLet, _17)\n-9:14-9:38: @6[8]: _59 = const might_overflow::promoted[2]\n-9:14-9:38: @6[9]: _24 = &amp;(*_59)\n-9:14-9:38: @6[10]: _23 = &amp;(*_24)\n-9:14-9:38: @6[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n-9:40-9:46: @6[19]: _31 = &amp;_17\n-9:48-9:54: @6[21]: _32 = &amp;_1\n-9:5-9:56: @6[22]: _30 = (move _31, move _32)\n-9:5-9:56: @6[25]: FakeRead(ForMatchedPlace, _30)\n-9:5-9:56: @6[27]: _33 = (_30.0: &amp;u32)\n-9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n-9:5-9:56: @6[32]: _36 = &amp;(*_33)\n-9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n-9:5-9:56: @7[4]: _39 = &amp;(*_34)\n-9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n-9:5-9:56: @8[2]: _29 = [move _35, move _38]\n-9:5-9:56: @8[7]: _28 = &amp;_29\n-9:5-9:56: @8[8]: _27 = &amp;(*_28)\n-9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n-9:5-9:56: @10[6]: _19 = const ()\n-10:18-10:24: @10[10]: _42 = _1\n-10:27-10:33: @10[12]: _43 = _17\n-10:18-10:33: @10[13]: _44 = CheckedAdd(_42, _43)\n-10:18-10:33: @11[0]: _41 = move (_44.0: u32)\n-10:9-10:15: @11[3]: FakeRead(ForLet, _41)\n-11:14-11:47: @11[10]: _58 = const might_overflow::promoted[1]\n-11:14-11:47: @11[11]: _50 = &amp;(*_58)\n-11:14-11:47: @11[12]: _49 = &amp;(*_50)\n-11:14-11:47: @11[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n-11:5-11:49: @11[19]: _56 = ()\n-11:5-11:49: @11[20]: FakeRead(ForMatchedPlace, _56)\n-11:5-11:49: @11[21]: _57 = const might_overflow::promoted[0]\n-11:5-11:49: @11[22]: _54 = &amp;(*_57)\n-11:5-11:49: @11[23]: _53 = &amp;(*_54)\n-11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n-11:5-11:49: @13[5]: _45 = const ()\n-12:5-12:11: @13[7]: _0 = _41\n-13:2-13:2: @13.Return: return\">}<span class=\"annotation\">\u2989@5,6,7,8,9,10,11,12,13</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "5b097f118e3a8779afc97e20ed722dc0c93115c5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,102 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>panic_unwind.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 12\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:25-14:27: @0[1]: _1 = const 10_i32\n-14:9-14:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(), u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:25-14:27: @0[1]: _1 = const 10_i32\n-14:9-14:22: @0[2]: FakeRead(ForLet, _1)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:11-15:20: @2[2]: _5 = _1\n-15:11-15:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n-15:11-15:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:12-16:21: @5[3]: _8 = _1\n-16:12-16:26: @5[4]: _7 = Eq(move _8, const 1_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @6.Call: _9 = might_panic(const true) -&gt; [return: bb8, unwind: bb15]\n-16:27-18:10: @8[1]: _6 = const ()\"><span class=\"annotation\">@6,8\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @6.Call: _9 = might_panic(const true) -&gt; [return: bb8, unwind: bb15]\n-16:27-18:10: @8[1]: _6 = const ()\">            might_panic(true);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @6.Call: _9 = might_panic(const true) -&gt; [return: bb8, unwind: bb15]\n-16:27-18:10: @8[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:19-18:28: @7[2]: _11 = _1\n-18:19-18:32: @7[3]: _10 = Lt(move _11, const 5_i32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @9.Call: _12 = might_panic(const false) -&gt; [return: bb11, unwind: bb15]\n-18:33-20:10: @11[1]: _6 = const ()\"><span class=\"annotation\">@9,11\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @9.Call: _12 = might_panic(const false) -&gt; [return: bb11, unwind: bb15]\n-18:33-20:10: @11[1]: _6 = const ()\">            might_panic(false);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @9.Call: _12 = might_panic(const false) -&gt; [return: bb11, unwind: bb15]\n-18:33-20:10: @11[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@9,11</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:10-20:10: @10[0]: _6 = const ()\"><span class=\"annotation\">@10\u298a</span>\u2038<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-21:23: @13[2]: _13 = CheckedSub(_1, const 1_i32)\n-21:9-21:23: @14[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@13,14\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n-23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n-24:2-24:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n-23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n-24:2-24:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "32988629ba0eb421873fea27611138327b4b8e9c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,163 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>panic_unwind.might_panic - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>fn might_panic(should_panic: bool) <span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\"><span class=\"annotation\">@0\u298a</span>should_panic<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @1[6]: _33 = const might_panic::promoted[3]\n-6:18-6:32: @1[7]: _9 = &amp;(*_33)\n-6:18-6:32: @1[8]: _8 = &amp;(*_9)\n-6:18-6:32: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:34: @1[15]: _15 = ()\n-6:9-6:34: @1[16]: FakeRead(ForMatchedPlace, _15)\n-6:9-6:34: @1[17]: _32 = const might_panic::promoted[2]\n-6:9-6:34: @1[18]: _13 = &amp;(*_32)\n-6:9-6:34: @1[19]: _12 = &amp;(*_13)\n-6:9-6:34: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:34: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-6:9-6:34: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n-6:9-6:34: @4[5]: _4 = const ()\n-7:9-7:26: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"panicking...\");</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @1[6]: _33 = const might_panic::promoted[3]\n-6:18-6:32: @1[7]: _9 = &amp;(*_33)\n-6:18-6:32: @1[8]: _8 = &amp;(*_9)\n-6:18-6:32: @1[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n-6:9-6:34: @1[15]: _15 = ()\n-6:9-6:34: @1[16]: FakeRead(ForMatchedPlace, _15)\n-6:9-6:34: @1[17]: _32 = const might_panic::promoted[2]\n-6:9-6:34: @1[18]: _13 = &amp;(*_32)\n-6:9-6:34: @1[19]: _12 = &amp;(*_13)\n-6:9-6:34: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:34: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-6:9-6:34: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n-6:9-6:34: @4[5]: _4 = const ()\n-7:9-7:26: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\">        panic!(\"panics\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n-9:18-9:31: @2[7]: _23 = &amp;(*_31)\n-9:18-9:31: @2[8]: _22 = &amp;(*_23)\n-9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-9:9-9:33: @2[15]: _29 = ()\n-9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n-9:9-9:33: @2[18]: _27 = &amp;(*_30)\n-9:9-9:33: @2[19]: _26 = &amp;(*_27)\n-9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-9:9-9:33: @6[5]: _18 = const ()\n-8:12-10:6: @6[7]: _0 = const ()\n-11:2-11:2: @6.Return: return\"><span class=\"annotation\">@2,5,6\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n-9:18-9:31: @2[7]: _23 = &amp;(*_31)\n-9:18-9:31: @2[8]: _22 = &amp;(*_23)\n-9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-9:9-9:33: @2[15]: _29 = ()\n-9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n-9:9-9:33: @2[18]: _27 = &amp;(*_30)\n-9:9-9:33: @2[19]: _26 = &amp;(*_27)\n-9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-9:9-9:33: @6[5]: _18 = const ()\n-8:12-10:6: @6[7]: _0 = const ()\n-11:2-11:2: @6.Return: return\">        println!(\"Don't Panic\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n-9:18-9:31: @2[7]: _23 = &amp;(*_31)\n-9:18-9:31: @2[8]: _22 = &amp;(*_23)\n-9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-9:9-9:33: @2[15]: _29 = ()\n-9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n-9:9-9:33: @2[18]: _27 = &amp;(*_30)\n-9:9-9:33: @2[19]: _26 = &amp;(*_27)\n-9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-9:9-9:33: @6[5]: _18 = const ()\n-8:12-10:6: @6[7]: _0 = const ()\n-11:2-11:2: @6.Return: return\">    }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n-9:18-9:31: @2[7]: _23 = &amp;(*_31)\n-9:18-9:31: @2[8]: _22 = &amp;(*_23)\n-9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n-9:9-9:33: @2[15]: _29 = ()\n-9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n-9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n-9:9-9:33: @2[18]: _27 = &amp;(*_30)\n-9:9-9:33: @2[19]: _26 = &amp;(*_27)\n-9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n-9:9-9:33: @6[5]: _18 = const ()\n-8:12-10:6: @6[7]: _0 = const ()\n-11:2-11:2: @6.Return: return\">}<span class=\"annotation\">\u2989@2,5,6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "3e307c4f460d5a8b5005caffe897b508061c9957", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 295, "changes": 295, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,295 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">    let version_3_2_1 = Version::new(3, 2, 1);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">    let version_3_3_0 = Version::new(3, 3, 0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">    println!(\"{:?} &lt; {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 &lt; version_3_3_0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:25-22:46: @0.Call: _1 = Version::new(const 3_usize, const 2_usize, const 1_usize) -&gt; [return: bb1, unwind: bb9]\n-22:9-22:22: @1[0]: FakeRead(ForLet, _1)\n-23:25-23:46: @1.Call: _2 = Version::new(const 3_usize, const 3_usize, const 0_usize) -&gt; [return: bb2, unwind: bb9]\n-23:9-23:22: @2[0]: FakeRead(ForLet, _2)\n-25:14-25:32: @2[7]: _33 = const main::promoted[0]\n-25:14-25:32: @2[8]: _8 = &amp;(*_33)\n-25:14-25:32: @2[9]: _7 = &amp;(*_8)\n-25:14-25:32: @2[10]: _6 = move _7 as &amp;[&amp;str] (Pointer(Unsize))\n-25:34-25:47: @2[18]: _15 = &amp;_1\n-25:49-25:62: @2[20]: _16 = &amp;_2\n-25:64-25:77: @2[24]: _19 = &amp;_1\n-25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n-25:64-25:93: @3[2]: _17 = &amp;_18\n-25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n-25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n-25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n-25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n-25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n-25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n-25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n-25:5-25:95: @5[4]: _31 = &amp;(*_23)\n-25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n-25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n-25:5-25:95: @6[9]: _12 = &amp;_13\n-25:5-25:95: @6[10]: _11 = &amp;(*_12)\n-25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n-25:5-25:95: @8[7]: _3 = const ()\n-21:11-26:2: @8[9]: _0 = const ()\n-26:2-26:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "820ccf74d1b9eaa320147e0a34bfd5978d5c8e37", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#0}-new.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,108 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%230%7D-new.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#0}-new - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>pub fn new(major: usize, minor: usize, patch: usize) -&gt; Self {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">        Self {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">            major,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">            minor,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">            patch,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">        }</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:13-14:18: @0[1]: _4 = _1\n-15:13-15:18: @0[3]: _5 = _2\n-16:13-16:18: @0[5]: _6 = _3\n-13:9-17:10: @0[6]: _0 = Version { major: move _4, minor: move _5, patch: move _6 }\n-18:6-18:6: @0.Return: return\">    }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "ee4c10afd8b89cca4566c4a1bf2e579d21ea9ef8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#1}-cmp.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%231%7D-cmp.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#1}-cmp - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                                  <span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">Ord</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:54-4:54: @15.Return: return\"><span class=\"annotation\">@15\u298a</span>\u2038<span class=\"annotation\">\u2989@15</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "2f5092bd51f0adb33c0774bbadb8f920663d9b56", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-partial_cmp.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%232%7D-partial_cmp.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#2}-partial_cmp - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                      <span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialOrd</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:49-4:49: @18.Return: return\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "ebb8b1c15ce089804f33a5b79320a2cf3cc375b6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#4}-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,75 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%234%7D-assert_receiver_is_total_eq.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#4}-assert_receiver_is_total_eq - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:35-4:37: @0[0]: _0 = const ()\n-4:37-4:37: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">Eq</span></span></div>\n-</body>\n-</html>"}, {"sha": "9858b270d7ef96902bfefb59ffffda98a255668b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#6}-eq.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%236%7D-eq.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#6}-eq - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialEq</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "bf94e5cbf739b282abcd8163ddae3fd52aeb9ab4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#6}-ne.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,74 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%236%7D-ne.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#6}-ne - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                       <span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0\u298a</span>\u2038<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">PartialEq</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:33-4:33: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "930492f24841fd4f714681e98c1b41e5d391cd84", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#7}-fmt.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,110 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#7}-fmt - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">                <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:17-4:22: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n-4:17-4:22: @0[2]: _3 = &amp;((*_1).0: usize)\n-4:17-4:22: @0[4]: _4 = &amp;((*_1).1: usize)\n-4:17-4:22: @0[6]: _5 = &amp;((*_1).2: usize)\n-4:17-4:22: @0[10]: _8 = &amp;mut (*_2)\n-4:17-4:22: @0[13]: _10 = const &quot;Version&quot;\n-4:17-4:22: @0[14]: _9 = &amp;(*_10)\n-4:17-4:22: @0.Call: _7 = std::fmt::Formatter::debug_struct(move _8, move _9) -&gt; [return: bb1, unwind: bb6]\n-4:17-4:22: @1[2]: _6 = &amp;mut _7\n-4:17-4:22: @1[3]: FakeRead(ForLet, _6)\n-4:17-4:22: @1[7]: _12 = &amp;mut (*_6)\n-4:17-4:22: @1[10]: _14 = const &quot;major&quot;\n-4:17-4:22: @1[11]: _13 = &amp;(*_14)\n-4:17-4:22: @1[16]: _18 = &amp;(*_3)\n-4:17-4:22: @1[17]: _17 = &amp;_18\n-4:17-4:22: @1[18]: _16 = &amp;(*_17)\n-4:17-4:22: @1[19]: _15 = move _16 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @1.Call: _11 = std::fmt::DebugStruct::field(move _12, move _13, move _15) -&gt; [return: bb2, unwind: bb6]\n-4:17-4:22: @2[9]: _20 = &amp;mut (*_6)\n-4:17-4:22: @2[12]: _22 = const &quot;minor&quot;\n-4:17-4:22: @2[13]: _21 = &amp;(*_22)\n-4:17-4:22: @2[18]: _26 = &amp;(*_4)\n-4:17-4:22: @2[19]: _25 = &amp;_26\n-4:17-4:22: @2[20]: _24 = &amp;(*_25)\n-4:17-4:22: @2[21]: _23 = move _24 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @2.Call: _19 = std::fmt::DebugStruct::field(move _20, move _21, move _23) -&gt; [return: bb3, unwind: bb6]\n-4:17-4:22: @3[9]: _28 = &amp;mut (*_6)\n-4:17-4:22: @3[12]: _30 = const &quot;patch&quot;\n-4:17-4:22: @3[13]: _29 = &amp;(*_30)\n-4:17-4:22: @3[18]: _34 = &amp;(*_5)\n-4:17-4:22: @3[19]: _33 = &amp;_34\n-4:17-4:22: @3[20]: _32 = &amp;(*_33)\n-4:17-4:22: @3[21]: _31 = move _32 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @3.Call: _27 = std::fmt::DebugStruct::field(move _28, move _29, move _31) -&gt; [return: bb4, unwind: bb6]\n-4:17-4:22: @4[8]: _35 = &amp;mut (*_6)\n-4:17-4:22: @4.Call: _0 = std::fmt::DebugStruct::finish(move _35) -&gt; [return: bb5, unwind: bb6]\n-4:22-4:22: @5.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>Debug<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "f1c983933432c1e08847eeea86bb3b15ff820c6c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#8}-clone.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,88 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>partial_eq.{impl#8}-clone - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\">         <span><span class=\"code even\" style=\"--layer: 1\" title=\"4:10-4:15: @0[0]: FakeRead(ForMatchedPlace, (*_1))\n-4:10-4:15: @0[2]: _2 = &amp;((*_1).0: usize)\n-4:10-4:15: @0[4]: _3 = &amp;((*_1).1: usize)\n-4:10-4:15: @0[6]: _4 = &amp;((*_1).2: usize)\n-4:10-4:15: @0[10]: _7 = &amp;(*_2)\n-4:10-4:15: @0[11]: _6 = &amp;(*_7)\n-4:10-4:15: @0.Call: _5 = &lt;usize as std::clone::Clone&gt;::clone(move _6) -&gt; [return: bb1, unwind: bb4]\n-4:10-4:15: @1[4]: _10 = &amp;(*_3)\n-4:10-4:15: @1[5]: _9 = &amp;(*_10)\n-4:10-4:15: @1.Call: _8 = &lt;usize as std::clone::Clone&gt;::clone(move _9) -&gt; [return: bb2, unwind: bb4]\n-4:10-4:15: @2[4]: _13 = &amp;(*_4)\n-4:10-4:15: @2[5]: _12 = &amp;(*_13)\n-4:10-4:15: @2.Call: _11 = &lt;usize as std::clone::Clone&gt;::clone(move _12) -&gt; [return: bb3, unwind: bb4]\n-4:10-4:15: @3[1]: _0 = Version { major: move _5, minor: move _8, patch: move _11 }\n-4:15-4:15: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>Clone<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "6b911eea341216b0e47abe170cafd6a27bf953ee", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 193, "changes": 193, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,193 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>simple_loop.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 0_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-12:9-12:16: @3[6]: _7 = _1\">        is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n-13:5-18:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n-13:5-18:6: @4[1]: _6 = const ()\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n-13:5-18:6: @4[1]: _6 = const ()\">        =</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n-13:5-18:6: @4[1]: _6 = const ()\">            10</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n-13:5-18:6: @4[1]: _6 = const ()\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-16:15: @4[0]: _5 = const 10_i32\n-13:5-18:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:6-18:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    loop</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @8[3]: _11 = _5\n-23:13-25:14: @8[4]: _10 = Eq(move _11, const 0_i32)\"><span class=\"annotation\">@7,8\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @8[3]: _11 = _5\n-23:13-25:14: @8[4]: _10 = Eq(move _11, const 0_i32)\">                ==</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:13-23:22: @8[3]: _11 = _5\n-23:13-25:14: @8[4]: _10 = Eq(move _11, const 0_i32)\">            0<span class=\"annotation\">\u2989@7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @9[0]: _0 = const ()\"><span class=\"annotation\">@9\u298a</span>break<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n-30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @11[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@10,11\u298a</span></span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n-30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @11[0]: _5 = move (_13.0: i32)\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n-30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @11[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:10-29:10: @10[0]: _9 = const ()\n-30:9-32:10: @10[3]: _13 = CheckedSub(_5, const 1_i32)\n-30:9-32:10: @11[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:2-35:2: @9.Return: return\"><span class=\"annotation\">@9\u298a</span>\u2038<span class=\"annotation\">\u2989@9</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a56692d9c2a485f2373dd5a370a63759784a0e84", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 222, "changes": 222, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,222 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>simple_match.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    let mut countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n-7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n-7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n-9:25-9:26: @3[2]: _5 = const 1_i32\n-9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n-10:8-10:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @4[0]: _5 = const 0_i32\n-10:16-12:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @4[0]: _5 = const 0_i32\n-10:16-12:6: @4[1]: _6 = const ()\">        countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:22: @4[0]: _5 = const 0_i32\n-10:16-12:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:6-12:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:9-15:10: @14[1]: _18 = ((_14 as Some).0: i32)\n-15:9-15:10: @14[3]: _19 = _18\n-15:9-15:10: @14[4]: _12 = move _19\n-15:9-15:10: @14[5]: _13 = const ()\"><span class=\"annotation\">@12,14,16\u298a</span>_<span class=\"annotation\">\u2989@12,14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:13: @9[5]: _16 = &amp;mut _10\n-17:9-17:13: @9[6]: _15 = &amp;mut (*_16)\n-17:9-17:13: @9.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as std::iter::Iterator&gt;::next(move _15) -&gt; [return: bb10, unwind: bb21]\n-17:9-17:13: @10[1]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@8,9,10\u298a</span>0..2<span class=\"annotation\">\u2989@8,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        match</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:13-22:22: @14[13]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@12,14,16\u298a</span>countdown<span class=\"annotation\">\u2989@12,14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:13-24:14: @17[3]: _23 = _5\"><span class=\"annotation\">@17\u298a</span>x<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @16[4]: _26 = (*_24)\n-26:17-28:18: @16[5]: _25 = Lt(move _26, const 1_i32)\"><span class=\"annotation\">@12,14,16\u298a</span>x</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @16[4]: _26 = (*_24)\n-26:17-28:18: @16[5]: _25 = Lt(move _26, const 1_i32)\">                    &lt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:17-26:18: @16[4]: _26 = (*_24)\n-26:17-28:18: @16[5]: _25 = Lt(move _26, const 1_i32)\">                1<span class=\"annotation\">\u2989@12,14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\"><span class=\"annotation\">@17\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\">                z = countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\">                let y = countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\">                countdown = 10</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\">                ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:21-31:30: @17[5]: _27 = _5\n-31:17-31:30: @17[6]: _22 = move _27\n-33:25-33:34: @17[9]: _28 = _5\n-33:21-33:22: @17[10]: FakeRead(ForLet, _28)\n-35:17-35:31: @17[11]: _5 = const 10_i32\n-30:13-37:14: @17[12]: _21 = const ()\">            }<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            _</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            =&gt;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:13-40:15: @15[0]: _21 = const ()\"><span class=\"annotation\">@15\u298a</span>{}<span class=\"annotation\">\u2989@15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"43:2-43:2: @11.Return: return\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "8cbd265c6a01c88e17cb0c131ab2243d15d735b2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.tight_inf_loop/tight_inf_loop.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.tight_inf_loop%2Ftight_inf_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.tight_inf_loop%2Ftight_inf_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.tight_inf_loop%2Ftight_inf_loop.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,81 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.tight_inf_loop/tight_inf_loop.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>tight_inf_loop.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\"><span class=\"annotation\">@0\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:8-2:13: @0[1]: _1 = const false\">    if false<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:9-3:16: @3.FalseUnwind: falseUnwind -&gt; [real: bb4, cleanup: bb5]\n-3:14-3:16: @4[0]: _3 = const ()\"><span class=\"annotation\">@3,4\u298a</span>loop {}<span class=\"annotation\">\u2989@3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:6-4:6: @2[0]: _0 = const ()\n-5:2-5:2: @2.Return: return\"><span class=\"annotation\">@2\u298a</span></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"4:6-4:6: @2[0]: _0 = const ()\n-5:2-5:2: @2.Return: return\">}<span class=\"annotation\">\u2989@2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a8a3139334c962a34423e86c0f9923c9e9370843", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>try_error_result.call - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\"><span class=\"annotation\">@0\u298a</span>fn call(return_error: bool) -&gt; Result&lt;(),()&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\">    if return_error<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:13-6:15: @1[1]: _3 = ()\n-6:9-6:16: @1[2]: _0 = std::result::Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1\u298a</span>Err(())<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n-8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "5b0c5cb072f043153cc3bb0624b9edbfe23b588f", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 129, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,129 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>try_error_result.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 11\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n-13:9-14:18: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0,1\u298a</span>fn main() -&gt; Result&lt;(),()&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n-13:9-14:18: @0[2]: FakeRead(ForLet, _1)\">    let mut</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"14:21-14:23: @0[1]: _1 = const 10_i32\n-13:9-14:18: @0[2]: FakeRead(ForLet, _1)\">        countdown = 10<span class=\"annotation\">\u2989@0,1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    for</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @8[1]: _13 = ((_9 as Some).0: i32)\n-17:9-17:10: @8[3]: _14 = _13\n-17:9-17:10: @8[4]: _7 = move _14\n-17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>_<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n-19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n-19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as std::iter::Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb39]\n-19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n-21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\"><span class=\"annotation\">@6,8,9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n-21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">            -= 1</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n-21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n-21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">        if</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n-21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n-25:13-25:22: @9[3]: _19 = _1\n-25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\">            countdown &lt; 5<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @10.Call: _22 = call(const true) -&gt; [return: bb12, unwind: bb39]\"><span class=\"annotation\">@10,12,13\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @17[1]: _24 = ((_21 as Err).0: ())\n-27:41-27:42: @17[4]: _27 = _24\n-27:41-27:42: @17.Call: _26 = &lt;() as std::convert::From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb18, unwind: bb39]\"><span class=\"annotation\">@15,17,18,19\u298a</span>?<span class=\"annotation\">\u2989@15,17,18,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:13-28:42: @14.Call: _31 = call(const false) -&gt; [return: bb20, unwind: bb39]\"><span class=\"annotation\">@14,20,21\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@14,20,21</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:42-28:43: @25[1]: _33 = ((_30 as Err).0: ())\n-28:42-28:43: @25[4]: _36 = _33\n-28:42-28:43: @25.Call: _35 = &lt;() as std::convert::From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb26, unwind: bb39]\"><span class=\"annotation\">@23,25,26,27\u298a</span>?<span class=\"annotation\">\u2989@23,25,26,27</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:42: @11.Call: _40 = call(const false) -&gt; [return: bb28, unwind: bb39]\"><span class=\"annotation\">@11,28,29\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@11,28,29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:42-32:43: @33[1]: _42 = ((_39 as Err).0: ())\n-32:42-32:43: @33[4]: _45 = _42\n-32:42-32:43: @33.Call: _44 = &lt;() as std::convert::From&lt;()&gt;&gt;::from(move _45) -&gt; [return: bb34, unwind: bb39]\"><span class=\"annotation\">@31,33,34,35\u298a</span>?<span class=\"annotation\">\u2989@31,33,34,35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:8-35:10: @5[9]: _47 = ()\n-35:5-35:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _47)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @38.Return: return\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "ef431a356c250382794e919535fa5f295e336b44", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.foo.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.foo.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.foo.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.foo.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,87 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.foo.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>unused.foo - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:17-2:18: @0[1]: _2 = const 0_i32\n-2:9-2:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>fn foo&lt;T&gt;(x: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:17-2:18: @0[1]: _2 = const 0_i32\n-2:9-2:14: @0[2]: FakeRead(ForLet, _2)\">    let mut i = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:11-3:12: @2[2]: _5 = _2\n-3:11-3:17: @2[3]: _4 = Lt(move _5, const 10_i32)\n-3:11-3:17: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>i &lt; 10<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"4:9-4:10: @5[3]: _8 = _2\n-4:9-4:15: @5[4]: _7 = Ne(move _8, const 0_i32)\"><span class=\"annotation\">@3,5\u298a</span>i != 0<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:19-4:20: @7[2]: _10 = _2\n-4:19-4:25: @7[3]: _9 = Ne(move _10, const 0_i32)\"><span class=\"annotation\">@7\u298a</span>i != 0<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:9-5:15: @8[3]: _11 = CheckedAdd(_2, const 1_i32)\n-5:9-5:15: @9[0]: _2 = move (_11.0: i32)\"><span class=\"annotation\">@8,9\u298a</span>i += 1<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:2-7:2: @10.Return: return\"><span class=\"annotation\">@4,10\u298a</span>\u2038<span class=\"annotation\">\u2989@4,10</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "864f6c4feb152e1cc106dbbd3b1643c42b2c1a55", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,98 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>unused.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 34\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:5-36:18: @0.Call: _1 = foo::&lt;u32&gt;(const 0_u32) -&gt; [return: bb1, unwind: bb3]\n-37:5-37:20: @1.Call: _2 = foo::&lt;f32&gt;(const 0f32) -&gt; [return: bb2, unwind: bb3]\n-38:8-38:10: @2[2]: _3 = ()\n-38:5-38:11: @2[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _3)\n-39:2-39:2: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>fn main() -&gt; Result&lt;(), u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:5-36:18: @0.Call: _1 = foo::&lt;u32&gt;(const 0_u32) -&gt; [return: bb1, unwind: bb3]\n-37:5-37:20: @1.Call: _2 = foo::&lt;f32&gt;(const 0f32) -&gt; [return: bb2, unwind: bb3]\n-38:8-38:10: @2[2]: _3 = ()\n-38:5-38:11: @2[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _3)\n-39:2-39:2: @2.Return: return\">    foo::&lt;u32&gt;(0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:5-36:18: @0.Call: _1 = foo::&lt;u32&gt;(const 0_u32) -&gt; [return: bb1, unwind: bb3]\n-37:5-37:20: @1.Call: _2 = foo::&lt;f32&gt;(const 0f32) -&gt; [return: bb2, unwind: bb3]\n-38:8-38:10: @2[2]: _3 = ()\n-38:5-38:11: @2[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _3)\n-39:2-39:2: @2.Return: return\">    foo::&lt;f32&gt;(0.0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:5-36:18: @0.Call: _1 = foo::&lt;u32&gt;(const 0_u32) -&gt; [return: bb1, unwind: bb3]\n-37:5-37:20: @1.Call: _2 = foo::&lt;f32&gt;(const 0f32) -&gt; [return: bb2, unwind: bb3]\n-38:8-38:10: @2[2]: _3 = ()\n-38:5-38:11: @2[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _3)\n-39:2-39:2: @2.Return: return\">    Ok(())</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"36:5-36:18: @0.Call: _1 = foo::&lt;u32&gt;(const 0_u32) -&gt; [return: bb1, unwind: bb3]\n-37:5-37:20: @1.Call: _2 = foo::&lt;f32&gt;(const 0f32) -&gt; [return: bb2, unwind: bb3]\n-38:8-38:10: @2[2]: _3 = ()\n-38:5-38:11: @2[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _3)\n-39:2-39:2: @2.Return: return\">}<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "52beea080232e6f694151fb97c28e1a3faaf9136", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_func.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,86 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_func.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>unused.unused_func - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:8-18:9: @0[2]: _3 = _1\n-18:8-18:14: @0[3]: _2 = Ne(move _3, const 0_u32)\"><span class=\"annotation\">@0\u298a</span>fn unused_func(mut a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:8-18:9: @0[2]: _3 = _1\n-18:8-18:14: @0[3]: _2 = Ne(move _3, const 0_u32)\">    if a != 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:9-19:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-19:9-19:15: @3[0]: _1 = move (_4.0: u32)\n-18:15-20:6: @3[1]: _0 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:9-19:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-19:9-19:15: @3[0]: _1 = move (_4.0: u32)\n-18:15-20:6: @3[1]: _0 = const ()\">        a += 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:9-19:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-19:9-19:15: @3[0]: _1 = move (_4.0: u32)\n-18:15-20:6: @3[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:6-20:6: @2[0]: _0 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:2-21:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "816ef73ea6b06e40755f8e4597f1cc2db2c65679", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_func2.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func2.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func2.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func2.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,86 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_func2.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>unused.unused_func2 - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 22\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:9: @0[2]: _3 = _1\n-24:8-24:14: @0[3]: _2 = Ne(move _3, const 0_u32)\"><span class=\"annotation\">@0\u298a</span>fn unused_func2(mut a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:8-24:9: @0[2]: _3 = _1\n-24:8-24:14: @0[3]: _2 = Ne(move _3, const 0_u32)\">    if a != 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-25:9-25:15: @3[0]: _1 = move (_4.0: u32)\n-24:15-26:6: @3[1]: _0 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-25:9-25:15: @3[0]: _1 = move (_4.0: u32)\n-24:15-26:6: @3[1]: _0 = const ()\">        a += 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-25:9-25:15: @3[0]: _1 = move (_4.0: u32)\n-24:15-26:6: @3[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:6-26:6: @2[0]: _0 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "739f9f42db359e8b9dc35a44629c1267532f7459", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_func3.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func3.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func3.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_func3.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,86 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_func3.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>unused.unused_func3 - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 28\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:8-30:9: @0[2]: _3 = _1\n-30:8-30:14: @0[3]: _2 = Ne(move _3, const 0_u32)\"><span class=\"annotation\">@0\u298a</span>fn unused_func3(mut a: u32) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:8-30:9: @0[2]: _3 = _1\n-30:8-30:14: @0[3]: _2 = Ne(move _3, const 0_u32)\">    if a != 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:9-31:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-31:9-31:15: @3[0]: _1 = move (_4.0: u32)\n-30:15-32:6: @3[1]: _0 = const ()\"><span class=\"annotation\">@1,3\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:9-31:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-31:9-31:15: @3[0]: _1 = move (_4.0: u32)\n-30:15-32:6: @3[1]: _0 = const ()\">        a += 1;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:9-31:15: @1[0]: _4 = CheckedAdd(_1, const 1_u32)\n-31:9-31:15: @3[0]: _1 = move (_4.0: u32)\n-30:15-32:6: @3[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@1,3</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:6-32:6: @2[0]: _0 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"33:2-33:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "be4f5efc5dbf1d4f690b38cbd208f056be7f965c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_template_func.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_template_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_template_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.unused%2Funused.unused_template_func.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,87 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.unused/unused.unused_template_func.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>unused.unused_template_func - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:18: @0[1]: _2 = const 0_i32\n-10:9-10:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>fn unused_template_func&lt;T&gt;(x: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:18: @0[1]: _2 = const 0_i32\n-10:9-10:14: @0[2]: FakeRead(ForLet, _2)\">    let mut i = 0<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:11-11:12: @2[2]: _5 = _2\n-11:11-11:17: @2[3]: _4 = Lt(move _5, const 10_i32)\n-11:11-11:17: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>i &lt; 10<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:9-12:10: @5[3]: _8 = _2\n-12:9-12:15: @5[4]: _7 = Ne(move _8, const 0_i32)\"><span class=\"annotation\">@3,5\u298a</span>i != 0<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:19-12:20: @7[2]: _10 = _2\n-12:19-12:25: @7[3]: _9 = Ne(move _10, const 0_i32)\"><span class=\"annotation\">@7\u298a</span>i != 0<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:9-13:15: @8[3]: _11 = CheckedAdd(_2, const 1_i32)\n-13:9-13:15: @9[0]: _2 = move (_11.0: i32)\"><span class=\"annotation\">@8,9\u298a</span>i += 1<span class=\"annotation\">\u2989@8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:2-15:2: @10.Return: return\"><span class=\"annotation\">@4,10\u298a</span>\u2038<span class=\"annotation\">\u2989@4,10</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "65e21ecef13bdab7f1278e0ef20b363cbf656ead", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,115 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.unused_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 36\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n-39:25-39:26: @3[2]: _5 = const 2_i32\n-39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n-40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n-39:25-39:26: @3[2]: _5 = const 2_i32\n-39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n-40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n-39:25-39:26: @3[2]: _5 = const 2_i32\n-39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n-40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n-39:25-39:26: @3[2]: _5 = const 2_i32\n-39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n-40:9-40:16: @3[6]: _7 = _1\n-40:8-40:16: @3[7]: _6 = Not(move _7)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @4[0]: _5 = const 20_i32\n-40:17-42:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @4[0]: _5 = const 20_i32\n-40:17-42:6: @4[1]: _0 = const ()\">        countdown = 20;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"41:9-41:23: @4[0]: _5 = const 20_i32\n-40:17-42:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"42:6-42:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"43:2-43:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "02154a2268b75d4dcb44d98cd35ff6ff4caf850c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.unused_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:14-34:49: @0[6]: _19 = const unused_generic_function::&lt;T&gt;::promoted[0]\n-34:14-34:49: @0[7]: _7 = &amp;(*_19)\n-34:14-34:49: @0[8]: _6 = &amp;(*_7)\n-34:14-34:49: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-34:51-34:54: @0[17]: _14 = &amp;_1\n-34:5-34:56: @0[18]: _13 = (move _14,)\n-34:5-34:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n-34:5-34:56: @0[22]: _15 = (_13.0: &amp;T)\n-34:5-34:56: @0[25]: _17 = &amp;(*_15)\n-34:5-34:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-34:5-34:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-34:5-34:56: @1[2]: _12 = [move _16]\n-34:5-34:56: @1[5]: _11 = &amp;_12\n-34:5-34:56: @1[6]: _10 = &amp;(*_11)\n-34:5-34:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-34:5-34:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-34:5-34:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-34:5-34:56: @3[6]: _2 = const ()\n-33:50-35:2: @3[8]: _0 = const ()\n-35:2-35:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn unused_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:14-34:49: @0[6]: _19 = const unused_generic_function::&lt;T&gt;::promoted[0]\n-34:14-34:49: @0[7]: _7 = &amp;(*_19)\n-34:14-34:49: @0[8]: _6 = &amp;(*_7)\n-34:14-34:49: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-34:51-34:54: @0[17]: _14 = &amp;_1\n-34:5-34:56: @0[18]: _13 = (move _14,)\n-34:5-34:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n-34:5-34:56: @0[22]: _15 = (_13.0: &amp;T)\n-34:5-34:56: @0[25]: _17 = &amp;(*_15)\n-34:5-34:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-34:5-34:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-34:5-34:56: @1[2]: _12 = [move _16]\n-34:5-34:56: @1[5]: _11 = &amp;_12\n-34:5-34:56: @1[6]: _10 = &amp;(*_11)\n-34:5-34:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-34:5-34:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-34:5-34:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-34:5-34:56: @3[6]: _2 = const ()\n-33:50-35:2: @3[8]: _0 = const ()\n-35:2-35:2: @4.Return: return\">    println!(\"unused_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:14-34:49: @0[6]: _19 = const unused_generic_function::&lt;T&gt;::promoted[0]\n-34:14-34:49: @0[7]: _7 = &amp;(*_19)\n-34:14-34:49: @0[8]: _6 = &amp;(*_7)\n-34:14-34:49: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-34:51-34:54: @0[17]: _14 = &amp;_1\n-34:5-34:56: @0[18]: _13 = (move _14,)\n-34:5-34:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n-34:5-34:56: @0[22]: _15 = (_13.0: &amp;T)\n-34:5-34:56: @0[25]: _17 = &amp;(*_15)\n-34:5-34:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-34:5-34:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-34:5-34:56: @1[2]: _12 = [move _16]\n-34:5-34:56: @1[5]: _11 = &amp;_12\n-34:5-34:56: @1[6]: _10 = &amp;(*_11)\n-34:5-34:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-34:5-34:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-34:5-34:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-34:5-34:56: @3[6]: _2 = const ()\n-33:50-35:2: @3[8]: _0 = const ()\n-35:2-35:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "78228594e3753d0a28823a2e29bd4c4259037873", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_private_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,115 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_private_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.unused_private_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 44\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n-47:25-47:26: @3[2]: _5 = const 2_i32\n-47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n-48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_private_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n-47:25-47:26: @3[2]: _5 = const 2_i32\n-47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n-48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n-47:25-47:26: @3[2]: _5 = const 2_i32\n-47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n-48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n-47:25-47:26: @3[2]: _5 = const 2_i32\n-47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n-48:9-48:16: @3[6]: _7 = _1\n-48:8-48:16: @3[7]: _6 = Not(move _7)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @4[0]: _5 = const 20_i32\n-48:17-50:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @4[0]: _5 = const 20_i32\n-48:17-50:6: @4[1]: _0 = const ()\">        countdown = 20;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"49:9-49:23: @4[0]: _5 = const 20_i32\n-48:17-50:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"50:6-50:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"51:2-51:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "8f618d2e24954d5760c1bc2111ca31ae8e6bcbff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 190, "changes": 190, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,190 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.use_this_lib_crate - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 52\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>fn use_this_lib_crate() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">    used_from_bin_crate_and_lib_crate_generic_function(\"used from library used_crate.rs\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">    used_with_same_type_from_bin_crate_and_lib_crate_generic_function(</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">        \"used from library used_crate.rs\",</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">    );</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">    let some_vec = vec![5, 6, 7, 8];</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">    used_only_from_this_lib_crate_generic_function(some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">    used_only_from_this_lib_crate_generic_function(\"used ONLY from library used_crate.rs\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"54:5-54:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-55:5-57:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-58:20-58:36: @2[5]: _6 = Box([i32; 4])\n-58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-58:20-58:36: @2[7]: _5 = move _6\n-58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n-59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-53:25-61:2: @7[1]: _0 = const ()\n-61:2-61:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "61a709c4729f28399842398689e101a098823b7d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.used_from_bin_crate_and_lib_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 24\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"26:14-26:76: @0[6]: _19 = const used_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-26:14-26:76: @0[7]: _7 = &amp;(*_19)\n-26:14-26:76: @0[8]: _6 = &amp;(*_7)\n-26:14-26:76: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-26:78-26:81: @0[17]: _14 = &amp;_1\n-26:5-26:83: @0[18]: _13 = (move _14,)\n-26:5-26:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n-26:5-26:83: @0[22]: _15 = (_13.0: &amp;T)\n-26:5-26:83: @0[25]: _17 = &amp;(*_15)\n-26:5-26:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-26:5-26:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-26:5-26:83: @1[2]: _12 = [move _16]\n-26:5-26:83: @1[5]: _11 = &amp;_12\n-26:5-26:83: @1[6]: _10 = &amp;(*_11)\n-26:5-26:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-26:5-26:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-26:5-26:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-26:5-26:83: @3[6]: _2 = const ()\n-25:77-27:2: @3[8]: _0 = const ()\n-27:2-27:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_from_bin_crate_and_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:14-26:76: @0[6]: _19 = const used_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-26:14-26:76: @0[7]: _7 = &amp;(*_19)\n-26:14-26:76: @0[8]: _6 = &amp;(*_7)\n-26:14-26:76: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-26:78-26:81: @0[17]: _14 = &amp;_1\n-26:5-26:83: @0[18]: _13 = (move _14,)\n-26:5-26:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n-26:5-26:83: @0[22]: _15 = (_13.0: &amp;T)\n-26:5-26:83: @0[25]: _17 = &amp;(*_15)\n-26:5-26:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-26:5-26:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-26:5-26:83: @1[2]: _12 = [move _16]\n-26:5-26:83: @1[5]: _11 = &amp;_12\n-26:5-26:83: @1[6]: _10 = &amp;(*_11)\n-26:5-26:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-26:5-26:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-26:5-26:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-26:5-26:83: @3[6]: _2 = const ()\n-25:77-27:2: @3[8]: _0 = const ()\n-27:2-27:2: @4.Return: return\">    println!(\"used_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:14-26:76: @0[6]: _19 = const used_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-26:14-26:76: @0[7]: _7 = &amp;(*_19)\n-26:14-26:76: @0[8]: _6 = &amp;(*_7)\n-26:14-26:76: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-26:78-26:81: @0[17]: _14 = &amp;_1\n-26:5-26:83: @0[18]: _13 = (move _14,)\n-26:5-26:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n-26:5-26:83: @0[22]: _15 = (_13.0: &amp;T)\n-26:5-26:83: @0[25]: _17 = &amp;(*_15)\n-26:5-26:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-26:5-26:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-26:5-26:83: @1[2]: _12 = [move _16]\n-26:5-26:83: @1[5]: _11 = &amp;_12\n-26:5-26:83: @1[6]: _10 = &amp;(*_11)\n-26:5-26:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-26:5-26:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-26:5-26:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-26:5-26:83: @3[6]: _2 = const ()\n-25:77-27:2: @3[8]: _0 = const ()\n-27:2-27:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "974a24b2c6d44b7973428d7d642a03cf4b259ac2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,110 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.used_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn used_function() <span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n-10:25-10:26: @3[2]: _5 = const 0_i32\n-10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n-11:8-11:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n-10:25-10:26: @3[2]: _5 = const 0_i32\n-10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n-11:8-11:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n-10:25-10:26: @3[2]: _5 = const 0_i32\n-10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n-11:8-11:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @4[0]: _5 = const 10_i32\n-11:16-13:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @4[0]: _5 = const 10_i32\n-11:16-13:6: @4[1]: _6 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:9-12:23: @4[0]: _5 = const 10_i32\n-11:16-13:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:6-13:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:5-14:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n-15:2-15:2: @7.Return: return\"><span class=\"annotation\">@6,7\u298a</span>use_this_lib_crate();</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:5-14:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n-15:2-15:2: @7.Return: return\">}<span class=\"annotation\">\u2989@6,7</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "68035339fe4a8f0f8848600aadc7925fbd72423c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.used_only_from_bin_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:14-18:67: @0[6]: _19 = const used_only_from_bin_crate_generic_function::&lt;T&gt;::promoted[0]\n-18:14-18:67: @0[7]: _7 = &amp;(*_19)\n-18:14-18:67: @0[8]: _6 = &amp;(*_7)\n-18:14-18:67: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:69-18:72: @0[17]: _14 = &amp;_1\n-18:5-18:74: @0[18]: _13 = (move _14,)\n-18:5-18:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:5-18:74: @0[22]: _15 = (_13.0: &amp;T)\n-18:5-18:74: @0[25]: _17 = &amp;(*_15)\n-18:5-18:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:5-18:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-18:5-18:74: @1[2]: _12 = [move _16]\n-18:5-18:74: @1[5]: _11 = &amp;_12\n-18:5-18:74: @1[6]: _10 = &amp;(*_11)\n-18:5-18:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:5-18:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-18:5-18:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-18:5-18:74: @3[6]: _2 = const ()\n-17:68-19:2: @3[8]: _0 = const ()\n-19:2-19:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_only_from_bin_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:14-18:67: @0[6]: _19 = const used_only_from_bin_crate_generic_function::&lt;T&gt;::promoted[0]\n-18:14-18:67: @0[7]: _7 = &amp;(*_19)\n-18:14-18:67: @0[8]: _6 = &amp;(*_7)\n-18:14-18:67: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:69-18:72: @0[17]: _14 = &amp;_1\n-18:5-18:74: @0[18]: _13 = (move _14,)\n-18:5-18:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:5-18:74: @0[22]: _15 = (_13.0: &amp;T)\n-18:5-18:74: @0[25]: _17 = &amp;(*_15)\n-18:5-18:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:5-18:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-18:5-18:74: @1[2]: _12 = [move _16]\n-18:5-18:74: @1[5]: _11 = &amp;_12\n-18:5-18:74: @1[6]: _10 = &amp;(*_11)\n-18:5-18:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:5-18:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-18:5-18:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-18:5-18:74: @3[6]: _2 = const ()\n-17:68-19:2: @3[8]: _0 = const ()\n-19:2-19:2: @4.Return: return\">    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:14-18:67: @0[6]: _19 = const used_only_from_bin_crate_generic_function::&lt;T&gt;::promoted[0]\n-18:14-18:67: @0[7]: _7 = &amp;(*_19)\n-18:14-18:67: @0[8]: _6 = &amp;(*_7)\n-18:14-18:67: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-18:69-18:72: @0[17]: _14 = &amp;_1\n-18:5-18:74: @0[18]: _13 = (move _14,)\n-18:5-18:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n-18:5-18:74: @0[22]: _15 = (_13.0: &amp;T)\n-18:5-18:74: @0[25]: _17 = &amp;(*_15)\n-18:5-18:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:5-18:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-18:5-18:74: @1[2]: _12 = [move _16]\n-18:5-18:74: @1[5]: _11 = &amp;_12\n-18:5-18:74: @1[6]: _10 = &amp;(*_11)\n-18:5-18:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:5-18:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-18:5-18:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-18:5-18:74: @3[6]: _2 = const ()\n-17:68-19:2: @3[8]: _0 = const ()\n-19:2-19:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "63944eb9ab38ed14b5fe16bdbb4ee9effab1c0f1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.used_only_from_this_lib_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 20\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:14-22:72: @0[6]: _19 = const used_only_from_this_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-22:14-22:72: @0[7]: _7 = &amp;(*_19)\n-22:14-22:72: @0[8]: _6 = &amp;(*_7)\n-22:14-22:72: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-22:74-22:77: @0[17]: _14 = &amp;_1\n-22:5-22:79: @0[18]: _13 = (move _14,)\n-22:5-22:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n-22:5-22:79: @0[22]: _15 = (_13.0: &amp;T)\n-22:5-22:79: @0[25]: _17 = &amp;(*_15)\n-22:5-22:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-22:5-22:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-22:5-22:79: @1[2]: _12 = [move _16]\n-22:5-22:79: @1[5]: _11 = &amp;_12\n-22:5-22:79: @1[6]: _10 = &amp;(*_11)\n-22:5-22:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-22:5-22:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-22:5-22:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-22:5-22:79: @3[6]: _2 = const ()\n-21:73-23:2: @3[8]: _0 = const ()\n-23:2-23:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_only_from_this_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:14-22:72: @0[6]: _19 = const used_only_from_this_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-22:14-22:72: @0[7]: _7 = &amp;(*_19)\n-22:14-22:72: @0[8]: _6 = &amp;(*_7)\n-22:14-22:72: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-22:74-22:77: @0[17]: _14 = &amp;_1\n-22:5-22:79: @0[18]: _13 = (move _14,)\n-22:5-22:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n-22:5-22:79: @0[22]: _15 = (_13.0: &amp;T)\n-22:5-22:79: @0[25]: _17 = &amp;(*_15)\n-22:5-22:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-22:5-22:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-22:5-22:79: @1[2]: _12 = [move _16]\n-22:5-22:79: @1[5]: _11 = &amp;_12\n-22:5-22:79: @1[6]: _10 = &amp;(*_11)\n-22:5-22:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-22:5-22:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-22:5-22:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-22:5-22:79: @3[6]: _2 = const ()\n-21:73-23:2: @3[8]: _0 = const ()\n-23:2-23:2: @4.Return: return\">    println!(\"used_only_from_this_lib_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:14-22:72: @0[6]: _19 = const used_only_from_this_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-22:14-22:72: @0[7]: _7 = &amp;(*_19)\n-22:14-22:72: @0[8]: _6 = &amp;(*_7)\n-22:14-22:72: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-22:74-22:77: @0[17]: _14 = &amp;_1\n-22:5-22:79: @0[18]: _13 = (move _14,)\n-22:5-22:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n-22:5-22:79: @0[22]: _15 = (_13.0: &amp;T)\n-22:5-22:79: @0[25]: _17 = &amp;(*_15)\n-22:5-22:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-22:5-22:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-22:5-22:79: @1[2]: _12 = [move _16]\n-22:5-22:79: @1[5]: _11 = &amp;_12\n-22:5-22:79: @1[6]: _10 = &amp;(*_11)\n-22:5-22:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-22:5-22:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-22:5-22:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-22:5-22:79: @3[6]: _2 = const ()\n-21:73-23:2: @3[8]: _0 = const ()\n-23:2-23:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "b146180fbd15556ee6968299c950ebbbcd3bc2e8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 28\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:14-30:91: @0[6]: _19 = const used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-30:14-30:91: @0[7]: _7 = &amp;(*_19)\n-30:14-30:91: @0[8]: _6 = &amp;(*_7)\n-30:14-30:91: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-30:93-30:96: @0[17]: _14 = &amp;_1\n-30:5-30:98: @0[18]: _13 = (move _14,)\n-30:5-30:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n-30:5-30:98: @0[22]: _15 = (_13.0: &amp;T)\n-30:5-30:98: @0[25]: _17 = &amp;(*_15)\n-30:5-30:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-30:5-30:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-30:5-30:98: @1[2]: _12 = [move _16]\n-30:5-30:98: @1[5]: _11 = &amp;_12\n-30:5-30:98: @1[6]: _10 = &amp;(*_11)\n-30:5-30:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-30:5-30:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-30:5-30:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-30:5-30:98: @3[6]: _2 = const ()\n-29:92-31:2: @3[8]: _0 = const ()\n-31:2-31:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_with_same_type_from_bin_crate_and_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:14-30:91: @0[6]: _19 = const used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-30:14-30:91: @0[7]: _7 = &amp;(*_19)\n-30:14-30:91: @0[8]: _6 = &amp;(*_7)\n-30:14-30:91: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-30:93-30:96: @0[17]: _14 = &amp;_1\n-30:5-30:98: @0[18]: _13 = (move _14,)\n-30:5-30:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n-30:5-30:98: @0[22]: _15 = (_13.0: &amp;T)\n-30:5-30:98: @0[25]: _17 = &amp;(*_15)\n-30:5-30:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-30:5-30:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-30:5-30:98: @1[2]: _12 = [move _16]\n-30:5-30:98: @1[5]: _11 = &amp;_12\n-30:5-30:98: @1[6]: _10 = &amp;(*_11)\n-30:5-30:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-30:5-30:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-30:5-30:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-30:5-30:98: @3[6]: _2 = const ()\n-29:92-31:2: @3[8]: _0 = const ()\n-31:2-31:2: @4.Return: return\">    println!(\"used_with_same_type_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:14-30:91: @0[6]: _19 = const used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-30:14-30:91: @0[7]: _7 = &amp;(*_19)\n-30:14-30:91: @0[8]: _6 = &amp;(*_7)\n-30:14-30:91: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-30:93-30:96: @0[17]: _14 = &amp;_1\n-30:5-30:98: @0[18]: _13 = (move _14,)\n-30:5-30:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n-30:5-30:98: @0[22]: _15 = (_13.0: &amp;T)\n-30:5-30:98: @0[25]: _17 = &amp;(*_15)\n-30:5-30:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-30:5-30:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-30:5-30:98: @1[2]: _12 = [move _16]\n-30:5-30:98: @1[5]: _11 = &amp;_12\n-30:5-30:98: @1[6]: _10 = &amp;(*_11)\n-30:5-30:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-30:5-30:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-30:5-30:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-30:5-30:98: @3[6]: _2 = const ()\n-29:92-31:2: @3[8]: _0 = const ()\n-31:2-31:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "322eaf07677f4c9d28b993af139a0da586c69571", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.unused_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,115 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.unused_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.unused_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 64\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:19-66:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-66:19-66:35: @1[0]: _3 = &amp;_4\n-66:19-66:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-66:19-66:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-66:9-66:16: @2[3]: FakeRead(ForLet, _1)\n-67:25-67:26: @3[2]: _5 = const 2_i32\n-67:9-67:22: @3[3]: FakeRead(ForLet, _5)\n-68:9-68:16: @3[6]: _7 = _1\n-68:8-68:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"66:19-66:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-66:19-66:35: @1[0]: _3 = &amp;_4\n-66:19-66:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-66:19-66:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-66:9-66:16: @2[3]: FakeRead(ForLet, _1)\n-67:25-67:26: @3[2]: _5 = const 2_i32\n-67:9-67:22: @3[3]: FakeRead(ForLet, _5)\n-68:9-68:16: @3[6]: _7 = _1\n-68:8-68:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"66:19-66:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-66:19-66:35: @1[0]: _3 = &amp;_4\n-66:19-66:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-66:19-66:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-66:9-66:16: @2[3]: FakeRead(ForLet, _1)\n-67:25-67:26: @3[2]: _5 = const 2_i32\n-67:9-67:22: @3[3]: FakeRead(ForLet, _5)\n-68:9-68:16: @3[6]: _7 = _1\n-68:8-68:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"66:19-66:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-66:19-66:35: @1[0]: _3 = &amp;_4\n-66:19-66:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-66:19-66:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-66:9-66:16: @2[3]: FakeRead(ForLet, _1)\n-67:25-67:26: @3[2]: _5 = const 2_i32\n-67:9-67:22: @3[3]: FakeRead(ForLet, _5)\n-68:9-68:16: @3[6]: _7 = _1\n-68:8-68:16: @3[7]: _6 = Not(move _7)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:9-69:23: @4[0]: _5 = const 20_i32\n-68:17-70:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"69:9-69:23: @4[0]: _5 = const 20_i32\n-68:17-70:6: @4[1]: _0 = const ()\">        countdown = 20;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"69:9-69:23: @4[0]: _5 = const 20_i32\n-68:17-70:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"70:6-70:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"71:2-71:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "9e3052ccac1553158a7fb7d7a05f4a1dc78368fc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.unused_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.unused_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 59\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:14-61:49: @0[6]: _19 = const unused_generic_function::&lt;T&gt;::promoted[0]\n-61:14-61:49: @0[7]: _7 = &amp;(*_19)\n-61:14-61:49: @0[8]: _6 = &amp;(*_7)\n-61:14-61:49: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-61:51-61:54: @0[17]: _14 = &amp;_1\n-61:5-61:56: @0[18]: _13 = (move _14,)\n-61:5-61:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n-61:5-61:56: @0[22]: _15 = (_13.0: &amp;T)\n-61:5-61:56: @0[25]: _17 = &amp;(*_15)\n-61:5-61:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-61:5-61:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-61:5-61:56: @1[2]: _12 = [move _16]\n-61:5-61:56: @1[5]: _11 = &amp;_12\n-61:5-61:56: @1[6]: _10 = &amp;(*_11)\n-61:5-61:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-61:5-61:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-61:5-61:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-61:5-61:56: @3[6]: _2 = const ()\n-60:50-62:2: @3[8]: _0 = const ()\n-62:2-62:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn unused_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:14-61:49: @0[6]: _19 = const unused_generic_function::&lt;T&gt;::promoted[0]\n-61:14-61:49: @0[7]: _7 = &amp;(*_19)\n-61:14-61:49: @0[8]: _6 = &amp;(*_7)\n-61:14-61:49: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-61:51-61:54: @0[17]: _14 = &amp;_1\n-61:5-61:56: @0[18]: _13 = (move _14,)\n-61:5-61:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n-61:5-61:56: @0[22]: _15 = (_13.0: &amp;T)\n-61:5-61:56: @0[25]: _17 = &amp;(*_15)\n-61:5-61:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-61:5-61:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-61:5-61:56: @1[2]: _12 = [move _16]\n-61:5-61:56: @1[5]: _11 = &amp;_12\n-61:5-61:56: @1[6]: _10 = &amp;(*_11)\n-61:5-61:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-61:5-61:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-61:5-61:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-61:5-61:56: @3[6]: _2 = const ()\n-60:50-62:2: @3[8]: _0 = const ()\n-62:2-62:2: @4.Return: return\">    println!(\"unused_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:14-61:49: @0[6]: _19 = const unused_generic_function::&lt;T&gt;::promoted[0]\n-61:14-61:49: @0[7]: _7 = &amp;(*_19)\n-61:14-61:49: @0[8]: _6 = &amp;(*_7)\n-61:14-61:49: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-61:51-61:54: @0[17]: _14 = &amp;_1\n-61:5-61:56: @0[18]: _13 = (move _14,)\n-61:5-61:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n-61:5-61:56: @0[22]: _15 = (_13.0: &amp;T)\n-61:5-61:56: @0[25]: _17 = &amp;(*_15)\n-61:5-61:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-61:5-61:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-61:5-61:56: @1[2]: _12 = [move _16]\n-61:5-61:56: @1[5]: _11 = &amp;_12\n-61:5-61:56: @1[6]: _10 = &amp;(*_11)\n-61:5-61:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-61:5-61:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-61:5-61:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-61:5-61:56: @3[6]: _2 = const ()\n-60:50-62:2: @3[8]: _0 = const ()\n-62:2-62:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "e9c381db94025a98137adb234c00d54308d9c8f1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.unused_private_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_private_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_private_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.unused_private_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,115 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.unused_private_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.unused_private_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 73\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"75:19-75:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-75:19-75:35: @1[0]: _3 = &amp;_4\n-75:19-75:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-75:19-75:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-75:9-75:16: @2[3]: FakeRead(ForLet, _1)\n-76:25-76:26: @3[2]: _5 = const 2_i32\n-76:9-76:22: @3[3]: FakeRead(ForLet, _5)\n-77:9-77:16: @3[6]: _7 = _1\n-77:8-77:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_private_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"75:19-75:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-75:19-75:35: @1[0]: _3 = &amp;_4\n-75:19-75:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-75:19-75:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-75:9-75:16: @2[3]: FakeRead(ForLet, _1)\n-76:25-76:26: @3[2]: _5 = const 2_i32\n-76:9-76:22: @3[3]: FakeRead(ForLet, _5)\n-77:9-77:16: @3[6]: _7 = _1\n-77:8-77:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"75:19-75:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-75:19-75:35: @1[0]: _3 = &amp;_4\n-75:19-75:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-75:19-75:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-75:9-75:16: @2[3]: FakeRead(ForLet, _1)\n-76:25-76:26: @3[2]: _5 = const 2_i32\n-76:9-76:22: @3[3]: FakeRead(ForLet, _5)\n-77:9-77:16: @3[6]: _7 = _1\n-77:8-77:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"75:19-75:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n-75:19-75:35: @1[0]: _3 = &amp;_4\n-75:19-75:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n-75:19-75:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-75:9-75:16: @2[3]: FakeRead(ForLet, _1)\n-76:25-76:26: @3[2]: _5 = const 2_i32\n-76:9-76:22: @3[3]: FakeRead(ForLet, _5)\n-77:9-77:16: @3[6]: _7 = _1\n-77:8-77:16: @3[7]: _6 = Not(move _7)\">    if !is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"78:9-78:23: @4[0]: _5 = const 20_i32\n-77:17-79:6: @4[1]: _0 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"78:9-78:23: @4[0]: _5 = const 20_i32\n-77:17-79:6: @4[1]: _0 = const ()\">        countdown = 20;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"78:9-78:23: @4[0]: _5 = const 20_i32\n-77:17-79:6: @4[1]: _0 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"79:6-79:6: @5[0]: _0 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"80:2-80:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "056f618a403c96cbfed2a8846e5c14c1e076e47e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 190, "changes": 190, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,190 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.use_this_lib_crate - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 81\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>fn use_this_lib_crate() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">    used_from_bin_crate_and_lib_crate_generic_function(\"used from library used_crate.rs\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">    used_with_same_type_from_bin_crate_and_lib_crate_generic_function(</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">        \"used from library used_crate.rs\",</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">    );</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">    let some_vec = vec![5, 6, 7, 8];</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">    used_only_from_this_lib_crate_generic_function(some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">    used_only_from_this_lib_crate_generic_function(\"used ONLY from library used_crate.rs\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"83:5-83:90: @0.Call: _1 = used_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb1, unwind: bb13]\n-84:5-86:6: @1.Call: _2 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from library used_crate.rs&quot;) -&gt; [return: bb2, unwind: bb13]\n-87:20-87:36: @2[5]: _6 = Box([i32; 4])\n-87:20-87:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n-87:20-87:36: @2[7]: _5 = move _6\n-87:20-87:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-87:20-87:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n-87:9-87:17: @5[1]: FakeRead(ForLet, _3)\n-88:52-88:60: @5[4]: _8 = move _3\n-88:5-88:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n-89:5-89:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n-82:25-90:2: @7[1]: _0 = const ()\n-90:2-90:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "0d88b0bc60e34deba6359102a3445cc05706f3cf", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.used_from_bin_crate_and_lib_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 49\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"51:14-51:76: @0[6]: _19 = const used_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-51:14-51:76: @0[7]: _7 = &amp;(*_19)\n-51:14-51:76: @0[8]: _6 = &amp;(*_7)\n-51:14-51:76: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-51:78-51:81: @0[17]: _14 = &amp;_1\n-51:5-51:83: @0[18]: _13 = (move _14,)\n-51:5-51:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n-51:5-51:83: @0[22]: _15 = (_13.0: &amp;T)\n-51:5-51:83: @0[25]: _17 = &amp;(*_15)\n-51:5-51:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-51:5-51:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-51:5-51:83: @1[2]: _12 = [move _16]\n-51:5-51:83: @1[5]: _11 = &amp;_12\n-51:5-51:83: @1[6]: _10 = &amp;(*_11)\n-51:5-51:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-51:5-51:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-51:5-51:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-51:5-51:83: @3[6]: _2 = const ()\n-50:77-52:2: @3[8]: _0 = const ()\n-52:2-52:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_from_bin_crate_and_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"51:14-51:76: @0[6]: _19 = const used_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-51:14-51:76: @0[7]: _7 = &amp;(*_19)\n-51:14-51:76: @0[8]: _6 = &amp;(*_7)\n-51:14-51:76: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-51:78-51:81: @0[17]: _14 = &amp;_1\n-51:5-51:83: @0[18]: _13 = (move _14,)\n-51:5-51:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n-51:5-51:83: @0[22]: _15 = (_13.0: &amp;T)\n-51:5-51:83: @0[25]: _17 = &amp;(*_15)\n-51:5-51:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-51:5-51:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-51:5-51:83: @1[2]: _12 = [move _16]\n-51:5-51:83: @1[5]: _11 = &amp;_12\n-51:5-51:83: @1[6]: _10 = &amp;(*_11)\n-51:5-51:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-51:5-51:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-51:5-51:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-51:5-51:83: @3[6]: _2 = const ()\n-50:77-52:2: @3[8]: _0 = const ()\n-52:2-52:2: @4.Return: return\">    println!(\"used_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"51:14-51:76: @0[6]: _19 = const used_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-51:14-51:76: @0[7]: _7 = &amp;(*_19)\n-51:14-51:76: @0[8]: _6 = &amp;(*_7)\n-51:14-51:76: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-51:78-51:81: @0[17]: _14 = &amp;_1\n-51:5-51:83: @0[18]: _13 = (move _14,)\n-51:5-51:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n-51:5-51:83: @0[22]: _15 = (_13.0: &amp;T)\n-51:5-51:83: @0[25]: _17 = &amp;(*_15)\n-51:5-51:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-51:5-51:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-51:5-51:83: @1[2]: _12 = [move _16]\n-51:5-51:83: @1[5]: _11 = &amp;_12\n-51:5-51:83: @1[6]: _10 = &amp;(*_11)\n-51:5-51:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-51:5-51:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-51:5-51:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-51:5-51:83: @3[6]: _2 = const ()\n-50:77-52:2: @3[8]: _0 = const ()\n-52:2-52:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "d722d9f46ecff0daa9ee610a2535b9e7231799db", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,110 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.used_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn used_function() <span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:19-11:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-11:19-11:35: @1[0]: _3 = &amp;_4\n-11:19-11:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-11:19-11:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-11:9-11:16: @2[3]: FakeRead(ForLet, _1)\n-12:25-12:26: @3[2]: _5 = const 0_i32\n-12:9-12:22: @3[3]: FakeRead(ForLet, _5)\n-13:8-13:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:19-11:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-11:19-11:35: @1[0]: _3 = &amp;_4\n-11:19-11:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-11:19-11:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-11:9-11:16: @2[3]: FakeRead(ForLet, _1)\n-12:25-12:26: @3[2]: _5 = const 0_i32\n-12:9-12:22: @3[3]: FakeRead(ForLet, _5)\n-13:8-13:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"11:19-11:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-11:19-11:35: @1[0]: _3 = &amp;_4\n-11:19-11:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-11:19-11:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-11:9-11:16: @2[3]: FakeRead(ForLet, _1)\n-12:25-12:26: @3[2]: _5 = const 0_i32\n-12:9-12:22: @3[3]: FakeRead(ForLet, _5)\n-13:8-13:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-14:23: @4[0]: _5 = const 10_i32\n-13:16-15:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-14:23: @4[0]: _5 = const 10_i32\n-13:16-15:6: @4[1]: _6 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"14:9-14:23: @4[0]: _5 = const 10_i32\n-13:16-15:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:6-15:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:5-16:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n-17:2-17:2: @7.Return: return\"><span class=\"annotation\">@6,7\u298a</span>use_this_lib_crate();</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"16:5-16:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n-17:2-17:2: @7.Return: return\">}<span class=\"annotation\">\u2989@6,7</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "a15c31bb13fd0ddea936b6c723c15bde61f74bd9", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_inline_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 110, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_inline_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_inline_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_inline_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,110 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_inline_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.used_inline_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 19\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn used_inline_function() <span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:19-24:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-24:19-24:35: @1[0]: _3 = &amp;_4\n-24:19-24:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-24:19-24:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-24:9-24:16: @2[3]: FakeRead(ForLet, _1)\n-25:25-25:26: @3[2]: _5 = const 0_i32\n-25:9-25:22: @3[3]: FakeRead(ForLet, _5)\n-26:8-26:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:19-24:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-24:19-24:35: @1[0]: _3 = &amp;_4\n-24:19-24:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-24:19-24:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-24:9-24:16: @2[3]: FakeRead(ForLet, _1)\n-25:25-25:26: @3[2]: _5 = const 0_i32\n-25:9-25:22: @3[3]: FakeRead(ForLet, _5)\n-26:8-26:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"24:19-24:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n-24:19-24:35: @1[0]: _3 = &amp;_4\n-24:19-24:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n-24:19-24:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n-24:9-24:16: @2[3]: FakeRead(ForLet, _1)\n-25:25-25:26: @3[2]: _5 = const 0_i32\n-25:9-25:22: @3[3]: FakeRead(ForLet, _5)\n-26:8-26:15: @3[6]: _7 = _1\">    if is_true<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:9-27:23: @4[0]: _5 = const 10_i32\n-26:16-28:6: @4[1]: _6 = const ()\"><span class=\"annotation\">@4\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"27:9-27:23: @4[0]: _5 = const 10_i32\n-26:16-28:6: @4[1]: _6 = const ()\">        countdown = 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"27:9-27:23: @4[0]: _5 = const 10_i32\n-26:16-28:6: @4[1]: _6 = const ()\">    }<span class=\"annotation\">\u2989@4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:6-28:6: @5[0]: _6 = const ()\"><span class=\"annotation\">@5\u298a</span>\u2038<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:5-29:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n-30:2-30:2: @7.Return: return\"><span class=\"annotation\">@6,7\u298a</span>use_this_lib_crate();</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:5-29:25: @6.Call: _8 = use_this_lib_crate() -&gt; [return: bb7, unwind: bb9]\n-30:2-30:2: @7.Return: return\">}<span class=\"annotation\">\u2989@6,7</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "252ff76d416963e60e17c8f088c7b7bbfc66e43d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.used_only_from_bin_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 38\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"40:14-40:67: @0[6]: _19 = const used_only_from_bin_crate_generic_function::&lt;T&gt;::promoted[0]\n-40:14-40:67: @0[7]: _7 = &amp;(*_19)\n-40:14-40:67: @0[8]: _6 = &amp;(*_7)\n-40:14-40:67: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-40:69-40:72: @0[17]: _14 = &amp;_1\n-40:5-40:74: @0[18]: _13 = (move _14,)\n-40:5-40:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n-40:5-40:74: @0[22]: _15 = (_13.0: &amp;T)\n-40:5-40:74: @0[25]: _17 = &amp;(*_15)\n-40:5-40:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-40:5-40:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-40:5-40:74: @1[2]: _12 = [move _16]\n-40:5-40:74: @1[5]: _11 = &amp;_12\n-40:5-40:74: @1[6]: _10 = &amp;(*_11)\n-40:5-40:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-40:5-40:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-40:5-40:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-40:5-40:74: @3[6]: _2 = const ()\n-39:68-41:2: @3[8]: _0 = const ()\n-41:2-41:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_only_from_bin_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"40:14-40:67: @0[6]: _19 = const used_only_from_bin_crate_generic_function::&lt;T&gt;::promoted[0]\n-40:14-40:67: @0[7]: _7 = &amp;(*_19)\n-40:14-40:67: @0[8]: _6 = &amp;(*_7)\n-40:14-40:67: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-40:69-40:72: @0[17]: _14 = &amp;_1\n-40:5-40:74: @0[18]: _13 = (move _14,)\n-40:5-40:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n-40:5-40:74: @0[22]: _15 = (_13.0: &amp;T)\n-40:5-40:74: @0[25]: _17 = &amp;(*_15)\n-40:5-40:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-40:5-40:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-40:5-40:74: @1[2]: _12 = [move _16]\n-40:5-40:74: @1[5]: _11 = &amp;_12\n-40:5-40:74: @1[6]: _10 = &amp;(*_11)\n-40:5-40:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-40:5-40:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-40:5-40:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-40:5-40:74: @3[6]: _2 = const ()\n-39:68-41:2: @3[8]: _0 = const ()\n-41:2-41:2: @4.Return: return\">    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"40:14-40:67: @0[6]: _19 = const used_only_from_bin_crate_generic_function::&lt;T&gt;::promoted[0]\n-40:14-40:67: @0[7]: _7 = &amp;(*_19)\n-40:14-40:67: @0[8]: _6 = &amp;(*_7)\n-40:14-40:67: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-40:69-40:72: @0[17]: _14 = &amp;_1\n-40:5-40:74: @0[18]: _13 = (move _14,)\n-40:5-40:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n-40:5-40:74: @0[22]: _15 = (_13.0: &amp;T)\n-40:5-40:74: @0[25]: _17 = &amp;(*_15)\n-40:5-40:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-40:5-40:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-40:5-40:74: @1[2]: _12 = [move _16]\n-40:5-40:74: @1[5]: _11 = &amp;_12\n-40:5-40:74: @1[6]: _10 = &amp;(*_11)\n-40:5-40:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-40:5-40:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-40:5-40:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-40:5-40:74: @3[6]: _2 = const ()\n-39:68-41:2: @3[8]: _0 = const ()\n-41:2-41:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "f8fb4990ad9a6526589c496c97b06282ab50dbcb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.used_only_from_this_lib_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 44\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:14-46:72: @0[6]: _19 = const used_only_from_this_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-46:14-46:72: @0[7]: _7 = &amp;(*_19)\n-46:14-46:72: @0[8]: _6 = &amp;(*_7)\n-46:14-46:72: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-46:74-46:77: @0[17]: _14 = &amp;_1\n-46:5-46:79: @0[18]: _13 = (move _14,)\n-46:5-46:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n-46:5-46:79: @0[22]: _15 = (_13.0: &amp;T)\n-46:5-46:79: @0[25]: _17 = &amp;(*_15)\n-46:5-46:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-46:5-46:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-46:5-46:79: @1[2]: _12 = [move _16]\n-46:5-46:79: @1[5]: _11 = &amp;_12\n-46:5-46:79: @1[6]: _10 = &amp;(*_11)\n-46:5-46:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-46:5-46:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-46:5-46:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-46:5-46:79: @3[6]: _2 = const ()\n-45:73-47:2: @3[8]: _0 = const ()\n-47:2-47:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_only_from_this_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:14-46:72: @0[6]: _19 = const used_only_from_this_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-46:14-46:72: @0[7]: _7 = &amp;(*_19)\n-46:14-46:72: @0[8]: _6 = &amp;(*_7)\n-46:14-46:72: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-46:74-46:77: @0[17]: _14 = &amp;_1\n-46:5-46:79: @0[18]: _13 = (move _14,)\n-46:5-46:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n-46:5-46:79: @0[22]: _15 = (_13.0: &amp;T)\n-46:5-46:79: @0[25]: _17 = &amp;(*_15)\n-46:5-46:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-46:5-46:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-46:5-46:79: @1[2]: _12 = [move _16]\n-46:5-46:79: @1[5]: _11 = &amp;_12\n-46:5-46:79: @1[6]: _10 = &amp;(*_11)\n-46:5-46:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-46:5-46:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-46:5-46:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-46:5-46:79: @3[6]: _2 = const ()\n-45:73-47:2: @3[8]: _0 = const ()\n-47:2-47:2: @4.Return: return\">    println!(\"used_only_from_this_lib_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:14-46:72: @0[6]: _19 = const used_only_from_this_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-46:14-46:72: @0[7]: _7 = &amp;(*_19)\n-46:14-46:72: @0[8]: _6 = &amp;(*_7)\n-46:14-46:72: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-46:74-46:77: @0[17]: _14 = &amp;_1\n-46:5-46:79: @0[18]: _13 = (move _14,)\n-46:5-46:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n-46:5-46:79: @0[22]: _15 = (_13.0: &amp;T)\n-46:5-46:79: @0[25]: _17 = &amp;(*_15)\n-46:5-46:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-46:5-46:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-46:5-46:79: @1[2]: _12 = [move _16]\n-46:5-46:79: @1[5]: _11 = &amp;_12\n-46:5-46:79: @1[6]: _10 = &amp;(*_11)\n-46:5-46:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-46:5-46:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-46:5-46:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-46:5-46:79: @3[6]: _2 = const ()\n-45:73-47:2: @3[8]: _0 = const ()\n-47:2-47:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "db5e24d9b1dd6b81d4751af1a5d86c3bc2836063", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 133, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_inline_crate%2Fused_inline_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,133 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_inline_crate/used_inline_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>used_inline_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 54\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"56:14-56:91: @0[6]: _19 = const used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-56:14-56:91: @0[7]: _7 = &amp;(*_19)\n-56:14-56:91: @0[8]: _6 = &amp;(*_7)\n-56:14-56:91: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-56:93-56:96: @0[17]: _14 = &amp;_1\n-56:5-56:98: @0[18]: _13 = (move _14,)\n-56:5-56:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n-56:5-56:98: @0[22]: _15 = (_13.0: &amp;T)\n-56:5-56:98: @0[25]: _17 = &amp;(*_15)\n-56:5-56:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-56:5-56:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-56:5-56:98: @1[2]: _12 = [move _16]\n-56:5-56:98: @1[5]: _11 = &amp;_12\n-56:5-56:98: @1[6]: _10 = &amp;(*_11)\n-56:5-56:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-56:5-56:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-56:5-56:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-56:5-56:98: @3[6]: _2 = const ()\n-55:92-57:2: @3[8]: _0 = const ()\n-57:2-57:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_with_same_type_from_bin_crate_and_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"56:14-56:91: @0[6]: _19 = const used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-56:14-56:91: @0[7]: _7 = &amp;(*_19)\n-56:14-56:91: @0[8]: _6 = &amp;(*_7)\n-56:14-56:91: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-56:93-56:96: @0[17]: _14 = &amp;_1\n-56:5-56:98: @0[18]: _13 = (move _14,)\n-56:5-56:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n-56:5-56:98: @0[22]: _15 = (_13.0: &amp;T)\n-56:5-56:98: @0[25]: _17 = &amp;(*_15)\n-56:5-56:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-56:5-56:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-56:5-56:98: @1[2]: _12 = [move _16]\n-56:5-56:98: @1[5]: _11 = &amp;_12\n-56:5-56:98: @1[6]: _10 = &amp;(*_11)\n-56:5-56:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-56:5-56:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-56:5-56:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-56:5-56:98: @3[6]: _2 = const ()\n-55:92-57:2: @3[8]: _0 = const ()\n-57:2-57:2: @4.Return: return\">    println!(\"used_with_same_type_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"56:14-56:91: @0[6]: _19 = const used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;T&gt;::promoted[0]\n-56:14-56:91: @0[7]: _7 = &amp;(*_19)\n-56:14-56:91: @0[8]: _6 = &amp;(*_7)\n-56:14-56:91: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n-56:93-56:96: @0[17]: _14 = &amp;_1\n-56:5-56:98: @0[18]: _13 = (move _14,)\n-56:5-56:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n-56:5-56:98: @0[22]: _15 = (_13.0: &amp;T)\n-56:5-56:98: @0[25]: _17 = &amp;(*_15)\n-56:5-56:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-56:5-56:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n-56:5-56:98: @1[2]: _12 = [move _16]\n-56:5-56:98: @1[5]: _11 = &amp;_12\n-56:5-56:98: @1[6]: _10 = &amp;(*_11)\n-56:5-56:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-56:5-56:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-56:5-56:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n-56:5-56:98: @3[6]: _2 = const ()\n-55:92-57:2: @3[8]: _0 = const ()\n-57:2-57:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "28cf051ecf8734ab8bb0971a2e20ec93bdfa2734", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.uses_crate/uses_crate.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 193, "changes": 193, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_crate%2Fuses_crate.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_crate%2Fuses_crate.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_crate%2Fuses_crate.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,193 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.uses_crate/uses_crate.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>uses_crate.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\">    used_crate::used_function();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\">    let some_vec = vec![1, 2, 3, 4];</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\">    used_crate::used_only_from_bin_crate_generic_function(&amp;some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\">    used_crate::used_only_from_bin_crate_generic_function(\"used from bin uses_crate.rs\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\">    used_crate::used_from_bin_crate_and_lib_crate_generic_function(some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\">    used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function(\"interesting?\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n-7:20-7:36: @1[5]: _5 = Box([i32; 4])\n-7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-7:20-7:36: @1[7]: _4 = move _5\n-7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n-7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n-8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n-10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n-5:11-12:2: @8[1]: _0 = const ()\n-12:2-12:2: @9.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "179940f6bd5b7e4b56b142b9bb4a49cd34f7d18e", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.uses_inline_crate/uses_inline_crate.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 249, "changes": 249, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_inline_crate%2Fuses_inline_crate.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_inline_crate%2Fuses_inline_crate.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_inline_crate%2Fuses_inline_crate.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,249 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.uses_inline_crate/uses_inline_crate.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>uses_inline_crate.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9,10\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    used_inline_crate::used_function();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    used_inline_crate::used_inline_function();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    let some_vec = vec![1, 2, 3, 4];</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    used_inline_crate::used_only_from_bin_crate_generic_function(&amp;some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    used_inline_crate::used_only_from_bin_crate_generic_function(\"used from bin uses_crate.rs\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function(some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function(</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">        \"interesting?\",</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">    );</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"8:5-8:39: @0.Call: _1 = used_inline_crate::used_function() -&gt; [return: bb1, unwind: bb15]\n-9:5-9:46: @1.Call: _2 = used_inline_crate::used_inline_function() -&gt; [return: bb2, unwind: bb15]\n-10:20-10:36: @2[5]: _6 = Box([i32; 4])\n-10:20-10:36: @2[6]: (*_6) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n-10:20-10:36: @2[7]: _5 = move _6\n-10:20-10:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-10:20-10:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb14]\n-10:9-10:17: @5[1]: FakeRead(ForLet, _3)\n-11:66-11:75: @5[4]: _8 = &amp;_3\n-11:5-11:76: @5.Call: _7 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb12]\n-12:5-12:96: @6.Call: _9 = used_inline_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb7, unwind: bb12]\n-13:75-13:83: @7[3]: _11 = move _3\n-13:5-13:84: @7.Call: _10 = used_inline_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _11) -&gt; [return: bb8, unwind: bb11]\n-14:5-16:6: @8.Call: _12 = used_inline_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb9, unwind: bb12]\n-7:11-17:2: @9[1]: _0 = const ()\n-17:2-17:2: @10.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9,10</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "f037a8ee5c52f0d3be0fb45ec9703757c9a88afa", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.while/while.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while%2Fwhile.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,82 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.while/while.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>while.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:15-2:16: @0[1]: _1 = const 9_i32\n-2:9-2:12: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:15-2:16: @0[1]: _1 = const 9_i32\n-2:9-2:12: @0[2]: FakeRead(ForLet, _1)\">    let num = 9<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"3:11-3:14: @2[2]: _4 = _1\n-3:11-3:20: @2[3]: _3 = Ge(move _4, const 10_i32)\n-3:11-3:20: @2[5]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@1,2\u298a</span>num &gt;= 10<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\"><span class=\"annotation\">@3,5\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"3:21-4:6: @5[0]: _2 = const ()\">    }<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"5:2-5:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>\u2038<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "fcb5418e1d0cfee7c62cfd57442482778ec59cbb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 130, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,130 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>while_early_ret.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:27: @0[1]: _1 = const 10_i32\n-5:9-5:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:27: @0[1]: _1 = const 10_i32\n-5:9-5:22: @0[2]: FakeRead(ForLet, _1)\">    let mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">            &gt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:9-7:18: @2[2]: _5 = _1\n-7:9-9:10: @2[3]: _4 = Gt(move _5, const 0_i32)\n-7:9-9:10: @2[5]: FakeRead(ForMatchedPlace, _4)\">        0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\"><span class=\"annotation\">@3,5\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\">                &lt;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"12:13-12:22: @5[3]: _8 = _1\n-12:13-14:14: @5[4]: _7 = Lt(move _8, const 5_i32)\">            5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            return</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                if</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @6[2]: _11 = _1\n-18:21-20:22: @6[3]: _10 = Gt(move _11, const 8_i32)\"><span class=\"annotation\">@6\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @6[2]: _11 = _1\n-18:21-20:22: @6[3]: _10 = Gt(move _11, const 8_i32)\">                        &gt;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:21-18:30: @6[2]: _11 = _1\n-18:21-20:22: @6[3]: _10 = Gt(move _11, const 8_i32)\">                    8<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:24-22:26: @8[1]: _12 = ()\n-22:21-22:27: @8[2]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@8\u298a</span>Ok(())<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @9[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@9\u298a</span>Err(1)<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n-30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @11[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@7,11\u298a</span></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n-30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @11[0]: _1 = move (_13.0: i32)\">        countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n-30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @11[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n-30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n-30:9-32:10: @11[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@7,11</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n-35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "1e68c345f849b853b4cf3f080361aeab4b7192d9", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.yield/yield.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,79 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.yield/yield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>yield.main-{closure#0} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 7\"><span class=\"line\">                        <span class=\"code\" style=\"--layer: 0\">|| </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:9-9:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb2]\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:9-9:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb2]\">        yield 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:21: @1[1]: _0 = const &quot;foo&quot;\n-11:6-11:6: @1.Return: return\"><span class=\"annotation\">@1\u298a</span>\"foo\"</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:21: @1[1]: _0 = const &quot;foo&quot;\n-11:6-11:6: @1.Return: return\">    }<span class=\"annotation\">\u2989@1</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "842d7823bfd12a3cd559b22d1112aac72031a7c9", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.yield/yield.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,81 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.yield/yield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>yield.main-{closure#1} - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\">                        <span class=\"code\" style=\"--layer: 0\">|| </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb6]\"><span class=\"annotation\">@0\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb6]\">        yield 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:9-24:16: @1.Yield: _4 = yield(const 2_i32) -&gt; [resume: bb2, drop: bb5]\"><span class=\"annotation\">@1\u298a</span>yield 2<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:9-25:16: @2.Yield: _5 = yield(const 3_i32) -&gt; [resume: bb3, drop: bb4]\"><span class=\"annotation\">@2\u298a</span>yield 3<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:16-26:21: @3[1]: _0 = const &quot;foo&quot;\n-27:6-27:6: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\"foo\"</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:16-26:21: @3[1]: _0 = const &quot;foo&quot;\n-27:6-27:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "4c0c0d562b84089821362e6b07565b003dc61bfe", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.yield/yield.main.-------.InstrumentCoverage.0.html", "status": "removed", "additions": 0, "deletions": 138, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/23fa5360502be2554382c9d860e6438d3b822858/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html?ref=23fa5360502be2554382c9d860e6438d3b822858", "patch": "@@ -1,138 +0,0 @@\n-<!DOCTYPE html>\n-<!--\n-\n-Preview this file as rendered HTML from the github source at:\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.yield/yield.main.-------.InstrumentCoverage.0.html\n-\n-For revisions in Pull Requests (PR):\n-  * Replace \"rust-lang\" with the github PR author\n-  * Replace \"master\" with the PR branch name\n-\n--->\n-<html>\n-<head>\n-<title>yield.main - Coverage Spans</title>\n-<style>\n-    .line {\n-        counter-increment: line;\n-    }\n-    .line:before {\n-        content: counter(line) \": \";\n-        font-family: Menlo, Monaco, monospace;\n-        font-style: italic;\n-        width: 3.8em;\n-        display: inline-block;\n-        text-align: right;\n-        filter: opacity(50%);\n-        -webkit-user-select: none;\n-    }\n-    .code {\n-        color: #dddddd;\n-        background-color: #222222;\n-        font-family: Menlo, Monaco, monospace;\n-        line-height: 1.4em;\n-        border-bottom: 2px solid #222222;\n-        white-space: pre;\n-        display: inline-block;\n-    }\n-    .odd {\n-        background-color: #55bbff;\n-        color: #223311;\n-    }\n-    .even {\n-        background-color: #ee7756;\n-        color: #551133;\n-    }\n-    .code {\n-        --index: calc(var(--layer) - 1);\n-        padding-top: calc(var(--index) * 0.15em);\n-        filter:\n-            hue-rotate(calc(var(--index) * 25deg))\n-            saturate(calc(100% - (var(--index) * 2%)))\n-            brightness(calc(100% - (var(--index) * 1.5%)));\n-    }\n-    .annotation {\n-        color: #4444ff;\n-        font-family: monospace;\n-        font-style: italic;\n-        display: none;\n-        -webkit-user-select: none;\n-    }\n-    body:active .annotation {\n-        /* requires holding mouse down anywhere on the page */\n-        display: inline-block;\n-    }\n-    span:hover .annotation {\n-        /* requires hover over a span ONLY on its first line */\n-        display: inline-block;\n-    }\n-</style>\n-</head>\n-<body>\n-<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\"><span class=\"annotation\">@0,1,2\u298a</span>fn main() <span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\">{</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:9-8:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0,1,2\u298a</span>mut generator<span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> = || {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 1;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return \"foo\"</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n-13:11-13:35: @0.Call: _4 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n-13:43-13:45: @1[2]: _6 = ()\n-13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n-13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n-14:9-14:35: @2[3]: _7 = discriminant(_3)\"><span class=\"annotation\">@0,1,2\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n-13:11-13:35: @0.Call: _4 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n-13:43-13:45: @1[2]: _6 = ()\n-13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n-13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n-14:9-14:35: @2[3]: _7 = discriminant(_3)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:39-14:41: @6[0]: _2 = const ()\"><span class=\"annotation\">@4,6,7,8\u298a</span>{}<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:14-15:52: @5.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@5\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:20-17:34: @6[7]: _12 = &amp;mut _1\n-17:11-17:35: @6.Call: _11 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _12) -&gt; [return: bb7, unwind: bb26]\n-17:43-17:45: @7[2]: _13 = ()\n-17:11-17:46: @7.Call: _10 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _11, move _13) -&gt; [return: bb8, unwind: bb26]\n-17:11-17:46: @8[2]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@4,6,7,8\u298a</span>Pin::new(&amp;mut generator).resume(())<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        GeneratorState::Complete(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:34-18:39: @10.Call: _14 = &lt;str as std::cmp::PartialEq&gt;::eq(((_10 as Complete).0: &amp;str), const &quot;foo&quot;) -&gt; [return: bb11, unwind: bb26]\"><span class=\"annotation\">@10,11\u298a</span>\"foo\"<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">) =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:44-18:46: @13[0]: _9 = const ()\"><span class=\"annotation\">@12,13,14,15\u298a</span>{}<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:14-19:52: @9.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@9\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:22: @13[5]: FakeRead(ForLet, _17)\"><span class=\"annotation\">@12,13,14,15\u298a</span>mut generator<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> = || {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 1;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 2;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 3;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return \"foo\"</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n-29:11-29:35: @13.Call: _20 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n-29:43-29:45: @14[2]: _22 = ()\n-29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n-29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n-30:9-30:35: @15[3]: _23 = discriminant(_19)\"><span class=\"annotation\">@12,13,14,15\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n-29:11-29:35: @13.Call: _20 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n-29:43-29:45: @14[2]: _22 = ()\n-29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n-29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n-30:9-30:35: @15[3]: _23 = discriminant(_19)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:39-30:41: @19[0]: _18 = const ()\"><span class=\"annotation\">@17,19,20,21\u298a</span>{}<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:14-31:52: @18.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@18\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n-33:11-33:35: @19.Call: _26 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n-33:43-33:45: @20[2]: _28 = ()\n-33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n-33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n-34:9-34:35: @21[3]: _29 = discriminant(_25)\"><span class=\"annotation\">@17,19,20,21\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n-33:11-33:35: @19.Call: _26 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n-33:43-33:45: @20[2]: _28 = ()\n-33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n-33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n-34:9-34:35: @21[3]: _29 = discriminant(_25)\">        GeneratorState::Yielded(2)<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:39-34:41: @25[0]: _0 = const ()\"><span class=\"annotation\">@23,25\u298a</span>{}<span class=\"annotation\">\u2989@23,25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:14-35:52: @24.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@24\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:2-37:2: @25.Return: return\"><span class=\"annotation\">@23,25\u298a</span>\u2038<span class=\"annotation\">\u2989@23,25</span></span></span></span></div>\n-</body>\n-</html>"}, {"sha": "aa1dc7b91ce949ba9318c41b286787e618976d6b", "filename": "src/test/run-make-fulldeps/coverage/coverage_tools.mk", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -4,11 +4,3 @@\n # -include ../coverage/coverage_tools.mk\n \n -include ../tools.mk\n-\n-# ISSUE(76038): When targeting MSVC, Rust binaries built with both `-Z instrument-coverage` and\n-# `-C link-dead-code` typically crash (with a seg-fault) or at best generate an empty `*.profraw`\n-# file, required for coverage reports.\n-#\n-# Enabling `-C link-dead-code` is not necessary when compiling with `-Z instrument-coverage`,\n-# due to improvements in the coverage map generation, to add unreachable functions known to Rust.\n-# Therefore, `-C link-dead-code` is no longer automatically enabled."}, {"sha": "5c4825ae66c878a80627e31441288a76d43b18ab", "filename": "src/test/run-make/emit-shared-files/Makefile", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Femit-shared-files%2FMakefile?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,46 @@\n+-include ../../run-make-fulldeps/tools.mk\n+\n+INVOCATION_ONLY = $(TMPDIR)/invocation-only\n+TOOLCHAIN_ONLY = $(TMPDIR)/toolchain-only\n+ALL_SHARED = $(TMPDIR)/all-shared\n+\n+all: invocation-only toolchain-only all-shared\n+\n+invocation-only:\n+\t$(RUSTDOC) -Z unstable-options --emit=invocation-specific --output $(INVOCATION_ONLY) --resource-suffix=-xxx --theme y.css --extend-css z.css x.rs\n+\t[ -e $(INVOCATION_ONLY)/search-index-xxx.js ]\n+\t[ -e $(INVOCATION_ONLY)/settings.html ]\n+\t[ -e $(INVOCATION_ONLY)/x/all.html ]\n+\t[ -e $(INVOCATION_ONLY)/x/index.html ]\n+\t[ -e $(INVOCATION_ONLY)/theme-xxx.css ] # generated from z.css\n+\t! [ -e $(INVOCATION_ONLY)/storage-xxx.js ]\n+\t! [ -e $(INVOCATION_ONLY)/SourceSerifPro-It.ttf.woff ]\n+\n+\t# FIXME: this probably shouldn't have a suffix\n+\t[ -e $(INVOCATION_ONLY)/y-xxx.css ]\n+\t# FIXME: this is technically incorrect (see `write_shared`)\n+\t! [ -e $(INVOCATION_ONLY)/main-xxx.js ]\n+\n+toolchain-only:\n+\t$(RUSTDOC) -Z unstable-options --emit=toolchain-shared-resources --output $(TOOLCHAIN_ONLY) --resource-suffix=-xxx --extend-css z.css x.rs\n+\t[ -e $(TOOLCHAIN_ONLY)/storage-xxx.js ]\n+\t! [ -e $(TOOLCHAIN_ONLY)/SourceSerifPro-It.ttf.woff ]\n+\t! [ -e $(TOOLCHAIN_ONLY)/search-index-xxx.js ]\n+\t! [ -e $(TOOLCHAIN_ONLY)/x/index.html ]\n+\t! [ -e $(TOOLCHAIN_ONLY)/theme.css ]\n+\n+\t[ -e $(TOOLCHAIN_ONLY)/main-xxx.js ]\n+\t! [ -e $(TOOLCHAIN_ONLY)/y-xxx.css ]\n+\n+all-shared:\n+\t$(RUSTDOC) -Z unstable-options --emit=toolchain-shared-resources,unversioned-shared-resources --output $(ALL_SHARED) --resource-suffix=-xxx --extend-css z.css x.rs\n+\t[ -e $(ALL_SHARED)/storage-xxx.js ]\n+\t[ -e $(ALL_SHARED)/SourceSerifPro-It.ttf.woff ]\n+\t! [ -e $(ALL_SHARED)/search-index-xxx.js ]\n+\t! [ -e $(ALL_SHARED)/settings.html ]\n+\t! [ -e $(ALL_SHARED)/x ]\n+\t! [ -e $(ALL_SHARED)/src ]\n+\t! [ -e $(ALL_SHARED)/theme.css ]\n+\n+\t[ -e $(ALL_SHARED)/main-xxx.js ]\n+\t! [ -e $(ALL_SHARED)/y-xxx.css ]"}, {"sha": "5df7576133a684ab8f887f442084e99062eb4886", "filename": "src/test/run-make/emit-shared-files/x.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2Fx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2Fx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Femit-shared-files%2Fx.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1 @@\n+// nothing to see here"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-make/emit-shared-files/y.css", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2Fy.css", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2Fy.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Femit-shared-files%2Fy.css?ref=138fd56cf9598b4bf016634c768dca128a83a5d7"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/test/run-make/emit-shared-files/z.css", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2Fz.css", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Frun-make%2Femit-shared-files%2Fz.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Femit-shared-files%2Fz.css?ref=138fd56cf9598b4bf016634c768dca128a83a5d7"}, {"sha": "af4e6f0a5c161fb342658e45e577a432eb74c57d", "filename": "src/test/ui/associated-types/defaults-suitability.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-suitability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-suitability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fdefaults-suitability.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -31,8 +31,8 @@ LL |     type Bar: Clone = Vec<T>;\n    = note: required because of the requirements on the impl of `Clone` for `Vec<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | trait Foo<T: Clone> {\n-   |            ^^^^^^^\n+LL | trait Foo<T: std::clone::Clone> {\n+   |            ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `(): Foo<Self>` is not satisfied\n   --> $DIR/defaults-suitability.rs:34:5\n@@ -99,8 +99,8 @@ LL |     type Baz = T;\n    |\n help: consider further restricting type parameter `T`\n    |\n-LL |     Self::Baz: Clone, T: Clone\n-   |                     ^^^^^^^^^^\n+LL |     Self::Baz: Clone, T: std::clone::Clone\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors\n "}, {"sha": "b6122bd54d1622e111b44fa76b578bedb16f2c30", "filename": "src/test/ui/associated-types/issue-27675-unchecked-bounds.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fassociated-types%2Fissue-27675-unchecked-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fassociated-types%2Fissue-27675-unchecked-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-27675-unchecked-bounds.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     copy::<dyn Setup<From=T>>(t)\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | pub fn copy_any<T: Copy>(t: &T) -> T {\n-   |                  ^^^^^^\n+LL | pub fn copy_any<T: std::marker::Copy>(t: &T) -> T {\n+   |                  ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "0e653a7d3b22fd531972e7d26fb0119aa180b5e1", "filename": "src/test/ui/associated-types/issue-43784-associated-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fassociated-types%2Fissue-43784-associated-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fassociated-types%2Fissue-43784-associated-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-43784-associated-type.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     type Assoc = T;\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Copy> Complete for T {\n-   |       ^^^^^^\n+LL | impl<T: std::marker::Copy> Complete for T {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "5f39cf6dde1258d5cc28f51e82d5a6954c143b3b", "filename": "src/test/ui/async-await/issue-70818.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fasync-await%2Fissue-70818.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fasync-await%2Fissue-70818.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-70818.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -11,8 +11,8 @@ LL |     async { (ty, ty1) }\n    |                  ^^^ has type `U` which is not `Send`\n help: consider restricting type parameter `U`\n    |\n-LL | fn foo<T: Send, U: Send>(ty: T, ty1: U) -> impl Future<Output = (T, U)> + Send {\n-   |                  ^^^^^^\n+LL | fn foo<T: Send, U: std::marker::Send>(ty: T, ty1: U) -> impl Future<Output = (T, U)> + Send {\n+   |                  ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "fd3999ae6fbeca92d9edcacbfed3794ebf0da4e2", "filename": "src/test/ui/bad/bad-method-typaram-kind.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbad%2Fbad-method-typaram-kind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbad%2Fbad-method-typaram-kind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-method-typaram-kind.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -6,8 +6,8 @@ LL |     1.bar::<T>();\n    |\n help: consider further restricting this bound\n    |\n-LL | fn foo<T:'static + Send>() {\n-   |                  ^^^^^^\n+LL | fn foo<T:'static + std::marker::Send>() {\n+   |                  ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "31fdd2b67e2944ba0a56675e9248539ad96362c9", "filename": "src/test/ui/bound-suggestions.fixed", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbound-suggestions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbound-suggestions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbound-suggestions.fixed?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -5,37 +5,37 @@ use std::fmt::Debug;\n // Rustfix should add this, or use `std::fmt::Debug` instead.\n \n #[allow(dead_code)]\n-fn test_impl(t: impl Sized + Debug) {\n+fn test_impl(t: impl Sized + std::fmt::Debug) {\n     println!(\"{:?}\", t);\n     //~^ ERROR doesn't implement\n }\n \n #[allow(dead_code)]\n-fn test_no_bounds<T: Debug>(t: T) {\n+fn test_no_bounds<T: std::fmt::Debug>(t: T) {\n     println!(\"{:?}\", t);\n     //~^ ERROR doesn't implement\n }\n \n #[allow(dead_code)]\n-fn test_one_bound<T: Sized + Debug>(t: T) {\n+fn test_one_bound<T: Sized + std::fmt::Debug>(t: T) {\n     println!(\"{:?}\", t);\n     //~^ ERROR doesn't implement\n }\n \n #[allow(dead_code)]\n-fn test_no_bounds_where<X, Y>(x: X, y: Y) where X: std::fmt::Debug, Y: Debug {\n+fn test_no_bounds_where<X, Y>(x: X, y: Y) where X: std::fmt::Debug, Y: std::fmt::Debug {\n     println!(\"{:?} {:?}\", x, y);\n     //~^ ERROR doesn't implement\n }\n \n #[allow(dead_code)]\n-fn test_one_bound_where<X>(x: X) where X: Sized + Debug {\n+fn test_one_bound_where<X>(x: X) where X: Sized + std::fmt::Debug {\n     println!(\"{:?}\", x);\n     //~^ ERROR doesn't implement\n }\n \n #[allow(dead_code)]\n-fn test_many_bounds_where<X>(x: X) where X: Sized, X: Sized, X: Debug {\n+fn test_many_bounds_where<X>(x: X) where X: Sized, X: Sized, X: std::fmt::Debug {\n     println!(\"{:?}\", x);\n     //~^ ERROR doesn't implement\n }"}, {"sha": "ebf43bdb2717cc2a34f691171ecbb6975c7b9b0b", "filename": "src/test/ui/bound-suggestions.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbound-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbound-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbound-suggestions.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -8,8 +8,8 @@ LL |     println!(\"{:?}\", t);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |\n-LL | fn test_impl(t: impl Sized + Debug) {\n-   |                            ^^^^^^^\n+LL | fn test_impl(t: impl Sized + std::fmt::Debug) {\n+   |                            ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `T` doesn't implement `Debug`\n   --> $DIR/bound-suggestions.rs:15:22\n@@ -21,8 +21,8 @@ LL |     println!(\"{:?}\", t);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider restricting type parameter `T`\n    |\n-LL | fn test_no_bounds<T: Debug>(t: T) {\n-   |                    ^^^^^^^\n+LL | fn test_no_bounds<T: std::fmt::Debug>(t: T) {\n+   |                    ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `T` doesn't implement `Debug`\n   --> $DIR/bound-suggestions.rs:21:22\n@@ -34,8 +34,8 @@ LL |     println!(\"{:?}\", t);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |\n-LL | fn test_one_bound<T: Sized + Debug>(t: T) {\n-   |                            ^^^^^^^\n+LL | fn test_one_bound<T: Sized + std::fmt::Debug>(t: T) {\n+   |                            ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `Y` doesn't implement `Debug`\n   --> $DIR/bound-suggestions.rs:27:30\n@@ -47,8 +47,8 @@ LL |     println!(\"{:?} {:?}\", x, y);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting type parameter `Y`\n    |\n-LL | fn test_no_bounds_where<X, Y>(x: X, y: Y) where X: std::fmt::Debug, Y: Debug {\n-   |                                                                   ^^^^^^^^^^\n+LL | fn test_no_bounds_where<X, Y>(x: X, y: Y) where X: std::fmt::Debug, Y: std::fmt::Debug {\n+   |                                                                   ^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `X` doesn't implement `Debug`\n   --> $DIR/bound-suggestions.rs:33:22\n@@ -60,8 +60,8 @@ LL |     println!(\"{:?}\", x);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |\n-LL | fn test_one_bound_where<X>(x: X) where X: Sized + Debug {\n-   |                                                 ^^^^^^^\n+LL | fn test_one_bound_where<X>(x: X) where X: Sized + std::fmt::Debug {\n+   |                                                 ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `X` doesn't implement `Debug`\n   --> $DIR/bound-suggestions.rs:39:22\n@@ -73,8 +73,8 @@ LL |     println!(\"{:?}\", x);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting type parameter `X`\n    |\n-LL | fn test_many_bounds_where<X>(x: X) where X: Sized, X: Sized, X: Debug {\n-   |                                                            ^^^^^^^^^^\n+LL | fn test_many_bounds_where<X>(x: X) where X: Sized, X: Sized, X: std::fmt::Debug {\n+   |                                                            ^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the size for values of type `Self` cannot be known at compilation time\n   --> $DIR/bound-suggestions.rs:44:46"}, {"sha": "7ff986ec38109d78b3829d5cff702a0f851bf95a", "filename": "src/test/ui/builtin-superkinds/builtin-superkinds-double-superkind.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-double-superkind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-double-superkind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-double-superkind.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -10,8 +10,8 @@ LL | impl <T: Sync+'static> Foo for (T,) { }\n    = note: required because it appears within the type `(T,)`\n help: consider further restricting this bound\n    |\n-LL | impl <T: Sync+'static + Send> Foo for (T,) { }\n-   |                       ^^^^^^\n+LL | impl <T: Sync+'static + std::marker::Send> Foo for (T,) { }\n+   |                       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `T` cannot be shared between threads safely\n   --> $DIR/builtin-superkinds-double-superkind.rs:9:16\n@@ -25,8 +25,8 @@ LL | impl <T: Send> Foo for (T,T) { }\n    = note: required because it appears within the type `(T, T)`\n help: consider further restricting this bound\n    |\n-LL | impl <T: Send + Sync> Foo for (T,T) { }\n-   |               ^^^^^^\n+LL | impl <T: Send + std::marker::Sync> Foo for (T,T) { }\n+   |               ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "133508d39c105c7d656719c1f6989b60d0c867e0", "filename": "src/test/ui/builtin-superkinds/builtin-superkinds-in-metadata.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-in-metadata.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-in-metadata.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-in-metadata.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -12,8 +12,8 @@ LL | pub trait RequiresRequiresShareAndSend : RequiresShare + Send { }\n    = note: required because it appears within the type `X<T>`\n help: consider further restricting this bound\n    |\n-LL | impl <T:Sync+'static + Send> RequiresRequiresShareAndSend for X<T> { }\n-   |                      ^^^^^^\n+LL | impl <T:Sync+'static + std::marker::Send> RequiresRequiresShareAndSend for X<T> { }\n+   |                      ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "ad80b3fa8d11f39b97a2ad145e7162d0a988ec65", "filename": "src/test/ui/builtin-superkinds/builtin-superkinds-typaram-not-send.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-typaram-not-send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-typaram-not-send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbuiltin-superkinds%2Fbuiltin-superkinds-typaram-not-send.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | impl <T: Sync+'static> Foo for T { }\n    |\n help: consider further restricting this bound\n    |\n-LL | impl <T: Sync+'static + Send> Foo for T { }\n-   |                       ^^^^^^\n+LL | impl <T: Sync+'static + std::marker::Send> Foo for T { }\n+   |                       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "300f67e8b1e811db3e101a203eabf51a517132e3", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/insignificant_drop.fixed", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.fixed?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,133 @@\n+// run-rustfix\n+\n+#![deny(disjoint_capture_drop_reorder)]\n+//~^ NOTE: the lint level is defined here\n+\n+// Test cases for types that implement a insignificant drop (stlib defined)\n+\n+// `t` needs Drop because one of its elements needs drop,\n+// therefore precise capture might affect drop ordering\n+fn test1_all_need_migration() {\n+    let t = (String::new(), String::new());\n+    let t1 = (String::new(), String::new());\n+    let t2 = (String::new(), String::new());\n+\n+    let c = || { let _ = (&t, &t1, &t2); \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n+\n+        let _t = t.0;\n+        let _t1 = t1.0;\n+        let _t2 = t2.0;\n+    };\n+\n+    c();\n+}\n+\n+// String implements drop and therefore should be migrated.\n+// But in this test cases, `t2` is completely captured and when it is dropped won't be affected\n+fn test2_only_precise_paths_need_migration() {\n+    let t = (String::new(), String::new());\n+    let t1 = (String::new(), String::new());\n+    let t2 = (String::new(), String::new());\n+\n+    let c = || { let _ = (&t, &t1); \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1` to be fully captured\n+        let _t = t.0;\n+        let _t1 = t1.0;\n+        let _t2 = t2;\n+    };\n+\n+    c();\n+}\n+\n+// If a variable would've not been captured by value then it would've not been\n+// dropped with the closure and therefore doesn't need migration.\n+fn test3_only_by_value_need_migration() {\n+    let t = (String::new(), String::new());\n+    let t1 = (String::new(), String::new());\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+        println!(\"{}\", t1.1);\n+    };\n+\n+    c();\n+}\n+\n+// Copy types get copied into the closure instead of move. Therefore we don't need to\n+// migrate then as their drop order isn't tied to the closure.\n+fn test4_only_non_copy_types_need_migration() {\n+    let t = (String::new(), String::new());\n+\n+    // `t1` is Copy because all of its elements are Copy\n+    let t1 = (0i32, 0i32);\n+\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+        let _t1 = t1.0;\n+    };\n+\n+    c();\n+}\n+\n+fn test5_only_drop_types_need_migration() {\n+    struct S(i32, i32);\n+\n+    let t = (String::new(), String::new());\n+\n+    // `s` doesn't implement Drop or any elements within it, and doesn't need migration\n+    let s = S(0i32, 0i32);\n+\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+        let _s = s.0;\n+    };\n+\n+    c();\n+}\n+\n+// Since we are using a move closure here, both `t` and `t1` get moved\n+// even though they are being used by ref inside the closure.\n+fn test6_move_closures_non_copy_types_might_need_migration() {\n+    let t = (String::new(), String::new());\n+    let t1 = (String::new(), String::new());\n+    let c = move || { let _ = (&t1, &t); \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t1`, `t` to be fully captured\n+        println!(\"{} {}\", t1.1, t.1);\n+    };\n+\n+    c();\n+}\n+\n+// Test migration analysis in case of Drop + Non Drop aggregates.\n+// Note we need migration here only because the non-copy (because Drop type) is captured,\n+// otherwise we won't need to, since we can get away with just by ref capture in that case.\n+fn test7_drop_non_drop_aggregate_need_migration() {\n+    let t = (String::new(), String::new(), 0i32);\n+\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+    };\n+\n+    c();\n+}\n+\n+fn main() {\n+    test1_all_need_migration();\n+    test2_only_precise_paths_need_migration();\n+    test3_only_by_value_need_migration();\n+    test4_only_non_copy_types_need_migration();\n+    test5_only_drop_types_need_migration();\n+    test6_move_closures_non_copy_types_might_need_migration();\n+    test7_drop_non_drop_aggregate_need_migration();\n+}"}, {"sha": "a17c70d3e287780e0355a17c072cc11ff708f5c3", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/insignificant_drop.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+\n #![deny(disjoint_capture_drop_reorder)]\n //~^ NOTE: the lint level is defined here\n \n@@ -11,8 +13,9 @@ fn test1_all_need_migration() {\n     let t2 = (String::new(), String::new());\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t, t1, t2));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n+\n         let _t = t.0;\n         let _t1 = t1.0;\n         let _t2 = t2.0;\n@@ -29,8 +32,8 @@ fn test2_only_precise_paths_need_migration() {\n     let t2 = (String::new(), String::new());\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t, t1));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1` to be fully captured\n         let _t = t.0;\n         let _t1 = t1.0;\n         let _t2 = t2;\n@@ -45,8 +48,8 @@ fn test3_only_by_value_need_migration() {\n     let t = (String::new(), String::new());\n     let t1 = (String::new(), String::new());\n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n         println!(\"{}\", t1.1);\n     };\n@@ -63,8 +66,8 @@ fn test4_only_non_copy_types_need_migration() {\n     let t1 = (0i32, 0i32);\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n         let _t1 = t1.0;\n     };\n@@ -81,8 +84,8 @@ fn test5_only_drop_types_need_migration() {\n     let s = S(0i32, 0i32);\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n         let _s = s.0;\n     };\n@@ -96,8 +99,8 @@ fn test6_move_closures_non_copy_types_might_need_migration() {\n     let t = (String::new(), String::new());\n     let t1 = (String::new(), String::new());\n     let c = move || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t1, t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t1`, `t` to be fully captured\n         println!(\"{} {}\", t1.1, t.1);\n     };\n \n@@ -111,8 +114,8 @@ fn test7_drop_non_drop_aggregate_need_migration() {\n     let t = (String::new(), String::new(), 0i32);\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n     };\n "}, {"sha": "69c12d2bb56c0f914eba16073767067714c9e0d0", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/insignificant_drop.stderr", "status": "modified", "additions": 71, "deletions": 17, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Finsignificant_drop.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1,25 +1,33 @@\n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/insignificant_drop.rs:13:13\n+  --> $DIR/insignificant_drop.rs:15:13\n    |\n LL |       let c = || {\n    |  _____________^\n LL | |\n LL | |\n-LL | |         let _t = t.0;\n-LL | |         let _t1 = t1.0;\n+LL | |\n+...  |\n LL | |         let _t2 = t2.0;\n LL | |     };\n    | |_____^\n    |\n note: the lint level is defined here\n-  --> $DIR/insignificant_drop.rs:1:9\n+  --> $DIR/insignificant_drop.rs:3:9\n    |\n LL | #![deny(disjoint_capture_drop_reorder)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: drop(&(t, t1, t2));\n+help: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n+   |\n+LL |     let c = || { let _ = (&t, &t1, &t2); \n+LL |\n+LL |\n+LL | \n+LL |         let _t = t.0;\n+LL |         let _t1 = t1.0;\n+ ...\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/insignificant_drop.rs:31:13\n+  --> $DIR/insignificant_drop.rs:34:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -31,10 +39,18 @@ LL | |         let _t2 = t2;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t, t1));\n+help: add a dummy let to cause `t`, `t1` to be fully captured\n+   |\n+LL |     let c = || { let _ = (&t, &t1); \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         let _t1 = t1.0;\n+LL |         let _t2 = t2;\n+ ...\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/insignificant_drop.rs:47:13\n+  --> $DIR/insignificant_drop.rs:50:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -45,10 +61,18 @@ LL | |         println!(\"{}\", t1.1);\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         println!(\"{}\", t1.1);\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/insignificant_drop.rs:65:13\n+  --> $DIR/insignificant_drop.rs:68:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -59,10 +83,18 @@ LL | |         let _t1 = t1.0;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         let _t1 = t1.0;\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/insignificant_drop.rs:83:13\n+  --> $DIR/insignificant_drop.rs:86:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -73,10 +105,18 @@ LL | |         let _s = s.0;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         let _s = s.0;\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/insignificant_drop.rs:98:13\n+  --> $DIR/insignificant_drop.rs:101:13\n    |\n LL |       let c = move || {\n    |  _____________^\n@@ -86,10 +126,17 @@ LL | |         println!(\"{} {}\", t1.1, t.1);\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t1, t));\n+help: add a dummy let to cause `t1`, `t` to be fully captured\n+   |\n+LL |     let c = move || { let _ = (&t1, &t); \n+LL |\n+LL |\n+LL |         println!(\"{} {}\", t1.1, t.1);\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/insignificant_drop.rs:113:13\n+  --> $DIR/insignificant_drop.rs:116:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -99,7 +146,14 @@ LL | |         let _t = t.0;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |     };\n+   |\n \n error: aborting due to 7 previous errors\n "}, {"sha": "a3e51a2b8e91af1c264f196dc7f19ddceb7e1c40", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/migrations_rustfix.fixed", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.fixed?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,40 @@\n+// run-rustfix\n+#![deny(disjoint_capture_drop_reorder)]\n+//~^ NOTE: the lint level is defined here\n+\n+// Test the two possible cases for automated migartion using rustfix\n+// - Closure contains a block i.e.  `|| { .. };`\n+// - Closure contains just an expr `|| ..;`\n+\n+#[derive(Debug)]\n+struct Foo(i32);\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"{:?} dropped\", self.0);\n+    }\n+}\n+\n+fn closure_contains_block() {\n+    let t = (Foo(0), Foo(0));\n+    let c = || { let _ = &t; \n+        //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+        //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+    };\n+\n+    c();\n+}\n+\n+fn closure_doesnt_contain_block() {\n+    let t = (Foo(0), Foo(0));\n+    let c = || { let _ = &t; t.0 };\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+\n+    c();\n+}\n+\n+fn main() {\n+    closure_contains_block();\n+    closure_doesnt_contain_block();\n+}"}, {"sha": "0eb837b6888350413e5d74a7d3bf7680a1ccb016", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/migrations_rustfix.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,40 @@\n+// run-rustfix\n+#![deny(disjoint_capture_drop_reorder)]\n+//~^ NOTE: the lint level is defined here\n+\n+// Test the two possible cases for automated migartion using rustfix\n+// - Closure contains a block i.e.  `|| { .. };`\n+// - Closure contains just an expr `|| ..;`\n+\n+#[derive(Debug)]\n+struct Foo(i32);\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"{:?} dropped\", self.0);\n+    }\n+}\n+\n+fn closure_contains_block() {\n+    let t = (Foo(0), Foo(0));\n+    let c = || {\n+        //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+        //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+    };\n+\n+    c();\n+}\n+\n+fn closure_doesnt_contain_block() {\n+    let t = (Foo(0), Foo(0));\n+    let c = || t.0;\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+\n+    c();\n+}\n+\n+fn main() {\n+    closure_contains_block();\n+    closure_doesnt_contain_block();\n+}"}, {"sha": "e6173217edc2fb9b95cb4b46ddb626e4136a3773", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/migrations_rustfix.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fmigrations_rustfix.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,38 @@\n+error: drop order affected for closure because of `capture_disjoint_fields`\n+  --> $DIR/migrations_rustfix.rs:19:13\n+   |\n+LL |       let c = || {\n+   |  _____________^\n+LL | |\n+LL | |\n+LL | |         let _t = t.0;\n+LL | |     };\n+   | |_____^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/migrations_rustfix.rs:2:9\n+   |\n+LL | #![deny(disjoint_capture_drop_reorder)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |     };\n+   |\n+\n+error: drop order affected for closure because of `capture_disjoint_fields`\n+  --> $DIR/migrations_rustfix.rs:30:13\n+   |\n+LL |     let c = || t.0;\n+   |             ^^^^^^\n+   |\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; t.0 };\n+   |                ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "b739035c784223ffd5d5ba38f89b5b677deea308", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/precise.fixed", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.fixed?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,56 @@\n+// run-rustfix\n+\n+#![deny(disjoint_capture_drop_reorder)]\n+\n+#[derive(Debug)]\n+struct Foo(i32);\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"{:?} dropped\", self.0);\n+    }\n+}\n+\n+struct ConstainsDropField(Foo, Foo);\n+\n+// Test that lint is triggered if a path that implements Drop is not captured by move\n+fn test_precise_analysis_drop_paths_not_captured_by_move() {\n+    let t = ConstainsDropField(Foo(10), Foo(20));\n+\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+        let _t = &t.1;\n+    };\n+\n+    c();\n+}\n+\n+struct S;\n+impl Drop for S {\n+    fn drop(&mut self) {\n+    }\n+}\n+\n+struct T(S, S);\n+struct U(T, T);\n+\n+// Test precise analysis for the lint works with paths longer than one.\n+fn test_precise_analysis_long_path_missing() {\n+    let u = U(T(S, S), T(S, S));\n+\n+    let c = || { let _ = &u; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `u` to be fully captured\n+        let _x = u.0.0;\n+        let _x = u.0.1;\n+        let _x = u.1.0;\n+    };\n+\n+    c();\n+}\n+\n+fn main() {\n+    test_precise_analysis_drop_paths_not_captured_by_move();\n+    test_precise_analysis_long_path_missing();\n+}"}, {"sha": "e1f29c9d0e9d8cb9544bb6712fbf3e7d112709b7", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/precise.rs", "status": "modified", "additions": 6, "deletions": 28, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1,5 +1,6 @@\n+// run-rustfix\n+\n #![deny(disjoint_capture_drop_reorder)]\n-//~^ NOTE: the lint level is defined here\n \n #[derive(Debug)]\n struct Foo(i32);\n@@ -11,35 +12,13 @@ impl Drop for Foo {\n \n struct ConstainsDropField(Foo, Foo);\n \n-#[derive(Debug)]\n-struct ContainsAndImplsDrop(Foo);\n-impl Drop for ContainsAndImplsDrop {\n-    fn drop(&mut self) {\n-        println!(\"{:?} dropped\", self.0);\n-    }\n-}\n-\n-// Test that even if all paths starting at root variable that implement Drop are captured,\n-// the lint is triggered if the root variable implements drop and isn't captured.\n-fn test_precise_analysis_parent_root_impl_drop_not_captured() {\n-    let t = ContainsAndImplsDrop(Foo(10));\n-\n-    let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n-        let _t = t.0;\n-    };\n-\n-    c();\n-}\n-\n // Test that lint is triggered if a path that implements Drop is not captured by move\n fn test_precise_analysis_drop_paths_not_captured_by_move() {\n     let t = ConstainsDropField(Foo(10), Foo(20));\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n         let _t = &t.1;\n     };\n@@ -61,8 +40,8 @@ fn test_precise_analysis_long_path_missing() {\n     let u = U(T(S, S), T(S, S));\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(u));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `u` to be fully captured\n         let _x = u.0.0;\n         let _x = u.0.1;\n         let _x = u.1.0;\n@@ -72,7 +51,6 @@ fn test_precise_analysis_long_path_missing() {\n }\n \n fn main() {\n-    test_precise_analysis_parent_root_impl_drop_not_captured();\n     test_precise_analysis_drop_paths_not_captured_by_move();\n     test_precise_analysis_long_path_missing();\n }"}, {"sha": "7135ded13c2563a6d104c7f6d30f643d7b3c5986", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/precise.stderr", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fprecise.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1,37 +1,32 @@\n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/precise.rs:27:13\n+  --> $DIR/precise.rs:19:13\n    |\n LL |       let c = || {\n    |  _____________^\n LL | |\n LL | |\n LL | |         let _t = t.0;\n+LL | |         let _t = &t.1;\n LL | |     };\n    | |_____^\n    |\n note: the lint level is defined here\n-  --> $DIR/precise.rs:1:9\n+  --> $DIR/precise.rs:3:9\n    |\n LL | #![deny(disjoint_capture_drop_reorder)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: drop(&(t));\n-\n-error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/precise.rs:40:13\n+help: add a dummy let to cause `t` to be fully captured\n    |\n-LL |       let c = || {\n-   |  _____________^\n-LL | |\n-LL | |\n-LL | |         let _t = t.0;\n-LL | |         let _t = &t.1;\n-LL | |     };\n-   | |_____^\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         let _t = &t.1;\n+LL |     };\n    |\n-   = note: drop(&(t));\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/precise.rs:63:13\n+  --> $DIR/precise.rs:42:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -43,7 +38,15 @@ LL | |         let _x = u.1.0;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(u));\n+help: add a dummy let to cause `u` to be fully captured\n+   |\n+LL |     let c = || { let _ = &u; \n+LL |\n+LL |\n+LL |         let _x = u.0.0;\n+LL |         let _x = u.0.1;\n+LL |         let _x = u.1.0;\n+ ...\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n "}, {"sha": "e1b212153f431053fb8ce06ddd176a021a589bb1", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/significant_drop.fixed", "status": "added", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.fixed?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -0,0 +1,136 @@\n+// run-rustfix\n+#![deny(disjoint_capture_drop_reorder)]\n+//~^ NOTE: the lint level is defined here\n+\n+// Test cases for types that implement a significant drop (user defined)\n+\n+#[derive(Debug)]\n+struct Foo(i32);\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"{:?} dropped\", self.0);\n+    }\n+}\n+\n+#[derive(Debug)]\n+struct ConstainsDropField(Foo, Foo);\n+\n+// `t` needs Drop because one of its elements needs drop,\n+// therefore precise capture might affect drop ordering\n+fn test1_all_need_migration() {\n+    let t = (Foo(0), Foo(0));\n+    let t1 = (Foo(0), Foo(0));\n+    let t2 = (Foo(0), Foo(0));\n+\n+    let c = || { let _ = (&t, &t1, &t2); \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n+        let _t = t.0;\n+        let _t1 = t1.0;\n+        let _t2 = t2.0;\n+    };\n+\n+    c();\n+}\n+\n+// String implements drop and therefore should be migrated.\n+// But in this test cases, `t2` is completely captured and when it is dropped won't be affected\n+fn test2_only_precise_paths_need_migration() {\n+    let t = (Foo(0), Foo(0));\n+    let t1 = (Foo(0), Foo(0));\n+    let t2 = (Foo(0), Foo(0));\n+\n+    let c = || { let _ = (&t, &t1); \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1` to be fully captured\n+        let _t = t.0;\n+        let _t1 = t1.0;\n+        let _t2 = t2;\n+    };\n+\n+    c();\n+}\n+\n+// If a variable would've not been captured by value then it would've not been\n+// dropped with the closure and therefore doesn't need migration.\n+fn test3_only_by_value_need_migration() {\n+    let t = (Foo(0), Foo(0));\n+    let t1 = (Foo(0), Foo(0));\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+        println!(\"{:?}\", t1.1);\n+    };\n+\n+    c();\n+}\n+\n+// The root variable might not implement drop themselves but some path starting\n+// at the root variable might implement Drop.\n+//\n+// If this path isn't captured we need to migrate for the root variable.\n+fn test4_type_contains_drop_need_migration() {\n+    let t = ConstainsDropField(Foo(0), Foo(0));\n+\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+    };\n+\n+    c();\n+}\n+\n+// Test migration analysis in case of Drop + Non Drop aggregates.\n+// Note we need migration here only because the non-copy (because Drop type) is captured,\n+// otherwise we won't need to, since we can get away with just by ref capture in that case.\n+fn test5_drop_non_drop_aggregate_need_migration() {\n+    let t = (Foo(0), Foo(0), 0i32);\n+\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.0;\n+    };\n+\n+    c();\n+}\n+\n+// Test migration analysis in case of Significant and Insignificant Drop aggregates.\n+fn test6_significant_insignificant_drop_aggregate_need_migration() {\n+    let t = (Foo(0), String::new());\n+\n+    let c = || { let _ = &t; \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n+        let _t = t.1;\n+    };\n+\n+    c();\n+}\n+\n+// Since we are using a move closure here, both `t` and `t1` get moved\n+// even though they are being used by ref inside the closure.\n+fn test7_move_closures_non_copy_types_might_need_migration() {\n+    let t = (Foo(0), Foo(0));\n+    let t1 = (Foo(0), Foo(0), Foo(0));\n+\n+    let c = move || { let _ = (&t1, &t); \n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t1`, `t` to be fully captured\n+        println!(\"{:?} {:?}\", t1.1, t.1);\n+    };\n+\n+    c();\n+}\n+\n+fn main() {\n+    test1_all_need_migration();\n+    test2_only_precise_paths_need_migration();\n+    test3_only_by_value_need_migration();\n+    test4_type_contains_drop_need_migration();\n+    test5_drop_non_drop_aggregate_need_migration();\n+    test6_significant_insignificant_drop_aggregate_need_migration();\n+    test7_move_closures_non_copy_types_might_need_migration();\n+}"}, {"sha": "106b2933515156249b2946595722b10504d115d8", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/significant_drop.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.rs?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1,3 +1,4 @@\n+// run-rustfix\n #![deny(disjoint_capture_drop_reorder)]\n //~^ NOTE: the lint level is defined here\n \n@@ -22,8 +23,8 @@ fn test1_all_need_migration() {\n     let t2 = (Foo(0), Foo(0));\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t, t1, t2));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n         let _t = t.0;\n         let _t1 = t1.0;\n         let _t2 = t2.0;\n@@ -40,8 +41,8 @@ fn test2_only_precise_paths_need_migration() {\n     let t2 = (Foo(0), Foo(0));\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t, t1));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t`, `t1` to be fully captured\n         let _t = t.0;\n         let _t1 = t1.0;\n         let _t2 = t2;\n@@ -56,8 +57,8 @@ fn test3_only_by_value_need_migration() {\n     let t = (Foo(0), Foo(0));\n     let t1 = (Foo(0), Foo(0));\n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n         println!(\"{:?}\", t1.1);\n     };\n@@ -73,8 +74,8 @@ fn test4_type_contains_drop_need_migration() {\n     let t = ConstainsDropField(Foo(0), Foo(0));\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n     };\n \n@@ -88,8 +89,8 @@ fn test5_drop_non_drop_aggregate_need_migration() {\n     let t = (Foo(0), Foo(0), 0i32);\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.0;\n     };\n \n@@ -98,13 +99,11 @@ fn test5_drop_non_drop_aggregate_need_migration() {\n \n // Test migration analysis in case of Significant and Insignificant Drop aggregates.\n fn test6_significant_insignificant_drop_aggregate_need_migration() {\n-    struct S(i32, i32);\n-\n     let t = (Foo(0), String::new());\n \n     let c = || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t` to be fully captured\n         let _t = t.1;\n     };\n \n@@ -118,8 +117,8 @@ fn test7_move_closures_non_copy_types_might_need_migration() {\n     let t1 = (Foo(0), Foo(0), Foo(0));\n \n     let c = move || {\n-    //~^ERROR: drop order affected for closure because of `capture_disjoint_fields`\n-    //~| NOTE: drop(&(t1, t));\n+    //~^ ERROR: drop order affected for closure because of `capture_disjoint_fields`\n+    //~| HELP: add a dummy let to cause `t1`, `t` to be fully captured\n         println!(\"{:?} {:?}\", t1.1, t.1);\n     };\n "}, {"sha": "ee29fe1306059377efa3d28209282d9fd2bb92c5", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/significant_drop.stderr", "status": "modified", "additions": 67, "deletions": 15, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fsignificant_drop.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -1,5 +1,5 @@\n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/significant_drop.rs:24:13\n+  --> $DIR/significant_drop.rs:25:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -12,14 +12,22 @@ LL | |     };\n    | |_____^\n    |\n note: the lint level is defined here\n-  --> $DIR/significant_drop.rs:1:9\n+  --> $DIR/significant_drop.rs:2:9\n    |\n LL | #![deny(disjoint_capture_drop_reorder)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = note: drop(&(t, t1, t2));\n+help: add a dummy let to cause `t`, `t1`, `t2` to be fully captured\n+   |\n+LL |     let c = || { let _ = (&t, &t1, &t2); \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         let _t1 = t1.0;\n+LL |         let _t2 = t2.0;\n+ ...\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/significant_drop.rs:42:13\n+  --> $DIR/significant_drop.rs:43:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -31,10 +39,18 @@ LL | |         let _t2 = t2;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t, t1));\n+help: add a dummy let to cause `t`, `t1` to be fully captured\n+   |\n+LL |     let c = || { let _ = (&t, &t1); \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         let _t1 = t1.0;\n+LL |         let _t2 = t2;\n+ ...\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/significant_drop.rs:58:13\n+  --> $DIR/significant_drop.rs:59:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -45,10 +61,18 @@ LL | |         println!(\"{:?}\", t1.1);\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |         println!(\"{:?}\", t1.1);\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/significant_drop.rs:75:13\n+  --> $DIR/significant_drop.rs:76:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -58,10 +82,17 @@ LL | |         let _t = t.0;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/significant_drop.rs:90:13\n+  --> $DIR/significant_drop.rs:91:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -71,10 +102,17 @@ LL | |         let _t = t.0;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.0;\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/significant_drop.rs:105:13\n+  --> $DIR/significant_drop.rs:104:13\n    |\n LL |       let c = || {\n    |  _____________^\n@@ -84,10 +122,17 @@ LL | |         let _t = t.1;\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t));\n+help: add a dummy let to cause `t` to be fully captured\n+   |\n+LL |     let c = || { let _ = &t; \n+LL |\n+LL |\n+LL |         let _t = t.1;\n+LL |     };\n+   |\n \n error: drop order affected for closure because of `capture_disjoint_fields`\n-  --> $DIR/significant_drop.rs:120:13\n+  --> $DIR/significant_drop.rs:119:13\n    |\n LL |       let c = move || {\n    |  _____________^\n@@ -97,7 +142,14 @@ LL | |         println!(\"{:?} {:?}\", t1.1, t.1);\n LL | |     };\n    | |_____^\n    |\n-   = note: drop(&(t1, t));\n+help: add a dummy let to cause `t1`, `t` to be fully captured\n+   |\n+LL |     let c = move || { let _ = (&t1, &t); \n+LL |\n+LL |\n+LL |         println!(\"{:?} {:?}\", t1.1, t.1);\n+LL |     };\n+   |\n \n error: aborting due to 7 previous errors\n "}, {"sha": "273eae995538a7dc0b62ce3b833d9fb5d9967437", "filename": "src/test/ui/closures/closure-bounds-cant-promote-superkind-in-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-cant-promote-superkind-in-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-cant-promote-superkind-in-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-cant-promote-superkind-in-struct.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | fn foo<F>(blk: F) -> X<F> where F: FnOnce() + 'static {\n    |\n help: consider further restricting this bound\n    |\n-LL | fn foo<F>(blk: F) -> X<F> where F: FnOnce() + 'static + Send {\n-   |                                                       ^^^^^^\n+LL | fn foo<F>(blk: F) -> X<F> where F: FnOnce() + 'static + std::marker::Send {\n+   |                                                       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "7df29d5a098a02896f34bdf666fa479421c7b764", "filename": "src/test/ui/closures/closure-bounds-subtype.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-subtype.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-subtype.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-bounds-subtype.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     take_const_owned(f);\n    |\n help: consider further restricting this bound\n    |\n-LL | fn give_owned<F>(f: F) where F: FnOnce() + Send + Sync {\n-   |                                                 ^^^^^^\n+LL | fn give_owned<F>(f: F) where F: FnOnce() + Send + std::marker::Sync {\n+   |                                                 ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "c6088e665a2322be58e28543e63d7ac274441f8f", "filename": "src/test/ui/const-generics/const-argument-if-length.full.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.full.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/const-argument-if-length.rs:7:28\n    |\n LL | pub const fn is_zst<T: ?Sized>() -> usize {\n-   |                     - this type parameter needs to be `Sized`\n+   |                     - this type parameter needs to be `std::marker::Sized`\n LL |     if std::mem::size_of::<T>() == 0 {\n    |                            ^ doesn't have a size known at compile-time\n    | \n@@ -15,7 +15,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/const-argument-if-length.rs:16:12\n    |\n LL | pub struct AtLeastByte<T: ?Sized> {\n-   |                        - this type parameter needs to be `Sized`\n+   |                        - this type parameter needs to be `std::marker::Sized`\n LL |     value: T,\n    |            ^ doesn't have a size known at compile-time\n    |"}, {"sha": "bc06e8d7fb123fb649537a8ca37a92a79b43515a", "filename": "src/test/ui/const-generics/const-argument-if-length.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-argument-if-length.min.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -11,7 +11,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/const-argument-if-length.rs:16:12\n    |\n LL | pub struct AtLeastByte<T: ?Sized> {\n-   |                        - this type parameter needs to be `Sized`\n+   |                        - this type parameter needs to be `std::marker::Sized`\n LL |     value: T,\n    |            ^ doesn't have a size known at compile-time\n    |"}, {"sha": "ef0cafcb9bb7c54fadb4f8ed8b18bfc829a2bf6b", "filename": "src/test/ui/const-generics/issues/issue-61336-2.full.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.full.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -16,8 +16,8 @@ LL |     [x; { N }]\n    = note: the `Copy` trait is required because the repeated element will be copied\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Copy, const N: usize>(x: T) -> [T; N] {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "e5fe50513aaf7563964ab6cd7baf8b72e7d9a71d", "filename": "src/test/ui/const-generics/issues/issue-61336-2.min.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.min.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,8 +7,8 @@ LL |     [x; { N }]\n    = note: the `Copy` trait is required because the repeated element will be copied\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Copy, const N: usize>(x: T) -> [T; N] {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "fcfd39387c2934ead97f87dfa61cd00a396018ea", "filename": "src/test/ui/const-generics/issues/issue-61336.full.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.full.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -16,8 +16,8 @@ LL |     [x; N]\n    = note: the `Copy` trait is required because the repeated element will be copied\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Copy, const N: usize>(x: T) -> [T; N] {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "91580313e1e83b38c637b948774763f45ac5c267", "filename": "src/test/ui/const-generics/issues/issue-61336.min.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.min.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,8 +7,8 @@ LL |     [x; N]\n    = note: the `Copy` trait is required because the repeated element will be copied\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Copy, const N: usize>(x: T) -> [T; N] {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "2d12265df98ed320faeb3f68f0eecbdce0574b55", "filename": "src/test/ui/dst/dst-object-from-unsized-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fdst%2Fdst-object-from-unsized-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fdst%2Fdst-object-from-unsized-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdst%2Fdst-object-from-unsized-type.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/dst-object-from-unsized-type.rs:8:23\n    |\n LL | fn test1<T: ?Sized + Foo>(t: &T) {\n-   |          - this type parameter needs to be `Sized`\n+   |          - this type parameter needs to be `std::marker::Sized`\n LL |     let u: &dyn Foo = t;\n    |                       ^ doesn't have a size known at compile-time\n    |\n@@ -12,7 +12,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/dst-object-from-unsized-type.rs:13:23\n    |\n LL | fn test2<T: ?Sized + Foo>(t: &T) {\n-   |          - this type parameter needs to be `Sized`\n+   |          - this type parameter needs to be `std::marker::Sized`\n LL |     let v: &dyn Foo = t as &dyn Foo;\n    |                       ^ doesn't have a size known at compile-time\n    |"}, {"sha": "4afbde5021f917be1a9d4367dfbb7187a012f151", "filename": "src/test/ui/feature-gates/feature-gate-generic_associated_types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -69,8 +69,8 @@ LL |     type Pointer2<U32> = Box<U32>;\n    |\n help: consider restricting type parameter `U32`\n    |\n-LL |     type Pointer2<U32: Clone> = Box<U32>;\n-   |                      ^^^^^^^\n+LL |     type Pointer2<U32: std::clone::Clone> = Box<U32>;\n+   |                      ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors\n "}, {"sha": "e3d3de8bf9417d0c2ca1dcd19a8986605a6e0f14", "filename": "src/test/ui/generic-associated-types/impl_bounds.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -51,8 +51,8 @@ LL |     type C where Self: Copy = String;\n    = note: the requirement `Fooy<T>: Copy` appears on the associated impl type but not on the corresponding associated trait type\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Copy> Foo for Fooy<T> {\n-   |       ^^^^^^\n+LL | impl<T: std::marker::Copy> Foo for Fooy<T> {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "c92800c3746ade2fc44977c3c8133bd124e281b1", "filename": "src/test/ui/generic-associated-types/issue-68641-check-gat-bounds.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68641-check-gat-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68641-check-gat-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68641-check-gat-bounds.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -18,8 +18,8 @@ LL |     type Item<'a> = T;\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Copy> UnsafeCopy for T {\n-   |       ^^^^^^\n+LL | impl<T: std::marker::Copy> UnsafeCopy for T {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "e44547b10c17bd36a51d38ffdd4c3f32b348c918", "filename": "src/test/ui/generic-associated-types/issue-68642-broken-llvm-ir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68642-broken-llvm-ir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68642-broken-llvm-ir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68642-broken-llvm-ir.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL |     type F<'a> = Self;\n    = note: wrap the `T` in a closure with no arguments: `|| { /* code */ }`\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Fn<()>> Fun for T {\n-   |       ^^^^^^^^\n+LL | impl<T: std::ops::Fn<()>> Fun for T {\n+   |       ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "fd0b4733d935904bfaf9f2f57a6cdeccbdfdc40b", "filename": "src/test/ui/generic-associated-types/issue-68643-broken-mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68643-broken-mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68643-broken-mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68643-broken-mir.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL |     type F<'a> = Self;\n    = note: wrap the `T` in a closure with no arguments: `|| { /* code */ }`\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Fn<()>> Fun for T {\n-   |       ^^^^^^^^\n+LL | impl<T: std::ops::Fn<()>> Fun for T {\n+   |       ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "0c23c870f0106059397d9a7b5c67d68f978278d7", "filename": "src/test/ui/generic-associated-types/issue-68644-codegen-selection.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68644-codegen-selection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68644-codegen-selection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68644-codegen-selection.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL |     type F<'a> = Self;\n    = note: wrap the `T` in a closure with no arguments: `|| { /* code */ }`\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Fn<()>> Fun for T {\n-   |       ^^^^^^^^\n+LL | impl<T: std::ops::Fn<()>> Fun for T {\n+   |       ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "85d8d3f8e936e7358575106c198bc0ae9ba259c7", "filename": "src/test/ui/generic-associated-types/issue-68645-codegen-fulfillment.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68645-codegen-fulfillment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68645-codegen-fulfillment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-68645-codegen-fulfillment.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL |     type F<'a> = Self;\n    = note: wrap the `T` in a closure with no arguments: `|| { /* code */ }`\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Fn<()>> Fun for T {\n-   |       ^^^^^^^^\n+LL | impl<T: std::ops::Fn<()>> Fun for T {\n+   |       ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "7a7b5fd4f1c557ac7f7f7626d42282b4057f9801", "filename": "src/test/ui/generic-associated-types/issue-74824.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-74824.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-74824.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-74824.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL |     type Copy<T>: Copy = Box<T>;\n    = note: required because of the requirements on the impl of `Clone` for `Box<T>`\n help: consider restricting type parameter `T`\n    |\n-LL |     type Copy<T: Clone>: Copy = Box<T>;\n-   |                ^^^^^^^\n+LL |     type Copy<T: std::clone::Clone>: Copy = Box<T>;\n+   |                ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "67a500f34d8e77d8baf667ecfac86cef30c0c4b8", "filename": "src/test/ui/impl-trait/issue-55872-1.full_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -25,8 +25,8 @@ LL |     type E = impl Copy;\n    = note: required because it appears within the type `(S, T)`\n help: consider further restricting this bound\n    |\n-LL | impl<S: Default + Copy> Bar for S {\n-   |                 ^^^^^^\n+LL | impl<S: Default + std::marker::Copy> Bar for S {\n+   |                 ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied in `(S, T)`\n   --> $DIR/issue-55872-1.rs:14:14\n@@ -37,8 +37,8 @@ LL |     type E = impl Copy;\n    = note: required because it appears within the type `(S, T)`\n help: consider further restricting this bound\n    |\n-LL |     fn foo<T: Default + Copy>() -> Self::E {\n-   |                       ^^^^^^\n+LL |     fn foo<T: Default + std::marker::Copy>() -> Self::E {\n+   |                       ^^^^^^^^^^^^^^^^^^^\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n   --> $DIR/issue-55872-1.rs:18:37"}, {"sha": "90225d249d759ff8b13bb085fa10aa1f9650a3fe", "filename": "src/test/ui/impl-trait/issue-55872-1.min_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -16,8 +16,8 @@ LL |     type E = impl Copy;\n    = note: required because it appears within the type `(S, T)`\n help: consider further restricting this bound\n    |\n-LL | impl<S: Default + Copy> Bar for S {\n-   |                 ^^^^^^\n+LL | impl<S: Default + std::marker::Copy> Bar for S {\n+   |                 ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied in `(S, T)`\n   --> $DIR/issue-55872-1.rs:14:14\n@@ -28,8 +28,8 @@ LL |     type E = impl Copy;\n    = note: required because it appears within the type `(S, T)`\n help: consider further restricting this bound\n    |\n-LL |     fn foo<T: Default + Copy>() -> Self::E {\n-   |                       ^^^^^^\n+LL |     fn foo<T: Default + std::marker::Copy>() -> Self::E {\n+   |                       ^^^^^^^^^^^^^^^^^^^\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n   --> $DIR/issue-55872-1.rs:18:37"}, {"sha": "5dbcc96e87488440f6c70dec125ae5e6b7740289", "filename": "src/test/ui/issues/issue-27060-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fissues%2Fissue-27060-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fissues%2Fissue-27060-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27060-2.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/issue-27060-2.rs:3:11\n    |\n LL | pub struct Bad<T: ?Sized> {\n-   |                - this type parameter needs to be `Sized`\n+   |                - this type parameter needs to be `std::marker::Sized`\n LL |     data: T,\n    |           ^ doesn't have a size known at compile-time\n    |"}, {"sha": "45a2350ddfd0ed0e0403fe6f4013238769751ad3", "filename": "src/test/ui/issues/issue-43784-supertrait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fissues%2Fissue-43784-supertrait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fissues%2Fissue-43784-supertrait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43784-supertrait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | impl<T> Complete for T {}\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Copy> Complete for T {}\n-   |       ^^^^^^\n+LL | impl<T: std::marker::Copy> Complete for T {}\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e9002ec36f43d09ce1146bb12b5f9fd9a532d61e", "filename": "src/test/ui/kindck/kindck-impl-type-params.nll.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.nll.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -8,8 +8,8 @@ LL |     let a = &t as &dyn Gettable<T>;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn f<T: Send>(val: T) {\n-   |       ^^^^^^\n+LL | fn f<T: std::marker::Send>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied\n   --> $DIR/kindck-impl-type-params.rs:18:13\n@@ -21,8 +21,8 @@ LL |     let a = &t as &dyn Gettable<T>;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn f<T: Copy>(val: T) {\n-   |       ^^^^^^\n+LL | fn f<T: std::marker::Copy>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `T` cannot be sent between threads safely\n   --> $DIR/kindck-impl-type-params.rs:25:31\n@@ -34,8 +34,8 @@ LL |     let a: &dyn Gettable<T> = &t;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Send>(val: T) {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Send>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied\n   --> $DIR/kindck-impl-type-params.rs:25:31\n@@ -47,8 +47,8 @@ LL |     let a: &dyn Gettable<T> = &t;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Copy>(val: T) {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Copy>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `String: Copy` is not satisfied\n   --> $DIR/kindck-impl-type-params.rs:38:13"}, {"sha": "472a6bcafa2739d64415504722c3ad476e48e926", "filename": "src/test/ui/kindck/kindck-impl-type-params.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkindck%2Fkindck-impl-type-params.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -8,8 +8,8 @@ LL |     let a = &t as &dyn Gettable<T>;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn f<T: Send>(val: T) {\n-   |       ^^^^^^\n+LL | fn f<T: std::marker::Send>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied\n   --> $DIR/kindck-impl-type-params.rs:18:13\n@@ -21,8 +21,8 @@ LL |     let a = &t as &dyn Gettable<T>;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn f<T: Copy>(val: T) {\n-   |       ^^^^^^\n+LL | fn f<T: std::marker::Copy>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `T` cannot be sent between threads safely\n   --> $DIR/kindck-impl-type-params.rs:25:31\n@@ -34,8 +34,8 @@ LL |     let a: &dyn Gettable<T> = &t;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Send>(val: T) {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Send>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied\n   --> $DIR/kindck-impl-type-params.rs:25:31\n@@ -47,8 +47,8 @@ LL |     let a: &dyn Gettable<T> = &t;\n    = note: required for the cast to the object type `dyn Gettable<T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn g<T: Copy>(val: T) {\n-   |       ^^^^^^\n+LL | fn g<T: std::marker::Copy>(val: T) {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error[E0477]: the type `&'a isize` does not fulfill the required lifetime\n   --> $DIR/kindck-impl-type-params.rs:32:13"}, {"sha": "5a2ad637e420424c2a629f515270ba6f139ca568", "filename": "src/test/ui/phantom-auto-trait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fphantom-auto-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fphantom-auto-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fphantom-auto-trait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -12,8 +12,8 @@ LL |     is_zen(x)\n    = note: required because it appears within the type `Guard<'_, T>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn not_sync<T: Sync>(x: Guard<T>) {\n-   |              ^^^^^^\n+LL | fn not_sync<T: std::marker::Sync>(x: Guard<T>) {\n+   |              ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `T` cannot be shared between threads safely\n   --> $DIR/phantom-auto-trait.rs:26:12\n@@ -30,8 +30,8 @@ LL |     is_zen(x)\n    = note: required because it appears within the type `Nested<Guard<'_, T>>`\n help: consider restricting type parameter `T`\n    |\n-LL | fn nested_not_sync<T: Sync>(x: Nested<Guard<T>>) {\n-   |                     ^^^^^^\n+LL | fn nested_not_sync<T: std::marker::Sync>(x: Nested<Guard<T>>) {\n+   |                     ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "eb5d80bc4dda68ddb78c32da9453ce55eeb41bad", "filename": "src/test/ui/specialization/deafult-generic-associated-type-bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fspecialization%2Fdeafult-generic-associated-type-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fspecialization%2Fdeafult-generic-associated-type-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdeafult-generic-associated-type-bound.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -28,8 +28,8 @@ LL |     default type U<'a> = &'a T;\n    = note: required because of the requirements on the impl of `PartialEq` for `&'a T`\n help: consider further restricting this bound\n    |\n-LL | impl<T: 'static + PartialEq> X for T {\n-   |                 ^^^^^^^^^^^\n+LL | impl<T: 'static + std::cmp::PartialEq> X for T {\n+   |                 ^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 2 warnings emitted\n "}, {"sha": "e416f30cb415dea0aa432e78d24b91b49e684040", "filename": "src/test/ui/specialization/defaultimpl/specialization-wfcheck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-wfcheck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-wfcheck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-wfcheck.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL | default impl<U> Foo<'static, U> for () {}\n    |\n help: consider restricting type parameter `U`\n    |\n-LL | default impl<U: Eq> Foo<'static, U> for () {}\n-   |               ^^^^\n+LL | default impl<U: std::cmp::Eq> Foo<'static, U> for () {}\n+   |               ^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "5cb3a404037a718e74ef3ea2670ffb492591e9fa", "filename": "src/test/ui/suggestions/adt-param-with-implicit-sized-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fsuggestions%2Fadt-param-with-implicit-sized-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fsuggestions%2Fadt-param-with-implicit-sized-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fadt-param-with-implicit-sized-bound.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -5,7 +5,7 @@ LL | struct X<T>(T);\n    |          - required by this bound in `X`\n ...\n LL | struct Struct5<T: ?Sized>{\n-   |                - this type parameter needs to be `Sized`\n+   |                - this type parameter needs to be `std::marker::Sized`\n LL |     _t: X<T>,\n    |         ^^^^ doesn't have a size known at compile-time\n    |"}, {"sha": "33af13d943f74d97d6fd393355c594eb0721b3b2", "filename": "src/test/ui/suggestions/restrict-type-argument.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fsuggestions%2Frestrict-type-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fsuggestions%2Frestrict-type-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Frestrict-type-argument.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     is_send(val);\n    |\n help: consider further restricting this bound\n    |\n-LL | fn use_impl_sync(val: impl Sync + Send) {\n-   |                                 ^^^^^^\n+LL | fn use_impl_sync(val: impl Sync + std::marker::Send) {\n+   |                                 ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `S` cannot be sent between threads safely\n   --> $DIR/restrict-type-argument.rs:8:13\n@@ -23,8 +23,8 @@ LL |     is_send(val);\n    |\n help: consider further restricting this bound\n    |\n-LL | fn use_where<S>(val: S) where S: Sync + Send {\n-   |                                       ^^^^^^\n+LL | fn use_where<S>(val: S) where S: Sync + std::marker::Send {\n+   |                                       ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `S` cannot be sent between threads safely\n   --> $DIR/restrict-type-argument.rs:12:13\n@@ -37,8 +37,8 @@ LL |     is_send(val);\n    |\n help: consider further restricting this bound\n    |\n-LL | fn use_bound<S: Sync + Send>(val: S) {\n-   |                      ^^^^^^\n+LL | fn use_bound<S: Sync + std::marker::Send>(val: S) {\n+   |                      ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `S` cannot be sent between threads safely\n   --> $DIR/restrict-type-argument.rs:20:13\n@@ -51,8 +51,8 @@ LL |     is_send(val);\n    |\n help: consider further restricting this bound\n    |\n-LL |     Sync + Send\n-   |          ^^^^^^\n+LL |     Sync + std::marker::Send\n+   |          ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `S` cannot be sent between threads safely\n   --> $DIR/restrict-type-argument.rs:24:13\n@@ -65,8 +65,8 @@ LL |     is_send(val);\n    |\n help: consider further restricting this bound\n    |\n-LL | fn use_bound_and_where<S: Sync>(val: S) where S: std::fmt::Debug + Send {\n-   |                                                                  ^^^^^^\n+LL | fn use_bound_and_where<S: Sync>(val: S) where S: std::fmt::Debug + std::marker::Send {\n+   |                                                                  ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: `S` cannot be sent between threads safely\n   --> $DIR/restrict-type-argument.rs:28:13\n@@ -79,8 +79,8 @@ LL |     is_send(val);\n    |\n help: consider restricting type parameter `S`\n    |\n-LL | fn use_unbound<S: Send>(val: S) {\n-   |                 ^^^^^^\n+LL | fn use_unbound<S: std::marker::Send>(val: S) {\n+   |                 ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors\n "}, {"sha": "744e7bef04e9707d51f08796f1b91fe93bc05ff7", "filename": "src/test/ui/trait-impl-bound-suggestions.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftrait-impl-bound-suggestions.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftrait-impl-bound-suggestions.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-impl-bound-suggestions.fixed?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -10,7 +10,7 @@ struct ConstrainedStruct<X: Copy> {\n }\n \n #[allow(dead_code)]\n-trait InsufficientlyConstrainedGeneric<X=()> where X: Copy {\n+trait InsufficientlyConstrainedGeneric<X=()> where X: std::marker::Copy {\n     fn return_the_constrained_type(&self, x: X) -> ConstrainedStruct<X> {\n         //~^ ERROR the trait bound `X: Copy` is not satisfied\n         ConstrainedStruct { x }"}, {"sha": "110ca79908079c0c3da858d2b21cd61d42b91fdf", "filename": "src/test/ui/trait-impl-bound-suggestions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftrait-impl-bound-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftrait-impl-bound-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-impl-bound-suggestions.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     fn return_the_constrained_type(&self, x: X) -> ConstrainedStruct<X> {\n    |\n help: consider further restricting type parameter `X`\n    |\n-LL | trait InsufficientlyConstrainedGeneric<X=()> where X: Copy {\n-   |                                              ^^^^^^^^^^^^^\n+LL | trait InsufficientlyConstrainedGeneric<X=()> where X: std::marker::Copy {\n+   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "508a12d859a629b3838be8f2465babb97be8454d", "filename": "src/test/ui/traits/inductive-overflow/two-traits.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftraits%2Finductive-overflow%2Ftwo-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftraits%2Finductive-overflow%2Ftwo-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Finductive-overflow%2Ftwo-traits.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     type X = Self;\n    |\n help: consider further restricting this bound\n    |\n-LL | impl<T: Magic + Sync> Magic for T {\n-   |               ^^^^^^\n+LL | impl<T: Magic + std::marker::Sync> Magic for T {\n+   |               ^^^^^^^^^^^^^^^^^^^\n \n error[E0275]: overflow evaluating the requirement `*mut (): Magic`\n   --> $DIR/two-traits.rs:20:5"}, {"sha": "efab64205f3af6cda4ac33ef57336530dc843d79", "filename": "src/test/ui/traits/suggest-where-clause.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftraits%2Fsuggest-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftraits%2Fsuggest-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fsuggest-where-clause.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `U` cannot be known at compilation tim\n   --> $DIR/suggest-where-clause.rs:7:20\n    |\n LL | fn check<T: Iterator, U: ?Sized>() {\n-   |                       - this type parameter needs to be `Sized`\n+   |                       - this type parameter needs to be `std::marker::Sized`\n LL |     // suggest a where-clause, if needed\n LL |     mem::size_of::<U>();\n    |                    ^ doesn't have a size known at compile-time\n@@ -16,7 +16,7 @@ error[E0277]: the size for values of type `U` cannot be known at compilation tim\n   --> $DIR/suggest-where-clause.rs:10:5\n    |\n LL | fn check<T: Iterator, U: ?Sized>() {\n-   |                       - this type parameter needs to be `Sized`\n+   |                       - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     mem::size_of::<Misc<U>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time"}, {"sha": "cfb1fe9c19a8bb18a7472e2d5215e1db3fdc1e6a", "filename": "src/test/ui/type-alias-impl-trait/bounds-are-checked-2.full_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked-2.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked-2.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked-2.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -15,8 +15,8 @@ LL | type X<T> = impl Clone;\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | type X<T: Clone> = impl Clone;\n-   |         ^^^^^^^\n+LL | type X<T: std::clone::Clone> = impl Clone;\n+   |         ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "735b96d5df98eda8cecf435ab068c0534b5e898a", "filename": "src/test/ui/type-alias-impl-trait/bounds-are-checked-2.min_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked-2.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked-2.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbounds-are-checked-2.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -6,8 +6,8 @@ LL | type X<T> = impl Clone;\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | type X<T: Clone> = impl Clone;\n-   |         ^^^^^^^\n+LL | type X<T: std::clone::Clone> = impl Clone;\n+   |         ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "aab64e72b7bca21bd18958630a53ee09e62a340b", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use5.full_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use5.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use5.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use5.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -28,8 +28,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, U)`\n help: consider restricting type parameter `T`\n    |\n-LL | type Two<T: Debug, U> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<T: std::fmt::Debug, U> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `U` doesn't implement `Debug`\n   --> $DIR/generic_duplicate_param_use5.rs:11:18\n@@ -40,8 +40,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, U)`\n help: consider restricting type parameter `U`\n    |\n-LL | type Two<T, U: Debug> = impl Debug;\n-   |              ^^^^^^^\n+LL | type Two<T, U: std::fmt::Debug> = impl Debug;\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors; 1 warning emitted\n "}, {"sha": "5c8c5b897790638a709551c4940dd88f81a858f1", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use5.min_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use5.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use5.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use5.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, U)`\n help: consider restricting type parameter `T`\n    |\n-LL | type Two<T: Debug, U> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<T: std::fmt::Debug, U> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `U` doesn't implement `Debug`\n   --> $DIR/generic_duplicate_param_use5.rs:11:18\n@@ -31,8 +31,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, U)`\n help: consider restricting type parameter `U`\n    |\n-LL | type Two<T, U: Debug> = impl Debug;\n-   |              ^^^^^^^\n+LL | type Two<T, U: std::fmt::Debug> = impl Debug;\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "a69e99bf8b05f6531306a31efe800003b188093f", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use6.full_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use6.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use6.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use6.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -28,8 +28,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, T)`\n help: consider restricting type parameter `T`\n    |\n-LL | type Two<T: Debug, U> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<T: std::fmt::Debug, U> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "a377ef2d8732279d7093e3f9084144dd46433ba0", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use6.min_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use6.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use6.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use6.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, T)`\n help: consider restricting type parameter `T`\n    |\n-LL | type Two<T: Debug, U> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<T: std::fmt::Debug, U> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e73ac88500e0393cbdc0f8f0e903709a879a854e", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use8.full_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use8.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use8.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use8.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -28,8 +28,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, u32)`\n help: consider restricting type parameter `T`\n    |\n-LL | type Two<T: Debug, U> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<T: std::fmt::Debug, U> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "d7edce7a491de887771d5579ae127162d9ef52b8", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use8.min_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use8.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use8.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use8.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -19,8 +19,8 @@ LL | type Two<T, U> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(T, u32)`\n help: consider restricting type parameter `T`\n    |\n-LL | type Two<T: Debug, U> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<T: std::fmt::Debug, U> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0b3d72d67b2426cc4081737000cc4fc877dbe438", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use9.full_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use9.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use9.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use9.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -40,8 +40,8 @@ LL | type Two<A, B> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(A, B, <A as Foo>::Bar)`\n help: consider restricting type parameter `A`\n    |\n-LL | type Two<A: Debug, B> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<A: std::fmt::Debug, B> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `B` doesn't implement `Debug`\n   --> $DIR/generic_duplicate_param_use9.rs:10:18\n@@ -52,8 +52,8 @@ LL | type Two<A, B> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(A, B, <A as Foo>::Bar)`\n help: consider restricting type parameter `B`\n    |\n-LL | type Two<A, B: Debug> = impl Debug;\n-   |              ^^^^^^^\n+LL | type Two<A, B: std::fmt::Debug> = impl Debug;\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors; 1 warning emitted\n "}, {"sha": "fd1081d7b71de01a555a6d58473aafae72d357d8", "filename": "src/test/ui/type-alias-impl-trait/generic_duplicate_param_use9.min_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use9.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use9.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_duplicate_param_use9.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -31,8 +31,8 @@ LL | type Two<A, B> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(A, B, <A as Foo>::Bar)`\n help: consider restricting type parameter `A`\n    |\n-LL | type Two<A: Debug, B> = impl Debug;\n-   |           ^^^^^^^\n+LL | type Two<A: std::fmt::Debug, B> = impl Debug;\n+   |           ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `B` doesn't implement `Debug`\n   --> $DIR/generic_duplicate_param_use9.rs:10:18\n@@ -43,8 +43,8 @@ LL | type Two<A, B> = impl Debug;\n    = note: required because of the requirements on the impl of `Debug` for `(A, B, <A as Foo>::Bar)`\n help: consider restricting type parameter `B`\n    |\n-LL | type Two<A, B: Debug> = impl Debug;\n-   |              ^^^^^^^\n+LL | type Two<A, B: std::fmt::Debug> = impl Debug;\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "7ab73d24274ceded2bb80bae481b2ce50867913b", "filename": "src/test/ui/type-alias-impl-trait/generic_underconstrained2.full_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -30,8 +30,8 @@ LL | fn underconstrained<U>(_: U) -> Underconstrained<U> {\n    |\n help: consider restricting type parameter `U`\n    |\n-LL | fn underconstrained<U: Debug>(_: U) -> Underconstrained<U> {\n-   |                      ^^^^^^^\n+LL | fn underconstrained<U: std::fmt::Debug>(_: U) -> Underconstrained<U> {\n+   |                      ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `V` doesn't implement `Debug`\n   --> $DIR/generic_underconstrained2.rs:21:43\n@@ -44,8 +44,8 @@ LL | fn underconstrained2<U, V>(_: U, _: V) -> Underconstrained2<V> {\n    |\n help: consider restricting type parameter `V`\n    |\n-LL | fn underconstrained2<U, V: Debug>(_: U, _: V) -> Underconstrained2<V> {\n-   |                          ^^^^^^^\n+LL | fn underconstrained2<U, V: std::fmt::Debug>(_: U, _: V) -> Underconstrained2<V> {\n+   |                          ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors; 1 warning emitted\n "}, {"sha": "a4f5f4b8645b1aa6b3a2c2e24d6cd6094e72036f", "filename": "src/test/ui/type-alias-impl-trait/generic_underconstrained2.min_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_underconstrained2.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -21,8 +21,8 @@ LL | fn underconstrained<U>(_: U) -> Underconstrained<U> {\n    |\n help: consider restricting type parameter `U`\n    |\n-LL | fn underconstrained<U: Debug>(_: U) -> Underconstrained<U> {\n-   |                      ^^^^^^^\n+LL | fn underconstrained<U: std::fmt::Debug>(_: U) -> Underconstrained<U> {\n+   |                      ^^^^^^^^^^^^^^^^^\n \n error[E0277]: `V` doesn't implement `Debug`\n   --> $DIR/generic_underconstrained2.rs:21:43\n@@ -35,8 +35,8 @@ LL | fn underconstrained2<U, V>(_: U, _: V) -> Underconstrained2<V> {\n    |\n help: consider restricting type parameter `V`\n    |\n-LL | fn underconstrained2<U, V: Debug>(_: U, _: V) -> Underconstrained2<V> {\n-   |                          ^^^^^^^\n+LL | fn underconstrained2<U, V: std::fmt::Debug>(_: U, _: V) -> Underconstrained2<V> {\n+   |                          ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "35ac0993b29ca430d29c9b17a98cead7b0bc02ee", "filename": "src/test/ui/type-alias-impl-trait/issue-52843.full_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-52843.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-52843.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-52843.full_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -15,8 +15,8 @@ LL | type Foo<T> = impl Default;\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | type Foo<T: Default> = impl Default;\n-   |           ^^^^^^^^^\n+LL | type Foo<T: std::default::Default> = impl Default;\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "9fb760f34c19a0a3e1a5c9bb8653d96b6a37f0ac", "filename": "src/test/ui/type-alias-impl-trait/issue-52843.min_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-52843.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-52843.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-52843.min_tait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -6,8 +6,8 @@ LL | type Foo<T> = impl Default;\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | type Foo<T: Default> = impl Default;\n-   |           ^^^^^^^^^\n+LL | type Foo<T: std::default::Default> = impl Default;\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "ddfa31cf6244807f76f90594794b2ce33e7910e6", "filename": "src/test/ui/type/type-check-defaults.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype%2Ftype-check-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftype%2Ftype-check-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check-defaults.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -56,8 +56,8 @@ LL | trait Base<T = String>: Super<T> { }\n    |\n help: consider further restricting type parameter `T`\n    |\n-LL | trait Base<T = String>: Super<T> where T: Copy { }\n-   |                                  ^^^^^^^^^^^^^\n+LL | trait Base<T = String>: Super<T> where T: std::marker::Copy { }\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: cannot add `u8` to `i32`\n   --> $DIR/type-check-defaults.rs:24:66"}, {"sha": "7398b48a238d1c7c31022c78a39a13fa2f0a3fb4", "filename": "src/test/ui/typeck/typeck-default-trait-impl-send-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-send-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-send-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-send-param.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | fn is_send<T:Send>() {\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | fn foo<T: Send>() {\n-   |         ^^^^^^\n+LL | fn foo<T: std::marker::Send>() {\n+   |         ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "b916bbe8ad10a3deedaf7a5e30f613d613d856e3", "filename": "src/test/ui/union/union-sized-field.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funion%2Funion-sized-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funion%2Funion-sized-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-sized-field.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/union-sized-field.rs:4:12\n    |\n LL | union Foo<T: ?Sized> {\n-   |           - this type parameter needs to be `Sized`\n+   |           - this type parameter needs to be `std::marker::Sized`\n LL |     value: T,\n    |            ^ doesn't have a size known at compile-time\n    |\n@@ -21,7 +21,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/union-sized-field.rs:9:12\n    |\n LL | struct Foo2<T: ?Sized> {\n-   |             - this type parameter needs to be `Sized`\n+   |             - this type parameter needs to be `std::marker::Sized`\n LL |     value: T,\n    |            ^ doesn't have a size known at compile-time\n    |\n@@ -40,7 +40,7 @@ error[E0277]: the size for values of type `T` cannot be known at compilation tim\n   --> $DIR/union-sized-field.rs:15:11\n    |\n LL | enum Foo3<T: ?Sized> {\n-   |           - this type parameter needs to be `Sized`\n+   |           - this type parameter needs to be `std::marker::Sized`\n LL |     Value(T),\n    |           ^ doesn't have a size known at compile-time\n    |"}, {"sha": "19978ae24cacb75094e17314ebb342ff3f91ab4c", "filename": "src/test/ui/unsized/unsized-bare-typaram.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-bare-typaram.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-bare-typaram.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-bare-typaram.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -6,7 +6,7 @@ LL | fn bar<T: Sized>() { }\n LL | fn foo<T: ?Sized>() { bar::<T>() }\n    |        -                    ^ doesn't have a size known at compile-time\n    |        |\n-   |        this type parameter needs to be `Sized`\n+   |        this type parameter needs to be `std::marker::Sized`\n \n error: aborting due to previous error\n "}, {"sha": "601db7d1cd9834f2bbcd4d33428267b6b1adb69b", "filename": "src/test/ui/unsized/unsized-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-enum.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,7 +7,7 @@ LL | fn foo1<T>() { not_sized::<Foo<T>>() } // Hunky dory.\n LL | fn foo2<T: ?Sized>() { not_sized::<Foo<T>>() }\n    |         -                          ^^^^^^ doesn't have a size known at compile-time\n    |         |\n-   |         this type parameter needs to be `Sized`\n+   |         this type parameter needs to be `std::marker::Sized`\n    |\n help: you could relax the implicit `Sized` bound on `U` if it were used through indirection like `&U` or `Box<U>`\n   --> $DIR/unsized-enum.rs:4:10"}, {"sha": "79f690e8d1a8376589e555705f5dd88c6162c5a8", "filename": "src/test/ui/unsized/unsized-enum2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-enum2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-enum2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-enum2.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `W` cannot be known at compilation tim\n   --> $DIR/unsized-enum2.rs:23:8\n    |\n LL | enum E<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized> {\n-   |        - this type parameter needs to be `Sized`\n+   |        - this type parameter needs to be `std::marker::Sized`\n LL |     // parameter\n LL |     VA(W),\n    |        ^ doesn't have a size known at compile-time\n@@ -22,7 +22,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized-enum2.rs:25:11\n    |\n LL | enum E<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized> {\n-   |                   - this type parameter needs to be `Sized`\n+   |                   - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     VB{x: X},\n    |           ^ doesn't have a size known at compile-time\n@@ -42,7 +42,7 @@ error[E0277]: the size for values of type `Y` cannot be known at compilation tim\n   --> $DIR/unsized-enum2.rs:27:15\n    |\n LL | enum E<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized> {\n-   |                              - this type parameter needs to be `Sized`\n+   |                              - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     VC(isize, Y),\n    |               ^ doesn't have a size known at compile-time\n@@ -62,7 +62,7 @@ error[E0277]: the size for values of type `Z` cannot be known at compilation tim\n   --> $DIR/unsized-enum2.rs:29:21\n    |\n LL | enum E<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized> {\n-   |                                         - this type parameter needs to be `Sized`\n+   |                                         - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     VD{u: isize, x: Z},\n    |                     ^ doesn't have a size known at compile-time"}, {"sha": "9d072eda4e81c5aaa1431cbfda46006219ac81d8", "filename": "src/test/ui/unsized/unsized-inherent-impl-self-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-inherent-impl-self-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-inherent-impl-self-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-inherent-impl-self-type.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,7 +7,7 @@ LL |\n LL | impl<X: ?Sized> S5<X> {\n    |      -          ^^^^^ doesn't have a size known at compile-time\n    |      |\n-   |      this type parameter needs to be `Sized`\n+   |      this type parameter needs to be `std::marker::Sized`\n    |\n help: you could relax the implicit `Sized` bound on `Y` if it were used through indirection like `&Y` or `Box<Y>`\n   --> $DIR/unsized-inherent-impl-self-type.rs:5:11"}, {"sha": "52cf1cbb81d7fcc693ded85aa7ee8f95cb477af0", "filename": "src/test/ui/unsized/unsized-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-struct.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,7 +7,7 @@ LL | fn foo1<T>() { not_sized::<Foo<T>>() } // Hunky dory.\n LL | fn foo2<T: ?Sized>() { not_sized::<Foo<T>>() }\n    |         -                          ^^^^^^ doesn't have a size known at compile-time\n    |         |\n-   |         this type parameter needs to be `Sized`\n+   |         this type parameter needs to be `std::marker::Sized`\n    |\n help: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&T` or `Box<T>`\n   --> $DIR/unsized-struct.rs:4:12\n@@ -26,7 +26,7 @@ LL | fn is_sized<T:Sized>() { }\n LL | fn bar2<T: ?Sized>() { is_sized::<Bar<T>>() }\n    |         -              ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n    |         |\n-   |         this type parameter needs to be `Sized`\n+   |         this type parameter needs to be `std::marker::Sized`\n    |\n    = note: required because it appears within the type `Bar<T>`\n "}, {"sha": "aef0d0cbb839540c8638ba6efbf10dbd3c7baf50", "filename": "src/test/ui/unsized/unsized-trait-impl-self-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-self-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-self-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-self-type.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,7 +7,7 @@ LL |\n LL | impl<X: ?Sized> T3<X> for S5<X> {\n    |      -                    ^^^^^ doesn't have a size known at compile-time\n    |      |\n-   |      this type parameter needs to be `Sized`\n+   |      this type parameter needs to be `std::marker::Sized`\n    |\n help: you could relax the implicit `Sized` bound on `Y` if it were used through indirection like `&Y` or `Box<Y>`\n   --> $DIR/unsized-trait-impl-self-type.rs:8:11"}, {"sha": "f48d4ef9f14617b98ffb8ef017c49dbf9f5516b6", "filename": "src/test/ui/unsized/unsized-trait-impl-trait-arg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-trait-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-trait-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-trait-arg.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,7 +7,7 @@ LL | trait T2<Z> {\n LL | impl<X: ?Sized> T2<X> for S4<X> {\n    |      -          ^^^^^ doesn't have a size known at compile-time\n    |      |\n-   |      this type parameter needs to be `Sized`\n+   |      this type parameter needs to be `std::marker::Sized`\n    |\n help: consider relaxing the implicit `Sized` restriction\n    |"}, {"sha": "ddddae4eaba57cf51d1094b02b3e0d5066210125", "filename": "src/test/ui/unsized3.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized3.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized3.rs:7:13\n    |\n LL | fn f1<X: ?Sized>(x: &X) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n LL |     f2::<X>(x);\n    |             ^ doesn't have a size known at compile-time\n ...\n@@ -18,7 +18,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized3.rs:18:13\n    |\n LL | fn f3<X: ?Sized + T>(x: &X) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n LL |     f4::<X>(x);\n    |             ^ doesn't have a size known at compile-time\n ...\n@@ -37,7 +37,7 @@ LL | fn f5<Y>(x: &Y) {}\n    |       - required by this bound in `f5`\n ...\n LL | fn f8<X: ?Sized>(x1: &S<X>, x2: &S<X>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n LL |     f5(x1);\n    |        ^^ doesn't have a size known at compile-time\n    |\n@@ -51,7 +51,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized3.rs:40:8\n    |\n LL | fn f9<X: ?Sized>(x1: Box<S<X>>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n LL |     f5(&(*x1, 34));\n    |        ^^^^^^^^^^ doesn't have a size known at compile-time\n    |\n@@ -62,7 +62,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized3.rs:45:9\n    |\n LL | fn f10<X: ?Sized>(x1: Box<S<X>>) {\n-   |        - this type parameter needs to be `Sized`\n+   |        - this type parameter needs to be `std::marker::Sized`\n LL |     f5(&(32, *x1));\n    |         ^^^^^^^^^ doesn't have a size known at compile-time\n    |\n@@ -77,7 +77,7 @@ LL | fn f5<Y>(x: &Y) {}\n    |       - required by this bound in `f5`\n ...\n LL | fn f10<X: ?Sized>(x1: Box<S<X>>) {\n-   |        - this type parameter needs to be `Sized`\n+   |        - this type parameter needs to be `std::marker::Sized`\n LL |     f5(&(32, *x1));\n    |        ^^^^^^^^^^ doesn't have a size known at compile-time\n    |"}, {"sha": "0bfd4565529aa2d599c182b097c30d6d0c4cb7b0", "filename": "src/test/ui/unsized5.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized5.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized5.rs:4:9\n    |\n LL | struct S1<X: ?Sized> {\n-   |           - this type parameter needs to be `Sized`\n+   |           - this type parameter needs to be `std::marker::Sized`\n LL |     f1: X,\n    |         ^ doesn't have a size known at compile-time\n    |\n@@ -21,7 +21,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized5.rs:10:8\n    |\n LL | struct S2<X: ?Sized> {\n-   |           - this type parameter needs to be `Sized`\n+   |           - this type parameter needs to be `std::marker::Sized`\n LL |     f: isize,\n LL |     g: X,\n    |        ^ doesn't have a size known at compile-time\n@@ -77,7 +77,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized5.rs:25:8\n    |\n LL | enum E<X: ?Sized> {\n-   |        - this type parameter needs to be `Sized`\n+   |        - this type parameter needs to be `std::marker::Sized`\n LL |     V1(X, isize),\n    |        ^ doesn't have a size known at compile-time\n    |\n@@ -96,7 +96,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized5.rs:29:12\n    |\n LL | enum F<X: ?Sized> {\n-   |        - this type parameter needs to be `Sized`\n+   |        - this type parameter needs to be `std::marker::Sized`\n LL |     V2{f1: X, f: isize},\n    |            ^ doesn't have a size known at compile-time\n    |"}, {"sha": "f9f7877d5426a1c068cee49ca9775ac0c5f6f1c4", "filename": "src/test/ui/unsized6.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized6.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -2,7 +2,7 @@ error[E0277]: the size for values of type `Y` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:9:9\n    |\n LL | fn f1<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized>(x: &X) {\n-   |                             - this type parameter needs to be `Sized`\n+   |                             - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     let y: Y;\n    |         ^ doesn't have a size known at compile-time\n@@ -14,7 +14,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:7:12\n    |\n LL | fn f1<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized>(x: &X) {\n-   |                  - this type parameter needs to be `Sized`\n+   |                  - this type parameter needs to be `std::marker::Sized`\n LL |     let _: W; // <-- this is OK, no bindings created, no initializer.\n LL |     let _: (isize, (X, isize));\n    |            ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -25,7 +25,7 @@ error[E0277]: the size for values of type `Z` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:11:12\n    |\n LL | fn f1<W: ?Sized, X: ?Sized, Y: ?Sized, Z: ?Sized>(x: &X) {\n-   |                                        - this type parameter needs to be `Sized`\n+   |                                        - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     let y: (isize, (Z, usize));\n    |            ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -36,7 +36,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:15:9\n    |\n LL | fn f2<X: ?Sized, Y: ?Sized>(x: &X) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n LL |     let y: X;\n    |         ^ doesn't have a size known at compile-time\n    |\n@@ -47,7 +47,7 @@ error[E0277]: the size for values of type `Y` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:17:12\n    |\n LL | fn f2<X: ?Sized, Y: ?Sized>(x: &X) {\n-   |                  - this type parameter needs to be `Sized`\n+   |                  - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     let y: (isize, (Y, isize));\n    |            ^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -58,7 +58,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:22:9\n    |\n LL | fn f3<X: ?Sized>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n LL |     let y: X = *x1;\n    |         ^ doesn't have a size known at compile-time\n    |\n@@ -69,7 +69,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:24:9\n    |\n LL | fn f3<X: ?Sized>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     let y = *x2;\n    |         ^ doesn't have a size known at compile-time\n@@ -81,7 +81,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:26:10\n    |\n LL | fn f3<X: ?Sized>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     let (y, z) = (*x3, 4);\n    |          ^ doesn't have a size known at compile-time\n@@ -93,7 +93,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:30:9\n    |\n LL | fn f4<X: ?Sized + T>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n LL |     let y: X = *x1;\n    |         ^ doesn't have a size known at compile-time\n    |\n@@ -104,7 +104,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:32:9\n    |\n LL | fn f4<X: ?Sized + T>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     let y = *x2;\n    |         ^ doesn't have a size known at compile-time\n@@ -116,7 +116,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n   --> $DIR/unsized6.rs:34:10\n    |\n LL | fn f4<X: ?Sized + T>(x1: Box<X>, x2: Box<X>, x3: Box<X>) {\n-   |       - this type parameter needs to be `Sized`\n+   |       - this type parameter needs to be `std::marker::Sized`\n ...\n LL |     let (y, z) = (*x3, 4);\n    |          ^ doesn't have a size known at compile-time\n@@ -130,7 +130,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n LL | fn g1<X: ?Sized>(x: X) {}\n    |       -          ^ doesn't have a size known at compile-time\n    |       |\n-   |       this type parameter needs to be `Sized`\n+   |       this type parameter needs to be `std::marker::Sized`\n    |\n    = help: unsized fn params are gated as an unstable feature\n help: function arguments must have a statically known size, borrowed types always have a known size\n@@ -144,7 +144,7 @@ error[E0277]: the size for values of type `X` cannot be known at compilation tim\n LL | fn g2<X: ?Sized + T>(x: X) {}\n    |       -              ^ doesn't have a size known at compile-time\n    |       |\n-   |       this type parameter needs to be `Sized`\n+   |       this type parameter needs to be `std::marker::Sized`\n    |\n    = help: unsized fn params are gated as an unstable feature\n help: function arguments must have a statically known size, borrowed types always have a known size"}, {"sha": "7dbddd4ed24430579ccc44e484b859a91482cb3a", "filename": "src/test/ui/unsized7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Funsized7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized7.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -7,7 +7,7 @@ LL | trait T1<Z: T> {\n LL | impl<X: ?Sized + T> T1<X> for S3<X> {\n    |      -              ^^^^^ doesn't have a size known at compile-time\n    |      |\n-   |      this type parameter needs to be `Sized`\n+   |      this type parameter needs to be `std::marker::Sized`\n    |\n help: consider relaxing the implicit `Sized` restriction\n    |"}, {"sha": "7819110dd98b59dd857751776d03ba57b40896c1", "filename": "src/test/ui/wf/wf-enum-bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-enum-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-enum-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-enum-bound.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     where T: ExtraCopy<U>\n    |\n help: consider further restricting type parameter `U`\n    |\n-LL |     where T: ExtraCopy<U>, U: Copy\n-   |                          ^^^^^^^^^\n+LL |     where T: ExtraCopy<U>, U: std::marker::Copy\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "4bfb2413fe99f8de9483d7a618ed72c69d9b6314", "filename": "src/test/ui/wf/wf-enum-fields-struct-variant.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-enum-fields-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-enum-fields-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-enum-fields-struct-variant.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |         f: IsCopy<A>\n    |\n help: consider restricting type parameter `A`\n    |\n-LL | enum AnotherEnum<A: Copy> {\n-   |                   ^^^^^^\n+LL | enum AnotherEnum<A: std::marker::Copy> {\n+   |                   ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "c8a75afbab7cbb31a243a772c3bc01d2265ceef5", "filename": "src/test/ui/wf/wf-enum-fields.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-enum-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-enum-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-enum-fields.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     SomeVariant(IsCopy<A>)\n    |\n help: consider restricting type parameter `A`\n    |\n-LL | enum SomeEnum<A: Copy> {\n-   |                ^^^^^^\n+LL | enum SomeEnum<A: std::marker::Copy> {\n+   |                ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e463e3db887a52f63476813e0c8b74f216f922a7", "filename": "src/test/ui/wf/wf-fn-where-clause.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-fn-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-fn-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-fn-where-clause.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | fn foo<T,U>() where T: ExtraCopy<U>\n    |\n help: consider further restricting type parameter `U`\n    |\n-LL | fn foo<T,U>() where T: ExtraCopy<U>, U: Copy\n-   |                                    ^^^^^^^^^\n+LL | fn foo<T,U>() where T: ExtraCopy<U>, U: std::marker::Copy\n+   |                                    ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the size for values of type `(dyn Copy + 'static)` cannot be known at compilation time\n   --> $DIR/wf-fn-where-clause.rs:12:16"}, {"sha": "9687658feba43b50936900e63c938265b4957242", "filename": "src/test/ui/wf/wf-in-fn-arg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-arg.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | fn bar<T>(_: &MustBeCopy<T>)\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | fn bar<T: Copy>(_: &MustBeCopy<T>)\n-   |         ^^^^^^\n+LL | fn bar<T: std::marker::Copy>(_: &MustBeCopy<T>)\n+   |         ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f9a962578e65086a6fea2f229367a8bb7cd07ff3", "filename": "src/test/ui/wf/wf-in-fn-ret.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-ret.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-ret.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-ret.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | fn bar<T>() -> MustBeCopy<T>\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | fn bar<T: Copy>() -> MustBeCopy<T>\n-   |         ^^^^^^\n+LL | fn bar<T: std::marker::Copy>() -> MustBeCopy<T>\n+   |         ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "33300b3964258e0b21571481625e282d13f942d4", "filename": "src/test/ui/wf/wf-in-fn-type-arg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-type-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-type-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-type-arg.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     x: fn(MustBeCopy<T>)\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | struct Bar<T: Copy> {\n-   |             ^^^^^^\n+LL | struct Bar<T: std::marker::Copy> {\n+   |             ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "1ffc47e6d826c842603291ac253aa276562d6612", "filename": "src/test/ui/wf/wf-in-fn-type-ret.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-type-ret.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-type-ret.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-type-ret.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     x: fn() -> MustBeCopy<T>\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | struct Foo<T: Copy> {\n-   |             ^^^^^^\n+LL | struct Foo<T: std::marker::Copy> {\n+   |             ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "7cb9af11d799bee04f835fb3bccd770c56d2a55b", "filename": "src/test/ui/wf/wf-in-fn-where-clause.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-fn-where-clause.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     where T: MustBeCopy<U>\n    |\n help: consider further restricting type parameter `U`\n    |\n-LL |     where T: MustBeCopy<U>, U: Copy\n-   |                           ^^^^^^^^^\n+LL |     where T: MustBeCopy<U>, U: std::marker::Copy\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "8606eabf59c146f0680c8112cae0db333d55102a", "filename": "src/test/ui/wf/wf-in-obj-type-trait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-obj-type-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-in-obj-type-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-in-obj-type-trait.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     x: dyn Object<MustBeCopy<T>>\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | struct Bar<T: Copy> {\n-   |             ^^^^^^\n+LL | struct Bar<T: std::marker::Copy> {\n+   |             ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "8e0ce557e6b43cecb728a6164d01eb3090e42196", "filename": "src/test/ui/wf/wf-inherent-impl-method-where-clause.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-inherent-impl-method-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-inherent-impl-method-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-inherent-impl-method-where-clause.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     fn foo(self) where T: ExtraCopy<U>\n    |\n help: consider restricting type parameter `U`\n    |\n-LL | impl<T,U: Copy> Foo<T,U> {\n-   |         ^^^^^^\n+LL | impl<T,U: std::marker::Copy> Foo<T,U> {\n+   |         ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "bf8077ba88f6b4e0f2fe68269fd4e4f21194979e", "filename": "src/test/ui/wf/wf-inherent-impl-where-clause.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-inherent-impl-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-inherent-impl-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-inherent-impl-where-clause.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | impl<T,U> Foo<T,U> where T: ExtraCopy<U>\n    |\n help: consider further restricting type parameter `U`\n    |\n-LL | impl<T,U> Foo<T,U> where T: ExtraCopy<U>, U: Copy\n-   |                                         ^^^^^^^^^\n+LL | impl<T,U> Foo<T,U> where T: ExtraCopy<U>, U: std::marker::Copy\n+   |                                         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e85f3591438a9e5dd2290b8c140412ec301d0af9", "filename": "src/test/ui/wf/wf-struct-bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-struct-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-struct-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-struct-bound.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     where T: ExtraCopy<U>\n    |\n help: consider further restricting type parameter `U`\n    |\n-LL |     where T: ExtraCopy<U>, U: Copy\n-   |                          ^^^^^^^^^\n+LL |     where T: ExtraCopy<U>, U: std::marker::Copy\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "62ef6bb60c7a24af65ea6f7b10c4b7e128b48473", "filename": "src/test/ui/wf/wf-struct-field.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-struct-field.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     data: IsCopy<A>\n    |\n help: consider restricting type parameter `A`\n    |\n-LL | struct SomeStruct<A: Copy> {\n-   |                    ^^^^^^\n+LL | struct SomeStruct<A: std::marker::Copy> {\n+   |                    ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "51adfdb6bd2a9c77129f1b06227ca4da22d4cfb8", "filename": "src/test/ui/wf/wf-trait-associated-type-bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-trait-associated-type-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-trait-associated-type-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-trait-associated-type-bound.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     type Type1: ExtraCopy<T>;\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | trait SomeTrait<T: Copy> {\n-   |                  ^^^^^^\n+LL | trait SomeTrait<T: std::marker::Copy> {\n+   |                  ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "c9e818f8e7dc8d62bb08b84a770e4642cdcc3dce", "filename": "src/test/ui/wf/wf-trait-bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-trait-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-trait-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-trait-bound.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |     where T: ExtraCopy<U>\n    |\n help: consider further restricting type parameter `U`\n    |\n-LL |     where T: ExtraCopy<U>, U: Copy\n-   |                          ^^^^^^^^^\n+LL |     where T: ExtraCopy<U>, U: std::marker::Copy\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "6926983527178f1e459a26976adc67abf8af982c", "filename": "src/test/ui/wf/wf-trait-superbound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-trait-superbound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwf%2Fwf-trait-superbound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-trait-superbound.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL | trait SomeTrait<T>: ExtraCopy<T> {\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | trait SomeTrait<T: Copy>: ExtraCopy<T> {\n-   |                  ^^^^^^\n+LL | trait SomeTrait<T: std::marker::Copy>: ExtraCopy<T> {\n+   |                  ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "356ba347cc36a6eaf66729f78a696fbdfe93f3ed", "filename": "src/test/ui/where-clauses/where-clause-constraints-are-local-for-inherent-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-clause-constraints-are-local-for-inherent-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-clause-constraints-are-local-for-inherent-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-clause-constraints-are-local-for-inherent-impl.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |         require_copy(self.x);\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Copy> Foo<T> {\n-   |       ^^^^^^\n+LL | impl<T: std::marker::Copy> Foo<T> {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "d84242cfe12b832761985ed60edfeea3322c1510", "filename": "src/test/ui/where-clauses/where-clause-constraints-are-local-for-trait-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-clause-constraints-are-local-for-trait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/138fd56cf9598b4bf016634c768dca128a83a5d7/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-clause-constraints-are-local-for-trait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-clause-constraints-are-local-for-trait-impl.stderr?ref=138fd56cf9598b4bf016634c768dca128a83a5d7", "patch": "@@ -9,8 +9,8 @@ LL |         require_copy(self.x);\n    |\n help: consider restricting type parameter `T`\n    |\n-LL | impl<T: Copy> Foo<T> for Bar<T> {\n-   |       ^^^^^^\n+LL | impl<T: std::marker::Copy> Foo<T> for Bar<T> {\n+   |       ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}