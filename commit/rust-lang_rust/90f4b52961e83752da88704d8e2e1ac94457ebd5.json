{"sha": "90f4b52961e83752da88704d8e2e1ac94457ebd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZjRiNTI5NjFlODM3NTJkYTg4NzA0ZDhlMmUxYWM5NDQ1N2ViZDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-16T03:35:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-16T03:35:08Z"}, "message": "Auto merge of #80041 - jyn514:shrink-item, r=GuillaumeGomez\n\nGet rid of `clean::Deprecation`\n\nThis brings the size of `item.deprecation` from 56 to 16 bytes. Helps with #79103 and https://github.com/rust-lang/rust/issues/76382, in the same vein as https://github.com/rust-lang/rust/pull/79957.\n\nr? `@GuillaumeGomez`", "tree": {"sha": "12fa2e37331f5e09d40b408e309347468e337fb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12fa2e37331f5e09d40b408e309347468e337fb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90f4b52961e83752da88704d8e2e1ac94457ebd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90f4b52961e83752da88704d8e2e1ac94457ebd5", "html_url": "https://github.com/rust-lang/rust/commit/90f4b52961e83752da88704d8e2e1ac94457ebd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90f4b52961e83752da88704d8e2e1ac94457ebd5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c00a4648a4cab9659a5712af457d07d42178c5e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c00a4648a4cab9659a5712af457d07d42178c5e0", "html_url": "https://github.com/rust-lang/rust/commit/c00a4648a4cab9659a5712af457d07d42178c5e0"}, {"sha": "7d452430fa9b3f9c7660c90adb2f05e4c4453336", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d452430fa9b3f9c7660c90adb2f05e4c4453336", "html_url": "https://github.com/rust-lang/rust/commit/7d452430fa9b3f9c7660c90adb2f05e4c4453336"}], "stats": {"total": 51, "additions": 21, "deletions": 30}, "files": [{"sha": "ead90f23ce7a12f7dea70b9ac51430b63ec92951", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4b52961e83752da88704d8e2e1ac94457ebd5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4b52961e83752da88704d8e2e1ac94457ebd5/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=90f4b52961e83752da88704d8e2e1ac94457ebd5", "patch": "@@ -621,7 +621,7 @@ pub fn eval_condition(\n     }\n }\n \n-#[derive(Encodable, Decodable, Clone, HashStable_Generic)]\n+#[derive(Debug, Encodable, Decodable, Clone, HashStable_Generic)]\n pub struct Deprecation {\n     pub since: Option<Symbol>,\n     /// The note to issue a reason."}, {"sha": "f5329bbb0cc447adae2f3653e675b8204677a13b", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=90f4b52961e83752da88704d8e2e1ac94457ebd5", "patch": "@@ -2337,16 +2337,6 @@ impl Clean<Item> for (&hir::MacroDef<'_>, Option<Symbol>) {\n     }\n }\n \n-impl Clean<Deprecation> for attr::Deprecation {\n-    fn clean(&self, _: &DocContext<'_>) -> Deprecation {\n-        Deprecation {\n-            since: self.since.map(|s| s.to_string()).filter(|s| !s.is_empty()),\n-            note: self.note.map(|n| n.to_string()).filter(|n| !n.is_empty()),\n-            is_since_rustc_version: self.is_since_rustc_version,\n-        }\n-    }\n-}\n-\n impl Clean<TypeBinding> for hir::TypeBinding<'_> {\n     fn clean(&self, cx: &DocContext<'_>) -> TypeBinding {\n         TypeBinding { name: self.ident.name.clean(cx), kind: self.kind.clean(cx) }"}, {"sha": "ff2fe131b4770d43a50e5c09eaab3082ff21f93b", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=90f4b52961e83752da88704d8e2e1ac94457ebd5", "patch": "@@ -12,7 +12,7 @@ use rustc_ast::attr;\n use rustc_ast::util::comments::beautify_doc_string;\n use rustc_ast::{self as ast, AttrStyle};\n use rustc_ast::{FloatTy, IntTy, UintTy};\n-use rustc_attr::{ConstStability, Stability, StabilityLevel};\n+use rustc_attr::{ConstStability, Deprecation, Stability, StabilityLevel};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_feature::UnstableFeatures;\n use rustc_hir as hir;\n@@ -151,7 +151,7 @@ impl Item {\n             attrs: cx.tcx.get_attrs(def_id).clean(cx),\n             visibility: cx.tcx.visibility(def_id).clean(cx),\n             stability: cx.tcx.lookup_stability(def_id).cloned(),\n-            deprecation: cx.tcx.lookup_deprecation(def_id).clean(cx),\n+            deprecation: cx.tcx.lookup_deprecation(def_id),\n             const_stability: cx.tcx.lookup_const_stability(def_id).cloned(),\n         }\n     }\n@@ -1821,13 +1821,6 @@ crate struct ProcMacro {\n     crate helpers: Vec<String>,\n }\n \n-#[derive(Clone, Debug)]\n-crate struct Deprecation {\n-    crate since: Option<String>,\n-    crate note: Option<String>,\n-    crate is_since_rustc_version: bool,\n-}\n-\n /// An type binding on an associated type (e.g., `A = Bar` in `Foo<A = Bar>` or\n /// `A: Send + Sync` in `Foo<A: Send + Sync>`).\n #[derive(Clone, PartialEq, Eq, Debug, Hash)]"}, {"sha": "88c5e94c27671c78830d30440842678220b90e89", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=90f4b52961e83752da88704d8e2e1ac94457ebd5", "patch": "@@ -49,7 +49,7 @@ use std::sync::Arc;\n \n use itertools::Itertools;\n use rustc_ast_pretty::pprust;\n-use rustc_attr::StabilityLevel;\n+use rustc_attr::{Deprecation, StabilityLevel};\n use rustc_data_structures::flock;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n@@ -65,7 +65,7 @@ use rustc_span::symbol::{kw, sym, Symbol};\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n \n-use crate::clean::{self, AttributesExt, Deprecation, GetDefId, RenderedLink, SelfTy, TypeKind};\n+use crate::clean::{self, AttributesExt, GetDefId, RenderedLink, SelfTy, TypeKind};\n use crate::config::{RenderInfo, RenderOptions};\n use crate::docfs::{DocFS, PathError};\n use crate::doctree;\n@@ -2219,7 +2219,10 @@ fn extra_info_tags(item: &clean::Item, parent: &clean::Item) -> String {\n     // The trailing space after each tag is to space it properly against the rest of the docs.\n     if let Some(depr) = &item.deprecation {\n         let mut message = \"Deprecated\";\n-        if !stability::deprecation_in_effect(depr.is_since_rustc_version, depr.since.as_deref()) {\n+        if !stability::deprecation_in_effect(\n+            depr.is_since_rustc_version,\n+            depr.since.map(|s| s.as_str()).as_deref(),\n+        ) {\n             message = \"Deprecation planned\";\n         }\n         tags += &tag_html(\"deprecated\", \"\", message);\n@@ -2268,20 +2271,24 @@ fn short_item_info(item: &clean::Item, cx: &Context, parent: Option<&clean::Item\n     let mut extra_info = vec![];\n     let error_codes = cx.shared.codes;\n \n-    if let Some(Deprecation { ref note, ref since, is_since_rustc_version }) = item.deprecation {\n+    if let Some(Deprecation { note, since, is_since_rustc_version, suggestion: _ }) =\n+        item.deprecation\n+    {\n         // We display deprecation messages for #[deprecated] and #[rustc_deprecated]\n         // but only display the future-deprecation messages for #[rustc_deprecated].\n         let mut message = if let Some(since) = since {\n+            let since = &since.as_str();\n             if !stability::deprecation_in_effect(is_since_rustc_version, Some(since)) {\n-                format!(\"Deprecating in {}\", Escape(&since))\n+                format!(\"Deprecating in {}\", Escape(since))\n             } else {\n-                format!(\"Deprecated since {}\", Escape(&since))\n+                format!(\"Deprecated since {}\", Escape(since))\n             }\n         } else {\n             String::from(\"Deprecated\")\n         };\n \n         if let Some(note) = note {\n+            let note = note.as_str();\n             let mut ids = cx.id_map.borrow_mut();\n             let html = MarkdownHtml(\n                 &note,"}, {"sha": "b5babfd10fdfa7f92656c028d72606b66bfe3b8c", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4b52961e83752da88704d8e2e1ac94457ebd5/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=90f4b52961e83752da88704d8e2e1ac94457ebd5", "patch": "@@ -77,10 +77,11 @@ impl JsonRenderer {\n     }\n }\n \n-impl From<clean::Deprecation> for Deprecation {\n-    fn from(deprecation: clean::Deprecation) -> Self {\n-        let clean::Deprecation { since, note, is_since_rustc_version: _ } = deprecation;\n-        Deprecation { since, note }\n+impl From<rustc_attr::Deprecation> for Deprecation {\n+    fn from(deprecation: rustc_attr::Deprecation) -> Self {\n+        #[rustfmt::skip]\n+        let rustc_attr::Deprecation { since, note, is_since_rustc_version: _, suggestion: _ } = deprecation;\n+        Deprecation { since: since.map(|s| s.to_string()), note: note.map(|s| s.to_string()) }\n     }\n }\n "}]}