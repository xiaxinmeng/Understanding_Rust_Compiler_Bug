{"sha": "c102d50ece44256c3b889d754b34375fb9496a33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMDJkNTBlY2U0NDI1NmMzYjg4OWQ3NTRiMzQzNzVmYjk0OTZhMzM=", "commit": {"author": {"name": "sinkuu", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-03T08:56:17Z"}, "committer": {"name": "sinkuu", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-03T08:56:17Z"}, "message": "&Self", "tree": {"sha": "2156bc161d2be61a318e5294224be7f3e4917bdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2156bc161d2be61a318e5294224be7f3e4917bdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c102d50ece44256c3b889d754b34375fb9496a33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c102d50ece44256c3b889d754b34375fb9496a33", "html_url": "https://github.com/rust-lang/rust/commit/c102d50ece44256c3b889d754b34375fb9496a33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c102d50ece44256c3b889d754b34375fb9496a33/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be7c4b48621b905eece89b4941fedaa2decec319", "url": "https://api.github.com/repos/rust-lang/rust/commits/be7c4b48621b905eece89b4941fedaa2decec319", "html_url": "https://github.com/rust-lang/rust/commit/be7c4b48621b905eece89b4941fedaa2decec319"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "fa0d7de6676eca5a28f62a4ec8acb44c6e0fba28", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c102d50ece44256c3b889d754b34375fb9496a33/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c102d50ece44256c3b889d754b34375fb9496a33/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=c102d50ece44256c3b889d754b34375fb9496a33", "patch": "@@ -134,7 +134,7 @@ fn check_collapsible_no_if_let(cx: &EarlyContext, expr: &ast::Expr, check: &ast:\n                 db.span_suggestion(expr.span,\n                                    \"try\",\n                                    format!(\"if {} {}\",\n-                                           lhs.and(rhs),\n+                                           lhs.and(&rhs),\n                                            snippet_block(cx, content.span, \"..\")));\n             });\n         }"}, {"sha": "3fd372052f66245e50663db854edf4afa337ce79", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c102d50ece44256c3b889d754b34375fb9496a33/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c102d50ece44256c3b889d754b34375fb9496a33/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=c102d50ece44256c3b889d754b34375fb9496a33", "patch": "@@ -6,7 +6,7 @@\n use rustc::hir;\n use rustc::lint::{EarlyContext, LateContext, LintContext};\n use rustc_errors;\n-use std::borrow::{Borrow, Cow};\n+use std::borrow::Cow;\n use std::fmt::Display;\n use std;\n use syntax::codemap::{CharPos, Span};\n@@ -136,8 +136,8 @@ impl<'a> Sugg<'a> {\n     }\n \n     /// Convenience method to create the `<lhs> && <rhs>` suggestion.\n-    pub fn and<R: Borrow<Self>>(self, rhs: R) -> Sugg<'static> {\n-        make_binop(ast::BinOpKind::And, &self, rhs.borrow())\n+    pub fn and(self, rhs: &Self) -> Sugg<'static> {\n+        make_binop(ast::BinOpKind::And, &self, rhs)\n     }\n \n     /// Convenience method to create the `<lhs> as <rhs>` suggestion.\n@@ -162,10 +162,10 @@ impl<'a> Sugg<'a> {\n \n     /// Convenience method to create the `<lhs>..<rhs>` or `<lhs>...<rhs>`\n     /// suggestion.\n-    pub fn range<E: Borrow<Self>>(self, end: E, limit: ast::RangeLimits) -> Sugg<'static> {\n+    pub fn range(self, end: &Self, limit: ast::RangeLimits) -> Sugg<'static> {\n         match limit {\n-            ast::RangeLimits::HalfOpen => make_assoc(AssocOp::DotDot, &self, end.borrow()),\n-            ast::RangeLimits::Closed => make_assoc(AssocOp::DotDotEq, &self, end.borrow()),\n+            ast::RangeLimits::HalfOpen => make_assoc(AssocOp::DotDot, &self, end),\n+            ast::RangeLimits::Closed => make_assoc(AssocOp::DotDotEq, &self, end),\n         }\n     }\n "}]}