{"sha": "99347591956958ab62074a41a83b4a62587c2ee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MzQ3NTkxOTU2OTU4YWI2MjA3NGE0MWE4M2I0YTYyNTg3YzJlZTY=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "message": "Remove an unused bkcerr_code constructor parameter\n\nThe RestrictionSet parameter of the err_borrowed_pointer_too_short\nconstructor isn't  actually used, so it can be removed.", "tree": {"sha": "89272b99c664b52611621ce38cd7792895b87345", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89272b99c664b52611621ce38cd7792895b87345"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99347591956958ab62074a41a83b4a62587c2ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99347591956958ab62074a41a83b4a62587c2ee6", "html_url": "https://github.com/rust-lang/rust/commit/99347591956958ab62074a41a83b4a62587c2ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99347591956958ab62074a41a83b4a62587c2ee6/comments", "author": null, "committer": null, "parents": [{"sha": "6849362f383c9c21a72cea5377c28596061c6c13", "url": "https://api.github.com/repos/rust-lang/rust/commits/6849362f383c9c21a72cea5377c28596061c6c13", "html_url": "https://github.com/rust-lang/rust/commit/6849362f383c9c21a72cea5377c28596061c6c13"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "94d88915b56a8241914806c060b3a75fdeaae662", "filename": "src/librustc/middle/borrowck/gather_loans/restrictions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99347591956958ab62074a41a83b4a62587c2ee6/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99347591956958ab62074a41a83b4a62587c2ee6/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs?ref=99347591956958ab62074a41a83b4a62587c2ee6", "patch": "@@ -133,7 +133,7 @@ impl<'a> RestrictionsContext<'a> {\n                             cause: self.cause,\n                             cmt: cmt_base,\n                             code: err_borrowed_pointer_too_short(\n-                                self.loan_region, lt, restrictions)});\n+                                self.loan_region, lt)});\n                     return Safe;\n                 }\n                 Safe\n@@ -148,7 +148,7 @@ impl<'a> RestrictionsContext<'a> {\n                             cause: self.cause,\n                             cmt: cmt_base,\n                             code: err_borrowed_pointer_too_short(\n-                                self.loan_region, lt, restrictions)});\n+                                self.loan_region, lt)});\n                     return Safe;\n                 }\n "}, {"sha": "aded2974c1257788164074eec8cfdaee6d1e2d55", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99347591956958ab62074a41a83b4a62587c2ee6/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99347591956958ab62074a41a83b4a62587c2ee6/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=99347591956958ab62074a41a83b4a62587c2ee6", "patch": "@@ -310,8 +310,7 @@ impl Repr for RestrictionSet {\n pub enum bckerr_code {\n     err_mutbl,\n     err_out_of_scope(ty::Region, ty::Region), // superscope, subscope\n-    err_borrowed_pointer_too_short(\n-        ty::Region, ty::Region, RestrictionSet), // loan, ptr\n+    err_borrowed_pointer_too_short(ty::Region, ty::Region), // loan, ptr\n }\n \n // Combination of an error code and the categorization of the expression\n@@ -711,7 +710,7 @@ impl<'a> BorrowckCtxt<'a> {\n                     suggestion);\n             }\n \n-            err_borrowed_pointer_too_short(loan_scope, ptr_scope, _) => {\n+            err_borrowed_pointer_too_short(loan_scope, ptr_scope) => {\n                 let descr = match opt_loan_path(&err.cmt) {\n                     Some(lp) => {\n                         format!(\"`{}`\", self.loan_path_to_str(&*lp))"}]}