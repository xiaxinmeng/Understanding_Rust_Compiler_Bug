{"sha": "ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZTQwMmRjOWU3MDhhOGVkNWU1ODYwYTdiMzBlYTc4MjZhYjUyYTE=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2021-01-11T12:27:03Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2021-01-11T12:27:03Z"}, "message": "Fix handling of malicious Readers in read_to_end", "tree": {"sha": "b559897469ab46fe4927a9706cf0c10d530ac70d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b559897469ab46fe4927a9706cf0c10d530ac70d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1", "html_url": "https://github.com/rust-lang/rust/commit/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c97f11af7bc4a6d3578f6a953be04ab2449a5728", "url": "https://api.github.com/repos/rust-lang/rust/commits/c97f11af7bc4a6d3578f6a953be04ab2449a5728", "html_url": "https://github.com/rust-lang/rust/commit/c97f11af7bc4a6d3578f6a953be04ab2449a5728"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "0bc0e0e8e83d8334b18c27ab81ff33b51654b108", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=ebe402dc9e708a8ed5e5860a7b30ea7826ab52a1", "patch": "@@ -390,7 +390,14 @@ where\n                 ret = Ok(g.len - start_len);\n                 break;\n             }\n-            Ok(n) => g.len += n,\n+            Ok(n) => {\n+                // We can't let g.len overflow which would result in the vec shrinking when the function returns. In\n+                // particular, that could break read_to_string if the shortened buffer doesn't end on a UTF-8 boundary.\n+                // The minimal check would just be a checked_add, but this assert is a bit more precise and should be\n+                // just about the same cost.\n+                assert!(n <= g.buf.len() - g.len);\n+                g.len += n;\n+            }\n             Err(ref e) if e.kind() == ErrorKind::Interrupted => {}\n             Err(e) => {\n                 ret = Err(e);"}]}