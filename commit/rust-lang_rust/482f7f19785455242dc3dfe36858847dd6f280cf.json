{"sha": "482f7f19785455242dc3dfe36858847dd6f280cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MmY3ZjE5Nzg1NDU1MjQyZGMzZGZlMzY4NTg4NDdkZDZmMjgwY2Y=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-23T19:34:57Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-23T19:34:57Z"}, "message": "Rename `-Z explain` to `-Z teach`", "tree": {"sha": "17995b6991c13f3de36e3b8b1b4f7eca1b2fd375", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17995b6991c13f3de36e3b8b1b4f7eca1b2fd375"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/482f7f19785455242dc3dfe36858847dd6f280cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/482f7f19785455242dc3dfe36858847dd6f280cf", "html_url": "https://github.com/rust-lang/rust/commit/482f7f19785455242dc3dfe36858847dd6f280cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/482f7f19785455242dc3dfe36858847dd6f280cf/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dac0f5a9ce8864a06916d3e8017a9b2c5262ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dac0f5a9ce8864a06916d3e8017a9b2c5262ae7", "html_url": "https://github.com/rust-lang/rust/commit/3dac0f5a9ce8864a06916d3e8017a9b2c5262ae7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ac9c6ee91906ceea46f8318297d35a1d87d73953", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/482f7f19785455242dc3dfe36858847dd6f280cf/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482f7f19785455242dc3dfe36858847dd6f280cf/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=482f7f19785455242dc3dfe36858847dd6f280cf", "patch": "@@ -1122,7 +1122,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"treat all errors that occur as bugs\"),\n     external_macro_backtrace: bool = (false, parse_bool, [UNTRACKED],\n           \"show macro backtraces even for non-local macros\"),\n-    explain: bool = (false, parse_bool, [TRACKED],\n+    teach: bool = (false, parse_bool, [TRACKED],\n           \"show extended diagnostic help\"),\n     continue_parse_after_error: bool = (false, parse_bool, [TRACKED],\n           \"attempt to recover from parse errors (experimental)\"),"}, {"sha": "4eff090b83ea60de743b41d3d13b68ddceeeca66", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/482f7f19785455242dc3dfe36858847dd6f280cf/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482f7f19785455242dc3dfe36858847dd6f280cf/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=482f7f19785455242dc3dfe36858847dd6f280cf", "patch": "@@ -832,8 +832,8 @@ impl Session {\n         }\n     }\n \n-    pub fn explain(&self, code: &DiagnosticId) -> bool {\n-        self.opts.debugging_opts.explain && !self.parse_sess.span_diagnostic.code_emitted(code)\n+    pub fn teach(&self, code: &DiagnosticId) -> bool {\n+        self.opts.debugging_opts.teach && !self.parse_sess.span_diagnostic.code_emitted(code)\n     }\n }\n "}, {"sha": "afcdc7575a3cbe1c36cfc3528aea4481db0d2369", "filename": "src/librustc_typeck/structured_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/482f7f19785455242dc3dfe36858847dd6f280cf/src%2Flibrustc_typeck%2Fstructured_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/482f7f19785455242dc3dfe36858847dd6f280cf/src%2Flibrustc_typeck%2Fstructured_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fstructured_errors.rs?ref=482f7f19785455242dc3dfe36858847dd6f280cf", "patch": "@@ -22,7 +22,7 @@ pub trait StructuredDiagnostic<'tcx> {\n \n     fn diagnostic(&self) -> DiagnosticBuilder<'tcx> {\n         let err = self.common();\n-        if self.session().explain(&self.code()) {\n+        if self.session().teach(&self.code()) {\n             self.extended(err)\n         } else {\n             self.regular(err)"}]}