{"sha": "e78fa8a0bc522894c1233c338859f02bf1c6a31e", "node_id": "C_kwDOAAsO6NoAKGU3OGZhOGEwYmM1MjI4OTRjMTIzM2MzMzg4NTlmMDJiZjFjNmEzMWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-01-25T11:31:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-25T11:31:44Z"}, "message": "Rollup merge of #107232 - notriddle:notriddle/settings-choice, r=GuillaumeGomez\n\nrustdoc: simplify settings popover DOM, CSS, JS\n\n* Change the class names so that they all start with `setting-`. That should make it harder to accidentally use a setting class outside the settings popover, where loading the CSS might accidentally change the styles of something unrelated.\n* Get rid of an unnecessary wrapper DIV around the radio button line.\n* Simplify CSS selectors by making the DOM easier and more intuitive to target.\n* Remove dead settings JS for obsolete select-wrapper", "tree": {"sha": "ea02bbc1a2485d04cd8a57dd1b1aebba3689350b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea02bbc1a2485d04cd8a57dd1b1aebba3689350b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e78fa8a0bc522894c1233c338859f02bf1c6a31e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj0RMgCRBK7hj4Ov3rIwAAce4IABNWj9gr+xKLCCCXu/HHTJlQ\nTpqhnNjt93ygFqjMFd6K8gjzo9zUpCX/iTuJ17atN/F80g7Ed/6MQcTHzssxffUj\nzYvX5LtivyqeKMHluz7kB0kqjrB9meXbXIAjC3wfjl2VVJ4TSr2QJrxxPiRVBAj2\nB4y8cs4ZYWAt2h9bX1+5SPt8HBDvxVCIhvgdfywNzgm542G0S6h9h3MMLAY9aqnR\n2Qd227Nq/t6VpJDPk4SDdXEsDsTersHLJJcsu+JL/kyC+RzL1pUaKlZyfimibPI5\n6tgxm/Mx+ZGNllOaIwHBUxDRisX6g1p2FfE7qh37+/6rFn8wAZ+s13+3Z8SJhwk=\n=c9ua\n-----END PGP SIGNATURE-----\n", "payload": "tree ea02bbc1a2485d04cd8a57dd1b1aebba3689350b\nparent 139a3c5b0aa4eb8b0ac21f561480f552072fdf64\nparent 1c41b4d5aced0f7d9f692efde53e896a234c7f48\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1674646304 +0530\ncommitter GitHub <noreply@github.com> 1674646304 +0530\n\nRollup merge of #107232 - notriddle:notriddle/settings-choice, r=GuillaumeGomez\n\nrustdoc: simplify settings popover DOM, CSS, JS\n\n* Change the class names so that they all start with `setting-`. That should make it harder to accidentally use a setting class outside the settings popover, where loading the CSS might accidentally change the styles of something unrelated.\n* Get rid of an unnecessary wrapper DIV around the radio button line.\n* Simplify CSS selectors by making the DOM easier and more intuitive to target.\n* Remove dead settings JS for obsolete select-wrapper\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e78fa8a0bc522894c1233c338859f02bf1c6a31e", "html_url": "https://github.com/rust-lang/rust/commit/e78fa8a0bc522894c1233c338859f02bf1c6a31e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e78fa8a0bc522894c1233c338859f02bf1c6a31e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "139a3c5b0aa4eb8b0ac21f561480f552072fdf64", "url": "https://api.github.com/repos/rust-lang/rust/commits/139a3c5b0aa4eb8b0ac21f561480f552072fdf64", "html_url": "https://github.com/rust-lang/rust/commit/139a3c5b0aa4eb8b0ac21f561480f552072fdf64"}, {"sha": "1c41b4d5aced0f7d9f692efde53e896a234c7f48", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c41b4d5aced0f7d9f692efde53e896a234c7f48", "html_url": "https://github.com/rust-lang/rust/commit/1c41b4d5aced0f7d9f692efde53e896a234c7f48"}], "stats": {"total": 133, "additions": 60, "deletions": 73}, "files": [{"sha": "c28cefebc8bf5fccf3796a295959267f6a945810", "filename": "src/librustdoc/html/static/css/settings.css", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e78fa8a0bc522894c1233c338859f02bf1c6a31e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css", "raw_url": "https://github.com/rust-lang/rust/raw/e78fa8a0bc522894c1233c338859f02bf1c6a31e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css?ref=e78fa8a0bc522894c1233c338859f02bf1c6a31e", "patch": "@@ -3,8 +3,7 @@\n \tposition: relative;\n }\n \n-.setting-line .radio-line input,\n-.setting-line .settings-toggle input {\n+.setting-radio input, .setting-check input {\n \tmargin-right: 0.3em;\n \theight: 1.2rem;\n \twidth: 1.2rem;\n@@ -14,21 +13,20 @@\n \t-webkit-appearance: none;\n \tcursor: pointer;\n }\n-.setting-line .radio-line input {\n+.setting-radio input {\n \tborder-radius: 50%;\n }\n-.setting-line .settings-toggle input:checked {\n+.setting-check input:checked {\n \tcontent: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\">\\\n \t\t<path d=\"M7,25L17,32L33,12\" fill=\"none\" stroke=\"black\" stroke-width=\"5\"/>\\\n \t\t<path d=\"M7,23L17,30L33,10\" fill=\"none\" stroke=\"white\" stroke-width=\"5\"/></svg>');\n }\n \n-.setting-line .radio-line input + span,\n-.setting-line .settings-toggle span {\n+.setting-radio span, .setting-check span {\n \tpadding-bottom: 1px;\n }\n \n-.radio-line .choice {\n+.setting-radio {\n \tmargin-top: 0.1em;\n \tmargin-bottom: 0.1em;\n \tmin-width: 3.8em;\n@@ -37,11 +35,11 @@\n \talign-items: center;\n \tcursor: pointer;\n }\n-.radio-line .choice + .choice {\n+.setting-radio + .setting-radio {\n \tmargin-left: 0.5em;\n }\n \n-.settings-toggle {\n+.setting-check {\n \tposition: relative;\n \twidth: 100%;\n \tmargin-right: 20px;\n@@ -50,23 +48,21 @@\n \tcursor: pointer;\n }\n \n-.setting-line .radio-line input:checked {\n+.setting-radio input:checked {\n \tbox-shadow: inset 0 0 0 3px var(--main-background-color);\n \tbackground-color: var(--settings-input-color);\n }\n-.setting-line .settings-toggle input:checked {\n+.setting-check input:checked {\n \tbackground-color: var(--settings-input-color);\n }\n-.setting-line .radio-line input:focus,\n-.setting-line .settings-toggle input:focus {\n+.setting-radio input:focus, .setting-check input:focus {\n \tbox-shadow: 0 0 1px 1px var(--settings-input-color);\n }\n /* In here we combine both `:focus` and `:checked` properties. */\n-.setting-line .radio-line input:checked:focus {\n+.setting-radio input:checked:focus {\n \tbox-shadow: inset 0 0 0 3px var(--main-background-color),\n \t\t0 0 2px 2px var(--settings-input-color);\n }\n-.setting-line .radio-line input:hover,\n-.setting-line .settings-toggle input:hover {\n+.setting-radio input:hover, .setting-check input:hover {\n \tborder-color: var(--settings-input-color) !important;\n }"}, {"sha": "a841b4b63bae8c1c557fd29475bcb6f016144380", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 21, "deletions": 30, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e78fa8a0bc522894c1233c338859f02bf1c6a31e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/e78fa8a0bc522894c1233c338859f02bf1c6a31e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=e78fa8a0bc522894c1233c338859f02bf1c6a31e", "patch": "@@ -48,13 +48,13 @@\n     }\n \n     function showLightAndDark() {\n-        removeClass(document.getElementById(\"preferred-light-theme\").parentElement, \"hidden\");\n-        removeClass(document.getElementById(\"preferred-dark-theme\").parentElement, \"hidden\");\n+        removeClass(document.getElementById(\"preferred-light-theme\"), \"hidden\");\n+        removeClass(document.getElementById(\"preferred-dark-theme\"), \"hidden\");\n     }\n \n     function hideLightAndDark() {\n-        addClass(document.getElementById(\"preferred-light-theme\").parentElement, \"hidden\");\n-        addClass(document.getElementById(\"preferred-dark-theme\").parentElement, \"hidden\");\n+        addClass(document.getElementById(\"preferred-light-theme\"), \"hidden\");\n+        addClass(document.getElementById(\"preferred-dark-theme\"), \"hidden\");\n     }\n \n     function updateLightAndDark() {\n@@ -80,17 +80,6 @@\n             toggle.onkeyup = handleKey;\n             toggle.onkeyrelease = handleKey;\n         });\n-        onEachLazy(settingsElement.getElementsByClassName(\"select-wrapper\"), elem => {\n-            const select = elem.getElementsByTagName(\"select\")[0];\n-            const settingId = select.id;\n-            const settingValue = getSettingValue(settingId);\n-            if (settingValue !== null) {\n-                select.value = settingValue;\n-            }\n-            select.onchange = function() {\n-                changeSetting(this.id, this.value);\n-            };\n-        });\n         onEachLazy(settingsElement.querySelectorAll(\"input[type=\\\"radio\\\"]\"), elem => {\n             const settingId = elem.name;\n             let settingValue = getSettingValue(settingId);\n@@ -127,38 +116,40 @@\n         let output = \"\";\n \n         for (const setting of settings) {\n-            output += \"<div class=\\\"setting-line\\\">\";\n             const js_data_name = setting[\"js_name\"];\n             const setting_name = setting[\"name\"];\n \n             if (setting[\"options\"] !== undefined) {\n                 // This is a select setting.\n                 output += `\\\n-<div class=\"radio-line\" id=\"${js_data_name}\">\n-    <div class=\"setting-name\">${setting_name}</div>\n-<div class=\"choices\">`;\n+<div class=\"setting-line\" id=\"${js_data_name}\">\n+    <div class=\"setting-radio-name\">${setting_name}</div>\n+    <div class=\"setting-radio-choices\">`;\n                 onEach(setting[\"options\"], option => {\n                     const checked = option === setting[\"default\"] ? \" checked\" : \"\";\n                     const full = `${js_data_name}-${option.replace(/ /g,\"-\")}`;\n \n                     output += `\\\n-<label for=\"${full}\" class=\"choice\">\n-    <input type=\"radio\" name=\"${js_data_name}\"\n-        id=\"${full}\" value=\"${option}\"${checked}>\n-    <span>${option}</span>\n-</label>`;\n+        <label for=\"${full}\" class=\"setting-radio\">\n+            <input type=\"radio\" name=\"${js_data_name}\"\n+                id=\"${full}\" value=\"${option}\"${checked}>\n+            <span>${option}</span>\n+        </label>`;\n                 });\n-                output += \"</div></div>\";\n+                output += `\\\n+    </div>\n+</div>`;\n             } else {\n                 // This is a checkbox toggle.\n                 const checked = setting[\"default\"] === true ? \" checked\" : \"\";\n                 output += `\\\n-<label class=\"settings-toggle\">\\\n-    <input type=\"checkbox\" id=\"${js_data_name}\"${checked}>\\\n-    <span class=\"label\">${setting_name}</span>\\\n-</label>`;\n+<div class=\"setting-line\">\\\n+    <label class=\"setting-check\">\\\n+        <input type=\"checkbox\" id=\"${js_data_name}\"${checked}>\\\n+        <span>${setting_name}</span>\\\n+    </label>\\\n+</div>`;\n             }\n-            output += \"</div>\";\n         }\n         return output;\n     }"}, {"sha": "3e444cbd6dc9985bcab38905b01d3e62f9fa6cb8", "filename": "tests/rustdoc-gui/mobile.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e78fa8a0bc522894c1233c338859f02bf1c6a31e/tests%2Frustdoc-gui%2Fmobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e78fa8a0bc522894c1233c338859f02bf1c6a31e/tests%2Frustdoc-gui%2Fmobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fmobile.goml?ref=e78fa8a0bc522894c1233c338859f02bf1c6a31e", "patch": "@@ -28,7 +28,7 @@ goto: \"file://\" + |DOC_PATH| + \"/settings.html\"\n size: (400, 600)\n // Ignored for now https://github.com/rust-lang/rust/issues/93784.\n // compare-elements-position-near-false: (\n-//     \"#preferred-light-theme .setting-name\",\n-//     \"#preferred-light-theme .choice\",\n+//     \"#preferred-light-theme .setting-radio-name\",\n+//     \"#preferred-light-theme .setting-radio\",\n //     {\"y\": 16},\n // )"}, {"sha": "a84172885780856b3927b12a212ceb2666f9da68", "filename": "tests/rustdoc-gui/settings.goml", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e78fa8a0bc522894c1233c338859f02bf1c6a31e/tests%2Frustdoc-gui%2Fsettings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e78fa8a0bc522894c1233c338859f02bf1c6a31e/tests%2Frustdoc-gui%2Fsettings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsettings.goml?ref=e78fa8a0bc522894c1233c338859f02bf1c6a31e", "patch": "@@ -43,12 +43,12 @@ wait-for: \"#settings\"\n // We check that the \"Use system theme\" is disabled.\n assert-property: (\"#theme-system-preference\", {\"checked\": \"false\"})\n // Meaning that only the \"theme\" menu is showing up.\n-assert: \".setting-line:not(.hidden) #theme\"\n-assert: \".setting-line.hidden #preferred-dark-theme\"\n-assert: \".setting-line.hidden #preferred-light-theme\"\n+assert: \"#theme.setting-line:not(.hidden)\"\n+assert: \"#preferred-dark-theme.setting-line.hidden\"\n+assert: \"#preferred-light-theme.setting-line.hidden\"\n \n // We check that the correct theme is selected.\n-assert-property: (\"#theme .choices #theme-dark\", {\"checked\": \"true\"})\n+assert-property: (\"#theme .setting-radio-choices #theme-dark\", {\"checked\": \"true\"})\n \n // Some style checks...\n move-cursor-to: \"#settings-menu > a\"\n@@ -109,31 +109,31 @@ assert-css: (\n         \"box-shadow\": \"rgb(33, 150, 243) 0px 0px 1px 1px\",\n     },\n )\n-// Now we check the setting-name for radio buttons is on a different line than the label.\n+// Now we check the setting-radio-name is on a different line than the label.\n compare-elements-position-near: (\n-    \"#theme .setting-name\",\n-    \"#theme .choices\",\n+    \"#theme .setting-radio-name\",\n+    \"#theme .setting-radio-choices\",\n     {\"x\": 1}\n )\n compare-elements-position-near-false: (\n-    \"#theme .setting-name\",\n-    \"#theme .choices\",\n+    \"#theme .setting-radio-name\",\n+    \"#theme .setting-radio-choices\",\n     {\"y\": 1}\n )\n // Now we check that the label positions are all on the same line.\n compare-elements-position-near: (\n-    \"#theme .choices #theme-light\",\n-    \"#theme .choices #theme-dark\",\n+    \"#theme .setting-radio-choices #theme-light\",\n+    \"#theme .setting-radio-choices #theme-dark\",\n     {\"y\": 1}\n )\n compare-elements-position-near: (\n-    \"#theme .choices #theme-dark\",\n-    \"#theme .choices #theme-ayu\",\n+    \"#theme .setting-radio-choices #theme-dark\",\n+    \"#theme .setting-radio-choices #theme-ayu\",\n     {\"y\": 1}\n )\n compare-elements-position-near: (\n-    \"#theme .choices #theme-ayu\",\n-    \"#theme .choices #theme-system-preference\",\n+    \"#theme .setting-radio-choices #theme-ayu\",\n+    \"#theme .setting-radio-choices #theme-system-preference\",\n     {\"y\": 1}\n )\n \n@@ -180,17 +180,17 @@ assert-css: (\n // We now switch the display.\n click: \"#theme-system-preference\"\n // Wait for the hidden element to show up.\n-wait-for: \".setting-line:not(.hidden) #preferred-dark-theme\"\n-assert: \".setting-line:not(.hidden) #preferred-light-theme\"\n+wait-for: \"#preferred-dark-theme.setting-line:not(.hidden)\"\n+assert: \"#preferred-light-theme.setting-line:not(.hidden)\"\n \n // We check their text as well.\n-assert-text: (\"#preferred-dark-theme .setting-name\", \"Preferred dark theme\")\n-assert-text: (\"#preferred-light-theme .setting-name\", \"Preferred light theme\")\n+assert-text: (\"#preferred-dark-theme .setting-radio-name\", \"Preferred dark theme\")\n+assert-text: (\"#preferred-light-theme .setting-radio-name\", \"Preferred light theme\")\n \n // We now check that clicking on the toggles' text is like clicking on the checkbox.\n // To test it, we use the \"Disable keyboard shortcuts\".\n local-storage: {\"rustdoc-disable-shortcuts\": \"false\"}\n-click: \".setting-line:last-child .settings-toggle .label\"\n+click: \".setting-line:last-child .setting-check span\"\n assert-local-storage: {\"rustdoc-disable-shortcuts\": \"true\"}\n \n // Make sure that \"Disable keyboard shortcuts\" actually took effect.\n@@ -200,7 +200,7 @@ assert-false: \"#help-button .popover\"\n wait-for-css: (\"#settings-menu .popover\", {\"display\": \"block\"})\n \n // Now turn keyboard shortcuts back on, and see if they work.\n-click: \".setting-line:last-child .settings-toggle .label\"\n+click: \".setting-line:last-child .setting-check span\"\n assert-local-storage: {\"rustdoc-disable-shortcuts\": \"false\"}\n press-key: \"Escape\"\n press-key: \"?\""}, {"sha": "31c9d99aa832491b76ffc8af89b79c6ba91c76b5", "filename": "tests/rustdoc-gui/theme-change.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e78fa8a0bc522894c1233c338859f02bf1c6a31e/tests%2Frustdoc-gui%2Ftheme-change.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e78fa8a0bc522894c1233c338859f02bf1c6a31e/tests%2Frustdoc-gui%2Ftheme-change.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftheme-change.goml?ref=e78fa8a0bc522894c1233c338859f02bf1c6a31e", "patch": "@@ -43,7 +43,7 @@ assert-local-storage: { \"rustdoc-theme\": \"ayu\" }\n \n assert-local-storage-false: { \"rustdoc-use-system-theme\": \"true\" }\n click: \"#theme-system-preference\"\n-wait-for: \".setting-line:not(.hidden) #preferred-light-theme\"\n+wait-for: \"#preferred-light-theme.setting-line:not(.hidden)\"\n assert-local-storage: { \"rustdoc-use-system-theme\": \"true\" }\n // We click on both preferred light and dark themes to be sure that there is a change.\n click: \"#preferred-light-theme-dark\"\n@@ -52,16 +52,16 @@ wait-for-css: (\"body\", { \"background-color\": |background_dark| })\n \n reload:\n // Ensure that the \"preferred themes\" are still displayed.\n-wait-for: \".setting-line:not(.hidden) #preferred-light-theme\"\n+wait-for: \"#preferred-light-theme.setting-line:not(.hidden)\"\n click: \"#theme-light\"\n wait-for-css: (\"body\", { \"background-color\": |background_light| })\n assert-local-storage: { \"rustdoc-theme\": \"light\" }\n // Ensure it's now hidden again\n-wait-for: \".setting-line.hidden #preferred-light-theme\"\n+wait-for: \"#preferred-light-theme.setting-line.hidden\"\n // And ensure the theme was rightly set.\n wait-for-css: (\"body\", { \"background-color\": |background_light| })\n assert-local-storage: { \"rustdoc-theme\": \"light\" }\n \n reload:\n wait-for: \"#settings\"\n-assert: \".setting-line.hidden #preferred-light-theme\"\n+assert: \"#preferred-light-theme.setting-line.hidden\""}]}