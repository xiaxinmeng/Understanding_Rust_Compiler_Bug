{"sha": "fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMTNmZDlkNjRjM2VkNjBhNjVlNTg5NzQ2N2IyZDM3NDJhYTkzM2Y=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-30T05:26:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-30T05:27:37Z"}, "message": "rt: Remove set_min_stack", "tree": {"sha": "be018b45197fc9d9dc561d3fd8807a00203540bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be018b45197fc9d9dc561d3fd8807a00203540bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "html_url": "https://github.com/rust-lang/rust/commit/fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cad4918b2af71b0d35f263ac168c442f8d266600", "url": "https://api.github.com/repos/rust-lang/rust/commits/cad4918b2af71b0d35f263ac168c442f8d266600", "html_url": "https://github.com/rust-lang/rust/commit/cad4918b2af71b0d35f263ac168c442f8d266600"}], "stats": {"total": 34, "additions": 1, "deletions": 33}, "files": [{"sha": "89d8c6d12f2f3978799ca46d3268eb997ad98af5", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "patch": "@@ -445,13 +445,6 @@ migrate_alloc(void *alloc, rust_task_id tid) {\n     }\n }\n \n-// defined in rust_task.cpp\n-extern size_t g_custom_min_stack_size;\n-extern \"C\" CDECL void\n-set_min_stack(uintptr_t stack_size) {\n-    g_custom_min_stack_size = stack_size;\n-}\n-\n extern \"C\" CDECL int\n sched_threads() {\n     rust_task *task = rust_scheduler::get_task();"}, {"sha": "1bf62e42f014db85fcedc717bdcfdbf58b1943f8", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "patch": "@@ -65,18 +65,6 @@ const uint8_t stack_canary[] = {0xAB, 0xCD, 0xAB, 0xCD,\n                                 0xAB, 0xCD, 0xAB, 0xCD,\n                                 0xAB, 0xCD, 0xAB, 0xCD};\n \n-// Stack size\n-size_t g_custom_min_stack_size = 0;\n-\n-static size_t\n-get_min_stk_size(size_t default_size) {\n-    if (g_custom_min_stack_size != 0) {\n-        return g_custom_min_stack_size;\n-    } else {\n-        return default_size;\n-    }\n-}\n-\n static size_t\n get_next_stk_size(rust_scheduler *sched, rust_task *task,\n                   size_t min, size_t current, size_t requested) {\n@@ -157,7 +145,7 @@ new_stk(rust_scheduler *sched, rust_task *task, size_t requested_sz)\n     }\n \n     // The minimum stack size, in bytes, of a Rust stack, excluding red zone\n-    size_t min_sz = get_min_stk_size(sched->min_stack_size);\n+    size_t min_sz = sched->min_stack_size;\n \n     // Try to reuse an existing stack segment\n     if (task->stk != NULL && task->stk->prev != NULL) {"}, {"sha": "50981882ecd321e8923b4d76819ef49259347906", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "patch": "@@ -49,7 +49,6 @@ rust_getcwd\n rust_task_is_unwinding\n rust_task_sleep\n rust_get_task\n-set_min_stack\n sched_threads\n shape_log_str\n squareroot"}, {"sha": "8f0ccec560f7164bf4ab6e15ac0a503f863bff56", "filename": "src/test/run-fail/morestack4.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack4.rs?ref=fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "patch": "@@ -4,10 +4,6 @@\n \n use std;\n \n-native mod rustrt {\n-    fn set_min_stack(size: uint);\n-}\n-\n fn getbig_and_fail(&&i: int) {\n     let r = and_then_get_big_again(@0);\n     if i != 0 {\n@@ -21,7 +17,6 @@ resource and_then_get_big_again(_i: @int) {\n }\n \n fn main() {\n-    rustrt::set_min_stack(256u);\n     task::spawn {||\n         getbig_and_fail(1);\n     };"}, {"sha": "ecd187ae44ad44944086d15356a0e5645f31917d", "filename": "src/test/run-pass/morestack5.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Ftest%2Frun-pass%2Fmorestack5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack5.rs?ref=fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "patch": "@@ -3,10 +3,6 @@\n use std;\n import task;\n \n-native mod rustrt {\n-    fn set_min_stack(size: uint);\n-}\n-\n fn getbig(&&i: int) {\n     if i != 0 {\n         getbig(i - 1);\n@@ -16,7 +12,6 @@ fn getbig(&&i: int) {\n fn main() {\n     let sz = 400u;\n     while sz < 500u {\n-        rustrt::set_min_stack(sz);\n         task::join(task::spawn_joinable {|| getbig(200) });\n         sz += 1u;\n     }"}, {"sha": "66954c29d9835b3bf38a2754b0761e6892aebe5f", "filename": "src/test/run-pass/morestack6.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa13fd9d64c3ed60a65e5897467b2d3742aa933f/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack6.rs?ref=fa13fd9d64c3ed60a65e5897467b2d3742aa933f", "patch": "@@ -6,7 +6,6 @@ import task;\n import std::rand;\n \n native mod rustrt {\n-    fn set_min_stack(size: uint);\n     fn debug_get_stk_seg() -> *u8;\n \n     fn unsupervise();\n@@ -71,7 +70,6 @@ fn main() {\n     for f in fns {\n         let sz = rng.next() % 256u32 + 256u32;\n         let frame_backoff = rng.next() % 10u32 + 1u32;\n-        rustrt::set_min_stack(sz as uint);\n         task::join(task::spawn_joinable {|| runtest(f, frame_backoff);});\n     }\n }\n\\ No newline at end of file"}]}