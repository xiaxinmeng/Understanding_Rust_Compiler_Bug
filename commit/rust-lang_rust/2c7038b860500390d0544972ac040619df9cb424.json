{"sha": "2c7038b860500390d0544972ac040619df9cb424", "node_id": "C_kwDOAAsO6NoAKDJjNzAzOGI4NjA1MDAzOTBkMDU0NDk3MmFjMDQwNjE5ZGY5Y2I0MjQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-18T17:55:24Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-06-19T12:56:31Z"}, "message": "Fix \"Remove src_files and remove_file\"", "tree": {"sha": "f10b5a552eef23b7d2d8aa6899b865484ca5d977", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f10b5a552eef23b7d2d8aa6899b865484ca5d977"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c7038b860500390d0544972ac040619df9cb424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7038b860500390d0544972ac040619df9cb424", "html_url": "https://github.com/rust-lang/rust/commit/2c7038b860500390d0544972ac040619df9cb424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c7038b860500390d0544972ac040619df9cb424/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "489d2daec0c595a3598212db7ff3d95524175464", "url": "https://api.github.com/repos/rust-lang/rust/commits/489d2daec0c595a3598212db7ff3d95524175464", "html_url": "https://github.com/rust-lang/rust/commit/489d2daec0c595a3598212db7ff3d95524175464"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "999a54495eec05c18314300ee6603f7520c895ea", "filename": "src/archive.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2c7038b860500390d0544972ac040619df9cb424/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c7038b860500390d0544972ac040619df9cb424/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=2c7038b860500390d0544972ac040619df9cb424", "patch": "@@ -100,7 +100,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         Ok(())\n     }\n \n-    fn build(mut self) {\n+    fn build(mut self) -> bool {\n         use std::process::Command;\n \n         fn add_file_using_ar(archive: &Path, file: &Path) {\n@@ -133,6 +133,8 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n             BuilderKind::Bsd(ar::Builder::new(File::create(&self.config.dst).unwrap()))\n         };\n \n+        let any_members = !self.entries.is_empty();\n+\n         // Add all files\n         for (entry_name, entry) in self.entries.into_iter() {\n             match entry {\n@@ -193,6 +195,8 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         if !status.success() {\n             self.config.sess.fatal(&format!(\"Ranlib exited with code {:?}\", status.code()));\n         }\n+\n+        any_members\n     }\n \n     fn inject_dll_import_lib(&mut self, _lib_name: &str, _dll_imports: &[DllImport], _tmpdir: &MaybeTempDir) {"}]}