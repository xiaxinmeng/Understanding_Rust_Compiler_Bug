{"sha": "3b61acb4ae15a1ec6071db40e09437319795db67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNjFhY2I0YWUxNWExZWM2MDcxZGI0MGUwOTQzNzMxOTc5NWRiNjc=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-10-18T11:40:03Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-10-18T11:45:04Z"}, "message": "Make inlay hint length configurable", "tree": {"sha": "7aad0029f3f138cc2d6a21a3051c11b57a047cf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aad0029f3f138cc2d6a21a3051c11b57a047cf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b61acb4ae15a1ec6071db40e09437319795db67", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJdqaXBAAoJENWyu1zcMzS8DpIH/2WuuGD4x6NT64ZuUpzEtMrD\nP9ycvsbHAnH0rZAkPw7mnBzK3QSiNfvVVM8wus9d5Fz3zWtqq7LWgTSVFjCi5C3G\nkm2uloCuoVrhdCaNM764WZ9LBE56S0Ex842RZNWKGDgsWUUeZA1fybrScUPlb263\nyrv8lGaRo5Ani6ifzan31XX2tAAqgdcdj2LJw/1Ieo32G/GF30SC/uG0xh4sded6\nNwa8s5l9FZPB4czIUXtTBb6Rjn/VOfgKJVGEw0PbjJlOHopBuK9gcfRCFpkElca8\no27G1sVA0USlmSqSj63JZ2ef36QScwbWm4iv8rYq2OwyVJIz0JgZsaEOPrzhoxk=\n=1Wtm\n-----END PGP SIGNATURE-----", "payload": "tree 7aad0029f3f138cc2d6a21a3051c11b57a047cf1\nparent ce4fb06dec597207324195ae62db93f53984b890\nauthor Wilco Kusee <wilcokusee@gmail.com> 1571398803 +0200\ncommitter Wilco Kusee <wilcokusee@gmail.com> 1571399104 +0200\n\nMake inlay hint length configurable\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b61acb4ae15a1ec6071db40e09437319795db67", "html_url": "https://github.com/rust-lang/rust/commit/3b61acb4ae15a1ec6071db40e09437319795db67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b61acb4ae15a1ec6071db40e09437319795db67/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce4fb06dec597207324195ae62db93f53984b890", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce4fb06dec597207324195ae62db93f53984b890", "html_url": "https://github.com/rust-lang/rust/commit/ce4fb06dec597207324195ae62db93f53984b890"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "35211bcc23a2eb24df60ccfbe4d7117ed263bea6", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3b61acb4ae15a1ec6071db40e09437319795db67/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/3b61acb4ae15a1ec6071db40e09437319795db67/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=3b61acb4ae15a1ec6071db40e09437319795db67", "patch": "@@ -260,6 +260,11 @@\n                     \"type\": \"boolean\",\n                     \"default\": true,\n                     \"description\": \"Display additional type information in the editor\"\n+                },\n+                \"rust-analyzer.maxInlayHintLength\": {\n+                    \"type\": \"number\",\n+                    \"default\": 20,\n+                    \"description\": \"Maximum length for inlay hints\"\n                 }\n             }\n         },"}, {"sha": "454a464d4a8a93f476e88e661654cf4aa1d32995", "filename": "editors/code/src/commands/inlay_hints.ts", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3b61acb4ae15a1ec6071db40e09437319795db67/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3b61acb4ae15a1ec6071db40e09437319795db67/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts?ref=3b61acb4ae15a1ec6071db40e09437319795db67", "patch": "@@ -13,8 +13,6 @@ interface InlayHint {\n     label: string;\n }\n \n-const maxHintLength = 20;\n-\n const typeHintDecorationType = vscode.window.createTextEditorDecorationType({\n     after: {\n         color: new vscode.ThemeColor('ralsp.inlayHint')\n@@ -86,12 +84,12 @@ export class HintsUpdater {\n         const newHints = await this.queryHints(editor.document.uri.toString());\n         if (newHints !== null) {\n             const newDecorations = newHints.map(hint => {\n-                let label = hint.label.substring(0, maxHintLength);\n-                if (hint.label.length > maxHintLength) {\n-                    label += '\u2026';\n-                }\n+                const [label, range] = this.truncateHint(\n+                    hint.label,\n+                    hint.range\n+                );\n                 return {\n-                    range: this.truncateHint(hint.range),\n+                    range,\n                     renderOptions: {\n                         after: {\n                             contentText: `: ${label}`\n@@ -106,16 +104,30 @@ export class HintsUpdater {\n         }\n     }\n \n-    private truncateHint(range: Range): Range {\n-        if (!range.isSingleLine) {\n-            return range;\n+    private truncateHint(\n+        label: string,\n+        range: vscode.Range\n+    ): [string, vscode.Range] {\n+        if (!Server.config.maxInlayHintLength) {\n+            return [label, range];\n+        }\n+\n+        let newLabel = label.substring(0, Server.config.maxInlayHintLength);\n+        if (label.length > Server.config.maxInlayHintLength) {\n+            newLabel += '\u2026';\n         }\n-        const maxEnd = new vscode.Position(\n+\n+        range = new vscode.Range(\n             range.start.line,\n-            range.start.character + maxHintLength\n+            range.start.character,\n+            range.end.line,\n+            Math.min(\n+                range.start.character + Server.config.maxInlayHintLength,\n+                range.end.character\n+            )\n         );\n-        const end = range.end.isAfter(maxEnd) ? maxEnd : range.end;\n-        return new Range(range.start, end);\n+\n+        return [newLabel, range];\n     }\n \n     private async queryHints(documentUri: string): Promise<InlayHint[] | null> {"}, {"sha": "2578bc6d10450dbabe30b26561ba10dd6b994a2e", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b61acb4ae15a1ec6071db40e09437319795db67/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3b61acb4ae15a1ec6071db40e09437319795db67/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=3b61acb4ae15a1ec6071db40e09437319795db67", "patch": "@@ -22,6 +22,7 @@ export class Config {\n     public showWorkspaceLoadedNotification = true;\n     public lruCapacity: null | number = null;\n     public displayInlayHints = true;\n+    public maxInlayHintLength: null | number = null;\n     public excludeGlobs = [];\n     public useClientWatching = false;\n     public featureFlags = {};\n@@ -131,6 +132,11 @@ export class Config {\n         if (config.has('displayInlayHints')) {\n             this.displayInlayHints = config.get('displayInlayHints') as boolean;\n         }\n+        if (config.has('maxInlayHintLength')) {\n+            this.maxInlayHintLength = config.get(\n+                'maxInlayHintLength'\n+            ) as number;\n+        }\n         if (config.has('excludeGlobs')) {\n             this.excludeGlobs = config.get('excludeGlobs') || [];\n         }"}]}