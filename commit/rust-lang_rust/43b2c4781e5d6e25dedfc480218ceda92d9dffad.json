{"sha": "43b2c4781e5d6e25dedfc480218ceda92d9dffad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYjJjNDc4MWU1ZDZlMjVkZWRmYzQ4MDIxOGNlZGE5MmQ5ZGZmYWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-07-29T04:13:02Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-07-29T17:24:40Z"}, "message": "std: Fix sub-second Condvar::wait_timeout_ms\n\nThe API we're calling requires us to pass an absolute point in time as an\nargument (`pthread_cond_timedwait`) so we call `gettimeofday` ahead of time to\nthen add the specified duration to. Unfortuantely the current \"add the duration\"\nlogic forgot to take into account the current time's sub-second precision (e.g.\nthe `tv_usec` field was ignored), causing sub-second duration waits to return\nspuriously.", "tree": {"sha": "c333c753befe153331acb5443fcf8a38bd61ab0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c333c753befe153331acb5443fcf8a38bd61ab0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43b2c4781e5d6e25dedfc480218ceda92d9dffad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43b2c4781e5d6e25dedfc480218ceda92d9dffad", "html_url": "https://github.com/rust-lang/rust/commit/43b2c4781e5d6e25dedfc480218ceda92d9dffad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43b2c4781e5d6e25dedfc480218ceda92d9dffad/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68fc2d98d547a7045e918b03117c740179addb77", "url": "https://api.github.com/repos/rust-lang/rust/commits/68fc2d98d547a7045e918b03117c740179addb77", "html_url": "https://github.com/rust-lang/rust/commit/68fc2d98d547a7045e918b03117c740179addb77"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "beecb445e8d687fd6ab6aefd5804f3ec0cf68a78", "filename": "src/libstd/sys/unix/condvar.rs", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/43b2c4781e5d6e25dedfc480218ceda92d9dffad/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b2c4781e5d6e25dedfc480218ceda92d9dffad/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs?ref=43b2c4781e5d6e25dedfc480218ceda92d9dffad", "patch": "@@ -60,21 +60,22 @@ impl Condvar {\n         let r = ffi::gettimeofday(&mut sys_now, ptr::null_mut());\n         debug_assert_eq!(r, 0);\n \n+        let nsec = dur.extra_nanos() as libc::c_long +\n+                   (sys_now.tv_usec * 1000) as libc::c_long;\n+        let extra = (nsec / 1_000_000_000) as libc::time_t;\n+        let nsec = nsec % 1_000_000_000;\n         let seconds = dur.secs() as libc::time_t;\n-        let timeout = match sys_now.tv_sec.checked_add(seconds) {\n-            Some(sec) => {\n-                libc::timespec {\n-                    tv_sec: sec,\n-                    tv_nsec: dur.extra_nanos() as libc::c_long,\n-                }\n-            }\n-            None => {\n-                libc::timespec {\n-                    tv_sec: <libc::time_t>::max_value(),\n-                    tv_nsec: 1_000_000_000 - 1,\n-                }\n+\n+        let timeout = sys_now.tv_sec.checked_add(extra).and_then(|s| {\n+            s.checked_add(seconds)\n+        }).map(|s| {\n+            libc::timespec { tv_sec: s, tv_nsec: nsec }\n+        }).unwrap_or_else(|| {\n+            libc::timespec {\n+                tv_sec: <libc::time_t>::max_value(),\n+                tv_nsec: 1_000_000_000 - 1,\n             }\n-        };\n+        });\n \n         // And wait!\n         let r = ffi::pthread_cond_timedwait(self.inner.get(), mutex::raw(mutex),"}]}