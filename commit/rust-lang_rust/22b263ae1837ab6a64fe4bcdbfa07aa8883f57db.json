{"sha": "22b263ae1837ab6a64fe4bcdbfa07aa8883f57db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYjI2M2FlMTgzN2FiNmE2NGZlNGJjZGJmYTA3YWE4ODgzZjU3ZGI=", "commit": {"author": {"name": "Amos Onn", "email": "amosonn@gmail.com", "date": "2020-02-02T01:18:33Z"}, "committer": {"name": "Amos Onn", "email": "amosonn@gmail.com", "date": "2020-02-03T00:03:33Z"}, "message": "Optimize core::ptr::align_offset\n\n- As explained in the comment inside mod_inv, it is valid to work mod\n  `usize::max_value()` right until the end.", "tree": {"sha": "87849e4cf6f838023f7ee4d7b9bb8aa4136a2339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87849e4cf6f838023f7ee4d7b9bb8aa4136a2339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22b263ae1837ab6a64fe4bcdbfa07aa8883f57db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22b263ae1837ab6a64fe4bcdbfa07aa8883f57db", "html_url": "https://github.com/rust-lang/rust/commit/22b263ae1837ab6a64fe4bcdbfa07aa8883f57db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22b263ae1837ab6a64fe4bcdbfa07aa8883f57db/comments", "author": {"login": "amosonn", "id": 3142573, "node_id": "MDQ6VXNlcjMxNDI1NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3142573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amosonn", "html_url": "https://github.com/amosonn", "followers_url": "https://api.github.com/users/amosonn/followers", "following_url": "https://api.github.com/users/amosonn/following{/other_user}", "gists_url": "https://api.github.com/users/amosonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/amosonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amosonn/subscriptions", "organizations_url": "https://api.github.com/users/amosonn/orgs", "repos_url": "https://api.github.com/users/amosonn/repos", "events_url": "https://api.github.com/users/amosonn/events{/privacy}", "received_events_url": "https://api.github.com/users/amosonn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amosonn", "id": 3142573, "node_id": "MDQ6VXNlcjMxNDI1NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3142573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amosonn", "html_url": "https://github.com/amosonn", "followers_url": "https://api.github.com/users/amosonn/followers", "following_url": "https://api.github.com/users/amosonn/following{/other_user}", "gists_url": "https://api.github.com/users/amosonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/amosonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amosonn/subscriptions", "organizations_url": "https://api.github.com/users/amosonn/orgs", "repos_url": "https://api.github.com/users/amosonn/repos", "events_url": "https://api.github.com/users/amosonn/events{/privacy}", "received_events_url": "https://api.github.com/users/amosonn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3173cd1473eeebcc9567b686e63d281a761fd936", "url": "https://api.github.com/repos/rust-lang/rust/commits/3173cd1473eeebcc9567b686e63d281a761fd936", "html_url": "https://github.com/rust-lang/rust/commit/3173cd1473eeebcc9567b686e63d281a761fd936"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "0ee50966f968c70cbfb876cada69aa2cf26bd6aa", "filename": "src/libcore/ptr/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/22b263ae1837ab6a64fe4bcdbfa07aa8883f57db/src%2Flibcore%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b263ae1837ab6a64fe4bcdbfa07aa8883f57db/src%2Flibcore%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmod.rs?ref=22b263ae1837ab6a64fe4bcdbfa07aa8883f57db", "patch": "@@ -1081,8 +1081,7 @@ pub(crate) unsafe fn align_offset<T: Sized>(p: *const T, a: usize) -> usize {\n                 // uses e.g., subtraction `mod n`. It is entirely fine to do them `mod\n                 // usize::max_value()` instead, because we take the result `mod n` at the end\n                 // anyway.\n-                inverse = inverse.wrapping_mul(2usize.wrapping_sub(x.wrapping_mul(inverse)))\n-                    & (going_mod - 1);\n+                inverse = inverse.wrapping_mul(2usize.wrapping_sub(x.wrapping_mul(inverse)));\n                 if going_mod >= m {\n                     return inverse & (m - 1);\n                 }"}]}