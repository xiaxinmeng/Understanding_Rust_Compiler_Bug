{"sha": "d34992ecbabc8c7e5e7edc82ec0e2caa083c5517", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNDk5MmVjYmFiYzhjN2U1ZTdlZGM4MmVjMGUyY2FhMDgzYzU1MTc=", "commit": {"author": {"name": "Julian Orth", "email": "ju.orth@gmail.com", "date": "2014-08-31T13:29:22Z"}, "committer": {"name": "Julian Orth", "email": "ju.orth@gmail.com", "date": "2014-08-31T15:27:49Z"}, "message": "Add unwrap method to MoveItems", "tree": {"sha": "5b9ebd2476ec5cbaaa108cf88340e8609d0f8535", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b9ebd2476ec5cbaaa108cf88340e8609d0f8535"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d34992ecbabc8c7e5e7edc82ec0e2caa083c5517", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d34992ecbabc8c7e5e7edc82ec0e2caa083c5517", "html_url": "https://github.com/rust-lang/rust/commit/d34992ecbabc8c7e5e7edc82ec0e2caa083c5517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d34992ecbabc8c7e5e7edc82ec0e2caa083c5517/comments", "author": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mahkoh", "id": 1882250, "node_id": "MDQ6VXNlcjE4ODIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1882250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahkoh", "html_url": "https://github.com/mahkoh", "followers_url": "https://api.github.com/users/mahkoh/followers", "following_url": "https://api.github.com/users/mahkoh/following{/other_user}", "gists_url": "https://api.github.com/users/mahkoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahkoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahkoh/subscriptions", "organizations_url": "https://api.github.com/users/mahkoh/orgs", "repos_url": "https://api.github.com/users/mahkoh/repos", "events_url": "https://api.github.com/users/mahkoh/events{/privacy}", "received_events_url": "https://api.github.com/users/mahkoh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db47aa5bdf308213b4198b81e9d2e406ec716189", "url": "https://api.github.com/repos/rust-lang/rust/commits/db47aa5bdf308213b4198b81e9d2e406ec716189", "html_url": "https://github.com/rust-lang/rust/commit/db47aa5bdf308213b4198b81e9d2e406ec716189"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "a7005cf454db5fb9a5ba74b4a9013984034bf771", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d34992ecbabc8c7e5e7edc82ec0e2caa083c5517/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d34992ecbabc8c7e5e7edc82ec0e2caa083c5517/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=d34992ecbabc8c7e5e7edc82ec0e2caa083c5517", "patch": "@@ -1618,6 +1618,19 @@ pub struct MoveItems<T> {\n     iter: Items<'static, T>\n }\n \n+impl<T> MoveItems<T> {\n+    #[inline]\n+    /// Drops all items that have not yet been moved and returns the empty vector.\n+    pub fn unwrap(mut self) -> Vec<T> {\n+        unsafe {\n+            for _x in self { }\n+            let MoveItems { allocation, cap, iter: _iter } = self;\n+            mem::forget(self);\n+            Vec { ptr: allocation, cap: cap, len: 0 }\n+        }\n+    }\n+}\n+\n impl<T> Iterator<T> for MoveItems<T> {\n     #[inline]\n     fn next<'a>(&'a mut self) -> Option<T> {\n@@ -2016,6 +2029,18 @@ mod tests {\n         assert_eq!(vec.swap_remove(0), None);\n     }\n \n+    #[test]\n+    fn test_move_iter_unwrap() {\n+        let mut vec: Vec<uint> = Vec::with_capacity(7);\n+        vec.push(1);\n+        vec.push(2);\n+        let ptr = vec.as_ptr();\n+        vec = vec.move_iter().unwrap();\n+        assert_eq!(vec.as_ptr(), ptr);\n+        assert_eq!(vec.capacity(), 7);\n+        assert_eq!(vec.len(), 0);\n+    }\n+\n     #[bench]\n     fn bench_new(b: &mut Bencher) {\n         b.iter(|| {"}]}