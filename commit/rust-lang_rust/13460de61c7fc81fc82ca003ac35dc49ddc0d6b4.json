{"sha": "13460de61c7fc81fc82ca003ac35dc49ddc0d6b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNDYwZGU2MWM3ZmM4MWZjODJjYTAwM2FjMzVkYzQ5ZGRjMGQ2YjQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-12T03:09:02Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-12T03:09:02Z"}, "message": "std: fix method renaming.", "tree": {"sha": "9af6ba170132267d4ed49b29e9cd6adbc47d7b17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9af6ba170132267d4ed49b29e9cd6adbc47d7b17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13460de61c7fc81fc82ca003ac35dc49ddc0d6b4", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13460de61c7fc81fc82ca003ac35dc49ddc0d6b4", "html_url": "https://github.com/rust-lang/rust/commit/13460de61c7fc81fc82ca003ac35dc49ddc0d6b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13460de61c7fc81fc82ca003ac35dc49ddc0d6b4/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eecbe5556b96aa5546ede9454483a53b25d3380a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eecbe5556b96aa5546ede9454483a53b25d3380a", "html_url": "https://github.com/rust-lang/rust/commit/eecbe5556b96aa5546ede9454483a53b25d3380a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fdf12d406e81f83a5ebb6589f8c4abedb90b9ff6", "filename": "src/libstd/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13460de61c7fc81fc82ca003ac35dc49ddc0d6b4/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13460de61c7fc81fc82ca003ac35dc49ddc0d6b4/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=13460de61c7fc81fc82ca003ac35dc49ddc0d6b4", "patch": "@@ -258,7 +258,7 @@ impl CharEq for extern \"Rust\" fn(char) -> bool {\n impl<'self, C: CharEq> CharEq for &'self [C] {\n     #[inline(always)]\n     fn matches(&self, c: char) -> bool {\n-        self.iter().any(|m| m.matches(c))\n+        self.iter().any_(|m| m.matches(c))\n     }\n \n     fn only_ascii(&self) -> bool {"}]}