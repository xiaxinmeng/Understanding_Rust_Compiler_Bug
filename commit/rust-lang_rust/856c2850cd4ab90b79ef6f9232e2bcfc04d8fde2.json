{"sha": "856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NmMyODUwY2Q0YWI5MGI3OWVmNmY5MjMyZTJiY2ZjMDRkOGZkZTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-06T19:54:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-06T19:54:36Z"}, "message": "Merge #7865\n\n7865: preserve escape sequences when replacing string with char r=Veykril a=jDomantas\n\nCurrently it replaces escape sequence with the actual value, which is very wrong for `\"\\n\"`.\n\nCo-authored-by: Domantas Jadenkus <djadenkus@gmail.com>", "tree": {"sha": "bb8e089adda7b848ba75b48b9afd3e6e8a45a429", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8e089adda7b848ba75b48b9afd3e6e8a45a429"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQ938CRBK7hj4Ov3rIwAAdHIIAGFrE0aRkDJ4Fd/eM0cXfXVJ\nDq2PybcIsV9vj6QGj8/6MoX3CYUX1F7j8WqYfPXidl4nqwLgJirW34ofIYoORQI5\n3lx/h0CbsJyv3TbS0WQazJRRQ1fT8Am6RUtJLc8FU40tiR64Za4T3+mTGlXKjs6L\n3Z7mZqj1ZjE+yDKgOZafLoKN8JkKyMeoEmeBx0DJ2fp2BUZCtOjJOxIUBKfPLJOY\noF6uW4D8SbDVjGmm7K7f+PaPxp56sTbnWwDzx+gGDFOhK0Mh5KVBGznLiY8rHlT3\n0YSYIZTT8FcXbUpnWFMxJyLTMgYLt/NZUXuf355vC6YijayU0Qa5VCIaCReN0G4=\n=RzIs\n-----END PGP SIGNATURE-----\n", "payload": "tree bb8e089adda7b848ba75b48b9afd3e6e8a45a429\nparent 71b8fb7c572eb658ee1136f086d6348aafba1e1d\nparent 5bb4aec05f547cce8d9752a0e856b9b91e911643\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615060476 +0000\ncommitter GitHub <noreply@github.com> 1615060476 +0000\n\nMerge #7865\n\n7865: preserve escape sequences when replacing string with char r=Veykril a=jDomantas\n\nCurrently it replaces escape sequence with the actual value, which is very wrong for `\"\\n\"`.\n\nCo-authored-by: Domantas Jadenkus <djadenkus@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2", "html_url": "https://github.com/rust-lang/rust/commit/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71b8fb7c572eb658ee1136f086d6348aafba1e1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/71b8fb7c572eb658ee1136f086d6348aafba1e1d", "html_url": "https://github.com/rust-lang/rust/commit/71b8fb7c572eb658ee1136f086d6348aafba1e1d"}, {"sha": "5bb4aec05f547cce8d9752a0e856b9b91e911643", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb4aec05f547cce8d9752a0e856b9b91e911643", "html_url": "https://github.com/rust-lang/rust/commit/5bb4aec05f547cce8d9752a0e856b9b91e911643"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "303c0dcbebfcba22bb8377f2a078c3226739c42d", "filename": "crates/ide_assists/src/handlers/replace_string_with_char.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_string_with_char.rs?ref=856c2850cd4ab90b79ef6f9232e2bcfc04d8fde2", "patch": "@@ -31,7 +31,9 @@ pub(crate) fn replace_string_with_char(acc: &mut Assists, ctx: &AssistContext) -\n         \"Replace string with char\",\n         target,\n         |edit| {\n-            edit.replace(token.syntax().text_range(), format!(\"'{}'\", value));\n+            let token_text = token.syntax().text();\n+            let inner_text = &token_text[1..token_text.len() - 1];\n+            edit.replace(token.syntax().text_range(), format!(\"'{}'\", inner_text));\n         },\n     )\n }\n@@ -134,4 +136,38 @@ mod tests {\n                 \"##,\n         )\n     }\n+\n+    #[test]\n+    fn replace_string_with_char_newline() {\n+        check_assist(\n+            replace_string_with_char,\n+            r#\"\n+                fn f() {\n+                    find($0\"\\n\");\n+                }\n+                \"#,\n+            r##\"\n+                fn f() {\n+                    find('\\n');\n+                }\n+                \"##,\n+        )\n+    }\n+\n+    #[test]\n+    fn replace_string_with_char_unicode_escape() {\n+        check_assist(\n+            replace_string_with_char,\n+            r#\"\n+                fn f() {\n+                    find($0\"\\u{7FFF}\");\n+                }\n+                \"#,\n+            r##\"\n+                fn f() {\n+                    find('\\u{7FFF}');\n+                }\n+                \"##,\n+        )\n+    }\n }"}]}