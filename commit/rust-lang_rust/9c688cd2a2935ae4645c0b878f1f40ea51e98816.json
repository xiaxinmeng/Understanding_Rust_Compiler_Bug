{"sha": "9c688cd2a2935ae4645c0b878f1f40ea51e98816", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNjg4Y2QyYTI5MzVhZTQ2NDVjMGI4NzhmMWY0MGVhNTFlOTg4MTY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-07T11:07:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-07T11:07:16Z"}, "message": "Rollup merge of #83936 - crlf0710:disallow_extern_block_non_ascii, r=Manishearth\n\nDisable using non-ascii identifiers in extern blocks.\n\nFixes #83923.", "tree": {"sha": "5ef9ffad9d388273325d5340df4b3a94700dbdae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ef9ffad9d388273325d5340df4b3a94700dbdae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c688cd2a2935ae4645c0b878f1f40ea51e98816", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgbZJkCRBK7hj4Ov3rIwAAdHIIAA7ELLbbvj1kqcybv6ZkFWIJ\noN1tHpYsXhOm57gUMDK7jLaNMyv5JAGlCCwy1HZ105vs0rwqSomG44bvJfKrsG3k\nNI9in7+UnKfdhzyPGa8J4TbQmuGMVReQQJibZJeaGcUz92hYLKUE0/Bmbbvrhk7Y\nGyyOfHgBuFsZz/6cT2Vil5RgNcYh8LyFygNIEq2KwZY7sFLQXgiGdI1P3QjqCTl0\nwc3JcUzri8GBXB/7dXTnv7nL3R/nZ8CZH4Ud+l4WAIFCDwoz+Mh0hpXGSzpvMIwh\nsHS/5wZ8W417jh6bp+fdBxkGqrpbHQ8yTJEtud8NiB/7zsEadUc4RXu0/E0U0dI=\n=PiPY\n-----END PGP SIGNATURE-----\n", "payload": "tree 5ef9ffad9d388273325d5340df4b3a94700dbdae\nparent d554385bbf94c063220319b856bfa7b6d9f63aaf\nparent 4752a54ad00f4e1e8307958b80d0ba8258e93f1b\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617793636 +0200\ncommitter GitHub <noreply@github.com> 1617793636 +0200\n\nRollup merge of #83936 - crlf0710:disallow_extern_block_non_ascii, r=Manishearth\n\nDisable using non-ascii identifiers in extern blocks.\n\nFixes #83923.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c688cd2a2935ae4645c0b878f1f40ea51e98816", "html_url": "https://github.com/rust-lang/rust/commit/9c688cd2a2935ae4645c0b878f1f40ea51e98816", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c688cd2a2935ae4645c0b878f1f40ea51e98816/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d554385bbf94c063220319b856bfa7b6d9f63aaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d554385bbf94c063220319b856bfa7b6d9f63aaf", "html_url": "https://github.com/rust-lang/rust/commit/d554385bbf94c063220319b856bfa7b6d9f63aaf"}, {"sha": "4752a54ad00f4e1e8307958b80d0ba8258e93f1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4752a54ad00f4e1e8307958b80d0ba8258e93f1b", "html_url": "https://github.com/rust-lang/rust/commit/4752a54ad00f4e1e8307958b80d0ba8258e93f1b"}], "stats": {"total": 83, "additions": 80, "deletions": 3}, "files": [{"sha": "bb09f701531cf196ce6305986d5cdf22ecff2df8", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9c688cd2a2935ae4645c0b878f1f40ea51e98816/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c688cd2a2935ae4645c0b878f1f40ea51e98816/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=9c688cd2a2935ae4645c0b878f1f40ea51e98816", "patch": "@@ -532,6 +532,25 @@ impl<'a> AstValidator<'a> {\n         }\n     }\n \n+    /// An item in `extern { ... }` cannot use non-ascii identifier.\n+    fn check_foreign_item_ascii_only(&self, ident: Ident) {\n+        let symbol_str = ident.as_str();\n+        if !symbol_str.is_ascii() {\n+            let n = 83942;\n+            self.err_handler()\n+                .struct_span_err(\n+                    ident.span,\n+                    \"items in `extern` blocks cannot use non-ascii identifiers\",\n+                )\n+                .span_label(self.current_extern_span(), \"in this `extern` block\")\n+                .note(&format!(\n+                    \"This limitation may be lifted in the future; see issue #{} <https://github.com/rust-lang/rust/issues/{}> for more information\",\n+                    n, n,\n+                ))\n+                .emit();\n+        }\n+    }\n+\n     /// Reject C-varadic type unless the function is foreign,\n     /// or free and `unsafe extern \"C\"` semantically.\n     fn check_c_varadic_type(&self, fk: FnKind<'a>) {\n@@ -592,7 +611,7 @@ impl<'a> AstValidator<'a> {\n             self.session,\n             ident.span,\n             E0754,\n-            \"trying to load file for module `{}` with non ascii identifer name\",\n+            \"trying to load file for module `{}` with non-ascii identifier name\",\n             ident.name\n         )\n         .help(\"consider using `#[path]` attribute to specify filesystem path\")\n@@ -1103,15 +1122,18 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 self.check_defaultness(fi.span, *def);\n                 self.check_foreign_fn_bodyless(fi.ident, body.as_deref());\n                 self.check_foreign_fn_headerless(fi.ident, fi.span, sig.header);\n+                self.check_foreign_item_ascii_only(fi.ident);\n             }\n             ForeignItemKind::TyAlias(box TyAliasKind(def, generics, bounds, body)) => {\n                 self.check_defaultness(fi.span, *def);\n                 self.check_foreign_kind_bodyless(fi.ident, \"type\", body.as_ref().map(|b| b.span));\n                 self.check_type_no_bounds(bounds, \"`extern` blocks\");\n                 self.check_foreign_ty_genericless(generics);\n+                self.check_foreign_item_ascii_only(fi.ident);\n             }\n             ForeignItemKind::Static(_, _, body) => {\n                 self.check_foreign_kind_bodyless(fi.ident, \"static\", body.as_ref().map(|b| b.span));\n+                self.check_foreign_item_ascii_only(fi.ident);\n             }\n             ForeignItemKind::MacCall(..) => {}\n         }"}, {"sha": "524ad3c83fcbc8dff8b7845671096b4d4bd9dd06", "filename": "src/test/ui/feature-gates/feature-gate-non_ascii_idents.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.rs?ref=9c688cd2a2935ae4645c0b878f1f40ea51e98816", "patch": "@@ -28,6 +28,7 @@ enum B\u00e4r { //~ ERROR non-ascii idents\n \n extern \"C\" {\n     fn q\u00fcx();  //~ ERROR non-ascii idents\n+    //~^ ERROR items in `extern` blocks\n }\n \n fn main() {}"}, {"sha": "c712acee37f9453cec580a07d4a0fb4237a5b791", "filename": "src/test/ui/feature-gates/feature-gate-non_ascii_idents.stderr", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr?ref=9c688cd2a2935ae4645c0b878f1f40ea51e98816", "patch": "@@ -1,3 +1,13 @@\n+error: items in `extern` blocks cannot use non-ascii identifiers\n+  --> $DIR/feature-gate-non_ascii_idents.rs:30:8\n+   |\n+LL | extern \"C\" {\n+   | ---------- in this `extern` block\n+LL |     fn q\u00fcx();\n+   |        ^^^\n+   |\n+   = note: This limitation may be lifted in the future; see issue #83942 <https://github.com/rust-lang/rust/issues/83942> for more information\n+\n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:1:22\n    |\n@@ -115,6 +125,6 @@ LL |     fn q\u00fcx();\n    = note: see issue #55467 <https://github.com/rust-lang/rust/issues/55467> for more information\n    = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 14 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "c70ced731d54ddcf4fe42fe03ed286d01e00629a", "filename": "src/test/ui/rfc-2457/extern_block_nonascii_forbidden.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Frfc-2457%2Fextern_block_nonascii_forbidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Frfc-2457%2Fextern_block_nonascii_forbidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2457%2Fextern_block_nonascii_forbidden.rs?ref=9c688cd2a2935ae4645c0b878f1f40ea51e98816", "patch": "@@ -0,0 +1,10 @@\n+#![feature(extern_types)]\n+#![feature(non_ascii_idents)]\n+\n+extern \"C\" {\n+    type \u4e00; //~ items in `extern` blocks cannot use non-ascii identifiers\n+    fn \u4e8c(); //~ items in `extern` blocks cannot use non-ascii identifiers\n+    static \u4e09: usize; //~ items in `extern` blocks cannot use non-ascii identifiers\n+}\n+\n+fn main() {}"}, {"sha": "3b18c06ec5c4c371041e40fb041633d56115bd25", "filename": "src/test/ui/rfc-2457/extern_block_nonascii_forbidden.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Frfc-2457%2Fextern_block_nonascii_forbidden.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Frfc-2457%2Fextern_block_nonascii_forbidden.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2457%2Fextern_block_nonascii_forbidden.stderr?ref=9c688cd2a2935ae4645c0b878f1f40ea51e98816", "patch": "@@ -0,0 +1,34 @@\n+error: items in `extern` blocks cannot use non-ascii identifiers\n+  --> $DIR/extern_block_nonascii_forbidden.rs:5:10\n+   |\n+LL | extern \"C\" {\n+   | ---------- in this `extern` block\n+LL |     type \u4e00;\n+   |          ^^\n+   |\n+   = note: This limitation may be lifted in the future; see issue #83942 <https://github.com/rust-lang/rust/issues/83942> for more information\n+\n+error: items in `extern` blocks cannot use non-ascii identifiers\n+  --> $DIR/extern_block_nonascii_forbidden.rs:6:8\n+   |\n+LL | extern \"C\" {\n+   | ---------- in this `extern` block\n+LL |     type \u4e00;\n+LL |     fn \u4e8c();\n+   |        ^^\n+   |\n+   = note: This limitation may be lifted in the future; see issue #83942 <https://github.com/rust-lang/rust/issues/83942> for more information\n+\n+error: items in `extern` blocks cannot use non-ascii identifiers\n+  --> $DIR/extern_block_nonascii_forbidden.rs:7:12\n+   |\n+LL | extern \"C\" {\n+   | ---------- in this `extern` block\n+...\n+LL |     static \u4e09: usize;\n+   |            ^^\n+   |\n+   = note: This limitation may be lifted in the future; see issue #83942 <https://github.com/rust-lang/rust/issues/83942> for more information\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "6e06ab737c2150d7b05daadb66adb6cce8560a92", "filename": "src/test/ui/rfc-2457/mod_file_nonascii_forbidden.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Frfc-2457%2Fmod_file_nonascii_forbidden.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c688cd2a2935ae4645c0b878f1f40ea51e98816/src%2Ftest%2Fui%2Frfc-2457%2Fmod_file_nonascii_forbidden.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2457%2Fmod_file_nonascii_forbidden.stderr?ref=9c688cd2a2935ae4645c0b878f1f40ea51e98816", "patch": "@@ -6,7 +6,7 @@ LL | mod \u0159\u0173\u015b\u0165;\n    |\n    = help: to create the module `\u0159\u0173\u015b\u0165`, create file \"$DIR/\u0159\u0173\u015b\u0165.rs\"\n \n-error[E0754]: trying to load file for module `\u0159\u0173\u015b\u0165` with non ascii identifer name\n+error[E0754]: trying to load file for module `\u0159\u0173\u015b\u0165` with non-ascii identifier name\n   --> $DIR/mod_file_nonascii_forbidden.rs:3:5\n    |\n LL | mod \u0159\u0173\u015b\u0165;"}]}