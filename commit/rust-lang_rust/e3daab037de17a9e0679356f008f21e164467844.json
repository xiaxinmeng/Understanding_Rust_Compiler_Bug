{"sha": "e3daab037de17a9e0679356f008f21e164467844", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZGFhYjAzN2RlMTdhOWUwNjc5MzU2ZjAwOGYyMWUxNjQ0Njc4NDQ=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-22T22:05:51Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-22T22:53:13Z"}, "message": "Remove proc_macro from the tidy whitelist again\n\nPR #38842 has exposed that we were missing the src/test/compile-fail-fulldeps\ndirectory in the search for feature gate tests. Because the detection didn't\nwork despite the effort to name the test appropriately and add a correct\n\"// gate-test-proc_macro\" comment, proc_macro was added to the whitelist.\n\nWe fix this little weakness in the feature gate tidy check and add\nthe src/test/compile-fail-fulldeps directory to the checked directories.", "tree": {"sha": "ee99e870d4acb9e36ec6889d7347e808a6ab8d46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee99e870d4acb9e36ec6889d7347e808a6ab8d46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3daab037de17a9e0679356f008f21e164467844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3daab037de17a9e0679356f008f21e164467844", "html_url": "https://github.com/rust-lang/rust/commit/e3daab037de17a9e0679356f008f21e164467844", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3daab037de17a9e0679356f008f21e164467844/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8fa31029f264988c1dac30778d9cbebdd5eb4d3", "html_url": "https://github.com/rust-lang/rust/commit/a8fa31029f264988c1dac30778d9cbebdd5eb4d3"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "ee8113e80e5752dd5284ac10a85cb0d32a07aed5", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e3daab037de17a9e0679356f008f21e164467844/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3daab037de17a9e0679356f008f21e164467844/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=e3daab037de17a9e0679356f008f21e164467844", "patch": "@@ -115,9 +115,10 @@ pub fn check(path: &Path, bad: &mut bool) {\n         }\n     });\n \n-    super::walk(&path.join(\"test/compile-fail\"),\n-                &mut |path| super::filter_dirs(path),\n-                &mut |file| {\n+    super::walk_many(&[&path.join(\"test/compile-fail\"),\n+                       &path.join(\"test/compile-fail-fulldeps\")],\n+                     &mut |path| super::filter_dirs(path),\n+                     &mut |file| {\n         let filename = file.file_name().unwrap().to_string_lossy();\n         if !filename.ends_with(\".rs\") || filename == \"features.rs\" ||\n            filename == \"diagnostic_list.rs\" {\n@@ -170,7 +171,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n         \"cfg_target_has_atomic\", \"staged_api\", \"const_indexing\",\n         \"unboxed_closures\", \"stmt_expr_attributes\",\n         \"cfg_target_thread_local\", \"unwind_attributes\",\n-        \"inclusive_range_syntax\", \"proc_macro\"\n+        \"inclusive_range_syntax\"\n     ];\n \n     // Only check the number of lang features."}, {"sha": "9962c6ec9af12209c560d9d2c9edccc1e45b2151", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3daab037de17a9e0679356f008f21e164467844/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3daab037de17a9e0679356f008f21e164467844/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=e3daab037de17a9e0679356f008f21e164467844", "patch": "@@ -71,6 +71,11 @@ fn filter_dirs(path: &Path) -> bool {\n     skip.iter().any(|p| path.ends_with(p))\n }\n \n+fn walk_many(paths: &[&Path], skip: &mut FnMut(&Path) -> bool, f: &mut FnMut(&Path)) {\n+    for path in paths {\n+        walk(path, skip, f);\n+    }\n+}\n \n fn walk(path: &Path, skip: &mut FnMut(&Path) -> bool, f: &mut FnMut(&Path)) {\n     for entry in t!(fs::read_dir(path), path) {"}]}