{"sha": "03d32905e7312b0179103e8cc338876c81098da4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZDMyOTA1ZTczMTJiMDE3OTEwM2U4Y2MzMzg4NzZjODEwOThkYTQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-05-28T22:01:32Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-05-28T22:01:32Z"}, "message": "rustc_codegen_ssa: remove obsolete codegen stats.", "tree": {"sha": "9e31d084577fc0c4447fc477e8949c5c86156fa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e31d084577fc0c4447fc477e8949c5c86156fa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03d32905e7312b0179103e8cc338876c81098da4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03d32905e7312b0179103e8cc338876c81098da4", "html_url": "https://github.com/rust-lang/rust/commit/03d32905e7312b0179103e8cc338876c81098da4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03d32905e7312b0179103e8cc338876c81098da4/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "721268583759224d0f6476e0b8b196cc8afbdea0", "url": "https://api.github.com/repos/rust-lang/rust/commits/721268583759224d0f6476e0b8b196cc8afbdea0", "html_url": "https://github.com/rust-lang/rust/commit/721268583759224d0f6476e0b8b196cc8afbdea0"}], "stats": {"total": 28, "additions": 0, "deletions": 28}, "files": [{"sha": "eeefaa4dd492cc288001129597a837b92fa8a12f", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/03d32905e7312b0179103e8cc338876c81098da4/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03d32905e7312b0179103e8cc338876c81098da4/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=03d32905e7312b0179103e8cc338876c81098da4", "patch": "@@ -190,38 +190,20 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for CodegenUnit<'tcx> {\n \n #[derive(Clone, Default)]\n pub struct Stats {\n-    pub n_glues_created: usize,\n-    pub n_null_glues: usize,\n-    pub n_real_glues: usize,\n-    pub n_fns: usize,\n-    pub n_inlines: usize,\n-    pub n_closures: usize,\n     pub n_llvm_insns: usize,\n     pub llvm_insns: FxHashMap<String, usize>,\n     // (ident, llvm-instructions)\n     pub fn_stats: Vec<(String, usize)>,\n }\n \n impl_stable_hash_for!(struct self::Stats {\n-    n_glues_created,\n-    n_null_glues,\n-    n_real_glues,\n-    n_fns,\n-    n_inlines,\n-    n_closures,\n     n_llvm_insns,\n     llvm_insns,\n     fn_stats\n });\n \n impl Stats {\n     pub fn extend(&mut self, stats: Stats) {\n-        self.n_glues_created += stats.n_glues_created;\n-        self.n_null_glues += stats.n_null_glues;\n-        self.n_real_glues += stats.n_real_glues;\n-        self.n_fns += stats.n_fns;\n-        self.n_inlines += stats.n_inlines;\n-        self.n_closures += stats.n_closures;\n         self.n_llvm_insns += stats.n_llvm_insns;\n \n         for (k, v) in stats.llvm_insns {"}, {"sha": "67d3a2113067c401dd819395696019261785bfb5", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/03d32905e7312b0179103e8cc338876c81098da4/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03d32905e7312b0179103e8cc338876c81098da4/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=03d32905e7312b0179103e8cc338876c81098da4", "patch": "@@ -85,7 +85,6 @@ impl<'a, 'tcx, Cx: CodegenMethods<'tcx>> Drop for StatRecorder<'a, 'tcx, Cx> {\n             let mut stats = self.cx.stats().borrow_mut();\n             let iend = stats.n_llvm_insns;\n             stats.fn_stats.push((self.name.take().unwrap(), iend - self.istart));\n-            stats.n_fns += 1;\n             // Reset LLVM insn count to avoid compound costs.\n             stats.n_llvm_insns = self.istart;\n         }\n@@ -428,8 +427,6 @@ pub fn codegen_instance<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n     let lldecl = cx.instances().borrow().get(&instance).cloned().unwrap_or_else(||\n         bug!(\"Instance `{:?}` not already declared\", instance));\n \n-    cx.stats().borrow_mut().n_closures += 1;\n-\n     let mir = cx.tcx().instance_mir(instance.def);\n     mir::codegen_mir::<Bx>(cx, lldecl, &mir, instance, sig);\n }\n@@ -703,13 +700,6 @@ pub fn codegen_crate<B: ExtraBackendMethods>(\n \n     if tcx.sess.codegen_stats() {\n         println!(\"--- codegen stats ---\");\n-        println!(\"n_glues_created: {}\", all_stats.n_glues_created);\n-        println!(\"n_null_glues: {}\", all_stats.n_null_glues);\n-        println!(\"n_real_glues: {}\", all_stats.n_real_glues);\n-\n-        println!(\"n_fns: {}\", all_stats.n_fns);\n-        println!(\"n_inlines: {}\", all_stats.n_inlines);\n-        println!(\"n_closures: {}\", all_stats.n_closures);\n         println!(\"fn stats:\");\n         all_stats.fn_stats.sort_by_key(|&(_, insns)| insns);\n         for &(ref name, insns) in all_stats.fn_stats.iter() {"}]}