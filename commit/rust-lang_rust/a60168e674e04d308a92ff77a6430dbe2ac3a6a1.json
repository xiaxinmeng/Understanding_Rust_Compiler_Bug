{"sha": "a60168e674e04d308a92ff77a6430dbe2ac3a6a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MDE2OGU2NzRlMDRkMzA4YTkyZmY3N2E2NDMwZGJlMmFjM2E2YTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-18T12:58:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-18T12:58:10Z"}, "message": "Use assert_never properly", "tree": {"sha": "23751dbe7ce7a9039cc30768ef521897b5e4ff9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23751dbe7ce7a9039cc30768ef521897b5e4ff9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a60168e674e04d308a92ff77a6430dbe2ac3a6a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a60168e674e04d308a92ff77a6430dbe2ac3a6a1", "html_url": "https://github.com/rust-lang/rust/commit/a60168e674e04d308a92ff77a6430dbe2ac3a6a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a60168e674e04d308a92ff77a6430dbe2ac3a6a1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f53026997536d5f08cc0d7165aae6222b74b8c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f53026997536d5f08cc0d7165aae6222b74b8c0", "html_url": "https://github.com/rust-lang/rust/commit/1f53026997536d5f08cc0d7165aae6222b74b8c0"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "5d91d3a5c0c6b82ca25197fc5c66c02700f1b694", "filename": "crates/completion/src/item.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a60168e674e04d308a92ff77a6430dbe2ac3a6a1/crates%2Fcompletion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a60168e674e04d308a92ff77a6430dbe2ac3a6a1/crates%2Fcompletion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fitem.rs?ref=a60168e674e04d308a92ff77a6430dbe2ac3a6a1", "patch": "@@ -398,7 +398,9 @@ impl Builder {\n     pub(crate) fn set_detail(mut self, detail: Option<impl Into<String>>) -> Builder {\n         self.detail = detail.map(Into::into);\n         if let Some(detail) = &self.detail {\n-            assert_never!(detail.contains('\\n'), \"multiline detail: {}\", detail);\n+            if assert_never!(detail.contains('\\n'), \"multiline detail: {}\", detail) {\n+                self.detail = Some(detail.splitn(2, '\\n').next().unwrap().to_string());\n+            }\n         }\n         self\n     }"}]}