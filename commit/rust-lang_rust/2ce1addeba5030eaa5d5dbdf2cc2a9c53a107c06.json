{"sha": "2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZTFhZGRlYmE1MDMwZWFhNWQ1ZGJkZjJjYzJhOWM1M2ExMDdjMDY=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-07-06T19:55:03Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-07-09T20:15:05Z"}, "message": "Don't access pointer element type for nontemporal store\n\nSimply shift the bitcast from the store to the load, so that\nwe can use the destination type. I'm not sure the bitcast is\nreally necessary, but keeping it for now.", "tree": {"sha": "8f6db1222a8d5c52dd1b59e2658e8474b22c5c50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f6db1222a8d5c52dd1b59e2658e8474b22c5c50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06", "html_url": "https://github.com/rust-lang/rust/commit/2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "208173f8e99bf91d122e4636d501d7d8701f22f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/208173f8e99bf91d122e4636d501d7d8701f22f1", "html_url": "https://github.com/rust-lang/rust/commit/208173f8e99bf91d122e4636d501d7d8701f22f1"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "3c42b2cc2ea7a57206bf5a0b31587063f9690c82", "filename": "compiler/rustc_codegen_ssa/src/mir/operand.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs?ref=2ce1addeba5030eaa5d5dbdf2cc2a9c53a107c06", "patch": "@@ -291,11 +291,10 @@ impl<'a, 'tcx, V: CodegenObject> OperandValue<V> {\n             OperandValue::Ref(r, None, source_align) => {\n                 if flags.contains(MemFlags::NONTEMPORAL) {\n                     // HACK(nox): This is inefficient but there is no nontemporal memcpy.\n-                    // FIXME: Don't access pointer element type.\n-                    let ty = bx.element_type(bx.val_ty(r));\n-                    let val = bx.load(ty, r, source_align);\n-                    let ptr = bx.pointercast(dest.llval, bx.type_ptr_to(ty));\n-                    bx.store_with_flags(val, ptr, dest.align, flags);\n+                    let ty = bx.backend_type(dest.layout);\n+                    let ptr = bx.pointercast(r, bx.type_ptr_to(ty));\n+                    let val = bx.load(ty, ptr, source_align);\n+                    bx.store_with_flags(val, dest.llval, dest.align, flags);\n                     return;\n                 }\n                 base::memcpy_ty(bx, dest.llval, dest.align, r, source_align, dest.layout, flags)"}]}