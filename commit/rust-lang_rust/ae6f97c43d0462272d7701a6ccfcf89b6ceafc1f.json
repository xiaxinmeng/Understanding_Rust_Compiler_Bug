{"sha": "ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f", "node_id": "C_kwDOAAsO6NoAKGFlNmY5N2M0M2QwNDYyMjcyZDc3MDFhNmNjZmNmODliNmNlYWZjMWY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-07T17:08:22Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-06-01T21:41:58Z"}, "message": "Make slice_filter a pre-codegen test.", "tree": {"sha": "24261dbcc108457b5d29f9c8a9787034bd43d31f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24261dbcc108457b5d29f9c8a9787034bd43d31f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f", "html_url": "https://github.com/rust-lang/rust/commit/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "html_url": "https://github.com/rust-lang/rust/commit/789dd0b2a2cd68c129ba9b0aa1008939209adcfd"}], "stats": {"total": 1423, "additions": 341, "deletions": 1082}, "files": [{"sha": "aba951acdd08d7d079afa4c0f6edffa26e497fcf", "filename": "tests/mir-opt/pre-codegen/slice_filter.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.rs?ref=ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f", "patch": "@@ -0,0 +1,15 @@\n+// compile-flags: -O -Zmir-opt-level=2 -Cdebuginfo=2\n+// ignore-debug: standard library debug assertions add a panic that breaks this optimization\n+\n+#![crate_type = \"lib\"]\n+\n+pub fn variant_a(input: &[(usize, usize, usize, usize)]) -> usize {\n+    input.iter().filter(|(a, b, c, d)| a <= c && d <= b || c <= a && b <= d).count()\n+}\n+\n+pub fn variant_b(input: &[(usize, usize, usize, usize)]) -> usize {\n+    input.iter().filter(|&&(a, b, c, d)| a <= c && d <= b || c <= a && b <= d).count()\n+}\n+\n+// EMIT_MIR slice_filter.variant_a-{closure#0}.PreCodegen.after.mir\n+// EMIT_MIR slice_filter.variant_b-{closure#0}.PreCodegen.after.mir"}, {"sha": "492cb022bed49e17a1d2e2890d27394c45058af3", "filename": "tests/mir-opt/pre-codegen/slice_filter.variant_a-{closure#0}.PreCodegen.after.mir", "status": "added", "additions": 231, "deletions": 0, "changes": 231, "blob_url": "https://github.com/rust-lang/rust/blob/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.variant_a-%7Bclosure%230%7D.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.variant_a-%7Bclosure%230%7D.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.variant_a-%7Bclosure%230%7D.PreCodegen.after.mir?ref=ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f", "patch": "@@ -0,0 +1,231 @@\n+// MIR for `variant_a::{closure#0}` after PreCodegen\n+\n+fn variant_a::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:7:25: 7:39], _2: &&(usize, usize, usize, usize)) -> bool {\n+    let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:40: +0:40\n+    let mut _3: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+    let _4: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+    let mut _5: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+    let _6: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+    let mut _7: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+    let _8: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+    let mut _9: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n+    let _10: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+    let mut _11: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:41\n+    let _12: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n+    let mut _13: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n+    let mut _18: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:46\n+    let mut _19: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:56\n+    let mut _20: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:51\n+    let _21: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n+    let mut _22: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n+    let mut _27: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:56\n+    let mut _28: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:61\n+    let _29: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n+    let mut _30: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n+    let mut _35: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:66\n+    let mut _36: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:76\n+    let mut _37: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:71\n+    let _38: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+    let mut _39: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+    let mut _44: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:76\n+    scope 1 {\n+        debug a => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28\n+        debug b => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31\n+        debug c => _8;                   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34\n+        debug d => _10;                  // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37\n+        scope 2 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:7:40: 7:46\n+            debug self => _11;           // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            debug other => _13;          // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _14: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _15: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            scope 3 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug self => _14;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug other => _15;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _16: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _17: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            }\n+        }\n+        scope 4 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:7:60: 7:66\n+            debug self => _28;           // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            debug other => _30;          // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _31: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _32: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            scope 5 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug self => _31;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug other => _32;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _33: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _34: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            }\n+        }\n+        scope 6 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:7:50: 7:56\n+            debug self => _20;           // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            debug other => _22;          // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _23: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _24: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            scope 7 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug self => _23;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug other => _24;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _25: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _26: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            }\n+        }\n+        scope 8 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:7:70: 7:76\n+            debug self => _37;           // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            debug other => _39;          // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _40: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            let mut _41: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            scope 9 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug self => _40;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                debug other => _41;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _42: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+                let mut _43: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+            }\n+        }\n+    }\n+\n+    bb0: {\n+        StorageLive(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+        _3 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+        _4 = &((*_3).0: usize);          // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n+        StorageLive(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+        _5 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+        _6 = &((*_5).1: usize);          // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n+        StorageLive(_8);                 // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+        _7 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+        _8 = &((*_7).2: usize);          // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n+        StorageLive(_10);                // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+        _9 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+        _10 = &((*_9).3: usize);         // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n+        StorageLive(_19);                // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+        StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:40: +0:46\n+        StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n+        _11 = &_4;                       // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n+        StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+        StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+        _12 = _8;                        // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+        _13 = &_12;                      // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+        _14 = deref_copy (*_11);         // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _15 = deref_copy (*_13);         // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_16);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _16 = (*_14);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_17);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _17 = (*_15);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _18 = Le(move _16, move _17);    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_17);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_16);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+        StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+        StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n+        switchInt(move _18) -> [0: bb1, otherwise: bb2]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+    }\n+\n+    bb1: {\n+        _19 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+        goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+    }\n+\n+    bb2: {\n+        StorageLive(_27);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56\n+        StorageLive(_20);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n+        _20 = &_10;                      // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n+        StorageLive(_22);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        StorageLive(_21);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        _21 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        _22 = &_21;                      // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        _23 = deref_copy (*_20);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _24 = deref_copy (*_22);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_25);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _25 = (*_23);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_26);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _26 = (*_24);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _27 = Le(move _25, move _26);    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_26);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_25);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_21);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        StorageDead(_22);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        StorageDead(_20);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        _19 = move _27;                  // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+        goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n+    }\n+\n+    bb3: {\n+        StorageDead(_27);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n+        switchInt(move _19) -> [0: bb4, otherwise: bb8]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+    }\n+\n+    bb4: {\n+        StorageLive(_36);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+        StorageLive(_35);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:66\n+        StorageLive(_28);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n+        _28 = &_8;                       // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n+        StorageLive(_30);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+        StorageLive(_29);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+        _29 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+        _30 = &_29;                      // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+        _31 = deref_copy (*_28);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _32 = deref_copy (*_30);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_33);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _33 = (*_31);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_34);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _34 = (*_32);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _35 = Le(move _33, move _34);    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_34);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_33);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_29);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+        StorageDead(_30);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+        StorageDead(_28);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n+        switchInt(move _35) -> [0: bb5, otherwise: bb6]; // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+    }\n+\n+    bb5: {\n+        _36 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+        goto -> bb7;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+    }\n+\n+    bb6: {\n+        StorageLive(_44);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76\n+        StorageLive(_37);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n+        _37 = &_6;                       // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n+        StorageLive(_39);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageLive(_38);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        _38 = _10;                       // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        _39 = &_38;                      // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        _40 = deref_copy (*_37);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _41 = deref_copy (*_39);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_42);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _42 = (*_40);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageLive(_43);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _43 = (*_41);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        _44 = Le(move _42, move _43);    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_43);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_42);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n+        StorageDead(_38);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_39);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_37);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        _36 = move _44;                  // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+        goto -> bb7;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n+    }\n+\n+    bb7: {\n+        StorageDead(_44);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_35);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        _0 = move _36;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+        goto -> bb9;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+    }\n+\n+    bb8: {\n+        _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+        goto -> bb9;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n+    }\n+\n+    bb9: {\n+        StorageDead(_36);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_19);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_10);                // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_8);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+        StorageDead(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n+        return;                          // scope 0 at $DIR/slice_filter.rs:+0:76: +0:76\n+    }\n+}"}, {"sha": "8ab69bc7b2732818ae48a8fc8bfa6a224d73b28c", "filename": "tests/mir-opt/pre-codegen/slice_filter.variant_b-{closure#0}.PreCodegen.after.mir", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.variant_b-%7Bclosure%230%7D.PreCodegen.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.variant_b-%7Bclosure%230%7D.PreCodegen.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fpre-codegen%2Fslice_filter.variant_b-%7Bclosure%230%7D.PreCodegen.after.mir?ref=ae6f97c43d0462272d7701a6ccfcf89b6ceafc1f", "patch": "@@ -0,0 +1,95 @@\n+// MIR for `variant_b::{closure#0}` after PreCodegen\n+\n+fn variant_b::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:11:25: 11:41], _2: &&(usize, usize, usize, usize)) -> bool {\n+    let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:42: +0:42\n+    let mut _3: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+    let _4: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n+    let mut _5: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+    let _6: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n+    let mut _7: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+    let _8: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n+    let mut _9: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n+    let _10: usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n+    let mut _11: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:48\n+    let mut _12: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:58\n+    let mut _13: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:58\n+    let mut _14: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:68\n+    let mut _15: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:78\n+    let mut _16: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:78\n+    scope 1 {\n+        debug a => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:29: +0:30\n+        debug b => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:32: +0:33\n+        debug c => _8;                   // in scope 1 at $DIR/slice_filter.rs:+0:35: +0:36\n+        debug d => _10;                  // in scope 1 at $DIR/slice_filter.rs:+0:38: +0:39\n+    }\n+\n+    bb0: {\n+        _3 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n+        _4 = ((*_3).0: usize);           // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n+        _5 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n+        _6 = ((*_5).1: usize);           // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n+        _7 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n+        _8 = ((*_7).2: usize);           // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n+        _9 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n+        _10 = ((*_9).3: usize);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n+        StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+        StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n+        _11 = Le(_4, _8);                // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n+        switchInt(move _11) -> [0: bb1, otherwise: bb2]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+    }\n+\n+    bb1: {\n+        _12 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+        goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+    }\n+\n+    bb2: {\n+        StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n+        _13 = Le(_10, _6);               // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n+        _12 = move _13;                  // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+        goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n+    }\n+\n+    bb3: {\n+        StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+        StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n+        switchInt(move _12) -> [0: bb4, otherwise: bb8]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+    }\n+\n+    bb4: {\n+        StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+        StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n+        _14 = Le(_8, _4);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n+        switchInt(move _14) -> [0: bb5, otherwise: bb6]; // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+    }\n+\n+    bb5: {\n+        _15 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+        goto -> bb7;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+    }\n+\n+    bb6: {\n+        StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n+        _16 = Le(_6, _10);               // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n+        _15 = move _16;                  // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+        goto -> bb7;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n+    }\n+\n+    bb7: {\n+        StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+        StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+        _0 = move _15;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+        goto -> bb9;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+    }\n+\n+    bb8: {\n+        _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+        goto -> bb9;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n+    }\n+\n+    bb9: {\n+        StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+        StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n+        return;                          // scope 0 at $DIR/slice_filter.rs:+0:78: +0:78\n+    }\n+}"}, {"sha": "be32f40f132277752b6ef37db089881dd66fa2c1", "filename": "tests/mir-opt/slice_filter.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.rs?ref=789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "patch": "@@ -1,20 +0,0 @@\n-fn main() {\n-    let input = vec![];\n-    let _variant_a_result = variant_a(&input);\n-    let _variant_b_result = variant_b(&input);\n-}\n-\n-pub fn variant_a(input: &[(usize, usize, usize, usize)]) -> usize {\n-    input.iter().filter(|(a, b, c, d)| a <= c && d <= b || c <= a && b <= d).count()\n-}\n-\n-pub fn variant_b(input: &[(usize, usize, usize, usize)]) -> usize {\n-    input.iter().filter(|&&(a, b, c, d)| a <= c && d <= b || c <= a && b <= d).count()\n-}\n-\n-// EMIT_MIR slice_filter.variant_a-{closure#0}.ReferencePropagation.diff\n-// EMIT_MIR slice_filter.variant_a-{closure#0}.CopyProp.diff\n-// EMIT_MIR slice_filter.variant_a-{closure#0}.DestinationPropagation.diff\n-// EMIT_MIR slice_filter.variant_b-{closure#0}.CopyProp.diff\n-// EMIT_MIR slice_filter.variant_b-{closure#0}.ReferencePropagation.diff\n-// EMIT_MIR slice_filter.variant_b-{closure#0}.DestinationPropagation.diff"}, {"sha": "60e5056c7a92609f677aeda7b7a6fac661d753c1", "filename": "tests/mir-opt/slice_filter.variant_a-{closure#0}.CopyProp.diff", "status": "removed", "additions": 0, "deletions": 279, "changes": 279, "blob_url": "https://github.com/rust-lang/rust/blob/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.CopyProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.CopyProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.CopyProp.diff?ref=789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "patch": "@@ -1,279 +0,0 @@\n-- // MIR for `variant_a::{closure#0}` before CopyProp\n-+ // MIR for `variant_a::{closure#0}` after CopyProp\n-  \n-  fn variant_a::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:8:25: 8:39], _2: &&(usize, usize, usize, usize)) -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:40: +0:40\n-      let _3: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n-      let _4: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n-      let _5: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n-      let _6: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n-      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:56\n-      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:46\n-      let mut _9: &&usize;                 // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:41\n-      let mut _10: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n-      let _11: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n-      let mut _12: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:56\n-      let mut _13: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:51\n-      let mut _14: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n-      let _15: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n-      let mut _16: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:76\n-      let mut _17: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:66\n-      let mut _18: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:61\n-      let mut _19: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n-      let _20: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n-      let mut _21: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:76\n-      let mut _22: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:71\n-      let mut _23: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-      let _24: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-      let mut _25: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _26: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _27: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _28: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _31: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _32: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _37: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _38: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _43: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _44: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _49: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _50: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      scope 1 {\n-          debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28\n-          debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31\n-          debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34\n-          debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37\n-          scope 2 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:40: 8:46\n-              debug self => _9;            // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => _10;          // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _29: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _30: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 3 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _31;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _32;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => _29;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => _30;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _33: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _34: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 4 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:60: 8:66\n-              debug self => _18;           // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => _19;          // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _35: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _36: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 5 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _37;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _38;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => _35;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => _36;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _39: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _40: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 6 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:50: 8:56\n-              debug self => _13;           // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => _14;          // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _41: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _42: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 7 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _43;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _44;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => _41;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => _42;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _45: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _46: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 8 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:70: 8:76\n-              debug self => _22;           // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => _23;          // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _47: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _48: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 9 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _49;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _50;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => _47;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => _48;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _51: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _52: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-      }\n-  \n-      bb0: {\n-          StorageLive(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n-          _25 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n-          _3 = &((*_25).0: usize);         // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n-          StorageLive(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n-          _26 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n-          _4 = &((*_26).1: usize);         // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n-          StorageLive(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n-          _27 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n-          _5 = &((*_27).2: usize);         // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n-          StorageLive(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n-          _28 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n-          _6 = &((*_28).3: usize);         // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n-          StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:46\n-          StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n-          _9 = &_3;                        // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n-          StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          _11 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          _10 = &_11;                      // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          _29 = deref_copy (*_9);          // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _30 = deref_copy (*_10);         // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_31);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _31 = _29;                       // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_32);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _32 = _30;                       // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_33);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _33 = (*_31);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _33 = (*_29);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_34);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _34 = (*_32);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _34 = (*_30);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _8 = Le(move _33, move _34);     // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_34);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_33);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_32);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_31);                // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-      }\n-  \n-      bb1: {\n-          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  \n-      bb2: {\n-          StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          StorageLive(_17);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:66\n-          StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n-          _18 = &_5;                       // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n-          StorageLive(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          StorageLive(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          _20 = _3;                        // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          _19 = &_20;                      // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          _35 = deref_copy (*_18);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _36 = deref_copy (*_19);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_37);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _37 = _35;                       // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_38);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _38 = _36;                       // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_39);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _39 = (*_37);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _39 = (*_35);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_40);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _40 = (*_38);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _40 = (*_36);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _17 = Le(move _39, move _40);    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_40);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_39);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_38);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_37);                // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          StorageDead(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          switchInt(move _17) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb3: {\n-          StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-          return;                          // scope 0 at $DIR/slice_filter.rs:+0:76: +0:76\n-      }\n-  \n-      bb4: {\n-          _7 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-          StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-      }\n-  \n-      bb5: {\n-          StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56\n-          StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n-          _13 = &_6;                       // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n-          StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          _15 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          _14 = &_15;                      // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          _41 = deref_copy (*_13);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _42 = deref_copy (*_14);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_43);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _43 = _41;                       // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_44);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _44 = _42;                       // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_45);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _45 = (*_43);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _45 = (*_41);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_46);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _46 = (*_44);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _46 = (*_42);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _12 = Le(move _45, move _46);    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_46);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_45);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_44);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_43);                // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          _7 = move _12;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-          StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  \n-      bb6: {\n-          _16 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb7: {\n-          StorageLive(_21);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76\n-          StorageLive(_22);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n-          _22 = &_4;                       // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n-          StorageLive(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageLive(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          _24 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          _23 = &_24;                      // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          _47 = deref_copy (*_22);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _48 = deref_copy (*_23);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_49);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _49 = _47;                       // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageLive(_50);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _50 = _48;                       // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_51);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _51 = (*_49);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _51 = (*_47);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_52);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _52 = (*_50);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _52 = (*_48);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _21 = Le(move _51, move _52);    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_52);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_51);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_50);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_49);                // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_22);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          _16 = move _21;                  // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb8: {\n-          StorageDead(_21);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_17);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          _0 = move _16;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  }\n-  "}, {"sha": "afdcf57815f387dd20e15a3c3cc05bdfd645ba13", "filename": "tests/mir-opt/slice_filter.variant_a-{closure#0}.DestinationPropagation.diff", "status": "removed", "additions": 0, "deletions": 165, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.DestinationPropagation.diff?ref=789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "patch": "@@ -1,165 +0,0 @@\n-- // MIR for `variant_a::{closure#0}` before DestinationPropagation\n-+ // MIR for `variant_a::{closure#0}` after DestinationPropagation\n-  \n-  fn variant_a::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:8:25: 8:39], _2: &&(usize, usize, usize, usize)) -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:40: +0:40\n-      let mut _3: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:56\n-      let mut _4: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:46\n-      let mut _5: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:56\n-      let mut _6: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:76\n-      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:66\n-      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:76\n-      let mut _9: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _10: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _11: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _12: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      scope 1 {\n-          debug a => &((*_9).0: usize);    // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28\n-          debug b => &((*_10).1: usize);   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31\n-          debug c => &((*_11).2: usize);   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34\n-          debug d => &((*_12).3: usize);   // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37\n-          scope 2 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:40: 8:46\n-              debug self => &&((*_9).0: usize); // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => &&((*_11).2: usize); // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 3 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug self => &((*_9).0: usize); // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug other => &((*_11).2: usize); // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _13: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _14: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 4 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:60: 8:66\n-              debug self => &&((*_11).2: usize); // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => &&((*_9).0: usize); // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 5 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug self => &((*_11).2: usize); // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug other => &((*_9).0: usize); // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _15: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _16: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 6 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:50: 8:56\n-              debug self => &&((*_12).3: usize); // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => &&((*_10).1: usize); // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 7 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug self => &((*_12).3: usize); // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug other => &((*_10).1: usize); // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _17: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _18: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 8 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:70: 8:76\n-              debug self => &&((*_10).1: usize); // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              debug other => &&((*_12).3: usize); // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 9 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug self => &((*_10).1: usize); // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  debug other => &((*_12).3: usize); // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _19: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _20: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-      }\n-  \n-      bb0: {\n-          _9 = deref_copy (*_2);           // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n-          _10 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n-          _11 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n-          _12 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n--         StorageLive(_3);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-          StorageLive(_4);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:46\n-          StorageLive(_13);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _13 = ((*_9).0: usize);          // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_14);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _14 = ((*_11).2: usize);         // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _4 = Le(move _13, move _14);     // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_14);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_13);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          switchInt(move _4) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-      }\n-  \n-      bb1: {\n-          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  \n-      bb2: {\n--         StorageLive(_6);                 // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:60: +0:66\n-          StorageLive(_15);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _15 = ((*_11).2: usize);         // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_16);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _16 = ((*_9).0: usize);          // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _7 = Le(move _15, move _16);     // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_16);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_15);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          switchInt(move _7) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb3: {\n--         StorageDead(_6);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageDead(_3);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          return;                          // scope 0 at $DIR/slice_filter.rs:+0:76: +0:76\n-      }\n-  \n-      bb4: {\n--         StorageDead(_5);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_4);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-      }\n-  \n-      bb5: {\n--         StorageLive(_5);                 // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56\n-          StorageLive(_17);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _17 = ((*_12).3: usize);         // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_18);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _18 = ((*_10).1: usize);         // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _5 = Le(move _17, move _18);     // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_18);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_17);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _3 = move _5;                    // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n--         StorageDead(_5);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_4);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n--         switchInt(move _3) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-+         switchInt(move _5) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  \n-      bb6: {\n--         _6 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-+         _0 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb7: {\n--         StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76\n-          StorageLive(_19);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _19 = ((*_10).1: usize);         // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_20);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _20 = ((*_12).3: usize);         // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _8 = Le(move _19, move _20);     // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _0 = Le(move _19, move _20);     // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_20);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_19);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _6 = move _8;                    // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb8: {\n--         StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         _0 = move _6;                    // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  }\n-  "}, {"sha": "2534eeef43297c1278ecb8113c8b5775a8ce6d95", "filename": "tests/mir-opt/slice_filter.variant_a-{closure#0}.ReferencePropagation.diff", "status": "removed", "additions": 0, "deletions": 267, "changes": 267, "blob_url": "https://github.com/rust-lang/rust/blob/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_a-%7Bclosure%230%7D.ReferencePropagation.diff?ref=789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "patch": "@@ -1,267 +0,0 @@\n-- // MIR for `variant_a::{closure#0}` before ReferencePropagation\n-+ // MIR for `variant_a::{closure#0}` after ReferencePropagation\n-  \n-  fn variant_a::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:8:25: 8:39], _2: &&(usize, usize, usize, usize)) -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:40: +0:40\n-      let _3: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n-      let _4: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n-      let _5: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n-      let _6: &usize;                      // in scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n-      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:56\n-      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:46\n-      let mut _9: &&usize;                 // in scope 0 at $DIR/slice_filter.rs:+0:40: +0:41\n-      let mut _10: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n-      let _11: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:45: +0:46\n-      let mut _12: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:56\n-      let mut _13: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:50: +0:51\n-      let mut _14: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n-      let _15: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:55: +0:56\n-      let mut _16: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:76\n-      let mut _17: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:66\n-      let mut _18: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:60: +0:61\n-      let mut _19: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n-      let _20: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:65: +0:66\n-      let mut _21: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:76\n-      let mut _22: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:70: +0:71\n-      let mut _23: &&usize;                // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-      let _24: &usize;                     // in scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-      let mut _25: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _26: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _27: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _28: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:38\n-      let mut _31: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _32: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _37: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _38: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _43: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _44: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _49: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      let mut _50: &usize;                 // in scope 0 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-      scope 1 {\n--         debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28\n--         debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31\n--         debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34\n--         debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37\n-+         debug a => &((*_25).0: usize);   // in scope 1 at $DIR/slice_filter.rs:+0:27: +0:28\n-+         debug b => &((*_26).1: usize);   // in scope 1 at $DIR/slice_filter.rs:+0:30: +0:31\n-+         debug c => &((*_27).2: usize);   // in scope 1 at $DIR/slice_filter.rs:+0:33: +0:34\n-+         debug d => &((*_28).3: usize);   // in scope 1 at $DIR/slice_filter.rs:+0:36: +0:37\n-          scope 2 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:40: 8:46\n--             debug self => _9;            // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--             debug other => _10;          // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug self => &&((*_25).0: usize); // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug other => &&((*_27).2: usize); // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _29: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _30: &usize;         // in scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 3 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _29;       // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _30;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => &((*_25).0: usize); // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => &((*_27).2: usize); // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _33: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _34: usize;      // in scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 4 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:60: 8:66\n--             debug self => _18;           // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--             debug other => _19;          // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug self => &&((*_27).2: usize); // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug other => &&((*_25).0: usize); // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _35: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _36: &usize;         // in scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 5 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _35;       // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _36;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => &((*_27).2: usize); // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => &((*_25).0: usize); // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _39: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _40: usize;      // in scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 6 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:50: 8:56\n--             debug self => _13;           // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--             debug other => _14;          // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug self => &&((*_28).3: usize); // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug other => &&((*_26).1: usize); // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _41: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _42: &usize;         // in scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 7 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _41;       // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _42;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => &((*_28).3: usize); // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => &((*_26).1: usize); // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _45: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _46: usize;      // in scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-          scope 8 (inlined cmp::impls::<impl PartialOrd for &usize>::le) { // at $DIR/slice_filter.rs:8:70: 8:76\n--             debug self => _22;           // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--             debug other => _23;          // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug self => &&((*_26).1: usize); // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+             debug other => &&((*_28).3: usize); // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _47: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              let mut _48: &usize;         // in scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              scope 9 (inlined cmp::impls::<impl PartialOrd for usize>::le) { // at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug self => _47;       // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--                 debug other => _48;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug self => &((*_26).1: usize); // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+                 debug other => &((*_28).3: usize); // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _51: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-                  let mut _52: usize;      // in scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-              }\n-          }\n-      }\n-  \n-      bb0: {\n--         StorageLive(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n-          _25 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n--         _3 = &((*_25).0: usize);         // scope 0 at $DIR/slice_filter.rs:+0:27: +0:28\n--         StorageLive(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n-          _26 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n--         _4 = &((*_26).1: usize);         // scope 0 at $DIR/slice_filter.rs:+0:30: +0:31\n--         StorageLive(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n-          _27 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n--         _5 = &((*_27).2: usize);         // scope 0 at $DIR/slice_filter.rs:+0:33: +0:34\n--         StorageLive(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n-          _28 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n--         _6 = &((*_28).3: usize);         // scope 0 at $DIR/slice_filter.rs:+0:36: +0:37\n-          StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:46\n--         StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n--         _9 = &_3;                        // scope 1 at $DIR/slice_filter.rs:+0:40: +0:41\n--         StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n--         StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n--         _11 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n--         _10 = &_11;                      // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n--         _29 = deref_copy (*_9);          // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _30 = deref_copy (*_10);         // scope 2 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_33);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _33 = (*_29);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _33 = ((*_25).0: usize);         // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_34);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _34 = (*_30);                    // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _34 = ((*_27).2: usize);         // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _8 = Le(move _33, move _34);     // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_34);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_33);                // scope 3 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n--         StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n--         StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:45: +0:46\n-          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-      }\n-  \n-      bb1: {\n-          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  \n-      bb2: {\n-          StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          StorageLive(_17);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:66\n--         StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n--         _18 = &_5;                       // scope 1 at $DIR/slice_filter.rs:+0:60: +0:61\n--         StorageLive(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n--         StorageLive(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n--         _20 = _3;                        // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n--         _19 = &_20;                      // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n--         _35 = deref_copy (*_18);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _36 = deref_copy (*_19);         // scope 4 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_39);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _39 = (*_35);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _39 = ((*_27).2: usize);         // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_40);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _40 = (*_36);                    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _40 = ((*_25).0: usize);         // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _17 = Le(move _39, move _40);    // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_40);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_39);                // scope 5 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_20);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n--         StorageDead(_19);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n--         StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:65: +0:66\n-          switchInt(move _17) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb3: {\n-          StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageDead(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageDead(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageDead(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageDead(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:75: +0:76\n-          return;                          // scope 0 at $DIR/slice_filter.rs:+0:76: +0:76\n-      }\n-  \n-      bb4: {\n-          _7 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-          StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-      }\n-  \n-      bb5: {\n-          StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:56\n--         StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n--         _13 = &_6;                       // scope 1 at $DIR/slice_filter.rs:+0:50: +0:51\n--         StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n--         StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n--         _15 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n--         _14 = &_15;                      // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n--         _41 = deref_copy (*_13);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _42 = deref_copy (*_14);         // scope 6 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_45);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _45 = (*_41);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _45 = ((*_28).3: usize);         // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_46);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _46 = (*_42);                    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _46 = ((*_26).1: usize);         // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _12 = Le(move _45, move _46);    // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_46);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_45);                // scope 7 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n--         StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n--         StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          _7 = move _12;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:56\n-          StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:55: +0:56\n-          switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  \n-      bb6: {\n-          _16 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb7: {\n-          StorageLive(_21);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:76\n--         StorageLive(_22);                // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n--         _22 = &_4;                       // scope 1 at $DIR/slice_filter.rs:+0:70: +0:71\n--         StorageLive(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageLive(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         _24 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         _23 = &_24;                      // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         _47 = deref_copy (*_22);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _48 = deref_copy (*_23);         // scope 8 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_51);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _51 = (*_47);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _51 = ((*_26).1: usize);         // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageLive(_52);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         _52 = (*_48);                    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-+         _52 = ((*_28).3: usize);         // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          _21 = Le(move _51, move _52);    // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_52);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n-          StorageDead(_51);                // scope 9 at $SRC_DIR/core/src/cmp.rs:LL:COL\n--         StorageDead(_24);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageDead(_23);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n--         StorageDead(_22);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          _16 = move _21;                  // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:60: +0:76\n-      }\n-  \n-      bb8: {\n-          StorageDead(_21);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          StorageDead(_17);                // scope 1 at $DIR/slice_filter.rs:+0:75: +0:76\n-          _0 = move _16;                   // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:40: +0:76\n-      }\n-  }\n-  "}, {"sha": "5e4bdbdfa2e2f9683e0b5206db7181c30c81db94", "filename": "tests/mir-opt/slice_filter.variant_b-{closure#0}.CopyProp.diff", "status": "removed", "additions": 0, "deletions": 139, "changes": 139, "blob_url": "https://github.com/rust-lang/rust/blob/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.CopyProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.CopyProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.CopyProp.diff?ref=789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "patch": "@@ -1,139 +0,0 @@\n-- // MIR for `variant_b::{closure#0}` before CopyProp\n-+ // MIR for `variant_b::{closure#0}` after CopyProp\n-  \n-  fn variant_b::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:12:25: 12:41], _2: &&(usize, usize, usize, usize)) -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:42: +0:42\n-      let _3: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-      let _4: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-      let _5: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-      let _6: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:58\n-      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:48\n-      let mut _9: usize;                   // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:43\n-      let mut _10: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:47: +0:48\n-      let mut _11: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:58\n-      let mut _12: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:53\n-      let mut _13: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:57: +0:58\n-      let mut _14: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:78\n-      let mut _15: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:68\n-      let mut _16: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:63\n-      let mut _17: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:67: +0:68\n-      let mut _18: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:78\n-      let mut _19: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:73\n-      let mut _20: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n-      let mut _21: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _22: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _23: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _24: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      scope 1 {\n-          debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:29: +0:30\n-          debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:32: +0:33\n-          debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:35: +0:36\n-          debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:38: +0:39\n-      }\n-  \n-      bb0: {\n--         StorageLive(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-          _21 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-          _3 = ((*_21).0: usize);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n--         StorageLive(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-          _22 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-          _4 = ((*_22).1: usize);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n--         StorageLive(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-          _23 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-          _5 = ((*_23).2: usize);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n--         StorageLive(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-          _24 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-          _6 = ((*_24).3: usize);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-          StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n--         StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:43\n--         _9 = _3;                         // scope 1 at $DIR/slice_filter.rs:+0:42: +0:43\n--         StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n--         _10 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n--         _8 = Le(move _9, move _10);      // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n--         StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n--         StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:47: +0:48\n-+         _8 = Le(_3, _5);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n-          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-      }\n-  \n-      bb1: {\n-          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  \n-      bb2: {\n-          StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n--         StorageLive(_16);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:63\n--         _16 = _5;                        // scope 1 at $DIR/slice_filter.rs:+0:62: +0:63\n--         StorageLive(_17);                // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n--         _17 = _3;                        // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n--         _15 = Le(move _16, move _17);    // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n--         StorageDead(_17);                // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n--         StorageDead(_16);                // scope 1 at $DIR/slice_filter.rs:+0:67: +0:68\n-+         _15 = Le(_5, _3);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n-          switchInt(move _15) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb3: {\n-          StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n--         StorageDead(_6);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n--         StorageDead(_5);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n--         StorageDead(_4);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n--         StorageDead(_3);                 // scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n-          return;                          // scope 0 at $DIR/slice_filter.rs:+0:78: +0:78\n-      }\n-  \n-      bb4: {\n-          _7 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-      }\n-  \n-      bb5: {\n-          StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n--         StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:53\n--         _12 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:52: +0:53\n--         StorageLive(_13);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n--         _13 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n--         _11 = Le(move _12, move _13);    // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n--         StorageDead(_13);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n--         StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-+         _11 = Le(_6, _4);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n-          _7 = move _11;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  \n-      bb6: {\n-          _14 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb7: {\n-          StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n--         StorageLive(_19);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:73\n--         _19 = _4;                        // scope 1 at $DIR/slice_filter.rs:+0:72: +0:73\n--         StorageLive(_20);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n--         _20 = _6;                        // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n--         _18 = Le(move _19, move _20);    // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n--         StorageDead(_20);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n--         StorageDead(_19);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-+         _18 = Le(_4, _6);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n-          _14 = move _18;                  // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb8: {\n-          StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          _0 = move _14;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  }\n-  "}, {"sha": "45af6600cd4e8ed268756a700123dbe015795fea", "filename": "tests/mir-opt/slice_filter.variant_b-{closure#0}.DestinationPropagation.diff", "status": "removed", "additions": 0, "deletions": 109, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.DestinationPropagation.diff?ref=789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "patch": "@@ -1,109 +0,0 @@\n-- // MIR for `variant_b::{closure#0}` before DestinationPropagation\n-+ // MIR for `variant_b::{closure#0}` after DestinationPropagation\n-  \n-  fn variant_b::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:12:25: 12:41], _2: &&(usize, usize, usize, usize)) -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:42: +0:42\n-      let _3: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-      let _4: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-      let _5: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-      let _6: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:58\n-      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:48\n-      let mut _9: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:58\n-      let mut _10: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:78\n-      let mut _11: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:68\n-      let mut _12: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:78\n-      let mut _13: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _14: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _15: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _16: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      scope 1 {\n-          debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:29: +0:30\n-          debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:32: +0:33\n-          debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:35: +0:36\n-          debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:38: +0:39\n-      }\n-  \n-      bb0: {\n-          _13 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-          _3 = ((*_13).0: usize);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-          _14 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-          _4 = ((*_14).1: usize);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-          _15 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-          _5 = ((*_15).2: usize);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-          _16 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-          _6 = ((*_16).3: usize);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n--         StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n-          _8 = Le(_3, _5);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n-          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-      }\n-  \n-      bb1: {\n-          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  \n-      bb2: {\n--         StorageLive(_10);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n-          _11 = Le(_5, _3);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n-          switchInt(move _11) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb3: {\n--         StorageDead(_10);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n--         StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          return;                          // scope 0 at $DIR/slice_filter.rs:+0:78: +0:78\n-      }\n-  \n-      bb4: {\n--         StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-      }\n-  \n-      bb5: {\n--         StorageLive(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n-          _9 = Le(_6, _4);                 // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n--         _7 = move _9;                    // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n--         StorageDead(_9);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n--         switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-+         switchInt(move _9) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  \n-      bb6: {\n--         _10 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-+         _0 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb7: {\n--         StorageLive(_12);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n--         _12 = Le(_4, _6);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n--         _10 = move _12;                  // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n-+         _0 = Le(_4, _6);                 // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb8: {\n--         StorageDead(_12);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n--         _0 = move _10;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-+         nop;                             // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  }\n-  "}, {"sha": "d1241c6b0245c6869de2a60361509569cc0406d3", "filename": "tests/mir-opt/slice_filter.variant_b-{closure#0}.ReferencePropagation.diff", "status": "removed", "additions": 0, "deletions": 103, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.ReferencePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/789dd0b2a2cd68c129ba9b0aa1008939209adcfd/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.ReferencePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fslice_filter.variant_b-%7Bclosure%230%7D.ReferencePropagation.diff?ref=789dd0b2a2cd68c129ba9b0aa1008939209adcfd", "patch": "@@ -1,103 +0,0 @@\n-- // MIR for `variant_b::{closure#0}` before ReferencePropagation\n-+ // MIR for `variant_b::{closure#0}` after ReferencePropagation\n-  \n-  fn variant_b::{closure#0}(_1: &mut [closure@$DIR/slice_filter.rs:12:25: 12:41], _2: &&(usize, usize, usize, usize)) -> bool {\n-      let mut _0: bool;                    // return place in scope 0 at $DIR/slice_filter.rs:+0:42: +0:42\n-      let _3: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-      let _4: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-      let _5: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-      let _6: usize;                       // in scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-      let mut _7: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:58\n-      let mut _8: bool;                    // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:48\n-      let mut _9: usize;                   // in scope 0 at $DIR/slice_filter.rs:+0:42: +0:43\n-      let mut _10: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:47: +0:48\n-      let mut _11: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:58\n-      let mut _12: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:52: +0:53\n-      let mut _13: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:57: +0:58\n-      let mut _14: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:78\n-      let mut _15: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:68\n-      let mut _16: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:62: +0:63\n-      let mut _17: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:67: +0:68\n-      let mut _18: bool;                   // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:78\n-      let mut _19: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:72: +0:73\n-      let mut _20: usize;                  // in scope 0 at $DIR/slice_filter.rs:+0:77: +0:78\n-      let mut _21: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _22: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _23: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      let mut _24: &(usize, usize, usize, usize); // in scope 0 at $DIR/slice_filter.rs:+0:26: +0:40\n-      scope 1 {\n-          debug a => _3;                   // in scope 1 at $DIR/slice_filter.rs:+0:29: +0:30\n-          debug b => _4;                   // in scope 1 at $DIR/slice_filter.rs:+0:32: +0:33\n-          debug c => _5;                   // in scope 1 at $DIR/slice_filter.rs:+0:35: +0:36\n-          debug d => _6;                   // in scope 1 at $DIR/slice_filter.rs:+0:38: +0:39\n-      }\n-  \n-      bb0: {\n-          _21 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-          _3 = ((*_21).0: usize);          // scope 0 at $DIR/slice_filter.rs:+0:29: +0:30\n-          _22 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-          _4 = ((*_22).1: usize);          // scope 0 at $DIR/slice_filter.rs:+0:32: +0:33\n-          _23 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-          _5 = ((*_23).2: usize);          // scope 0 at $DIR/slice_filter.rs:+0:35: +0:36\n-          _24 = deref_copy (*_2);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-          _6 = ((*_24).3: usize);          // scope 0 at $DIR/slice_filter.rs:+0:38: +0:39\n-          StorageLive(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-          StorageLive(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n-          _8 = Le(_3, _5);                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:48\n-          switchInt(move _8) -> [0: bb4, otherwise: bb5]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-      }\n-  \n-      bb1: {\n-          _0 = const true;                 // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  \n-      bb2: {\n-          StorageLive(_14);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          StorageLive(_15);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n-          _15 = Le(_5, _3);                // scope 1 at $DIR/slice_filter.rs:+0:62: +0:68\n-          switchInt(move _15) -> [0: bb6, otherwise: bb7]; // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb3: {\n-          StorageDead(_14);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          StorageDead(_7);                 // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          return;                          // scope 0 at $DIR/slice_filter.rs:+0:78: +0:78\n-      }\n-  \n-      bb4: {\n-          _7 = const false;                // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          goto -> bb2;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-      }\n-  \n-      bb5: {\n-          StorageLive(_11);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n-          _11 = Le(_6, _4);                // scope 1 at $DIR/slice_filter.rs:+0:52: +0:58\n-          _7 = move _11;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:58\n-          StorageDead(_11);                // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          StorageDead(_8);                 // scope 1 at $DIR/slice_filter.rs:+0:57: +0:58\n-          switchInt(move _7) -> [0: bb2, otherwise: bb1]; // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  \n-      bb6: {\n-          _14 = const false;               // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb7: {\n-          StorageLive(_18);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n-          _18 = Le(_4, _6);                // scope 1 at $DIR/slice_filter.rs:+0:72: +0:78\n-          _14 = move _18;                  // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-          goto -> bb8;                     // scope 1 at $DIR/slice_filter.rs:+0:62: +0:78\n-      }\n-  \n-      bb8: {\n-          StorageDead(_18);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          StorageDead(_15);                // scope 1 at $DIR/slice_filter.rs:+0:77: +0:78\n-          _0 = move _14;                   // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-          goto -> bb3;                     // scope 1 at $DIR/slice_filter.rs:+0:42: +0:78\n-      }\n-  }\n-  "}]}