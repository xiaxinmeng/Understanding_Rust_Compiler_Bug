{"sha": "b3d7823381cd2d3d89ba4ca85a709df6622180ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzZDc4MjMzODFjZDJkM2Q4OWJhNGNhODVhNzA5ZGY2NjIyMTgwYWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T05:49:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-29T07:20:05Z"}, "message": "core: Add and use vec::reserve_at_least\n\nThis reserves in powers of two", "tree": {"sha": "409c3afe0187f21a5a86032135877c4822e5828a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/409c3afe0187f21a5a86032135877c4822e5828a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3d7823381cd2d3d89ba4ca85a709df6622180ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3d7823381cd2d3d89ba4ca85a709df6622180ab", "html_url": "https://github.com/rust-lang/rust/commit/b3d7823381cd2d3d89ba4ca85a709df6622180ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3d7823381cd2d3d89ba4ca85a709df6622180ab/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172", "html_url": "https://github.com/rust-lang/rust/commit/8e743b2981754f1aa7e0eb5b57d79e5a8ad7d172"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "60ed23a6582474c6fe73b9ce7b0d0dab888fa3c2", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b3d7823381cd2d3d89ba4ca85a709df6622180ab/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d7823381cd2d3d89ba4ca85a709df6622180ab/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=b3d7823381cd2d3d89ba4ca85a709df6622180ab", "patch": "@@ -1,14 +1,14 @@\n #[doc = \"Vectors\"];\n \n import option::{some, none};\n-import uint::next_power_of_two;\n import ptr::addr_of;\n \n export init_op;\n export is_empty;\n export is_not_empty;\n export same_length;\n export reserve;\n+export reserve_at_least;\n export len;\n export from_fn;\n export from_elem;\n@@ -115,6 +115,25 @@ fn reserve<T>(&v: [const T], n: uint) {\n     rustrt::vec_reserve_shared(sys::get_type_desc::<T>(), v, n);\n }\n \n+#[doc = \"\n+Reserves capacity for at least `n` elements in the given vector.\n+\n+This function will over-allocate in order to amortize the allocation costs\n+in scenarios where the caller may need to repeatedly reserve additional\n+space.\n+\n+If the capacity for `v` is already equal to or greater than the requested\n+capacity, then no action is taken.\n+\n+# Arguments\n+\n+* v - A vector\n+* n - The number of elements to reserve space for\n+\"]\n+fn reserve_at_least<T>(&v: [const T], n: uint) {\n+    reserve(v, uint::next_power_of_two(n));\n+}\n+\n #[doc = \"Returns the length of a vector\"]\n #[inline(always)]\n pure fn len<T>(&&v: [const T]) -> uint unsafe {\n@@ -364,7 +383,7 @@ Expands a vector in place, initializing the new elements to a given value\n * initval - The value for the new elements\n \"]\n fn grow<T: copy>(&v: [const T], n: uint, initval: T) {\n-    reserve(v, next_power_of_two(len(v) + n));\n+    reserve_at_least(v, len(v) + n);\n     let mut i: uint = 0u;\n     while i < n { v += [initval]; i += 1u; }\n }\n@@ -383,7 +402,7 @@ Function `init_op` is called `n` times with the values [0..`n`)\n             value\n \"]\n fn grow_fn<T>(&v: [const T], n: uint, op: init_op<T>) {\n-    reserve(v, next_power_of_two(len(v) + n));\n+    reserve_at_least(v, len(v) + n);\n     let mut i: uint = 0u;\n     while i < n { v += [op(i)]; i += 1u; }\n }"}]}