{"sha": "4cbba98420b27af2c56df1878ff1992c7993a7bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYmJhOTg0MjBiMjdhZjJjNTZkZjE4NzhmZjE5OTJjNzk5M2E3YmM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-30T19:21:06Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-30T19:21:06Z"}, "message": "Rustup to rustc 1.55.0-nightly (6d820866a 2021-06-29)", "tree": {"sha": "7ed325dca7563bfec0fdc29d3a143996288adb84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ed325dca7563bfec0fdc29d3a143996288adb84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cbba98420b27af2c56df1878ff1992c7993a7bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cbba98420b27af2c56df1878ff1992c7993a7bc", "html_url": "https://github.com/rust-lang/rust/commit/4cbba98420b27af2c56df1878ff1992c7993a7bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cbba98420b27af2c56df1878ff1992c7993a7bc/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ec2b444b17793d3eff0343b478cf205bce4b9dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec2b444b17793d3eff0343b478cf205bce4b9dc", "html_url": "https://github.com/rust-lang/rust/commit/3ec2b444b17793d3eff0343b478cf205bce4b9dc"}], "stats": {"total": 47, "additions": 18, "deletions": 29}, "files": [{"sha": "46f661107e73b43ab0b9a2713e51661a60a64708", "filename": "build_sysroot/Cargo.lock", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4cbba98420b27af2c56df1878ff1992c7993a7bc/build_sysroot%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4cbba98420b27af2c56df1878ff1992c7993a7bc/build_sysroot%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.lock?ref=4cbba98420b27af2c56df1878ff1992c7993a7bc", "patch": "@@ -56,7 +56,7 @@ dependencies = [\n \n [[package]]\n name = \"compiler_builtins\"\n-version = \"0.1.45\"\n+version = \"0.1.46\"\n dependencies = [\n  \"rustc-std-workspace-core\",\n ]\n@@ -121,9 +121,9 @@ dependencies = [\n \n [[package]]\n name = \"hermit-abi\"\n-version = \"0.1.18\"\n+version = \"0.1.19\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"322f4de77956e22ed0e5032c359a0f1273f1f7f0d79bfa3b8ffbc730d7fbcc5c\"\n+checksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\n dependencies = [\n  \"compiler_builtins\",\n  \"libc\",\n@@ -195,9 +195,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-demangle\"\n-version = \"0.1.19\"\n+version = \"0.1.20\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"410f7acf3cb3a44527c5d9546bad4bf4e6c460915d5f9f2fc524498bfe8f70ce\"\n+checksum = \"dead70b0b5e03e9c814bcb6b01e03e68f7c57a80aa48c72ec92152ab3e818d49\"\n dependencies = [\n  \"compiler_builtins\",\n  \"rustc-std-workspace-core\","}, {"sha": "1f4ec825e1ee98fa0d061058c335a5042617e96b", "filename": "build_system/prepare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4cbba98420b27af2c56df1878ff1992c7993a7bc/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cbba98420b27af2c56df1878ff1992c7993a7bc/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=4cbba98420b27af2c56df1878ff1992c7993a7bc", "patch": "@@ -82,7 +82,7 @@ fn prepare_sysroot() {\n     clone_repo(\n         \"build_sysroot/compiler-builtins\",\n         \"https://github.com/rust-lang/compiler-builtins.git\",\n-        \"0.1.45\",\n+        \"0.1.46\",\n     );\n     apply_patches(\"compiler-builtins\", Path::new(\"build_sysroot/compiler-builtins\"));\n }"}, {"sha": "c1b2d71ebc726575c81c96de0ab653f3a32d47ae", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4cbba98420b27af2c56df1878ff1992c7993a7bc/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/4cbba98420b27af2c56df1878ff1992c7993a7bc/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=4cbba98420b27af2c56df1878ff1992c7993a7bc", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2021-06-17\"\n+channel = \"nightly-2021-06-30\"\n components = [\"rust-src\", \"rustc-dev\", \"llvm-tools-preview\"]"}, {"sha": "f44ab276590197470fa31aebaf1aeb49317f36c6", "filename": "src/base.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=4cbba98420b27af2c56df1878ff1992c7993a7bc", "patch": "@@ -21,6 +21,11 @@ pub(crate) fn codegen_fn<'tcx>(\n     debug_assert!(!instance.substs.needs_infer());\n \n     let mir = tcx.instance_mir(instance.def);\n+    let _mir_guard = crate::PrintOnPanic(|| {\n+        let mut buf = Vec::new();\n+        rustc_mir::util::write_mir_pretty(tcx, Some(instance.def_id()), &mut buf).unwrap();\n+        String::from_utf8_lossy(&buf).into_owned()\n+    });\n \n     // Declare function\n     let symbol_name = tcx.symbol_name(instance);\n@@ -52,7 +57,6 @@ pub(crate) fn codegen_fn<'tcx>(\n         module,\n         tcx,\n         pointer_type,\n-        vtables: FxHashMap::default(),\n         constants_cx: ConstantCx::new(),\n \n         instance,"}, {"sha": "892ccf27f6df893f713a62e9cf387f951848da98", "filename": "src/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=4cbba98420b27af2c56df1878ff1992c7993a7bc", "patch": "@@ -233,7 +233,6 @@ pub(crate) struct FunctionCx<'m, 'clif, 'tcx: 'm> {\n     pub(crate) module: &'m mut dyn Module,\n     pub(crate) tcx: TyCtxt<'tcx>,\n     pub(crate) pointer_type: Type, // Cached from module\n-    pub(crate) vtables: FxHashMap<(Ty<'tcx>, Option<ty::PolyExistentialTraitRef<'tcx>>), Pointer>,\n     pub(crate) constants_cx: ConstantCx,\n \n     pub(crate) instance: Instance<'tcx>,"}, {"sha": "6e127ce23dc2e84b4de7f56dddede2266e21a124", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4cbba98420b27af2c56df1878ff1992c7993a7bc", "patch": "@@ -1,11 +1,4 @@\n-#![feature(\n-    rustc_private,\n-    decl_macro,\n-    never_type,\n-    hash_drain_filter,\n-    vec_into_raw_parts,\n-    once_cell,\n-)]\n+#![feature(rustc_private, decl_macro, never_type, hash_drain_filter, vec_into_raw_parts, once_cell)]\n #![warn(rust_2018_idioms)]\n #![warn(unused_lifetimes)]\n #![warn(unreachable_pub)]\n@@ -23,6 +16,7 @@ extern crate rustc_incremental;\n extern crate rustc_index;\n extern crate rustc_interface;\n extern crate rustc_metadata;\n+extern crate rustc_mir;\n extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;"}, {"sha": "1e1e3683877927ab076758291a19965e37571bf3", "filename": "src/vtable.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cbba98420b27af2c56df1878ff1992c7993a7bc/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=4cbba98420b27af2c56df1878ff1992c7993a7bc", "patch": "@@ -1,10 +1,9 @@\n //! Codegen vtables and vtable accesses.\n //!\n //! See `rustc_codegen_ssa/src/meth.rs` for reference.\n-// FIXME dedup this logic between miri, cg_llvm and cg_clif\n \n-use crate::prelude::*;\n use super::constant::pointer_for_allocation;\n+use crate::prelude::*;\n \n fn vtable_memflags() -> MemFlags {\n     let mut flags = MemFlags::trusted(); // A vtable access is always aligned and will never trap.\n@@ -69,16 +68,9 @@ pub(crate) fn get_vtable<'tcx>(\n     ty: Ty<'tcx>,\n     trait_ref: Option<ty::PolyExistentialTraitRef<'tcx>>,\n ) -> Value {\n-    let vtable_ptr = if let Some(vtable_ptr) = fx.vtables.get(&(ty, trait_ref)) {\n-        *vtable_ptr\n-    } else {\n-        let vtable_alloc_id = fx.tcx.vtable_allocation(ty, trait_ref);\n-        let vtable_allocation = fx.tcx.global_alloc(vtable_alloc_id).unwrap_memory();\n-        let vtable_ptr = pointer_for_allocation(fx, vtable_allocation);\n-\n-        fx.vtables.insert((ty, trait_ref), vtable_ptr);\n-        vtable_ptr\n-    };\n+    let vtable_alloc_id = fx.tcx.vtable_allocation(ty, trait_ref);\n+    let vtable_allocation = fx.tcx.global_alloc(vtable_alloc_id).unwrap_memory();\n+    let vtable_ptr = pointer_for_allocation(fx, vtable_allocation);\n \n     vtable_ptr.get_addr(fx)\n }"}]}