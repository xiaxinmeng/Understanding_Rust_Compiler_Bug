{"sha": "fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMGZiZThiYjU2NDRhMjZkOWVjMTdjZTFkOTdlN2NlYTg1ZTc2Zjk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-20T01:18:04Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-05T22:17:41Z"}, "message": "Stub rustdoc const generics implementations\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "6b3dd68242552cf7346e051928d36da10a36fc76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b3dd68242552cf7346e051928d36da10a36fc76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9", "html_url": "https://github.com/rust-lang/rust/commit/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb2b8be6a0dfc2b3d1e2e83e501d0a40b0a3469e", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2b8be6a0dfc2b3d1e2e83e501d0a40b0a3469e", "html_url": "https://github.com/rust-lang/rust/commit/eb2b8be6a0dfc2b3d1e2e83e501d0a40b0a3469e"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "5d0d76507bd071eb3e7c0fb328f21c1af6ae4d4e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9", "patch": "@@ -1482,6 +1482,9 @@ impl<'tcx> Clean<GenericParamDef> for ty::GenericParamDef {\n                     synthetic: None,\n                 })\n             }\n+            ty::GenericParamDefKind::Const { .. } => {\n+                unimplemented!() // FIXME(const_generics)\n+            }\n         };\n \n         GenericParamDef {\n@@ -1629,6 +1632,9 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics,\n                 }\n                 Some(param.clean(cx))\n             }\n+            ty::GenericParamDefKind::Const { .. } => {\n+                unimplemented!() // FIXME(const_generics)\n+            }\n         }).collect::<Vec<GenericParamDef>>();\n \n         let mut where_predicates = preds.predicates.iter()\n@@ -1678,6 +1684,9 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics,\n                         .flat_map(|param| match param.kind {\n                             ty::GenericParamDefKind::Lifetime => Some(param.clean(cx)),\n                             ty::GenericParamDefKind::Type { .. } => None,\n+                            ty::GenericParamDefKind::Const { .. } => {\n+                                unimplemented!() // FIXME(const_generics)\n+                            }\n                         }).chain(simplify::ty_params(stripped_typarams).into_iter())\n                         .collect(),\n             where_predicates: simplify::where_clauses(cx, where_predicates),"}, {"sha": "07cfdde4a4e9d0ba83679105405d984ef57b2407", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=fc0fbe8bb5644a26d9ec17ce1d97e7cea85e76f9", "patch": "@@ -221,6 +221,9 @@ impl<'a, 'tcx, 'rcx> DocContext<'a, 'tcx, 'rcx> {\n                 ty::GenericParamDefKind::Type { .. } => {\n                     args.push(hir::GenericArg::Type(self.ty_param_to_ty(param.clone())));\n                 }\n+                ty::GenericParamDefKind::Const { .. } => {\n+                    unimplemented!() // FIXME(const_generics)\n+                }\n             }\n         }\n "}]}