{"sha": "d188287a54f1bb202e4c16067a6c4cdff4bdfd6c", "node_id": "C_kwDOAAsO6NoAKGQxODgyODdhNTRmMWJiMjAyZTRjMTYwNjdhNmM0Y2RmZjRiZGZkNmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T16:10:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T16:10:31Z"}, "message": "Rollup merge of #89764 - tmiasko:uninhabited-enums, r=wesleywiser\n\nFix variant index / discriminant confusion in uninhabited enum branching\n\nFix confusion between variant index and variant discriminant. The pass\nincorrectly assumed that for `Variants::Single` variant index is the same as\nvariant discriminant.\n\nr? `@wesleywiser`", "tree": {"sha": "097515561d2c8c13cbb695f3e3bcf9603ba21bad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/097515561d2c8c13cbb695f3e3bcf9603ba21bad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6Yl3CRBK7hj4Ov3rIwAA1okIAE0Hiskpic/dU2g/P7Ajfhis\nUf/Lkuhguoq/u9dJytvwYjXIqnFNTBt2ztkKMlLvyGA+OfkyqMJ8bZb5d2/3lpV8\n2Ym16gBIptLmp8+d4Tkq2kBGCzxb8qfx+igaFwfLcoOo6TIIZvbYtC63zW5Wth8E\n6rUWQx0RUpMqJS/a6QayxeCNYdIswveb5YxIGdROJxXMhZq7uQF+LaeoUA/xyxRg\nogMG2Sjz9+OpdIFWPe6DEkUyx9jtUxoLl+LRqFLQCM2RiWamVDnNTM5+DV0DrNPF\nxzsi/+4ZEHSkn27SpJkCCt25vchXpMZNZNIOvg3TAnaw4IldU78ldzkGft/NhX4=\n=5u00\n-----END PGP SIGNATURE-----\n", "payload": "tree 097515561d2c8c13cbb695f3e3bcf9603ba21bad\nparent 98cb33894c87d5a92a19b1b1c38d64caa495a197\nparent c3e71d83cdeb0ccaf6584255313380fd166b1096\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642695031 +0100\ncommitter GitHub <noreply@github.com> 1642695031 +0100\n\nRollup merge of #89764 - tmiasko:uninhabited-enums, r=wesleywiser\n\nFix variant index / discriminant confusion in uninhabited enum branching\n\nFix confusion between variant index and variant discriminant. The pass\nincorrectly assumed that for `Variants::Single` variant index is the same as\nvariant discriminant.\n\nr? `@wesleywiser`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c", "html_url": "https://github.com/rust-lang/rust/commit/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98cb33894c87d5a92a19b1b1c38d64caa495a197", "url": "https://api.github.com/repos/rust-lang/rust/commits/98cb33894c87d5a92a19b1b1c38d64caa495a197", "html_url": "https://github.com/rust-lang/rust/commit/98cb33894c87d5a92a19b1b1c38d64caa495a197"}, {"sha": "c3e71d83cdeb0ccaf6584255313380fd166b1096", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3e71d83cdeb0ccaf6584255313380fd166b1096", "html_url": "https://github.com/rust-lang/rust/commit/c3e71d83cdeb0ccaf6584255313380fd166b1096"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "cda9ba9dcc87ff5c982382777bcfbd6b47cb8416", "filename": "compiler/rustc_mir_transform/src/uninhabited_enum_branching.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c/compiler%2Frustc_mir_transform%2Fsrc%2Funinhabited_enum_branching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d188287a54f1bb202e4c16067a6c4cdff4bdfd6c/compiler%2Frustc_mir_transform%2Fsrc%2Funinhabited_enum_branching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Funinhabited_enum_branching.rs?ref=d188287a54f1bb202e4c16067a6c4cdff4bdfd6c", "patch": "@@ -3,8 +3,7 @@\n use crate::MirPass;\n use rustc_data_structures::stable_set::FxHashSet;\n use rustc_middle::mir::{\n-    BasicBlock, BasicBlockData, Body, Local, Operand, Rvalue, StatementKind, SwitchTargets,\n-    TerminatorKind,\n+    BasicBlockData, Body, Local, Operand, Rvalue, StatementKind, SwitchTargets, TerminatorKind,\n };\n use rustc_middle::ty::layout::TyAndLayout;\n use rustc_middle::ty::{Ty, TyCtxt};\n@@ -56,7 +55,10 @@ fn variant_discriminants<'tcx>(\n     match &layout.variants {\n         Variants::Single { index } => {\n             let mut res = FxHashSet::default();\n-            res.insert(index.as_u32() as u128);\n+            res.insert(\n+                ty.discriminant_for_variant(tcx, *index)\n+                    .map_or(index.as_u32() as u128, |discr| discr.val),\n+            );\n             res\n         }\n         Variants::Multiple { variants, .. } => variants\n@@ -75,16 +77,9 @@ impl<'tcx> MirPass<'tcx> for UninhabitedEnumBranching {\n     }\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if body.source.promoted.is_some() {\n-            return;\n-        }\n-\n         trace!(\"UninhabitedEnumBranching starting for {:?}\", body.source);\n \n-        let basic_block_count = body.basic_blocks().len();\n-\n-        for bb in 0..basic_block_count {\n-            let bb = BasicBlock::from_usize(bb);\n+        for bb in body.basic_blocks().indices() {\n             trace!(\"processing block {:?}\", bb);\n \n             let Some(discriminant_ty) = get_switched_on_type(&body.basic_blocks()[bb], tcx, body) else {"}]}