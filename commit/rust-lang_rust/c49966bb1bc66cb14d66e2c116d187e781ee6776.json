{"sha": "c49966bb1bc66cb14d66e2c116d187e781ee6776", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0OTk2NmJiMWJjNjZjYjE0ZDY2ZTJjMTE2ZDE4N2U3ODFlZTY3NzY=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-05T15:28:38Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-07T15:05:33Z"}, "message": "Clarify variable names when checking track_caller methods.", "tree": {"sha": "6fefd830846c79dd138eedab7f4fbc2029ec4ca0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fefd830846c79dd138eedab7f4fbc2029ec4ca0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c49966bb1bc66cb14d66e2c116d187e781ee6776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c49966bb1bc66cb14d66e2c116d187e781ee6776", "html_url": "https://github.com/rust-lang/rust/commit/c49966bb1bc66cb14d66e2c116d187e781ee6776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c49966bb1bc66cb14d66e2c116d187e781ee6776/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "190212c6bf1588fb4349a16caa9c2796f9a795f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/190212c6bf1588fb4349a16caa9c2796f9a795f4", "html_url": "https://github.com/rust-lang/rust/commit/190212c6bf1588fb4349a16caa9c2796f9a795f4"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "fa283904fe47467e83357e6cc7d46c4db2060fbd", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c49966bb1bc66cb14d66e2c116d187e781ee6776/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c49966bb1bc66cb14d66e2c116d187e781ee6776/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=c49966bb1bc66cb14d66e2c116d187e781ee6776", "patch": "@@ -196,19 +196,18 @@ pub fn check_impl_item(tcx: TyCtxt<'_>, def_id: DefId) {\n     };\n \n     // Prohibits applying `#[track_caller]` to trait impls\n-    if method_sig.is_some() { \n+    if method_sig.is_some() {\n         let track_caller_attr = impl_item.attrs.iter()\n             .find(|a| a.check_name(sym::track_caller));\n         if let Some(tc_attr) = track_caller_attr {\n             let parent_hir_id = tcx.hir().get_parent_item(hir_id);\n             let containing_item = tcx.hir().expect_item(parent_hir_id);\n-            let containing_impl_trait_ref = match &containing_item.kind {\n-                hir::ItemKind::Impl(_, _, _, _, tr, _, _) => tr,\n+            let containing_impl_is_for_trait = match &containing_item.kind {\n+                hir::ItemKind::Impl(_, _, _, _, tr, _, _) => tr.is_some(),\n                 _ => bug!(\"parent of an ImplItem must be an Impl\"),\n             };\n \n-            // if the impl block this item is within is for a trait...\n-            if containing_impl_trait_ref.is_some() {\n+            if containing_impl_is_for_trait {\n                 struct_span_err!(\n                     tcx.sess,\n                     tc_attr.span,"}]}