{"sha": "12292e445afeb0757848a409e1e872f28db9cc74", "node_id": "C_kwDOAAsO6NoAKDEyMjkyZTQ0NWFmZWIwNzU3ODQ4YTQwOWUxZTg3MmYyOGRiOWNjNzQ", "commit": {"author": {"name": "Ddystopia", "email": "alexanderbabak@proton.me", "date": "2023-04-26T12:51:45Z"}, "committer": {"name": "Ddystopia", "email": "alexanderbabak@proton.me", "date": "2023-05-02T15:06:39Z"}, "message": "Tests for `externalDocs`", "tree": {"sha": "fa06297c851601743f91fab97262fbeb8a2c2e88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa06297c851601743f91fab97262fbeb8a2c2e88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12292e445afeb0757848a409e1e872f28db9cc74", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE83x4qCmEA5TzaAMiEJh17BFTUhIFAmRRJv8ACgkQEJh17BFT\nUhKJpQ//dramhCZmGpQdp/KO+uAqzHLFGpSi1p85TKK8G+D0raDaIzaD9PzVk7Qx\ns5pcf772ulxWHBOPWKWavgUkvLoWBIqgIxEXfN+IfUeBN6MvuzZOmfth41skKf10\n4peiY607lE4rgEVaempvY63vbJY+JXJmnb9HcytROxuJj0z3D0nSBwszQIy/pYoc\nTJj/zTJAKXPJ1JEDG+HsNzHu0LlPNWlDkjLE4XzFQiDEGcyitW5/V3G/dgsOW7WB\nJBJrV1pBnFx1YQwtTIieEKJgPfCIF8c05r5ttPBMjqseAlfAdxMUmXPk05eD8oxx\nen8vifIM5IgC7MbXsACMYPFkIORBEaDqkYA36kyaVr6CVqPyjfTGp1peaUgJwguB\ne71WqeGMAzGY1C69oqp71KHTts9jgTUfER4SqPcGGJY0DmdXzoKKDU5vMZQHIPGd\n9DEl3gJK5giP9xA6I19QtPppMg9uNIPsLUfsPKO0qDrh0+BYfrhrrq/ODVjyibf0\n4yzsdjYg85v5R3Y8peOMw3TovOAFfRGTp81B7TB5Oxal1X31wtGqyMx17ccM6s2H\ne7FlhAvLCGCMhdiynudI7hUj8iiPdtqAaLLH3C89fTNTxG3tVmLs/aQMrIeHsUAk\nkc57PIbb9pmkSzshX9IVCYwReZI62ChtVF6WgSiKvPpTt5EXlUA=\n=NRzH\n-----END PGP SIGNATURE-----", "payload": "tree fa06297c851601743f91fab97262fbeb8a2c2e88\nparent da0ffe79d0a0006d379ad1eec9e3e1b27ad98583\nauthor Ddystopia <alexanderbabak@proton.me> 1682513505 +0200\ncommitter Ddystopia <alexanderbabak@proton.me> 1683039999 +0200\n\nTests for `externalDocs`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12292e445afeb0757848a409e1e872f28db9cc74", "html_url": "https://github.com/rust-lang/rust/commit/12292e445afeb0757848a409e1e872f28db9cc74", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12292e445afeb0757848a409e1e872f28db9cc74/comments", "author": {"login": "Ddystopia", "id": 63151578, "node_id": "MDQ6VXNlcjYzMTUxNTc4", "avatar_url": "https://avatars.githubusercontent.com/u/63151578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ddystopia", "html_url": "https://github.com/Ddystopia", "followers_url": "https://api.github.com/users/Ddystopia/followers", "following_url": "https://api.github.com/users/Ddystopia/following{/other_user}", "gists_url": "https://api.github.com/users/Ddystopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ddystopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ddystopia/subscriptions", "organizations_url": "https://api.github.com/users/Ddystopia/orgs", "repos_url": "https://api.github.com/users/Ddystopia/repos", "events_url": "https://api.github.com/users/Ddystopia/events{/privacy}", "received_events_url": "https://api.github.com/users/Ddystopia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ddystopia", "id": 63151578, "node_id": "MDQ6VXNlcjYzMTUxNTc4", "avatar_url": "https://avatars.githubusercontent.com/u/63151578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ddystopia", "html_url": "https://github.com/Ddystopia", "followers_url": "https://api.github.com/users/Ddystopia/followers", "following_url": "https://api.github.com/users/Ddystopia/following{/other_user}", "gists_url": "https://api.github.com/users/Ddystopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ddystopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ddystopia/subscriptions", "organizations_url": "https://api.github.com/users/Ddystopia/orgs", "repos_url": "https://api.github.com/users/Ddystopia/repos", "events_url": "https://api.github.com/users/Ddystopia/events{/privacy}", "received_events_url": "https://api.github.com/users/Ddystopia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da0ffe79d0a0006d379ad1eec9e3e1b27ad98583", "url": "https://api.github.com/repos/rust-lang/rust/commits/da0ffe79d0a0006d379ad1eec9e3e1b27ad98583", "html_url": "https://github.com/rust-lang/rust/commit/da0ffe79d0a0006d379ad1eec9e3e1b27ad98583"}], "stats": {"total": 119, "additions": 100, "deletions": 19}, "files": [{"sha": "d04d124ce02d63fbb44504d384e26aab95c4491d", "filename": "crates/ide/src/doc_links/tests.rs", "status": "modified", "additions": 100, "deletions": 19, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/12292e445afeb0757848a409e1e872f28db9cc74/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12292e445afeb0757848a409e1e872f28db9cc74/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs?ref=12292e445afeb0757848a409e1e872f28db9cc74", "patch": "@@ -1,3 +1,5 @@\n+use std::ffi::OsStr;\n+\n use expect_test::{expect, Expect};\n use hir::{HasAttrs, Semantics};\n use ide_db::{\n@@ -13,11 +15,32 @@ use crate::{\n     fixture, TryToNav,\n };\n \n-fn check_external_docs(ra_fixture: &str, expect: Expect) {\n+fn check_external_docs(\n+    ra_fixture: &str,\n+    target_dir: Option<&OsStr>,\n+    expect_web_url: Option<Expect>,\n+    expect_local_url: Option<Expect>,\n+) {\n     let (analysis, position) = fixture::position(ra_fixture);\n-    let url = analysis.external_docs(position).unwrap().expect(\"could not find url for symbol\");\n+    let links = analysis.external_docs(position, target_dir).unwrap();\n+\n+    let web_url = links.web_url;\n+    let local_url = links.local_url;\n+\n+    println!(\"web_url: {:?}\", web_url);\n+    println!(\"local_url: {:?}\", local_url);\n \n-    expect.assert_eq(&url)\n+    match (expect_web_url, web_url) {\n+        (Some(expect), Some(url)) => expect.assert_eq(&url),\n+        (None, None) => (),\n+        _ => panic!(\"Unexpected web url\"),\n+    }\n+\n+    match (expect_local_url, local_url) {\n+        (Some(expect), Some(url)) => expect.assert_eq(&url),\n+        (None, None) => (),\n+        _ => panic!(\"Unexpected local url\"),\n+    }\n }\n \n fn check_rewrite(ra_fixture: &str, expect: Expect) {\n@@ -105,7 +128,9 @@ use foo$0::Foo;\n //- /lib.rs crate:foo\n pub struct Foo;\n \"#,\n-        expect![[r#\"https://docs.rs/foo/*/foo/index.html\"#]],\n+        Some(&OsStr::new(\"/home/user/project/\")),\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/index.html\"#]]),\n+        Some(expect![[r#\"file:///home/user/project/doc/foo/index.html\"#]]),\n     );\n }\n \n@@ -116,7 +141,9 @@ fn external_docs_doc_url_std_crate() {\n //- /main.rs crate:std\n use self$0;\n \"#,\n-        expect![\"https://doc.rust-lang.org/stable/std/index.html\"],\n+        Some(&OsStr::new(\"/home/user/project/\")),\n+        Some(expect![\"https://doc.rust-lang.org/stable/std/index.html\"]),\n+        None,\n     );\n }\n \n@@ -127,7 +154,35 @@ fn external_docs_doc_url_struct() {\n //- /main.rs crate:foo\n pub struct Fo$0o;\n \"#,\n-        expect![[r#\"https://docs.rs/foo/*/foo/struct.Foo.html\"#]],\n+        Some(&OsStr::new(\"/home/user/project/\")),\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/struct.Foo.html\"#]]),\n+        Some(expect![[r#\"file:///home/user/project/doc/foo/struct.Foo.html\"#]]),\n+    );\n+}\n+\n+#[test]\n+fn external_docs_doc_url_windows_backslash_path() {\n+    check_external_docs(\n+        r#\"\n+//- /main.rs crate:foo\n+pub struct Fo$0o;\n+\"#,\n+        Some(&OsStr::new(r\"C:\\Users\\user\\project\")),\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/struct.Foo.html\"#]]),\n+        Some(expect![[r#\"file:///C:\\Users\\user\\project/doc/foo/struct.Foo.html\"#]]),\n+    );\n+}\n+\n+#[test]\n+fn external_docs_doc_url_windows_slash_path() {\n+    check_external_docs(\n+        r#\"\n+//- /main.rs crate:foo\n+pub struct Fo$0o;\n+\"#,\n+        Some(&OsStr::new(r\"C:/Users/user/project\")),\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/struct.Foo.html\"#]]),\n+        Some(expect![[r#\"file:///C:/Users/user/project/doc/foo/struct.Foo.html\"#]]),\n     );\n }\n \n@@ -140,7 +195,9 @@ pub struct Foo {\n     field$0: ()\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#structfield.field\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#structfield.field\"##]]),\n+        None,\n     );\n }\n \n@@ -151,7 +208,9 @@ fn external_docs_doc_url_fn() {\n //- /main.rs crate:foo\n pub fn fo$0o() {}\n \"#,\n-        expect![[r#\"https://docs.rs/foo/*/foo/fn.foo.html\"#]],\n+        None,\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/fn.foo.html\"#]]),\n+        None,\n     );\n }\n \n@@ -165,7 +224,9 @@ impl Foo {\n     pub fn method$0() {}\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#method.method\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#method.method\"##]]),\n+        None,\n     );\n     check_external_docs(\n         r#\"\n@@ -175,7 +236,9 @@ impl Foo {\n     const CONST$0: () = ();\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#associatedconstant.CONST\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#associatedconstant.CONST\"##]]),\n+        None,\n     );\n }\n \n@@ -192,7 +255,9 @@ impl Trait for Foo {\n     pub fn method$0() {}\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#method.method\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#method.method\"##]]),\n+        None,\n     );\n     check_external_docs(\n         r#\"\n@@ -205,7 +270,9 @@ impl Trait for Foo {\n     const CONST$0: () = ();\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#associatedconstant.CONST\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#associatedconstant.CONST\"##]]),\n+        None,\n     );\n     check_external_docs(\n         r#\"\n@@ -218,7 +285,9 @@ impl Trait for Foo {\n     type Type$0 = ();\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#associatedtype.Type\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/struct.Foo.html#associatedtype.Type\"##]]),\n+        None,\n     );\n }\n \n@@ -231,7 +300,9 @@ pub trait Foo {\n     fn method$0();\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/trait.Foo.html#tymethod.method\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/trait.Foo.html#tymethod.method\"##]]),\n+        None,\n     );\n     check_external_docs(\n         r#\"\n@@ -240,7 +311,9 @@ pub trait Foo {\n     const CONST$0: ();\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/trait.Foo.html#associatedconstant.CONST\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/trait.Foo.html#associatedconstant.CONST\"##]]),\n+        None,\n     );\n     check_external_docs(\n         r#\"\n@@ -249,7 +322,9 @@ pub trait Foo {\n     type Type$0;\n }\n \"#,\n-        expect![[r##\"https://docs.rs/foo/*/foo/trait.Foo.html#associatedtype.Type\"##]],\n+        None,\n+        Some(expect![[r##\"https://docs.rs/foo/*/foo/trait.Foo.html#associatedtype.Type\"##]]),\n+        None,\n     );\n }\n \n@@ -260,7 +335,9 @@ fn external_docs_trait() {\n //- /main.rs crate:foo\n trait Trait$0 {}\n \"#,\n-        expect![[r#\"https://docs.rs/foo/*/foo/trait.Trait.html\"#]],\n+        None,\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/trait.Trait.html\"#]]),\n+        None,\n     )\n }\n \n@@ -273,7 +350,9 @@ pub mod foo {\n     pub mod ba$0r {}\n }\n \"#,\n-        expect![[r#\"https://docs.rs/foo/*/foo/foo/bar/index.html\"#]],\n+        None,\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/foo/bar/index.html\"#]]),\n+        None,\n     )\n }\n \n@@ -294,7 +373,9 @@ fn foo() {\n     let bar: wrapper::It$0em;\n }\n         \"#,\n-        expect![[r#\"https://docs.rs/foo/*/foo/wrapper/module/struct.Item.html\"#]],\n+        None,\n+        Some(expect![[r#\"https://docs.rs/foo/*/foo/wrapper/module/struct.Item.html\"#]]),\n+        None,\n     )\n }\n "}]}