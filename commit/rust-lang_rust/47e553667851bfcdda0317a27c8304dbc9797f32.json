{"sha": "47e553667851bfcdda0317a27c8304dbc9797f32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZTU1MzY2Nzg1MWJmY2RkYTAzMTdhMjdjODMwNGRiYzk3OTdmMzI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T09:46:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T09:58:01Z"}, "message": "rename struct field -> struct field data", "tree": {"sha": "c64374d90d2af63c2b9d0cc28e622c2e5086ffd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c64374d90d2af63c2b9d0cc28e622c2e5086ffd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47e553667851bfcdda0317a27c8304dbc9797f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47e553667851bfcdda0317a27c8304dbc9797f32", "html_url": "https://github.com/rust-lang/rust/commit/47e553667851bfcdda0317a27c8304dbc9797f32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47e553667851bfcdda0317a27c8304dbc9797f32/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae97cd59ff086e7efb6409f14c2f8ae8861596e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae97cd59ff086e7efb6409f14c2f8ae8861596e4", "html_url": "https://github.com/rust-lang/rust/commit/ae97cd59ff086e7efb6409f14c2f8ae8861596e4"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "2579ece199ce9a206f754ee3ae78b012b154d723", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/47e553667851bfcdda0317a27c8304dbc9797f32/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e553667851bfcdda0317a27c8304dbc9797f32/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=47e553667851bfcdda0317a27c8304dbc9797f32", "patch": "@@ -118,21 +118,21 @@ pub struct EnumVariantData {\n \n /// A single field of an enum variant or struct\n #[derive(Debug, Clone, PartialEq, Eq)]\n-pub struct StructField {\n+pub struct StructFieldData {\n     pub(crate) name: Name,\n     pub(crate) type_ref: TypeRef,\n }\n \n /// Fields of an enum variant or struct\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum VariantData {\n-    Struct(Vec<StructField>),\n-    Tuple(Vec<StructField>),\n+    Struct(Vec<StructFieldData>),\n+    Tuple(Vec<StructFieldData>),\n     Unit,\n }\n \n impl VariantData {\n-    pub fn fields(&self) -> &[StructField] {\n+    pub fn fields(&self) -> &[StructFieldData] {\n         match self {\n             VariantData::Struct(fields) | VariantData::Tuple(fields) => fields,\n             _ => &[],\n@@ -168,7 +168,7 @@ impl VariantData {\n                 let fields = fl\n                     .fields()\n                     .enumerate()\n-                    .map(|(i, fd)| StructField {\n+                    .map(|(i, fd)| StructFieldData {\n                         name: Name::tuple_field_name(i),\n                         type_ref: TypeRef::from_ast_opt(fd.type_ref()),\n                     })\n@@ -178,7 +178,7 @@ impl VariantData {\n             StructFlavor::Named(fl) => {\n                 let fields = fl\n                     .fields()\n-                    .map(|fd| StructField {\n+                    .map(|fd| StructFieldData {\n                         name: fd.name().map(|n| n.as_name()).unwrap_or_else(Name::missing),\n                         type_ref: TypeRef::from_ast_opt(fd.type_ref()),\n                     })"}]}