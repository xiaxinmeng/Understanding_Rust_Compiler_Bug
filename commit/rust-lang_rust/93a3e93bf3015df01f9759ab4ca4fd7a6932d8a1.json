{"sha": "93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYTNlOTNiZjMwMTVkZjAxZjk3NTlhYjRjYTRmZDdhNjkzMmQ4YTE=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2018-04-03T13:11:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-03T13:11:41Z"}, "message": "tweak fmt::Arguments docs\n\nRemove an outdated claim about passing something or other to a function. Also swap the variable names in the example.", "tree": {"sha": "9616d9346d9bbdb5a855d3e25ee37d17a0668ffd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9616d9346d9bbdb5a855d3e25ee37d17a0668ffd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaw32NCRBK7hj4Ov3rIwAAdHIIAIaArziGcqloGctW8t/WVeEu\nrVL6qOhka+im6h2u6wqRtjiydS6vAIPak1gQXSKMqOrg6rR/3mrt5Q8moUE3wasR\nJ3mDMBo8PNraqspm1HH1E95M6/g1ouklA656WCRpXLh2eIH8la6XFobCvsZtsGSc\n1iOrFyD79bmbRnx9oj77WzbsJdKJNGuDohvJxTIGp0os1v6q/9fDyeO3s2pHURlG\npGdB6nnml1O/onCWoDufiSJNEzumtQWwEzcQHRJSsO5s32zNfZykjh/CZcCej4+w\nZGj0bDjd+M7OrG8RqL+IWMxoj0IvuTtWN8uqrk+qEeEIspgZ0XPxJCAjnC9Jmz8=\n=8Lqu\n-----END PGP SIGNATURE-----\n", "payload": "tree 9616d9346d9bbdb5a855d3e25ee37d17a0668ffd\nparent b12af86a776364f01f65e3bd551e2641b4fac4ec\nauthor Alex Burka <durka42+github@gmail.com> 1522761101 -0400\ncommitter GitHub <noreply@github.com> 1522761101 -0400\n\ntweak fmt::Arguments docs\n\nRemove an outdated claim about passing something or other to a function. Also swap the variable names in the example."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1", "html_url": "https://github.com/rust-lang/rust/commit/93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b12af86a776364f01f65e3bd551e2641b4fac4ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/b12af86a776364f01f65e3bd551e2641b4fac4ec", "html_url": "https://github.com/rust-lang/rust/commit/b12af86a776364f01f65e3bd551e2641b4fac4ec"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "d55219d7226e6d5fda7e7679df06994ab6a987f8", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=93a3e93bf3015df01f9759ab4ca4fd7a6932d8a1", "patch": "@@ -401,19 +401,18 @@ impl<'a> Arguments<'a> {\n /// safely be done, so no constructors are given and the fields are private\n /// to prevent modification.\n ///\n-/// The [`format_args!`] macro will safely create an instance of this structure\n-/// and pass it to a function or closure, passed as the first argument. The\n-/// macro validates the format string at compile-time so usage of the [`write`]\n-/// and [`format`] functions can be safely performed.\n+/// The [`format_args!`] macro will safely create an instance of this structure.\n+/// The macro validates the format string at compile-time so usage of the\n+/// [`write`] and [`format`] functions can be safely performed.\n ///\n /// You can use the `Arguments<'a>` that [`format_args!`] returns in `Debug`\n /// and `Display` contexts as seen below. The example also shows that `Debug`\n /// and `Display` format to the same thing: the interpolated format string\n /// in `format_args!`.\n ///\n /// ```rust\n-/// let display = format!(\"{:?}\", format_args!(\"{} foo {:?}\", 1, 2));\n-/// let debug = format!(\"{}\", format_args!(\"{} foo {:?}\", 1, 2));\n+/// let debug = format!(\"{:?}\", format_args!(\"{} foo {:?}\", 1, 2));\n+/// let display = format!(\"{}\", format_args!(\"{} foo {:?}\", 1, 2));\n /// assert_eq!(\"1 foo 2\", display);\n /// assert_eq!(display, debug);\n /// ```"}]}