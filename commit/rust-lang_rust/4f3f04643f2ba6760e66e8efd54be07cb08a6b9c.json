{"sha": "4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmM2YwNDY0M2YyYmE2NzYwZTY2ZThlZmQ1NGJlMDdjYjA4YTZiOWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-09T01:17:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-09T01:17:06Z"}, "message": "Remove native \"cdecl\" ABI", "tree": {"sha": "2a45764aabb28eee335af48d6b08aabf20ce5e74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a45764aabb28eee335af48d6b08aabf20ce5e74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "html_url": "https://github.com/rust-lang/rust/commit/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d536bc2c10b7008dd3bccdfc9e82ba0af2533f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/d536bc2c10b7008dd3bccdfc9e82ba0af2533f34", "html_url": "https://github.com/rust-lang/rust/commit/d536bc2c10b7008dd3bccdfc9e82ba0af2533f34"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "eab64b9a75056debab400ec1c71a212664aff4ae", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -51,8 +51,7 @@ fn visit_view_item(e: env, i: @ast::view_item) {\n fn visit_item(e: env, i: @ast::item) {\n     alt i.node {\n       ast::item_native_mod(m) {\n-        if m.abi != ast::native_abi_cdecl &&\n-                m.abi != ast::native_abi_c_stack_cdecl &&\n+        if m.abi != ast::native_abi_c_stack_cdecl &&\n                 m.abi != ast::native_abi_c_stack_stdcall {\n             ret;\n         }"}, {"sha": "5f34f1b52eb4681420f4430ef94247dba16cdc05", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -260,7 +260,6 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n         let abi;\n         alt next(st) as char {\n           'i' { abi = ast::native_abi_rust_intrinsic; }\n-          'c' { abi = ast::native_abi_cdecl; }\n           's' { abi = ast::native_abi_x86stdcall; }\n           'C' { abi = ast::native_abi_c_stack_cdecl; }\n           'S' { abi = ast::native_abi_c_stack_stdcall; }"}, {"sha": "79298d29757bea67ba474002305347ad94333530", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -143,7 +143,6 @@ fn enc_sty(w: io::writer, cx: @ctxt, st: ty::sty) {\n         w.write_char('N');\n         alt abi {\n           native_abi_rust_intrinsic. { w.write_char('i'); }\n-          native_abi_cdecl. { w.write_char('c'); }\n           native_abi_x86stdcall. { w.write_char('s'); }\n           native_abi_c_stack_cdecl. { w.write_char('C'); }\n           native_abi_c_stack_stdcall. { w.write_char('S'); }"}, {"sha": "e054d359bb9bf9bdde0b986f8812633d4d525674", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -5531,7 +5531,6 @@ fn native_fn_ty_param_count(cx: @crate_ctxt, id: ast::node_id) -> uint {\n \n pure fn native_abi_requires_pair(abi: ast::native_abi) -> bool {\n     alt abi {\n-        ast::native_abi_cdecl. |\n         ast::native_abi_rust_intrinsic. |\n         ast::native_abi_x86stdcall. { ret true; }\n         ast::native_abi_c_stack_cdecl. |\n@@ -5576,11 +5575,6 @@ fn register_native_fn(ccx: @crate_ctxt, sp: span, path: [str], name: str,\n         uses_retptr = true;\n         cast_to_i32 = false;\n       }\n-      ast::native_abi_cdecl. {\n-        pass_task = false;\n-        uses_retptr = false;\n-        cast_to_i32 = true;\n-      }\n       ast::native_abi_x86stdcall. {\n         pass_task = false;\n         uses_retptr = false;"}, {"sha": "7306ae4181761e9d5b21a4611bcc888215f17498", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -551,7 +551,8 @@ mod collect {\n         alt it {\n           some(ast_map::node_item(item)) { tpt = ty_of_item(cx, item); }\n           some(ast_map::node_native_item(native_item)) {\n-            tpt = ty_of_native_item(cx, native_item, ast::native_abi_cdecl);\n+            tpt = ty_of_native_item(cx, native_item,\n+                                    ast::native_abi_c_stack_cdecl);\n           }\n           _ { cx.tcx.sess.fatal(\"internal error \" + std::int::str(id.node)); }\n         }"}, {"sha": "75ece99a1b6fd56bbf0436f17d93abf78e1432cb", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -426,7 +426,6 @@ type anon_obj =\n type _mod = {view_items: [@view_item], items: [@item]};\n \n tag native_abi {\n-    native_abi_cdecl;\n     native_abi_rust_intrinsic;\n     native_abi_x86stdcall;\n     native_abi_c_stack_cdecl;"}, {"sha": "1358d704fe0555f43dfa190e10e51e147681f8ce", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -2003,11 +2003,10 @@ fn parse_native_mod_items(p: parser, native_name: str, abi: ast::native_abi,\n \n fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n     let lo = p.get_last_lo_pos();\n-    let abi = ast::native_abi_cdecl;\n+    let abi = ast::native_abi_c_stack_cdecl;\n     if !is_word(p, \"mod\") {\n         let t = parse_str(p);\n-        if str::eq(t, \"cdecl\") {\n-        } else if str::eq(t, \"rust-intrinsic\") {\n+        if str::eq(t, \"rust-intrinsic\") {\n             abi = ast::native_abi_rust_intrinsic;\n         } else if str::eq(t, \"x86stdcall\") {\n             abi = ast::native_abi_x86stdcall;"}, {"sha": "1028feaffc4adffa18481442a9551ee36f562687", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3f04643f2ba6760e66e8efd54be07cb08a6b9c/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=4f3f04643f2ba6760e66e8efd54be07cb08a6b9c", "patch": "@@ -401,7 +401,6 @@ fn print_item(s: ps, &&item: @ast::item) {\n       ast::item_native_mod(nmod) {\n         head(s, \"native\");\n         alt nmod.abi {\n-          ast::native_abi_cdecl. { word_nbsp(s, \"\\\"cdecl\\\"\"); }\n           ast::native_abi_rust_intrinsic. {\n             word_nbsp(s, \"\\\"rust-intrinsic\\\"\");\n           }"}]}