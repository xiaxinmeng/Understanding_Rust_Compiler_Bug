{"sha": "6bc28c82c4bf729d6d0ad98df01b53653443b6fc", "node_id": "C_kwDOAAsO6NoAKDZiYzI4YzgyYzRiZjcyOWQ2ZDBhZDk4ZGYwMWI1MzY1MzQ0M2I2ZmM", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-02-10T16:00:54Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-02-10T16:38:40Z"}, "message": "Fix ICE if no trait assoc const eq", "tree": {"sha": "93fc472bb5476d213649727ff01ae42de99bb0b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93fc472bb5476d213649727ff01ae42de99bb0b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bc28c82c4bf729d6d0ad98df01b53653443b6fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc28c82c4bf729d6d0ad98df01b53653443b6fc", "html_url": "https://github.com/rust-lang/rust/commit/6bc28c82c4bf729d6d0ad98df01b53653443b6fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bc28c82c4bf729d6d0ad98df01b53653443b6fc/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56cd04af5c389b6ab676ba16f59d9f70bc465090", "url": "https://api.github.com/repos/rust-lang/rust/commits/56cd04af5c389b6ab676ba16f59d9f70bc465090", "html_url": "https://github.com/rust-lang/rust/commit/56cd04af5c389b6ab676ba16f59d9f70bc465090"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "471cd2e6ccb1cbf50e9dab3a85d6f7d83001200a", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6bc28c82c4bf729d6d0ad98df01b53653443b6fc/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc28c82c4bf729d6d0ad98df01b53653443b6fc/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=6bc28c82c4bf729d6d0ad98df01b53653443b6fc", "patch": "@@ -508,8 +508,9 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                               })\n                       }) =>\n                 {\n-                  // FIXME(associated_const_equality) when does this unwrap fail? I have no idea what case it would.\n-                  let trait_def_id = trait_ref.trait_def_id().unwrap();\n+                  let Some(trait_def_id) = trait_ref.trait_def_id() else {\n+                    return tcx.ty_error_with_message(DUMMY_SP, \"Could not find trait\");\n+                  };\n                   let assoc_items = tcx.associated_items(trait_def_id);\n                   let assoc_item = assoc_items.find_by_name_and_kind(\n                     tcx, binding.ident, ty::AssocKind::Const, def_id.to_def_id(),"}, {"sha": "5c7b065983e194f3af96f0c321e2355912882bf2", "filename": "src/test/ui/associated-consts/issue-93835.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6bc28c82c4bf729d6d0ad98df01b53653443b6fc/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-93835.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc28c82c4bf729d6d0ad98df01b53653443b6fc/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-93835.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-93835.rs?ref=6bc28c82c4bf729d6d0ad98df01b53653443b6fc", "patch": "@@ -0,0 +1,10 @@\n+fn e() {\n+    p:a<p:p<e=6>>\n+    //~^ ERROR comparison operators\n+    //~| ERROR cannot find value\n+    //~| ERROR associated const equality\n+    //~| ERROR associated const equality\n+    //~| ERROR associated type bounds\n+}\n+\n+fn main() {}"}, {"sha": "12df0e4381d15c552bae91681969d6f2007809d4", "filename": "src/test/ui/associated-consts/issue-93835.stderr", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/6bc28c82c4bf729d6d0ad98df01b53653443b6fc/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-93835.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bc28c82c4bf729d6d0ad98df01b53653443b6fc/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-93835.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-93835.stderr?ref=6bc28c82c4bf729d6d0ad98df01b53653443b6fc", "patch": "@@ -0,0 +1,66 @@\n+error: comparison operators cannot be chained\n+  --> $DIR/issue-93835.rs:2:8\n+   |\n+LL | fn e() {\n+   |        - while parsing this struct\n+LL |     p:a<p:p<e=6>>\n+   |        ^        ^\n+   |\n+   = help: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n+   = help: or use `(...)` if you meant to specify fn arguments\n+\n+error[E0425]: cannot find value `p` in this scope\n+  --> $DIR/issue-93835.rs:2:5\n+   |\n+LL |     p:a<p:p<e=6>>\n+   |     ^ not found in this scope\n+   |\n+help: you might have meant to write a `struct` literal\n+   |\n+LL ~ fn e() { SomeStruct {\n+LL |     p:a<p:p<e=6>>\n+LL |\n+LL |\n+LL |\n+LL |\n+ ...\n+help: maybe you meant to write a path separator here\n+   |\n+LL |     p::a<p:p<e=6>>\n+   |      ~~\n+help: maybe you meant to write an assignment here\n+   |\n+LL |     let p:a<p:p<e=6>>\n+   |     ~~~~~\n+\n+error[E0658]: associated const equality is incomplete\n+  --> $DIR/issue-93835.rs:2:13\n+   |\n+LL |     p:a<p:p<e=6>>\n+   |             ^^^\n+   |\n+   = note: see issue #92827 <https://github.com/rust-lang/rust/issues/92827> for more information\n+   = help: add `#![feature(associated_const_equality)]` to the crate attributes to enable\n+\n+error[E0658]: associated const equality is incomplete\n+  --> $DIR/issue-93835.rs:2:13\n+   |\n+LL |     p:a<p:p<e=6>>\n+   |             ^^^\n+   |\n+   = note: see issue #92827 <https://github.com/rust-lang/rust/issues/92827> for more information\n+   = help: add `#![feature(associated_const_equality)]` to the crate attributes to enable\n+\n+error[E0658]: associated type bounds are unstable\n+  --> $DIR/issue-93835.rs:2:9\n+   |\n+LL |     p:a<p:p<e=6>>\n+   |         ^^^^^^^^\n+   |\n+   = note: see issue #52662 <https://github.com/rust-lang/rust/issues/52662> for more information\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n+\n+error: aborting due to 5 previous errors\n+\n+Some errors have detailed explanations: E0425, E0658.\n+For more information about an error, try `rustc --explain E0425`."}]}