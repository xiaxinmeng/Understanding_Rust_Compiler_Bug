{"sha": "23880daef2fbdfc01f8651fa8e84eb9700cceb3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzODgwZGFlZjJmYmRmYzAxZjg2NTFmYThlODRlYjk3MDBjY2ViM2M=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-11T19:12:13Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-11T19:12:13Z"}, "message": "rustc: Remove the cmp type upcall", "tree": {"sha": "3f33d4801b62887b341ed690da9d6306e07e59f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f33d4801b62887b341ed690da9d6306e07e59f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23880daef2fbdfc01f8651fa8e84eb9700cceb3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23880daef2fbdfc01f8651fa8e84eb9700cceb3c", "html_url": "https://github.com/rust-lang/rust/commit/23880daef2fbdfc01f8651fa8e84eb9700cceb3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23880daef2fbdfc01f8651fa8e84eb9700cceb3c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd8ec6d9236867d3f088432033f56b6ad29c15a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8ec6d9236867d3f088432033f56b6ad29c15a7", "html_url": "https://github.com/rust-lang/rust/commit/cd8ec6d9236867d3f088432033f56b6ad29c15a7"}], "stats": {"total": 34, "additions": 0, "deletions": 34}, "files": [{"sha": "7c35e3d892dbfd64f71f10a638de3fc23f39472b", "filename": "src/rustc/back/abi.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23880daef2fbdfc01f8651fa8e84eb9700cceb3c/src%2Frustc%2Fback%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23880daef2fbdfc01f8651fa8e84eb9700cceb3c/src%2Frustc%2Fback%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Fabi.rs?ref=23880daef2fbdfc01f8651fa8e84eb9700cceb3c", "patch": "@@ -43,12 +43,6 @@ const tydesc_field_shape: uint = 6u;\n const tydesc_field_shape_tables: uint = 7u;\n const n_tydesc_fields: uint = 8u;\n \n-const cmp_glue_op_eq: uint = 0u;\n-\n-const cmp_glue_op_lt: uint = 1u;\n-\n-const cmp_glue_op_le: uint = 2u;\n-\n // The two halves of a closure: code and environment.\n const fn_field_code: uint = 0u;\n const fn_field_box: uint = 1u;"}, {"sha": "66241c7aa6d931f9b5b36d371ddd3d0079db659e", "filename": "src/rustc/back/upcall.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/23880daef2fbdfc01f8651fa8e84eb9700cceb3c/src%2Frustc%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23880daef2fbdfc01f8651fa8e84eb9700cceb3c/src%2Frustc%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Fupcall.rs?ref=23880daef2fbdfc01f8651fa8e84eb9700cceb3c", "patch": "@@ -18,7 +18,6 @@ type upcalls =\n      mark: ValueRef,\n      str_new_uniq: ValueRef,\n      str_new_shared: ValueRef,\n-     cmp_type: ValueRef,\n      log_type: ValueRef,\n      call_shim_on_c_stack: ValueRef,\n      call_shim_on_rust_stack: ValueRef,\n@@ -74,12 +73,6 @@ fn declare_upcalls(targ_cfg: @session::config,\n           str_new_shared:\n               nothrow(d(~\"str_new_shared\", ~[T_ptr(T_i8()), int_t],\n                         T_ptr(T_i8()))),\n-          cmp_type:\n-              dv(~\"cmp_type\",\n-                 ~[T_ptr(T_i1()), T_ptr(tydesc_type),\n-                  T_ptr(T_i8()),\n-                  T_ptr(T_i8()),\n-                  T_i8()]),\n           log_type:\n               dv(~\"log_type\", ~[T_ptr(tydesc_type),\n                               T_ptr(T_i8()), T_i32()]),"}, {"sha": "384f6e71198a0387ec0f028195bdd97f9189e0ba", "filename": "src/rustc/middle/trans/glue.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/23880daef2fbdfc01f8651fa8e84eb9700cceb3c/src%2Frustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23880daef2fbdfc01f8651fa8e84eb9700cceb3c/src%2Frustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=23880daef2fbdfc01f8651fa8e84eb9700cceb3c", "patch": "@@ -253,27 +253,6 @@ fn call_tydesc_glue(++cx: block, v: ValueRef, t: ty::t, field: uint)\n     return cx;\n }\n \n-fn call_cmp_glue(bcx: block, lhs: ValueRef, rhs: ValueRef, t: ty::t,\n-                 llop: ValueRef) -> ValueRef {\n-    // We can't use call_tydesc_glue_full() and friends here because compare\n-    // glue has a special signature.\n-    let _icx = bcx.insn_ctxt(\"call_cmp_glue\");\n-\n-    let lllhs = spill_if_immediate(bcx, lhs, t);\n-    let llrhs = spill_if_immediate(bcx, rhs, t);\n-\n-    let llrawlhsptr = BitCast(bcx, lllhs, T_ptr(T_i8()));\n-    let llrawrhsptr = BitCast(bcx, llrhs, T_ptr(T_i8()));\n-    let lltydesc = get_tydesc_simple(bcx.ccx(), t);\n-\n-    let llfn = bcx.ccx().upcalls.cmp_type;\n-\n-    let llcmpresultptr = alloca(bcx, T_i1());\n-    Call(bcx, llfn, ~[llcmpresultptr, lltydesc,\n-                      llrawlhsptr, llrawrhsptr, llop]);\n-    return Load(bcx, llcmpresultptr);\n-}\n-\n fn make_visit_glue(bcx: block, v: ValueRef, t: ty::t) {\n     let _icx = bcx.insn_ctxt(\"make_visit_glue\");\n     let mut bcx = bcx;"}]}