{"sha": "32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYjJkYWNkZjhjMGUyZWFmNWZkOTE5ZTZjMzVlZTM4MTkxMDFlMGE=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-05-28T13:05:06Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-06-20T11:23:07Z"}, "message": "Handle lifetimes in NodeGenericParam also", "tree": {"sha": "2bef1dfb45d4a792e5ecd78c644cf1e9afe4f668", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bef1dfb45d4a792e5ecd78c644cf1e9afe4f668"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a", "html_url": "https://github.com/rust-lang/rust/commit/32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80dbe58efc7152cc9925012de0e568f36a9893a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/80dbe58efc7152cc9925012de0e568f36a9893a8", "html_url": "https://github.com/rust-lang/rust/commit/80dbe58efc7152cc9925012de0e568f36a9893a8"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "cb93c7e70d1794d4d071d458db187a21d61250dc", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=32b2dacdf8c0e2eaf5fd919e6c35ee3819101e0a", "patch": "@@ -495,7 +495,10 @@ impl<'hir> Map<'hir> {\n                                 MacroKind::Bang))\n             }\n             NodeGenericParam(param) => {\n-                Some(Def::TyParam(self.local_def_id(param.id)))\n+                Some(match param.kind {\n+                    GenericParamKind::Lifetime { .. } => Def::Local(param.id),\n+                    GenericParamKind::Type { .. } => Def::TyParam(self.local_def_id(param.id))\n+                })\n             }\n         }\n     }\n@@ -975,8 +978,8 @@ impl<'hir> Map<'hir> {\n             Some(NodeExpr(ref e)) => Some(&*e.attrs),\n             Some(NodeStmt(ref s)) => Some(s.node.attrs()),\n             Some(NodeGenericParam(param)) => match param.kind {\n+                GenericParamKind::Lifetime { .. } => None,\n                 GenericParamKind::Type { ref attrs, .. } => Some(&attrs[..]),\n-                _ => bug!(\"unexpected non-type NodeGenericParam\")\n             }\n             // unit/tuple structs take the attributes straight from\n             // the struct definition.\n@@ -1375,7 +1378,7 @@ fn node_id_to_string(map: &Map, id: NodeId, include_id: bool) -> String {\n             format!(\"lifetime {}{}\", map.node_to_pretty_string(id), id_str)\n         }\n         Some(NodeGenericParam(ref param)) => {\n-            format!(\"genericparam {:?}{}\", param, id_str)\n+            format!(\"generic_param {:?}{}\", param, id_str)\n         }\n         Some(NodeVisibility(ref vis)) => {\n             format!(\"visibility {:?}{}\", vis, id_str)"}]}