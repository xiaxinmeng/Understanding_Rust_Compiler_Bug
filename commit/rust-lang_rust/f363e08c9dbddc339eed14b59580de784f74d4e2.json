{"sha": "f363e08c9dbddc339eed14b59580de784f74d4e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNjNlMDhjOWRiZGRjMzM5ZWVkMTRiNTk1ODBkZTc4NGY3NGQ0ZTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-02-06T13:15:36Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:17Z"}, "message": "Update compile-fail tests", "tree": {"sha": "88477dabaafe499144e8bc67a478b28efcef33b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88477dabaafe499144e8bc67a478b28efcef33b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f363e08c9dbddc339eed14b59580de784f74d4e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53kACgkQpp+NIls6\n19l60A/+KUdy9kkQAzLY/CCNCfLx26LCzeAV7Rlk4fgwfexMvCQe5dvJNqiT4iOo\nB+7Ahi3HT/tgSy6G3Mwr33V2SeB1u/POc+Q6bcggVm9sNMRbTAD1ZnPZkh1C5+lz\nJPXutsFzithvJN59xhWzdGaW70vSwIa9Z0k7cu7JoVAsppBKE2Fi7YsQyrm7+I8s\ngKmDAnqR8FIsqE2W7mOXOVYHUgAheR2NW7FnjJDlB+PDZ/HxP3ikxemf6TRzyd3G\nIHTU6rCqP76Y64jnc2LGG6d2kt0uGmPmYHThO5x0X5AlirvjdRK3Lx73q+G+0Ltj\noPQldC1vxo1m4VWtHftqXYfWXL8/aCzTFHSQoPewSnE94oAAGcJ37z80LFZYt6FK\n6TkYkFEfHopxOcmyBRcQV4sLyTmLv9wxT5inhV5KKOudc3etOQrN3Il1/266HcGI\nvr4srALW7okNAmKOXDePkzdp9UtaUm19q2Rbv/mVq049uxcEZ+IJstAtMjKspFKO\nT8/sOgPpHaxeMqN1/zKSxARFItAZouhDmlzB0rEi5a2At3l7d8kex0S7vBh51e8Y\nL2aAeSz1aLl6h/zhN5vfV1+MBoKFq89WKlaBMJSWtV0bQYhtNx+OXY27X+ioGM8p\nZNT5Qy7GMw2YpcDomIf6gE6NWQ4ZtrZUxTLi9X/3hkGhx4Z6O2Y=\n=/eMS\n-----END PGP SIGNATURE-----", "payload": "tree 88477dabaafe499144e8bc67a478b28efcef33b4\nparent f68dc0190a369b6ce9bcfaae26d1b07941028da0\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1517922936 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494457 +0100\n\nUpdate compile-fail tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f363e08c9dbddc339eed14b59580de784f74d4e2", "html_url": "https://github.com/rust-lang/rust/commit/f363e08c9dbddc339eed14b59580de784f74d4e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f363e08c9dbddc339eed14b59580de784f74d4e2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f68dc0190a369b6ce9bcfaae26d1b07941028da0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f68dc0190a369b6ce9bcfaae26d1b07941028da0", "html_url": "https://github.com/rust-lang/rust/commit/f68dc0190a369b6ce9bcfaae26d1b07941028da0"}], "stats": {"total": 113, "additions": 24, "deletions": 89}, "files": [{"sha": "501c66e75cded115892fddfe02c0be9588b0c9c0", "filename": "src/test/compile-fail/array_const_index-0.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farray_const_index-0.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -11,7 +11,6 @@\n const A: &'static [i32] = &[];\n const B: i32 = (&A)[1];\n //~^ ERROR constant evaluation error\n-//~| ERROR E0080\n //~| index out of bounds: the len is 0 but the index is 1\n \n fn main() {"}, {"sha": "d3b43e83bfe5218ac914584e6424f6fd4ee4a9d4", "filename": "src/test/compile-fail/array_const_index-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farray_const_index-1.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -11,7 +11,6 @@\n const A: [i32; 0] = [];\n const B: i32 = A[1];\n //~^ ERROR constant evaluation error\n-//~| ERROR E0080\n //~| index out of bounds: the len is 0 but the index is 1\n \n fn main() {"}, {"sha": "53077d74ce50dab68c9f7f69c85e9d3597ee7bea", "filename": "src/test/compile-fail/const-err-early.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err-early.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -13,16 +13,11 @@\n pub const A: i8 = -std::i8::MIN; //~ ERROR E0080\n //~| ERROR const_err\n //~| ERROR const_err\n-//~| ERROR E0080\n pub const B: u8 = 200u8 + 200u8; //~ ERROR E0080\n-//~| ERROR E0080\n pub const C: u8 = 200u8 * 4; //~ ERROR E0080\n-//~| ERROR E0080\n pub const D: u8 = 42u8 - (42u8 + 1); //~ ERROR E0080\n-//~| ERROR E0080\n pub const E: u8 = [5u8][1];\n //~^ ERROR E0080\n-//~| ERROR E0080\n \n fn main() {\n     let _a = A;"}, {"sha": "d72097848feaa358b3d1913532fc163e816c5e24", "filename": "src/test/compile-fail/const-err-multi.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err-multi.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -14,19 +14,12 @@ pub const A: i8 = -std::i8::MIN;\n //~^ ERROR E0080\n //~| ERROR const_err\n //~| ERROR const_err\n-//~| ERROR constant evaluation error\n-//~| ERROR constant evaluation error\n-//~| ERROR constant evaluation error\n-//~| ERROR E0080\n pub const B: i8 = A;\n //~^ ERROR E0080\n-//~| ERROR E0080\n pub const C: u8 = A as u8;\n //~^ ERROR E0080\n-//~| ERROR E0080\n pub const D: i8 = 50 - A;\n //~^ ERROR E0080\n-//~| ERROR E0080\n \n fn main() {\n     let _ = (A, B, C, D);"}, {"sha": "8bd759b6d3735fe4cf9d266cd0f02fc6524e651f", "filename": "src/test/compile-fail/const-err.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-err.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -23,9 +23,7 @@ fn black_box<T>(_: T) {\n // Make sure that the two uses get two errors.\n const FOO: u8 = [5u8][1];\n //~^ ERROR constant evaluation error\n-//~| ERROR constant evaluation error\n //~| index out of bounds: the len is 1 but the index is 1\n-//~| ERROR E0080\n \n fn main() {\n     black_box((FOO, FOO));"}, {"sha": "25787b7bb4b9290633af9c794df374e8efd67dd6", "filename": "src/test/compile-fail/const-eval-overflow2.rs", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -22,65 +22,49 @@ use std::{i8, i16, i32, i64, isize};\n use std::{u8, u16, u32, u64, usize};\n \n const VALS_I8: (i8,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n     (\n      i8::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I16: (i16,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n     (\n      i16::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I32: (i32,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n     (\n      i32::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I64: (i64,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n     (\n      i64::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U8: (u8,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n     (\n      u8::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U16: (u16,) = (\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n      u16::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U32: (u32,) = (\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n      u32::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U64: (u64,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to subtract with overflow\n     (\n      u64::MIN - 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n fn main() {"}, {"sha": "d8332757b642b33ffa13cf5bd701a8d7b7dfdab7", "filename": "src/test/compile-fail/const-eval-overflow2b.rs", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2b.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -22,65 +22,49 @@ use std::{i8, i16, i32, i64, isize};\n use std::{u8, u16, u32, u64, usize};\n \n const VALS_I8: (i8,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n     (\n      i8::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I16: (i16,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n     (\n      i16::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I32: (i32,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n     (\n      i32::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I64: (i64,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n     (\n      i64::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U8: (u8,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n     (\n      u8::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U16: (u16,) = (\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n      u16::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U32: (u32,) = (\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n      u32::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U64: (u64,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to add with overflow\n     (\n      u64::MAX + 1,\n+     //~^ ERROR constant evaluation error\n      );\n \n fn main() {"}, {"sha": "2a8e4dc2c34fe78b0d16f190928e336564d23fc2", "filename": "src/test/compile-fail/const-eval-overflow2c.rs", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-overflow2c.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -22,65 +22,49 @@ use std::{i8, i16, i32, i64, isize};\n use std::{u8, u16, u32, u64, usize};\n \n const VALS_I8: (i8,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n     (\n      i8::MIN * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I16: (i16,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n     (\n      i16::MIN * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I32: (i32,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n     (\n      i32::MIN * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_I64: (i64,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n     (\n      i64::MIN * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U8: (u8,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n     (\n      u8::MAX * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U16: (u16,) = (\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n      u16::MAX * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U32: (u32,) = (\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n      u32::MAX * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n const VALS_U64: (u64,) =\n-     //~^ ERROR constant evaluation error\n-     //~| ERROR constant evaluation error\n-     //~| attempt to multiply with overflow\n     (\n      u64::MAX * 2,\n+     //~^ ERROR constant evaluation error\n      );\n \n fn main() {"}, {"sha": "179ea9e853f3ad6bd4a4abc7973ee4fb40e7203d", "filename": "src/test/compile-fail/const-slice-oob.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f363e08c9dbddc339eed14b59580de784f74d4e2/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-slice-oob.rs?ref=f363e08c9dbddc339eed14b59580de784f74d4e2", "patch": "@@ -13,7 +13,6 @@\n const FOO: &'static[u32] = &[1, 2, 3];\n const BAR: u32 = FOO[5];\n //~^ ERROR constant evaluation error [E0080]\n-//~| ERROR constant evaluation error [E0080]\n //~| index out of bounds: the len is 3 but the index is 5\n \n fn main() {"}]}