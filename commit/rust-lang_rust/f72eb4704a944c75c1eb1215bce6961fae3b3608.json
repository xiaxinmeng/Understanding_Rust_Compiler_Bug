{"sha": "f72eb4704a944c75c1eb1215bce6961fae3b3608", "node_id": "C_kwDOAAsO6NoAKGY3MmViNDcwNGE5NDRjNzVjMWViMTIxNWJjZTY5NjFmYWUzYjM2MDg", "commit": {"author": {"name": "alesito85", "email": "grm.ales@gmail.com", "date": "2023-02-13T08:57:22Z"}, "committer": {"name": "alesito85", "email": "grm.ales@gmail.com", "date": "2023-02-13T10:50:25Z"}, "message": "Add another error to Windows file open fallback\n\nAdded another error to be processed in fallback\n\nSolution suggested by Chris Denton https://github.com/nushell/nushell/issues/6857#issuecomment-1426847135", "tree": {"sha": "8d60704b92d2c9957c83056a0b8a3b6d6c29aa6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d60704b92d2c9957c83056a0b8a3b6d6c29aa6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f72eb4704a944c75c1eb1215bce6961fae3b3608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f72eb4704a944c75c1eb1215bce6961fae3b3608", "html_url": "https://github.com/rust-lang/rust/commit/f72eb4704a944c75c1eb1215bce6961fae3b3608", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f72eb4704a944c75c1eb1215bce6961fae3b3608/comments", "author": {"login": "alesito85", "id": 4399118, "node_id": "MDQ6VXNlcjQzOTkxMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4399118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alesito85", "html_url": "https://github.com/alesito85", "followers_url": "https://api.github.com/users/alesito85/followers", "following_url": "https://api.github.com/users/alesito85/following{/other_user}", "gists_url": "https://api.github.com/users/alesito85/gists{/gist_id}", "starred_url": "https://api.github.com/users/alesito85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alesito85/subscriptions", "organizations_url": "https://api.github.com/users/alesito85/orgs", "repos_url": "https://api.github.com/users/alesito85/repos", "events_url": "https://api.github.com/users/alesito85/events{/privacy}", "received_events_url": "https://api.github.com/users/alesito85/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alesito85", "id": 4399118, "node_id": "MDQ6VXNlcjQzOTkxMTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4399118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alesito85", "html_url": "https://github.com/alesito85", "followers_url": "https://api.github.com/users/alesito85/followers", "following_url": "https://api.github.com/users/alesito85/following{/other_user}", "gists_url": "https://api.github.com/users/alesito85/gists{/gist_id}", "starred_url": "https://api.github.com/users/alesito85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alesito85/subscriptions", "organizations_url": "https://api.github.com/users/alesito85/orgs", "repos_url": "https://api.github.com/users/alesito85/repos", "events_url": "https://api.github.com/users/alesito85/events{/privacy}", "received_events_url": "https://api.github.com/users/alesito85/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96834f0231277e8feb8dcf185b2af082ad2e39f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/96834f0231277e8feb8dcf185b2af082ad2e39f6", "html_url": "https://github.com/rust-lang/rust/commit/96834f0231277e8feb8dcf185b2af082ad2e39f6"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "d2c597664fa780812c39ff1073d1a7a40cdad16f", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f72eb4704a944c75c1eb1215bce6961fae3b3608/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f72eb4704a944c75c1eb1215bce6961fae3b3608/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=f72eb4704a944c75c1eb1215bce6961fae3b3608", "patch": "@@ -1266,7 +1266,12 @@ fn metadata(path: &Path, reparse: ReparsePoint) -> io::Result<FileAttr> {\n     // If the fallback fails for any reason we return the original error.\n     match File::open(path, &opts) {\n         Ok(file) => file.file_attr(),\n-        Err(e) if e.raw_os_error() == Some(c::ERROR_SHARING_VIOLATION as _) => {\n+        Err(e)\n+            if [Some(c::ERROR_SHARING_VIOLATION as _), Some(c::ERROR_ACCESS_DENIED as _)]\n+                .contains(&e.raw_os_error()) =>\n+        {\n+            // `ERROR_ACCESS_DENIED` is returned when the user doesn't have permission for the resource.\n+            // One such example is `System Volume Information` as default but can be created as well\n             // `ERROR_SHARING_VIOLATION` will almost never be returned.\n             // Usually if a file is locked you can still read some metadata.\n             // However, there are special system files, such as"}]}