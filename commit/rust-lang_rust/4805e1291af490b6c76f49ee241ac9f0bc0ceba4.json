{"sha": "4805e1291af490b6c76f49ee241ac9f0bc0ceba4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MDVlMTI5MWFmNDkwYjZjNzZmNDllZTI0MWFjOWYwYmMwY2ViYTQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-11T09:53:35Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-11T09:53:35Z"}, "message": "Review fixes for #32878 (which was accidentally merged)", "tree": {"sha": "dfa20886fc9ebebd89774dac49a412b1069b943c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfa20886fc9ebebd89774dac49a412b1069b943c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4805e1291af490b6c76f49ee241ac9f0bc0ceba4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4805e1291af490b6c76f49ee241ac9f0bc0ceba4", "html_url": "https://github.com/rust-lang/rust/commit/4805e1291af490b6c76f49ee241ac9f0bc0ceba4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4805e1291af490b6c76f49ee241ac9f0bc0ceba4/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49be3dd3807e9386bb38e4299773bbc1ce15993e", "url": "https://api.github.com/repos/rust-lang/rust/commits/49be3dd3807e9386bb38e4299773bbc1ce15993e", "html_url": "https://github.com/rust-lang/rust/commit/49be3dd3807e9386bb38e4299773bbc1ce15993e"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "cad1accfcb7d95cb4682f2c5f1155de6098ce63c", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4805e1291af490b6c76f49ee241ac9f0bc0ceba4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4805e1291af490b6c76f49ee241ac9f0bc0ceba4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=4805e1291af490b6c76f49ee241ac9f0bc0ceba4", "patch": "@@ -3645,9 +3645,8 @@ fn main() {\n \"##,\n \n E0520: r##\"\n-A non-default implementation was already made on this type\n-implementation so it cannot be specialized afterward. Erroneous\n-code example:\n+A non-default implementation was already made on this type so it cannot be\n+specialized further. Erroneous code example:\n \n ```compile_fail\n #![feature(specialization)]\n@@ -3656,14 +3655,18 @@ trait SpaceLama {\n     fn fly(&self);\n }\n \n+// applies to all T\n impl<T> SpaceLama for T {\n     default fn fly(&self) {}\n }\n \n+// non-default impl\n+// applies to all `Clone` T and overrides the previous impl\n impl<T: Clone> SpaceLama for T {\n     fn fly(&self) {}\n }\n \n+// since `i32` is clone, this conflicts with the previous implementation\n impl SpaceLama for i32 {\n     default fn fly(&self) {}\n     // error: item `fly` is provided by an `impl` that specializes\n@@ -3672,28 +3675,33 @@ impl SpaceLama for i32 {\n }\n ```\n \n-To fix this error, you need to specialize the implementation on the\n-parent(s) implementation first. Example:\n+Specialization only allows you to override `default` functions in\n+implementations.\n \n-```compile_fail\n+To fix this error, you need to mark all the parent implementations as default.\n+Example:\n+\n+```\n #![feature(specialization)]\n \n trait SpaceLama {\n     fn fly(&self);\n }\n \n+// applies to all T\n impl<T> SpaceLama for T {\n     default fn fly(&self) {} // This is a parent implementation.\n }\n \n+// applies to all `Clone` T; overrides the previous impl\n impl<T: Clone> SpaceLama for T {\n-    default fn fly(&self) {} // This is a parent implementation but not\n-                             // a default one so you need to add default\n-                             // keyword.\n+    default fn fly(&self) {} // This is a parent implementation but was\n+                             // previously not a default one, causing the error\n }\n \n+// applies to i32, overrides the previous two impls\n impl SpaceLama for i32 {\n-    default fn fly(&self) {} // And now that's ok!\n+    fn fly(&self) {} // And now that's ok!\n }\n ```\n \"##,"}]}