{"sha": "3466d8044fdd9a72dc07c79fd74659f95acc5c1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NjZkODA0NGZkZDlhNzJkYzA3Yzc5ZmQ3NDY1OWY5NWFjYzVjMWU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-16T10:25:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-16T10:25:41Z"}, "message": "Rollup merge of #53941 - kzys:sort-impls, r=GuillaumeGomez\n\nrustdoc: Sort implementors\n\nFixes #53812", "tree": {"sha": "4e88a452f39defa5e3fb593e146868954f968569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e88a452f39defa5e3fb593e146868954f968569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3466d8044fdd9a72dc07c79fd74659f95acc5c1e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbni+lCRBK7hj4Ov3rIwAAdHIIAA6nmeDTAAdpaGQXuJQ7hdy5\n3RMbuM6KG/1WUjen29r8muY37oqZlYSFs7nzHndZiT6NJ6ZpNUmBnyoFbsaHITU8\nGJKANK4WyblJ19jzOrSFzuhBmtHvGH41Ra2xiX3Kwp/VCkTlQjemdgMGteH3LaQr\nS7+grMFh4gDuTizxva187+pBvDv8B+JWVPNhF99KkkjRFB/GMNRAiWwq3MRU5rc2\nXPMlke07hSIRghLM5TX2bZh7De7cinq3+B/qolt33IoIdke8INkCLUHZhleiA+my\nTyk7VExsMdnp0UGNjOKctabuGCNDdSNkKRplqzeLYmxDF8n9Cr4t/z5XrVy8k8Y=\n=tswP\n-----END PGP SIGNATURE-----\n", "payload": "tree 4e88a452f39defa5e3fb593e146868954f968569\nparent f4819878cd4e397cc3fff9679e3255af1adb2430\nparent 2fe450370319c30756a716e0525cc6d23046f104\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1537093541 +0200\ncommitter GitHub <noreply@github.com> 1537093541 +0200\n\nRollup merge of #53941 - kzys:sort-impls, r=GuillaumeGomez\n\nrustdoc: Sort implementors\n\nFixes #53812\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3466d8044fdd9a72dc07c79fd74659f95acc5c1e", "html_url": "https://github.com/rust-lang/rust/commit/3466d8044fdd9a72dc07c79fd74659f95acc5c1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3466d8044fdd9a72dc07c79fd74659f95acc5c1e/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4819878cd4e397cc3fff9679e3255af1adb2430", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4819878cd4e397cc3fff9679e3255af1adb2430", "html_url": "https://github.com/rust-lang/rust/commit/f4819878cd4e397cc3fff9679e3255af1adb2430"}, {"sha": "2fe450370319c30756a716e0525cc6d23046f104", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe450370319c30756a716e0525cc6d23046f104", "html_url": "https://github.com/rust-lang/rust/commit/2fe450370319c30756a716e0525cc6d23046f104"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "75311d938516f2b9da63c9480bbb1283932a53f8", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3466d8044fdd9a72dc07c79fd74659f95acc5c1e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3466d8044fdd9a72dc07c79fd74659f95acc5c1e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=3466d8044fdd9a72dc07c79fd74659f95acc5c1e", "patch": "@@ -2301,17 +2301,21 @@ fn document_non_exhaustive(w: &mut fmt::Formatter, item: &clean::Item) -> fmt::R\n }\n \n fn name_key(name: &str) -> (&str, u64, usize) {\n+    let end = name.bytes()\n+        .rposition(|b| b.is_ascii_digit()).map_or(name.len(), |i| i + 1);\n+\n     // find number at end\n-    let split = name.bytes().rposition(|b| b < b'0' || b'9' < b).map_or(0, |s| s + 1);\n+    let split = name[0..end].bytes()\n+        .rposition(|b| !b.is_ascii_digit()).map_or(0, |i| i + 1);\n \n     // count leading zeroes\n     let after_zeroes =\n-        name[split..].bytes().position(|b| b != b'0').map_or(name.len(), |extra| split + extra);\n+        name[split..end].bytes().position(|b| b != b'0').map_or(name.len(), |extra| split + extra);\n \n     // sort leading zeroes last\n     let num_zeroes = after_zeroes - split;\n \n-    match name[split..].parse() {\n+    match name[split..end].parse() {\n         Ok(n) => (&name[..split], n, num_zeroes),\n         Err(_) => (name, 0, num_zeroes),\n     }\n@@ -2702,6 +2706,14 @@ fn bounds(t_bounds: &[clean::GenericBound]) -> String {\n     bounds\n }\n \n+fn compare_impl<'a, 'b>(lhs: &'a &&Impl, rhs: &'b &&Impl) -> Ordering {\n+    let lhs = format!(\"{}\", lhs.inner_impl());\n+    let rhs = format!(\"{}\", rhs.inner_impl());\n+\n+    // lhs and rhs are formatted as HTML, which may be unnecessary\n+    name_key(&lhs).cmp(&name_key(&rhs))\n+}\n+\n fn item_trait(\n     w: &mut fmt::Formatter,\n     cx: &Context,\n@@ -2905,9 +2917,12 @@ fn item_trait(\n                                          .map_or(true, |d| cache.paths.contains_key(&d)));\n \n \n-        let (synthetic, concrete): (Vec<&&Impl>, Vec<&&Impl>) = local.iter()\n+        let (mut synthetic, mut concrete): (Vec<&&Impl>, Vec<&&Impl>) = local.iter()\n             .partition(|i| i.inner_impl().synthetic);\n \n+        synthetic.sort_by(compare_impl);\n+        concrete.sort_by(compare_impl);\n+\n         if !foreign.is_empty() {\n             write!(w, \"\n                 <h2 id='foreign-impls' class='small-section-header'>\n@@ -4716,6 +4731,7 @@ fn test_name_sorting() {\n                  \"Fruit1\", \"Fruit01\",\n                  \"Fruit2\", \"Fruit02\",\n                  \"Fruit20\",\n+                 \"Fruit30x\",\n                  \"Fruit100\",\n                  \"Pear\"];\n     let mut sorted = names.to_owned();"}, {"sha": "60d19fbcd1a20a7c1fdc1e4368a13c5b6fddb91b", "filename": "src/test/rustdoc/issue-53812.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3466d8044fdd9a72dc07c79fd74659f95acc5c1e/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3466d8044fdd9a72dc07c79fd74659f95acc5c1e/src%2Ftest%2Frustdoc%2Fissue-53812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-53812.rs?ref=3466d8044fdd9a72dc07c79fd74659f95acc5c1e", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait MyIterator {\n+}\n+\n+pub struct MyStruct<T>(T);\n+\n+macro_rules! array_impls {\n+    ($($N:expr)+) => {\n+        $(\n+            impl<'a, T> MyIterator for &'a MyStruct<[T; $N]> {\n+            }\n+        )+\n+    }\n+}\n+\n+// @has issue_53812/trait.MyIterator.html '//*[@id=\"implementors-list\"]//h3[1]' 'MyStruct<[T; 0]>'\n+// @has - '//*[@id=\"implementors-list\"]//h3[2]' 'MyStruct<[T; 1]>'\n+// @has - '//*[@id=\"implementors-list\"]//h3[3]' 'MyStruct<[T; 2]>'\n+// @has - '//*[@id=\"implementors-list\"]//h3[4]' 'MyStruct<[T; 3]>'\n+// @has - '//*[@id=\"implementors-list\"]//h3[5]' 'MyStruct<[T; 10]>'\n+array_impls! { 10 3 2 1 0 }"}]}