{"sha": "7430a55708fb78ff7e5600f94aa68ddbce78082f", "node_id": "C_kwDOAAsO6NoAKDc0MzBhNTU3MDhmYjc4ZmY3ZTU2MDBmOTRhYTY4ZGRiY2U3ODA4MmY", "commit": {"author": {"name": "Nicolas", "email": "abramlujan@gmail.com", "date": "2021-12-20T19:26:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-20T19:26:28Z"}, "message": "Add x86_64-pc-windows-msvc linker-plugin-lto instructions", "tree": {"sha": "110fed1f328f4f050bd53f6e2a9f0a0dac45598d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/110fed1f328f4f050bd53f6e2a9f0a0dac45598d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7430a55708fb78ff7e5600f94aa68ddbce78082f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhwNjkCRBK7hj4Ov3rIwAA3G4IAAhGxxn5mq+nAm+jzuRCI2Ph\n663W624nAOG4cSaR+LCVvELWBS/UOa/qF8bwo7ki8klZ+sBwyEsaT9Dxwt39RhBg\nqvmO1J6u+MdnD9WThe7oyyN633KvAh4y902mYUb8WnxBcMVzXRBJDioJKqMvUD6t\nooohBsBL3rBklATBke5Hcx/PSk7nP6fdztg/nDC+R0bUxy5DYwhPdGmHa7URmUyn\nFyz16ZuAYKbXH20anIt6zfWrxLn40W9MiMsjlXU6Oi+0r4ulHMbbZI4TtDwDclV6\nEf4u/CyaWqQ9as9GqZdrlewq81+S9fhpNj6Ec+0dBfTRQfbTncc8Vb7IBcUZxqY=\n=fHoY\n-----END PGP SIGNATURE-----\n", "payload": "tree 110fed1f328f4f050bd53f6e2a9f0a0dac45598d\nparent 23f69235ad2eb9b44ac1a55eeaa3f9b484d9de4a\nauthor Nicolas <abramlujan@gmail.com> 1640028388 -0300\ncommitter GitHub <noreply@github.com> 1640028388 -0300\n\nAdd x86_64-pc-windows-msvc linker-plugin-lto instructions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7430a55708fb78ff7e5600f94aa68ddbce78082f", "html_url": "https://github.com/rust-lang/rust/commit/7430a55708fb78ff7e5600f94aa68ddbce78082f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7430a55708fb78ff7e5600f94aa68ddbce78082f/comments", "author": {"login": "nico-abram", "id": 24706838, "node_id": "MDQ6VXNlcjI0NzA2ODM4", "avatar_url": "https://avatars.githubusercontent.com/u/24706838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nico-abram", "html_url": "https://github.com/nico-abram", "followers_url": "https://api.github.com/users/nico-abram/followers", "following_url": "https://api.github.com/users/nico-abram/following{/other_user}", "gists_url": "https://api.github.com/users/nico-abram/gists{/gist_id}", "starred_url": "https://api.github.com/users/nico-abram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nico-abram/subscriptions", "organizations_url": "https://api.github.com/users/nico-abram/orgs", "repos_url": "https://api.github.com/users/nico-abram/repos", "events_url": "https://api.github.com/users/nico-abram/events{/privacy}", "received_events_url": "https://api.github.com/users/nico-abram/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23f69235ad2eb9b44ac1a55eeaa3f9b484d9de4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/23f69235ad2eb9b44ac1a55eeaa3f9b484d9de4a", "html_url": "https://github.com/rust-lang/rust/commit/23f69235ad2eb9b44ac1a55eeaa3f9b484d9de4a"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "e9586cb3e1103dde45ece7c73a9080c7f6b6ebc2", "filename": "src/doc/rustc/src/linker-plugin-lto.md", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7430a55708fb78ff7e5600f94aa68ddbce78082f/src%2Fdoc%2Frustc%2Fsrc%2Flinker-plugin-lto.md", "raw_url": "https://github.com/rust-lang/rust/raw/7430a55708fb78ff7e5600f94aa68ddbce78082f/src%2Fdoc%2Frustc%2Fsrc%2Flinker-plugin-lto.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Flinker-plugin-lto.md?ref=7430a55708fb78ff7e5600f94aa68ddbce78082f", "patch": "@@ -86,6 +86,48 @@ option:\n rustc -Clinker-plugin-lto=\"/path/to/LLVMgold.so\" -L. -Copt-level=2 ./main.rs\n ```\n \n+### Usage with clang-cl and --target x86_64-pc-windows-msvc\n+\n+Cross language LTO can be used with the x86_64-pc-windows-msvc target, but this requires using the\n+clang-cl compiler instead of the MSVC cl.exe included with Visual Studio Build Tools, and linking\n+with lld-link. Both clang-cl and lld-link can be downloaded from [LLVM's download page](https://releases.llvm.org/download.html).\n+Note that most crates in the ecosystem are likely to assume you are using cl.exe if using this target\n+and that some things, like for example vcpkg, [don't work very well with clang-cl](https://github.com/microsoft/vcpkg/issues/2087).\n+\n+You will want to make sure your rust major LLVM version matches your installed LLVM tooling version,\n+otherwise it is likely you will get linker errors:\n+\n+```bat\n+rustc -V --verbose\n+clang-cl --version\n+```\n+\n+If you are compiling any proc-macros, you will get this error:\n+\n+```\n+error: Linker plugin based LTO is not supported together with `-C prefer-dynamic` when \n+targeting Windows-like targets\n+```\n+\n+This is fixed if you explicitly set the target, for example \n+`cargo build --target x86_64-pc-windows-msvc`\n+Without an explicit --target the flags will be passed to all compiler invocations (including build \n+scripts and proc macros), see [cargo docs on rustflags](https://doc.rust-lang.org/cargo/reference/config.html#buildrustflags)\n+\n+If you have dependencies using the `cc` crate, you will need to set these\n+environment variables:\n+```bat\n+set CC=clang-cl\n+set CXX=clang-cl\n+set CFLAGS=/clang:-flto=thin /clang:-fuse-ld=lld-link\n+set CXXFLAGS=/clang:-flto=thin /clang:-fuse-ld=lld-link\n+REM Needed because msvc's lib.exe crashes on LLVM LTO .obj files\n+set AR=llvm-lib\n+```\n+\n+If you are specifying lld-link as your linker by setting `linker = \"lld-link.exe\"` in your cargo config,\n+you may run into issues with some crates that compile code with separate cargo invocations. You should be\n+able to get around this problem by setting `-Clinker=lld-link` in RUSTFLAGS\n \n ## Toolchain Compatibility\n "}]}