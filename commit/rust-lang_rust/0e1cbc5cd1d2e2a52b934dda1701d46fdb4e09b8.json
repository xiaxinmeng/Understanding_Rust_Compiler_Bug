{"sha": "0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8", "node_id": "C_kwDOAAsO6NoAKDBlMWNiYzVjZDFkMmUyYTUyYjkzNGRkYTE3MDFkNDZmZGI0ZTA5Yjg", "commit": {"author": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-01T04:43:39Z"}, "committer": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-01T04:43:39Z"}, "message": "fix code", "tree": {"sha": "6a23737504fed72d27ab3a0f84812fd63e2b8bd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a23737504fed72d27ab3a0f84812fd63e2b8bd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8", "html_url": "https://github.com/rust-lang/rust/commit/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bb69c0ae024eef65acb7fd6551fdd99f1563d38", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bb69c0ae024eef65acb7fd6551fdd99f1563d38", "html_url": "https://github.com/rust-lang/rust/commit/7bb69c0ae024eef65acb7fd6551fdd99f1563d38"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "9082ab9437445339a950808c564d06a7073d81c2", "filename": "clippy_lints/src/loops/utils.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8/clippy_lints%2Fsrc%2Floops%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8/clippy_lints%2Fsrc%2Floops%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Futils.rs?ref=0e1cbc5cd1d2e2a52b934dda1701d46fdb4e09b8", "patch": "@@ -7,7 +7,7 @@ use rustc_hir::intravisit::{walk_expr, walk_local, walk_pat, walk_stmt, Visitor}\n use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, HirId, HirIdMap, Local, Mutability, Pat, PatKind, Stmt};\n use rustc_lint::LateContext;\n use rustc_middle::hir::nested_filter;\n-use rustc_middle::ty::Ty;\n+use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_typeck::hir_ty_to_ty;\n@@ -332,17 +332,20 @@ pub(super) fn make_iterator_snippet(cx: &LateContext<'_>, arg: &Expr<'_>, applic\n     } else {\n         // (&x).into_iter() ==> x.iter()\n         // (&mut x).into_iter() ==> x.iter_mut()\n-        match &arg.kind {\n-            ExprKind::AddrOf(BorrowKind::Ref, mutability, arg_inner)\n-                if has_iter_method(cx, cx.typeck_results().expr_ty(arg_inner)).is_some() =>\n-            {\n-                let meth_name = match mutability {\n+        let arg_ty = cx.typeck_results().expr_ty_adjusted(arg);\n+        match &arg_ty.kind() {\n+            ty::Ref(_, inner_ty, mutbl) if has_iter_method(cx, inner_ty).is_some() => {\n+                let meth_name = match mutbl {\n                     Mutability::Mut => \"iter_mut\",\n                     Mutability::Not => \"iter\",\n                 };\n+                let caller = match &arg.kind {\n+                    ExprKind::AddrOf(BorrowKind::Ref, _, arg_inner) => arg_inner,\n+                    _ => arg,\n+                };\n                 format!(\n                     \"{}.{}()\",\n-                    sugg::Sugg::hir_with_applicability(cx, arg_inner, \"_\", applic_ref).maybe_par(),\n+                    sugg::Sugg::hir_with_applicability(cx, caller, \"_\", applic_ref).maybe_par(),\n                     meth_name,\n                 )\n             },"}]}