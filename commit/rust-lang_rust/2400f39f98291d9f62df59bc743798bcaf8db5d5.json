{"sha": "2400f39f98291d9f62df59bc743798bcaf8db5d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MDBmMzlmOTgyOTFkOWY2MmRmNTliYzc0Mzc5OGJjYWY4ZGI1ZDU=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-07-04T06:22:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-04T06:22:32Z"}, "message": "Merge pull request #1757 from topecongiro/rfc/combine-array\n\nRfc: Combine Array", "tree": {"sha": "9ba0673004d8edd8f54375ce4db3234ca80a8f7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ba0673004d8edd8f54375ce4db3234ca80a8f7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2400f39f98291d9f62df59bc743798bcaf8db5d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2400f39f98291d9f62df59bc743798bcaf8db5d5", "html_url": "https://github.com/rust-lang/rust/commit/2400f39f98291d9f62df59bc743798bcaf8db5d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2400f39f98291d9f62df59bc743798bcaf8db5d5/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "960dd3242a34bde659d3bff5755d6750986f2973", "url": "https://api.github.com/repos/rust-lang/rust/commits/960dd3242a34bde659d3bff5755d6750986f2973", "html_url": "https://github.com/rust-lang/rust/commit/960dd3242a34bde659d3bff5755d6750986f2973"}, {"sha": "c762cf9b43966e46910abd22cd78ce3c04bdcd5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c762cf9b43966e46910abd22cd78ce3c04bdcd5a", "html_url": "https://github.com/rust-lang/rust/commit/c762cf9b43966e46910abd22cd78ce3c04bdcd5a"}], "stats": {"total": 81, "additions": 38, "deletions": 43}, "files": [{"sha": "c5f7ccb857b0b99bb7a442a8cf84c53de546f9f6", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2400f39f98291d9f62df59bc743798bcaf8db5d5/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2400f39f98291d9f62df59bc743798bcaf8db5d5/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=2400f39f98291d9f62df59bc743798bcaf8db5d5", "patch": "@@ -2404,9 +2404,10 @@ pub fn can_be_overflowed_expr(context: &RewriteContext, expr: &ast::Expr, args_l\n             context.use_block_indent() ||\n                 context.config.fn_call_style() == IndentStyle::Visual && args_len > 1\n         }\n+        ast::ExprKind::Array(..) |\n         ast::ExprKind::Call(..) |\n-        ast::ExprKind::MethodCall(..) |\n         ast::ExprKind::Mac(..) |\n+        ast::ExprKind::MethodCall(..) |\n         ast::ExprKind::Struct(..) |\n         ast::ExprKind::Tup(..) => context.use_block_indent() && args_len == 1,\n         ast::ExprKind::AddrOf(_, ref expr) |"}, {"sha": "953935baec985690df9a53aaf8dd4ec2bc0185e3", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2400f39f98291d9f62df59bc743798bcaf8db5d5/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2400f39f98291d9f62df59bc743798bcaf8db5d5/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=2400f39f98291d9f62df59bc743798bcaf8db5d5", "patch": "@@ -96,14 +96,12 @@ fn arrays() {\n         1,\n     ];\n \n-    let a = WeightedChoice::new(\n-        &mut [\n-            Weighted { weight: x, item: 0 },\n-            Weighted { weight: 1, item: 1 },\n-            Weighted { weight: x, item: 2 },\n-            Weighted { weight: 1, item: 3 },\n-        ],\n-    );\n+    let a = WeightedChoice::new(&mut [\n+        Weighted { weight: x, item: 0 },\n+        Weighted { weight: 1, item: 1 },\n+        Weighted { weight: x, item: 2 },\n+        Weighted { weight: 1, item: 3 },\n+    ]);\n \n     let z = [\n         xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,"}, {"sha": "3b275d30f4ced3b7ec6e2a2562ba41ab56549f50", "filename": "tests/target/expr.rs", "status": "modified", "additions": 18, "deletions": 20, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2400f39f98291d9f62df59bc743798bcaf8db5d5/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2400f39f98291d9f62df59bc743798bcaf8db5d5/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=2400f39f98291d9f62df59bc743798bcaf8db5d5", "patch": "@@ -224,26 +224,24 @@ fn arrays() {\n         1,\n     ];\n \n-    let a = WeightedChoice::new(\n-        &mut [\n-            Weighted {\n-                weightweight: x,\n-                item: 0,\n-            },\n-            Weighted {\n-                weightweight: 1,\n-                item: 1,\n-            },\n-            Weighted {\n-                weightweight: x,\n-                item: 2,\n-            },\n-            Weighted {\n-                weightweight: 1,\n-                item: 3,\n-            },\n-        ],\n-    );\n+    let a = WeightedChoice::new(&mut [\n+        Weighted {\n+            weightweight: x,\n+            item: 0,\n+        },\n+        Weighted {\n+            weightweight: 1,\n+            item: 1,\n+        },\n+        Weighted {\n+            weightweight: x,\n+            item: 2,\n+        },\n+        Weighted {\n+            weightweight: 1,\n+            item: 3,\n+        },\n+    ]);\n \n     let z = [\n         xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,"}, {"sha": "954fe011f141d8cd61881a686a9f0f8821ae64e9", "filename": "tests/target/tuple.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2400f39f98291d9f62df59bc743798bcaf8db5d5/tests%2Ftarget%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2400f39f98291d9f62df59bc743798bcaf8db5d5/tests%2Ftarget%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftuple.rs?ref=2400f39f98291d9f62df59bc743798bcaf8db5d5", "patch": "@@ -62,20 +62,18 @@ fn issue550() {\n \n fn issue775() {\n     if indent {\n-        let a = mk_object(\n-            &[\n-                (\"a\".to_string(), Boolean(true)),\n-                (\n-                    \"b\".to_string(),\n-                    Array(vec![\n-                        mk_object(\n-                            &[(\"c\".to_string(), String(\"\\x0c\\r\".to_string()))],\n-                        ),\n-                        mk_object(&[(\"d\".to_string(), String(\"\".to_string()))]),\n-                    ]),\n-                ),\n-            ],\n-        );\n+        let a = mk_object(&[\n+            (\"a\".to_string(), Boolean(true)),\n+            (\n+                \"b\".to_string(),\n+                Array(vec![\n+                    mk_object(\n+                        &[(\"c\".to_string(), String(\"\\x0c\\r\".to_string()))],\n+                    ),\n+                    mk_object(&[(\"d\".to_string(), String(\"\".to_string()))]),\n+                ]),\n+            ),\n+        ]);\n     }\n }\n "}]}