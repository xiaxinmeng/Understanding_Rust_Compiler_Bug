{"sha": "b5dfa6a78df6eb934c353e94cf679af03235d21a", "node_id": "C_kwDOAAsO6NoAKGI1ZGZhNmE3OGRmNmViOTM0YzM1M2U5NGNmNjc5YWYwMzIzNWQyMWE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-07T20:24:07Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-07T20:30:16Z"}, "message": "Compute `ty_param_owner` using DefIdTree.", "tree": {"sha": "96b13ad848e6a01bb630dab96dc6af8bfe7ca07e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96b13ad848e6a01bb630dab96dc6af8bfe7ca07e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5dfa6a78df6eb934c353e94cf679af03235d21a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5dfa6a78df6eb934c353e94cf679af03235d21a", "html_url": "https://github.com/rust-lang/rust/commit/b5dfa6a78df6eb934c353e94cf679af03235d21a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5dfa6a78df6eb934c353e94cf679af03235d21a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd38eea722c1f6f970a314435533e91cc2c14ffb", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd38eea722c1f6f970a314435533e91cc2c14ffb", "html_url": "https://github.com/rust-lang/rust/commit/dd38eea722c1f6f970a314435533e91cc2c14ffb"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "6dab680c979574428e601c948aad5e1d2ea5c9ff", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=b5dfa6a78df6eb934c353e94cf679af03235d21a", "patch": "@@ -1,5 +1,5 @@\n use crate::hir::{ModuleItems, Owner};\n-use crate::ty::TyCtxt;\n+use crate::ty::{DefIdTree, TyCtxt};\n use rustc_ast as ast;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n@@ -545,13 +545,12 @@ impl<'hir> Map<'hir> {\n         });\n     }\n \n-    pub fn ty_param_owner(self, id: HirId) -> LocalDefId {\n-        match self.get(id) {\n-            Node::Item(&Item { kind: ItemKind::Trait(..) | ItemKind::TraitAlias(..), .. }) => {\n-                id.expect_owner()\n-            }\n-            Node::GenericParam(_) => self.get_parent_item(id),\n-            _ => bug!(\"ty_param_owner: {} not a type parameter\", self.node_to_string(id)),\n+    pub fn ty_param_owner(self, def_id: LocalDefId) -> LocalDefId {\n+        let def_kind = self.tcx.def_kind(def_id);\n+        match def_kind {\n+            DefKind::Trait | DefKind::TraitAlias => def_id,\n+            DefKind::TyParam | DefKind::ConstParam => self.tcx.local_parent(def_id).unwrap(),\n+            _ => bug!(\"ty_param_owner: {:?} is a {:?} not a type parameter\", def_id, def_kind),\n         }\n     }\n "}, {"sha": "d46c4bdf98dcbf3810b17764a9c5fbdbd9ea5e8e", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=b5dfa6a78df6eb934c353e94cf679af03235d21a", "patch": "@@ -2265,11 +2265,11 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 assert_eq!(opt_self_ty, None);\n                 self.prohibit_generics(path.segments);\n \n-                let hir_id = tcx.hir().local_def_id_to_hir_id(def_id.expect_local());\n-                let item_id = tcx.hir().get_parent_node(hir_id);\n-                let item_def_id = tcx.hir().local_def_id(item_id);\n+                let def_id = def_id.expect_local();\n+                let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n+                let item_def_id = tcx.hir().ty_param_owner(def_id);\n                 let generics = tcx.generics_of(item_def_id);\n-                let index = generics.param_def_id_to_index[&def_id];\n+                let index = generics.param_def_id_to_index[&def_id.to_def_id()];\n                 tcx.mk_ty_param(index, tcx.hir().name(hir_id))\n             }\n             Res::SelfTy { trait_: Some(_), alias_to: None } => {"}, {"sha": "77cba1c22c408cca0c99f173f089b170641b0b35", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs?ref=b5dfa6a78df6eb934c353e94cf679af03235d21a", "patch": "@@ -184,8 +184,7 @@ impl<'a, 'tcx> AstConv<'tcx> for FnCtxt<'a, 'tcx> {\n         _: Ident,\n     ) -> ty::GenericPredicates<'tcx> {\n         let tcx = self.tcx;\n-        let hir_id = tcx.hir().local_def_id_to_hir_id(def_id.expect_local());\n-        let item_def_id = tcx.hir().ty_param_owner(hir_id);\n+        let item_def_id = tcx.hir().ty_param_owner(def_id.expect_local());\n         let generics = tcx.generics_of(item_def_id);\n         let index = generics.param_def_id_to_index[&def_id];\n         ty::GenericPredicates {"}, {"sha": "62187b2bdfcada156aa588392bc2eedfe49d2dbc", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5dfa6a78df6eb934c353e94cf679af03235d21a/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=b5dfa6a78df6eb934c353e94cf679af03235d21a", "patch": "@@ -558,7 +558,7 @@ fn type_param_predicates(\n     // `where T: Foo`.\n \n     let param_id = tcx.hir().local_def_id_to_hir_id(def_id);\n-    let param_owner = tcx.hir().ty_param_owner(param_id);\n+    let param_owner = tcx.hir().ty_param_owner(def_id);\n     let generics = tcx.generics_of(param_owner);\n     let index = generics.param_def_id_to_index[&def_id.to_def_id()];\n     let ty = tcx.mk_ty_param(index, tcx.hir().ty_param_name(param_id));"}]}