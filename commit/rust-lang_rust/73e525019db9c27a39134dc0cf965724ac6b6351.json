{"sha": "73e525019db9c27a39134dc0cf965724ac6b6351", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZTUyNTAxOWRiOWMyN2EzOTEzNGRjMGNmOTY1NzI0YWM2YjYzNTE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-13T22:08:45Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-13T22:08:45Z"}, "message": "Fix the ordering on `nonminimal_bool`", "tree": {"sha": "10649486cfd1426a091c6f7eaced7b7531f47af9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10649486cfd1426a091c6f7eaced7b7531f47af9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73e525019db9c27a39134dc0cf965724ac6b6351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73e525019db9c27a39134dc0cf965724ac6b6351", "html_url": "https://github.com/rust-lang/rust/commit/73e525019db9c27a39134dc0cf965724ac6b6351", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73e525019db9c27a39134dc0cf965724ac6b6351/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "920cdb59e1edf2c4cb2f266fa521f12c1b97a499", "url": "https://api.github.com/repos/rust-lang/rust/commits/920cdb59e1edf2c4cb2f266fa521f12c1b97a499", "html_url": "https://github.com/rust-lang/rust/commit/920cdb59e1edf2c4cb2f266fa521f12c1b97a499"}], "stats": {"total": 98, "additions": 70, "deletions": 28}, "files": [{"sha": "60e62542a7255b5499e497fe06752fa08b8ae656", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73e525019db9c27a39134dc0cf965724ac6b6351/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e525019db9c27a39134dc0cf965724ac6b6351/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=73e525019db9c27a39134dc0cf965724ac6b6351", "patch": "@@ -207,7 +207,7 @@ impl<'a, 'tcx, 'v> SuggestContext<'a, 'tcx, 'v> {\n                 }\n             },\n             Or(v) => {\n-                for (index, inner) in v.iter().enumerate() {\n+                for (index, inner) in v.iter().rev().enumerate() {\n                     if index > 0 {\n                         self.output.push_str(\" || \");\n                     }"}, {"sha": "6109ee1736dec69fa02c9859eda288f1cc87a6c9", "filename": "tests/ui/booleans.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73e525019db9c27a39134dc0cf965724ac6b6351/tests%2Fui%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e525019db9c27a39134dc0cf965724ac6b6351/tests%2Fui%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.rs?ref=73e525019db9c27a39134dc0cf965724ac6b6351", "patch": "@@ -19,6 +19,7 @@ fn main() {\n     let _ = a || !b || !c || !d || !e;\n     let _ = !(a && b || c);\n     let _ = !(!a && b);\n+    let _ = !(!a || b);\n }\n \n #[allow(unused, clippy::many_single_char_names)]\n@@ -30,11 +31,13 @@ fn equality_stuff() {\n     let e: i32 = unimplemented!();\n     let _ = a == b && a != b;\n     let _ = a == b && c == 5 && a == b;\n+    let _ = a == b || c == 5 || a == b;\n     let _ = a == b && c == 5 && b == a;\n     let _ = a < b && a >= b;\n     let _ = a > b && a <= b;\n     let _ = a > b && a == b;\n     let _ = a != b || !(a != b || c == d);\n+    let _ = a != b && !(a != b && c == d);\n }\n \n #[allow(unused, clippy::many_single_char_names)]\n@@ -51,6 +54,7 @@ fn methods_with_negation() {\n     let _ = !b.is_ok();\n     let c = false;\n     let _ = !(a.is_some() && !c);\n+    let _ = !(a.is_some() || !c);\n     let _ = !(!c ^ c) || !a.is_some();\n     let _ = (!c ^ c) || !a.is_some();\n     let _ = !c ^ c || !a.is_some();"}, {"sha": "05ec6c031479a2d9baabbb0ea1262f1af60ffdd4", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 65, "deletions": 27, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/73e525019db9c27a39134dc0cf965724ac6b6351/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/73e525019db9c27a39134dc0cf965724ac6b6351/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=73e525019db9c27a39134dc0cf965724ac6b6351", "patch": "@@ -53,22 +53,28 @@ error: this boolean expression can be simplified\n   --> $DIR/booleans.rs:21:13\n    |\n LL |     let _ = !(!a && b);\n-   |             ^^^^^^^^^^ help: try: `!b || a`\n+   |             ^^^^^^^^^^ help: try: `a || !b`\n+\n+error: this boolean expression can be simplified\n+  --> $DIR/booleans.rs:22:13\n+   |\n+LL |     let _ = !(!a || b);\n+   |             ^^^^^^^^^^ help: try: `a && !b`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:31:13\n+  --> $DIR/booleans.rs:32:13\n    |\n LL |     let _ = a == b && a != b;\n    |             ^^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:31:13\n+  --> $DIR/booleans.rs:32:13\n    |\n LL |     let _ = a == b && a != b;\n    |             ^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:32:13\n+  --> $DIR/booleans.rs:33:13\n    |\n LL |     let _ = a == b && c == 5 && a == b;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -77,11 +83,24 @@ help: try\n    |\n LL |     let _ = a == b && c == 5;\n    |             ^^^^^^^^^^^^^^^^\n-LL |     let _ = !(c != 5 || a != b);\n+LL |     let _ = !(a != b || c != 5);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:33:13\n+  --> $DIR/booleans.rs:34:13\n+   |\n+LL |     let _ = a == b || c == 5 || a == b;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try\n+   |\n+LL |     let _ = a == b || c == 5;\n+   |             ^^^^^^^^^^^^^^^^\n+LL |     let _ = !(a != b && c != 5);\n+   |             ^^^^^^^^^^^^^^^^^^^\n+\n+error: this boolean expression can be simplified\n+  --> $DIR/booleans.rs:35:13\n    |\n LL |     let _ = a == b && c == 5 && b == a;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -90,117 +109,136 @@ help: try\n    |\n LL |     let _ = a == b && c == 5;\n    |             ^^^^^^^^^^^^^^^^\n-LL |     let _ = !(c != 5 || a != b);\n+LL |     let _ = !(a != b || c != 5);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:34:13\n+  --> $DIR/booleans.rs:36:13\n    |\n LL |     let _ = a < b && a >= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:34:13\n+  --> $DIR/booleans.rs:36:13\n    |\n LL |     let _ = a < b && a >= b;\n    |             ^^^^^\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:35:13\n+  --> $DIR/booleans.rs:37:13\n    |\n LL |     let _ = a > b && a <= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:35:13\n+  --> $DIR/booleans.rs:37:13\n    |\n LL |     let _ = a > b && a <= b;\n    |             ^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:37:13\n+  --> $DIR/booleans.rs:39:13\n    |\n LL |     let _ = a != b || !(a != b || c == d);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: try\n    |\n-LL |     let _ = c != d || a != b;\n+LL |     let _ = a != b || c != d;\n    |             ^^^^^^^^^^^^^^^^\n LL |     let _ = !(a == b && c == d);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:45:13\n+  --> $DIR/booleans.rs:40:13\n+   |\n+LL |     let _ = a != b && !(a != b && c == d);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try\n+   |\n+LL |     let _ = a != b && c != d;\n+   |             ^^^^^^^^^^^^^^^^\n+LL |     let _ = !(a == b || c == d);\n+   |             ^^^^^^^^^^^^^^^^^^^\n+\n+error: this boolean expression can be simplified\n+  --> $DIR/booleans.rs:48:13\n    |\n LL |     let _ = !a.is_some();\n    |             ^^^^^^^^^^^^ help: try: `a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:47:13\n+  --> $DIR/booleans.rs:50:13\n    |\n LL |     let _ = !a.is_none();\n    |             ^^^^^^^^^^^^ help: try: `a.is_some()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:49:13\n+  --> $DIR/booleans.rs:52:13\n    |\n LL |     let _ = !b.is_err();\n    |             ^^^^^^^^^^^ help: try: `b.is_ok()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:51:13\n+  --> $DIR/booleans.rs:54:13\n    |\n LL |     let _ = !b.is_ok();\n    |             ^^^^^^^^^^ help: try: `b.is_err()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:53:13\n+  --> $DIR/booleans.rs:56:13\n    |\n LL |     let _ = !(a.is_some() && !c);\n-   |             ^^^^^^^^^^^^^^^^^^^^ help: try: `c || a.is_none()`\n+   |             ^^^^^^^^^^^^^^^^^^^^ help: try: `a.is_none() || c`\n+\n+error: this boolean expression can be simplified\n+  --> $DIR/booleans.rs:57:13\n+   |\n+LL |     let _ = !(a.is_some() || !c);\n+   |             ^^^^^^^^^^^^^^^^^^^^ help: try: `a.is_none() && c`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:54:26\n+  --> $DIR/booleans.rs:58:26\n    |\n LL |     let _ = !(!c ^ c) || !a.is_some();\n    |                          ^^^^^^^^^^^^ help: try: `a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:55:25\n+  --> $DIR/booleans.rs:59:25\n    |\n LL |     let _ = (!c ^ c) || !a.is_some();\n    |                         ^^^^^^^^^^^^ help: try: `a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:56:23\n+  --> $DIR/booleans.rs:60:23\n    |\n LL |     let _ = !c ^ c || !a.is_some();\n    |                       ^^^^^^^^^^^^ help: try: `a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:128:8\n+  --> $DIR/booleans.rs:132:8\n    |\n LL |     if !res.is_ok() {}\n    |        ^^^^^^^^^^^^ help: try: `res.is_err()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:129:8\n+  --> $DIR/booleans.rs:133:8\n    |\n LL |     if !res.is_err() {}\n    |        ^^^^^^^^^^^^^ help: try: `res.is_ok()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:132:8\n+  --> $DIR/booleans.rs:136:8\n    |\n LL |     if !res.is_some() {}\n    |        ^^^^^^^^^^^^^^ help: try: `res.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:133:8\n+  --> $DIR/booleans.rs:137:8\n    |\n LL |     if !res.is_none() {}\n    |        ^^^^^^^^^^^^^^ help: try: `res.is_some()`\n \n-error: aborting due to 25 previous errors\n+error: aborting due to 29 previous errors\n "}]}