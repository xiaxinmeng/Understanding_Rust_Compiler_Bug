{"sha": "ec5342ba8733a7c7b350ae51bee2599f88136cdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNTM0MmJhODczM2E3YzdiMzUwYWU1MWJlZTI1OTlmODgxMzZjZGQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-09-23T04:29:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-23T04:29:18Z"}, "message": "Rollup merge of #44749 - zilbuz:issue-44596/E0503, r=pnkfelix\n\nMIR-borrowck: Adding notes to E0503\n\nThis PR adds notes to the MIR borrowck error E0503.\n\nPart of #44596", "tree": {"sha": "c1a4f2cad05cb8393ac169ecc8b06a0042d319a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1a4f2cad05cb8393ac169ecc8b06a0042d319a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec5342ba8733a7c7b350ae51bee2599f88136cdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec5342ba8733a7c7b350ae51bee2599f88136cdd", "html_url": "https://github.com/rust-lang/rust/commit/ec5342ba8733a7c7b350ae51bee2599f88136cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec5342ba8733a7c7b350ae51bee2599f88136cdd/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e103ecd09724684c434fcd40dd0c1e33a54fd632", "url": "https://api.github.com/repos/rust-lang/rust/commits/e103ecd09724684c434fcd40dd0c1e33a54fd632", "html_url": "https://github.com/rust-lang/rust/commit/e103ecd09724684c434fcd40dd0c1e33a54fd632"}, {"sha": "8c1b958cf7ee4143deaf963249f6bbfd2446121e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c1b958cf7ee4143deaf963249f6bbfd2446121e", "html_url": "https://github.com/rust-lang/rust/commit/8c1b958cf7ee4143deaf963249f6bbfd2446121e"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "5133e528b099ae3fc84b79eec3d4c2a72859a754", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ec5342ba8733a7c7b350ae51bee2599f88136cdd/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec5342ba8733a7c7b350ae51bee2599f88136cdd/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=ec5342ba8733a7c7b350ae51bee2599f88136cdd", "patch": "@@ -419,7 +419,7 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n             self.each_borrow_involving_path(\n                 context, lvalue_span.0, flow_state, |this, _idx, borrow| {\n                     if !borrow.compatible_with(BorrowKind::Shared) {\n-                        this.report_use_while_mutably_borrowed(context, lvalue_span);\n+                        this.report_use_while_mutably_borrowed(context, lvalue_span, borrow);\n                         Control::Break\n                     } else {\n                         Control::Continue\n@@ -914,11 +914,17 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n \n     fn report_use_while_mutably_borrowed(&mut self,\n                                          _context: Context,\n-                                         (lvalue, span): (&Lvalue, Span)) {\n+                                         (lvalue, span): (&Lvalue, Span),\n+                                         borrow : &BorrowData) {\n+        let described_lvalue = self.describe_lvalue(lvalue);\n+        let borrow_span = self.retrieve_borrow_span(borrow);\n+\n         let mut err = self.tcx.cannot_use_when_mutably_borrowed(\n-            span, &self.describe_lvalue(lvalue), Origin::Mir);\n-        // FIXME 1: add span_label for \"borrow of `()` occurs here\"\n-        // FIXME 2: add span_label for \"use of `{}` occurs here\"\n+            span, &described_lvalue, Origin::Mir);\n+\n+        err.span_label(borrow_span, format!(\"borrow of `{}` occurs here\", described_lvalue));\n+        err.span_label(span, format!(\"use of borrowed `{}`\", described_lvalue));\n+\n         err.emit();\n     }\n \n@@ -998,7 +1004,7 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                     ProjectionElem::Downcast(..) =>\n                         (\"\",   format!(\"\"), None), // (dont emit downcast info)\n                     ProjectionElem::Field(field, _ty) =>\n-                        (\"\",   format!(\".{}\", field.index()), None),\n+                        (\"\",   format!(\".{}\", field.index()), None), // FIXME: report name of field\n                     ProjectionElem::Index(index) =>\n                         (\"\",   format!(\"\"), Some(index)),\n                     ProjectionElem::ConstantIndex { offset, min_length, from_end: true } =>\n@@ -1024,6 +1030,13 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n             }\n         }\n     }\n+\n+    // Retrieve span of given borrow from the current MIR representation\n+    fn retrieve_borrow_span(&self, borrow: &BorrowData) -> Span {\n+        self.mir.basic_blocks()[borrow.location.block]\n+            .statements[borrow.location.statement_index]\n+            .source_info.span\n+    }\n }\n \n impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx> {"}]}