{"sha": "92c24c4c37513f77c6875fec0eb25a887622739f", "node_id": "C_kwDOAAsO6NoAKDkyYzI0YzRjMzc1MTNmNzdjNjg3NWZlYzBlYjI1YTg4NzYyMjczOWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-02T12:41:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-02T12:41:03Z"}, "message": "Auto merge of #2529 - RalfJung:yesffi, r=RalfJung\n\nre-enable FFI support\n\nhttps://github.com/tov/libffi-rs/pull/58 landed so the license should no longer be an issue. :)\n\nFixes https://github.com/rust-lang/miri/issues/2526", "tree": {"sha": "b9131624378fc30d801571b28b4681bfbbef809d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9131624378fc30d801571b28b4681bfbbef809d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92c24c4c37513f77c6875fec0eb25a887622739f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92c24c4c37513f77c6875fec0eb25a887622739f", "html_url": "https://github.com/rust-lang/rust/commit/92c24c4c37513f77c6875fec0eb25a887622739f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92c24c4c37513f77c6875fec0eb25a887622739f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c8b479be723fb103b0b1203faf9246a3f587250", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c8b479be723fb103b0b1203faf9246a3f587250", "html_url": "https://github.com/rust-lang/rust/commit/8c8b479be723fb103b0b1203faf9246a3f587250"}, {"sha": "2f348abafc697b65919073c6a36510a5b4fe0add", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f348abafc697b65919073c6a36510a5b4fe0add", "html_url": "https://github.com/rust-lang/rust/commit/2f348abafc697b65919073c6a36510a5b4fe0add"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "9df35ec0deb2e3c2a02819bcbb679d76f79bb0a8", "filename": "Cargo.lock", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/92c24c4c37513f77c6875fec0eb25a887622739f/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/92c24c4c37513f77c6875fec0eb25a887622739f/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=92c24c4c37513f77c6875fec0eb25a887622739f", "patch": "@@ -308,6 +308,25 @@ version = \"0.2.112\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"1b03d17f364a3a042d5e5d46b053bbbf82c92c9430c592dd4c064dc6ee997125\"\n \n+[[package]]\n+name = \"libffi\"\n+version = \"3.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"1e454b3efb16fba3b17810ae5e41df02b649e564ab3c5a34b3b93ed07ad287e6\"\n+dependencies = [\n+ \"libc\",\n+ \"libffi-sys\",\n+]\n+\n+[[package]]\n+name = \"libffi-sys\"\n+version = \"2.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ab4106b7f09d7b87d021334d5618fac1dfcfb824d4c5fe111ff0074dfd242e15\"\n+dependencies = [\n+ \"cc\",\n+]\n+\n [[package]]\n name = \"libloading\"\n version = \"0.7.3\"\n@@ -392,6 +411,7 @@ dependencies = [\n  \"getrandom\",\n  \"lazy_static\",\n  \"libc\",\n+ \"libffi\",\n  \"libloading\",\n  \"log\",\n  \"measureme\","}, {"sha": "0a3dfc2a84e31be73cb46e46aed87aea49cf248d", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92c24c4c37513f77c6875fec0eb25a887622739f/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/92c24c4c37513f77c6875fec0eb25a887622739f/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=92c24c4c37513f77c6875fec0eb25a887622739f", "patch": "@@ -20,7 +20,7 @@ doctest = false # and no doc tests\n [dependencies]\n getrandom = { version = \"0.2\", features = [\"std\"] }\n env_logger = \"0.9\"\n-#FIXME(miri#2526): libffi = \"3.0.0\"\n+libffi = \"3.0.0\"\n libloading = \"0.7\"\n log = \"0.4\"\n shell-escape = \"0.1.4\""}, {"sha": "8e96338a865f68e5e01f9c4171d277fe000fa4b7", "filename": "README.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/92c24c4c37513f77c6875fec0eb25a887622739f/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/92c24c4c37513f77c6875fec0eb25a887622739f/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=92c24c4c37513f77c6875fec0eb25a887622739f", "patch": "@@ -346,6 +346,17 @@ to Miri failing to detect cases of undefined behavior in a program.\n   this flag is **unsound**.\n * `-Zmiri-disable-weak-memory-emulation` disables the emulation of some C++11 weak\n   memory effects.\n+* `-Zmiri-extern-so-file=<path to a shared object file>` is an experimental flag for providing support\n+  for FFI calls. Functions not provided by that file are still executed via the usual Miri shims.\n+  **WARNING**: If an invalid/incorrect `.so` file is specified, this can cause undefined behaviour in Miri itself!\n+  And of course, Miri cannot do any checks on the actions taken by the external code.\n+  Note that Miri has its own handling of file descriptors, so if you want to replace *some* functions\n+  working on file descriptors, you will have to replace *all* of them, or the two kinds of\n+  file descriptors will be mixed up.\n+  This is **work in progress**; currently, only integer arguments and return values are\n+  supported (and no, pointer/integer casts to work around this limitation will not work;\n+  they will fail horribly).\n+  Follow [the discussion on supporting other types](https://github.com/rust-lang/miri/issues/2365). \n * `-Zmiri-measureme=<name>` enables `measureme` profiling for the interpreted program.\n    This can be used to find which parts of your program are executing slowly under Miri.\n    The profile is written out to a file with the prefix `<name>`, and can be processed"}, {"sha": "b94b6bbb2b8b657f00260bc606a43edb54352634", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/92c24c4c37513f77c6875fec0eb25a887622739f/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92c24c4c37513f77c6875fec0eb25a887622739f/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=92c24c4c37513f77c6875fec0eb25a887622739f", "patch": "@@ -23,7 +23,7 @@ use rustc_target::{\n \n use super::backtrace::EvalContextExt as _;\n use crate::helpers::{convert::Truncate, target_os_is_unix};\n-//FIXME(miri#2526): use crate::shims::ffi_support::EvalContextExt as _;\n+use crate::shims::ffi_support::EvalContextExt as _;\n use crate::*;\n \n /// Returned by `emulate_foreign_item_by_name`.\n@@ -375,9 +375,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // An Ok(false) here means that the function being called was not exported\n             // by the specified `.so` file; we should continue and check if it corresponds to\n             // a provided shim.\n-            /*FIXME(miri#2526): if this.call_external_c_fct(link_name, dest, args)? {\n+            if this.call_external_c_fct(link_name, dest, args)? {\n                 return Ok(EmulateByNameResult::NeedsJumping);\n-            }*/\n+            }\n         }\n \n         // When adding a new shim, you should follow the following pattern:"}, {"sha": "ee2145db7e1b5fa0975d0b8a6f0ed5d0082d5596", "filename": "src/shims/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/92c24c4c37513f77c6875fec0eb25a887622739f/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92c24c4c37513f77c6875fec0eb25a887622739f/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=92c24c4c37513f77c6875fec0eb25a887622739f", "patch": "@@ -1,7 +1,7 @@\n #![warn(clippy::integer_arithmetic)]\n \n mod backtrace;\n-//FIXME(miri#2526): pub mod ffi_support;\n+pub mod ffi_support;\n pub mod foreign_items;\n pub mod intrinsics;\n pub mod unix;"}, {"sha": "6b5668e2d6c4cbe3be62fd81d8d34956a2ad274f", "filename": "tests/compiletest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/92c24c4c37513f77c6875fec0eb25a887622739f/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92c24c4c37513f77c6875fec0eb25a887622739f/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=92c24c4c37513f77c6875fec0eb25a887622739f", "patch": "@@ -212,8 +212,8 @@ fn main() -> Result<()> {\n     ui(Mode::Panic, \"tests/panic\", WithDependencies)?;\n     ui(Mode::Fail { require_patterns: true }, \"tests/fail\", WithDependencies)?;\n     if cfg!(target_os = \"linux\") {\n-        //FIXME(miri#2526): ui(Mode::Pass, \"tests/extern-so/pass\", WithoutDependencies)?;\n-        //FIXME(miri#2526): ui(Mode::Fail { require_patterns: true }, \"tests/extern-so/fail\", WithDependencies)?;\n+        ui(Mode::Pass, \"tests/extern-so/pass\", WithoutDependencies)?;\n+        ui(Mode::Fail { require_patterns: true }, \"tests/extern-so/fail\", WithDependencies)?;\n     }\n \n     Ok(())"}]}