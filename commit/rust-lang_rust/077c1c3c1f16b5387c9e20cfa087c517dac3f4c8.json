{"sha": "077c1c3c1f16b5387c9e20cfa087c517dac3f4c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3N2MxYzNjMWYxNmI1Mzg3YzllMjBjZmEwODdjNTE3ZGFjM2Y0Yzg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-04T19:23:30Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-07T21:41:08Z"}, "message": "Less panic, more tests", "tree": {"sha": "41e42f60d8a79faa01b6f90f1a75af8c9f34cf34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41e42f60d8a79faa01b6f90f1a75af8c9f34cf34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8", "html_url": "https://github.com/rust-lang/rust/commit/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "045d7f096fc83cb14472a7ded9b4438a42f116a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/045d7f096fc83cb14472a7ded9b4438a42f116a5", "html_url": "https://github.com/rust-lang/rust/commit/045d7f096fc83cb14472a7ded9b4438a42f116a5"}], "stats": {"total": 73, "additions": 62, "deletions": 11}, "files": [{"sha": "fe6507c553414ba0056710c0d1c5698a9333d0d5", "filename": "crates/completion/src/completions/unqualified_path.rs", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs?ref=077c1c3c1f16b5387c9e20cfa087c517dac3f4c8", "patch": "@@ -122,8 +122,8 @@ mod tests {\n     use test_utils::mark;\n \n     use crate::{\n-        test_utils::{check_edit, completion_list},\n-        CompletionKind,\n+        test_utils::{check_edit, check_edit_with_config, completion_list},\n+        CompletionConfig, CompletionKind,\n     };\n \n     fn check(ra_fixture: &str, expect: Expect) {\n@@ -807,6 +807,43 @@ use dep::{FirstStruct, some_module::{SecondStruct, ThirdStruct}};\n fn main() {\n     ThirdStruct\n }\n+\"#,\n+        );\n+    }\n+\n+    /// LSP protocol supports separate completion resolve requests to do the heavy computations there.\n+    /// This test checks that for a certain resolve capatilities no such operations (autoimport) are done.\n+    #[test]\n+    fn no_fuzzy_completions_applied_for_certain_resolve_capability() {\n+        let mut completion_config = CompletionConfig::default();\n+        completion_config\n+            .active_resolve_capabilities\n+            .insert(crate::CompletionResolveCapability::AdditionalTextEdits);\n+\n+        check_edit_with_config(\n+            completion_config,\n+            \"ThirdStruct\",\n+            r#\"\n+//- /lib.rs crate:dep\n+pub struct FirstStruct;\n+pub mod some_module {\n+pub struct SecondStruct;\n+pub struct ThirdStruct;\n+}\n+\n+//- /main.rs crate:main deps:dep\n+use dep::{FirstStruct, some_module::SecondStruct};\n+\n+fn main() {\n+this<|>\n+}\n+\"#,\n+            r#\"\n+use dep::{FirstStruct, some_module::SecondStruct};\n+\n+fn main() {\n+ThirdStruct\n+}\n \"#,\n         );\n     }"}, {"sha": "978ea76f993c55ea8133ed02eed8a965e1956dcc", "filename": "crates/completion/src/item.rs", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8/crates%2Fcompletion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8/crates%2Fcompletion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fitem.rs?ref=077c1c3c1f16b5387c9e20cfa087c517dac3f4c8", "patch": "@@ -346,13 +346,17 @@ impl Builder {\n             }\n         };\n \n-        if !self.resolve_import_lazily {\n-            if let Some(import_edit) =\n-                self.import_to_add.as_ref().and_then(|import_edit| import_edit.to_text_edit())\n-            {\n-                text_edit.union(import_edit).expect(\"Failed to unite import and completion edits\");\n+        let import_to_add = if self.resolve_import_lazily {\n+            self.import_to_add\n+        } else {\n+            match apply_import_eagerly(self.import_to_add.as_ref(), &mut text_edit) {\n+                Ok(()) => self.import_to_add,\n+                Err(()) => {\n+                    log::error!(\"Failed to apply eager import edit: original edit and import edit intersect\");\n+                    None\n+                }\n             }\n-        }\n+        };\n \n         CompletionItem {\n             source_range: self.source_range,\n@@ -368,7 +372,7 @@ impl Builder {\n             trigger_call_info: self.trigger_call_info.unwrap_or(false),\n             score: self.score,\n             ref_match: self.ref_match,\n-            import_to_add: self.import_to_add,\n+            import_to_add,\n         }\n     }\n     pub(crate) fn lookup_by(mut self, lookup: impl Into<String>) -> Builder {\n@@ -449,6 +453,16 @@ impl Builder {\n     }\n }\n \n+fn apply_import_eagerly(\n+    import_to_add: Option<&ImportEdit>,\n+    original_edit: &mut TextEdit,\n+) -> Result<(), ()> {\n+    match import_to_add.and_then(|import_edit| import_edit.to_text_edit()) {\n+        Some(import_edit) => original_edit.union(import_edit).map_err(|_| ()),\n+        None => Ok(()),\n+    }\n+}\n+\n impl<'a> Into<CompletionItem> for Builder {\n     fn into(self) -> CompletionItem {\n         self.build()"}, {"sha": "f80c55df75d296c98637d615896f213a8219a531", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/077c1c3c1f16b5387c9e20cfa087c517dac3f4c8/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=077c1c3c1f16b5387c9e20cfa087c517dac3f4c8", "patch": "@@ -1626,12 +1626,12 @@ fn fill_resolve_data(\n         let imported_name = import_edit.import_path.segments.clone().pop()?.to_string();\n \n         *resolve_data = Some(\n-            serde_json::to_value(CompletionResolveData {\n+            to_value(CompletionResolveData {\n                 position: position.to_owned(),\n                 full_import_path,\n                 imported_name,\n             })\n-            .expect(\"Failed to serialize a regular struct with derives\"),\n+            .unwrap(),\n         )\n     }\n     Some(())"}]}