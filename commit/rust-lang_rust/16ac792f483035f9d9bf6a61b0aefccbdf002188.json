{"sha": "16ac792f483035f9d9bf6a61b0aefccbdf002188", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YWM3OTJmNDgzMDM1ZjlkOWJmNmE2MWIwYWVmY2NiZGYwMDIxODg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T14:44:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T15:52:02Z"}, "message": "Docs", "tree": {"sha": "7654dbf63b73c54650a85009758635643d93c3d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7654dbf63b73c54650a85009758635643d93c3d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16ac792f483035f9d9bf6a61b0aefccbdf002188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16ac792f483035f9d9bf6a61b0aefccbdf002188", "html_url": "https://github.com/rust-lang/rust/commit/16ac792f483035f9d9bf6a61b0aefccbdf002188", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16ac792f483035f9d9bf6a61b0aefccbdf002188/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f212b379811dcb26cde3eba160e07a11182fc5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f212b379811dcb26cde3eba160e07a11182fc5a", "html_url": "https://github.com/rust-lang/rust/commit/0f212b379811dcb26cde3eba160e07a11182fc5a"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "3c042a94e0b2f5809672635584a8d5af366a54fa", "filename": "crates/ra_hir_def/src/item_scope.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/16ac792f483035f9d9bf6a61b0aefccbdf002188/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16ac792f483035f9d9bf6a61b0aefccbdf002188/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs?ref=16ac792f483035f9d9bf6a61b0aefccbdf002188", "patch": "@@ -1,3 +1,6 @@\n+//! Describes items defined or visible (ie, imported) in a certain scope.\n+//! This is shared between modules and blocks.\n+\n use hir_expand::name::Name;\n use once_cell::sync::Lazy;\n use rustc_hash::FxHashMap;\n@@ -7,11 +10,11 @@ use crate::{per_ns::PerNs, BuiltinType, LocalImportId, MacroDefId, ModuleDefId,\n #[derive(Debug, Default, PartialEq, Eq)]\n pub struct ModuleScope {\n     pub(crate) items: FxHashMap<Name, Resolution>,\n-    /// Macros visable in current module in legacy textual scope\n+    /// Macros visible in current module in legacy textual scope\n     ///\n-    /// For macros invoked by an unquatified identifier like `bar!()`, `legacy_macros` will be searched in first.\n+    /// For macros invoked by an unqualified identifier like `bar!()`, `legacy_macros` will be searched in first.\n     /// If it yields no result, then it turns to module scoped `macros`.\n-    /// It macros with name quatified with a path like `crate::foo::bar!()`, `legacy_macros` will be skipped,\n+    /// It macros with name qualified with a path like `crate::foo::bar!()`, `legacy_macros` will be skipped,\n     /// and only normal scoped `macros` will be searched in.\n     ///\n     /// Note that this automatically inherit macros defined textually before the definition of module itself."}]}