{"sha": "13e4270bf9468e9213b6cc16ca217062791599a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZTQyNzBiZjk0NjhlOTIxM2I2Y2MxNmNhMjE3MDYyNzkxNTk5YTA=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-03-27T17:58:12Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-03-27T17:58:12Z"}, "message": "Unquote all crate names without underscores", "tree": {"sha": "89a410dd287837578bbb110aa29f9e941bc9fae6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89a410dd287837578bbb110aa29f9e941bc9fae6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13e4270bf9468e9213b6cc16ca217062791599a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13e4270bf9468e9213b6cc16ca217062791599a0", "html_url": "https://github.com/rust-lang/rust/commit/13e4270bf9468e9213b6cc16ca217062791599a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13e4270bf9468e9213b6cc16ca217062791599a0/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "199bdcfeff5cfafd1f8e8ff583d7209272469879", "url": "https://api.github.com/repos/rust-lang/rust/commits/199bdcfeff5cfafd1f8e8ff583d7209272469879", "html_url": "https://github.com/rust-lang/rust/commit/199bdcfeff5cfafd1f8e8ff583d7209272469879"}], "stats": {"total": 80, "additions": 40, "deletions": 40}, "files": [{"sha": "b39a4f7b51678289a09717904bb48b1fc486eb88", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -980,7 +980,7 @@ extern crate pcre;\n \n extern crate std; // equivalent to: extern crate std as std;\n \n-extern crate \"std\" as ruststd; // linking to 'std' under another name\n+extern crate std as ruststd; // linking to 'std' under another name\n ```\n \n ##### Use declarations"}, {"sha": "c5c58bb49ac361f34df30451b9badd02450acab9", "filename": "src/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fdriver.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,9 +12,9 @@\n #![cfg_attr(rustdoc, feature(rustdoc))]\n \n #[cfg(rustdoc)]\n-extern crate \"rustdoc\" as this;\n+extern crate rustdoc as this;\n \n #[cfg(rustc)]\n-extern crate \"rustc_driver\" as this;\n+extern crate rustc_driver as this;\n \n fn main() { this::main() }"}, {"sha": "7174b2d2c29fed2016fef4f8f478e20b5fbb0971", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -76,7 +76,7 @@\n \n #![allow(bad_style, raw_pointer_derive)]\n #![cfg_attr(target_os = \"nacl\", allow(unused_imports))]\n-#[cfg(feature = \"cargo-build\")] extern crate \"std\" as core;\n+#[cfg(feature = \"cargo-build\")] extern crate std as core;\n #[cfg(not(feature = \"cargo-build\"))] extern crate core;\n \n #[cfg(test)] extern crate std;"}, {"sha": "90d9324b9090c54e147cf9bbeac985f2f23fedf8", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -65,7 +65,7 @@ extern crate collections;\n #[macro_use] extern crate syntax;\n #[macro_use] #[no_link] extern crate rustc_bitflags;\n \n-extern crate \"serialize\" as rustc_serialize; // used by deriving\n+extern crate serialize as rustc_serialize; // used by deriving\n \n #[cfg(test)]\n extern crate test;"}, {"sha": "99f19ad7110869b34056f0a59ae287944520c1bc", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -35,7 +35,7 @@\n \n // for \"clarity\", rename the graphviz crate to dot; graphviz within `borrowck`\n // refers to the borrowck-specific graphviz adapter traits.\n-extern crate \"graphviz\" as dot;\n+extern crate graphviz as dot;\n extern crate rustc;\n \n pub use borrowck::check_crate;"}, {"sha": "c433aed4ae94a053b8c01e3e87f81a2aa0c57d3c", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -55,7 +55,7 @@ extern crate rustc_resolve;\n extern crate rustc_trans;\n extern crate rustc_typeck;\n extern crate serialize;\n-extern crate \"rustc_llvm\" as llvm;\n+extern crate rustc_llvm as llvm;\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n "}, {"sha": "83525dffaaeb7834ddd5a85ba30a819c7d99e0c3", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -54,7 +54,7 @@ extern crate libc;\n extern crate rustc;\n extern crate rustc_back;\n extern crate serialize;\n-extern crate \"rustc_llvm\" as llvm;\n+extern crate rustc_llvm as llvm;\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}, {"sha": "62c9199a0fa46fdb41196f5069704e9349e2c06f", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -51,11 +51,11 @@ extern crate rustc_lint;\n extern crate rustc_back;\n extern crate serialize;\n extern crate syntax;\n-extern crate \"test\" as testing;\n+extern crate test as testing;\n extern crate unicode;\n #[macro_use] extern crate log;\n \n-extern crate \"serialize\" as rustc_serialize; // used by deriving\n+extern crate serialize as rustc_serialize; // used by deriving\n \n use std::cell::RefCell;\n use std::collections::HashMap;"}, {"sha": "7eb575a3a689b4ed9105a6aa0e57173e0d8ca5fa", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -149,17 +149,17 @@ extern crate core;\n \n #[macro_use]\n #[macro_reexport(vec, format)]\n-extern crate \"collections\" as core_collections;\n+extern crate collections as core_collections;\n \n-#[allow(deprecated)] extern crate \"rand\" as core_rand;\n+#[allow(deprecated)] extern crate rand as core_rand;\n extern crate alloc;\n extern crate unicode;\n extern crate libc;\n \n #[macro_use] #[no_link] extern crate rustc_bitflags;\n \n // Make std testable by not duplicating lang items. See #2912\n-#[cfg(test)] extern crate \"std\" as realstd;\n+#[cfg(test)] extern crate std as realstd;\n #[cfg(test)] pub use realstd::marker;\n #[cfg(test)] pub use realstd::ops;\n #[cfg(test)] pub use realstd::cmp;"}, {"sha": "298085806bdecb66b74ff2225c2f5a262022f196", "filename": "src/libstd/old_io/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibstd%2Fold_io%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibstd%2Fold_io%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fold_io%2Fmem.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -397,7 +397,7 @@ impl<'a> Buffer for BufReader<'a> {\n \n #[cfg(test)]\n mod test {\n-    extern crate \"test\" as test_crate;\n+    extern crate test as test_crate;\n     use old_io::{SeekSet, SeekCur, SeekEnd, Reader, Writer, Seek, Buffer};\n     use prelude::v1::{Ok, Err, Vec,  AsSlice};\n     use prelude::v1::IteratorExt;"}, {"sha": "79132b2e54321a0d5e7a99f7130c35d561a06f0b", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -50,7 +50,7 @@ extern crate libc;\n #[macro_use] extern crate log;\n #[macro_use] #[no_link] extern crate rustc_bitflags;\n \n-extern crate \"serialize\" as rustc_serialize; // used by deriving\n+extern crate serialize as rustc_serialize; // used by deriving\n \n pub mod util {\n     pub mod interner;"}, {"sha": "7c95f16bee924a9013b0e01fa02be87f693668e6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -4979,7 +4979,7 @@ impl<'a> Parser<'a> {\n     ///\n     /// extern crate url;\n     /// extern crate foo = \"bar\"; //deprecated\n-    /// extern crate \"bar\" as foo;\n+    /// extern crate bar as foo;\n     fn parse_item_extern_crate(&mut self,\n                                 lo: BytePos,\n                                 visibility: Visibility,"}, {"sha": "021ec4738ed94416797fd687d1178be21eaaad34", "filename": "src/libsyntax/std_inject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibsyntax%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibsyntax%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fstd_inject.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -52,7 +52,7 @@ struct StandardLibraryInjector {\n impl fold::Folder for StandardLibraryInjector {\n     fn fold_crate(&mut self, mut krate: ast::Crate) -> ast::Crate {\n \n-        // The name to use in `extern crate \"name\" as std;`\n+        // The name to use in `extern crate name as std;`\n         let actual_crate_name = match self.alt_std_name {\n             Some(ref s) => token::intern(&s),\n             None => token::intern(\"std\"),"}, {"sha": "3e26a68d5909edb9796532e0f6b249c0ae181030", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -50,7 +50,7 @@\n \n extern crate getopts;\n extern crate serialize;\n-extern crate \"serialize\" as rustc_serialize;\n+extern crate serialize as rustc_serialize;\n extern crate term;\n extern crate libc;\n "}, {"sha": "4980eb8b91386b681911f1d5174ab628179ed76f", "filename": "src/test/auxiliary/syntax_extension_with_dll_deps_2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Fauxiliary%2Fsyntax_extension_with_dll_deps_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Fauxiliary%2Fsyntax_extension_with_dll_deps_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsyntax_extension_with_dll_deps_2.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -13,7 +13,7 @@\n #![crate_type = \"dylib\"]\n #![feature(plugin_registrar, quote, rustc_private)]\n \n-extern crate \"syntax_extension_with_dll_deps_1\" as other;\n+extern crate syntax_extension_with_dll_deps_1 as other;\n extern crate syntax;\n extern crate rustc;\n "}, {"sha": "4e99cc26bceefa55ec688fc810930b76e21f5576", "filename": "src/test/auxiliary/trait_default_method_xc_aux_2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_default_method_xc_aux_2.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:trait_default_method_xc_aux.rs\n \n-extern crate \"trait_default_method_xc_aux\" as aux;\n+extern crate trait_default_method_xc_aux as aux;\n use aux::A;\n \n pub struct a_struct { pub x: int }"}, {"sha": "a613aa84d7183fcce82e33139c7cd64bf01a2472", "filename": "src/test/run-make/save-analysis/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -15,7 +15,7 @@\n extern crate graphviz;\n // A simple rust project\n \n-extern crate \"flate\" as myflate;\n+extern crate flate as myflate;\n \n use std::collections::{HashMap,HashSet};\n use std::cell::RefCell;"}, {"sha": "fbc6c28fd4a580e6e43e208aa5cdbe385d3cd773", "filename": "src/test/run-pass/derive-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderive-no-std.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -13,7 +13,7 @@\n \n extern crate core;\n extern crate rand;\n-extern crate \"serialize\" as rustc_serialize;\n+extern crate serialize as rustc_serialize;\n extern crate collections;\n \n // Issue #16803"}, {"sha": "1757ff51fed3f64bcff298ba4905a2ae4ab5ce34", "filename": "src/test/run-pass/extern-foreign-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fextern-foreign-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fextern-foreign-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-foreign-crate.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -10,6 +10,6 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"std\" as mystd;\n+extern crate std as mystd;\n \n pub fn main() {}"}, {"sha": "72d4dd73667e89708649914ad1edb27ea97fe842", "filename": "src/test/run-pass/for-loop-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffor-loop-no-std.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -13,7 +13,7 @@\n #![feature(lang_items, start, no_std, core, collections)]\n #![no_std]\n \n-extern crate \"std\" as other;\n+extern crate std as other;\n \n #[macro_use] extern crate core;\n #[macro_use] extern crate collections;"}, {"sha": "8ee4becbb81ca16d94d89d9c84189b17d3891cd1", "filename": "src/test/run-pass/format-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-std.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -13,7 +13,7 @@\n #![feature(lang_items, start, no_std, core, collections)]\n #![no_std]\n \n-extern crate \"std\" as other;\n+extern crate std as other;\n \n #[macro_use] extern crate core;\n #[macro_use] extern crate collections;"}, {"sha": "dd5b7e722fe7bb775d533dc4b12d45d9d0fbb0aa", "filename": "src/test/run-pass/issue-14330.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fissue-14330.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fissue-14330.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14330.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -10,6 +10,6 @@\n \n // pretty-expanded FIXME #23616\n \n-#[macro_use] extern crate \"std\" as std2;\n+#[macro_use] extern crate std as std2;\n \n fn main() {}"}, {"sha": "9cada12685f3cca37fae8b6432b5aa2c7739a991", "filename": "src/test/run-pass/linkage1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage1.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -14,7 +14,7 @@\n \n #![feature(linkage)]\n \n-extern crate \"linkage1\" as other;\n+extern crate linkage1 as other;\n \n extern {\n     #[linkage = \"extern_weak\"]"}, {"sha": "ed7b1cbacadd7f401a516011944c9f6231a62708", "filename": "src/test/run-pass/macro-crate-nonterminal-renamed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-nonterminal-renamed.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n // ignore-stage1\n \n #[macro_use]\n-extern crate \"macro_crate_nonterminal\" as new_name;\n+extern crate macro_crate_nonterminal as new_name;\n \n pub fn main() {\n     new_name::check_local();"}, {"sha": "80de65c0e9f656daba5bcce0d6946693def88c35", "filename": "src/test/run-pass/static-fn-inline-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"static_fn_inline_xc_aux\" as mycore;\n+extern crate static_fn_inline_xc_aux as mycore;\n \n use mycore::num;\n "}, {"sha": "550e03c8b12fbedd17b4fdeb06646a1ff1927e1c", "filename": "src/test/run-pass/static-fn-trait-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-fn-trait-xc.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"static_fn_trait_xc_aux\" as mycore;\n+extern crate static_fn_trait_xc_aux as mycore;\n \n use mycore::num;\n "}, {"sha": "d4ed72704001690073c8c7f9312a29c770736f45", "filename": "src/test/run-pass/trait-default-method-xc-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc-2.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -14,8 +14,8 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_default_method_xc_aux\" as aux;\n-extern crate \"trait_default_method_xc_aux_2\" as aux2;\n+extern crate trait_default_method_xc_aux as aux;\n+extern crate trait_default_method_xc_aux_2 as aux2;\n use aux::A;\n use aux2::{a_struct, welp};\n "}, {"sha": "59b44a7a6dc612101c4d3aa13cdc9715f55d7115", "filename": "src/test/run-pass/trait-default-method-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-xc.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_default_method_xc_aux\" as aux;\n+extern crate trait_default_method_xc_aux as aux;\n use aux::{A, TestEquality, Something};\n use aux::B;\n "}, {"sha": "128be2993ec1db26fda867ecfbf8536b94321de7", "filename": "src/test/run-pass/trait-inheritance-auto-xc-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc-2.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_inheritance_auto_xc_2_aux\" as aux;\n+extern crate trait_inheritance_auto_xc_2_aux as aux;\n \n // aux defines impls of Foo, Bar and Baz for A\n use aux::{Foo, Bar, Baz, A};"}, {"sha": "cfef5c2b50332aa1e02120dadada363a95afb515", "filename": "src/test/run-pass/trait-inheritance-auto-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-auto-xc.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_inheritance_auto_xc_aux\" as aux;\n+extern crate trait_inheritance_auto_xc_aux as aux;\n \n use aux::{Foo, Bar, Baz, Quux};\n "}, {"sha": "23d612baa1c0ea6fb5f6b40fb6da03e93b2db80b", "filename": "src/test/run-pass/trait-inheritance-cross-trait-call-xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-inheritance-cross-trait-call-xc.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"trait_inheritance_cross_trait_call_xc_aux\" as aux;\n+extern crate trait_inheritance_cross_trait_call_xc_aux as aux;\n \n use aux::Foo;\n "}, {"sha": "98594183a00d0e95c79df10781901db98f6a5c87", "filename": "src/test/run-pass/use-crate-name-alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-crate-name-alias.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -11,6 +11,6 @@\n // Issue #1706\n // pretty-expanded FIXME #23616\n \n-extern crate \"std\" as stdlib;\n+extern crate std as stdlib;\n \n pub fn main() {}"}, {"sha": "e4b13b601763c23b3eb12e0d24adb4ff3863f965", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -15,7 +15,7 @@\n #![no_std]\n \n extern crate std;\n-extern crate \"std\" as zed;\n+extern crate std as zed;\n \n use std::str;\n use zed::str as x;"}, {"sha": "f81509025a8a22560bb8f5369efef2aec9d96fa5", "filename": "src/test/run-pass/vec-macro-no-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-no-std.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -13,7 +13,7 @@\n #![feature(lang_items, start, no_std, core, libc, collections)]\n #![no_std]\n \n-extern crate \"std\" as other;\n+extern crate std as other;\n \n #[macro_use]\n extern crate core;"}, {"sha": "ac8b15d7bf58990e883430fa4e3d2facf7361acc", "filename": "src/test/run-pass/xcrate-address-insignificant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13e4270bf9468e9213b6cc16ca217062791599a0/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fxcrate-address-insignificant.rs?ref=13e4270bf9468e9213b6cc16ca217062791599a0", "patch": "@@ -12,7 +12,7 @@\n \n // pretty-expanded FIXME #23616\n \n-extern crate \"xcrate_address_insignificant\" as foo;\n+extern crate xcrate_address_insignificant as foo;\n \n pub fn main() {\n     assert_eq!(foo::foo::<f64>(), foo::bar());"}]}