{"sha": "7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiN2M3NDZjMWU5MmZlOWZhNTBhOTQzOTZkZmU1ZWZhZTAwMzRkZjk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-10T17:53:42Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-10T17:53:42Z"}, "message": "Merge pull request #447 from paulstansifer/quick_error_message_fix\n\nError message, instead of segfault, when recursive types are used.", "tree": {"sha": "fce25e8fd6ae9fb6c381724e75cc59c4fc16f585", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fce25e8fd6ae9fb6c381724e75cc59c4fc16f585"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "html_url": "https://github.com/rust-lang/rust/commit/7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfdd6dbc5464147d984470086ab27c950d60d83e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfdd6dbc5464147d984470086ab27c950d60d83e", "html_url": "https://github.com/rust-lang/rust/commit/dfdd6dbc5464147d984470086ab27c950d60d83e"}, {"sha": "1377e9b341a03915c48a564fb30e70022d04c78f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1377e9b341a03915c48a564fb30e70022d04c78f", "html_url": "https://github.com/rust-lang/rust/commit/1377e9b341a03915c48a564fb30e70022d04c78f"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "d30af2a6d132219c1c4073feec054a2e78c4e3f6", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "patch": "@@ -525,6 +525,14 @@ fn is_constraint_arg(@expr e) -> bool {\n     }\n }\n \n+fn eq_ty(&@ty a, &@ty b) -> bool {\n+    ret std::box::ptr_eq(a,b);\n+}\n+\n+fn hash_ty(&@ty t) -> uint {\n+    ret t.span.lo << 16u + t.span.hi;\n+}\n+\n //\n // Local Variables:\n // mode: rust"}, {"sha": "61053f77091d88fe5e56967299e69659c9798adc", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "patch": "@@ -72,7 +72,8 @@ type ctxt = rec(@type_store ts,\n                 item_table items,\n                 type_cache tcache,\n                 creader_cache rcache,\n-                hashmap[t,str] short_names_cache);\n+                hashmap[t,str] short_names_cache,\n+                hashmap[@ast::ty,option::t[t]] ast_ty_to_ty_cache);\n type ty_ctxt = ctxt;    // Needed for disambiguation from unify::ctxt.\n \n // Convert from method type to function type.  Pretty easy; we just drop\n@@ -241,7 +242,9 @@ fn mk_ctxt(session::session s, resolve::def_map dm) -> ctxt {\n             tcache = tcache,\n             rcache = mk_rcache(),\n             short_names_cache =\n-            map::mk_hashmap[ty::t,str](ty::hash_ty, ty::eq_ty));\n+            map::mk_hashmap[ty::t,str](ty::hash_ty, ty::eq_ty),\n+            ast_ty_to_ty_cache = \n+            map::mk_hashmap[@ast::ty,option::t[t]](ast::hash_ty, ast::eq_ty));\n \n     populate_type_store(cx);\n     ret cx;"}, {"sha": "cf99f1ab4b18360689d49596ef9739b8574e3833", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "patch": "@@ -219,6 +219,16 @@ fn type_is_scalar(&@fn_ctxt fcx, &span sp, ty::t typ) -> bool {\n // notion of a type. `getter` is a function that returns the type\n // corresponding to a definition ID:\n fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n+    alt (tcx.ast_ty_to_ty_cache.find(ast_ty)) {\n+        case (some[option::t[ty::t]](some[ty::t](?ty))) { ret ty; } \n+        case (some[option::t[ty::t]](none)) {\n+            tcx.sess.span_err(ast_ty.span, \"illegal recursive type \"\n+                + \"(insert a tag in the cycle, if this is desired)\");\n+        }\n+        case (none[option::t[ty::t]]) { } /* go on */\n+    }\n+    tcx.ast_ty_to_ty_cache.insert(ast_ty, none[ty::t]);\n+    \n     fn ast_arg_to_arg(&ty::ctxt tcx,\n                       &ty_getter getter,\n                       &ast::ty_arg arg)\n@@ -369,6 +379,8 @@ fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n             typ = ty::rename(tcx, typ, cname_str);\n         }\n     }\n+\n+    tcx.ast_ty_to_ty_cache.insert(ast_ty, some(typ));\n     ret typ;\n }\n "}, {"sha": "5de96b82a791c7857787d9d3a2d0c44ad2931547", "filename": "src/test/compile-fail/type-recursive.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b7c746c1e92fe9fa50a94396dfe5efae0034df9/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs?ref=7b7c746c1e92fe9fa50a94396dfe5efae0034df9", "patch": "@@ -0,0 +1,4 @@\n+// error-pattern:illegal recursive type\n+type t1 = rec(int foo, t1 foolish);\n+\n+fn main() {}"}]}