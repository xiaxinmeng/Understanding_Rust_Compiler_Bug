{"sha": "0b3424321cf4a07f4c74c59b5785bcd6a17d4235", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMzQyNDMyMWNmNGEwN2Y0Yzc0YzU5YjU3ODViY2Q2YTE3ZDQyMzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-28T18:09:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-28T18:09:07Z"}, "message": "Auto merge of #29651 - tshepang:misc, r=steveklabnik", "tree": {"sha": "a30887d08e78cd331687db9d17de18ab81792ee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a30887d08e78cd331687db9d17de18ab81792ee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b3424321cf4a07f4c74c59b5785bcd6a17d4235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3424321cf4a07f4c74c59b5785bcd6a17d4235", "html_url": "https://github.com/rust-lang/rust/commit/0b3424321cf4a07f4c74c59b5785bcd6a17d4235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b3424321cf4a07f4c74c59b5785bcd6a17d4235/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ea65c03d96875a41c556ccd949617d4830e0ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ea65c03d96875a41c556ccd949617d4830e0ee9", "html_url": "https://github.com/rust-lang/rust/commit/5ea65c03d96875a41c556ccd949617d4830e0ee9"}, {"sha": "05dde0d3252486a532d50d9003e099ae17136e49", "url": "https://api.github.com/repos/rust-lang/rust/commits/05dde0d3252486a532d50d9003e099ae17136e49", "html_url": "https://github.com/rust-lang/rust/commit/05dde0d3252486a532d50d9003e099ae17136e49"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a0f629c32e3fba3fda7c5012e3bd3acf463fa2bb", "filename": "src/doc/book/dining-philosophers.md", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0b3424321cf4a07f4c74c59b5785bcd6a17d4235/src%2Fdoc%2Fbook%2Fdining-philosophers.md", "raw_url": "https://github.com/rust-lang/rust/raw/0b3424321cf4a07f4c74c59b5785bcd6a17d4235/src%2Fdoc%2Fbook%2Fdining-philosophers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fdining-philosophers.md?ref=0b3424321cf4a07f4c74c59b5785bcd6a17d4235", "patch": "@@ -148,7 +148,7 @@ short strings anyway.\n One last thing you\u2019ll notice: we just define a `Philosopher`, and seemingly\n don\u2019t do anything with it. Rust is an \u2018expression based\u2019 language, which means\n that almost everything in Rust is an expression which returns a value. This is\n-true of functions as well, the last expression is automatically returned. Since\n+true of functions as well \u2014 the last expression is automatically returned. Since\n we create a new `Philosopher` as the last expression of this function, we end\n up returning it.\n \n@@ -178,8 +178,8 @@ fn main() {\n }\n ```\n \n-Here, we create five variable bindings with five new philosophers. These are my\n-favorite five, but you can substitute anyone you want. If we _didn\u2019t_ define\n+Here, we create five variable bindings with five new philosophers.\n+If we _didn\u2019t_ define\n that `new()` function, it would look like this:\n \n ```rust\n@@ -440,10 +440,13 @@ closure as an argument and calls that closure on each element in turn.\n Here\u2019s where the concurrency happens. The `thread::spawn` function takes a closure\n as an argument and executes that closure in a new thread. This closure needs\n an extra annotation, `move`, to indicate that the closure is going to take\n-ownership of the values it\u2019s capturing. Primarily, the `p` variable of the\n+ownership of the values it\u2019s capturing. In this case, it's the `p` variable of the\n `map` function.\n \n-Inside the thread, all we do is call `eat()` on `p`. Also note that the call to `thread::spawn` lacks a trailing semicolon, making this an expression. This distinction is important, yielding the correct return value. For more details, read [Expressions vs. Statements][es].\n+Inside the thread, all we do is call `eat()` on `p`. Also note that\n+the call to `thread::spawn` lacks a trailing semicolon, making this an\n+expression. This distinction is important, yielding the correct return\n+value. For more details, read [Expressions vs. Statements][es].\n \n [es]: functions.html#expressions-vs-statements\n "}]}