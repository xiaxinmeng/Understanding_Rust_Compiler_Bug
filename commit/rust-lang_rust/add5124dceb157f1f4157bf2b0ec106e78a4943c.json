{"sha": "add5124dceb157f1f4157bf2b0ec106e78a4943c", "node_id": "C_kwDOAAsO6NoAKGFkZDUxMjRkY2ViMTU3ZjFmNDE1N2JmMmIwZWMxMDZlNzhhNDk0M2M", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-25T19:47:15Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-09T17:27:58Z"}, "message": "Extract handle_set_discriminant.", "tree": {"sha": "3e2a235d04ca88ca8415d8927099c3265da686d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e2a235d04ca88ca8415d8927099c3265da686d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/add5124dceb157f1f4157bf2b0ec106e78a4943c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/add5124dceb157f1f4157bf2b0ec106e78a4943c", "html_url": "https://github.com/rust-lang/rust/commit/add5124dceb157f1f4157bf2b0ec106e78a4943c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/add5124dceb157f1f4157bf2b0ec106e78a4943c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b0bf3cf59dc54b9a5721e085405b7647fe82c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0bf3cf59dc54b9a5721e085405b7647fe82c14", "html_url": "https://github.com/rust-lang/rust/commit/2b0bf3cf59dc54b9a5721e085405b7647fe82c14"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "7b92eb05fba6c56ff928f5d217458c2d7a285581", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/add5124dceb157f1f4157bf2b0ec106e78a4943c/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add5124dceb157f1f4157bf2b0ec106e78a4943c/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=add5124dceb157f1f4157bf2b0ec106e78a4943c", "patch": "@@ -67,8 +67,8 @@ pub trait ValueAnalysis<'tcx> {\n             StatementKind::Assign(box (place, rvalue)) => {\n                 self.handle_assign(*place, rvalue, state);\n             }\n-            StatementKind::SetDiscriminant { box ref place, .. } => {\n-                state.flood_discr(place.as_ref(), self.map());\n+            StatementKind::SetDiscriminant { box place, variant_index } => {\n+                self.handle_set_discriminant(*place, *variant_index, state);\n             }\n             StatementKind::Intrinsic(box intrinsic) => {\n                 self.handle_intrinsic(intrinsic, state);\n@@ -94,6 +94,24 @@ pub trait ValueAnalysis<'tcx> {\n         }\n     }\n \n+    fn handle_set_discriminant(\n+        &self,\n+        place: Place<'tcx>,\n+        variant_index: VariantIdx,\n+        state: &mut State<Self::Value>,\n+    ) {\n+        self.super_set_discriminant(place, variant_index, state)\n+    }\n+\n+    fn super_set_discriminant(\n+        &self,\n+        place: Place<'tcx>,\n+        _variant_index: VariantIdx,\n+        state: &mut State<Self::Value>,\n+    ) {\n+        state.flood_discr(place.as_ref(), self.map());\n+    }\n+\n     fn handle_intrinsic(\n         &self,\n         intrinsic: &NonDivergingIntrinsic<'tcx>,"}, {"sha": "7adfc9dff2ae9f5bb93474d6e28cfe5b53cedc86", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/add5124dceb157f1f4157bf2b0ec106e78a4943c/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add5124dceb157f1f4157bf2b0ec106e78a4943c/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=add5124dceb157f1f4157bf2b0ec106e78a4943c", "patch": "@@ -79,22 +79,22 @@ impl<'tcx> ValueAnalysis<'tcx> for ConstAnalysis<'_, 'tcx> {\n         &self.map\n     }\n \n-    fn handle_statement(&self, statement: &Statement<'tcx>, state: &mut State<Self::Value>) {\n-        match statement.kind {\n-            StatementKind::SetDiscriminant { box ref place, variant_index } => {\n-                state.flood_discr(place.as_ref(), &self.map);\n-                if self.map.find_discr(place.as_ref()).is_some() {\n-                    let enum_ty = place.ty(self.local_decls, self.tcx).ty;\n-                    if let Some(discr) = self.eval_discriminant(enum_ty, variant_index) {\n-                        state.assign_discr(\n-                            place.as_ref(),\n-                            ValueOrPlace::Value(FlatSet::Elem(discr)),\n-                            &self.map,\n-                        );\n-                    }\n-                }\n+    fn handle_set_discriminant(\n+        &self,\n+        place: Place<'tcx>,\n+        variant_index: VariantIdx,\n+        state: &mut State<Self::Value>,\n+    ) {\n+        state.flood_discr(place.as_ref(), &self.map);\n+        if self.map.find_discr(place.as_ref()).is_some() {\n+            let enum_ty = place.ty(self.local_decls, self.tcx).ty;\n+            if let Some(discr) = self.eval_discriminant(enum_ty, variant_index) {\n+                state.assign_discr(\n+                    place.as_ref(),\n+                    ValueOrPlace::Value(FlatSet::Elem(discr)),\n+                    &self.map,\n+                );\n             }\n-            _ => self.super_statement(statement, state),\n         }\n     }\n "}]}