{"sha": "2eb22ae2b400c99966dad07145a541ce8c2586fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYjIyYWUyYjQwMGM5OTk2NmRhZDA3MTQ1YTU0MWNlOGMyNTg2ZmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-06T07:41:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-06T07:41:19Z"}, "message": "auto merge of #10665 : cmr/rust/doc_lint, r=alexcrichton\n\nBecause the root module isn't actually an item, we need to do some hackish\nhandling of it.\n\nCloses #10656.", "tree": {"sha": "ea67cf212c1370b85690003bc4dec5904c06e2a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea67cf212c1370b85690003bc4dec5904c06e2a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eb22ae2b400c99966dad07145a541ce8c2586fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb22ae2b400c99966dad07145a541ce8c2586fb", "html_url": "https://github.com/rust-lang/rust/commit/2eb22ae2b400c99966dad07145a541ce8c2586fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eb22ae2b400c99966dad07145a541ce8c2586fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9aecdb22ad95c7be37c6e2e45dce2242f6a59d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9aecdb22ad95c7be37c6e2e45dce2242f6a59d9", "html_url": "https://github.com/rust-lang/rust/commit/f9aecdb22ad95c7be37c6e2e45dce2242f6a59d9"}, {"sha": "30a5612830a430e8534f32a9ea14bc3dfdc0e55d", "url": "https://api.github.com/repos/rust-lang/rust/commits/30a5612830a430e8534f32a9ea14bc3dfdc0e55d", "html_url": "https://github.com/rust-lang/rust/commit/30a5612830a430e8534f32a9ea14bc3dfdc0e55d"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "942d9b957ae320d1b0f93f9bdf8282edff2c982e", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=2eb22ae2b400c99966dad07145a541ce8c2586fb", "patch": "@@ -1048,7 +1048,7 @@ fn check_unnecessary_allocation(cx: &Context, e: &ast::Expr) {\n }\n \n fn check_missing_doc_attrs(cx: &Context,\n-                           id: ast::NodeId,\n+                           id: Option<ast::NodeId>,\n                            attrs: &[ast::Attribute],\n                            sp: Span,\n                            desc: &'static str) {\n@@ -1059,17 +1059,20 @@ fn check_missing_doc_attrs(cx: &Context,\n     // `#[doc(hidden)]` disables missing_doc check.\n     if cx.is_doc_hidden { return }\n \n-    // Only check publicly-visible items, using the result from the\n-    // privacy pass.\n-    if !cx.exported_items.contains(&id) { return }\n+    // Only check publicly-visible items, using the result from the privacy pass. It's an option so\n+    // the crate root can also use this function (it doesn't have a NodeId).\n+    match id {\n+        Some(ref id) if !cx.exported_items.contains(id) => return,\n+        _ => ()\n+    }\n \n     if !attrs.iter().any(|a| a.node.is_sugared_doc) {\n         cx.span_lint(missing_doc, sp,\n                      format!(\"missing documentation for {}\", desc));\n     }\n }\n \n-fn check_missing_doc_item(cx: &mut Context, it: &ast::item) { // XXX doesn't need to be mut\n+fn check_missing_doc_item(cx: &Context, it: &ast::item) {\n     let desc = match it.node {\n         ast::item_fn(..) => \"a function\",\n         ast::item_mod(..) => \"a module\",\n@@ -1078,7 +1081,7 @@ fn check_missing_doc_item(cx: &mut Context, it: &ast::item) { // XXX doesn't nee\n         ast::item_trait(..) => \"a trait\",\n         _ => return\n     };\n-    check_missing_doc_attrs(cx, it.id, it.attrs, it.span, desc);\n+    check_missing_doc_attrs(cx, Some(it.id), it.attrs, it.span, desc);\n }\n \n fn check_missing_doc_method(cx: &Context, m: &ast::method) {\n@@ -1104,24 +1107,24 @@ fn check_missing_doc_method(cx: &Context, m: &ast::method) {\n             }\n         }\n     }\n-    check_missing_doc_attrs(cx, m.id, m.attrs, m.span, \"a method\");\n+    check_missing_doc_attrs(cx, Some(m.id), m.attrs, m.span, \"a method\");\n }\n \n fn check_missing_doc_ty_method(cx: &Context, tm: &ast::TypeMethod) {\n-    check_missing_doc_attrs(cx, tm.id, tm.attrs, tm.span, \"a type method\");\n+    check_missing_doc_attrs(cx, Some(tm.id), tm.attrs, tm.span, \"a type method\");\n }\n \n fn check_missing_doc_struct_field(cx: &Context, sf: &ast::struct_field) {\n     match sf.node.kind {\n         ast::named_field(_, vis) if vis != ast::private =>\n-            check_missing_doc_attrs(cx, cx.cur_struct_def_id, sf.node.attrs,\n+            check_missing_doc_attrs(cx, Some(cx.cur_struct_def_id), sf.node.attrs,\n                                     sf.span, \"a struct field\"),\n         _ => {}\n     }\n }\n \n fn check_missing_doc_variant(cx: &Context, v: &ast::variant) {\n-    check_missing_doc_attrs(cx, v.node.id, v.node.attrs, v.span, \"a variant\");\n+    check_missing_doc_attrs(cx, Some(v.node.id), v.node.attrs, v.span, \"a variant\");\n }\n \n /// Checks for use of items with #[deprecated], #[experimental] and\n@@ -1372,6 +1375,9 @@ pub fn check_crate(tcx: ty::ctxt,\n         });\n \n         check_crate_attrs_usage(cx, crate.attrs);\n+        // since the root module isn't visited as an item (because it isn't an item), warn for it\n+        // here.\n+        check_missing_doc_attrs(cx, None, crate.attrs, crate.span, \"crate\");\n \n         visit::walk_crate(cx, crate, ());\n     });"}, {"sha": "985dcd272719d6484c7cf93ccaeb209c2b3970db", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=2eb22ae2b400c99966dad07145a541ce8c2586fb", "patch": "@@ -130,6 +130,7 @@ pub fn walk_mod<E:Clone, V:Visitor<E>>(visitor: &mut V, module: &_mod, env: E) {\n     for view_item in module.view_items.iter() {\n         visitor.visit_view_item(view_item, env.clone())\n     }\n+\n     for item in module.items.iter() {\n         visitor.visit_item(*item, env.clone())\n     }"}, {"sha": "ca88c260e93e932100bee20a334000eec0c6a6e0", "filename": "src/test/compile-fail/issue-10656.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Ftest%2Fcompile-fail%2Fissue-10656.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Ftest%2Fcompile-fail%2Fissue-10656.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10656.rs?ref=2eb22ae2b400c99966dad07145a541ce8c2586fb", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern: missing documentation for crate\n+\n+#[deny(missing_doc)];\n+#[crate_type=\"lib\"];"}, {"sha": "12d9cbe0dbc5c741b439c261a33cae4108fd0e6e", "filename": "src/test/compile-fail/lint-missing-doc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb22ae2b400c99966dad07145a541ce8c2586fb/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs?ref=2eb22ae2b400c99966dad07145a541ce8c2586fb", "patch": "@@ -14,6 +14,9 @@\n #[feature(globs)];\n #[deny(missing_doc)];\n \n+//! Some garbage docs for the crate here\n+#[doc=\"More garbage\"];\n+\n struct Foo {\n     a: int,\n     priv b: int,"}]}