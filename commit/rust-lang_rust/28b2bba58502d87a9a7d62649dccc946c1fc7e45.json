{"sha": "28b2bba58502d87a9a7d62649dccc946c1fc7e45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YjJiYmE1ODUwMmQ4N2E5YTdkNjI2NDlkY2NjOTQ2YzFmYzdlNDU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-03T11:27:49Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-23T23:00:48Z"}, "message": "Specialize future-incompatibility warning for UNSTABLE_NAME_COLLISION.", "tree": {"sha": "abb1c57361050866c23e6da2d268295bab3b0d1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abb1c57361050866c23e6da2d268295bab3b0d1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b2bba58502d87a9a7d62649dccc946c1fc7e45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlq1hyAACgkQ/vbIBR0O\nATwdChAAhpYndSup/C1Wrf7WIqBW06ws3ULyqeIbUb+9NUNn+DO9MeSdL2bkNWKG\nVcq+UEWjumTcrp9v32S+pCwCrM3nRSxf6JtAvsKScVNCZ6aDbTqpzPYmULIScMxn\njcwxM9z8HATXlg8z2i3/pPiw4CKCyotG+ubr4m9XadwAXPcbcXE/vZV0shGKeNNG\niwkVOp1jaOHsULlpAWx7PchaoTIi0BEy0EnZT/nAj1MUE3RmaxgGiiEDMaZiMc21\nVlTvYUlloVz9C3US1NQtP6Sl3TYLCK3wZjyHAdDtAru0QMiFKQd6L64Jh1XhuhQo\nsddKg/FMhflBwXIUzhJgQLYgmebZdussC69bfcNcRsP6DsoBmMlAbyGmD7jIxWTm\nsToXUXQ0A6CoFK3/5WUYyHcVDrqZ6WBphWPUIrLsPF8vDTicLS4mtomn5kO8avlE\nET9Z7ysVNZkXzgyh5YHwTeP3ZU5SHlr3dT+sqmZ8jc7QKUhrc9N0VHZlnnDFt0kZ\nmeyFbMq7wi7em20GCimH8sn93bV0jZe08SyKdOEMEKwIaqj56/QnQp3v6aJeKxx/\naeWfJZn8WPxBr+Aeb58AT4TOobI97JDRlhL5wHc9Tn7mRQXD/y5Yv3jGV1b8Qatr\nagxZSBthkZYwi3b0CY2nDoF0J+uU7rIuzLzD/eAEmTHfk/Sp8QM=\n=hoeK\n-----END PGP SIGNATURE-----", "payload": "tree abb1c57361050866c23e6da2d268295bab3b0d1d\nparent 023274483e5b61202c623352452cf17fcf455a6d\nauthor kennytm <kennytm@gmail.com> 1520076469 +0800\ncommitter kennytm <kennytm@gmail.com> 1521846048 +0800\n\nSpecialize future-incompatibility warning for UNSTABLE_NAME_COLLISION.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b2bba58502d87a9a7d62649dccc946c1fc7e45", "html_url": "https://github.com/rust-lang/rust/commit/28b2bba58502d87a9a7d62649dccc946c1fc7e45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b2bba58502d87a9a7d62649dccc946c1fc7e45/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "023274483e5b61202c623352452cf17fcf455a6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/023274483e5b61202c623352452cf17fcf455a6d", "html_url": "https://github.com/rust-lang/rust/commit/023274483e5b61202c623352452cf17fcf455a6d"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "1497be2d5ba0d35448feeed03c0ca4dcce1a95fd", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=28b2bba58502d87a9a7d62649dccc946c1fc7e45", "patch": "@@ -498,15 +498,21 @@ pub fn struct_lint_level<'a>(sess: &'a Session,\n \n     // Check for future incompatibility lints and issue a stronger warning.\n     let lints = sess.lint_store.borrow();\n-    if let Some(future_incompatible) = lints.future_incompatible(LintId::of(lint)) {\n-        let future = if let Some(edition) = future_incompatible.edition {\n-            format!(\"the {} edition\", edition)\n+    let lint_id = LintId::of(lint);\n+    if let Some(future_incompatible) = lints.future_incompatible(lint_id) {\n+        const STANDARD_MESSAGE: &str =\n+            \"this was previously accepted by the compiler but is being phased out; \\\n+             it will become a hard error\";\n+\n+        let explanation = if lint_id == LintId::of(::lint::builtin::UNSTABLE_NAME_COLLISION) {\n+            \"once this method is added to the standard library, \\\n+             there will be ambiguity here, which will cause a hard error!\"\n+                .to_owned()\n+        } else if let Some(edition) = future_incompatible.edition {\n+            format!(\"{} in the {} edition!\", STANDARD_MESSAGE, edition)\n         } else {\n-            \"a future release\".to_owned()\n+            format!(\"{} in a future release!\", STANDARD_MESSAGE)\n         };\n-        let explanation = format!(\"this was previously accepted by the compiler \\\n-                                   but is being phased out; \\\n-                                   it will become a hard error in {}!\", future);\n         let citation = format!(\"for more information, see {}\",\n                                future_incompatible.reference);\n         err.warn(&explanation);"}, {"sha": "64d561ab96b09a37e4465e7aa21e23e2396e438e", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=28b2bba58502d87a9a7d62649dccc946c1fc7e45", "patch": "@@ -1042,7 +1042,7 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n             lint::builtin::UNSTABLE_NAME_COLLISION,\n             self.fcx.body_id,\n             self.span,\n-            \"a method with this name will be added to the standard library in the future\",\n+            \"a method with this name may be added to the standard library in the future\",\n         );\n \n         // FIXME: This should be a `span_suggestion` instead of `help`. However `self.span` only"}, {"sha": "816c443a06c21c6c38fb9600fde1173b0c082636", "filename": "src/test/ui/inference_unstable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Ftest%2Fui%2Finference_unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Ftest%2Fui%2Finference_unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference_unstable.rs?ref=28b2bba58502d87a9a7d62649dccc946c1fc7e45", "patch": "@@ -24,6 +24,6 @@ use inference_unstable_itertools::IpuItertools;\n \n fn main() {\n     assert_eq!('x'.ipu_flatten(), 1);\n-    //~^ WARN a method with this name will be added to the standard library in the future\n-    //~^^ WARN it will become a hard error in a future release\n+    //~^ WARN a method with this name may be added to the standard library in the future\n+    //~^^ WARN once this method is added to the standard library, there will be ambiguity here\n }"}, {"sha": "21b1bdbf17910e11041ca10d0fc5973f2c9fcf04", "filename": "src/test/ui/inference_unstable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Ftest%2Fui%2Finference_unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28b2bba58502d87a9a7d62649dccc946c1fc7e45/src%2Ftest%2Fui%2Finference_unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference_unstable.stderr?ref=28b2bba58502d87a9a7d62649dccc946c1fc7e45", "patch": "@@ -1,11 +1,11 @@\n-warning: a method with this name will be added to the standard library in the future\n+warning: a method with this name may be added to the standard library in the future\n   --> $DIR/inference_unstable.rs:26:20\n    |\n LL |     assert_eq!('x'.ipu_flatten(), 1);\n    |                    ^^^^^^^^^^^\n    |\n    = note: #[warn(unstable_name_collision)] on by default\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = warning: once this method is added to the standard library, there will be ambiguity here, which will cause a hard error!\n    = note: for more information, see pr #48552 <https://github.com/rust-lang/rust/pull/48552>\n    = help: call with fully qualified syntax `inference_unstable_itertools::IpuItertools::ipu_flatten(...)` to keep using the current method\n    = note: add #![feature(ipu_flatten)] to the crate attributes to enable `inference_unstable_iterator::IpuIterator::ipu_flatten`"}]}