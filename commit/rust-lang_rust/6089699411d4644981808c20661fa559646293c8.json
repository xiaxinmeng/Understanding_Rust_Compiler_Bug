{"sha": "6089699411d4644981808c20661fa559646293c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwODk2OTk0MTFkNDY0NDk4MTgwOGMyMDY2MWZhNTU5NjQ2MjkzYzg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-17T16:33:54Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-17T19:50:24Z"}, "message": "rollup merge of #19764: lifthrasiir/that-stray-nul\n\nFixes #19719.", "tree": {"sha": "17c1c5e1b2db7519664b88bd445740c751dc7114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17c1c5e1b2db7519664b88bd445740c751dc7114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6089699411d4644981808c20661fa559646293c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6089699411d4644981808c20661fa559646293c8", "html_url": "https://github.com/rust-lang/rust/commit/6089699411d4644981808c20661fa559646293c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6089699411d4644981808c20661fa559646293c8/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc1b4379eb63363248765a20cd96b38e923236c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc1b4379eb63363248765a20cd96b38e923236c5", "html_url": "https://github.com/rust-lang/rust/commit/fc1b4379eb63363248765a20cd96b38e923236c5"}, {"sha": "577f742d7a8a593e8134056259f195a7c897eeb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/577f742d7a8a593e8134056259f195a7c897eeb9", "html_url": "https://github.com/rust-lang/rust/commit/577f742d7a8a593e8134056259f195a7c897eeb9"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "bd634a583824d83c3ed749721f32593a67b6cf8b", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/6089699411d4644981808c20661fa559646293c8/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6089699411d4644981808c20661fa559646293c8/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=6089699411d4644981808c20661fa559646293c8", "patch": "@@ -367,8 +367,8 @@ fn escape_str(writer: &mut io::Writer, v: &str) -> Result<(), io::IoError> {\n \n fn escape_char(writer: &mut io::Writer, v: char) -> Result<(), io::IoError> {\n     let mut buf = [0, .. 4];\n-    v.encode_utf8(&mut buf);\n-    escape_bytes(writer, &mut buf)\n+    let len = v.encode_utf8(&mut buf).unwrap();\n+    escape_bytes(writer, buf[mut ..len])\n }\n \n fn spaces(wr: &mut io::Writer, mut n: uint) -> Result<(), io::IoError> {\n@@ -2729,37 +2729,39 @@ mod tests {\n         );\n     }\n \n+    macro_rules! check_encoder_for_simple(\n+        ($value:expr, $expected:expr) => ({\n+            let s = with_str_writer(|writer| {\n+                let mut encoder = Encoder::new(writer);\n+                $value.encode(&mut encoder).unwrap();\n+            });\n+            assert_eq!(s, $expected);\n+\n+            let s = with_str_writer(|writer| {\n+                let mut encoder = PrettyEncoder::new(writer);\n+                $value.encode(&mut encoder).unwrap();\n+            });\n+            assert_eq!(s, $expected);\n+        })\n+    )\n+\n     #[test]\n     fn test_write_some() {\n-        let value = Some(\"jodhpurs\".into_string());\n-        let s = with_str_writer(|writer| {\n-            let mut encoder = Encoder::new(writer);\n-            value.encode(&mut encoder).unwrap();\n-        });\n-        assert_eq!(s, \"\\\"jodhpurs\\\"\");\n-\n-        let value = Some(\"jodhpurs\".into_string());\n-        let s = with_str_writer(|writer| {\n-            let mut encoder = PrettyEncoder::new(writer);\n-            value.encode(&mut encoder).unwrap();\n-        });\n-        assert_eq!(s, \"\\\"jodhpurs\\\"\");\n+        check_encoder_for_simple!(Some(\"jodhpurs\".to_string()), \"\\\"jodhpurs\\\"\");\n     }\n \n     #[test]\n     fn test_write_none() {\n-        let value: Option<string::String> = None;\n-        let s = with_str_writer(|writer| {\n-            let mut encoder = Encoder::new(writer);\n-            value.encode(&mut encoder).unwrap();\n-        });\n-        assert_eq!(s, \"null\");\n+        check_encoder_for_simple!(None::<string::String>, \"null\");\n+    }\n \n-        let s = with_str_writer(|writer| {\n-            let mut encoder = Encoder::new(writer);\n-            value.encode(&mut encoder).unwrap();\n-        });\n-        assert_eq!(s, \"null\");\n+    #[test]\n+    fn test_write_char() {\n+        check_encoder_for_simple!('a', \"\\\"a\\\"\");\n+        check_encoder_for_simple!('\\t', \"\\\"\\\\t\\\"\");\n+        check_encoder_for_simple!('\\u00a0', \"\\\"\\u00a0\\\"\");\n+        check_encoder_for_simple!('\\uabcd', \"\\\"\\uabcd\\\"\");\n+        check_encoder_for_simple!('\\U0010ffff', \"\\\"\\U0010ffff\\\"\");\n     }\n \n     #[test]"}]}