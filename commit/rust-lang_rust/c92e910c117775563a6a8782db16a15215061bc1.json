{"sha": "c92e910c117775563a6a8782db16a15215061bc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MmU5MTBjMTE3Nzc1NTYzYTZhODc4MmRiMTZhMTUyMTUwNjFiYzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-21T23:08:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-21T23:08:24Z"}, "message": "Auto merge of #31810 - gandro:netbsd-fix-stat, r=alexcrichton\n\nSome struct members have a slighty different name on NetBSD. This has been fixed in the libc crate, but not in libstd, breaking the NetBSD build. Related C struct definition: http://nxr.netbsd.org/xref/src/sys/sys/stat.h?r=1.68#59\n\nThis also removes the broken `st_spare()` from MetadataExt, since it is private field reserved for future use.\n\n@dhuseby In case this conflicts with any of your pending patches, feel free to intervene - I'm happy to withdraw this PR.\n\nr? @alexcrichton", "tree": {"sha": "41106936589eecd2ec05eccbe9506032abf68c2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41106936589eecd2ec05eccbe9506032abf68c2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c92e910c117775563a6a8782db16a15215061bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c92e910c117775563a6a8782db16a15215061bc1", "html_url": "https://github.com/rust-lang/rust/commit/c92e910c117775563a6a8782db16a15215061bc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c92e910c117775563a6a8782db16a15215061bc1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f93a62b68def853ee86dec4e27fbc4068c25dd32", "url": "https://api.github.com/repos/rust-lang/rust/commits/f93a62b68def853ee86dec4e27fbc4068c25dd32", "html_url": "https://github.com/rust-lang/rust/commit/f93a62b68def853ee86dec4e27fbc4068c25dd32"}, {"sha": "028106c434dfe428d111c3c532f6995e16e26198", "url": "https://api.github.com/repos/rust-lang/rust/commits/028106c434dfe428d111c3c532f6995e16e26198", "html_url": "https://github.com/rust-lang/rust/commit/028106c434dfe428d111c3c532f6995e16e26198"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "cd7d5fafd1c85d82afcc92a79bd13bf37d8eedcf", "filename": "src/libstd/os/netbsd/fs.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c92e910c117775563a6a8782db16a15215061bc1/src%2Flibstd%2Fos%2Fnetbsd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c92e910c117775563a6a8782db16a15215061bc1/src%2Flibstd%2Fos%2Fnetbsd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fnetbsd%2Ffs.rs?ref=c92e910c117775563a6a8782db16a15215061bc1", "patch": "@@ -74,8 +74,6 @@ pub trait MetadataExt {\n     fn st_flags(&self) -> u32;\n     #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n     fn st_gen(&self) -> u32;\n-    #[stable(feature = \"metadata_ext2\", since = \"1.8.0\")]\n-    fn st_spare(&self) -> u32;\n }\n \n #[stable(feature = \"metadata_ext\", since = \"1.1.0\")]\n@@ -115,25 +113,25 @@ impl MetadataExt for Metadata {\n         self.as_inner().as_inner().st_atime as i64\n     }\n     fn st_atime_nsec(&self) -> i64 {\n-        self.as_inner().as_inner().st_atime_nsec as i64\n+        self.as_inner().as_inner().st_atimensec as i64\n     }\n     fn st_mtime(&self) -> i64 {\n         self.as_inner().as_inner().st_mtime as i64\n     }\n     fn st_mtime_nsec(&self) -> i64 {\n-        self.as_inner().as_inner().st_mtime_nsec as i64\n+        self.as_inner().as_inner().st_mtimensec as i64\n     }\n     fn st_ctime(&self) -> i64 {\n         self.as_inner().as_inner().st_ctime as i64\n     }\n     fn st_ctime_nsec(&self) -> i64 {\n-        self.as_inner().as_inner().st_ctime_nsec as i64\n+        self.as_inner().as_inner().st_ctimensec as i64\n     }\n     fn st_birthtime(&self) -> i64 {\n         self.as_inner().as_inner().st_birthtime as i64\n     }\n     fn st_birthtime_nsec(&self) -> i64 {\n-        self.as_inner().as_inner().st_birthtime_nsec as i64\n+        self.as_inner().as_inner().st_birthtimensec as i64\n     }\n     fn st_blksize(&self) -> u64 {\n         self.as_inner().as_inner().st_blksize as u64\n@@ -147,8 +145,5 @@ impl MetadataExt for Metadata {\n     fn st_flags(&self) -> u32 {\n         self.as_inner().as_inner().st_flags as u32\n     }\n-    fn st_spare(&self) -> u32 {\n-        self.as_inner().as_inner().st_spare as u32\n-    }\n }\n "}, {"sha": "74393696e5e0a03cb236e15233da9aa891765507", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c92e910c117775563a6a8782db16a15215061bc1/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c92e910c117775563a6a8782db16a15215061bc1/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=c92e910c117775563a6a8782db16a15215061bc1", "patch": "@@ -119,7 +119,31 @@ impl FileAttr {\n     }\n }\n \n-#[cfg(not(any(target_os = \"ios\", target_os = \"macos\")))]\n+#[cfg(target_os = \"netbsd\")]\n+impl FileAttr {\n+    pub fn modified(&self) -> io::Result<SystemTime> {\n+        Ok(SystemTime::from(libc::timespec {\n+            tv_sec: self.stat.st_mtime as libc::time_t,\n+            tv_nsec: self.stat.st_mtimensec as libc::c_long,\n+        }))\n+    }\n+\n+    pub fn accessed(&self) -> io::Result<SystemTime> {\n+        Ok(SystemTime::from(libc::timespec {\n+            tv_sec: self.stat.st_atime as libc::time_t,\n+            tv_nsec: self.stat.st_atimensec as libc::c_long,\n+        }))\n+    }\n+\n+    pub fn created(&self) -> io::Result<SystemTime> {\n+        Ok(SystemTime::from(libc::timespec {\n+            tv_sec: self.stat.st_birthtime as libc::time_t,\n+            tv_nsec: self.stat.st_birthtimensec as libc::c_long,\n+        }))\n+    }\n+}\n+\n+#[cfg(not(any(target_os = \"ios\", target_os = \"macos\", target_os = \"netbsd\")))]\n impl FileAttr {\n     pub fn modified(&self) -> io::Result<SystemTime> {\n         Ok(SystemTime::from(libc::timespec {"}]}