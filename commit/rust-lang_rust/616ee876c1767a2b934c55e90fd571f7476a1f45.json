{"sha": "616ee876c1767a2b934c55e90fd571f7476a1f45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNmVlODc2YzE3NjdhMmI5MzRjNTVlOTBmZDU3MWY3NDc2YTFmNDU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-03-26T21:26:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-26T21:26:45Z"}, "message": "Rollup merge of #59427 - czipperz:non_null_doc_links, r=Mark-Simulacrum\n\nLink to PhantomData in NonNull documentation", "tree": {"sha": "6fd0c15a7f18950773ee177b2a6b60fea0dfb030", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fd0c15a7f18950773ee177b2a6b60fea0dfb030"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/616ee876c1767a2b934c55e90fd571f7476a1f45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcmpkVCRBK7hj4Ov3rIwAAdHIIAC4ZalVwNagRxGvRU1Ew0wAh\nvKX1u7vkNK2LzNba1j9zgqioxZf2M/yK7EFAcGDVub5LWNrCsdpwqfJNpSsFEZRZ\niLV/sGlrF04Cb+xu/RmzXbxIwAzy7AjcFDeb5wL+iSQS7eqHv0MBo/su9Hlm4dgU\nLfPh5bcEcQxnvZzXp/+ZuuM6rQ6fZWdkFiygA2j29pPmPw6ZuG7XiWzBa6tVxzn4\noLZ1XQPAPqHHt90cl2i/bLqIDiY5tp1+ISSPB29NUniv+YgCehJ8FcSnBkh/Dg6b\nTw+WHcL/JprQDSHqwZV5a5YKoMZUNMlq0ySX2Z9xEUhKfg2sR+zCN84CmhojVus=\n=sqZg\n-----END PGP SIGNATURE-----\n", "payload": "tree 6fd0c15a7f18950773ee177b2a6b60fea0dfb030\nparent 07c83488d560e064e26844afeb551100d2ded832\nparent fd42918a41c0093ac8db6bcf757f906c6adeaffa\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1553635605 +0100\ncommitter GitHub <noreply@github.com> 1553635605 +0100\n\nRollup merge of #59427 - czipperz:non_null_doc_links, r=Mark-Simulacrum\n\nLink to PhantomData in NonNull documentation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/616ee876c1767a2b934c55e90fd571f7476a1f45", "html_url": "https://github.com/rust-lang/rust/commit/616ee876c1767a2b934c55e90fd571f7476a1f45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/616ee876c1767a2b934c55e90fd571f7476a1f45/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07c83488d560e064e26844afeb551100d2ded832", "url": "https://api.github.com/repos/rust-lang/rust/commits/07c83488d560e064e26844afeb551100d2ded832", "html_url": "https://github.com/rust-lang/rust/commit/07c83488d560e064e26844afeb551100d2ded832"}, {"sha": "fd42918a41c0093ac8db6bcf757f906c6adeaffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd42918a41c0093ac8db6bcf757f906c6adeaffa", "html_url": "https://github.com/rust-lang/rust/commit/fd42918a41c0093ac8db6bcf757f906c6adeaffa"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "1897caa5aa53f520318b8ec9b468105ed2afb5e8", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/616ee876c1767a2b934c55e90fd571f7476a1f45/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/616ee876c1767a2b934c55e90fd571f7476a1f45/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=616ee876c1767a2b934c55e90fd571f7476a1f45", "patch": "@@ -2869,10 +2869,10 @@ impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n /// However the pointer may still dangle if it isn't dereferenced.\n ///\n /// Unlike `*mut T`, `NonNull<T>` is covariant over `T`. If this is incorrect\n-/// for your use case, you should include some PhantomData in your type to\n+/// for your use case, you should include some [`PhantomData`] in your type to\n /// provide invariance, such as `PhantomData<Cell<T>>` or `PhantomData<&'a mut T>`.\n /// Usually this won't be necessary; covariance is correct for most safe abstractions,\n-/// such as Box, Rc, Arc, Vec, and LinkedList. This is the case because they\n+/// such as `Box`, `Rc`, `Arc`, `Vec`, and `LinkedList`. This is the case because they\n /// provide a public API that follows the normal shared XOR mutable rules of Rust.\n ///\n /// Notice that `NonNull<T>` has a `From` instance for `&T`. However, this does\n@@ -2883,6 +2883,7 @@ impl<'a, T: ?Sized> From<NonNull<T>> for Unique<T> {\n /// it is your responsibility to ensure that `as_mut` is never called, and `as_ptr`\n /// is never used for mutation.\n ///\n+/// [`PhantomData`]: ../marker/struct.PhantomData.html\n /// [`UnsafeCell<T>`]: ../cell/struct.UnsafeCell.html\n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n #[repr(transparent)]"}]}