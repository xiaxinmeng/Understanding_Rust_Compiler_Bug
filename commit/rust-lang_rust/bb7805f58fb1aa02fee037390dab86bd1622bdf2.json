{"sha": "bb7805f58fb1aa02fee037390dab86bd1622bdf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNzgwNWY1OGZiMWFhMDJmZWUwMzczOTBkYWI4NmJkMTYyMmJkZjI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-03T02:45:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-03T16:31:46Z"}, "message": "rollup merge of #18527 : bkoropoff/issue-18490", "tree": {"sha": "c0fbcc2ce3eb5d8059ec6496514de358ff615a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0fbcc2ce3eb5d8059ec6496514de358ff615a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb7805f58fb1aa02fee037390dab86bd1622bdf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7805f58fb1aa02fee037390dab86bd1622bdf2", "html_url": "https://github.com/rust-lang/rust/commit/bb7805f58fb1aa02fee037390dab86bd1622bdf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb7805f58fb1aa02fee037390dab86bd1622bdf2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f00bee168e854c210f13df6d1a41c389b55c51f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f00bee168e854c210f13df6d1a41c389b55c51f", "html_url": "https://github.com/rust-lang/rust/commit/6f00bee168e854c210f13df6d1a41c389b55c51f"}, {"sha": "107af281037e77fbb322b63895fa68dadac61e53", "url": "https://api.github.com/repos/rust-lang/rust/commits/107af281037e77fbb322b63895fa68dadac61e53", "html_url": "https://github.com/rust-lang/rust/commit/107af281037e77fbb322b63895fa68dadac61e53"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "87b0aed4ac49c68bb4a8faf26dbd37eb0fb45f06", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb7805f58fb1aa02fee037390dab86bd1622bdf2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7805f58fb1aa02fee037390dab86bd1622bdf2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=bb7805f58fb1aa02fee037390dab86bd1622bdf2", "patch": "@@ -187,7 +187,11 @@ pub fn check_object_safety(tcx: &ty::ctxt, object_trait: &ty::TyTrait, span: Spa\n                                    receiver through a trait object\", method_name))\n             }\n \n-            ty::StaticExplicitSelfCategory |\n+            ty::StaticExplicitSelfCategory => {\n+                // Static methods are always object-safe since they\n+                // can't be called through a trait object\n+                return msgs\n+            }\n             ty::ByReferenceExplicitSelfCategory(..) |\n             ty::ByBoxExplicitSelfCategory => {}\n         }"}, {"sha": "929cb9e7f17594631f5df6f52ea18d62cc1e256c", "filename": "src/test/run-pass/trait-object-safety.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bb7805f58fb1aa02fee037390dab86bd1622bdf2/src%2Ftest%2Frun-pass%2Ftrait-object-safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7805f58fb1aa02fee037390dab86bd1622bdf2/src%2Ftest%2Frun-pass%2Ftrait-object-safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-object-safety.rs?ref=bb7805f58fb1aa02fee037390dab86bd1622bdf2", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that object-safe methods are identified as such.  Also\n+// acts as a regression test for #18490\n+\n+trait Tr {\n+    // Static methods are always safe regardless of other rules\n+    fn new() -> Self;\n+}\n+\n+struct St;\n+\n+impl Tr for St {\n+    fn new() -> St { St }\n+}\n+\n+fn main() {\n+    &St as &Tr;\n+}"}]}