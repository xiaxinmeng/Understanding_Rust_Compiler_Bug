{"sha": "4dc5697bd2799916f342810d054f3bcc00471689", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYzU2OTdiZDI3OTk5MTZmMzQyODEwZDA1NGYzYmNjMDA0NzE2ODk=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril@gmail.com", "date": "2019-09-23T18:41:38Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-05T11:36:22Z"}, "message": "Add some slice-pattern exhaustiveness tests", "tree": {"sha": "969c0af5d531707e8f527e5ebccc320425291981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/969c0af5d531707e8f527e5ebccc320425291981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dc5697bd2799916f342810d054f3bcc00471689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc5697bd2799916f342810d054f3bcc00471689", "html_url": "https://github.com/rust-lang/rust/commit/4dc5697bd2799916f342810d054f3bcc00471689", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dc5697bd2799916f342810d054f3bcc00471689/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e4da3caadc61fab2cfcffebcbfdd72fbcee62b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e4da3caadc61fab2cfcffebcbfdd72fbcee62b7", "html_url": "https://github.com/rust-lang/rust/commit/2e4da3caadc61fab2cfcffebcbfdd72fbcee62b7"}], "stats": {"total": 213, "additions": 213, "deletions": 0}, "files": [{"sha": "0493646ff3bba69099d0c7116c1e0fd22b5c094a", "filename": "src/test/ui/pattern/usefulness/slice-patterns.rs", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/4dc5697bd2799916f342810d054f3bcc00471689/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc5697bd2799916f342810d054f3bcc00471689/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns.rs?ref=4dc5697bd2799916f342810d054f3bcc00471689", "patch": "@@ -0,0 +1,96 @@\n+#![feature(slice_patterns)]\n+#![deny(unreachable_patterns)]\n+\n+fn main() {\n+    let s: &[bool] = &[true; 0];\n+    let s0: &[bool; 0] = &[];\n+    let s1: &[bool; 1] = &[false; 1];\n+    let s2: &[bool; 2] = &[false; 2];\n+    let s3: &[bool; 3] = &[false; 3];\n+\n+    let [] = s0;\n+    let [_] = s1;\n+    let [_, _] = s2;\n+\n+    let [..] = s;\n+    let [..] = s0;\n+    let [..] = s1;\n+    let [..] = s2;\n+    let [..] = s3;\n+\n+    let [_, _, ..] = s2;\n+    let [_, .., _] = s2;\n+    let [.., _, _] = s2;\n+\n+    match s1 {\n+        [true, ..] => {}\n+        [.., false] => {}\n+    }\n+    match s2 {\n+    //~^ ERROR `&[false, true]` not covered\n+        [true, ..] => {}\n+        [.., false] => {}\n+    }\n+    match s3 {\n+    //~^ ERROR `&[false, _, true]` not covered\n+        [true, ..] => {}\n+        [.., false] => {}\n+    }\n+    match s {\n+    //~^ ERROR `&[false, true]` not covered\n+        [] => {}\n+        [true, ..] => {}\n+        [.., false] => {}\n+    }\n+\n+    match s3 {\n+    //~^ ERROR `&[false, _, _]` not covered\n+        [true, .., true] => {}\n+    }\n+    match s {\n+    //~^ ERROR `&[_]` not covered\n+        [] => {}\n+    }\n+    match s {\n+    //~^ ERROR `&[_, _]` not covered\n+        [] => {}\n+        [_] => {}\n+    }\n+    match s {\n+    //~^ ERROR `&[false]` not covered\n+        [] => {}\n+        [true, ..] => {}\n+    }\n+    match s {\n+    //~^ ERROR `&[false, _]` not covered\n+        [] => {}\n+        [_] => {}\n+        [true, ..] => {}\n+    }\n+    match s {\n+    //~^ ERROR `&[_, false]` not covered\n+        [] => {}\n+        [_] => {}\n+        [.., true] => {}\n+    }\n+\n+    match s {\n+        [true, ..] => {}\n+        [true, ..] => {} //~ ERROR unreachable pattern\n+        [true] => {} //~ ERROR unreachable pattern\n+        [..] => {}\n+    }\n+    match s {\n+        [.., true] => {}\n+        [.., true] => {} //~ ERROR unreachable pattern\n+        [true] => {} //~ ERROR unreachable pattern\n+        [..] => {}\n+    }\n+    match s {\n+        [false, .., true] => {}\n+        [false, .., true] => {} //~ ERROR unreachable pattern\n+        [false, true] => {} //~ ERROR unreachable pattern\n+        [false] => {}\n+        [..] => {}\n+    }\n+}"}, {"sha": "18c73330fcdc14eb2a985b3fa8184c531c8d9c62", "filename": "src/test/ui/pattern/usefulness/slice-patterns.stderr", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/4dc5697bd2799916f342810d054f3bcc00471689/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4dc5697bd2799916f342810d054f3bcc00471689/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns.stderr?ref=4dc5697bd2799916f342810d054f3bcc00471689", "patch": "@@ -0,0 +1,117 @@\n+error[E0004]: non-exhaustive patterns: `&[false, true]` not covered\n+  --> $DIR/slice-patterns.rs:29:11\n+   |\n+LL |     match s2 {\n+   |           ^^ pattern `&[false, true]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[false, _, true]` not covered\n+  --> $DIR/slice-patterns.rs:34:11\n+   |\n+LL |     match s3 {\n+   |           ^^ pattern `&[false, _, true]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[false, true]` not covered\n+  --> $DIR/slice-patterns.rs:39:11\n+   |\n+LL |     match s {\n+   |           ^ pattern `&[false, true]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[false, _, _]` not covered\n+  --> $DIR/slice-patterns.rs:46:11\n+   |\n+LL |     match s3 {\n+   |           ^^ pattern `&[false, _, _]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[_]` not covered\n+  --> $DIR/slice-patterns.rs:50:11\n+   |\n+LL |     match s {\n+   |           ^ pattern `&[_]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[_, _]` not covered\n+  --> $DIR/slice-patterns.rs:54:11\n+   |\n+LL |     match s {\n+   |           ^ pattern `&[_, _]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[false]` not covered\n+  --> $DIR/slice-patterns.rs:59:11\n+   |\n+LL |     match s {\n+   |           ^ pattern `&[false]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[false, _]` not covered\n+  --> $DIR/slice-patterns.rs:64:11\n+   |\n+LL |     match s {\n+   |           ^ pattern `&[false, _]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error[E0004]: non-exhaustive patterns: `&[_, false]` not covered\n+  --> $DIR/slice-patterns.rs:70:11\n+   |\n+LL |     match s {\n+   |           ^ pattern `&[_, false]` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error: unreachable pattern\n+  --> $DIR/slice-patterns.rs:79:9\n+   |\n+LL |         [true, ..] => {}\n+   |         ^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/slice-patterns.rs:2:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-patterns.rs:80:9\n+   |\n+LL |         [true] => {}\n+   |         ^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-patterns.rs:85:9\n+   |\n+LL |         [.., true] => {}\n+   |         ^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-patterns.rs:86:9\n+   |\n+LL |         [true] => {}\n+   |         ^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-patterns.rs:91:9\n+   |\n+LL |         [false, .., true] => {}\n+   |         ^^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/slice-patterns.rs:92:9\n+   |\n+LL |         [false, true] => {}\n+   |         ^^^^^^^^^^^^^\n+\n+error: aborting due to 15 previous errors\n+\n+For more information about this error, try `rustc --explain E0004`."}]}