{"sha": "892063ed2d6362c8aea114b03468cc4d0029210b", "node_id": "C_kwDOAAsO6NoAKDg5MjA2M2VkMmQ2MzYyYzhhZWExMTRiMDM0NjhjYzRkMDAyOTIxMGI", "commit": {"author": {"name": "John Kugelman", "email": "john@kugelman.name", "date": "2021-10-11T20:15:50Z"}, "committer": {"name": "John Kugelman", "email": "john@kugelman.name", "date": "2021-10-30T23:25:12Z"}, "message": "Add #[must_use] to len and is_empty", "tree": {"sha": "36baf59c156b71cf2f45121912920894b5b3f530", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36baf59c156b71cf2f45121912920894b5b3f530"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/892063ed2d6362c8aea114b03468cc4d0029210b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/892063ed2d6362c8aea114b03468cc4d0029210b", "html_url": "https://github.com/rust-lang/rust/commit/892063ed2d6362c8aea114b03468cc4d0029210b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/892063ed2d6362c8aea114b03468cc4d0029210b/comments", "author": {"login": "jkugelman", "id": 4551859, "node_id": "MDQ6VXNlcjQ1NTE4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/4551859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkugelman", "html_url": "https://github.com/jkugelman", "followers_url": "https://api.github.com/users/jkugelman/followers", "following_url": "https://api.github.com/users/jkugelman/following{/other_user}", "gists_url": "https://api.github.com/users/jkugelman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkugelman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkugelman/subscriptions", "organizations_url": "https://api.github.com/users/jkugelman/orgs", "repos_url": "https://api.github.com/users/jkugelman/repos", "events_url": "https://api.github.com/users/jkugelman/events{/privacy}", "received_events_url": "https://api.github.com/users/jkugelman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jkugelman", "id": 4551859, "node_id": "MDQ6VXNlcjQ1NTE4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/4551859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkugelman", "html_url": "https://github.com/jkugelman", "followers_url": "https://api.github.com/users/jkugelman/followers", "following_url": "https://api.github.com/users/jkugelman/following{/other_user}", "gists_url": "https://api.github.com/users/jkugelman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkugelman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkugelman/subscriptions", "organizations_url": "https://api.github.com/users/jkugelman/orgs", "repos_url": "https://api.github.com/users/jkugelman/repos", "events_url": "https://api.github.com/users/jkugelman/events{/privacy}", "received_events_url": "https://api.github.com/users/jkugelman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cf4984872e1ac047b4e2df52fe0f6faa82716c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf4984872e1ac047b4e2df52fe0f6faa82716c3", "html_url": "https://github.com/rust-lang/rust/commit/5cf4984872e1ac047b4e2df52fe0f6faa82716c3"}], "stats": {"total": 76, "additions": 39, "deletions": 37}, "files": [{"sha": "90a6eef75261f505c6fd517b1280c548581f2d8e", "filename": "tests/ui/iter_count.fixed", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/892063ed2d6362c8aea114b03468cc4d0029210b/tests%2Fui%2Fiter_count.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/892063ed2d6362c8aea114b03468cc4d0029210b/tests%2Fui%2Fiter_count.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_count.fixed?ref=892063ed2d6362c8aea114b03468cc4d0029210b", "patch": "@@ -33,6 +33,7 @@ impl HasIter {\n     }\n }\n \n+#[allow(unused_must_use)]\n fn main() {\n     let mut vec = vec![0, 1, 2, 3];\n     let mut boxed_slice: Box<[u8]> = Box::new([0, 1, 2, 3]);\n@@ -50,7 +51,7 @@ fn main() {\n     linked_list.push_back(1);\n     binary_heap.push(1);\n \n-    let _ = &vec[..].len();\n+    &vec[..].len();\n     vec.len();\n     boxed_slice.len();\n     vec_deque.len();\n@@ -62,13 +63,13 @@ fn main() {\n     binary_heap.len();\n \n     vec.len();\n-    let _ = &vec[..].len();\n+    &vec[..].len();\n     vec_deque.len();\n     hash_map.len();\n     b_tree_map.len();\n     linked_list.len();\n \n-    let _ = &vec[..].len();\n+    &vec[..].len();\n     vec.len();\n     vec_deque.len();\n     hash_set.len();"}, {"sha": "6681a480a28c817472eb5bdb1976bb5a948cd61b", "filename": "tests/ui/iter_count.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/892063ed2d6362c8aea114b03468cc4d0029210b/tests%2Fui%2Fiter_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/892063ed2d6362c8aea114b03468cc4d0029210b/tests%2Fui%2Fiter_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_count.rs?ref=892063ed2d6362c8aea114b03468cc4d0029210b", "patch": "@@ -33,6 +33,7 @@ impl HasIter {\n     }\n }\n \n+#[allow(unused_must_use)]\n fn main() {\n     let mut vec = vec![0, 1, 2, 3];\n     let mut boxed_slice: Box<[u8]> = Box::new([0, 1, 2, 3]);\n@@ -50,7 +51,7 @@ fn main() {\n     linked_list.push_back(1);\n     binary_heap.push(1);\n \n-    let _ = &vec[..].iter().count();\n+    &vec[..].iter().count();\n     vec.iter().count();\n     boxed_slice.iter().count();\n     vec_deque.iter().count();\n@@ -62,13 +63,13 @@ fn main() {\n     binary_heap.iter().count();\n \n     vec.iter_mut().count();\n-    let _ = &vec[..].iter_mut().count();\n+    &vec[..].iter_mut().count();\n     vec_deque.iter_mut().count();\n     hash_map.iter_mut().count();\n     b_tree_map.iter_mut().count();\n     linked_list.iter_mut().count();\n \n-    let _ = &vec[..].into_iter().count();\n+    &vec[..].into_iter().count();\n     vec.into_iter().count();\n     vec_deque.into_iter().count();\n     hash_set.into_iter().count();"}, {"sha": "2e3d7fc35de9c0de17d3f712bbc87a892c90dbad", "filename": "tests/ui/iter_count.stderr", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/892063ed2d6362c8aea114b03468cc4d0029210b/tests%2Fui%2Fiter_count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/892063ed2d6362c8aea114b03468cc4d0029210b/tests%2Fui%2Fiter_count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_count.stderr?ref=892063ed2d6362c8aea114b03468cc4d0029210b", "patch": "@@ -1,151 +1,151 @@\n error: called `.iter().count()` on a `slice`\n-  --> $DIR/iter_count.rs:53:14\n+  --> $DIR/iter_count.rs:54:6\n    |\n-LL |     let _ = &vec[..].iter().count();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n+LL |     &vec[..].iter().count();\n+   |      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n    |\n    = note: `-D clippy::iter-count` implied by `-D warnings`\n \n error: called `.iter().count()` on a `Vec`\n-  --> $DIR/iter_count.rs:54:5\n+  --> $DIR/iter_count.rs:55:5\n    |\n LL |     vec.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^ help: try: `vec.len()`\n \n error: called `.iter().count()` on a `slice`\n-  --> $DIR/iter_count.rs:55:5\n+  --> $DIR/iter_count.rs:56:5\n    |\n LL |     boxed_slice.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `boxed_slice.len()`\n \n error: called `.iter().count()` on a `VecDeque`\n-  --> $DIR/iter_count.rs:56:5\n+  --> $DIR/iter_count.rs:57:5\n    |\n LL |     vec_deque.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec_deque.len()`\n \n error: called `.iter().count()` on a `HashSet`\n-  --> $DIR/iter_count.rs:57:5\n+  --> $DIR/iter_count.rs:58:5\n    |\n LL |     hash_set.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_set.len()`\n \n error: called `.iter().count()` on a `HashMap`\n-  --> $DIR/iter_count.rs:58:5\n+  --> $DIR/iter_count.rs:59:5\n    |\n LL |     hash_map.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_map.len()`\n \n error: called `.iter().count()` on a `BTreeMap`\n-  --> $DIR/iter_count.rs:59:5\n+  --> $DIR/iter_count.rs:60:5\n    |\n LL |     b_tree_map.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_map.len()`\n \n error: called `.iter().count()` on a `BTreeSet`\n-  --> $DIR/iter_count.rs:60:5\n+  --> $DIR/iter_count.rs:61:5\n    |\n LL |     b_tree_set.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_set.len()`\n \n error: called `.iter().count()` on a `LinkedList`\n-  --> $DIR/iter_count.rs:61:5\n+  --> $DIR/iter_count.rs:62:5\n    |\n LL |     linked_list.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `linked_list.len()`\n \n error: called `.iter().count()` on a `BinaryHeap`\n-  --> $DIR/iter_count.rs:62:5\n+  --> $DIR/iter_count.rs:63:5\n    |\n LL |     binary_heap.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `binary_heap.len()`\n \n error: called `.iter_mut().count()` on a `Vec`\n-  --> $DIR/iter_count.rs:64:5\n+  --> $DIR/iter_count.rs:65:5\n    |\n LL |     vec.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.len()`\n \n error: called `.iter_mut().count()` on a `slice`\n-  --> $DIR/iter_count.rs:65:14\n+  --> $DIR/iter_count.rs:66:6\n    |\n-LL |     let _ = &vec[..].iter_mut().count();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n+LL |     &vec[..].iter_mut().count();\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n \n error: called `.iter_mut().count()` on a `VecDeque`\n-  --> $DIR/iter_count.rs:66:5\n+  --> $DIR/iter_count.rs:67:5\n    |\n LL |     vec_deque.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec_deque.len()`\n \n error: called `.iter_mut().count()` on a `HashMap`\n-  --> $DIR/iter_count.rs:67:5\n+  --> $DIR/iter_count.rs:68:5\n    |\n LL |     hash_map.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_map.len()`\n \n error: called `.iter_mut().count()` on a `BTreeMap`\n-  --> $DIR/iter_count.rs:68:5\n+  --> $DIR/iter_count.rs:69:5\n    |\n LL |     b_tree_map.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_map.len()`\n \n error: called `.iter_mut().count()` on a `LinkedList`\n-  --> $DIR/iter_count.rs:69:5\n+  --> $DIR/iter_count.rs:70:5\n    |\n LL |     linked_list.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `linked_list.len()`\n \n error: called `.into_iter().count()` on a `slice`\n-  --> $DIR/iter_count.rs:71:14\n+  --> $DIR/iter_count.rs:72:6\n    |\n-LL |     let _ = &vec[..].into_iter().count();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n+LL |     &vec[..].into_iter().count();\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n \n error: called `.into_iter().count()` on a `Vec`\n-  --> $DIR/iter_count.rs:72:5\n+  --> $DIR/iter_count.rs:73:5\n    |\n LL |     vec.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.len()`\n \n error: called `.into_iter().count()` on a `VecDeque`\n-  --> $DIR/iter_count.rs:73:5\n+  --> $DIR/iter_count.rs:74:5\n    |\n LL |     vec_deque.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec_deque.len()`\n \n error: called `.into_iter().count()` on a `HashSet`\n-  --> $DIR/iter_count.rs:74:5\n+  --> $DIR/iter_count.rs:75:5\n    |\n LL |     hash_set.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_set.len()`\n \n error: called `.into_iter().count()` on a `HashMap`\n-  --> $DIR/iter_count.rs:75:5\n+  --> $DIR/iter_count.rs:76:5\n    |\n LL |     hash_map.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_map.len()`\n \n error: called `.into_iter().count()` on a `BTreeMap`\n-  --> $DIR/iter_count.rs:76:5\n+  --> $DIR/iter_count.rs:77:5\n    |\n LL |     b_tree_map.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_map.len()`\n \n error: called `.into_iter().count()` on a `BTreeSet`\n-  --> $DIR/iter_count.rs:77:5\n+  --> $DIR/iter_count.rs:78:5\n    |\n LL |     b_tree_set.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_set.len()`\n \n error: called `.into_iter().count()` on a `LinkedList`\n-  --> $DIR/iter_count.rs:78:5\n+  --> $DIR/iter_count.rs:79:5\n    |\n LL |     linked_list.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `linked_list.len()`\n \n error: called `.into_iter().count()` on a `BinaryHeap`\n-  --> $DIR/iter_count.rs:79:5\n+  --> $DIR/iter_count.rs:80:5\n    |\n LL |     binary_heap.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `binary_heap.len()`"}]}