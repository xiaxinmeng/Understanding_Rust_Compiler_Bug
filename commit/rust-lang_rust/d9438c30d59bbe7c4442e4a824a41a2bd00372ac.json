{"sha": "d9438c30d59bbe7c4442e4a824a41a2bd00372ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NDM4YzMwZDU5YmJlN2M0NDQyZTRhODI0YTQxYTJiZDAwMzcyYWM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-22T23:25:31Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-22T23:37:56Z"}, "message": "Add ToString and FromStr impls for Epoch", "tree": {"sha": "0c045217b9d2589a3ef0456376b0e35d3d738d7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c045217b9d2589a3ef0456376b0e35d3d738d7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9438c30d59bbe7c4442e4a824a41a2bd00372ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9438c30d59bbe7c4442e4a824a41a2bd00372ac", "html_url": "https://github.com/rust-lang/rust/commit/d9438c30d59bbe7c4442e4a824a41a2bd00372ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9438c30d59bbe7c4442e4a824a41a2bd00372ac/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f", "html_url": "https://github.com/rust-lang/rust/commit/b1f8e6fb06d7362eeb2065347a7db94e76b1cb2f"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "ef85ef8e37e7034c6bb6539b9bc0c41ddebd8073", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d9438c30d59bbe7c4442e4a824a41a2bd00372ac/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9438c30d59bbe7c4442e4a824a41a2bd00372ac/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d9438c30d59bbe7c4442e4a824a41a2bd00372ac", "patch": "@@ -41,7 +41,7 @@ use std::collections::btree_map::Iter as BTreeMapIter;\n use std::collections::btree_map::Keys as BTreeMapKeysIter;\n use std::collections::btree_map::Values as BTreeMapValuesIter;\n \n-use std::fmt;\n+use std::{fmt, str};\n use std::hash::Hasher;\n use std::collections::hash_map::DefaultHasher;\n use std::collections::HashSet;\n@@ -137,6 +137,28 @@ pub enum Epoch {\n     // as well as changing the default Cargo template.\n }\n \n+pub const ALL_EPOCHS: &[Epoch] = &[Epoch::Epoch2015, Epoch::Epoch2018];\n+\n+impl ToString for Epoch {\n+    fn to_string(&self) -> String {\n+        match *self {\n+            Epoch::Epoch2015 => \"2015\".into(),\n+            Epoch::Epoch2018 => \"2018\".into(),\n+        }\n+    }\n+}\n+\n+impl str::FromStr for Epoch {\n+    type Err = ();\n+    fn from_str(s: &str) -> Result<Self, ()> {\n+        match s {\n+            \"2015\" => Ok(Epoch::Epoch2015),\n+            \"2018\" => Ok(Epoch::Epoch2018),\n+            _ => Err(())\n+        }\n+    }\n+}\n+\n impl_stable_hash_for!(enum self::OutputType {\n     Bitcode,\n     Assembly,\n@@ -1021,11 +1043,17 @@ macro_rules! options {\n \n         fn parse_epoch(slot: &mut Epoch, v: Option<&str>) -> bool {\n             match v {\n-                Some(\"2015\") => *slot = Epoch::Epoch2015,\n-                Some(\"2018\") => *slot = Epoch::Epoch2018,\n-                _ => return false,\n+                Some(s) => {\n+                    let epoch = s.parse();\n+                    if let Ok(parsed) = epoch {\n+                        *slot = parsed;\n+                        true\n+                    } else {\n+                        false\n+                    }\n+                }\n+                _ => false,\n             }\n-            true\n         }\n     }\n ) }"}]}