{"sha": "4abdf323af5bc693f8b9ff3455e19ee1dff572a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYmRmMzIzYWY1YmM2OTNmOGI5ZmYzNDU1ZTE5ZWUxZGZmNTcyYTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-13T10:20:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-13T10:20:59Z"}, "message": "Merge #5732\n\n5732: Consider only IdentPats for param name hints r=matklad a=SomeoneToIgnore\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/4960\r\n\r\nAvoid displaying any param name hints like \r\n<img width=\"590\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/90071461-47a4ad80-dcfe-11ea-9330-fb4f4e2d1b71.png\">\r\n\r\nThose hints seem to occupy plenty of space for no apparent benefit, with their destructured content not used in the code with the function hints.\r\n\r\nI'm not entirely sure if we should show something else than `IdentPat`s, since I don't understand some of the `Pat` variant meanings:\r\nhttps://github.com/rust-analyzer/rust-analyzer/blob/a1c187eef3ba08076aedb5154929f7eda8d1b424/crates/syntax/src/ast/generated/nodes.rs#L1336-L1352\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "0595d5ba73b7905154d66d6f3a91820711d24db6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0595d5ba73b7905154d66d6f3a91820711d24db6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4abdf323af5bc693f8b9ff3455e19ee1dff572a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNRQLCRBK7hj4Ov3rIwAAdHIIAFS+G8ILFJYvCuWwQVXO8lV5\nMd34GbiiAjZzGjnipiPR4B5gJZKHhilBXXTVSNyWjSq2wcCwjRmydgNoubf9wkOz\nv+e1T0Lz/H7qPW9X7AmgKSbOt5mizHRwB8pCTOe1DZrso+zZxEM+kQ/I4dEuuDd1\nlxwSggjC4FS1g3cAN0U7kjGXyWsydTZRDu/dXymtSX7mzWp112JSEN7+SBHkxvbd\nCXDs54ujCTNFV1NtDLPnBluNtSIFhhYOjbVLOfTDLcX4MaXjAz65rJ9zFlo+Rya+\nhaefcY2+98f22EGwmQBWKDmy9XHggchFIc7nosAIWyaw6ghFftUbOreu7uSc/M4=\n=p/YT\n-----END PGP SIGNATURE-----\n", "payload": "tree 0595d5ba73b7905154d66d6f3a91820711d24db6\nparent de1d93455f85747410efb69c28e0c1379e8e328a\nparent 0de795fc4c121033890c21ffd41ef9274dc3c74e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597314059 +0000\ncommitter GitHub <noreply@github.com> 1597314059 +0000\n\nMerge #5732\n\n5732: Consider only IdentPats for param name hints r=matklad a=SomeoneToIgnore\n\nCloses https://github.com/rust-analyzer/rust-analyzer/issues/4960\r\n\r\nAvoid displaying any param name hints like \r\n<img width=\"590\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/90071461-47a4ad80-dcfe-11ea-9330-fb4f4e2d1b71.png\">\r\n\r\nThose hints seem to occupy plenty of space for no apparent benefit, with their destructured content not used in the code with the function hints.\r\n\r\nI'm not entirely sure if we should show something else than `IdentPat`s, since I don't understand some of the `Pat` variant meanings:\r\nhttps://github.com/rust-analyzer/rust-analyzer/blob/a1c187eef3ba08076aedb5154929f7eda8d1b424/crates/syntax/src/ast/generated/nodes.rs#L1336-L1352\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4abdf323af5bc693f8b9ff3455e19ee1dff572a8", "html_url": "https://github.com/rust-lang/rust/commit/4abdf323af5bc693f8b9ff3455e19ee1dff572a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4abdf323af5bc693f8b9ff3455e19ee1dff572a8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de1d93455f85747410efb69c28e0c1379e8e328a", "url": "https://api.github.com/repos/rust-lang/rust/commits/de1d93455f85747410efb69c28e0c1379e8e328a", "html_url": "https://github.com/rust-lang/rust/commit/de1d93455f85747410efb69c28e0c1379e8e328a"}, {"sha": "0de795fc4c121033890c21ffd41ef9274dc3c74e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0de795fc4c121033890c21ffd41ef9274dc3c74e", "html_url": "https://github.com/rust-lang/rust/commit/0de795fc4c121033890c21ffd41ef9274dc3c74e"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "81fe274adf229fa9d8af1c7a2feb8c626bfdd452", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4abdf323af5bc693f8b9ff3455e19ee1dff572a8/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4abdf323af5bc693f8b9ff3455e19ee1dff572a8/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=4abdf323af5bc693f8b9ff3455e19ee1dff572a8", "patch": "@@ -156,15 +156,15 @@ fn get_param_name_hints(\n         .params(sema.db)\n         .into_iter()\n         .zip(args)\n-        .filter_map(|((param, _ty), arg)| match param? {\n-            Either::Left(self_param) => Some((self_param.to_string(), arg)),\n-            Either::Right(pat) => {\n-                let param_name = match pat {\n+        .filter_map(|((param, _ty), arg)| {\n+            let param_name = match param? {\n+                Either::Left(self_param) => self_param.to_string(),\n+                Either::Right(pat) => match pat {\n                     ast::Pat::IdentPat(it) => it.name()?.to_string(),\n-                    it => it.to_string(),\n-                };\n-                Some((param_name, arg))\n-            }\n+                    _ => return None,\n+                },\n+            };\n+            Some((param_name, arg))\n         })\n         .filter(|(param_name, arg)| should_show_param_name_hint(sema, &callable, &param_name, &arg))\n         .map(|(param_name, arg)| InlayHint {\n@@ -707,6 +707,8 @@ fn different_order(param: &Param) {}\n fn different_order_mut(param: &mut Param) {}\n fn has_underscore(_param: bool) {}\n fn enum_matches_param_name(completion_kind: CompletionKind) {}\n+fn param_destructuring_omitted_1((a, b): (u32, u32)) {}\n+fn param_destructuring_omitted_2(TestVarContainer { test_var: _ }: TestVarContainer) {}\n \n fn twiddle(twiddle: bool) {}\n fn doo(_doo: bool) {}\n@@ -746,6 +748,10 @@ fn main() {\n     let b: f64 = 4.0;\n     let _: f64 = a.div_euclid(b);\n     let _: f64 = a.abs_sub(b);\n+\n+    let range: (u32, u32) = (3, 5);\n+    param_destructuring_omitted_1(range);\n+    param_destructuring_omitted_2(container);\n }\"#,\n         );\n     }"}]}