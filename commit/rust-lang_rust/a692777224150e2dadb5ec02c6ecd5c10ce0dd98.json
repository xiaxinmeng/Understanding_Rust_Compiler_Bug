{"sha": "a692777224150e2dadb5ec02c6ecd5c10ce0dd98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2OTI3NzcyMjQxNTBlMmRhZGI1ZWMwMmM2ZWNkNWMxMGNlMGRkOTg=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-18T07:07:53Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-18T07:07:53Z"}, "message": "rt: Inline get_sp_limit/set_sp_limit/get_sp for x86.", "tree": {"sha": "325868bbf654f2964ae7e82d71d4a6b7b909ef44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/325868bbf654f2964ae7e82d71d4a6b7b909ef44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a692777224150e2dadb5ec02c6ecd5c10ce0dd98", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a692777224150e2dadb5ec02c6ecd5c10ce0dd98", "html_url": "https://github.com/rust-lang/rust/commit/a692777224150e2dadb5ec02c6ecd5c10ce0dd98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a692777224150e2dadb5ec02c6ecd5c10ce0dd98/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1778767cca290e844d5aa9d044dcc2f9edc9d8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1778767cca290e844d5aa9d044dcc2f9edc9d8c", "html_url": "https://github.com/rust-lang/rust/commit/d1778767cca290e844d5aa9d044dcc2f9edc9d8c"}], "stats": {"total": 108, "additions": 45, "deletions": 63}, "files": [{"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/rt/arch/i386/record_sp.S", "status": "modified", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/a692777224150e2dadb5ec02c6ecd5c10ce0dd98/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/a692777224150e2dadb5ec02c6ecd5c10ce0dd98/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Frecord_sp.S?ref=a692777224150e2dadb5ec02c6ecd5c10ce0dd98", "patch": "@@ -1,60 +0,0 @@\n-.text\n-\n-#if defined(__APPLE__) || defined(_WIN32)\n-#define RECORD_SP_LIMIT    _record_sp_limit\n-#define GET_SP_LIMIT       _get_sp_limit\n-#define GET_SP             _get_sp\n-#else\n-#define RECORD_SP_LIMIT    record_sp_limit\n-#define GET_SP_LIMIT       get_sp_limit\n-#define GET_SP             get_sp\n-#endif\n-\n-.globl RECORD_SP_LIMIT\n-.globl GET_SP_LIMIT\n-.globl GET_SP\n-\n-#if defined(__linux__) || defined(__FreeBSD__)\n-RECORD_SP_LIMIT:\n-\tmovl 4(%esp), %eax\n-\tmovl %eax, %gs:48\n-\tret\n-#endif\n-\n-#if defined(__APPLE__)\n-RECORD_SP_LIMIT:\n-\tmovl $0x48+90*4, %eax\n-\tmovl 4(%esp), %ecx\n-\tmovl %ecx, %gs:(%eax)\n-\tret\n-#endif\n-\n-#if defined(_WIN32)\n-RECORD_SP_LIMIT:\n-\tmovl 4(%esp), %eax\n-\tmovl %eax, %fs:0x14\n-\tret\n-#endif\n-\n-#if defined(__linux__) || defined(__FreeBSD__)\n-GET_SP_LIMIT:\n-\tmovl %gs:48, %eax\n-\tret\n-#endif\n-\n-#if defined(__APPLE__)\n-GET_SP_LIMIT:\n-\tmovl $0x48+90*4, %ecx\n-\tmovl %gs:(%ecx), %eax\n-\tret\n-#endif\n-\n-#if defined(_WIN32)\n-GET_SP_LIMIT:\n-\tmovl %fs:0x14, %eax\n-\tret\n-#endif\n-\n-GET_SP:\n-\tmovl %esp, %eax\n-\tret"}, {"sha": "4f4c84c817573ca5e97bbe76265f53496e2f551f", "filename": "src/rt/arch/i386/sp.h", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a692777224150e2dadb5ec02c6ecd5c10ce0dd98/src%2Frt%2Farch%2Fi386%2Fsp.h", "raw_url": "https://github.com/rust-lang/rust/raw/a692777224150e2dadb5ec02c6ecd5c10ce0dd98/src%2Frt%2Farch%2Fi386%2Fsp.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fsp.h?ref=a692777224150e2dadb5ec02c6ecd5c10ce0dd98", "patch": "@@ -16,14 +16,56 @@\n #include \"../../rust_globals.h\"\n \n // Gets a pointer to the vicinity of the current stack pointer\n-extern \"C\" uintptr_t get_sp();\n+extern \"C\" ALWAYS_INLINE uintptr_t get_sp() {\n+    uintptr_t sp;\n+    asm volatile (\n+        \"movl %%esp, %0\"\n+        : \"=m\"(sp));\n+    return sp;\n+}\n \n // Gets the pointer to the end of the Rust stack from a platform-\n // specific location in the thread control block\n-extern \"C\" CDECL uintptr_t get_sp_limit();\n+extern \"C\" CDECL ALWAYS_INLINE uintptr_t get_sp_limit() {\n+    uintptr_t limit;\n+\n+#if defined(__linux__) || defined(__FreeBSD__)\n+    asm volatile (\n+        \"movl %%gs:48, %0\"\n+        : \"=r\"(limit));\n+#elif defined(__APPLE__)\n+    asm volatile (\n+        \"movl $0x48+90*4, %%ecx\\n\\t\"\n+        \"movl %%gs:(%%ecx), %0\"\n+        :  \"=r\"(limit)\n+        :: \"ecx\");\n+#elif defined(_WIN32)\n+    asm volatile (\n+        \"movl %%fs:0x14, %0\"\n+        : \"=r\"(limit));\n+#endif\n+\n+    return limit;\n+}\n \n // Records the pointer to the end of the Rust stack in a platform-\n // specific location in the thread control block\n-extern \"C\" CDECL void record_sp_limit(void *limit);\n+extern \"C\" CDECL ALWAYS_INLINE void record_sp_limit(void *limit) {\n+#if defined(__linux__) || defined(__FreeBSD__)\n+    asm volatile (\n+        \"movl %0, %%gs:48\"\n+        :: \"r\"(limit));\n+#elif defined(__APPLE__)\n+    asm volatile (\n+        \"movl $0x48+90*4, %%eax\\n\\t\"\n+        \"movl %0, %%gs:(%%eax)\"\n+        :: \"r\"(limit)\n+        :  \"eax\");\n+#elif defined(_WIN32)\n+    asm volatile (\n+        \"movl %0, %%fs:0x14\"\n+        :: \"r\"(limit));\n+#endif\n+}\n \n #endif"}]}