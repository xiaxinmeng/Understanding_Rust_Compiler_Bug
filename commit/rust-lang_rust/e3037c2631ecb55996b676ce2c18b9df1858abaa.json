{"sha": "e3037c2631ecb55996b676ce2c18b9df1858abaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMDM3YzI2MzFlY2I1NTk5NmI2NzZjZTJjMThiOWRmMTg1OGFiYWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-21T13:22:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-21T13:22:06Z"}, "message": "Merge #3259\n\n3259: Normalize associated types in types coming from Chalk r=matklad a=flodiebold\n\nFixes #3232.\n\nCo-authored-by: Florian Diebold <florian.diebold@freiheit.com>", "tree": {"sha": "bfea7d01b69ecc97d57ba7749c08682a7c82169e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfea7d01b69ecc97d57ba7749c08682a7c82169e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3037c2631ecb55996b676ce2c18b9df1858abaa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeT9l+CRBK7hj4Ov3rIwAAdHIIAIcJcH+hrkxZrdfAoKLv3Ckn\nXDAq7VCHjUQJr7xZjyKmvfBZfQI90U4HPupKQr5fj9R/HrR1niZ7KbWYwQRTdlcK\nKk1GLSosNwbhrs522dpCibxKDgonZ2EkNd+fqC3gyce2Ehim3DzCBLIoecjnd7Fn\nk/wSCMTnZNZw/pIhfh83AzABf/3Au1oPROs3TKBPUOD3GlxRJCd6XWJQbHB1gL93\nrr9ETBs8PIf0PjIdlDqo/yuSZseL9ireGWBfXckiLhuIBEjgh2rnqNX8L5d56aZo\nWLwz/8p7IZk7qLOcAqvTR9od1wdwnFi+t6vwg6c1RUlZnrNlURymV6P2N2Z51gk=\n=xeQt\n-----END PGP SIGNATURE-----\n", "payload": "tree bfea7d01b69ecc97d57ba7749c08682a7c82169e\nparent db1bbb11fbe85a5230452359e80535a2169d0929\nparent e50201345ecc91b9eeb284cd04c6b55f9c5ce0fd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582291326 +0000\ncommitter GitHub <noreply@github.com> 1582291326 +0000\n\nMerge #3259\n\n3259: Normalize associated types in types coming from Chalk r=matklad a=flodiebold\n\nFixes #3232.\n\nCo-authored-by: Florian Diebold <florian.diebold@freiheit.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3037c2631ecb55996b676ce2c18b9df1858abaa", "html_url": "https://github.com/rust-lang/rust/commit/e3037c2631ecb55996b676ce2c18b9df1858abaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3037c2631ecb55996b676ce2c18b9df1858abaa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db1bbb11fbe85a5230452359e80535a2169d0929", "url": "https://api.github.com/repos/rust-lang/rust/commits/db1bbb11fbe85a5230452359e80535a2169d0929", "html_url": "https://github.com/rust-lang/rust/commit/db1bbb11fbe85a5230452359e80535a2169d0929"}, {"sha": "e50201345ecc91b9eeb284cd04c6b55f9c5ce0fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e50201345ecc91b9eeb284cd04c6b55f9c5ce0fd", "html_url": "https://github.com/rust-lang/rust/commit/e50201345ecc91b9eeb284cd04c6b55f9c5ce0fd"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "2d03c5c33bd9629d230a0c00119de0523bf1d7d7", "filename": "crates/ra_hir_ty/src/infer/unify.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3037c2631ecb55996b676ce2c18b9df1858abaa/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3037c2631ecb55996b676ce2c18b9df1858abaa/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Funify.rs?ref=e3037c2631ecb55996b676ce2c18b9df1858abaa", "patch": "@@ -161,7 +161,10 @@ impl<T> Canonicalized<T> {\n         let new_vars = Substs((0..solution.num_vars).map(|_| ctx.table.new_type_var()).collect());\n         for (i, ty) in solution.value.into_iter().enumerate() {\n             let var = self.free_vars[i];\n-            ctx.table.unify(&Ty::Infer(var), &ty.subst_bound_vars(&new_vars));\n+            // eagerly replace projections in the type; we may be getting types\n+            // e.g. from where clauses where this hasn't happened yet\n+            let ty = ctx.normalize_associated_types_in(ty.subst_bound_vars(&new_vars));\n+            ctx.table.unify(&Ty::Infer(var), &ty);\n         }\n     }\n }"}, {"sha": "7d796d0b940ff4ad1310fff5c16e1fd2e984a85c", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e3037c2631ecb55996b676ce2c18b9df1858abaa/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3037c2631ecb55996b676ce2c18b9df1858abaa/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=e3037c2631ecb55996b676ce2c18b9df1858abaa", "patch": "@@ -1910,3 +1910,45 @@ fn test() -> impl Trait<i32> {\n     \"###\n     );\n }\n+\n+#[test]\n+fn assoc_types_from_bounds() {\n+    assert_snapshot!(\n+        infer(r#\"\n+//- /main.rs\n+#[lang = \"fn_once\"]\n+trait FnOnce<Args> {\n+    type Output;\n+}\n+\n+trait T {\n+    type O;\n+}\n+\n+impl T for () {\n+    type O = ();\n+}\n+\n+fn f<X, F>(_v: F)\n+where\n+    X: T,\n+    F: FnOnce(&X::O),\n+{ }\n+\n+fn main() {\n+    f::<(), _>(|z| { z; });\n+}\n+\"#),\n+        @r###\"\n+    [147; 149) '_v': F\n+    [192; 195) '{ }': ()\n+    [207; 238) '{     ... }); }': ()\n+    [213; 223) 'f::<(), _>': fn f<(), |&()| -> ()>(|&()| -> ()) -> ()\n+    [213; 235) 'f::<()... z; })': ()\n+    [224; 234) '|z| { z; }': |&()| -> ()\n+    [225; 226) 'z': &()\n+    [228; 234) '{ z; }': ()\n+    [230; 231) 'z': &()\n+    \"###\n+    );\n+}"}]}