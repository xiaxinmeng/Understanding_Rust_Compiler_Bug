{"sha": "82e5c6ee6597e7d8926b4f2fea89d02d77f978d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZTVjNmVlNjU5N2U3ZDg5MjZiNGYyZmVhODlkMDJkNzdmOTc4ZDQ=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-17T06:48:21Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-18T20:35:11Z"}, "message": "Use explicit iteration instead of `all()` in `process_obligation()`.\n\nAmazingly enough, this is a 3.5% instruction count win on `keccak`.", "tree": {"sha": "fae2f2ad95f37b8fdf235913a342d5fabf80be50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae2f2ad95f37b8fdf235913a342d5fabf80be50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82e5c6ee6597e7d8926b4f2fea89d02d77f978d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82e5c6ee6597e7d8926b4f2fea89d02d77f978d4", "html_url": "https://github.com/rust-lang/rust/commit/82e5c6ee6597e7d8926b4f2fea89d02d77f978d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82e5c6ee6597e7d8926b4f2fea89d02d77f978d4/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f6e160875f375bb71d1ae761cb5cab8f0b02e19", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f6e160875f375bb71d1ae761cb5cab8f0b02e19", "html_url": "https://github.com/rust-lang/rust/commit/7f6e160875f375bb71d1ae761cb5cab8f0b02e19"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "5eaaeca82f2c0dd3a6e05a9667cdfeffee217426", "filename": "src/librustc/traits/fulfill.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/82e5c6ee6597e7d8926b4f2fea89d02d77f978d4/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82e5c6ee6597e7d8926b4f2fea89d02d77f978d4/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=82e5c6ee6597e7d8926b4f2fea89d02d77f978d4", "patch": "@@ -256,15 +256,22 @@ impl<'a, 'b, 'tcx> ObligationProcessor for FulfillProcessor<'a, 'b, 'tcx> {\n         &mut self,\n         pending_obligation: &mut Self::Obligation,\n     ) -> ProcessResult<Self::Obligation, Self::Error> {\n-        // if we were stalled on some unresolved variables, first check\n+        // If we were stalled on some unresolved variables, first check\n         // whether any of them have been resolved; if not, don't bother\n         // doing more work yet\n         if !pending_obligation.stalled_on.is_empty() {\n-            if pending_obligation.stalled_on.iter().all(|&ty| {\n+            let mut changed = false;\n+            // This `for` loop was once a call to `all()`, but this lower-level\n+            // form was a perf win. See #64545 for details.\n+            for &ty in &pending_obligation.stalled_on {\n                 // Use the force-inlined variant of shallow_resolve() because this code is hot.\n                 let resolved = ShallowResolver::new(self.selcx.infcx()).inlined_shallow_resolve(ty);\n-                resolved == ty // nothing changed here\n-            }) {\n+                if resolved != ty {\n+                    changed = true;\n+                    break;\n+                }\n+            }\n+            if !changed {\n                 debug!(\"process_predicate: pending obligation {:?} still stalled on {:?}\",\n                        self.selcx.infcx()\n                            .resolve_vars_if_possible(&pending_obligation.obligation),"}]}