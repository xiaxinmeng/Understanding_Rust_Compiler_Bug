{"sha": "26e2ee00f94f1e9c571858a6a49becc71807860d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZTJlZTAwZjk0ZjFlOWM1NzE4NThhNmE0OWJlY2M3MTgwNzg2MGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-05T09:02:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-05T09:02:40Z"}, "message": "Auto merge of #38767 - est31:master, r=eddyb\n\nSome i128 tests\n\n* Add some FFI tests for i128 on architectures where we have sort of working \"C\" FFI support. On all other architectures we ignore the test.\n* enhance the u128 overflow tests", "tree": {"sha": "882042b74c94f66cc916374d977a72e14ff65569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/882042b74c94f66cc916374d977a72e14ff65569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26e2ee00f94f1e9c571858a6a49becc71807860d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26e2ee00f94f1e9c571858a6a49becc71807860d", "html_url": "https://github.com/rust-lang/rust/commit/26e2ee00f94f1e9c571858a6a49becc71807860d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26e2ee00f94f1e9c571858a6a49becc71807860d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dd07b66ffc8d21b9d73c99def588ff8b2242974", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd07b66ffc8d21b9d73c99def588ff8b2242974", "html_url": "https://github.com/rust-lang/rust/commit/5dd07b66ffc8d21b9d73c99def588ff8b2242974"}, {"sha": "28f6d4a63786a7e63bc5d3b66b1754a02b1b564d", "url": "https://api.github.com/repos/rust-lang/rust/commits/28f6d4a63786a7e63bc5d3b66b1754a02b1b564d", "html_url": "https://github.com/rust-lang/rust/commit/28f6d4a63786a7e63bc5d3b66b1754a02b1b564d"}], "stats": {"total": 89, "additions": 87, "deletions": 2}, "files": [{"sha": "f2d9119a7d15697c4db85ed47af161cec86c2e9a", "filename": "src/rt/rust_test_helpers.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Frt%2Frust_test_helpers.c", "raw_url": "https://github.com/rust-lang/rust/raw/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Frt%2Frust_test_helpers.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_test_helpers.c?ref=26e2ee00f94f1e9c571858a6a49becc71807860d", "patch": "@@ -268,3 +268,22 @@ LARGE_INTEGER increment_all_parts(LARGE_INTEGER li) {\n     li.QuadPart += 1;\n     return li;\n }\n+\n+#define DO_INT128_TEST !(defined(WIN32) || defined(_WIN32) || defined(__WIN32)) && \\\n+    defined(__amd64__)\n+\n+#if DO_INT128_TEST\n+\n+unsigned __int128 identity(unsigned __int128 a) {\n+    return a;\n+}\n+\n+__int128 square(__int128 a) {\n+    return a * a;\n+}\n+\n+__int128 sub(__int128 a, __int128 b) {\n+    return a - b;\n+}\n+\n+#endif"}, {"sha": "3b5f4884d21e7215a087e241cc6fd7e96a40c608", "filename": "src/test/run-pass/i128-ffi.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Ftest%2Frun-pass%2Fi128-ffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Ftest%2Frun-pass%2Fi128-ffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fi128-ffi.rs?ref=26e2ee00f94f1e9c571858a6a49becc71807860d", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-stage0\n+// ignore-stage1\n+\n+// MSVC doesn't support 128 bit integers, and other Windows\n+// C compilers have very inconsistent views on how the ABI\n+// should look like.\n+\n+// ignore-windows\n+\n+// Ignore 32 bit targets:\n+// ignore-x86, ignore-arm\n+\n+#![feature(i128_type)]\n+\n+#[link(name = \"rust_test_helpers\", kind = \"static\")]\n+extern \"C\" {\n+    fn identity(f: u128) -> u128;\n+    fn square(f: i128) -> i128;\n+    fn sub(f: i128, f: i128) -> i128;\n+}\n+\n+fn main() {\n+    unsafe {\n+        let a = 0x734C_C2F2_A521;\n+        let b = 0x33EE_0E2A_54E2_59DA_A0E7_8E41;\n+        let b_out = identity(b);\n+        assert_eq!(b, b_out);\n+        let a_square = square(a);\n+        assert_eq!(b, a_square as u128);\n+        let k = 0x1234_5678_9ABC_DEFF_EDCB_A987_6543_210;\n+        let k_d = 0x2468_ACF1_3579_BDFF_DB97_530E_CA86_420;\n+        let k_out = sub(k_d, k);\n+        assert_eq!(k, k_out);\n+    }\n+}"}, {"sha": "a4ff36d20e4fa9c48388e36a0adef338e6c918ed", "filename": "src/test/run-pass/i128.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Ftest%2Frun-pass%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Ftest%2Frun-pass%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fi128.rs?ref=26e2ee00f94f1e9c571858a6a49becc71807860d", "patch": "@@ -96,4 +96,12 @@ fn main() {\n     assert_eq!((-z).checked_mul(-z), Some(0x734C_C2F2_A521));\n     assert_eq!((z).checked_mul(z), Some(0x734C_C2F2_A521));\n     assert_eq!((k).checked_mul(k), None);\n+    let l: i128 = b(i128::min_value());\n+    let o: i128 = b(17);\n+    assert_eq!(l.checked_sub(b(2)), None);\n+    assert_eq!(l.checked_add(l), None);\n+    assert_eq!((-(l + 1)).checked_add(2), None);\n+    assert_eq!(l.checked_sub(l), Some(0));\n+    assert_eq!(b(1u128).checked_shl(b(127)), Some(1 << 127));\n+    assert_eq!(o.checked_shl(b(128)), None);\n }"}, {"sha": "53d726f1f663bbd418d7679435963a601d7a9231", "filename": "src/test/run-pass/u128.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Ftest%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26e2ee00f94f1e9c571858a6a49becc71807860d/src%2Ftest%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fu128.rs?ref=26e2ee00f94f1e9c571858a6a49becc71807860d", "patch": "@@ -10,7 +10,10 @@\n \n // ignore-stage0\n // ignore-stage1\n-#![feature(i128_type)]\n+#![feature(i128_type, test)]\n+\n+extern crate test;\n+use test::black_box as b;\n \n fn main() {\n     let x: u128 = 0xFFFF_FFFF_FFFF_FFFF__FFFF_FFFF_FFFF_FFFF;\n@@ -63,5 +66,15 @@ fn main() {\n         format!(\"{}\", u128::max_value()));\n     assert_eq!(\"147573952589676412928\", format!(\"{:?}\", j));\n     // common traits\n-    x.clone();\n+    assert_eq!(x, b(x.clone()));\n+    // overflow checks\n+    assert_eq!((z).checked_mul(z), Some(0x734C_C2F2_A521));\n+    assert_eq!((k).checked_mul(k), None);\n+    let l: u128 = b(u128::max_value() - 10);\n+    let o: u128 = b(17);\n+    assert_eq!(l.checked_add(b(11)), None);\n+    assert_eq!(l.checked_sub(l), Some(0));\n+    assert_eq!(o.checked_sub(b(18)), None);\n+    assert_eq!(b(1u128).checked_shl(b(127)), Some(1 << 127));\n+    assert_eq!(o.checked_shl(b(128)), None);\n }"}]}