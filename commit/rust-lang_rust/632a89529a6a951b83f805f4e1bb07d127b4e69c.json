{"sha": "632a89529a6a951b83f805f4e1bb07d127b4e69c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMmE4OTUyOWE2YTk1MWI4M2Y4MDVmNGUxYmIwN2QxMjdiNGU2OWM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-27T20:01:02Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-27T20:01:02Z"}, "message": "Add a getter for Frame.loc\n\nThis is necessary for Priroda.", "tree": {"sha": "25d1b9dbddc57c96542852dbcde27f27f4934092", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25d1b9dbddc57c96542852dbcde27f27f4934092"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/632a89529a6a951b83f805f4e1bb07d127b4e69c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/632a89529a6a951b83f805f4e1bb07d127b4e69c", "html_url": "https://github.com/rust-lang/rust/commit/632a89529a6a951b83f805f4e1bb07d127b4e69c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/632a89529a6a951b83f805f4e1bb07d127b4e69c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec7f8d94df0251532c47330abcb7988d77a1f818", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec7f8d94df0251532c47330abcb7988d77a1f818", "html_url": "https://github.com/rust-lang/rust/commit/ec7f8d94df0251532c47330abcb7988d77a1f818"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "6b796eb372199aeb6ab317f7657e8d03e7a1ecd5", "filename": "compiler/rustc_mir/src/interpret/eval_context.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/632a89529a6a951b83f805f4e1bb07d127b4e69c/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/632a89529a6a951b83f805f4e1bb07d127b4e69c/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs?ref=632a89529a6a951b83f805f4e1bb07d127b4e69c", "patch": "@@ -226,6 +226,16 @@ impl<'mir, 'tcx, Tag> Frame<'mir, 'tcx, Tag> {\n }\n \n impl<'mir, 'tcx, Tag, Extra> Frame<'mir, 'tcx, Tag, Extra> {\n+    /// Get the current location within the Frame.\n+    ///\n+    /// If this is `Err`, we are not currently executing any particular statement in\n+    /// this frame (can happen e.g. during frame initialization, and during unwinding on\n+    /// frames without cleanup code).\n+    /// We basically abuse `Result` as `Either`.\n+    pub fn current_loc(&self) -> Result<mir::Location, Span> {\n+        self.loc\n+    }\n+\n     /// Return the `SourceInfo` of the current instruction.\n     pub fn current_source_info(&self) -> Option<&mir::SourceInfo> {\n         self.loc.ok().map(|loc| self.body.source_info(loc))"}]}