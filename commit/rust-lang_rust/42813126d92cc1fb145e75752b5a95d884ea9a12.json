{"sha": "42813126d92cc1fb145e75752b5a95d884ea9a12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyODEzMTI2ZDkyY2MxZmIxNDVlNzU3NTJiNWE5NWQ4ODRlYTlhMTI=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-24T15:39:44Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-12-24T16:12:29Z"}, "message": "Check if parameters is empty", "tree": {"sha": "eb322406ccd19990c4dca50f24b9ccf31c13fd06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb322406ccd19990c4dca50f24b9ccf31c13fd06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42813126d92cc1fb145e75752b5a95d884ea9a12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42813126d92cc1fb145e75752b5a95d884ea9a12", "html_url": "https://github.com/rust-lang/rust/commit/42813126d92cc1fb145e75752b5a95d884ea9a12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42813126d92cc1fb145e75752b5a95d884ea9a12/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a2cf708ed1c80d403af957791dfe35ad5dee0a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2cf708ed1c80d403af957791dfe35ad5dee0a3", "html_url": "https://github.com/rust-lang/rust/commit/3a2cf708ed1c80d403af957791dfe35ad5dee0a3"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "32c0d07a59747380d90a7e53686ee45182f60e2d", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/42813126d92cc1fb145e75752b5a95d884ea9a12/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42813126d92cc1fb145e75752b5a95d884ea9a12/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=42813126d92cc1fb145e75752b5a95d884ea9a12", "patch": "@@ -387,10 +387,12 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 if let Ty::Opaque(ref predicates) = inner_ty {\n                     for p in predicates.iter() {\n                         if let GenericPredicate::Projection(projection) = p {\n-                            if projection.projection_ty.associated_ty == res_assoc_ty\n-                                && projection.ty != Ty::Unknown\n-                            {\n-                                return projection.ty.clone();\n+                            if projection.projection_ty.associated_ty == res_assoc_ty {\n+                                if let ty_app!(_, params) = &projection.ty {\n+                                    if params.len() == 0 {\n+                                        return projection.ty.clone();\n+                                    }\n+                                }\n                             }\n                         }\n                     }"}]}