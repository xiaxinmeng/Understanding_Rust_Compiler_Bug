{"sha": "f77c5ba512687835fac4f0f1273c855d6d416c37", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3N2M1YmE1MTI2ODc4MzVmYWM0ZjBmMTI3M2M4NTVkNmQ0MTZjMzc=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-15T23:53:06Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-15T23:53:06Z"}, "message": "rustc: Wait until generic glue is actually emitted to define it as internal\n\nThe verifier was not liking this when generating unoptimized bitcode. Per LLVM\ndocs it is not valid for function declarations to be marked internal, but\ntheir implementations may be.", "tree": {"sha": "619b3e43a69d637433b15cd78f07bdd5f02cf0bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/619b3e43a69d637433b15cd78f07bdd5f02cf0bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f77c5ba512687835fac4f0f1273c855d6d416c37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f77c5ba512687835fac4f0f1273c855d6d416c37", "html_url": "https://github.com/rust-lang/rust/commit/f77c5ba512687835fac4f0f1273c855d6d416c37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f77c5ba512687835fac4f0f1273c855d6d416c37/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eaafdaa2d39e7f28885e527aa125759fd146d51", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eaafdaa2d39e7f28885e527aa125759fd146d51", "html_url": "https://github.com/rust-lang/rust/commit/8eaafdaa2d39e7f28885e527aa125759fd146d51"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "b267af1604379246ec24951ce882800e03a771bb", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f77c5ba512687835fac4f0f1273c855d6d416c37/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f77c5ba512687835fac4f0f1273c855d6d416c37/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f77c5ba512687835fac4f0f1273c855d6d416c37", "patch": "@@ -1039,6 +1039,8 @@ fn decl_fastcall_fn(ModuleRef llmod, &str name, TypeRef llty) -> ValueRef {\n     ret decl_fn(llmod, name, lib::llvm::LLVMFastCallConv, llty);\n }\n \n+// Only use this if you are going to actually define the function. It's\n+// not valid to simply declare a function as internal.\n fn decl_internal_fastcall_fn(ModuleRef llmod,\n                             &str name, TypeRef llty) -> ValueRef {\n     auto llfn = decl_fn(llmod, name, lib::llvm::LLVMFastCallConv, llty);\n@@ -1861,7 +1863,7 @@ fn declare_generic_glue(&@local_ctxt cx,\n     } else {\n         fn_nm = mangle_name_by_seq(cx.ccx, cx.path,  \"glue_\" + name);\n     }\n-    auto llfn = decl_internal_fastcall_fn(cx.ccx.llmod, fn_nm, llfnty);\n+    auto llfn = decl_fastcall_fn(cx.ccx.llmod, fn_nm, llfnty);\n     ret llfn;\n }\n \n@@ -1872,6 +1874,9 @@ fn make_generic_glue(&@local_ctxt cx,\n                      &vec[uint] ty_params) -> ValueRef {\n     auto fcx = new_fn_ctxt(cx, llfn);\n \n+    llvm::LLVMSetLinkage(llfn, lib::llvm::LLVMInternalLinkage\n+                         as llvm::Linkage);\n+\n     cx.ccx.stats.n_glues_created += 1u;\n \n     // Any nontrivial glue is with values passed *by alias*; this is a"}]}