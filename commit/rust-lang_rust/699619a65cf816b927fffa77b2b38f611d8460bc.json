{"sha": "699619a65cf816b927fffa77b2b38f611d8460bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5OTYxOWE2NWNmODE2YjkyN2ZmZmE3N2IyYjM4ZjYxMWQ4NDYwYmM=", "commit": {"author": {"name": "David Lattimore", "email": "dml@google.com", "date": "2020-07-22T06:00:57Z"}, "committer": {"name": "David Lattimore", "email": "dml@google.com", "date": "2020-07-24T11:34:00Z"}, "message": "SSR: Add a couple of tests for non-recursive search\n\nThese tests already pass, however once we switch to non-recursive\nsearch, it'd be easy for these tests to not pass.", "tree": {"sha": "0589a97a9ee75458df3f9b7bb647089c57d7ca3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0589a97a9ee75458df3f9b7bb647089c57d7ca3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/699619a65cf816b927fffa77b2b38f611d8460bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/699619a65cf816b927fffa77b2b38f611d8460bc", "html_url": "https://github.com/rust-lang/rust/commit/699619a65cf816b927fffa77b2b38f611d8460bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/699619a65cf816b927fffa77b2b38f611d8460bc/comments", "author": {"login": "davidlattimore", "id": 8983542, "node_id": "MDQ6VXNlcjg5ODM1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/8983542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlattimore", "html_url": "https://github.com/davidlattimore", "followers_url": "https://api.github.com/users/davidlattimore/followers", "following_url": "https://api.github.com/users/davidlattimore/following{/other_user}", "gists_url": "https://api.github.com/users/davidlattimore/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlattimore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlattimore/subscriptions", "organizations_url": "https://api.github.com/users/davidlattimore/orgs", "repos_url": "https://api.github.com/users/davidlattimore/repos", "events_url": "https://api.github.com/users/davidlattimore/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlattimore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidlattimore", "id": 8983542, "node_id": "MDQ6VXNlcjg5ODM1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/8983542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlattimore", "html_url": "https://github.com/davidlattimore", "followers_url": "https://api.github.com/users/davidlattimore/followers", "following_url": "https://api.github.com/users/davidlattimore/following{/other_user}", "gists_url": "https://api.github.com/users/davidlattimore/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlattimore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlattimore/subscriptions", "organizations_url": "https://api.github.com/users/davidlattimore/orgs", "repos_url": "https://api.github.com/users/davidlattimore/repos", "events_url": "https://api.github.com/users/davidlattimore/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlattimore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fcaaa1201c650ce22b71160f6e9bf2288d10a1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fcaaa1201c650ce22b71160f6e9bf2288d10a1a", "html_url": "https://github.com/rust-lang/rust/commit/6fcaaa1201c650ce22b71160f6e9bf2288d10a1a"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "523035b310652e07d39df1dbe8d662f4fb015e98", "filename": "crates/ra_ssr/src/tests.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/699619a65cf816b927fffa77b2b38f611d8460bc/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/699619a65cf816b927fffa77b2b38f611d8460bc/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Ftests.rs?ref=699619a65cf816b927fffa77b2b38f611d8460bc", "patch": "@@ -585,6 +585,27 @@ fn replace_within_macro_expansion() {\n     )\n }\n \n+#[test]\n+fn replace_outside_and_within_macro_expansion() {\n+    assert_ssr_transform(\n+        \"foo($a) ==>> bar($a)\",\n+        r#\"\n+            fn foo() {} fn bar() {}\n+            macro_rules! macro1 {\n+                ($a:expr) => {$a}\n+            }\n+            fn f() {foo(foo(macro1!(foo(foo(42)))))}\n+            \"#,\n+        expect![[r#\"\n+            fn foo() {} fn bar() {}\n+            macro_rules! macro1 {\n+                ($a:expr) => {$a}\n+            }\n+            fn f() {bar(bar(macro1!(bar(bar(42)))))}\n+        \"#]],\n+    )\n+}\n+\n #[test]\n fn preserves_whitespace_within_macro_expansion() {\n     assert_ssr_transform(\n@@ -631,3 +652,15 @@ fn match_failure_reasons() {\n         r#\"Pattern wanted token '42' (INT_NUMBER), but code had token '43' (INT_NUMBER)\"#,\n     );\n }\n+\n+#[test]\n+fn overlapping_possible_matches() {\n+    // There are three possible matches here, however the middle one, `foo(foo(foo(42)))` shouldn't\n+    // match because it overlaps with the outer match. The inner match is permitted since it's is\n+    // contained entirely within the placeholder of the outer match.\n+    assert_matches(\n+        \"foo(foo($a))\",\n+        \"fn foo() {} fn main() {foo(foo(foo(foo(42))))}\",\n+        &[\"foo(foo(42))\", \"foo(foo(foo(foo(42))))\"],\n+    );\n+}"}]}