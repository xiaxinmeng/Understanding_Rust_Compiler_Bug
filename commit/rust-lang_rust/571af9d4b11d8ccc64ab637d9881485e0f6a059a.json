{"sha": "571af9d4b11d8ccc64ab637d9881485e0f6a059a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MWFmOWQ0YjExZDhjY2M2NGFiNjM3ZDk4ODE0ODVlMGY2YTA1OWE=", "commit": {"author": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-01-30T17:24:28Z"}, "committer": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-02-04T11:54:03Z"}, "message": "Format", "tree": {"sha": "775efd89abdbf8eea7980d0d9f435cd9c82dadf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/775efd89abdbf8eea7980d0d9f435cd9c82dadf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/571af9d4b11d8ccc64ab637d9881485e0f6a059a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/571af9d4b11d8ccc64ab637d9881485e0f6a059a", "html_url": "https://github.com/rust-lang/rust/commit/571af9d4b11d8ccc64ab637d9881485e0f6a059a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/571af9d4b11d8ccc64ab637d9881485e0f6a059a/comments", "author": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc9185451d547a071b74e9432d1c447dbbdeac6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9185451d547a071b74e9432d1c447dbbdeac6e", "html_url": "https://github.com/rust-lang/rust/commit/bc9185451d547a071b74e9432d1c447dbbdeac6e"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "42a091fc57b0cb0b7f2fbcc19fe748a3d16147bd", "filename": "src/macros.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/571af9d4b11d8ccc64ab637d9881485e0f6a059a/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/571af9d4b11d8ccc64ab637d9881485e0f6a059a/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=571af9d4b11d8ccc64ab637d9881485e0f6a059a", "patch": "@@ -323,12 +323,8 @@ pub fn rewrite_macro_def(\n         parsed_def.branches.iter(),\n         \"}\",\n         \";\",\n-        |branch| {\n-            branch.span.lo()\n-        },\n-        |branch| {\n-            branch.span.hi()\n-        },\n+        |branch| branch.span.lo(),\n+        |branch| branch.span.hi(),\n         |branch| {\n             // Only attempt to format function-like macros.\n             if branch.args_paren_kind != DelimToken::Paren {\n@@ -419,7 +415,7 @@ pub fn rewrite_macro_def(\n         },\n         context.codemap.span_after(span, \"{\"),\n         span.hi(),\n-        false\n+        false,\n     ).collect::<Vec<_>>();\n \n     let arm_shape = shape\n@@ -804,7 +800,10 @@ impl MacroParser {\n             TokenTree::Token(..) => return None,\n             TokenTree::Delimited(sp, _) => {\n                 let data = sp.data();\n-                (data.hi, Span::new(data.lo + BytePos(1), data.hi - BytePos(1), data.ctxt))\n+                (\n+                    data.hi,\n+                    Span::new(data.lo + BytePos(1), data.hi - BytePos(1), data.ctxt),\n+                )\n             }\n         };\n         if let Some(TokenTree::Token(sp, Token::Semi)) = self.toks.look_ahead(0) {"}]}