{"sha": "c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0", "node_id": "C_kwDOAAsO6NoAKGM1YTkzYmE5ZmUzMjkxNmRkZjFmMTNlNmYyMWMyMWNlY2Q4NTY4ZjA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-29T02:03:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-29T02:03:02Z"}, "message": "Rollup merge of #112037 - Nemo157:e0133-unsafe_op_in_unsafe_fn, r=petrochenkov\n\nAdd details about `unsafe_op_in_unsafe_fn` to E0133\n\nThis was mentioned in https://github.com/rust-lang/rust/pull/99827#discussion_r933899901", "tree": {"sha": "136023424b70f98511ccddc01c9a1bbbe82cd62e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/136023424b70f98511ccddc01c9a1bbbe82cd62e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkdAfWCRBK7hj4Ov3rIwAAanoIAABcX1ja0ExUNkxIvOJp+vS4\nRjZT17jW9mp7MYzzN/Jg2u/sw6cY65Cg0Is4bPcW2dNCHcmXyopOwZSyKfa3DB4Z\nq388MqBsA0SajAE+A9w4eLcuq+8+g+OQRLVCIf2JkL0cikcLD423Q32wDc1P7KPY\noF2MRjpenO18yC6b3w8bDsnFLVUNgjynF2cl78wPZaoFHU2ghAaqwTS/9XFcXOYK\ns697AO5cA6lzRFa/VoyTzF1NV0yI9zdHwFzyiynQ/vp5GToYpA0uKmANKcPzywkP\n9ypNVqv778UIeZ6P7z8hNBpalTwTUjdJmGk+2EEiZ92L58rKXodDpR96Ql5ZEZ4=\n=plOb\n-----END PGP SIGNATURE-----\n", "payload": "tree 136023424b70f98511ccddc01c9a1bbbe82cd62e\nparent 45ca2f732e18e42d3a95c79ace21b484205acdb1\nparent 8f942532541f571733c38d8c3145845948e4cd44\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685325782 +0200\ncommitter GitHub <noreply@github.com> 1685325782 +0200\n\nRollup merge of #112037 - Nemo157:e0133-unsafe_op_in_unsafe_fn, r=petrochenkov\n\nAdd details about `unsafe_op_in_unsafe_fn` to E0133\n\nThis was mentioned in https://github.com/rust-lang/rust/pull/99827#discussion_r933899901\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0", "html_url": "https://github.com/rust-lang/rust/commit/c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45ca2f732e18e42d3a95c79ace21b484205acdb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/45ca2f732e18e42d3a95c79ace21b484205acdb1", "html_url": "https://github.com/rust-lang/rust/commit/45ca2f732e18e42d3a95c79ace21b484205acdb1"}, {"sha": "8f942532541f571733c38d8c3145845948e4cd44", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f942532541f571733c38d8c3145845948e4cd44", "html_url": "https://github.com/rust-lang/rust/commit/8f942532541f571733c38d8c3145845948e4cd44"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "8ca3f03ce156fec63cf82b37bd82fcd506be6721", "filename": "compiler/rustc_error_codes/src/error_codes/E0133.md", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0133.md", "raw_url": "https://github.com/rust-lang/rust/raw/c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0133.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0133.md?ref=c5a93ba9fe32916ddf1f13e6f21c21cecd8568f0", "patch": "@@ -1,4 +1,4 @@\n-Unsafe code was used outside of an unsafe function or block.\n+Unsafe code was used outside of an unsafe block.\n \n Erroneous code example:\n \n@@ -30,4 +30,21 @@ fn main() {\n \n See the [unsafe section][unsafe-section] of the Book for more details.\n \n+#### Unsafe code in functions\n+\n+Unsafe code is currently accepted in unsafe functions, but that is being phased\n+out in favor of requiring unsafe blocks here too.\n+\n+```\n+unsafe fn f() { return; }\n+\n+unsafe fn g() {\n+    f(); // Is accepted, but no longer recommended\n+    unsafe { f(); } // Recommended way to write this\n+}\n+```\n+\n+Linting against this is controlled via the `unsafe_op_in_unsafe_fn` lint, which\n+is `allow` by default but will be upgraded to `warn` in a future edition.\n+\n [unsafe-section]: https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html"}]}