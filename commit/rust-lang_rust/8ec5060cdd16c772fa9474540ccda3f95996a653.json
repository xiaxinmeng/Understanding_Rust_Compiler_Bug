{"sha": "8ec5060cdd16c772fa9474540ccda3f95996a653", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYzUwNjBjZGQxNmM3NzJmYTk0NzQ1NDBjY2RhM2Y5NTk5NmE2NTM=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-08-08T18:36:53Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-08-08T18:36:53Z"}, "message": "Bump shrink_to stabilization to Rust 1.56", "tree": {"sha": "4b19bff7f5cd1df38f591af01f3813bccce44dd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b19bff7f5cd1df38f591af01f3813bccce44dd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ec5060cdd16c772fa9474540ccda3f95996a653", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmEQJEUACgkQ+boUO5X/\nbYL+Aw/+N68pB/vSpOG9Yr7e17HgdMGhKIrydtqi304tF78G6tVwn4DRHTG1UUCk\nsXgkleHiIWIX0xbGfNs/QBfif+AMyEbLYmKrGeBIpUVFl3Qo+JMn+E9An5TsEO4B\nr35R8lYh1vjTXETMJ7v4xedNeDoLkKcgKbbFpehPGVp211UcgsLYx1vGDOANCzxy\n8miE/nbQcDwWh+SR+MBVyey7qBsS20Z8f25sky50ciXrA6oEMz7aXdsHKw7Moqog\nyNm33W068KpIubc9tsibK/vbHuOphb0OCusgoFpnhwBcQ85h4/rfKz+cFioKQ1hT\ntlCwhHclw1Nnpys9GYmkHKM5fS+OiIsua7u/Y7NY+YdaaeD80qtFiexFVzGl5s6j\nXIyQYhvYd4WRJubBiq/cyMugRiQc7LA3KoIWWcy9FNE0TVp2IMoVvnXuyr+KdEDf\nMFDDbNKaZRH/viVj8AZBrrpyaYy4vmJizGF60Ftb9C0Izqk5chUeWa7Rt8GroPnr\njO+FSogQCC1zlT/vBxurC76DS2rFTuqD7hSNYXqqgXNcba50n5N+EUq5yxm6UWRA\nk3WK/EvNjA9b/5n3xxkwc+y4OexbC55SVURIz3oFtg+tgY4O/K0Qulumws2YsOkx\nV1nqixZJMxgU3HMrTe57kZ2LWqZnOTnYbtF7fiqtYgboyzfxyQM=\n=0RWG\n-----END PGP SIGNATURE-----", "payload": "tree 4b19bff7f5cd1df38f591af01f3813bccce44dd4\nparent 4867a2122599ef376280622ad9dfa9d8e730041f\nauthor David Tolnay <dtolnay@gmail.com> 1628447813 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1628447813 -0700\n\nBump shrink_to stabilization to Rust 1.56\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec5060cdd16c772fa9474540ccda3f95996a653", "html_url": "https://github.com/rust-lang/rust/commit/8ec5060cdd16c772fa9474540ccda3f95996a653", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ec5060cdd16c772fa9474540ccda3f95996a653/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4867a2122599ef376280622ad9dfa9d8e730041f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4867a2122599ef376280622ad9dfa9d8e730041f", "html_url": "https://github.com/rust-lang/rust/commit/4867a2122599ef376280622ad9dfa9d8e730041f"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "23c2c82f29d1942b970c0b1b3965311368f4f5dd", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -973,7 +973,7 @@ impl<T> BinaryHeap<T> {\n     /// assert!(heap.capacity() >= 10);\n     /// ```\n     #[inline]\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.data.shrink_to(min_capacity)\n     }"}, {"sha": "3bfbe66d2b0ed7445ebd7ff7359128eba6204aec", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -776,7 +776,7 @@ impl<T> VecDeque<T> {\n     /// buf.shrink_to(0);\n     /// assert!(buf.capacity() >= 4);\n     /// ```\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         let min_capacity = cmp::min(min_capacity, self.capacity());\n         // We don't have to worry about an overflow as neither `self.len()` nor `self.capacity()`"}, {"sha": "1b7edf65c8286995c360385637a187b848a6fa53", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -1110,7 +1110,7 @@ impl String {\n     /// ```\n     #[cfg(not(no_global_oom_handling))]\n     #[inline]\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.vec.shrink_to(min_capacity)\n     }"}, {"sha": "a660dc87cd42ee7ae16c1a6f43d6506cd607d1ce", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -951,7 +951,7 @@ impl<T, A: Allocator> Vec<T, A> {\n     /// assert!(vec.capacity() >= 3);\n     /// ```\n     #[cfg(not(no_global_oom_handling))]\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         if self.capacity() > min_capacity {\n             self.buf.shrink_to_fit(cmp::max(self.len, min_capacity));"}, {"sha": "4995646f91efb7e77414a1dc8cfed2ef48aac7b9", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -677,7 +677,7 @@ where\n     /// assert!(map.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.base.shrink_to(min_capacity);\n     }"}, {"sha": "99ae639f3eec7ab9b636bcb32186fa23bc271694", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -478,7 +478,7 @@ where\n     /// assert!(set.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.base.shrink_to(min_capacity)\n     }"}, {"sha": "46a1ff3f49eef598e5faf275b164528578306ae2", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -332,7 +332,7 @@ impl OsString {\n     /// assert!(s.capacity() >= 3);\n     /// ```\n     #[inline]\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }"}, {"sha": "69419145b1b4f21d80f5ed719d274ae976490e09", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec5060cdd16c772fa9474540ccda3f95996a653/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=8ec5060cdd16c772fa9474540ccda3f95996a653", "patch": "@@ -1398,7 +1398,7 @@ impl PathBuf {\n     /// Invokes [`shrink_to`] on the underlying instance of [`OsString`].\n     ///\n     /// [`shrink_to`]: OsString::shrink_to\n-    #[stable(feature = \"shrink_to\", since = \"1.55.0\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     #[inline]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)"}]}