{"sha": "b81553267437627af63c79c1a20c73af865a842a", "node_id": "C_kwDOAAsO6NoAKGI4MTU1MzI2NzQzNzYyN2FmNjNjNzljMWEyMGM3M2FmODY1YTg0MmE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-12-05T02:53:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-12-20T21:37:14Z"}, "message": "try to fix ICE in fn_abi_of_instance", "tree": {"sha": "45347895faf7b710f6d9e6ab85a648d0429d0bca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45347895faf7b710f6d9e6ab85a648d0429d0bca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b81553267437627af63c79c1a20c73af865a842a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b81553267437627af63c79c1a20c73af865a842a", "html_url": "https://github.com/rust-lang/rust/commit/b81553267437627af63c79c1a20c73af865a842a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b81553267437627af63c79c1a20c73af865a842a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90d7dada69f92317dddc20357277bb48baa9118b", "url": "https://api.github.com/repos/rust-lang/rust/commits/90d7dada69f92317dddc20357277bb48baa9118b", "html_url": "https://github.com/rust-lang/rust/commit/90d7dada69f92317dddc20357277bb48baa9118b"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "196fe7ce1b6ac46a2e6fe1c605eb197b5ba38390", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b81553267437627af63c79c1a20c73af865a842a/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b81553267437627af63c79c1a20c73af865a842a/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=b81553267437627af63c79c1a20c73af865a842a", "patch": "@@ -2581,9 +2581,12 @@ impl<'tcx> ty::Instance<'tcx> {\n     // for `Instance` (e.g. typeck would use `Ty::fn_sig` instead),\n     // or should go through `FnAbi` instead, to avoid losing any\n     // adjustments `fn_abi_of_instance` might be performing.\n-    fn fn_sig_for_fn_abi(&self, tcx: TyCtxt<'tcx>) -> ty::PolyFnSig<'tcx> {\n-        // FIXME(davidtwco,eddyb): A `ParamEnv` should be passed through to this function.\n-        let ty = self.ty(tcx, ty::ParamEnv::reveal_all());\n+    fn fn_sig_for_fn_abi(\n+        &self,\n+        tcx: TyCtxt<'tcx>,\n+        param_env: ty::ParamEnv<'tcx>,\n+    ) -> ty::PolyFnSig<'tcx> {\n+        let ty = self.ty(tcx, param_env);\n         match *ty.kind() {\n             ty::FnDef(..) => {\n                 // HACK(davidtwco,eddyb): This is a workaround for polymorphization considering\n@@ -2965,7 +2968,7 @@ fn fn_abi_of_instance<'tcx>(\n ) -> Result<&'tcx FnAbi<'tcx, Ty<'tcx>>, FnAbiError<'tcx>> {\n     let (param_env, (instance, extra_args)) = query.into_parts();\n \n-    let sig = instance.fn_sig_for_fn_abi(tcx);\n+    let sig = instance.fn_sig_for_fn_abi(tcx, param_env);\n \n     let caller_location = if instance.def.requires_caller_location(tcx) {\n         Some(tcx.caller_location_ty())"}]}