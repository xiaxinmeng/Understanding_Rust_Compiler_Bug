{"sha": "4f7109a42482e266410b23fedc9643a6d76e5fa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNzEwOWE0MjQ4MmUyNjY0MTBiMjNmZWRjOTY0M2E2ZDc2ZTVmYTU=", "commit": {"author": {"name": "arthurprs", "email": "arthurprs@gmail.com", "date": "2018-01-26T11:49:14Z"}, "committer": {"name": "arthurprs", "email": "arthurprs@gmail.com", "date": "2018-01-26T11:49:14Z"}, "message": "Use the slice length to hint the optimizer\n\nUsing the len of the iterator doesn't give the same result.\nThat's also why we can't generalize it to all TrustedLen iterators.", "tree": {"sha": "8d82492efe8eeb755fd3ddf8509696b7b2a03f10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d82492efe8eeb755fd3ddf8509696b7b2a03f10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f7109a42482e266410b23fedc9643a6d76e5fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7109a42482e266410b23fedc9643a6d76e5fa5", "html_url": "https://github.com/rust-lang/rust/commit/4f7109a42482e266410b23fedc9643a6d76e5fa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f7109a42482e266410b23fedc9643a6d76e5fa5/comments", "author": {"login": "arthurprs", "id": 715958, "node_id": "MDQ6VXNlcjcxNTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/715958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurprs", "html_url": "https://github.com/arthurprs", "followers_url": "https://api.github.com/users/arthurprs/followers", "following_url": "https://api.github.com/users/arthurprs/following{/other_user}", "gists_url": "https://api.github.com/users/arthurprs/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurprs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurprs/subscriptions", "organizations_url": "https://api.github.com/users/arthurprs/orgs", "repos_url": "https://api.github.com/users/arthurprs/repos", "events_url": "https://api.github.com/users/arthurprs/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurprs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arthurprs", "id": 715958, "node_id": "MDQ6VXNlcjcxNTk1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/715958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurprs", "html_url": "https://github.com/arthurprs", "followers_url": "https://api.github.com/users/arthurprs/followers", "following_url": "https://api.github.com/users/arthurprs/following{/other_user}", "gists_url": "https://api.github.com/users/arthurprs/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurprs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurprs/subscriptions", "organizations_url": "https://api.github.com/users/arthurprs/orgs", "repos_url": "https://api.github.com/users/arthurprs/repos", "events_url": "https://api.github.com/users/arthurprs/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurprs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275", "html_url": "https://github.com/rust-lang/rust/commit/0b56ab0f7b0c5e01611b7ea6a28c77bc09c26275"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ac70ae583c72da2a7da5012d908bc50d8bf0dfe7", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f7109a42482e266410b23fedc9643a6d76e5fa5/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7109a42482e266410b23fedc9643a6d76e5fa5/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=4f7109a42482e266410b23fedc9643a6d76e5fa5", "patch": "@@ -1223,7 +1223,8 @@ macro_rules! iterator {\n                 P: FnMut(Self::Item) -> bool,\n             {\n                 // The addition might panic on overflow\n-                let n = self.len();\n+                // Use the len of the slice to hint optimizer to remove result index bounds check.\n+                let n = make_slice!(self.ptr, self.end).len();\n                 self.try_fold(0, move |i, x| {\n                     if predicate(x) { Err(i) }\n                     else { Ok(i + 1) }\n@@ -1241,7 +1242,8 @@ macro_rules! iterator {\n             {\n                 // No need for an overflow check here, because `ExactSizeIterator`\n                 // implies that the number of elements fits into a `usize`.\n-                let n = self.len();\n+                // Use the len of the slice to hint optimizer to remove result index bounds check.\n+                let n = make_slice!(self.ptr, self.end).len();\n                 self.try_rfold(n, move |i, x| {\n                     let i = i - 1;\n                     if predicate(x) { Err(i) }"}]}