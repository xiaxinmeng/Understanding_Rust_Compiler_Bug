{"sha": "8b24964012cffda83deb7749fdddd047a4144df4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMjQ5NjQwMTJjZmZkYTgzZGViNzc0OWZkZGRkMDQ3YTQxNDRkZjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-27T23:01:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-27T23:01:39Z"}, "message": "auto merge of #13799 : m-r-r/rust/patch-std-io-standard_error, r=alexcrichton\n\nHello,\r\n\r\nWith the latest version of Rust, calling to the function [`std::io::standard_error()`](http://static.rust-lang.org/doc/master/std/io/fn.standard_error.html) succeeds only if the value of the argument is `EndOfFile`, `IoUnavailable` or `InvalidInput`. If the function is called with another value as argument, it fails without message.\r\n\r\nHere is a piece of code that reproduces the problem:\r\n\r\n```rust\r\nuse std::io::{standard_error,EndOfFile,FileNotFound,PermissionDenied};\r\n\r\nfn main() {\r\n     println!(\"Error 1: {}\", standard_error(EndOfFile)); // does not fail\r\n     println!(\"Error 2: {}\", standard_error(FileNotFound)); // fails\r\n     println!(\"Error 3: {}\", standard_error(PermissionDenied)); //fails\r\n}\r\n```\r\nThis was because the `IoErrorKind` passed as argument wasn't matched against all the possible values.\r\n\r\nI added the missing branches in the `match` statement inside the function, and i removed the call to the `fail!()` macro. I rebuilt the crate with the latest `rustc` version and it seems to works.", "tree": {"sha": "a970d386eac88b33f399cd6a7c00129b4fcf97c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a970d386eac88b33f399cd6a7c00129b4fcf97c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b24964012cffda83deb7749fdddd047a4144df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b24964012cffda83deb7749fdddd047a4144df4", "html_url": "https://github.com/rust-lang/rust/commit/8b24964012cffda83deb7749fdddd047a4144df4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b24964012cffda83deb7749fdddd047a4144df4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "479b8a812c011ee103b52cab665a3d6f02c40ddf", "url": "https://api.github.com/repos/rust-lang/rust/commits/479b8a812c011ee103b52cab665a3d6f02c40ddf", "html_url": "https://github.com/rust-lang/rust/commit/479b8a812c011ee103b52cab665a3d6f02c40ddf"}, {"sha": "a7b8a13e143c7e9c071149648d4681095a4abe4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7b8a13e143c7e9c071149648d4681095a4abe4a", "html_url": "https://github.com/rust-lang/rust/commit/a7b8a13e143c7e9c071149648d4681095a4abe4a"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "2a4952ec830fe71415f166b4a96a193ff6cae77b", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8b24964012cffda83deb7749fdddd047a4144df4/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b24964012cffda83deb7749fdddd047a4144df4/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=8b24964012cffda83deb7749fdddd047a4144df4", "patch": "@@ -1408,7 +1408,21 @@ pub fn standard_error(kind: IoErrorKind) -> IoError {\n         EndOfFile => \"end of file\",\n         IoUnavailable => \"I/O is unavailable\",\n         InvalidInput => \"invalid input\",\n-        _ => fail!()\n+        OtherIoError => \"unknown I/O error\",\n+        FileNotFound => \"file not found\",\n+        PermissionDenied => \"permission denied\",\n+        ConnectionFailed => \"connection failed\",\n+        Closed => \"stream is closed\",\n+        ConnectionRefused => \"connection refused\",\n+        ConnectionReset => \"connection reset\",\n+        ConnectionAborted => \"connection aborted\",\n+        NotConnected => \"not connected\",\n+        BrokenPipe => \"broken pipe\",\n+        PathAlreadyExists => \"file exists\",\n+        PathDoesntExist => \"no such file\",\n+        MismatchedFileTypeForOperation => \"mismatched file type\",\n+        ResourceUnavailable => \"resource unavailable\",\n+        TimedOut => \"operation timed out\"\n     };\n     IoError {\n         kind: kind,"}]}