{"sha": "abc40040be3e10bb8228d627012c92c54d8f791f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYzQwMDQwYmUzZTEwYmI4MjI4ZDYyNzAxMmM5MmM1NGQ4Zjc5MWY=", "commit": {"author": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2020-11-05T20:36:27Z"}, "committer": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2020-11-11T01:58:57Z"}, "message": "Remove local testing env var", "tree": {"sha": "6b5bbff334fde62eb47be885eaaeb8a25ea81ae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b5bbff334fde62eb47be885eaaeb8a25ea81ae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abc40040be3e10bb8228d627012c92c54d8f791f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abc40040be3e10bb8228d627012c92c54d8f791f", "html_url": "https://github.com/rust-lang/rust/commit/abc40040be3e10bb8228d627012c92c54d8f791f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abc40040be3e10bb8228d627012c92c54d8f791f/comments", "author": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be77402ee3ca6a4cab16b45c8c35baa13a9d5a05", "url": "https://api.github.com/repos/rust-lang/rust/commits/be77402ee3ca6a4cab16b45c8c35baa13a9d5a05", "html_url": "https://github.com/rust-lang/rust/commit/be77402ee3ca6a4cab16b45c8c35baa13a9d5a05"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "2dff7d0fbddfbd45d79e894f8e34dc5a29aa6855", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/abc40040be3e10bb8228d627012c92c54d8f791f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc40040be3e10bb8228d627012c92c54d8f791f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=abc40040be3e10bb8228d627012c92c54d8f791f", "patch": "@@ -44,8 +44,6 @@ use rustc_middle::ty::{self, Ty, TyCtxt, UpvarSubsts};\n use rustc_span::sym;\n use rustc_span::{Span, Symbol};\n \n-use std::env;\n-\n /// Describe the relationship between the paths of two places\n /// eg:\n /// - foo is ancestor of foo.bar.baz\n@@ -127,8 +125,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let local_def_id = closure_def_id.expect_local();\n \n         let mut capture_information = FxIndexMap::<Place<'tcx>, ty::CaptureInfo<'tcx>>::default();\n-        if self.tcx.features().capture_disjoint_fields || matches!(env::var(\"SG_NEW\"), Ok(_)) {\n-        } else {\n+        if !self.tcx.features().capture_disjoint_fields {\n             if let Some(upvars) = self.tcx.upvars_mentioned(closure_def_id) {\n                 for (&var_hir_id, _) in upvars.iter() {\n                     let place = self.place_for_root_variable(local_def_id, var_hir_id);"}]}