{"sha": "e1acdf51bf798bd9a160eb96e48d66f5e5bddd37", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYWNkZjUxYmY3OThiZDlhMTYwZWI5NmU0OGQ2NmY1ZTViZGRkMzc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-09-15T21:57:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-15T21:57:01Z"}, "message": "Rollup merge of #88907 - WaffleLapkin:targeted_const_fn_with_a_bound_in_impl_block_error, r=estebank\n\nHighlight the `const fn` if error happened because of a bound on the impl block\n\nCurrently, for the following code, the compiler produces the errors like the\nfollowing:\n```rust\nstruct Type<T>(T);\n\nimpl<T: Clone> Type<T> {\n    const fn f() {}\n}\n```\n```text\nerror[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n --> ./test.rs:3:6\n  |\n3 | impl<T: Clone> Type<T> {\n  |      ^\n  |\n  = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n  = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n```\n\nThis can be confusing (especially to newcomers) since the error mentions \"const fn parameters\", but highlights only the impl.\n\nThis PR adds function highlighting, changing the error to the following:\n\n```text\nerror[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n --> ./test.rs:3:6\n  |\n3 | impl<T: Clone> Type<T> {\n  |      ^\n4 |     pub const fn f() {}\n  |     ---------------- function declared as const here\n  |\n  = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n  = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n```\n\n---\n\nI've originally wanted to point directly to `const` token, but couldn't find a way to get it's span. It seems like this span is lost during the AST -> HIR lowering.\n\nAlso, since the errors for object casts in `const fn`s (`&T` -> `&dyn Trait`) seem to trigger the same error, this PR accidentally changes these errors too. Not sure if it's desired or how to fix this.\n\nP.S. it's my first time contributing to diagnostics, so feedback is very appreciated!\n\n---\n\nr? ```@estebank```\n\n```@rustbot``` label: +A-diagnostics", "tree": {"sha": "5b4a56da5d2adeee2420f58c5b40381f2b64971f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b4a56da5d2adeee2420f58c5b40381f2b64971f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhQmwtCRBK7hj4Ov3rIwAAlroIAERf2+0mq1KaDqhQDhGmcunF\ndg9WmdogPf18taYk6CYwXU3BEY15Fvw6JyGTZSfWBlMeKEa6oq/mRkOr/FpS5ccI\nghV3KbsC0pee0DGJmo3ub8bO95dxHL2vy3IvoqlpTXW0GWVZDePk/80Dm5JBogrn\nqk9iEIh6EjbkypNEbcY/nRc/DjM5/afRf+1dkaJKdhw3BPyosE/7aQaQ9FpljMmH\nA1xynP8jGso6UwpoWcBLmwt4bhBrh86dn6NDOEYSJC8Z9KVaCFBOsSW3tuMGV0Zi\nuYoReKuDQgqfnD1h73V5loSP/OwtX1VpTzGKp3NuruNOje8N9GkMjj6ue0vqjpo=\n=FMS6\n-----END PGP SIGNATURE-----\n", "payload": "tree 5b4a56da5d2adeee2420f58c5b40381f2b64971f\nparent 1bf94a156a387c3df6a25b5388162f8d71dd7f30\nparent 6ec7255d7b9c96c4cc0feafec6f26a2a9db3b7aa\nauthor Manish Goregaokar <manishsmail@gmail.com> 1631743021 -0700\ncommitter GitHub <noreply@github.com> 1631743021 -0700\n\nRollup merge of #88907 - WaffleLapkin:targeted_const_fn_with_a_bound_in_impl_block_error, r=estebank\n\nHighlight the `const fn` if error happened because of a bound on the impl block\n\nCurrently, for the following code, the compiler produces the errors like the\nfollowing:\n```rust\nstruct Type<T>(T);\n\nimpl<T: Clone> Type<T> {\n    const fn f() {}\n}\n```\n```text\nerror[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n --> ./test.rs:3:6\n  |\n3 | impl<T: Clone> Type<T> {\n  |      ^\n  |\n  = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n  = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n```\n\nThis can be confusing (especially to newcomers) since the error mentions \"const fn parameters\", but highlights only the impl.\n\nThis PR adds function highlighting, changing the error to the following:\n\n```text\nerror[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n --> ./test.rs:3:6\n  |\n3 | impl<T: Clone> Type<T> {\n  |      ^\n4 |     pub const fn f() {}\n  |     ---------------- function declared as const here\n  |\n  = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n  = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n```\n\n---\n\nI've originally wanted to point directly to `const` token, but couldn't find a way to get it's span. It seems like this span is lost during the AST -> HIR lowering.\n\nAlso, since the errors for object casts in `const fn`s (`&T` -> `&dyn Trait`) seem to trigger the same error, this PR accidentally changes these errors too. Not sure if it's desired or how to fix this.\n\nP.S. it's my first time contributing to diagnostics, so feedback is very appreciated!\n\n---\n\nr? ```@estebank```\n\n```@rustbot``` label: +A-diagnostics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37", "html_url": "https://github.com/rust-lang/rust/commit/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bf94a156a387c3df6a25b5388162f8d71dd7f30", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bf94a156a387c3df6a25b5388162f8d71dd7f30", "html_url": "https://github.com/rust-lang/rust/commit/1bf94a156a387c3df6a25b5388162f8d71dd7f30"}, {"sha": "6ec7255d7b9c96c4cc0feafec6f26a2a9db3b7aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ec7255d7b9c96c4cc0feafec6f26a2a9db3b7aa", "html_url": "https://github.com/rust-lang/rust/commit/6ec7255d7b9c96c4cc0feafec6f26a2a9db3b7aa"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "2a29675083888e9a8021e9e7082c89200027f91d", "filename": "compiler/rustc_const_eval/src/transform/check_consts/ops.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=e1acdf51bf798bd9a160eb96e48d66f5e5bddd37", "patch": "@@ -599,12 +599,21 @@ pub mod ty {\n         }\n \n         fn build_error(&self, ccx: &ConstCx<'_, 'tcx>, span: Span) -> DiagnosticBuilder<'tcx> {\n-            feature_err(\n+            let mut builder = feature_err(\n                 &ccx.tcx.sess.parse_sess,\n                 sym::const_fn_trait_bound,\n                 span,\n                 \"trait bounds other than `Sized` on const fn parameters are unstable\",\n-            )\n+            );\n+\n+            match ccx.fn_sig() {\n+                Some(fn_sig) if !fn_sig.span.contains(span) => {\n+                    builder.span_label(fn_sig.span, \"function declared as const here\");\n+                }\n+                _ => {}\n+            }\n+\n+            builder\n         }\n     }\n "}, {"sha": "d1c2a04d6a61b395f67a759b81421dd4e7d9ac58", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.stderr", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr?ref=e1acdf51bf798bd9a160eb96e48d66f5e5bddd37", "patch": "@@ -214,6 +214,9 @@ error[E0658]: trait bounds other than `Sized` on const fn parameters are unstabl\n    |\n LL | impl<T: std::fmt::Debug> Foo<T> {\n    |      ^\n+LL |\n+LL |     const fn foo(&self) {}\n+   |     ------------------- function declared as const here\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n@@ -223,6 +226,9 @@ error[E0658]: trait bounds other than `Sized` on const fn parameters are unstabl\n    |\n LL | impl<T: std::fmt::Debug + Sized> Foo<T> {\n    |      ^\n+LL |\n+LL |     const fn foo2(&self) {}\n+   |     -------------------- function declared as const here\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n@@ -232,6 +238,9 @@ error[E0658]: trait bounds other than `Sized` on const fn parameters are unstabl\n    |\n LL | impl<T: Sync + Sized> Foo<T> {\n    |      ^\n+LL |\n+LL |     const fn foo3(&self) {}\n+   |     -------------------- function declared as const here\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n@@ -292,7 +301,9 @@ error[E0658]: trait bounds other than `Sized` on const fn parameters are unstabl\n   --> $DIR/min_const_fn.rs:139:41\n    |\n LL | const fn really_no_traits_i_mean_it() { (&() as &dyn std::fmt::Debug, ()).1 }\n-   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | -------------------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | |\n+   | function declared as const here\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n@@ -301,7 +312,9 @@ error[E0658]: trait bounds other than `Sized` on const fn parameters are unstabl\n   --> $DIR/min_const_fn.rs:139:42\n    |\n LL | const fn really_no_traits_i_mean_it() { (&() as &dyn std::fmt::Debug, ()).1 }\n-   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | -------------------------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | |\n+   | function declared as const here\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n@@ -310,7 +323,9 @@ error[E0658]: trait bounds other than `Sized` on const fn parameters are unstabl\n   --> $DIR/min_const_fn.rs:139:42\n    |\n LL | const fn really_no_traits_i_mean_it() { (&() as &dyn std::fmt::Debug, ()).1 }\n-   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | -------------------------------------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | |\n+   | function declared as const here\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable"}, {"sha": "2cad8a862be4cba54f578a270339ac0aa02d50bb", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_dyn.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1acdf51bf798bd9a160eb96e48d66f5e5bddd37/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr?ref=e1acdf51bf798bd9a160eb96e48d66f5e5bddd37", "patch": "@@ -1,6 +1,8 @@\n error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn_dyn.rs:9:5\n    |\n+LL | const fn no_inner_dyn_trait2(x: Hide) {\n+   | ------------------------------------- function declared as const here\n LL |     x.0.field;\n    |     ^^^^^^^^^\n    |\n@@ -11,7 +13,9 @@ error[E0658]: trait bounds other than `Sized` on const fn parameters are unstabl\n   --> $DIR/min_const_fn_dyn.rs:12:66\n    |\n LL | const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }\n-   |                                                                  ^^\n+   | -----------------------------------------                        ^^\n+   | |\n+   | function declared as const here\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable"}]}