{"sha": "f8cfc387fd3eef88033c93086ef4beb9d8e4f082", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4Y2ZjMzg3ZmQzZWVmODgwMzNjOTMwODZlZjRiZWI5ZDhlNGYwODI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-25T10:30:35Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-25T10:30:35Z"}, "message": "address nits", "tree": {"sha": "68643bcc3cc16f016f75efecd5c13056153df4ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68643bcc3cc16f016f75efecd5c13056153df4ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8cfc387fd3eef88033c93086ef4beb9d8e4f082", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXlepLAAoJEFbW7qD8Z6xGBvMP/jmtLvUAqkc6fM1MHI3aBXZL\nZWbLcRyzJAQe4WE8X5y+Qo9wLTOvsWLU8SoonPDrg4DKgabFT5uJSC5sxHyYAacn\nNNy8SJibR6vMMacdS2PMZUkCJ7mnXv03JJ3Z5Ppnih5FGusekwM4csh2ZQNV0vPk\n08WwE4UsJUs5OIx8QR4Mh9/oWFQOe7nLfcbgnhCrFEIHxDCQHRT/JXk6fsSmGfSx\ncgxlpIVS0bjutkgvY2/liZniuMxPXmVauWJS/prEueRvZjFBsWJJoTJW75HO3xMj\nsKCWgbyJA061Ssaz4BTwcG12mYRwE4l/E3wJYFL1BGEqk7OKTWX90SMTpx88qPqg\np3nVacLV6B0GuI9US81dXrHFOFaOZuTm7lbfzlG4Y5fUcL6bkUTDBn7TFK/9uNCt\n20Ztsd637OJ20ZccVXhNnU3aTz207b4OQUu126Y27zL6wN1r0KeXZPR6MvU4L1/u\n73Tf1Y9uoxV3tDSqF99y3zVkNp1ENL0vzCMjDpldPIDpsKlhfj/RWB43AOolLMKO\nTFCIyIIgPIT1EJwPKwCcDT8dHY7Ptxckfb/OXDpGPnOambZ/FeEL/B7PSq58hCBK\nXXKC+F8qTn+6Wfo1LoHSFNfh4KFAxKobvwjY6iv61/EUcku8SWxIKaFnYtnrNepA\nef6KYUqcWp4e6iSOxpQs\n=ewGV\n-----END PGP SIGNATURE-----", "payload": "tree 68643bcc3cc16f016f75efecd5c13056153df4ec\nparent ec897f9156332a1d1bb39975bfcfc32a3ea8e473\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1469442635 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1469442635 +0200\n\naddress nits"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8cfc387fd3eef88033c93086ef4beb9d8e4f082", "html_url": "https://github.com/rust-lang/rust/commit/f8cfc387fd3eef88033c93086ef4beb9d8e4f082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8cfc387fd3eef88033c93086ef4beb9d8e4f082/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec897f9156332a1d1bb39975bfcfc32a3ea8e473", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec897f9156332a1d1bb39975bfcfc32a3ea8e473", "html_url": "https://github.com/rust-lang/rust/commit/ec897f9156332a1d1bb39975bfcfc32a3ea8e473"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "d99d2c8132e32263882facdc6d1e367e88099858", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8cfc387fd3eef88033c93086ef4beb9d8e4f082/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8cfc387fd3eef88033c93086ef4beb9d8e4f082/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=f8cfc387fd3eef88033c93086ef4beb9d8e4f082", "patch": "@@ -168,7 +168,6 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n     pub fn reallocate(&mut self, ptr: Pointer, new_size: usize, align: usize) -> EvalResult<'tcx, Pointer> {\n         // TODO(solson): Report error about non-__rust_allocate'd pointer.\n         if ptr.offset != 0 {\n-            // TODO(solson): Report error about non-__rust_allocate'd pointer.\n             return Err(EvalError::Unimplemented(format!(\"bad pointer offset: {}\", ptr.offset)));\n         }\n         if ptr.points_to_zst() {\n@@ -184,12 +183,11 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n             alloc.bytes.extend(iter::repeat(0).take(amount));\n             alloc.undef_mask.grow(amount, false);\n         } else if size > new_size {\n-            // it's possible to cause miri to use arbitrary amounts of memory that aren't detectable\n-            // through the memory_usage value, by allocating a lot and reallocating to zero\n             self.memory_usage -= size - new_size;\n             self.clear_relocations(ptr.offset(new_size as isize), size - new_size)?;\n             let alloc = self.get_mut(ptr.alloc_id)?;\n             alloc.bytes.truncate(new_size);\n+            alloc.bytes.shrink_to_fit();\n             alloc.undef_mask.truncate(new_size);\n         }\n "}]}