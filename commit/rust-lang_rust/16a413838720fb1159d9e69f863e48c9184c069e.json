{"sha": "16a413838720fb1159d9e69f863e48c9184c069e", "node_id": "C_kwDOAAsO6NoAKDE2YTQxMzgzODcyMGZiMTE1OWQ5ZTY5Zjg2M2U0OGM5MTg0YzA2OWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-09T17:48:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-09T17:48:36Z"}, "message": "Rollup merge of #107803 - eggyal:do_not_bring_trait_alias_supertraits_into_scope, r=compiler-errors\n\nDo not bring trait alias supertraits into scope\n\nFixes #107747\ncc #41517", "tree": {"sha": "b527c42aa6f1c6250ecf91e4a1de8c4b6e48126b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b527c42aa6f1c6250ecf91e4a1de8c4b6e48126b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16a413838720fb1159d9e69f863e48c9184c069e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj5TH0CRBK7hj4Ov3rIwAAhAMIAEZNJ1KzWMdj+P/YK4b/VdGz\nUNwwTDYVWSWfUIr1xzpBHJEQyKfMGUXQOYKHOPqM1z+iqb9328yQMxiel2pAYkYE\nY8PfOjm8ljTNasTD+ZjGmw8nWFN0xmQED5GDlvsUukfOCPv8OCDfcqKdrFO1DWxt\nj/tT3ZJuXo4cqSVv4cffjMaBknEG045svFs/4dOLZsqfGAp68Tq/au8mw+YJBg9A\nqPZKCQILHhfC+9IBjusONjDMJTMqshvNse2djo3gReWmCGeRShbERBSJytg0J768\nouMhy5PZoqFOxkEWVR5sYQui0eM1blDwsXormzu/4HPIXuQt87SQ/NEeIM556i4=\n=cZAh\n-----END PGP SIGNATURE-----\n", "payload": "tree b527c42aa6f1c6250ecf91e4a1de8c4b6e48126b\nparent 39ba11036a55723fc31590ca6d4ac1845c941992\nparent 38ec810c37439a6a3742d85b950978d904b4f826\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1675964916 +0530\ncommitter GitHub <noreply@github.com> 1675964916 +0530\n\nRollup merge of #107803 - eggyal:do_not_bring_trait_alias_supertraits_into_scope, r=compiler-errors\n\nDo not bring trait alias supertraits into scope\n\nFixes #107747\ncc #41517\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16a413838720fb1159d9e69f863e48c9184c069e", "html_url": "https://github.com/rust-lang/rust/commit/16a413838720fb1159d9e69f863e48c9184c069e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16a413838720fb1159d9e69f863e48c9184c069e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39ba11036a55723fc31590ca6d4ac1845c941992", "url": "https://api.github.com/repos/rust-lang/rust/commits/39ba11036a55723fc31590ca6d4ac1845c941992", "html_url": "https://github.com/rust-lang/rust/commit/39ba11036a55723fc31590ca6d4ac1845c941992"}, {"sha": "38ec810c37439a6a3742d85b950978d904b4f826", "url": "https://api.github.com/repos/rust-lang/rust/commits/38ec810c37439a6a3742d85b950978d904b4f826", "html_url": "https://github.com/rust-lang/rust/commit/38ec810c37439a6a3742d85b950978d904b4f826"}], "stats": {"total": 69, "additions": 52, "deletions": 17}, "files": [{"sha": "0cf58179ec27210b7ec96d9e6e0dd3e8ae5c342e", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/16a413838720fb1159d9e69f863e48c9184c069e/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16a413838720fb1159d9e69f863e48c9184c069e/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=16a413838720fb1159d9e69f863e48c9184c069e", "patch": "@@ -951,24 +951,38 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n         let trait_ref = self.tcx.mk_trait_ref(trait_def_id, trait_substs);\n \n         if self.tcx.is_trait_alias(trait_def_id) {\n-            // For trait aliases, assume all supertraits are relevant.\n-            let bounds = iter::once(ty::Binder::dummy(trait_ref));\n-            self.elaborate_bounds(bounds, |this, new_trait_ref, item| {\n-                let new_trait_ref = this.erase_late_bound_regions(new_trait_ref);\n+            // For trait aliases, recursively assume all explicitly named traits are relevant\n+            for expansion in traits::expand_trait_aliases(\n+                self.tcx,\n+                iter::once((ty::Binder::dummy(trait_ref), self.span)),\n+            ) {\n+                let bound_trait_ref = expansion.trait_ref();\n+                for item in self.impl_or_trait_item(bound_trait_ref.def_id()) {\n+                    if !self.has_applicable_self(&item) {\n+                        self.record_static_candidate(CandidateSource::Trait(\n+                            bound_trait_ref.def_id(),\n+                        ));\n+                    } else {\n+                        let new_trait_ref = self.erase_late_bound_regions(bound_trait_ref);\n \n-                let (xform_self_ty, xform_ret_ty) =\n-                    this.xform_self_ty(&item, new_trait_ref.self_ty(), new_trait_ref.substs);\n-                this.push_candidate(\n-                    Candidate {\n-                        xform_self_ty,\n-                        xform_ret_ty,\n-                        item,\n-                        import_ids: import_ids.clone(),\n-                        kind: TraitCandidate(new_trait_ref),\n-                    },\n-                    false,\n-                );\n-            });\n+                        let (xform_self_ty, xform_ret_ty) = self.xform_self_ty(\n+                            &item,\n+                            new_trait_ref.self_ty(),\n+                            new_trait_ref.substs,\n+                        );\n+                        self.push_candidate(\n+                            Candidate {\n+                                xform_self_ty,\n+                                xform_ret_ty,\n+                                item,\n+                                import_ids: import_ids.clone(),\n+                                kind: TraitCandidate(new_trait_ref),\n+                            },\n+                            false,\n+                        );\n+                    }\n+                }\n+            }\n         } else {\n             debug_assert!(self.tcx.is_trait(trait_def_id));\n             if self.tcx.trait_is_auto(trait_def_id) {"}, {"sha": "9b41a8096c4e50cf927198d66590f14ebb4294fc", "filename": "tests/ui/traits/alias/issue-107747-do-not-assemble-supertraits.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/16a413838720fb1159d9e69f863e48c9184c069e/tests%2Fui%2Ftraits%2Falias%2Fissue-107747-do-not-assemble-supertraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16a413838720fb1159d9e69f863e48c9184c069e/tests%2Fui%2Ftraits%2Falias%2Fissue-107747-do-not-assemble-supertraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Falias%2Fissue-107747-do-not-assemble-supertraits.rs?ref=16a413838720fb1159d9e69f863e48c9184c069e", "patch": "@@ -0,0 +1,21 @@\n+// Regression test for #107747: methods from trait alias supertraits were brought into scope\n+//\n+// check-pass\n+\n+#![feature(trait_alias)]\n+\n+use std::fmt;\n+\n+trait Foo: fmt::Debug {}\n+trait Bar = Foo;\n+\n+#[derive(Debug)]\n+struct Qux(bool);\n+\n+impl fmt::Display for Qux {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.0.fmt(f)\n+    }\n+}\n+\n+fn main() {}"}]}