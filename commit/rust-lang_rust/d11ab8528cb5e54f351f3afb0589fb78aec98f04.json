{"sha": "d11ab8528cb5e54f351f3afb0589fb78aec98f04", "node_id": "C_kwDOAAsO6NoAKGQxMWFiODUyOGNiNWU1NGYzNTFmM2FmYjA1ODlmYjc4YWVjOThmMDQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-08T16:15:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-08T16:15:04Z"}, "message": "Rollup merge of #97878 - GuillaumeGomez:regression-test-84634, r=notriddle\n\nAdd regression test for anonymous lifetimes\n\nFixes #84634.\n\nSeems like this issue was already solved. I added a regression test just in case so we can close it with peace in mind.\n\nr? `@notriddle`", "tree": {"sha": "71bc9ef5dba2122d51744c6f7a1aa131b252a850", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71bc9ef5dba2122d51744c6f7a1aa131b252a850"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d11ab8528cb5e54f351f3afb0589fb78aec98f04", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioMsICRBK7hj4Ov3rIwAAaJcIAAnCq/nKPXWKtOVRe1MkJ+ho\nlHuC/a9uwZSTkhZqIxoPVafWY6rBIYTXWsF8BeHmC2fam4wh+149Ah/f0r6j6hUu\n+MnuTmMzCY+RncGKGjBDcxE0cxbOq6ZMFCbScfGIaPiADovO7Sc5mB/aFF9PoKkm\n8a9HVq2RHWYSWjx3Lpck8fmXINq7HTZoGg3ZhbvjDC+dZnmsDIsQBEdLLiYolnpU\n1i7jmTOP4+fwJtU3ZLZGuEsfaeWwvvt1YW5D0VNbnGExzGxXDHK7Gy23J40Bn8rT\nrPAhYKaFW9bxPqdWZ2sGsRckA2JAgoW+d6DJc8QByEfGw8Bdp4B/ICwHqjLPuwI=\n=KCBU\n-----END PGP SIGNATURE-----\n", "payload": "tree 71bc9ef5dba2122d51744c6f7a1aa131b252a850\nparent 8a2aedc6e3c5a3a5b8ff6d8936a631f48b772ca7\nparent e846c523e4604aef5ce8085c583622f1444bda39\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1654704904 +0200\ncommitter GitHub <noreply@github.com> 1654704904 +0200\n\nRollup merge of #97878 - GuillaumeGomez:regression-test-84634, r=notriddle\n\nAdd regression test for anonymous lifetimes\n\nFixes #84634.\n\nSeems like this issue was already solved. I added a regression test just in case so we can close it with peace in mind.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d11ab8528cb5e54f351f3afb0589fb78aec98f04", "html_url": "https://github.com/rust-lang/rust/commit/d11ab8528cb5e54f351f3afb0589fb78aec98f04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d11ab8528cb5e54f351f3afb0589fb78aec98f04/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a2aedc6e3c5a3a5b8ff6d8936a631f48b772ca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a2aedc6e3c5a3a5b8ff6d8936a631f48b772ca7", "html_url": "https://github.com/rust-lang/rust/commit/8a2aedc6e3c5a3a5b8ff6d8936a631f48b772ca7"}, {"sha": "e846c523e4604aef5ce8085c583622f1444bda39", "url": "https://api.github.com/repos/rust-lang/rust/commits/e846c523e4604aef5ce8085c583622f1444bda39", "html_url": "https://github.com/rust-lang/rust/commit/e846c523e4604aef5ce8085c583622f1444bda39"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "f5a7d225847c483b27b62ab8feb837e7e8e9f034", "filename": "src/test/rustdoc/anonymous-lifetime.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d11ab8528cb5e54f351f3afb0589fb78aec98f04/src%2Ftest%2Frustdoc%2Fanonymous-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11ab8528cb5e54f351f3afb0589fb78aec98f04/src%2Ftest%2Frustdoc%2Fanonymous-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanonymous-lifetime.rs?ref=d11ab8528cb5e54f351f3afb0589fb78aec98f04", "patch": "@@ -0,0 +1,28 @@\n+// Regression test for https://github.com/rust-lang/rust/issues/84634\n+#![crate_name = \"foo\"]\n+\n+use std::pin::Pin;\n+use std::task::Poll;\n+\n+pub trait Stream {\n+    type Item;\n+\n+    fn poll_next(mut self: Pin<&mut Self>) -> Poll<Option<Self::Item>>;\n+    fn size_hint(&self) -> (usize, Option<usize>);\n+}\n+\n+// @has 'foo/trait.Stream.html'\n+// @has - '//*[@class=\"code-header in-band\"]' 'impl<S: ?Sized + Stream + Unpin> Stream for &mut S'\n+impl<S: ?Sized + Stream + Unpin> Stream for &mut S {\n+    type Item = S::Item;\n+\n+    fn poll_next(\n+        mut self: Pin<&mut Self>,\n+    ) -> Poll<Option<Self::Item>> {\n+        S::poll_next(Pin::new(&mut **self), cx)\n+    }\n+\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        (**self).size_hint()\n+    }\n+}"}]}