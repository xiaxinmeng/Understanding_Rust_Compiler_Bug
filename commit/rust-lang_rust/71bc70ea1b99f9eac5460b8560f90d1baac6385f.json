{"sha": "71bc70ea1b99f9eac5460b8560f90d1baac6385f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYmM3MGVhMWI5OWY5ZWFjNTQ2MGI4NTYwZjkwZDFiYWFjNjM4NWY=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-04-21T02:01:20Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-04-21T15:16:03Z"}, "message": "Remove references to `old_{path,io}`", "tree": {"sha": "fa784d9d56386b9e7b21de41baa8707e9a50b07c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa784d9d56386b9e7b21de41baa8707e9a50b07c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71bc70ea1b99f9eac5460b8560f90d1baac6385f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71bc70ea1b99f9eac5460b8560f90d1baac6385f", "html_url": "https://github.com/rust-lang/rust/commit/71bc70ea1b99f9eac5460b8560f90d1baac6385f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71bc70ea1b99f9eac5460b8560f90d1baac6385f/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe7f95fb3cdfa38531b1072ba42bea09297a39db", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7f95fb3cdfa38531b1072ba42bea09297a39db", "html_url": "https://github.com/rust-lang/rust/commit/fe7f95fb3cdfa38531b1072ba42bea09297a39db"}], "stats": {"total": 48, "additions": 12, "deletions": 36}, "files": [{"sha": "bfa8f1b419031df30c7a8fc874ddb30d8c75a195", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -262,7 +262,6 @@\n //! Example usage is:\n //!\n //! ```\n-//! # #![feature(old_io)]\n //! # #![allow(unused_must_use)]\n //! use std::io::Write;\n //! let mut w = Vec::new();\n@@ -290,7 +289,6 @@\n //! off, some example usage is:\n //!\n //! ```\n-//! # #![feature(old_io)]\n //! use std::fmt;\n //! use std::io::{self, Write};\n //!"}, {"sha": "d042ef79233227aa55bfa2a0d5962201c3bd6272", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -2059,7 +2059,7 @@ impl<T: Iterator<Item=char>> Builder<T> {\n     }\n }\n \n-/// Decodes a json value from an `&mut old_io::Reader`\n+/// Decodes a json value from an `&mut io::Read`\n pub fn from_reader(rdr: &mut Read) -> Result<Json, BuilderError> {\n     let mut contents = Vec::new();\n     match rdr.read_to_end(&mut contents) {"}, {"sha": "11b057d0094ae1d0674b22db405f03307eb35a47", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -19,7 +19,6 @@ use rt::{backtrace, unwind};\n use sys::stdio::Stderr;\n use thread;\n \n-// Defined in this module instead of old_io::stdio so that the unwinding\n thread_local! {\n     pub static LOCAL_STDERR: RefCell<Option<Box<Write + Send>>> = {\n         RefCell::new(None)"}, {"sha": "4f350b909caa7fc5b2a913b2b7770b3acac4b6db", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -43,7 +43,6 @@\n #![feature(std_misc)]\n #![feature(libc)]\n #![feature(set_stdio)]\n-#![cfg_attr(test, feature(old_io))]\n \n extern crate getopts;\n extern crate serialize;"}, {"sha": "6cc2d427c25dcc6a41cdb3362e94147ad42a483c", "filename": "src/test/auxiliary/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(std_misc, old_path)]\n+#![feature(std_misc)]\n \n use std::dynamic_lib::DynamicLibrary;\n "}, {"sha": "67975d02b19f06f1a037091612338475d11b47fd", "filename": "src/test/debuginfo/issue13213.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Fdebuginfo%2Fissue13213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Fdebuginfo%2Fissue13213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue13213.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -12,8 +12,6 @@\n \n // aux-build:issue13213aux.rs\n \n-#![feature(old_io)]\n-\n extern crate issue13213aux;\n \n // compile-flags:-g"}, {"sha": "fd69d2786b8d0800adb74bc000a7b73b638e1c0f", "filename": "src/test/run-make/cannot-read-embedded-idents/create_and_compile.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-make%2Fcannot-read-embedded-idents%2Fcreate_and_compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-make%2Fcannot-read-embedded-idents%2Fcreate_and_compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcannot-read-embedded-idents%2Fcreate_and_compile.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(old_io, old_path)]\n-\n use std::env;\n use std::fs::File;\n use std::process::Command;"}, {"sha": "244f32b8ee5fc323feaf63457562faf436f95bb2", "filename": "src/test/run-make/extern-fn-reachable/main.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-fn-reachable%2Fmain.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -8,10 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(std_misc, old_path, os)]\n+#![feature(std_misc)]\n \n use std::dynamic_lib::DynamicLibrary;\n-use std::os;\n use std::path::Path;\n \n pub fn main() {"}, {"sha": "0fa67e873f89c4bb866383c6c44f759716066d29", "filename": "src/test/run-pass/closure-reform.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fclosure-reform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fclosure-reform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-reform.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -11,9 +11,7 @@\n /* Any copyright is dedicated to the Public Domain.\n  * http://creativecommons.org/publicdomain/zero/1.0/ */\n \n-#![feature(unboxed_closures, old_io)]\n-\n-use std::mem;\n+#![feature(unboxed_closures)]\n \n fn call_it<F>(f: F)\n     where F : FnOnce(String) -> String"}, {"sha": "c81e16ebb7c60f3c62b4303112783fec5c03efc1", "filename": "src/test/run-pass/issue-10626.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fissue-10626.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10626.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -12,8 +12,6 @@\n // Make sure that if a process doesn't have its stdio/stderr descriptors set up\n // that we don't die in a large ball of fire\n \n-#![feature(old_io)]\n-\n use std::env;\n use std::process::{Command, Stdio};\n "}, {"sha": "9da04f723553105d1f6226892e4f526afc3a7db1", "filename": "src/test/run-pass/issue-11881.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fissue-11881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fissue-11881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11881.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n \n-#![feature(rustc_private, old_io)]\n+#![feature(rustc_private)]\n \n extern crate rbml;\n extern crate serialize;"}, {"sha": "ba6815d5b7c6973e0a8588be3ffcb10177bb1c4b", "filename": "src/test/run-pass/issue-14940.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fissue-14940.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fissue-14940.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14940.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n \n-#![feature(old_io, io)]\n-\n use std::env;\n use std::process::Command;\n use std::io::{self, Write};"}, {"sha": "74da4273b6ab0fb9b773425793bed9e05ae5df70", "filename": "src/test/run-pass/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -12,7 +12,7 @@\n // ignore-android: FIXME(#10379)\n // ignore-windows: std::dynamic_lib does not work on Windows well\n \n-#![feature(std_misc, old_path)]\n+#![feature(std_misc)]\n \n extern crate linkage_visibility as foo;\n "}, {"sha": "09759326afd911c69b942cddefb49a87c02332bc", "filename": "src/test/run-pass/logging-separate-lines.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -12,7 +12,7 @@\n // exec-env:RUST_LOG=debug\n // compile-flags:-C debug-assertions=y\n \n-#![feature(old_io, rustc_private)]\n+#![feature(rustc_private)]\n \n #[macro_use]\n extern crate log;"}, {"sha": "5eecf27db677bec2f0ec87f4add5a46ff439710e", "filename": "src/test/run-pass/method-mut-self-modifies-mut-slice-lvalue.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fmethod-mut-self-modifies-mut-slice-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fmethod-mut-self-modifies-mut-slice-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmethod-mut-self-modifies-mut-slice-lvalue.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -13,9 +13,8 @@\n // temporary. Issue #19147.\n \n \n-#![feature(core, old_io)]\n+#![feature(core)]\n \n-use std::mem;\n use std::slice;\n \n pub type IoResult<T> = Result<T, ()>;"}, {"sha": "a155ee396b614bc917d1923cad9fe95b2ced0c9d", "filename": "src/test/run-pass/process-spawn-with-unicode-params.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -17,15 +17,13 @@\n // intact.\n \n // ignore-aarch64\n-#![feature(path, fs, os, io, old_path)]\n \n use std::io::prelude::*;\n use std::io;\n use std::fs;\n use std::process::Command;\n-use std::os;\n use std::env;\n-use std::path::{Path, PathBuf};\n+use std::path::Path;\n \n fn main() {\n     let my_args = env::args().collect::<Vec<_>>();"}, {"sha": "db543116d17a5c3c040574a6c5a1a2937f2372d0", "filename": "src/test/run-pass/running-with-no-runtime.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frunning-with-no-runtime.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -8,16 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(start, os, std_misc, old_io)]\n+#![feature(start, std_misc)]\n \n use std::ffi::CStr;\n use std::process::{Command, Output};\n-use std::os;\n use std::rt::unwind::try;\n-use std::rt;\n use std::str;\n-use std::thread::Thread;\n-use std::thunk::Thunk;\n \n #[start]\n fn start(argc: isize, argv: *const *const u8) -> isize {"}, {"sha": "542756d1c4ad9d2df02b47feb21a96acf4ec48cb", "filename": "src/test/run-pass/task-stderr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Ftask-stderr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Ftask-stderr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-stderr.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -10,8 +10,7 @@\n \n // pretty-expanded FIXME #23616\n \n-#![allow(unknown_features)]\n-#![feature(box_syntax, old_io, std_misc, io, set_panic, set_stdio)]\n+#![feature(box_syntax, set_stdio)]\n \n use std::io::prelude::*;\n use std::io;"}, {"sha": "d40d9c89f89dff05b683eecad1d7bd40621995c6", "filename": "src/test/run-pass/trait-coercion.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Ftrait-coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71bc70ea1b99f9eac5460b8560f90d1baac6385f/src%2Ftest%2Frun-pass%2Ftrait-coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-coercion.rs?ref=71bc70ea1b99f9eac5460b8560f90d1baac6385f", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(unknown_features)]\n-#![feature(box_syntax, old_io, io)]\n+#![feature(box_syntax)]\n \n use std::io::{self, Write};\n "}]}