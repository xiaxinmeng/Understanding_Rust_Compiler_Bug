{"sha": "688a09910a01800bfa031892540f29bb0c3b4095", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4OGEwOTkxMGEwMTgwMGJmYTAzMTg5MjU0MGYyOWJiMGMzYjQwOTU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-29T17:27:35Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-07-23T07:15:11Z"}, "message": "Move E0006 into E0005", "tree": {"sha": "e4989af1fc8ab62cf094bec5cd68dae08a104887", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4989af1fc8ab62cf094bec5cd68dae08a104887"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/688a09910a01800bfa031892540f29bb0c3b4095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/688a09910a01800bfa031892540f29bb0c3b4095", "html_url": "https://github.com/rust-lang/rust/commit/688a09910a01800bfa031892540f29bb0c3b4095", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/688a09910a01800bfa031892540f29bb0c3b4095/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36d852918f5de255a706667af9373edea7429d3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/36d852918f5de255a706667af9373edea7429d3f", "html_url": "https://github.com/rust-lang/rust/commit/36d852918f5de255a706667af9373edea7429d3f"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "75d94cdffb13db61df179a42bc86081323e0c250", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/688a09910a01800bfa031892540f29bb0c3b4095/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/688a09910a01800bfa031892540f29bb0c3b4095/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=688a09910a01800bfa031892540f29bb0c3b4095", "patch": "@@ -72,7 +72,7 @@ fn foo(x: Option<String>) {\n E0003: r##\"\n Not-a-Number (NaN) values cannot be compared for equality and hence can never\n match the input to a match expression. To match against NaN values, you should\n-instead use the `is_nan()` method in a guard, like so: \n+instead use the `is_nan()` method in a guard, like so:\n \n ```\n match number {\n@@ -96,21 +96,13 @@ underscore `_` wildcard pattern can be added after all other patterns to match\n \"anything else\".\n \"##,\n \n-// FIXME: Remove duplication here?\n E0005: r##\"\n Patterns used to bind names must be irrefutable, that is, they must guarantee\n that a name will be extracted in all cases. If you encounter this error you\n probably need to use a `match` or `if let` to deal with the possibility of\n failure.\n \"##,\n \n-E0006: r##\"\n-Patterns used to bind names must be irrefutable, that is, they must guarantee\n-that a name will be extracted in all cases. If you encounter this error you\n-probably need to use a `match` or `if let` to deal with the possibility of\n-failure.\n-\"##,\n-\n E0007: r##\"\n This error indicates that the bindings in a match arm would require a value to\n be moved into more than one location, thus violating unique ownership. Code like\n@@ -1262,6 +1254,7 @@ contain references (with a maximum lifetime of `'a`).\n \n \n register_diagnostics! {\n+    // E0006 // merged with E0005\n     E0017,\n     E0022,\n     E0038,"}, {"sha": "ea86fa318b45dd900dab06a12d23c93d1db05efa", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/688a09910a01800bfa031892540f29bb0c3b4095/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/688a09910a01800bfa031892540f29bb0c3b4095/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=688a09910a01800bfa031892540f29bb0c3b4095", "patch": "@@ -1049,7 +1049,7 @@ fn check_fn(cx: &mut MatchCheckCtxt,\n \n     for input in &decl.inputs {\n         is_refutable(cx, &*input.pat, |pat| {\n-            span_err!(cx.tcx.sess, input.pat.span, E0006,\n+            span_err!(cx.tcx.sess, input.pat.span, E0005,\n                 \"refutable pattern in function argument: `{}` not covered\",\n                 pat_to_string(pat)\n             );"}]}