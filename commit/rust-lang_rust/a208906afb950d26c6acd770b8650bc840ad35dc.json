{"sha": "a208906afb950d26c6acd770b8650bc840ad35dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMDg5MDZhZmI5NTBkMjZjNmFjZDc3MGI4NjUwYmM4NDBhZDM1ZGM=", "commit": {"author": {"name": "mgr-inz-rafal", "email": "rchabowski@gmail.com", "date": "2019-12-28T16:14:19Z"}, "committer": {"name": "mgr-inz-rafal", "email": "rchabowski@gmail.com", "date": "2019-12-28T16:14:19Z"}, "message": "Fixes for elided lifetimes", "tree": {"sha": "f0e6ee0dbbba24fbe56530d7243c268a18471ae6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0e6ee0dbbba24fbe56530d7243c268a18471ae6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a208906afb950d26c6acd770b8650bc840ad35dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a208906afb950d26c6acd770b8650bc840ad35dc", "html_url": "https://github.com/rust-lang/rust/commit/a208906afb950d26c6acd770b8650bc840ad35dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a208906afb950d26c6acd770b8650bc840ad35dc/comments", "author": {"login": "mgr-inz-rafal", "id": 22395284, "node_id": "MDQ6VXNlcjIyMzk1Mjg0", "avatar_url": "https://avatars.githubusercontent.com/u/22395284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgr-inz-rafal", "html_url": "https://github.com/mgr-inz-rafal", "followers_url": "https://api.github.com/users/mgr-inz-rafal/followers", "following_url": "https://api.github.com/users/mgr-inz-rafal/following{/other_user}", "gists_url": "https://api.github.com/users/mgr-inz-rafal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgr-inz-rafal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgr-inz-rafal/subscriptions", "organizations_url": "https://api.github.com/users/mgr-inz-rafal/orgs", "repos_url": "https://api.github.com/users/mgr-inz-rafal/repos", "events_url": "https://api.github.com/users/mgr-inz-rafal/events{/privacy}", "received_events_url": "https://api.github.com/users/mgr-inz-rafal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mgr-inz-rafal", "id": 22395284, "node_id": "MDQ6VXNlcjIyMzk1Mjg0", "avatar_url": "https://avatars.githubusercontent.com/u/22395284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgr-inz-rafal", "html_url": "https://github.com/mgr-inz-rafal", "followers_url": "https://api.github.com/users/mgr-inz-rafal/followers", "following_url": "https://api.github.com/users/mgr-inz-rafal/following{/other_user}", "gists_url": "https://api.github.com/users/mgr-inz-rafal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgr-inz-rafal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgr-inz-rafal/subscriptions", "organizations_url": "https://api.github.com/users/mgr-inz-rafal/orgs", "repos_url": "https://api.github.com/users/mgr-inz-rafal/repos", "events_url": "https://api.github.com/users/mgr-inz-rafal/events{/privacy}", "received_events_url": "https://api.github.com/users/mgr-inz-rafal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6223391170de2ed0756e50d122039d1805510f0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6223391170de2ed0756e50d122039d1805510f0f", "html_url": "https://github.com/rust-lang/rust/commit/6223391170de2ed0756e50d122039d1805510f0f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "09c3ce8d028333d1276c5aa316f1e127c26e9d65", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a208906afb950d26c6acd770b8650bc840ad35dc/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a208906afb950d26c6acd770b8650bc840ad35dc/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=a208906afb950d26c6acd770b8650bc840ad35dc", "patch": "@@ -37,7 +37,7 @@ struct OperandInfo {\n     is_integral: bool,\n }\n \n-fn analyze_operand(operand: &Expr, cx: &LateContext<'_, '_>, expr: &Expr) -> Option<OperandInfo> {\n+fn analyze_operand(operand: &Expr<'_>, cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> Option<OperandInfo> {\n     match constant(cx, cx.tables, operand) {\n         Some((Constant::Int(v), _)) => match cx.tables.expr_ty(expr).kind {\n             ty::Int(ity) => {\n@@ -82,7 +82,7 @@ fn might_have_negative_value(t: &ty::TyS<'_>) -> bool {\n \n fn check_const_operands<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,\n-    expr: &'tcx Expr,\n+    expr: &'tcx Expr<'_>,\n     lhs_operand: &OperandInfo,\n     rhs_operand: &OperandInfo,\n ) {\n@@ -106,7 +106,7 @@ fn check_const_operands<'a, 'tcx>(\n     }\n }\n \n-fn check_non_const_operands<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr, operand: &Expr) {\n+fn check_non_const_operands<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_>, operand: &Expr<'_>) {\n     let operand_type = cx.tables.expr_ty(operand);\n     if might_have_negative_value(operand_type) {\n         span_lint_and_then(\n@@ -125,7 +125,7 @@ fn check_non_const_operands<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Ex\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ModuloArithmetic {\n-    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'_>) {\n         match &expr.kind {\n             ExprKind::Binary(op, lhs, rhs) | ExprKind::AssignOp(op, lhs, rhs) => {\n                 if let BinOpKind::Rem = op.node {"}]}