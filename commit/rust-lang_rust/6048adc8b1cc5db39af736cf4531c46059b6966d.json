{"sha": "6048adc8b1cc5db39af736cf4531c46059b6966d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNDhhZGM4YjFjYzVkYjM5YWY3MzZjZjQ1MzFjNDYwNTliNjk2NmQ=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-12T23:49:48Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-29T23:08:26Z"}, "message": "Support allocation failures when interperting MIR\n\nNote that this breaks Miri.\n\nCloses #79601", "tree": {"sha": "d4e091f77f0f9d7c1d896f5e6bf038f20adf28d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e091f77f0f9d7c1d896f5e6bf038f20adf28d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6048adc8b1cc5db39af736cf4531c46059b6966d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6048adc8b1cc5db39af736cf4531c46059b6966d", "html_url": "https://github.com/rust-lang/rust/commit/6048adc8b1cc5db39af736cf4531c46059b6966d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6048adc8b1cc5db39af736cf4531c46059b6966d/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b186f8605ad43de1eda87b6e7b981c233a6640db", "url": "https://api.github.com/repos/rust-lang/rust/commits/b186f8605ad43de1eda87b6e7b981c233a6640db", "html_url": "https://github.com/rust-lang/rust/commit/b186f8605ad43de1eda87b6e7b981c233a6640db"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "5788aabaadcd2a75f1954297576edb36a29e2609", "filename": "src/vtable.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6048adc8b1cc5db39af736cf4531c46059b6966d/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6048adc8b1cc5db39af736cf4531c46059b6966d/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=6048adc8b1cc5db39af736cf4531c46059b6966d", "patch": "@@ -72,7 +72,10 @@ pub(crate) fn get_vtable<'tcx>(\n     let vtable_ptr = if let Some(vtable_ptr) = fx.vtables.get(&(ty, trait_ref)) {\n         *vtable_ptr\n     } else {\n-        let vtable_alloc_id = fx.tcx.vtable_allocation(ty, trait_ref);\n+        let vtable_alloc_id = match fx.tcx.vtable_allocation(ty, trait_ref) {\n+            Ok(alloc) => alloc,\n+            Err(_) => fx.tcx.sess().fatal(\"allocation of constant vtable failed\"),\n+        };\n         let vtable_allocation = fx.tcx.global_alloc(vtable_alloc_id).unwrap_memory();\n         let vtable_ptr = pointer_for_allocation(fx, vtable_allocation);\n "}]}