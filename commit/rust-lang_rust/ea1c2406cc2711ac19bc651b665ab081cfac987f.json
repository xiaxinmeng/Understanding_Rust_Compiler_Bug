{"sha": "ea1c2406cc2711ac19bc651b665ab081cfac987f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMWMyNDA2Y2MyNzExYWMxOWJjNjUxYjY2NWFiMDgxY2ZhYzk4N2Y=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-14T13:56:44Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-03-18T13:06:39Z"}, "message": "make single char names threshold configurable", "tree": {"sha": "f2ac7328df7bbdec15247a62a24793c5db700683", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2ac7328df7bbdec15247a62a24793c5db700683"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea1c2406cc2711ac19bc651b665ab081cfac987f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1c2406cc2711ac19bc651b665ab081cfac987f", "html_url": "https://github.com/rust-lang/rust/commit/ea1c2406cc2711ac19bc651b665ab081cfac987f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea1c2406cc2711ac19bc651b665ab081cfac987f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24cdb14d5a99e3a12250f449b16d05cdd4a7d53c", "url": "https://api.github.com/repos/rust-lang/rust/commits/24cdb14d5a99e3a12250f449b16d05cdd4a7d53c", "html_url": "https://github.com/rust-lang/rust/commit/24cdb14d5a99e3a12250f449b16d05cdd4a7d53c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "8bbaff65361305af75f14a3ea958d2c94487ed9b", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea1c2406cc2711ac19bc651b665ab081cfac987f/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea1c2406cc2711ac19bc651b665ab081cfac987f/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ea1c2406cc2711ac19bc651b665ab081cfac987f", "patch": "@@ -202,7 +202,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_late_lint_pass(box print::PrintLint);\n     reg.register_late_lint_pass(box vec::UselessVec);\n     reg.register_early_lint_pass(box non_expressive_names::NonExpressiveNames {\n-        max_single_char_names: 5,\n+        max_single_char_names: conf.max_single_char_names,\n     });\n     reg.register_late_lint_pass(box drop_ref::DropRefPass);\n     reg.register_late_lint_pass(box types::AbsurdExtremeComparisons);"}, {"sha": "9ad91b421ddeb79c542480f8109d4e7fa2e0f98f", "filename": "src/non_expressive_names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea1c2406cc2711ac19bc651b665ab081cfac987f/src%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea1c2406cc2711ac19bc651b665ab081cfac987f/src%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnon_expressive_names.rs?ref=ea1c2406cc2711ac19bc651b665ab081cfac987f", "patch": "@@ -32,7 +32,7 @@ declare_lint! {\n }\n \n pub struct NonExpressiveNames {\n-    pub max_single_char_names: usize,\n+    pub max_single_char_names: u64,\n }\n \n impl LintPass for NonExpressiveNames {\n@@ -92,7 +92,7 @@ impl<'a, 'b, 'c> SimilarNamesNameVisitor<'a, 'b, 'c> {\n             return;\n         }\n         self.0.single_char_names.push(c);\n-        if self.0.single_char_names.len() >= self.0.lint.max_single_char_names {\n+        if self.0.single_char_names.len() as u64 >= self.0.lint.max_single_char_names {\n             span_lint(self.0.cx,\n                       MANY_SINGLE_CHAR_NAMES,\n                       span,"}, {"sha": "2411e48997b31c2181e9840bb15caed86c3fb37d", "filename": "src/utils/conf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea1c2406cc2711ac19bc651b665ab081cfac987f/src%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea1c2406cc2711ac19bc651b665ab081cfac987f/src%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fconf.rs?ref=ea1c2406cc2711ac19bc651b665ab081cfac987f", "patch": "@@ -153,6 +153,8 @@ define_Conf! {\n     (\"too-many-arguments-threshold\", too_many_arguments_threshold, 7 => u64),\n     /// Lint: TYPE_COMPLEXITY. The maximum complexity a type can have\n     (\"type-complexity-threshold\", type_complexity_threshold, 250 => u64),\n+    /// Lint: MANY_SINGLE_CHAR_NAMES. The maximum number of single char bindings a scope may have\n+    (\"single-char-binding-names-threshold\", max_single_char_names, 5 => u64),\n }\n \n /// Read the `toml` configuration file. The function will ignore \u201cFile not found\u201d errors iif"}]}