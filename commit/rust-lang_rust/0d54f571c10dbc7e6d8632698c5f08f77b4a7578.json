{"sha": "0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNTRmNTcxYzEwZGJjN2U2ZDg2MzI2OThjNWYwOGY3N2I0YTc1Nzg=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-05T16:27:12Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-05T16:30:37Z"}, "message": "impl review", "tree": {"sha": "489e226ad1deb4364cb431d72b9e87df50b7601a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/489e226ad1deb4364cb431d72b9e87df50b7601a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "html_url": "https://github.com/rust-lang/rust/commit/0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5a5ca0da8cd536c0d6b2e7eb7da6304047dc750", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a5ca0da8cd536c0d6b2e7eb7da6304047dc750", "html_url": "https://github.com/rust-lang/rust/commit/a5a5ca0da8cd536c0d6b2e7eb7da6304047dc750"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "8dcd445721a1e6b8cd00b9c1822d701d762059f0", "filename": "src/librustc_ast_passes/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Ffeature_gate.rs?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -530,7 +530,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                 &self,\n                 |x: &Features| x.const_generics || x.min_const_generics,\n                 param.ident.span,\n-                sym::const_generics,\n+                sym::min_const_generics,\n                 \"const generics are unstable\"\n             );\n         }"}, {"sha": "be72ed6dffb7c6aa5a58e3ceb80bea0b5100541d", "filename": "src/librustc_parse/parser/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -54,7 +54,7 @@ impl<'a> Parser<'a> {\n         self.expect(&token::Colon)?;\n         let ty = self.parse_ty()?;\n \n-        self.sess.gated_spans.gate(sym::const_generics, const_span.to(self.prev_token.span));\n+        self.sess.gated_spans.gate(sym::min_const_generics, const_span.to(self.prev_token.span));\n \n         Ok(GenericParam {\n             ident,"}, {"sha": "17444c6d0ac957442c7760123e1a2f47bf7638a7", "filename": "src/librustc_typeck/collect/type_of.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect%2Ftype_of.rs?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -330,6 +330,8 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                 let err = if tcx.features().min_const_generics {\n                     match ty.kind {\n                         ty::Bool | ty::Char | ty::Int(_) | ty::Uint(_) | ty::Error(_) => None,\n+                        ty::FnPtr(_) => Some(\"function pointers\"),\n+                        ty::RawPtr(_) => Some(\"raw pointers\"),\n                         _ => {\n                             err_ty_str = format!(\"`{}`\", ty);\n                             Some(err_ty_str.as_str())\n@@ -352,7 +354,8 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: DefId) -> Ty<'_> {\n                     );\n \n                     if tcx.features().min_const_generics {\n-                        err.note(\"the only supported types are integers, `bool` and `char`\").emit()\n+                        err.note(\"the only supported types are integers, `bool` and `char`\")\n+                        .note(\"more complex types are supported with `#[feature(const_generics)]`\").emit()\n                     } else {\n                         err.emit();\n                     }"}, {"sha": "d53a4ac2d4c2359eb159565125c6bc2f88c1b6e6", "filename": "src/test/ui/const-generics/const-param-in-trait-ungated.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -4,8 +4,8 @@ error[E0658]: const generics are unstable\n LL | trait Trait<const T: ()> {}\n    |                   ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "5d379ff083ca70642f5ee8925f068e5a84c5fbb0", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param-ungated.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -10,8 +10,8 @@ error[E0658]: const generics are unstable\n LL | struct B<T, const N: T>(PhantomData<[T; N]>);\n    |                   ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "aeef296f38526eeff33552629e820df374fcfa1c", "filename": "src/test/ui/const-generics/issues/issue-60263.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60263.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60263.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60263.stderr?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -4,8 +4,8 @@ error[E0658]: const generics are unstable\n LL | struct B<const I: u8>;\n    |                ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "835b1f1a3e8675aba34724349605ed824d3b8f4c", "filename": "src/test/ui/const-generics/min_const_generics/complex-types.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fcomplex-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fcomplex-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fcomplex-types.stderr?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -5,6 +5,7 @@ LL | struct Foo<const N: [u8; 0]>;\n    |                     ^^^^^^^\n    |\n    = note: the only supported types are integers, `bool` and `char`\n+   = note: more complex types are supported with `#[feature(const_generics)]`\n \n error: using `()` as const generic parameters is forbidden\n   --> $DIR/complex-types.rs:6:21\n@@ -13,6 +14,7 @@ LL | struct Bar<const N: ()>;\n    |                     ^^\n    |\n    = note: the only supported types are integers, `bool` and `char`\n+   = note: more complex types are supported with `#[feature(const_generics)]`\n \n error: using `No` as const generic parameters is forbidden\n   --> $DIR/complex-types.rs:12:21\n@@ -21,6 +23,7 @@ LL | struct Fez<const N: No>;\n    |                     ^^\n    |\n    = note: the only supported types are integers, `bool` and `char`\n+   = note: more complex types are supported with `#[feature(const_generics)]`\n \n error: using `&'static u8` as const generic parameters is forbidden\n   --> $DIR/complex-types.rs:15:21\n@@ -29,6 +32,7 @@ LL | struct Faz<const N: &'static u8>;\n    |                     ^^^^^^^^^^^\n    |\n    = note: the only supported types are integers, `bool` and `char`\n+   = note: more complex types are supported with `#[feature(const_generics)]`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "7f82a960da2553dcfc9c6c87d34debad76fcef17", "filename": "src/test/ui/const-generics/min_const_generics/feature-gate-min_const_generics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Ffeature-gate-min_const_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Ffeature-gate-min_const_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Ffeature-gate-min_const_generics.stderr?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -4,8 +4,8 @@ error[E0658]: const generics are unstable\n LL | fn test<const N: usize>() {}\n    |               ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "eef465318a390665f2a781ff2ebcf95c863039f3", "filename": "src/test/ui/feature-gates/feature-gate-const_generics-ptr.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics-ptr.stderr?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -4,17 +4,17 @@ error[E0658]: const generics are unstable\n LL | struct ConstFn<const F: fn()>;\n    |                      ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error[E0658]: const generics are unstable\n   --> $DIR/feature-gate-const_generics-ptr.rs:5:23\n    |\n LL | struct ConstPtr<const P: *const u32>;\n    |                       ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error: using function pointers as const generic parameters is forbidden\n   --> $DIR/feature-gate-const_generics-ptr.rs:1:25"}, {"sha": "f80362252f9236cfb09ea62ad58fd65124c9dfe5", "filename": "src/test/ui/feature-gates/feature-gate-const_generics.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d54f571c10dbc7e6d8632698c5f08f77b4a7578/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr?ref=0d54f571c10dbc7e6d8632698c5f08f77b4a7578", "patch": "@@ -4,17 +4,17 @@ error[E0658]: const generics are unstable\n LL | fn foo<const X: ()>() {}\n    |              ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error[E0658]: const generics are unstable\n   --> $DIR/feature-gate-const_generics.rs:3:18\n    |\n LL | struct Foo<const X: usize>([(); X]);\n    |                  ^\n    |\n-   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n-   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n+   = note: see issue #74878 <https://github.com/rust-lang/rust/issues/74878> for more information\n+   = help: add `#![feature(min_const_generics)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}]}