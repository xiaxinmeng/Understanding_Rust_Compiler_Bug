{"sha": "ca701d7aeb6cd16a6c1fe94230918535e9e3164d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNzAxZDdhZWI2Y2QxNmE2YzFmZTk0MjMwOTE4NTM1ZTllMzE2NGQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-27T12:39:44Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T09:07:42Z"}, "message": "Simplify a suggestion for str addition", "tree": {"sha": "f23aabaa729355a0317e492c31f8ac1b89eeba63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f23aabaa729355a0317e492c31f8ac1b89eeba63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca701d7aeb6cd16a6c1fe94230918535e9e3164d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlj/Ed4ACgkQpp+NIls6\n19mqcBAAgKb7irLSaGwExyghbMTUYrg4D9B91ov1LPqFLAqzpteTLA64CnjZHg1d\nwKiHwnr7dOTvf+lsYh2gStZUd5YIqW046oJwG21zzrXcxxKKW0B/P87FbBb+AeWy\nlmvjOUFl/J5raoM2lQeFe0ZO6bHKWGaJcJz+nknVelBSDQlidxgBQITqKdG5KzsS\nW8Rzd/PCh5TzDAgofO2IcJbMUtNOnaSB2nXFRASCjkBo+iOJUljCTp5neOvddo5T\nhxYdCgXMZld4bRvfVSinKQJ2XB2SnEz8+xIrj9hWx+CtWdgLvyxanJexZDcL0SAE\njifY8+x5EThBQnkyRFtO2yU9b1G/p9FPm0ib83tU3a8jpKiat392+RnpP9YOmELz\nwGvp281Msksqt1vdLNXQtBU65SOqdOnrrYjU9hTubf+b6mES0bwx1ZsIabr/e2PY\nWWpJNNK3ycod59p9HXlI5M0abm1DRrM/3c8DcK9h461HlK7F/q7ZBpBtfg0SM8HP\nMGxZYFGrGvwnhYMflP9bM18oTYaQTEp2cThzAwNIhyDfxx/FPpXzxDsrU+qyx3R+\nO1xdQyaUDUoMhuzE3wV47EuAcA7B/zm4XZprdNpqKj/4F5uF/pM+tf6CkFrB/gyi\nphUqM9SX4GpXxUZOfhB6RzkLjnDnSWRZOnhP/loLD7pZurMQK+4=\n=oV0d\n-----END PGP SIGNATURE-----", "payload": "tree f23aabaa729355a0317e492c31f8ac1b89eeba63\nparent b857a1a39fc29b8f241d8aa4c859ff4105cb160c\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1490618384 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1493111262 +0200\n\nSimplify a suggestion for str addition\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca701d7aeb6cd16a6c1fe94230918535e9e3164d", "html_url": "https://github.com/rust-lang/rust/commit/ca701d7aeb6cd16a6c1fe94230918535e9e3164d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca701d7aeb6cd16a6c1fe94230918535e9e3164d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "html_url": "https://github.com/rust-lang/rust/commit/b857a1a39fc29b8f241d8aa4c859ff4105cb160c"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "6968a37361a1c4a35d19fe9841171cfd9349b140", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ca701d7aeb6cd16a6c1fe94230918535e9e3164d/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca701d7aeb6cd16a6c1fe94230918535e9e3164d/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=ca701d7aeb6cd16a6c1fe94230918535e9e3164d", "patch": "@@ -244,8 +244,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n                         if let Some(missing_trait) = missing_trait {\n                             if missing_trait == \"std::ops::Add\" &&\n-                                self.check_str_addition(expr, lhs_expr, lhs_ty,\n-                                                         rhs_expr, rhs_ty, &mut err) {\n+                                self.check_str_addition(lhs_expr, lhs_ty,\n+                                                         rhs_expr, rhs_ty_var, &mut err) {\n                                 // This has nothing here because it means we did string\n                                 // concatenation (e.g. \"Hello \" + \"World!\"). This means\n                                 // we don't want the note in the else clause to be emitted\n@@ -266,7 +266,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn check_str_addition(&self,\n-                          expr: &'gcx hir::Expr,\n                           lhs_expr: &'gcx hir::Expr,\n                           lhs_ty: Ty<'tcx>,\n                           rhs_expr: &'gcx hir::Expr,\n@@ -281,18 +280,16 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     err.note(\"`+` can't be used to concatenate two `&str` strings\");\n                     let codemap = self.tcx.sess.codemap();\n                     let suggestion =\n-                        match (codemap.span_to_snippet(lhs_expr.span),\n-                                codemap.span_to_snippet(rhs_expr.span)) {\n-                            (Ok(lstring), Ok(rstring)) =>\n-                                format!(\"{}.to_owned() + {}\", lstring, rstring),\n+                        match codemap.span_to_snippet(lhs_expr.span) {\n+                            Ok(lstring) => format!(\"{}.to_owned()\", lstring),\n                             _ => format!(\"<expression>\")\n                         };\n-                    err.span_suggestion(expr.span,\n-                        &format!(\"to_owned() can be used to create an owned `String` \\\n+                    err.span_suggestion(lhs_expr.span,\n+                        &format!(\"`to_owned()` can be used to create an owned `String` \\\n                                   from a string reference. String concatenation \\\n                                   appends the string on the right to the string \\\n                                   on the left and may require reallocation. This \\\n-                                  requires ownership of the string on the left.\"), suggestion);\n+                                  requires ownership of the string on the left:\"), suggestion);\n                     is_string_addition = true;\n                 }\n "}, {"sha": "b588238202e1285449f2464a8b29754bd0726334", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca701d7aeb6cd16a6c1fe94230918535e9e3164d/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca701d7aeb6cd16a6c1fe94230918535e9e3164d/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=ca701d7aeb6cd16a6c1fe94230918535e9e3164d", "patch": "@@ -2,9 +2,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&'static str`\n   --> $DIR/issue-39018.rs:12:13\n    |\n 12 |     let x = \"Hello \" + \"World!\";\n-   |             ^^^^^^^^-----------\n-   |             |\n-   |             to_owned() can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left. `\"Hello \".to_owned() + \"World!\"`\n+   |             ^^^^^^^^ `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left: `\"Hello \".to_owned()`\n    |\n    = note: `+` can't be used to concatenate two `&str` strings\n "}]}