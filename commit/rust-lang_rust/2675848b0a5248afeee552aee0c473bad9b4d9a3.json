{"sha": "2675848b0a5248afeee552aee0c473bad9b4d9a3", "node_id": "C_kwDOAAsO6NoAKDI2NzU4NDhiMGE1MjQ4YWZlZWU1NTJhZWUwYzQ3M2JhZDliNGQ5YTM", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-30T15:06:55Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-30T15:14:38Z"}, "message": "Add codegen test for `Box::new(uninit)` of big arrays", "tree": {"sha": "fee37422a82ac1ae390a49829998add2a5794080", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fee37422a82ac1ae390a49829998add2a5794080"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2675848b0a5248afeee552aee0c473bad9b4d9a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2675848b0a5248afeee552aee0c473bad9b4d9a3", "html_url": "https://github.com/rust-lang/rust/commit/2675848b0a5248afeee552aee0c473bad9b4d9a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2675848b0a5248afeee552aee0c473bad9b4d9a3/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e5fcb0b758fcf7f149cc9206155dcfa18ec909", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e5fcb0b758fcf7f149cc9206155dcfa18ec909", "html_url": "https://github.com/rust-lang/rust/commit/e5e5fcb0b758fcf7f149cc9206155dcfa18ec909"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "7b5ae894311eff15f8d2e9184a23fbe426a230ac", "filename": "src/test/codegen/box-maybe-uninit-llvm14.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2675848b0a5248afeee552aee0c473bad9b4d9a3/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2675848b0a5248afeee552aee0c473bad9b4d9a3/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit-llvm14.rs?ref=2675848b0a5248afeee552aee0c473bad9b4d9a3", "patch": "@@ -2,7 +2,7 @@\n \n // Once we're done with llvm 14 and earlier, this test can be deleted.\n \n-#![crate_type=\"lib\"]\n+#![crate_type = \"lib\"]\n \n use std::mem::MaybeUninit;\n \n@@ -17,8 +17,16 @@ pub fn box_uninitialized() -> Box<MaybeUninit<usize>> {\n     Box::new(MaybeUninit::uninit())\n }\n \n-// FIXME: add a test for a bigger box. Currently broken, see\n-// https://github.com/rust-lang/rust/issues/58201.\n+// https://github.com/rust-lang/rust/issues/58201\n+#[no_mangle]\n+pub fn box_uninitialized2() -> Box<MaybeUninit<[usize; 1024 * 1024]>> {\n+    // CHECK-LABEL: @box_uninitialized2\n+    // CHECK-NOT: store\n+    // CHECK-NOT: alloca\n+    // CHECK-NOT: memcpy\n+    // CHECK-NOT: memset\n+    Box::new(MaybeUninit::uninit())\n+}\n \n // Hide the LLVM 15+ `allocalign` attribute in the declaration of __rust_alloc\n // from the CHECK-NOT above. We don't check the attributes here because we can't rely"}, {"sha": "c82b56a71f5cfde9d3c9a90f2143841536110119", "filename": "src/test/codegen/box-maybe-uninit.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2675848b0a5248afeee552aee0c473bad9b4d9a3/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2675848b0a5248afeee552aee0c473bad9b4d9a3/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fbox-maybe-uninit.rs?ref=2675848b0a5248afeee552aee0c473bad9b4d9a3", "patch": "@@ -1,6 +1,6 @@\n // compile-flags: -O\n // min-llvm-version: 15.0\n-#![crate_type=\"lib\"]\n+#![crate_type = \"lib\"]\n \n use std::mem::MaybeUninit;\n \n@@ -15,8 +15,16 @@ pub fn box_uninitialized() -> Box<MaybeUninit<usize>> {\n     Box::new(MaybeUninit::uninit())\n }\n \n-// FIXME: add a test for a bigger box. Currently broken, see\n-// https://github.com/rust-lang/rust/issues/58201.\n+// https://github.com/rust-lang/rust/issues/58201\n+#[no_mangle]\n+pub fn box_uninitialized2() -> Box<MaybeUninit<[usize; 1024 * 1024]>> {\n+    // CHECK-LABEL: @box_uninitialized2\n+    // CHECK-NOT: store\n+    // CHECK-NOT: alloca\n+    // CHECK-NOT: memcpy\n+    // CHECK-NOT: memset\n+    Box::new(MaybeUninit::uninit())\n+}\n \n // Hide the `allocalign` attribute in the declaration of __rust_alloc\n // from the CHECK-NOT above, and also verify the attributes got set reasonably."}]}