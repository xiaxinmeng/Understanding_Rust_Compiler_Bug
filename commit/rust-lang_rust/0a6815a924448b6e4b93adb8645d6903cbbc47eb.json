{"sha": "0a6815a924448b6e4b93adb8645d6903cbbc47eb", "node_id": "C_kwDOAAsO6NoAKDBhNjgxNWE5MjQ0NDhiNmU0YjkzYWRiODY0NWQ2OTAzY2JiYzQ3ZWI", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-06-03T11:41:53Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-06-14T14:09:10Z"}, "message": "bless 32-bit ui tests", "tree": {"sha": "f7ecb270c885475804f82b485a46644eb1549957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7ecb270c885475804f82b485a46644eb1549957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a6815a924448b6e4b93adb8645d6903cbbc47eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6815a924448b6e4b93adb8645d6903cbbc47eb", "html_url": "https://github.com/rust-lang/rust/commit/0a6815a924448b6e4b93adb8645d6903cbbc47eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a6815a924448b6e4b93adb8645d6903cbbc47eb/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17323e05ce3dbb38a9c7e50ee76d89b885423dfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/17323e05ce3dbb38a9c7e50ee76d89b885423dfb", "html_url": "https://github.com/rust-lang/rust/commit/17323e05ce3dbb38a9c7e50ee76d89b885423dfb"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "0f420ae1b6b7cc6689dce73199da330bc194873f", "filename": "src/test/ui/consts/const-mut-refs/issue-76510.32bit.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0a6815a924448b6e4b93adb8645d6903cbbc47eb/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a6815a924448b6e4b93adb8645d6903cbbc47eb/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.32bit.stderr?ref=0a6815a924448b6e4b93adb8645d6903cbbc47eb", "patch": "@@ -19,7 +19,13 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n LL | const S: &'static mut str = &mut \" hello \";\n    |                             ^^^^^^^^^^^^^^ cannot borrow as mutable\n \n-error: aborting due to 3 previous errors\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/issue-76510.rs:11:70\n+   |\n+LL |         let s = transmute::<(*const u8, usize), &ManuallyDrop<str>>((S.as_ptr(), 3));\n+   |                                                                      ^ referenced constant has errors\n+\n+error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0596, E0658, E0764.\n-For more information about an error, try `rustc --explain E0596`.\n+Some errors have detailed explanations: E0080, E0596, E0658, E0764.\n+For more information about an error, try `rustc --explain E0080`."}, {"sha": "38c38d1ae673281fd05700d62afa1e2731f1baa8", "filename": "src/test/ui/consts/invalid-union.32bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a6815a924448b6e4b93adb8645d6903cbbc47eb/src%2Ftest%2Fui%2Fconsts%2Finvalid-union.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a6815a924448b6e4b93adb8645d6903cbbc47eb/src%2Ftest%2Fui%2Fconsts%2Finvalid-union.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Finvalid-union.32bit.stderr?ref=0a6815a924448b6e4b93adb8645d6903cbbc47eb", "patch": "@@ -6,7 +6,7 @@ LL | fn main() {\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 4, align: 4) {\n-               \u257e\u2500alloc8\u2500\u2500\u257c                                     \u2502 \u257e\u2500\u2500\u257c\n+               \u257e\u2500alloc7\u2500\u2500\u257c                                     \u2502 \u257e\u2500\u2500\u257c\n            }\n \n error: erroneous constant used"}]}