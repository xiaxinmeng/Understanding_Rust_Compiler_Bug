{"sha": "7eeddb409364fdeecbec8611f08a6ccea134971f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZWRkYjQwOTM2NGZkZWVjYmVjODYxMWYwOGE2Y2NlYTEzNDk3MWY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-24T17:21:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-30T12:18:02Z"}, "message": "add test illustrating current \"coerce to `!`\" behavior", "tree": {"sha": "7df76a76b5f93b73f840d6ec5d010a339ee5929c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7df76a76b5f93b73f840d6ec5d010a339ee5929c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7eeddb409364fdeecbec8611f08a6ccea134971f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7eeddb409364fdeecbec8611f08a6ccea134971f", "html_url": "https://github.com/rust-lang/rust/commit/7eeddb409364fdeecbec8611f08a6ccea134971f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7eeddb409364fdeecbec8611f08a6ccea134971f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6156e1d1f7e46c59fd21c878dccbc4526d7e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6156e1d1f7e46c59fd21c878dccbc4526d7e0c", "html_url": "https://github.com/rust-lang/rust/commit/8c6156e1d1f7e46c59fd21c878dccbc4526d7e0c"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "870665bb49ee620e70a023a5b61bbcf77a218e17", "filename": "src/test/compile-fail/coerce-to-bang.rs", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/7eeddb409364fdeecbec8611f08a6ccea134971f/src%2Ftest%2Fcompile-fail%2Fcoerce-to-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7eeddb409364fdeecbec8611f08a6ccea134971f/src%2Ftest%2Fcompile-fail%2Fcoerce-to-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoerce-to-bang.rs?ref=7eeddb409364fdeecbec8611f08a6ccea134971f", "patch": "@@ -0,0 +1,90 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(never_type)]\n+\n+fn foo(x: usize, y: !, z: usize) { }\n+\n+fn call_foo_a() {\n+    // FIXME(#40800) -- accepted beacuse divergence happens **before**\n+    // the coercion to `!`, but within same expression. Not clear that\n+    // these are the rules we want.\n+    foo(return, 22, 44);\n+}\n+\n+fn call_foo_b() {\n+    // Divergence happens in the argument itself, definitely ok.\n+    foo(22, return, 44);\n+}\n+\n+fn call_foo_c() {\n+    // This test fails because the divergence happens **after** the\n+    // coercion to `!`:\n+    foo(22, 44, return); //~ ERROR mismatched types\n+}\n+\n+fn call_foo_d() {\n+    // This test passes because `a` has type `!`:\n+    let a: ! = return;\n+    let b = 22;\n+    let c = 44;\n+    foo(a, b, c); // ... and hence a reference to `a` is expected to diverge.\n+}\n+\n+fn call_foo_e() {\n+    // This test probably could pass but we don't *know* that `a`\n+    // has type `!` so we don't let it work.\n+    let a = return;\n+    let b = 22;\n+    let c = 44;\n+    foo(a, b, c); //~ ERROR mismatched types\n+}\n+\n+fn call_foo_f() {\n+    // This fn fails because `a` has type `usize`, and hence a\n+    // reference to is it **not** considered to diverge.\n+    let a: usize = return;\n+    let b = 22;\n+    let c = 44;\n+    foo(a, b, c); //~ ERROR mismatched types\n+}\n+\n+fn array_a() {\n+    // Accepted: return is coerced to `!` just fine, and then `22` can be\n+    // because we already diverged.\n+    let x: [!; 2] = [return, 22];\n+}\n+\n+fn array_b() {\n+    // Error: divergence has not yet occurred.\n+    let x: [!; 2] = [22, return]; //~ ERROR mismatched types\n+}\n+\n+fn tuple_a() {\n+    // No divergence at all.\n+    let x: (usize, !, usize) = (22, 44, 66); //~ ERROR mismatched types\n+}\n+\n+fn tuple_b() {\n+    // Divergence happens before coercion: OK\n+    let x: (usize, !, usize) = (return, 44, 66);\n+}\n+\n+fn tuple_c() {\n+    // Divergence happens before coercion: OK\n+    let x: (usize, !, usize) = (22, return, 66);\n+}\n+\n+fn tuple_d() {\n+    // Error: divergence happens too late\n+    let x: (usize, !, usize) = (22, 44, return); //~ ERROR mismatched types\n+}\n+\n+fn main() { }"}]}