{"sha": "6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMWNiOTUwZDZmYzkxY2YyOTM4ZmM0YWVhMzAwZWQxMmQ0OWI3MzU=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-06-03T23:40:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-03T23:40:37Z"}, "message": "Merge pull request #1628 from topecongiro/issue-1113\n\nPreserve the layout of comment after return type", "tree": {"sha": "931b270215c2add50ef7f27f487d7f57eda696c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/931b270215c2add50ef7f27f487d7f57eda696c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "html_url": "https://github.com/rust-lang/rust/commit/6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f1cb950d6fc91cf2938fc4aea300ed12d49b735/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3090086000f056ce50ddea8c71ca20f6892b6d80", "url": "https://api.github.com/repos/rust-lang/rust/commits/3090086000f056ce50ddea8c71ca20f6892b6d80", "html_url": "https://github.com/rust-lang/rust/commit/3090086000f056ce50ddea8c71ca20f6892b6d80"}, {"sha": "15e936bfc73c3c488512fd3dbce43625fa723c29", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e936bfc73c3c488512fd3dbce43625fa723c29", "html_url": "https://github.com/rust-lang/rust/commit/15e936bfc73c3c488512fd3dbce43625fa723c29"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "91221e1ccc691a2365d7428e6182d4bbef2316de", "filename": "src/items.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6f1cb950d6fc91cf2938fc4aea300ed12d49b735/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f1cb950d6fc91cf2938fc4aea300ed12d49b735/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "patch": "@@ -259,10 +259,11 @@ impl<'a> FmtVisitor<'a> {\n                                                                          has_body,\n                                                                          true));\n \n-        if self.config.fn_brace_style() != BraceStyle::AlwaysNextLine && !result.contains('\\n') {\n-            newline_brace = false;\n-        } else if force_newline_brace {\n+        if force_newline_brace {\n             newline_brace = true;\n+        } else if self.config.fn_brace_style() != BraceStyle::AlwaysNextLine &&\n+                  !result.contains('\\n') {\n+            newline_brace = false;\n         }\n \n         // Prepare for the function body by possibly adding a newline and\n@@ -1764,10 +1765,25 @@ fn rewrite_fn_base(context: &RewriteContext,\n         if where_clause.predicates.is_empty() {\n             let snippet_hi = span.hi;\n             let snippet = context.snippet(mk_sp(snippet_lo, snippet_hi));\n+            // Try to preserve the layout of the original snippet.\n+            let original_starts_with_newline =\n+                snippet\n+                    .find(|c| c != ' ')\n+                    .map_or(false, |i| snippet[i..].starts_with('\\n'));\n+            let original_ends_with_newline = snippet\n+                .rfind(|c| c != ' ')\n+                .map_or(false, |i| snippet[i..].ends_with('\\n'));\n             let snippet = snippet.trim();\n             if !snippet.is_empty() {\n-                result.push(' ');\n+                result.push(if original_starts_with_newline {\n+                                '\\n'\n+                            } else {\n+                                ' '\n+                            });\n                 result.push_str(snippet);\n+                if original_ends_with_newline {\n+                    force_new_line_for_brace = true;\n+                }\n             }\n         } else {\n             // FIXME it would be nice to catch comments between the return type"}, {"sha": "1245bcd057ca50e9e39c8e92b63b3759b3466764", "filename": "tests/target/issue-1113.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6f1cb950d6fc91cf2938fc4aea300ed12d49b735/tests%2Ftarget%2Fissue-1113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f1cb950d6fc91cf2938fc4aea300ed12d49b735/tests%2Ftarget%2Fissue-1113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1113.rs?ref=6f1cb950d6fc91cf2938fc4aea300ed12d49b735", "patch": "@@ -0,0 +1,33 @@\n+pub fn foo() -> fmt::Result\n+//pub fn writeStringToken\n+{\n+    panic!()\n+}\n+\n+pub fn foo() -> fmt::Result // pub fn writeStringToken\n+{\n+    panic!()\n+}\n+\n+pub fn foo() -> fmt::Result /* pub fn writeStringToken */ {\n+    panic!()\n+}\n+\n+pub fn foo() -> fmt::Result\n+/* pub fn writeStringToken */ {\n+    panic!()\n+}\n+\n+pub fn foo() -> fmt::Result\n+/* pub fn writeStringToken */\n+{\n+    panic!()\n+}\n+\n+pub fn foo() -> fmt::Result /*\n+                             *\n+                             *\n+                             */\n+{\n+    panic!()\n+}"}]}