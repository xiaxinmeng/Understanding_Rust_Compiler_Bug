{"sha": "36b8322a8c7ea7b86e49ebada0f11b992fcce942", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YjgzMjJhOGM3ZWE3Yjg2ZTQ5ZWJhZGEwZjExYjk5MmZjY2U5NDI=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-22T22:34:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-22T22:34:21Z"}, "message": "Rollup merge of #35864 - matthew-piziak:index-example, r=GuillaumeGomez\n\nreplace `Index` example with something more evocative of indexing\n\nr? @steveklabnik", "tree": {"sha": "7928286fce0db88efc589ed2521982d7ca910cee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7928286fce0db88efc589ed2521982d7ca910cee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36b8322a8c7ea7b86e49ebada0f11b992fcce942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36b8322a8c7ea7b86e49ebada0f11b992fcce942", "html_url": "https://github.com/rust-lang/rust/commit/36b8322a8c7ea7b86e49ebada0f11b992fcce942", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36b8322a8c7ea7b86e49ebada0f11b992fcce942/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61f62ec5959578be3df90dec3840ddf64acf71e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/61f62ec5959578be3df90dec3840ddf64acf71e9", "html_url": "https://github.com/rust-lang/rust/commit/61f62ec5959578be3df90dec3840ddf64acf71e9"}, {"sha": "1dfc5db7dba9964641accfa02f138df59d5893c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dfc5db7dba9964641accfa02f138df59d5893c1", "html_url": "https://github.com/rust-lang/rust/commit/1dfc5db7dba9964641accfa02f138df59d5893c1"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "282f281047e4702c9470ccd704b7b08f24dd428c", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 29, "deletions": 13, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/36b8322a8c7ea7b86e49ebada0f11b992fcce942/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36b8322a8c7ea7b86e49ebada0f11b992fcce942/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=36b8322a8c7ea7b86e49ebada0f11b992fcce942", "patch": "@@ -1550,28 +1550,44 @@ shr_assign_impl_all! { u8 u16 u32 u64 usize i8 i16 i32 i64 isize }\n ///\n /// # Examples\n ///\n-/// A trivial implementation of `Index`. When `Foo[Bar]` happens, it ends up\n-/// calling `index`, and therefore, `main` prints `Indexing!`.\n+/// This example implements `Index` on a read-only `NucleotideCount` container,\n+/// enabling individual counts to be retrieved with index syntax.\n ///\n /// ```\n /// use std::ops::Index;\n ///\n-/// #[derive(Copy, Clone)]\n-/// struct Foo;\n-/// struct Bar;\n+/// enum Nucleotide {\n+///     A,\n+///     C,\n+///     G,\n+///     T,\n+/// }\n ///\n-/// impl Index<Bar> for Foo {\n-///     type Output = Foo;\n+/// struct NucleotideCount {\n+///     a: usize,\n+///     c: usize,\n+///     g: usize,\n+///     t: usize,\n+/// }\n ///\n-///     fn index<'a>(&'a self, _index: Bar) -> &'a Foo {\n-///         println!(\"Indexing!\");\n-///         self\n+/// impl Index<Nucleotide> for NucleotideCount {\n+///     type Output = usize;\n+///\n+///     fn index(&self, nucleotide: Nucleotide) -> &usize {\n+///         match nucleotide {\n+///             Nucleotide::A => &self.a,\n+///             Nucleotide::C => &self.c,\n+///             Nucleotide::G => &self.g,\n+///             Nucleotide::T => &self.t,\n+///         }\n ///     }\n /// }\n ///\n-/// fn main() {\n-///     Foo[Bar];\n-/// }\n+/// let nucleotide_count = NucleotideCount {a: 14, c: 9, g: 10, t: 12};\n+/// assert_eq!(nucleotide_count[Nucleotide::A], 14);\n+/// assert_eq!(nucleotide_count[Nucleotide::C], 9);\n+/// assert_eq!(nucleotide_count[Nucleotide::G], 10);\n+/// assert_eq!(nucleotide_count[Nucleotide::T], 12);\n /// ```\n #[lang = \"index\"]\n #[rustc_on_unimplemented = \"the type `{Self}` cannot be indexed by `{Idx}`\"]"}]}