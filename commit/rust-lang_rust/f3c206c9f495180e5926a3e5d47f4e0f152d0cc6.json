{"sha": "f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYzIwNmM5ZjQ5NTE4MGU1OTI2YTNlNWQ0N2Y0ZTBmMTUyZDBjYzY=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-11T15:23:38Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-13T00:15:29Z"}, "message": "rustc: Encode crate hash into metadata", "tree": {"sha": "04084b7273fb27818928edc0ba30285c1e431237", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04084b7273fb27818928edc0ba30285c1e431237"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "html_url": "https://github.com/rust-lang/rust/commit/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ba317ddb2d4d31eee07650aa657772d00ca7ac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ba317ddb2d4d31eee07650aa657772d00ca7ac4", "html_url": "https://github.com/rust-lang/rust/commit/2ba317ddb2d4d31eee07650aa657772d00ca7ac4"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "8002fddf3c9a9cfb67317de054498b50f8de2163", "filename": "src/comp/metadata/common.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6/src%2Fcomp%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6/src%2Fcomp%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcommon.rs?ref=f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "patch": "@@ -64,6 +64,8 @@ const tag_crate_dep: uint = 0x26u;\n \n const tag_items_data_item_inlineness: uint = 0x27u;\n \n+const tag_crate_hash: uint = 0x28u;\n+\n // djb's cdb hashes.\n fn hash_node_id(&&node_id: int) -> uint { ret 177573u ^ (node_id as uint); }\n "}, {"sha": "541b7c3263523a33f8b868da1564a6b0ae15b7a6", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "patch": "@@ -19,6 +19,7 @@ export get_crate_attributes;\n export list_crate_metadata;\n export crate_dep;\n export get_crate_deps;\n+export get_crate_hash;\n export external_resolver;\n \n // A function that takes a def_id relative to the crate being searched and\n@@ -347,8 +348,8 @@ fn list_meta_items(meta_items: ebml::doc, out: io::writer) {\n     }\n }\n \n-fn list_crate_attributes(md: ebml::doc, out: io::writer) {\n-    out.write_str(\"=Crate Attributes=\\n\");\n+fn list_crate_attributes(md: ebml::doc, hash: str, out: io::writer) {\n+    out.write_str(#fmt(\"=Crate Attributes (%s)=\\n\", hash));\n \n     for attr: ast::attribute in get_attributes(md) {\n         out.write_str(#fmt[\"%s\\n\", pprust::attribute_to_str(attr)]);\n@@ -386,6 +387,12 @@ fn list_crate_deps(data: @[u8], out: io::writer) {\n     out.write_str(\"\\n\");\n }\n \n+fn get_crate_hash(data: @[u8]) -> str {\n+    let cratedoc = ebml::new_doc(data);\n+    let hashdoc = ebml::get_doc(cratedoc, tag_crate_hash);\n+    ret str::unsafe_from_bytes(ebml::doc_data(hashdoc));\n+}\n+\n fn list_crate_items(bytes: @[u8], md: ebml::doc, out: io::writer) {\n     out.write_str(\"=Items=\\n\");\n     let paths = ebml::get_doc(md, tag_paths);\n@@ -407,8 +414,9 @@ fn list_crate_items(bytes: @[u8], md: ebml::doc, out: io::writer) {\n }\n \n fn list_crate_metadata(bytes: @[u8], out: io::writer) {\n+    let hash = get_crate_hash(bytes);\n     let md = ebml::new_doc(bytes);\n-    list_crate_attributes(md, out);\n+    list_crate_attributes(md, hash, out);\n     list_crate_deps(bytes, out);\n     list_crate_items(bytes, md, out);\n }"}, {"sha": "646c016d97d7eda5bae9e8bc651b5cfb8811be44", "filename": "src/comp/metadata/encoder.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6/src%2Fcomp%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c206c9f495180e5926a3e5d47f4e0f152d0cc6/src%2Fcomp%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fencoder.rs?ref=f3c206c9f495180e5926a3e5d47f4e0f152d0cc6", "patch": "@@ -576,6 +576,12 @@ fn encode_crate_deps(ebml_w: ebml::writer, cstore: cstore::cstore) {\n     ebml::end_tag(ebml_w);\n }\n \n+fn encode_hash(ebml_w: ebml::writer, hash: str) {\n+    ebml::start_tag(ebml_w, tag_crate_hash);\n+    ebml_w.writer.write(str::bytes(hash));\n+    ebml::end_tag(ebml_w);\n+}\n+\n fn encode_metadata(cx: @crate_ctxt, crate: @crate) -> str {\n \n     let abbrevs = map::mk_hashmap(ty::hash_ty, ty::eq_ty);\n@@ -585,6 +591,8 @@ fn encode_metadata(cx: @crate_ctxt, crate: @crate) -> str {\n     let buf_w = string_w.get_writer().get_buf_writer();\n     let ebml_w = ebml::create_writer(buf_w);\n \n+    encode_hash(ebml_w, cx.link_meta.extras_hash);\n+\n     let crate_attrs = synthesize_crate_attrs(ecx, crate);\n     encode_attributes(ebml_w, crate_attrs);\n "}]}