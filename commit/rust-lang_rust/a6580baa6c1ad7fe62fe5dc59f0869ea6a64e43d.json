{"sha": "a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d", "node_id": "C_kwDOAAsO6NoAKGE2NTgwYmFhNmMxYWQ3ZmU2MmZlNWRjNTlmMDg2OWVhNmE2NGU0M2Q", "commit": {"author": {"name": "KittyBorgX", "email": "krishnaramasimha12@gmail.com", "date": "2023-03-02T07:32:15Z"}, "committer": {"name": "KittyBorgX", "email": "krishnaramasimha12@gmail.com", "date": "2023-03-02T13:30:26Z"}, "message": "Allow setting hashmap toml values in `./configure`", "tree": {"sha": "4036b0860fe0b6c9b19f6b433808bfbbde1c3b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4036b0860fe0b6c9b19f6b433808bfbbde1c3b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d", "html_url": "https://github.com/rust-lang/rust/commit/a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d/comments", "author": {"login": "KittyBorgX", "id": 82328083, "node_id": "MDQ6VXNlcjgyMzI4MDgz", "avatar_url": "https://avatars.githubusercontent.com/u/82328083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KittyBorgX", "html_url": "https://github.com/KittyBorgX", "followers_url": "https://api.github.com/users/KittyBorgX/followers", "following_url": "https://api.github.com/users/KittyBorgX/following{/other_user}", "gists_url": "https://api.github.com/users/KittyBorgX/gists{/gist_id}", "starred_url": "https://api.github.com/users/KittyBorgX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KittyBorgX/subscriptions", "organizations_url": "https://api.github.com/users/KittyBorgX/orgs", "repos_url": "https://api.github.com/users/KittyBorgX/repos", "events_url": "https://api.github.com/users/KittyBorgX/events{/privacy}", "received_events_url": "https://api.github.com/users/KittyBorgX/received_events", "type": "User", "site_admin": false}, "committer": {"login": "KittyBorgX", "id": 82328083, "node_id": "MDQ6VXNlcjgyMzI4MDgz", "avatar_url": "https://avatars.githubusercontent.com/u/82328083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KittyBorgX", "html_url": "https://github.com/KittyBorgX", "followers_url": "https://api.github.com/users/KittyBorgX/followers", "following_url": "https://api.github.com/users/KittyBorgX/following{/other_user}", "gists_url": "https://api.github.com/users/KittyBorgX/gists{/gist_id}", "starred_url": "https://api.github.com/users/KittyBorgX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KittyBorgX/subscriptions", "organizations_url": "https://api.github.com/users/KittyBorgX/orgs", "repos_url": "https://api.github.com/users/KittyBorgX/repos", "events_url": "https://api.github.com/users/KittyBorgX/events{/privacy}", "received_events_url": "https://api.github.com/users/KittyBorgX/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "864b6258fc7b493aec01f980b31ff23901c0edae", "url": "https://api.github.com/repos/rust-lang/rust/commits/864b6258fc7b493aec01f980b31ff23901c0edae", "html_url": "https://github.com/rust-lang/rust/commit/864b6258fc7b493aec01f980b31ff23901c0edae"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "ab3d08292961f34ac3ebff888c225cba65e6d1cb", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=a6580baa6c1ad7fe62fe5dc59f0869ea6a64e43d", "patch": "@@ -442,6 +442,8 @@ def to_toml(value):\n             return value\n         else:\n             return \"'\" + value + \"'\"\n+    elif isinstance(value, dict):\n+        return \"{\" + \", \".join(map(lambda a: \"{} = {}\".format(to_toml(a[0]), to_toml(a[1])), value.items())) + \"}\"\n     else:\n         raise RuntimeError('no toml')\n "}]}