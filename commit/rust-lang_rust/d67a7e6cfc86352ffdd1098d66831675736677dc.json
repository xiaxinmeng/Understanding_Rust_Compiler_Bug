{"sha": "d67a7e6cfc86352ffdd1098d66831675736677dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2N2E3ZTZjZmM4NjM1MmZmZGQxMDk4ZDY2ODMxNjc1NzM2Njc3ZGM=", "commit": {"author": {"name": "Antoine Martin", "email": "antoine97.martin@gmail.com", "date": "2020-10-05T16:03:54Z"}, "committer": {"name": "Antoine Martin", "email": "antoine97.martin@gmail.com", "date": "2020-10-06T14:40:30Z"}, "message": "Use String type for Profile parse error", "tree": {"sha": "4d839b69e588f466ea1cde50f851986e04466bce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d839b69e588f466ea1cde50f851986e04466bce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d67a7e6cfc86352ffdd1098d66831675736677dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d67a7e6cfc86352ffdd1098d66831675736677dc", "html_url": "https://github.com/rust-lang/rust/commit/d67a7e6cfc86352ffdd1098d66831675736677dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d67a7e6cfc86352ffdd1098d66831675736677dc/comments", "author": {"login": "alarsyo", "id": 15170378, "node_id": "MDQ6VXNlcjE1MTcwMzc4", "avatar_url": "https://avatars.githubusercontent.com/u/15170378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alarsyo", "html_url": "https://github.com/alarsyo", "followers_url": "https://api.github.com/users/alarsyo/followers", "following_url": "https://api.github.com/users/alarsyo/following{/other_user}", "gists_url": "https://api.github.com/users/alarsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alarsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alarsyo/subscriptions", "organizations_url": "https://api.github.com/users/alarsyo/orgs", "repos_url": "https://api.github.com/users/alarsyo/repos", "events_url": "https://api.github.com/users/alarsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/alarsyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alarsyo", "id": 15170378, "node_id": "MDQ6VXNlcjE1MTcwMzc4", "avatar_url": "https://avatars.githubusercontent.com/u/15170378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alarsyo", "html_url": "https://github.com/alarsyo", "followers_url": "https://api.github.com/users/alarsyo/followers", "following_url": "https://api.github.com/users/alarsyo/following{/other_user}", "gists_url": "https://api.github.com/users/alarsyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/alarsyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alarsyo/subscriptions", "organizations_url": "https://api.github.com/users/alarsyo/orgs", "repos_url": "https://api.github.com/users/alarsyo/repos", "events_url": "https://api.github.com/users/alarsyo/events{/privacy}", "received_events_url": "https://api.github.com/users/alarsyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3afc004845b36d18009718fe8d5179adfa1ca2ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/3afc004845b36d18009718fe8d5179adfa1ca2ea", "html_url": "https://github.com/rust-lang/rust/commit/3afc004845b36d18009718fe8d5179adfa1ca2ea"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "f806e40aa8bd2373ecc05c92888809ff9678b9c9", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d67a7e6cfc86352ffdd1098d66831675736677dc/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d67a7e6cfc86352ffdd1098d66831675736677dc/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=d67a7e6cfc86352ffdd1098d66831675736677dc", "patch": "@@ -542,8 +542,8 @@ Arguments:\n                         |path| format!(\"{} is not a valid UTF8 string\", path.to_string_lossy())\n                     ));\n \n-                    profile_string.parse().unwrap_or_else(|_| {\n-                        eprintln!(\"error: unknown profile {}\", profile_string);\n+                    profile_string.parse().unwrap_or_else(|err| {\n+                        eprintln!(\"error: {}\", err);\n                         eprintln!(\"help: the available profiles are:\");\n                         for choice in Profile::all() {\n                             eprintln!(\"- {}\", choice);"}, {"sha": "fdc0892845d941b41e660a6cb64629895f6b87fd", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d67a7e6cfc86352ffdd1098d66831675736677dc/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d67a7e6cfc86352ffdd1098d66831675736677dc/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=d67a7e6cfc86352ffdd1098d66831675736677dc", "patch": "@@ -24,21 +24,16 @@ impl Profile {\n     }\n }\n \n-#[derive(Debug)]\n-pub struct ProfileErr {\n-    pub name: String,\n-}\n-\n impl FromStr for Profile {\n-    type Err = ProfileErr;\n+    type Err = String;\n \n     fn from_str(s: &str) -> Result<Self, Self::Err> {\n         match s {\n             \"a\" | \"lib\" | \"library\" => Ok(Profile::Library),\n             \"b\" | \"compiler\" => Ok(Profile::Compiler),\n             \"c\" | \"llvm\" | \"codegen\" => Ok(Profile::Codegen),\n             \"d\" | \"maintainer\" | \"user\" => Ok(Profile::User),\n-            _ => Err(ProfileErr { name: s.to_string() }),\n+            _ => Err(format!(\"unknown profile: '{}'\", s)),\n         }\n     }\n }\n@@ -116,8 +111,8 @@ d) Install Rust from source\"\n         io::stdin().read_line(&mut input)?;\n         break match input.trim().to_lowercase().parse() {\n             Ok(profile) => profile,\n-            Err(ProfileErr { name }) => {\n-                println!(\"error: unrecognized option '{}'\", name);\n+            Err(err) => {\n+                println!(\"error: {}\", err);\n                 println!(\"note: press Ctrl+C to exit\");\n                 continue;\n             }"}]}