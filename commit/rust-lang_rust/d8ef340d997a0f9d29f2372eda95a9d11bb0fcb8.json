{"sha": "d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8", "node_id": "C_kwDOAAsO6NoAKGQ4ZWYzNDBkOTk3YTBmOWQyOWYyMzcyZWRhOTVhOWQxMWJiMGZjYjg", "commit": {"author": {"name": "Sam Robinson-Adams", "email": "samziz@me.com", "date": "2022-05-18T14:10:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-18T14:10:18Z"}, "message": "Fix rusty grammar in `std::error::Reporter` docs\n\nI initially saw \"print's\" instead of \"prints\" at the start of the doc comment for `std::error::Reporter`, while reading the docs for that type. Then I figured 'probably more where that came from', so, as well as correcting the foregoing to \"prints\", I've patched up these three minor solecisms (well, two [types](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction), three [tokens](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction)):\r\n\r\n- One use of the indicative which should be subjunctive - indeed the sentence immediately following it, which mirrors its structure, _does_ use the subjunctive ([L871](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L871)). Replaced with the subjunctive.\r\n- Two separate clauses joined with commas ([L975](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L975), [L1023](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L1023)). Replaced the first with a semicolon and the second with a period. Admittedly those judgements are pretty much 100% subjective, based on my sense of how the sentences flowed into each other (though ofc the _replacement of the comma itself_ is not subjective or opinion-based).\r\n\r\nI know this is silly and finicky, but I hope it helps tidy up the docs a bit for future readers!", "tree": {"sha": "5a7b8548605747a8688a4ed0ddc5544ab77919d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a7b8548605747a8688a4ed0ddc5544ab77919d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJihP5KCRBK7hj4Ov3rIwAArKYIAC1PQOMO3vs9VKgP3jAq/RNI\nL3GsokbcdaHTA+kbEeL1CsoYbCU5FVFoh1IvRqE1eGo0XVKkBR4wqlCljcHehs40\nkKvaL+ESZmUgP0XB8ifKBJzW85uFE/CbAIjyhNDqIvfcKEqaRIXayhsa2LJPl/IY\nIaSBDUgtnvwaZBQW0qF+/6lFfU7aWW7ehg2L06AEfig+gtkxJ6dANVNlNT/A4yJS\nuEy3ufuXcpaYkM+BLls5g/JrpY+B/LJRpCCIIZ3rbICfVrrMnJL59w/USYRMZ0rC\nldTo1fnmCBmgL6GkFDo1uNLbTXyvyJAB8aiOrne4+qMs70TNaCIiGPHPCaCejig=\n=VbWJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 5a7b8548605747a8688a4ed0ddc5544ab77919d4\nparent e5732a21711e7cefa6eb22e1790406b269d6197a\nauthor Sam Robinson-Adams <samziz@me.com> 1652883018 +0100\ncommitter GitHub <noreply@github.com> 1652883018 +0100\n\nFix rusty grammar in `std::error::Reporter` docs\n\nI initially saw \"print's\" instead of \"prints\" at the start of the doc comment for `std::error::Reporter`, while reading the docs for that type. Then I figured 'probably more where that came from', so, as well as correcting the foregoing to \"prints\", I've patched up these three minor solecisms (well, two [types](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction), three [tokens](https://en.wikipedia.org/wiki/Type%E2%80%93token_distinction)):\r\n\r\n- One use of the indicative which should be subjunctive - indeed the sentence immediately following it, which mirrors its structure, _does_ use the subjunctive ([L871](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L871)). Replaced with the subjunctive.\r\n- Two separate clauses joined with commas ([L975](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L975), [L1023](https://github.com/rust-lang/rust/blob/master/library/std/src/error.rs?plain=1#L1023)). Replaced the first with a semicolon and the second with a period. Admittedly those judgements are pretty much 100% subjective, based on my sense of how the sentences flowed into each other (though ofc the _replacement of the comma itself_ is not subjective or opinion-based).\r\n\r\nI know this is silly and finicky, but I hope it helps tidy up the docs a bit for future readers!"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8", "html_url": "https://github.com/rust-lang/rust/commit/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8/comments", "author": {"login": "samziz", "id": 20380372, "node_id": "MDQ6VXNlcjIwMzgwMzcy", "avatar_url": "https://avatars.githubusercontent.com/u/20380372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samziz", "html_url": "https://github.com/samziz", "followers_url": "https://api.github.com/users/samziz/followers", "following_url": "https://api.github.com/users/samziz/following{/other_user}", "gists_url": "https://api.github.com/users/samziz/gists{/gist_id}", "starred_url": "https://api.github.com/users/samziz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samziz/subscriptions", "organizations_url": "https://api.github.com/users/samziz/orgs", "repos_url": "https://api.github.com/users/samziz/repos", "events_url": "https://api.github.com/users/samziz/events{/privacy}", "received_events_url": "https://api.github.com/users/samziz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5732a21711e7cefa6eb22e1790406b269d6197a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5732a21711e7cefa6eb22e1790406b269d6197a", "html_url": "https://github.com/rust-lang/rust/commit/e5732a21711e7cefa6eb22e1790406b269d6197a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "438304e1664cb1f56993a179d2e94260521d6677", "filename": "library/std/src/error.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=d8ef340d997a0f9d29f2372eda95a9d11bb0fcb8", "patch": "@@ -863,12 +863,12 @@ impl dyn Error + Send + Sync {\n     }\n }\n \n-/// An error reporter that print's an error and its sources.\n+/// An error reporter that prints an error and its sources.\n ///\n /// Report also exposes configuration options for formatting the error chain, either entirely on a\n /// single line, or in multi-line format with each cause in the error chain on a new line.\n ///\n-/// `Report` only requires that the wrapped error implements `Error`. It doesn't require that the\n+/// `Report` only requires that the wrapped error implement `Error`. It doesn't require that the\n /// wrapped error be `Send`, `Sync`, or `'static`.\n ///\n /// # Examples\n@@ -972,7 +972,7 @@ impl dyn Error + Send + Sync {\n ///\n /// ## Return from `main`\n ///\n-/// `Report` also implements `From` for all types that implement [`Error`], this when combined with\n+/// `Report` also implements `From` for all types that implement [`Error`]; this when combined with\n /// the `Debug` output means `Report` is an ideal starting place for formatting errors returned\n /// from `main`.\n ///\n@@ -1020,7 +1020,7 @@ impl dyn Error + Send + Sync {\n /// ```\n ///\n /// **Note**: `Report`s constructed via `?` and `From` will be configured to use the single line\n-/// output format, if you want to make sure your `Report`s are pretty printed and include backtrace\n+/// output format. If you want to make sure your `Report`s are pretty printed and include backtrace\n /// you will need to manually convert and enable those flags.\n ///\n /// ```should_panic"}]}