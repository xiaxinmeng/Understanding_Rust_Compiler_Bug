{"sha": "a0262fdf1f03444bdc836e9605c687377b4a82f5", "node_id": "C_kwDOAAsO6NoAKGEwMjYyZmRmMWYwMzQ0NGJkYzgzNmU5NjA1YzY4NzM3N2I0YTgyZjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-05T10:26:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-05T10:26:05Z"}, "message": "Rollup merge of #92322 - alper:add_debug_trait_documentation, r=dtolnay\n\nAdd another implementation example to Debug trait\n\nAs per the discussion in: #92276", "tree": {"sha": "061368d3a794cdcce35b686dea5b7af8f5f33ba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/061368d3a794cdcce35b686dea5b7af8f5f33ba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0262fdf1f03444bdc836e9605c687377b4a82f5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1XI9CRBK7hj4Ov3rIwAAXOIIAGc1pzobzi0hQfI+j+OQfX1M\nX7jfi/B7ozn+vTsqDrqBiqAFrx9UWrtqJmPRGaWHEvRySTEGR6bPYaFSJGw2KTq5\nfPLwLneDAmNIO2bDmvI7l9bqNadGp7gl80i8K8LFT+AXLkysdz4ODyXJVTmYTysm\nTtpDp/Tre+PMborimZlR6Eekljr83rnTF45/PSjUh7EOqQCLDInAEZ7xFLVb+h8O\nl+n0Q0T7wETT1lEhbygR5LzZmAnxXyWTr9QJxhxCcFlBWaJk9SqcvCRvxQicL9Tx\nOHiEZaJo9GwPNHgi90Vtj0VjXG950Q14SI4OfcThQuQKiyzhjRnqomL8F16YAUI=\n=Yau7\n-----END PGP SIGNATURE-----\n", "payload": "tree 061368d3a794cdcce35b686dea5b7af8f5f33ba5\nparent cc01433d56064327441ccd05100b310758a8ddbf\nparent 4df1a5561adc0ee6e1635df825d34026e04530b1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641378365 +0100\ncommitter GitHub <noreply@github.com> 1641378365 +0100\n\nRollup merge of #92322 - alper:add_debug_trait_documentation, r=dtolnay\n\nAdd another implementation example to Debug trait\n\nAs per the discussion in: #92276\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0262fdf1f03444bdc836e9605c687377b4a82f5", "html_url": "https://github.com/rust-lang/rust/commit/a0262fdf1f03444bdc836e9605c687377b4a82f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0262fdf1f03444bdc836e9605c687377b4a82f5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc01433d56064327441ccd05100b310758a8ddbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc01433d56064327441ccd05100b310758a8ddbf", "html_url": "https://github.com/rust-lang/rust/commit/cc01433d56064327441ccd05100b310758a8ddbf"}, {"sha": "4df1a5561adc0ee6e1635df825d34026e04530b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4df1a5561adc0ee6e1635df825d34026e04530b1", "html_url": "https://github.com/rust-lang/rust/commit/4df1a5561adc0ee6e1635df825d34026e04530b1"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "8a2a64f8dc97f44e361abfde4d2e00a0c7a2ac44", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a0262fdf1f03444bdc836e9605c687377b4a82f5/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0262fdf1f03444bdc836e9605c687377b4a82f5/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=a0262fdf1f03444bdc836e9605c687377b4a82f5", "patch": "@@ -570,11 +570,30 @@ impl Display for Arguments<'_> {\n /// There are a number of helper methods on the [`Formatter`] struct to help you with manual\n /// implementations, such as [`debug_struct`].\n ///\n+/// [`debug_struct`]: Formatter::debug_struct\n+///\n+/// Types that do not wish to use the standard suite of debug representations\n+/// provided by the `Formatter` trait (`debug_struct`, `debug_tuple`,\n+/// `debut_list`, `debug_set`, `debug_map`) can do something totally custom by\n+/// manually writing an arbitrary representation to the `Formatter`.\n+///\n+/// ```\n+/// # use std::fmt;\n+/// # struct Point {\n+/// #     x: i32,\n+/// #     y: i32,\n+/// # }\n+/// #\n+/// impl fmt::Debug for Point {\n+///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+///         write!(f, \"Point [{} {}]\", self.x, self.y)\n+///     }\n+/// }\n+/// ```\n+///\n /// `Debug` implementations using either `derive` or the debug builder API\n /// on [`Formatter`] support pretty-printing using the alternate flag: `{:#?}`.\n ///\n-/// [`debug_struct`]: Formatter::debug_struct\n-///\n /// Pretty-printing with `#?`:\n ///\n /// ```"}]}