{"sha": "cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYjQ1MzI1MGEzY2VhZTVjZjBjZjdlYWM4MzZjMDNiMzdlNGNhOGU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-09T13:26:50Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-10T11:13:20Z"}, "message": "Move pp::Printer helpers to direct impl", "tree": {"sha": "fc27173efd1862f9117f140a2adaef9cb216c524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc27173efd1862f9117f140a2adaef9cb216c524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "html_url": "https://github.com/rust-lang/rust/commit/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e91dbc5916f508849532d1c7b3069b6c0c3a609b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91dbc5916f508849532d1c7b3069b6c0c3a609b", "html_url": "https://github.com/rust-lang/rust/commit/e91dbc5916f508849532d1c7b3069b6c0c3a609b"}], "stats": {"total": 117, "additions": 64, "deletions": 53}, "files": [{"sha": "92898e9070be30246157bbb270528e2dd1ba58f3", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -1212,8 +1212,6 @@ impl<'a> print::State<'a> {\n             Node::Pat(a)          => self.print_pat(&a),\n             Node::Arm(a)          => self.print_arm(&a),\n             Node::Block(a)        => {\n-                use syntax::print::pprust::PrintState;\n-\n                 // containing cbox, will be closed by print-block at }\n                 self.cbox(print::indent_unit);\n                 // head-ibox, will be closed by print-block after {"}, {"sha": "e014e7478db82638f1abbd1d0f2f28d8dc00af33", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -73,6 +73,19 @@ pub struct State<'a> {\n     ann: &'a (dyn PpAnn + 'a),\n }\n \n+impl std::ops::Deref for State<'_> {\n+    type Target = pp::Printer;\n+    fn deref(&self) -> &Self::Target {\n+        &self.s\n+    }\n+}\n+\n+impl std::ops::DerefMut for State<'_> {\n+    fn deref_mut(&mut self) -> &mut Self::Target {\n+        &mut self.s\n+    }\n+}\n+\n impl<'a> PrintState<'a> for State<'a> {\n     fn writer(&mut self) -> &mut pp::Printer {\n         &mut self.s"}, {"sha": "6eea64e0e7af0e05051b318542c88a805035de17", "filename": "src/librustc_borrowck/dataflow.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc_borrowck%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc_borrowck%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdataflow.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -8,7 +8,6 @@ use rustc::cfg::CFGIndex;\n use rustc::ty::TyCtxt;\n use std::mem;\n use std::usize;\n-use syntax::print::pprust::PrintState;\n use log::debug;\n \n use rustc_data_structures::graph::implementation::OUTGOING;"}, {"sha": "51b161c37680217eb4e022ef392b14fc2a887042", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -19,7 +19,6 @@ use rustc_mir::util::{write_mir_pretty, write_mir_graphviz};\n use syntax::ast;\n use syntax::mut_visit::MutVisitor;\n use syntax::print::{pprust};\n-use syntax::print::pprust::PrintState;\n use syntax_pos::FileName;\n \n use graphviz as dot;"}, {"sha": "ee7fb97ffd71869f57966bc0c28774ac237d3c0e", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -162,6 +162,7 @@ pub mod visit;\n pub mod print {\n     pub mod pp;\n     pub mod pprust;\n+    mod helpers;\n }\n \n pub mod ext {"}, {"sha": "ae24047ac8249b6785b3cf6dce6071d601e1bbe9", "filename": "src/libsyntax/parse/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fdiagnostics.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -611,8 +611,6 @@ impl<'a> Parser<'a> {\n         match ty.node {\n             TyKind::Rptr(ref lifetime, ref mut_ty) => {\n                 let sum_with_parens = pprust::to_string(|s| {\n-                    use crate::print::pprust::PrintState;\n-\n                     s.s.word(\"&\");\n                     s.print_opt_lifetime(lifetime);\n                     s.print_mutability(mut_ty.mutbl);"}, {"sha": "7dd7000b45461acbf8b962f46fac58705f04d241", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -2571,7 +2571,6 @@ impl<'a> Parser<'a> {\n                               None => continue,\n                           };\n                           let sugg = pprust::to_string(|s| {\n-                              use crate::print::pprust::PrintState;\n                               s.popen();\n                               s.print_expr(&e);\n                               s.s.word( \".\");\n@@ -4588,7 +4587,7 @@ impl<'a> Parser<'a> {\n                         stmt_span = stmt_span.with_hi(self.prev_span.hi());\n                     }\n                     let sugg = pprust::to_string(|s| {\n-                        use crate::print::pprust::{PrintState, INDENT_UNIT};\n+                        use crate::print::pprust::INDENT_UNIT;\n                         s.ibox(INDENT_UNIT);\n                         s.bopen();\n                         s.print_stmt(&stmt);"}, {"sha": "3449e07f4562db823a55275f09ca40c59a15ccfa", "filename": "src/libsyntax/print/helpers.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fprint%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fprint%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fhelpers.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -0,0 +1,34 @@\n+use std::borrow::Cow;\n+use crate::print::pp::Printer;\n+\n+impl Printer {\n+    pub fn word_space<W: Into<Cow<'static, str>>>(&mut self, w: W) {\n+        self.word(w);\n+        self.space();\n+    }\n+\n+    pub fn popen(&mut self) {\n+        self.word(\"(\");\n+    }\n+\n+    pub fn pclose(&mut self) {\n+        self.word(\")\");\n+    }\n+\n+    pub fn hardbreak_if_not_bol(&mut self) {\n+        if !self.is_beginning_of_line() {\n+            self.hardbreak()\n+        }\n+    }\n+\n+    pub fn space_if_not_bol(&mut self) {\n+        if !self.is_beginning_of_line() { self.space(); }\n+    }\n+\n+    pub fn nbsp(&mut self) { self.word(\" \") }\n+\n+    pub fn word_nbsp<S: Into<Cow<'static, str>>>(&mut self, w: S) {\n+        self.word(w);\n+        self.nbsp()\n+    }\n+}"}, {"sha": "660e77f77d0f2918043af691c4909a248e7a86b7", "filename": "src/libsyntax/print/pp.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fprint%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fprint%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpp.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -597,15 +597,15 @@ impl Printer {\n     // Convenience functions to talk to the printer.\n \n     /// \"raw box\"\n-    crate fn rbox(&mut self, indent: usize, b: Breaks) {\n+    pub fn rbox(&mut self, indent: usize, b: Breaks) {\n         self.scan_begin(BeginToken {\n             offset: indent as isize,\n             breaks: b\n         })\n     }\n \n     /// Inconsistent breaking box\n-    crate fn ibox(&mut self, indent: usize) {\n+    pub fn ibox(&mut self, indent: usize) {\n         self.rbox(indent, Breaks::Inconsistent)\n     }\n \n@@ -621,7 +621,7 @@ impl Printer {\n         })\n     }\n \n-    crate fn end(&mut self) {\n+    pub fn end(&mut self) {\n         self.scan_end()\n     }\n "}, {"sha": "98c629addc8ea240818d263322ef55b6165e5e7d", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 12, "deletions": 42, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab453250a3ceae5cf0cf7eac836c03b37e4ca8e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=cab453250a3ceae5cf0cf7eac836c03b37e4ca8e", "patch": "@@ -432,37 +432,22 @@ fn visibility_qualified(vis: &ast::Visibility, s: &str) -> String {\n     format!(\"{}{}\", to_string(|s| s.print_visibility(vis)), s)\n }\n \n-pub trait PrintState<'a> {\n-    fn writer(&mut self) -> &mut pp::Printer;\n-    fn comments(&mut self) -> &mut Option<Comments<'a>>;\n-\n-    fn word_space<S: Into<Cow<'static, str>>>(&mut self, w: S) {\n-        self.writer().word(w);\n-        self.writer().space()\n-    }\n-\n-    fn popen(&mut self) { self.writer().word(\"(\") }\n-\n-    fn pclose(&mut self) { self.writer().word(\")\") }\n-\n-    fn hardbreak_if_not_bol(&mut self) {\n-        if !self.writer().is_beginning_of_line() {\n-            self.writer().hardbreak()\n-        }\n-    }\n-\n-    // \"raw box\"\n-    fn rbox(&mut self, u: usize, b: pp::Breaks) {\n-        self.writer().rbox(u, b)\n+impl std::ops::Deref for State<'_> {\n+    type Target = pp::Printer;\n+    fn deref(&self) -> &Self::Target {\n+        &self.s\n     }\n+}\n \n-    fn ibox(&mut self, u: usize) {\n-        self.writer().ibox(u);\n+impl std::ops::DerefMut for State<'_> {\n+    fn deref_mut(&mut self) -> &mut Self::Target {\n+        &mut self.s\n     }\n+}\n \n-    fn end(&mut self) {\n-        self.writer().end()\n-    }\n+pub trait PrintState<'a>: std::ops::Deref<Target=pp::Printer> + std::ops::DerefMut {\n+    fn writer(&mut self) -> &mut pp::Printer;\n+    fn comments(&mut self) -> &mut Option<Comments<'a>>;\n \n     fn commasep<T, F>(&mut self, b: Breaks, elts: &[T], mut op: F)\n         where F: FnMut(&mut Self, &T),\n@@ -728,12 +713,6 @@ pub trait PrintState<'a> {\n         }\n         self.end();\n     }\n-\n-    fn space_if_not_bol(&mut self) {\n-        if !self.writer().is_beginning_of_line() { self.writer().space(); }\n-    }\n-\n-    fn nbsp(&mut self) { self.writer().word(\" \") }\n }\n \n impl<'a> PrintState<'a> for State<'a> {\n@@ -747,15 +726,6 @@ impl<'a> PrintState<'a> for State<'a> {\n }\n \n impl<'a> State<'a> {\n-    pub fn cbox(&mut self, u: usize) {\n-        self.s.cbox(u);\n-    }\n-\n-    crate fn word_nbsp<S: Into<Cow<'static, str>>>(&mut self, w: S) {\n-        self.s.word(w);\n-        self.nbsp()\n-    }\n-\n     crate fn head<S: Into<Cow<'static, str>>>(&mut self, w: S) {\n         let w = w.into();\n         // outer-box is consistent"}]}