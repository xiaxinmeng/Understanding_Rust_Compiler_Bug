{"sha": "ba480cbf75387236a364961354b466cbee69146d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNDgwY2JmNzUzODcyMzZhMzY0OTYxMzU0YjQ2NmNiZWU2OTE0NmQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-03T06:59:31Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:44Z"}, "message": "libcore: use unboxed closures in the fields of `Scan`", "tree": {"sha": "78ee85dff25d8df9c9753e3811e78c3963df6cd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78ee85dff25d8df9c9753e3811e78c3963df6cd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba480cbf75387236a364961354b466cbee69146d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba480cbf75387236a364961354b466cbee69146d", "html_url": "https://github.com/rust-lang/rust/commit/ba480cbf75387236a364961354b466cbee69146d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba480cbf75387236a364961354b466cbee69146d/comments", "author": null, "committer": null, "parents": [{"sha": "e2724cb1d53b368e6a18571f345f08a0dd2644c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2724cb1d53b368e6a18571f345f08a0dd2644c9", "html_url": "https://github.com/rust-lang/rust/commit/e2724cb1d53b368e6a18571f345f08a0dd2644c9"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "8a28988c2cbc31468fee86eba4d589a6a6f84a5b", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ba480cbf75387236a364961354b466cbee69146d/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba480cbf75387236a364961354b466cbee69146d/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=ba480cbf75387236a364961354b466cbee69146d", "patch": "@@ -346,8 +346,9 @@ pub trait IteratorExt<A>: Iterator<A> {\n     /// ```\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n-    fn scan<'r, St, B>(self, initial_state: St, f: |&mut St, A|: 'r -> Option<B>)\n-        -> Scan<'r, A, B, Self, St> {\n+    fn scan<St, B, F>(self, initial_state: St, f: F) -> Scan<A, B, Self, St, F> where\n+        F: FnMut(&mut St, A) -> Option<B>,\n+    {\n         Scan{iter: self, f: f, state: initial_state}\n     }\n \n@@ -1833,16 +1834,19 @@ impl<A, T: RandomAccessIterator<A>> RandomAccessIterator<A> for Take<T> {\n /// An iterator to maintain state while iterating another iterator\n #[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]\n #[unstable = \"waiting for unboxed closures\"]\n-pub struct Scan<'a, A, B, T, St> {\n-    iter: T,\n-    f: |&mut St, A|: 'a -> Option<B>,\n+pub struct Scan<A, B, I, St, F> where I: Iterator<A>, F: FnMut(&mut St, A) -> Option<B> {\n+    iter: I,\n+    f: F,\n \n     /// The current internal state to be passed to the closure next.\n     pub state: St,\n }\n \n #[unstable = \"trait is unstable\"]\n-impl<'a, A, B, T: Iterator<A>, St> Iterator<B> for Scan<'a, A, B, T, St> {\n+impl<A, B, I, St, F> Iterator<B> for Scan<A, B, I, St, F> where\n+    I: Iterator<A>,\n+    F: FnMut(&mut St, A) -> Option<B>,\n+{\n     #[inline]\n     fn next(&mut self) -> Option<B> {\n         self.iter.next().and_then(|a| (self.f)(&mut self.state, a))"}]}