{"sha": "c8e0d04878f38e8a91e7a6196fb18878da208887", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ZTBkMDQ4NzhmMzhlOGE5MWU3YTYxOTZmYjE4ODc4ZGEyMDg4ODc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-02-01T03:16:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-02-06T16:44:27Z"}, "message": "compiletest: Add caching of test results\n\nDon't re-run tests in compiletest if all the inputs haven't changed, manage\nstamp files in the output directory.", "tree": {"sha": "933bbae1638331b46e873288abbdabeea23a8940", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/933bbae1638331b46e873288abbdabeea23a8940"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8e0d04878f38e8a91e7a6196fb18878da208887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e0d04878f38e8a91e7a6196fb18878da208887", "html_url": "https://github.com/rust-lang/rust/commit/c8e0d04878f38e8a91e7a6196fb18878da208887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8e0d04878f38e8a91e7a6196fb18878da208887/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ad13c8d0204fb7cd9a3988a5a73f60efce39481", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad13c8d0204fb7cd9a3988a5a73f60efce39481", "html_url": "https://github.com/rust-lang/rust/commit/9ad13c8d0204fb7cd9a3988a5a73f60efce39481"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "79e75dc70f9c1449241d8c46940b79da2bbd2367", "filename": "src/Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=c8e0d04878f38e8a91e7a6196fb18878da208887", "patch": "@@ -99,6 +99,7 @@ name = \"compiletest\"\n version = \"0.0.0\"\n dependencies = [\n  \"env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]"}, {"sha": "1fc98a78a7c473c73148174942d0e62f82bb9fda", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=c8e0d04878f38e8a91e7a6196fb18878da208887", "patch": "@@ -7,3 +7,4 @@ version = \"0.0.0\"\n log = \"0.3\"\n env_logger = { version = \"0.3.5\", default-features = false }\n rustc-serialize = \"0.3\"\n+filetime = \"0.1\""}, {"sha": "522cd222c269171efd09f2a2b76e5a527df53d34", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=c8e0d04878f38e8a91e7a6196fb18878da208887", "patch": "@@ -25,13 +25,15 @@ use extract_gdb_version;\n pub struct EarlyProps {\n     pub ignore: bool,\n     pub should_fail: bool,\n+    pub aux: Vec<String>,\n }\n \n impl EarlyProps {\n     pub fn from_file(config: &Config, testfile: &Path) -> Self {\n         let mut props = EarlyProps {\n             ignore: false,\n             should_fail: false,\n+            aux: Vec::new(),\n         };\n \n         iter_header(testfile,\n@@ -50,6 +52,10 @@ impl EarlyProps {\n                 ignore_lldb(config, ln) ||\n                 ignore_llvm(config, ln);\n \n+            if let Some(s) = parse_aux_build(ln) {\n+                props.aux.push(s);\n+            }\n+\n             props.should_fail = props.should_fail || parse_name_directive(ln, \"should-fail\");\n         });\n "}, {"sha": "6c63661d7fb345f65acdd296e79ef0cac9db2087", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=c8e0d04878f38e8a91e7a6196fb18878da208887", "patch": "@@ -25,13 +25,15 @@ extern crate rustc_serialize;\n #[macro_use]\n extern crate log;\n extern crate env_logger;\n+extern crate filetime;\n \n use std::env;\n use std::ffi::OsString;\n use std::fs;\n use std::io;\n use std::path::{Path, PathBuf};\n use std::process::Command;\n+use filetime::FileTime;\n use getopts::{optopt, optflag, reqopt};\n use common::Config;\n use common::{Pretty, DebugInfoGdb, DebugInfoLldb, Mode};\n@@ -457,7 +459,7 @@ pub fn make_test(config: &Config, testpaths: &TestPaths) -> test::TestDescAndFn\n     };\n \n     // Debugging emscripten code doesn't make sense today\n-    let mut ignore = early_props.ignore;\n+    let mut ignore = early_props.ignore || !up_to_date(config, testpaths, &early_props);\n     if (config.mode == DebugInfoGdb || config.mode == DebugInfoLldb) &&\n         config.target.contains(\"emscripten\") {\n         ignore = true;\n@@ -473,6 +475,42 @@ pub fn make_test(config: &Config, testpaths: &TestPaths) -> test::TestDescAndFn\n     }\n }\n \n+fn stamp(config: &Config, testpaths: &TestPaths) -> PathBuf {\n+    let stamp_name = format!(\"{}-H-{}-T-{}-S-{}.stamp\",\n+                             testpaths.file.file_name().unwrap()\n+                                           .to_str().unwrap(),\n+                             config.host,\n+                             config.target,\n+                             config.stage_id);\n+    config.build_base.canonicalize()\n+          .unwrap_or(config.build_base.clone())\n+          .join(stamp_name)\n+}\n+\n+fn up_to_date(config: &Config, testpaths: &TestPaths, props: &EarlyProps) -> bool {\n+    let stamp = mtime(&stamp(config, testpaths));\n+    let mut inputs = vec![\n+        mtime(&testpaths.file),\n+        mtime(&config.rustc_path),\n+    ];\n+    for aux in props.aux.iter() {\n+        inputs.push(mtime(&testpaths.file.parent().unwrap()\n+                                         .join(\"auxiliary\")\n+                                         .join(aux)));\n+    }\n+    for lib in config.run_lib_path.read_dir().unwrap() {\n+        let lib = lib.unwrap();\n+        inputs.push(mtime(&lib.path()));\n+    }\n+    inputs.iter().any(|input| *input > stamp)\n+}\n+\n+fn mtime(path: &Path) -> FileTime {\n+    fs::metadata(path).map(|f| {\n+        FileTime::from_last_modification_time(&f)\n+    }).unwrap_or(FileTime::zero())\n+}\n+\n pub fn make_test_name(config: &Config, testpaths: &TestPaths) -> test::TestName {\n     // Convert a complete path to something like\n     //"}, {"sha": "10d5f0d979f27a801b0648e9664934dd60132ff7", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8e0d04878f38e8a91e7a6196fb18878da208887/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c8e0d04878f38e8a91e7a6196fb18878da208887", "patch": "@@ -80,6 +80,8 @@ pub fn run(config: Config, testpaths: &TestPaths) {\n     }\n \n     base_cx.complete_all();\n+\n+    File::create(::stamp(&config, &testpaths)).unwrap();\n }\n \n struct TestCx<'test> {"}]}