{"sha": "daccb3d974ca20d78e02c9691fb3bddc90194935", "node_id": "C_kwDOAAsO6NoAKGRhY2NiM2Q5NzRjYTIwZDc4ZTAyYzk2OTFmYjNiZGRjOTAxOTQ5MzU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-23T00:02:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-23T00:02:15Z"}, "message": "Auto merge of #105036 - jyn514:cargo-docs, r=Mark-Simulacrum\n\nSupport documenting cargo\n\nThe primary motivation is to have the cargo docs show up on https://doc.rust-lang.org/nightly/nightly-rustc/cargo, but as a nice side effect this makes `x doc cargo` work locally.\n\ncc `@rust-lang/cargo`", "tree": {"sha": "2a216a48deb8fbec76b1caa1553e037cdfa3f29d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a216a48deb8fbec76b1caa1553e037cdfa3f29d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daccb3d974ca20d78e02c9691fb3bddc90194935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daccb3d974ca20d78e02c9691fb3bddc90194935", "html_url": "https://github.com/rust-lang/rust/commit/daccb3d974ca20d78e02c9691fb3bddc90194935", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daccb3d974ca20d78e02c9691fb3bddc90194935/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a97b4812a7a46bb5206487c2455b9c5bfcbd1b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a97b4812a7a46bb5206487c2455b9c5bfcbd1b9", "html_url": "https://github.com/rust-lang/rust/commit/8a97b4812a7a46bb5206487c2455b9c5bfcbd1b9"}, {"sha": "f94c926aecf226a12ffc5c7f09156390dde545ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/f94c926aecf226a12ffc5c7f09156390dde545ca", "html_url": "https://github.com/rust-lang/rust/commit/f94c926aecf226a12ffc5c7f09156390dde545ca"}], "stats": {"total": 184, "additions": 160, "deletions": 24}, "files": [{"sha": "62ae0cd85eace084e32014eec3165b5ab2d4ba98", "filename": "Cargo.lock", "status": "modified", "additions": 104, "deletions": 13, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/daccb3d974ca20d78e02c9691fb3bddc90194935/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/daccb3d974ca20d78e02c9691fb3bddc90194935/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=daccb3d974ca20d78e02c9691fb3bddc90194935", "patch": "@@ -77,6 +77,15 @@ dependencies = [\n  \"yansi-term\",\n ]\n \n+[[package]]\n+name = \"ansi_term\"\n+version = \"0.11.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n+dependencies = [\n+ \"winapi\",\n+]\n+\n [[package]]\n name = \"ansi_term\"\n version = \"0.12.1\"\n@@ -707,7 +716,7 @@ dependencies = [\n  \"declare_clippy_lint\",\n  \"if_chain\",\n  \"itertools\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.9.2\",\n  \"quine-mc_cluskey\",\n  \"regex-syntax\",\n  \"rustc-semver\",\n@@ -1028,6 +1037,16 @@ dependencies = [\n  \"quote\",\n ]\n \n+[[package]]\n+name = \"ctor\"\n+version = \"0.1.26\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"6d2301688392eb071b0bf1a37be05c469d3cc4dbbd95df672fe28ab021e6a096\"\n+dependencies = [\n+ \"quote\",\n+ \"syn\",\n+]\n+\n [[package]]\n name = \"curl\"\n version = \"0.4.44\"\n@@ -1104,6 +1123,12 @@ version = \"0.1.13\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n \n+[[package]]\n+name = \"difference\"\n+version = \"2.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n+\n [[package]]\n name = \"digest\"\n version = \"0.10.2\"\n@@ -1683,6 +1708,21 @@ dependencies = [\n  \"serde\",\n ]\n \n+[[package]]\n+name = \"handlebars\"\n+version = \"3.5.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"4498fc115fa7d34de968184e473529abb40eeb6be8bc5f7faba3d08c316cb3e3\"\n+dependencies = [\n+ \"log\",\n+ \"pest\",\n+ \"pest_derive\",\n+ \"quick-error 2.0.1\",\n+ \"serde\",\n+ \"serde_json\",\n+ \"walkdir\",\n+]\n+\n [[package]]\n name = \"handlebars\"\n version = \"4.3.3\"\n@@ -1794,7 +1834,7 @@ version = \"1.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"df004cfca50ef23c36850aaaa59ad52cc70d0e90243c3c7737a4dd32dc7a3c4f\"\n dependencies = [\n- \"quick-error\",\n+ \"quick-error 1.2.3\",\n ]\n \n [[package]]\n@@ -1990,19 +2030,19 @@ dependencies = [\n \n [[package]]\n name = \"io-lifetimes\"\n-version = \"1.0.2\"\n+version = \"1.0.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e394faa0efb47f9f227f1cd89978f854542b318a6f64fa695489c9c993056656\"\n+checksum = \"46112a93252b123d31a119a8d1a1ac19deac4fac6e0e8b0df58f0d4e5870e63c\"\n dependencies = [\n  \"libc\",\n  \"windows-sys\",\n ]\n \n [[package]]\n name = \"is-terminal\"\n-version = \"0.4.0\"\n+version = \"0.4.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"aae5bc6e2eb41c9def29a3e0f1306382807764b9b53112030eff57435667352d\"\n+checksum = \"28dfb6c8100ccc63462345b67d1bbc3679177c75ee4bf59bf29c8b1d110b8189\"\n dependencies = [\n  \"hermit-abi 0.2.6\",\n  \"io-lifetimes\",\n@@ -2221,9 +2261,9 @@ dependencies = [\n \n [[package]]\n name = \"linux-raw-sys\"\n-version = \"0.1.3\"\n+version = \"0.1.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8f9f08d8963a6c613f4b1a78f4f4a4dbfadf8e6545b2d72861731e4858b8b47f\"\n+checksum = \"f051f77a7c8e6957c0696eac88f26b0117e54f52d3fc682ab19397a8812846a4\"\n \n [[package]]\n name = \"litemap\"\n@@ -2328,12 +2368,12 @@ dependencies = [\n  \"clap_complete\",\n  \"elasticlunr-rs\",\n  \"env_logger 0.9.0\",\n- \"handlebars\",\n+ \"handlebars 4.3.3\",\n  \"lazy_static\",\n  \"log\",\n  \"memchr\",\n  \"opener\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.9.2\",\n  \"regex\",\n  \"serde\",\n  \"serde_json\",\n@@ -2343,6 +2383,19 @@ dependencies = [\n  \"topological-sort\",\n ]\n \n+[[package]]\n+name = \"mdman\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"anyhow\",\n+ \"handlebars 3.5.5\",\n+ \"pretty_assertions\",\n+ \"pulldown-cmark 0.7.2\",\n+ \"same-file\",\n+ \"serde_json\",\n+ \"url\",\n+]\n+\n [[package]]\n name = \"measureme\"\n version = \"10.1.0\"\n@@ -2617,6 +2670,15 @@ version = \"6.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"8e22443d1643a904602595ba1cd8f7d896afe56d26712531c5ff73a15b2fbf64\"\n \n+[[package]]\n+name = \"output_vt100\"\n+version = \"0.1.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"628223faebab4e3e40667ee0b2336d34a5b960ff60ea743ddfdbcf7770bcfb66\"\n+dependencies = [\n+ \"winapi\",\n+]\n+\n [[package]]\n name = \"owo-colors\"\n version = \"3.4.0\"\n@@ -2858,6 +2920,18 @@ version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c\"\n \n+[[package]]\n+name = \"pretty_assertions\"\n+version = \"0.6.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"3f81e1644e1b54f5a68959a29aa86cde704219254669da328ecfdf6a1f09d427\"\n+dependencies = [\n+ \"ansi_term 0.11.0\",\n+ \"ctor\",\n+ \"difference\",\n+ \"output_vt100\",\n+]\n+\n [[package]]\n name = \"pretty_env_logger\"\n version = \"0.4.0\"\n@@ -2933,6 +3007,17 @@ dependencies = [\n  \"cc\",\n ]\n \n+[[package]]\n+name = \"pulldown-cmark\"\n+version = \"0.7.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"ca36dea94d187597e104a5c8e4b07576a8a45aa5db48a65e12940d3eb7461f55\"\n+dependencies = [\n+ \"bitflags\",\n+ \"memchr\",\n+ \"unicase\",\n+]\n+\n [[package]]\n name = \"pulldown-cmark\"\n version = \"0.9.2\"\n@@ -2956,6 +3041,12 @@ version = \"1.2.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0\"\n \n+[[package]]\n+name = \"quick-error\"\n+version = \"2.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3\"\n+\n [[package]]\n name = \"quine-mc_cluskey\"\n version = \"0.2.4\"\n@@ -4545,7 +4636,7 @@ dependencies = [\n  \"itertools\",\n  \"minifier\",\n  \"once_cell\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.9.2\",\n  \"rayon\",\n  \"regex\",\n  \"rustdoc-json-types\",\n@@ -5375,7 +5466,7 @@ version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"245da694cc7fc4729f3f418b304cb57789f1bed2a78c575407ab8a23f53cb4d3\"\n dependencies = [\n- \"ansi_term\",\n+ \"ansi_term 0.12.1\",\n  \"lazy_static\",\n  \"matchers\",\n  \"parking_lot 0.11.2\",\n@@ -5394,7 +5485,7 @@ version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3ce989c9962c7f61fe084dd4a230eec784649dfc2392467c790007c3a6e134e7\"\n dependencies = [\n- \"ansi_term\",\n+ \"ansi_term 0.12.1\",\n  \"atty\",\n  \"tracing-core\",\n  \"tracing-log\","}, {"sha": "1cec4a84480c43a4215d10ea2fc3f3b3d227f580", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/daccb3d974ca20d78e02c9691fb3bddc90194935/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/daccb3d974ca20d78e02c9691fb3bddc90194935/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=daccb3d974ca20d78e02c9691fb3bddc90194935", "patch": "@@ -25,6 +25,8 @@ members = [\n   \"src/tools/cargo/crates/credential/cargo-credential-1password\",\n   \"src/tools/cargo/crates/credential/cargo-credential-macos-keychain\",\n   \"src/tools/cargo/crates/credential/cargo-credential-wincred\",\n+  \"src/tools/cargo/crates/mdman\",\n+  # \"src/tools/cargo/crates/resolver-tests\",\n   \"src/tools/rustdoc\",\n   \"src/tools/rls\",\n   \"src/tools/rustfmt\","}, {"sha": "eb03a45583e0524aff421569cd625cd4a008fc70", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/daccb3d974ca20d78e02c9691fb3bddc90194935/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daccb3d974ca20d78e02c9691fb3bddc90194935/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=daccb3d974ca20d78e02c9691fb3bddc90194935", "patch": "@@ -702,6 +702,7 @@ impl<'a> Builder<'a> {\n                 doc::RustdocBook,\n                 doc::RustByExample,\n                 doc::RustcBook,\n+                doc::Cargo,\n                 doc::CargoBook,\n                 doc::Clippy,\n                 doc::ClippyBook,"}, {"sha": "5838049aa5c79d96d240e0a11b2e3dbc5e74e02d", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 52, "deletions": 11, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/daccb3d974ca20d78e02c9691fb3bddc90194935/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daccb3d974ca20d78e02c9691fb3bddc90194935/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=daccb3d974ca20d78e02c9691fb3bddc90194935", "patch": "@@ -729,7 +729,7 @@ impl Step for Rustc {\n }\n \n macro_rules! tool_doc {\n-    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?] $(,)?) => {\n+    ($tool: ident, $should_run: literal, $path: literal, $(rustc_tool = $rustc_tool:literal, )? $(in_tree = $in_tree:literal, )? [$($krate: literal),+ $(,)?] $(,)?) => {\n         #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n         pub struct $tool {\n             target: TargetSelection,\n@@ -763,13 +763,24 @@ macro_rules! tool_doc {\n                 let out = builder.compiler_doc_out(target);\n                 t!(fs::create_dir_all(&out));\n \n-                // Build rustc docs so that we generate relative links.\n-                builder.ensure(Rustc { stage, target });\n-                // Rustdoc needs the rustc sysroot available to build.\n-                // FIXME: is there a way to only ensure `check::Rustc` here? Last time I tried it failed\n-                // with strange errors, but only on a full bors test ...\n                 let compiler = builder.compiler(stage, builder.config.build);\n-                builder.ensure(compile::Rustc::new(compiler, target));\n+                builder.ensure(compile::Std::new(compiler, target));\n+\n+                if true $(&& $rustc_tool)? {\n+                    // Build rustc docs so that we generate relative links.\n+                    builder.ensure(Rustc { stage, target });\n+\n+                    // Rustdoc needs the rustc sysroot available to build.\n+                    // FIXME: is there a way to only ensure `check::Rustc` here? Last time I tried it failed\n+                    // with strange errors, but only on a full bors test ...\n+                    builder.ensure(compile::Rustc::new(compiler, target));\n+                }\n+\n+                let source_type = if true $(&& $in_tree)? {\n+                    SourceType::InTree\n+                } else {\n+                    SourceType::Submodule\n+                };\n \n                 builder.info(\n                     &format!(\n@@ -781,9 +792,15 @@ macro_rules! tool_doc {\n                 );\n \n                 // Symlink compiler docs to the output directory of rustdoc documentation.\n-                let out_dir = builder.stage_out(compiler, Mode::ToolRustc).join(target.triple).join(\"doc\");\n-                t!(fs::create_dir_all(&out_dir));\n-                t!(symlink_dir_force(&builder.config, &out, &out_dir));\n+                let out_dirs = [\n+                    builder.stage_out(compiler, Mode::ToolRustc).join(target.triple).join(\"doc\"),\n+                    // Cargo uses a different directory for proc macros.\n+                    builder.stage_out(compiler, Mode::ToolRustc).join(\"doc\"),\n+                ];\n+                for out_dir in out_dirs {\n+                    t!(fs::create_dir_all(&out_dir));\n+                    t!(symlink_dir_force(&builder.config, &out, &out_dir));\n+                }\n \n                 // Build cargo command.\n                 let mut cargo = prepare_tool_cargo(\n@@ -793,7 +810,7 @@ macro_rules! tool_doc {\n                     target,\n                     \"doc\",\n                     $path,\n-                    SourceType::InTree,\n+                    source_type,\n                     &[],\n                 );\n \n@@ -824,6 +841,30 @@ tool_doc!(\n );\n tool_doc!(Clippy, \"clippy\", \"src/tools/clippy\", [\"clippy_utils\"]);\n tool_doc!(Miri, \"miri\", \"src/tools/miri\", [\"miri\"]);\n+tool_doc!(\n+    Cargo,\n+    \"cargo\",\n+    \"src/tools/cargo\",\n+    rustc_tool = false,\n+    in_tree = false,\n+    [\n+        \"cargo\",\n+        \"cargo-platform\",\n+        \"cargo-util\",\n+        \"crates-io\",\n+        \"cargo-test-macro\",\n+        \"cargo-test-support\",\n+        \"cargo-credential\",\n+        \"cargo-credential-1password\",\n+        \"mdman\",\n+        // FIXME: this trips a license check in tidy.\n+        // \"resolver-tests\",\n+        // FIXME: we should probably document these, but they're different per-platform so we can't use `tool_doc`.\n+        // \"cargo-credential-gnome-secret\",\n+        // \"cargo-credential-macos-keychain\",\n+        // \"cargo-credential-wincred\",\n+    ]\n+);\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct ErrorIndex {"}, {"sha": "35a58e11df929ac1c05c9f49cdf87cc5eb2fbff0", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/daccb3d974ca20d78e02c9691fb3bddc90194935/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daccb3d974ca20d78e02c9691fb3bddc90194935/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=daccb3d974ca20d78e02c9691fb3bddc90194935", "patch": "@@ -202,6 +202,7 @@ const EXTRA_CHECK_CFGS: &[(Option<Mode>, &'static str, Option<&[&'static str]>)]\n     (None, \"bootstrap\", None),\n     (Some(Mode::Rustc), \"parallel_compiler\", None),\n     (Some(Mode::ToolRustc), \"parallel_compiler\", None),\n+    (Some(Mode::ToolRustc), \"emulate_second_only_system\", None),\n     (Some(Mode::Codegen), \"parallel_compiler\", None),\n     (Some(Mode::Std), \"stdarch_intel_sde\", None),\n     (Some(Mode::Std), \"no_fp_fmt_parse\", None),"}]}