{"sha": "9e11ecb7507b1d661a47346fe37da85eff548f67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMTFlY2I3NTA3YjFkNjYxYTQ3MzQ2ZmUzN2RhODVlZmY1NDhmNjc=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-19T14:18:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-19T14:18:21Z"}, "message": "Rollup merge of #40621 - jswalden:dependant-spelling-fix, r=sfackler\n\nFix a spelling error in HashMap documentation, and slightly reword surrounding text for precision\n\nNoticed while reading docs just now.\n\nIt's possible that the prior wording *meant* to state that the seed's randomness depends on the exact instant that the system RNG was created, I guess.  But unless there's an API guarantee that this is the case, the wording seems over-precise.  Is there a formal API guarantee that would forbid, say, the system RNG from generating all output using the Intel RDRAND instruction?  I don't think the quality of output in that case would depend on when the RNG was created.  Yet it seems to me like it could well be a valid source of randomness when computing the initial seed.\n\nFor that reason, tying the randomness of the seed, to the quality of the RNG's output *at the precise instant the seed is computed*, seems less confining.  That instantaneous quality level could be determined by the quality at the instant the RNG was created -- but instantaneous quality need not be low for that precise reason.", "tree": {"sha": "630eca52453a972d3fa3ebdfd05ca09bf4e1f8a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/630eca52453a972d3fa3ebdfd05ca09bf4e1f8a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e11ecb7507b1d661a47346fe37da85eff548f67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e11ecb7507b1d661a47346fe37da85eff548f67", "html_url": "https://github.com/rust-lang/rust/commit/9e11ecb7507b1d661a47346fe37da85eff548f67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e11ecb7507b1d661a47346fe37da85eff548f67/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8c8e01038eaf1d52c97af6aee7a6e7e03ad5c94", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8c8e01038eaf1d52c97af6aee7a6e7e03ad5c94", "html_url": "https://github.com/rust-lang/rust/commit/d8c8e01038eaf1d52c97af6aee7a6e7e03ad5c94"}, {"sha": "2976ddbb1522397e3a9d91aa5ed9ae8e5cdbf97a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2976ddbb1522397e3a9d91aa5ed9ae8e5cdbf97a", "html_url": "https://github.com/rust-lang/rust/commit/2976ddbb1522397e3a9d91aa5ed9ae8e5cdbf97a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "57332170081465d74afdbe1a1c1269d58d668c97", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e11ecb7507b1d661a47346fe37da85eff548f67/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11ecb7507b1d661a47346fe37da85eff548f67/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=9e11ecb7507b1d661a47346fe37da85eff548f67", "patch": "@@ -222,8 +222,8 @@ const DISPLACEMENT_THRESHOLD: usize = 128;\n /// resistance against HashDoS attacks. The algorithm is randomly seeded, and a\n /// reasonable best-effort is made to generate this seed from a high quality,\n /// secure source of randomness provided by the host without blocking the\n-/// program. Because of this, the randomness of the seed is dependant on the\n-/// quality of the system's random number generator at the time it is created.\n+/// program. Because of this, the randomness of the seed depends on the output\n+/// quality of the system's random number generator when the seed is created.\n /// In particular, seeds generated when the system's entropy pool is abnormally\n /// low such as during system boot may be of a lower quality.\n ///"}]}