{"sha": "e6bde923f534fcc630c92a2756449e7483d84662", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YmRlOTIzZjUzNGZjYzYzMGM5MmEyNzU2NDQ5ZTc0ODNkODQ2NjI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-05T05:28:10Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-05T05:28:10Z"}, "message": "Format comment between chain elements", "tree": {"sha": "32388485e45304e0da71b66a333494a03d17eae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32388485e45304e0da71b66a333494a03d17eae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6bde923f534fcc630c92a2756449e7483d84662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6bde923f534fcc630c92a2756449e7483d84662", "html_url": "https://github.com/rust-lang/rust/commit/e6bde923f534fcc630c92a2756449e7483d84662", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6bde923f534fcc630c92a2756449e7483d84662/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "844e878d123acfd0c88fa9283c3fe3b21cd84ec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/844e878d123acfd0c88fa9283c3fe3b21cd84ec2", "html_url": "https://github.com/rust-lang/rust/commit/844e878d123acfd0c88fa9283c3fe3b21cd84ec2"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "daff789296e432ca9b9ae684c5c26ff6aed08149", "filename": "src/chains.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e6bde923f534fcc630c92a2756449e7483d84662/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6bde923f534fcc630c92a2756449e7483d84662/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=e6bde923f534fcc630c92a2756449e7483d84662", "patch": "@@ -201,6 +201,14 @@ impl ChainItem {\n         ChainItem { kind, tries, span }\n     }\n \n+    fn comment(span: Span) -> ChainItem {\n+        ChainItem {\n+            kind: ChainItemKind::Comment,\n+            tries: 0,\n+            span,\n+        }\n+    }\n+\n     fn rewrite_method_call(\n         method_name: ast::Ident,\n         types: &[ast::GenericArg],\n@@ -235,22 +243,32 @@ impl Chain {\n         let subexpr_list = Self::make_subexpr_list(expr, context);\n \n         // Un-parse the expression tree into ChainItems\n-        let mut children = vec![];\n+        let mut rev_children = vec![];\n         let mut sub_tries = 0;\n         for subexpr in &subexpr_list {\n             match subexpr.node {\n                 ast::ExprKind::Try(_) => sub_tries += 1,\n                 _ => {\n-                    children.push(ChainItem::new(context, subexpr, sub_tries));\n+                    rev_children.push(ChainItem::new(context, subexpr, sub_tries));\n                     sub_tries = 0;\n                 }\n             }\n         }\n \n-        Chain {\n-            parent: children.pop().unwrap(),\n-            children: children.into_iter().rev().collect(),\n+        let parent = rev_children.pop().unwrap();\n+        let mut children = vec![];\n+        let mut prev_hi = parent.span.hi();\n+        for chain_item in rev_children.into_iter().rev() {\n+            let comment_span = mk_sp(prev_hi, chain_item.span.lo());\n+            let comment_snippet = context.snippet(comment_span);\n+            if !comment_snippet.trim().is_empty() {\n+                children.push(ChainItem::comment(comment_span));\n+            }\n+            prev_hi = chain_item.span.hi();\n+            children.push(chain_item);\n         }\n+\n+        Chain { parent, children }\n     }\n \n     // Returns a Vec of the prefixes of the chain."}]}