{"sha": "8086107b6ac8555a226ceb294e2c633dfe36c6e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwODYxMDdiNmFjODU1NWEyMjZjZWIyOTRlMmM2MzNkZmUzNmM2ZTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T16:40:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T16:40:37Z"}, "message": "implement path conversion", "tree": {"sha": "e55c7ac4b6353885bd5f433914b1ab2d5705262f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e55c7ac4b6353885bd5f433914b1ab2d5705262f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8086107b6ac8555a226ceb294e2c633dfe36c6e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8086107b6ac8555a226ceb294e2c633dfe36c6e1", "html_url": "https://github.com/rust-lang/rust/commit/8086107b6ac8555a226ceb294e2c633dfe36c6e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8086107b6ac8555a226ceb294e2c633dfe36c6e1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcdcfa9df222667e6bfcbb1a8923bdc55bd57dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcdcfa9df222667e6bfcbb1a8923bdc55bd57dc0", "html_url": "https://github.com/rust-lang/rust/commit/bcdcfa9df222667e6bfcbb1a8923bdc55bd57dc0"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "b65b6adb7d4d930cf070d2a045c5ced325fc92e8", "filename": "crates/ra_analysis/src/descriptors/module/nameres.rs", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/8086107b6ac8555a226ceb294e2c633dfe36c6e1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8086107b6ac8555a226ceb294e2c633dfe36c6e1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs?ref=8086107b6ac8555a226ceb294e2c633dfe36c6e1", "patch": "@@ -136,7 +136,50 @@ impl InputModuleItems {\n }\n \n fn convert_path(prefix: Option<Path>, path: ast::Path) -> Option<Path> {\n-    prefix\n+    let prefix = if let Some(qual) = path.qualifier() {\n+        Some(convert_path(prefix, qual)?)\n+    } else {\n+        None\n+    };\n+    let segment = path.segment()?;\n+    let res = match segment.kind()? {\n+        ast::PathSegmentKind::Name(name) => {\n+            let mut res = prefix.unwrap_or_else(|| Path {\n+                kind: PathKind::Abs,\n+                segments: Vec::with_capacity(1),\n+            });\n+            res.segments.push(name.text());\n+            res\n+        }\n+        ast::PathSegmentKind::CrateKw => {\n+            if prefix.is_some() {\n+                return None;\n+            }\n+            Path {\n+                kind: PathKind::Crate,\n+                segments: Vec::new(),\n+            }\n+        }\n+        ast::PathSegmentKind::SelfKw => {\n+            if prefix.is_some() {\n+                return None;\n+            }\n+            Path {\n+                kind: PathKind::Self_,\n+                segments: Vec::new(),\n+            }\n+        }\n+        ast::PathSegmentKind::SuperKw => {\n+            if prefix.is_some() {\n+                return None;\n+            }\n+            Path {\n+                kind: PathKind::Super,\n+                segments: Vec::new(),\n+            }\n+        }\n+    };\n+    Some(res)\n }\n \n impl ModuleItem {"}]}