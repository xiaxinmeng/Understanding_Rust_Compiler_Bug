{"sha": "1d37118a00d5343641c7a949c89bf5a4841c1eec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMzcxMThhMDBkNTM0MzY0MWM3YTk0OWM4OWJmNWE0ODQxYzFlZWM=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-28T23:39:24Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-28T23:41:06Z"}, "message": "Update docs for claim", "tree": {"sha": "203f191aa684b4acbe3ed87e5c74ef62988ee079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/203f191aa684b4acbe3ed87e5c74ef62988ee079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d37118a00d5343641c7a949c89bf5a4841c1eec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d37118a00d5343641c7a949c89bf5a4841c1eec", "html_url": "https://github.com/rust-lang/rust/commit/1d37118a00d5343641c7a949c89bf5a4841c1eec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d37118a00d5343641c7a949c89bf5a4841c1eec/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f1444c70121966d31d393867d73167b4de8a43d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f1444c70121966d31d393867d73167b4de8a43d", "html_url": "https://github.com/rust-lang/rust/commit/9f1444c70121966d31d393867d73167b4de8a43d"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "6274528c8633700c5d5441685457389e25ce68e9", "filename": "doc/rust.texi", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1d37118a00d5343641c7a949c89bf5a4841c1eec/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/1d37118a00d5343641c7a949c89bf5a4841c1eec/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=1d37118a00d5343641c7a949c89bf5a4841c1eec", "patch": "@@ -2965,6 +2965,7 @@ effects of the expression's evaluation.\n * Ref.Expr.Alt::                Expression for complex conditional branching.\n * Ref.Expr.Prove::              Expression for static assertion of typestate.\n * Ref.Expr.Check::              Expression for dynamic assertion of typestate.\n+* Ref.Expr.Claim::              Expression for static (unsafe) or dynamic assertion of typestate.\n * Ref.Expr.Assert::              Expression for halting the program if a\n                                            boolean condition fails to hold.\n * Ref.Expr.IfCheck::            Expression for dynamic testing of typestate.\n@@ -3629,6 +3630,26 @@ fn test() @{\n @}\n @end example\n \n+@node       Ref.Expr.Claim\n+@subsection Ref.Expr.Claim\n+@c * Ref.Expr.Claim::              Expression for static (unsafe) or dynamic assertion of typestate.\n+@cindex Claim expression\n+@cindex Typestate system\n+\n+A @code{claim} expression is an unsafe variant on a @code{check} expression\n+that is not actually checked at runtime. Thus, using a @code{claim} implies a\n+proof obligation to ensure---without compiler assistance---that an assertion\n+always holds.\n+\n+With a command-line flag, the compiler can turn all @code{claim} expressions\n+into @code{check} expressions, but the default is to not check the assertion\n+contained in a @code{claim}.\n+\n+The idea is to use @code{check} during development, with @code{claim}\n+providing the freedom to disable a few runtime checks in performance-critical\n+locations once code is debugged, while leaving the @code{claim} expressions in\n+the code as documentation.\n+\n @node       Ref.Expr.IfCheck\n @subsection Ref.Expr.IfCheck\n @c * Ref.Expr.IfCheck::            Expression for dynamic testing of typestate."}]}