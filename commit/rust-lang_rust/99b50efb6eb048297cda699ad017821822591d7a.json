{"sha": "99b50efb6eb048297cda699ad017821822591d7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YjUwZWZiNmViMDQ4Mjk3Y2RhNjk5YWQwMTc4MjE4MjI1OTFkN2E=", "commit": {"author": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-02T16:50:37Z"}, "committer": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-02T16:50:37Z"}, "message": "Use _", "tree": {"sha": "d7d67b3e47f397403148a47b29504bcaabd0a8f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7d67b3e47f397403148a47b29504bcaabd0a8f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99b50efb6eb048297cda699ad017821822591d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99b50efb6eb048297cda699ad017821822591d7a", "html_url": "https://github.com/rust-lang/rust/commit/99b50efb6eb048297cda699ad017821822591d7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99b50efb6eb048297cda699ad017821822591d7a/comments", "author": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51", "html_url": "https://github.com/rust-lang/rust/commit/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "51ae0aa73159accb6812a642381f0a25edbd689a", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/99b50efb6eb048297cda699ad017821822591d7a/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99b50efb6eb048297cda699ad017821822591d7a/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=99b50efb6eb048297cda699ad017821822591d7a", "patch": "@@ -236,7 +236,7 @@ impl Command {\n     }\n \n     #[cfg(not(any(target_os = \"macos\", target_os = \"freebsd\")))]\n-    fn posix_spawn(&mut self, _stdio: &ChildPipes, _envp: Option<&CStringArray>)\n+    fn posix_spawn(&mut self, _: &ChildPipes, _: Option<&CStringArray>)\n         -> io::Result<Option<Process>>\n     {\n         Ok(None)"}]}