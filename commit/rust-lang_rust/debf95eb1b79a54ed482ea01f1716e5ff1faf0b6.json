{"sha": "debf95eb1b79a54ed482ea01f1716e5ff1faf0b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYmY5NWViMWI3OWE1NGVkNDgyZWEwMWYxNzE2ZTVmZjFmYWYwYjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:24:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:24:39Z"}, "message": "Reduce visibility", "tree": {"sha": "ac7371ec65036a4627e760015905c47d215a74da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac7371ec65036a4627e760015905c47d215a74da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/debf95eb1b79a54ed482ea01f1716e5ff1faf0b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/debf95eb1b79a54ed482ea01f1716e5ff1faf0b6", "html_url": "https://github.com/rust-lang/rust/commit/debf95eb1b79a54ed482ea01f1716e5ff1faf0b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/debf95eb1b79a54ed482ea01f1716e5ff1faf0b6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8f62095d6cf07ba521cdb3f7bac147496b313c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8f62095d6cf07ba521cdb3f7bac147496b313c9", "html_url": "https://github.com/rust-lang/rust/commit/b8f62095d6cf07ba521cdb3f7bac147496b313c9"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "269501221d8677fca29bc6b10c11f08182c962fa", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/debf95eb1b79a54ed482ea01f1716e5ff1faf0b6/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/debf95eb1b79a54ed482ea01f1716e5ff1faf0b6/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=debf95eb1b79a54ed482ea01f1716e5ff1faf0b6", "patch": "@@ -26,11 +26,7 @@ impl MacroResolver {\n         MacroResolver { crate_def_map: db.crate_def_map(module.krate), module }\n     }\n \n-    pub(crate) fn resolve_path_as_macro(\n-        &self,\n-        db: &impl DefDatabase2,\n-        path: &Path,\n-    ) -> Option<MacroDefId> {\n+    fn resolve_path_as_macro(&self, db: &impl DefDatabase2, path: &Path) -> Option<MacroDefId> {\n         self.crate_def_map.resolve_path(db, self.module.module_id, path).0.get_macros()\n     }\n }"}]}