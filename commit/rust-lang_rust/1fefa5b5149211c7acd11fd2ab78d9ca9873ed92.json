{"sha": "1fefa5b5149211c7acd11fd2ab78d9ca9873ed92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZWZhNWI1MTQ5MjExYzdhY2QxMWZkMmFiNzhkOWNhOTg3M2VkOTI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-27T19:46:42Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-27T19:47:03Z"}, "message": "Updated release notes for 0.11.0", "tree": {"sha": "3119a50f11c7dd853e8a83246e6b90fb5e60eb89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3119a50f11c7dd853e8a83246e6b90fb5e60eb89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fefa5b5149211c7acd11fd2ab78d9ca9873ed92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fefa5b5149211c7acd11fd2ab78d9ca9873ed92", "html_url": "https://github.com/rust-lang/rust/commit/1fefa5b5149211c7acd11fd2ab78d9ca9873ed92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fefa5b5149211c7acd11fd2ab78d9ca9873ed92/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2ff9d804aa0281adc6a8733467616db9cc2fe22", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2ff9d804aa0281adc6a8733467616db9cc2fe22", "html_url": "https://github.com/rust-lang/rust/commit/d2ff9d804aa0281adc6a8733467616db9cc2fe22"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "1fc3ebd414f844ca483c4796c285ebcf777876b0", "filename": "RELEASES.txt", "status": "modified", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/1fefa5b5149211c7acd11fd2ab78d9ca9873ed92/RELEASES.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1fefa5b5149211c7acd11fd2ab78d9ca9873ed92/RELEASES.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.txt?ref=1fefa5b5149211c7acd11fd2ab78d9ca9873ed92", "patch": "@@ -1,3 +1,136 @@\n+Version 0.11 (July 2014)\n+-------------------------\n+\n+  * ~1700 cahnges, numerous bugfixes\n+\n+  * Language\n+    * ~[T] has been removed from the language. This type is superseded by\n+      the Vec<T> type.\n+    * ~str has been removed from the language. This type is superseded by\n+      the String type.\n+    * ~T has been removed from the language. This type is superseded by the\n+      Box<T> type.\n+    * @T has been removed from the language. This type is superseded by the\n+      standard library's std::gc::Gc<T> type.\n+    * Struct fields are now all private by default.\n+    * Vector indices and shift amounts are both required to be a `uint` now\n+      instead of any integral type.\n+    * Byte character, byte string, and raw byte string literals are now all\n+      supported by prefixing the normal literal with a `b`.\n+    * Multiple ABIs are no longer allowed in an ABI string\n+    * The syntax for lifetimes on clousres/procedures has been tweaked\n+      slightly.\n+    * Floating point modulus has been removed from the language, it is still\n+      provided by a library implementation, however.\n+    * Private enum variants are now disallowed.\n+    * The `priv` keyword has been removed from the language.\n+    * A closure can no longer be invoked through a &-pointer.\n+    * The `use foo, bar, baz;` syntax has been removed from the language.\n+    * The transmute intrinsic no longer works on type parameters.\n+    * Statics now allow blocks/items in their definition.\n+    * Trait bounds are separated from objects with + instead of : now.\n+    * Mutably borrowed objects can no longer be read while they are\n+      borrowed.\n+    * The address of a static is now marked as insignificant unless the\n+      #[inline(never)] attribute is placed on a static.\n+    * The #[unsafe_destructor] attribute is now behind a feature gate.\n+    * Struct literals are no longer allowed in ambiguous positions such as\n+      if, while, match, and for..in.\n+    * Declaration of lang items and intrinsics are now feature-gated by\n+      default.\n+    * Integral literals no longer default to `int`, and floating point\n+      literals no longer default to `f64`. Literals must be suffixed with an\n+      appropriate type if inference cannot determine the type of the\n+      literal.\n+    * The Box<T> type is no longer implicitly borrowed to &mut T.\n+    * Procedures are now required to not capture borrowed references.\n+\n+  * Libraries\n+    * The standard library is now a \"facade\" over a number of underlying\n+      libraries. This means that development on the standard library should\n+      be speeder due to less to compile, as well as a clearer line between\n+      all dependencies.\n+    * A new library, libcore, lives under the standard library's facade\n+      which is Rust's \"0-assumption\" library, suitable for embedded and\n+      kernel development for example.\n+    * A regex crate has been added to the standard distribution. This crate\n+      includes statically compiled regulard expressions.\n+    * The unwrap/unwrap_err methods on Result require a Show bound for\n+      better error messages.\n+    * The return types of the std::comm primitives have been centralized\n+      around the Result type.\n+    * A number of I/O primitives have gained the ability to time out their\n+      operations.\n+    * A number of I/O primitives have gained the ability to close their\n+      reading/writing halves to cancel pending operations.\n+    * Reverse iterator methods have been removed in favor of `rev()` on\n+      their forward-iteration counterparts.\n+    * A bitflags! macro has been added to enable easy interop with C and\n+      management of bit flags.\n+    * A debug_assert! macro is now provided which is disabled when\n+      `--cfg ndebug` is passed to the compiler.\n+    * A graphviz crate has been added for creating .dot files.\n+    * The std::cast module has been migrated into std::mem.\n+    * The std::local_data api has been migrated from freestanding functions\n+      to based on methods.\n+    * The Pod trait has been renamed to Copy.\n+    * jemalloc has been added as the default allocator for types.\n+    * The api for allocating memory in rust has been modified for sized\n+      deallocation as well as using proper alignment.\n+    * Connecting a TcpStream or binding a TcpListener is now based on a\n+      string address and a u16 port. This allows connecting to a hostname as\n+      opposed to an IP.\n+    * The Reader trait now contains a core method, read_at_least(), which\n+      correctly handles many repeated 0-length reads.\n+    * The process-spawning API is now centered around a builder-style\n+      Command struct.\n+    * The :? printing qualifier has been moved from the standard library to\n+      an external libdebug crate.\n+    * Eq/Ord have been renamed to PartialEq/PartialOrd. TotalEq/TotalOrd\n+      have been renamed to Eq/Ord.\n+    * The select/plural methods have been removed from format!. The escapes\n+      for { and } have also changed from \\{ and \\} to {{ and }},\n+      respectively.\n+    * The TaskBuilder API has been re-worked to be a true builder, and\n+      extension traits for spawning native/green tasks have been added.\n+\n+  * Tooling\n+    * All breaking changes to the language or libraries now have their\n+      commit message annotated with `[breaking-change]` to allow for easy\n+      discovery of breaking changes.\n+    * The compiler will now try to suggest how to annotate lifetimes if a\n+      lifetime-related error occurs.\n+    * Debug info continues to be improved greatly with better support for\n+      situations such as LTO and general bug fixes.\n+    * Usage of syntax extensions when cross-compiling has been fixed.\n+    * The equivalent of ffunction-sections and fdata-sections have been\n+      enabled by default with the equivalent of --gc-sections.\n+    * The compiler is now stricter about where it will load module files\n+      from when a module is declared via `mod foo;`.\n+    * The #[phase(syntax)] attribute has been renamed to #[phase(plugin)].\n+      Syntax extensions are now discovered via a \"plugin registrar\" type\n+      which will be extended in the future to other various plugins.\n+    * Lints have been restructured to allow for dynamically loadable lints.\n+    * A number of rustdoc improvements:\n+      * The HTML output has been visually redesigned.\n+      * Markdown is now powered by hoedown instead of sundown.\n+      * Searching heuristics have been greatly improved.\n+      * The search index has been reduced in size by a great amount.\n+      * Cross-crate documentation via `pub use` has been greatly improved.\n+      * Primitive types are now hyperlinked and documented.\n+    * Documentation has been moved from static.rust-lang.org/doc to\n+      doc.rust-lang.org\n+    * A new sandbox, play.rust-lang.org, is available for running and\n+      sharing rust code examples on-line.\n+    * Unused attributes are now more robustly warned about.\n+    * The dead_code lint now warns about unused struct fields.\n+    * Cross-compiling to iOS is now supported.\n+    * Cross-compiling to mipsel is now supported.\n+    * Stability attributes are now inherited by default and no longer apply\n+      to intra-crate usage, only inter-crate usage.\n+    * Error message related to non-exhaustive match statements have been\n+      greatly improved.\n+\n Version 0.10 (April 2014)\n -------------------------\n "}]}