{"sha": "6194d7e735fa6837a91c0d23f0bab980ae87650c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxOTRkN2U3MzVmYTY4MzdhOTFjMGQyM2YwYmFiOTgwYWU4NzY1MGM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-16T10:34:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-16T10:34:14Z"}, "message": "Rollup merge of #76675 - lzutao:asm_doc, r=Amanieu\n\nSmall improvements to asm documentation\n\nSave people from searching and reading tons of comments in tracking issues.", "tree": {"sha": "80f2d0020eea285e9fea7108b1a65f17c0d1a0d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80f2d0020eea285e9fea7108b1a65f17c0d1a0d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6194d7e735fa6837a91c0d23f0bab980ae87650c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfYeomCRBK7hj4Ov3rIwAAdHIIAFuEzmm8FLlXDKrJOU9EsZTu\nR9QHTQms3X2cAXr74ZATe2hGpnB/JYJDCQVH5Hpj/XW1mcf8SC4Z5i5FjwFX3d8/\nZ/NzJ6vP/lRQz5OqYBDfoqVSeThsArstn8Hby4DGLFtNoedVz9V11kAq/bjaTwuL\nls11pkTGawhrFIAiNsGFFF0gsQsvjTrMl9KfhV0Fut9Ed3swxkvEvIQkKzLltxoo\nl2p/sONql4f+oxMauL36ZIZy1tHjxLflY7aulZy1wTbCtCXiTqdyC5EmKi1DH1QW\nMs0lTByWSzFquvDlpR+p09WMVAM7B/SRoO+mEwZ9FrCX4V3ilmHhplBtEhLmy9Y=\n=S5lw\n-----END PGP SIGNATURE-----\n", "payload": "tree 80f2d0020eea285e9fea7108b1a65f17c0d1a0d9\nparent d1b050476d873930b63e1449c0ca8aa36593b98e\nparent e82be710e47a38dc303ae8f2df02d9a8c682b1b6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1600252454 +0200\ncommitter GitHub <noreply@github.com> 1600252454 +0200\n\nRollup merge of #76675 - lzutao:asm_doc, r=Amanieu\n\nSmall improvements to asm documentation\n\nSave people from searching and reading tons of comments in tracking issues.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6194d7e735fa6837a91c0d23f0bab980ae87650c", "html_url": "https://github.com/rust-lang/rust/commit/6194d7e735fa6837a91c0d23f0bab980ae87650c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6194d7e735fa6837a91c0d23f0bab980ae87650c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1b050476d873930b63e1449c0ca8aa36593b98e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b050476d873930b63e1449c0ca8aa36593b98e", "html_url": "https://github.com/rust-lang/rust/commit/d1b050476d873930b63e1449c0ca8aa36593b98e"}, {"sha": "e82be710e47a38dc303ae8f2df02d9a8c682b1b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e82be710e47a38dc303ae8f2df02d9a8c682b1b6", "html_url": "https://github.com/rust-lang/rust/commit/e82be710e47a38dc303ae8f2df02d9a8c682b1b6"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "df113f0f1613c3fd33d37a13ae1fa9fb992350b7", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6194d7e735fa6837a91c0d23f0bab980ae87650c/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/6194d7e735fa6837a91c0d23f0bab980ae87650c/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=6194d7e735fa6837a91c0d23f0bab980ae87650c", "patch": "@@ -345,6 +345,25 @@ The `h` modifier will emit the register name for the high byte of that register\n \n If you use a smaller data type (e.g. `u16`) with an operand and forget the use template modifiers, the compiler will emit a warning and suggest the correct modifier to use.\n \n+## Memory address operands\n+\n+Sometimes assembly instructions require operands passed via memory addresses/memory locations.\n+You have to manually use the memory address syntax specified by the respectively architectures.\n+For example, in x86/x86_64 and intel assembly syntax, you should wrap inputs/outputs in `[]`\n+to indicate they are memory operands:\n+\n+```rust,allow_fail\n+# #![feature(asm, llvm_asm)]\n+# fn load_fpu_control_word(control: u16) {\n+unsafe {\n+    asm!(\"fldcw [{}]\", in(reg) &control, options(nostack));\n+\n+    // Previously this would have been written with the deprecated `llvm_asm!` like this\n+    llvm_asm!(\"fldcw $0\" :: \"m\" (control) :: \"volatile\");\n+}\n+# }\n+```\n+\n ## Options\n \n By default, an inline assembly block is treated the same way as an external FFI function call with a custom calling convention: it may read/write memory, have observable side effects, etc. However in many cases, it is desirable to give the compiler more information about what the assembly code is actually doing so that it can optimize better."}, {"sha": "a2f029db2916551e68afe12b388612747ce573b0", "filename": "src/doc/unstable-book/src/library-features/llvm-asm.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6194d7e735fa6837a91c0d23f0bab980ae87650c/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fllvm-asm.md", "raw_url": "https://github.com/rust-lang/rust/raw/6194d7e735fa6837a91c0d23f0bab980ae87650c/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fllvm-asm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fllvm-asm.md?ref=6194d7e735fa6837a91c0d23f0bab980ae87650c", "patch": "@@ -159,12 +159,12 @@ specify some extra info about the inline assembly:\n \n Current valid options are:\n \n-1. *volatile* - specifying this is analogous to\n+1. `volatile` - specifying this is analogous to\n    `__asm__ __volatile__ (...)` in gcc/clang.\n-2. *alignstack* - certain instructions expect the stack to be\n+2. `alignstack` - certain instructions expect the stack to be\n    aligned a certain way (i.e. SSE) and specifying this indicates to\n    the compiler to insert its usual stack alignment code\n-3. *intel* - use intel syntax instead of the default AT&T.\n+3. `intel` - use intel syntax instead of the default AT&T.\n \n ```rust\n # #![feature(llvm_asm)]"}]}