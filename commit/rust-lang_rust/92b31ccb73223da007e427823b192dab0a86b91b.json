{"sha": "92b31ccb73223da007e427823b192dab0a86b91b", "node_id": "C_kwDOAAsO6NoAKDkyYjMxY2NiNzMyMjNkYTAwN2U0Mjc4MjNiMTkyZGFiMGE4NmI5MWI", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-01T03:52:30Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-01T03:52:30Z"}, "message": "avoid `Ty` to `String` conversions", "tree": {"sha": "b84e9718dfe3ca005601094d0f1a29796171e9db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b84e9718dfe3ca005601094d0f1a29796171e9db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92b31ccb73223da007e427823b192dab0a86b91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92b31ccb73223da007e427823b192dab0a86b91b", "html_url": "https://github.com/rust-lang/rust/commit/92b31ccb73223da007e427823b192dab0a86b91b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92b31ccb73223da007e427823b192dab0a86b91b/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34805f36752fd81cabc5104579e065e62fc0fec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/34805f36752fd81cabc5104579e065e62fc0fec6", "html_url": "https://github.com/rust-lang/rust/commit/34805f36752fd81cabc5104579e065e62fc0fec6"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "e6907637c57b628fbd6dca7622411f3b2b97b968", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/on_unimplemented.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/92b31ccb73223da007e427823b192dab0a86b91b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92b31ccb73223da007e427823b192dab0a86b91b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs?ref=92b31ccb73223da007e427823b192dab0a86b91b", "patch": "@@ -223,8 +223,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 if let Some(def) = aty.ty_adt_def() {\n                     // We also want to be able to select the slice's type's original\n                     // signature with no type arguments resolved\n-                    let type_string = self.tcx.type_of(def.did()).to_string();\n-                    flags.push((sym::_Self, Some(format!(\"[{type_string}]\"))));\n+                    flags.push((sym::_Self, Some(format!(\"[{}]\", self.tcx.type_of(def.did())))));\n                 }\n                 if aty.is_integral() {\n                     flags.push((sym::_Self, Some(\"[{integral}]\".to_string())));\n@@ -242,10 +241,10 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 if let Some(def) = aty.ty_adt_def() {\n                     // We also want to be able to select the array's type's original\n                     // signature with no type arguments resolved\n-                    let type_string = self.tcx.type_of(def.did()).to_string();\n-                    flags.push((sym::_Self, Some(format!(\"[{type_string}; _]\"))));\n+                    let def_ty = self.tcx.type_of(def.did());\n+                    flags.push((sym::_Self, Some(format!(\"[{def_ty}; _]\"))));\n                     if let Some(n) = len {\n-                        flags.push((sym::_Self, Some(format!(\"[{type_string}; {n}]\"))));\n+                        flags.push((sym::_Self, Some(format!(\"[{def_ty}; {n}]\"))));\n                     }\n                 }\n                 if aty.is_integral() {"}]}