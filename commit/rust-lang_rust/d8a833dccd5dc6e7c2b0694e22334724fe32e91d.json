{"sha": "d8a833dccd5dc6e7c2b0694e22334724fe32e91d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YTgzM2RjY2Q1ZGM2ZTdjMmIwNjk0ZTIyMzM0NzI0ZmUzMmU5MWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-01T23:39:51Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-01T23:53:53Z"}, "message": "Convert some comm tests to istrs. Issue #855\n\nThese spawn thunks need to take move-mode strings to be correct", "tree": {"sha": "d15acceb69e7efc39ebc7843fe62d1aa961844cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d15acceb69e7efc39ebc7843fe62d1aa961844cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8a833dccd5dc6e7c2b0694e22334724fe32e91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a833dccd5dc6e7c2b0694e22334724fe32e91d", "html_url": "https://github.com/rust-lang/rust/commit/d8a833dccd5dc6e7c2b0694e22334724fe32e91d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8a833dccd5dc6e7c2b0694e22334724fe32e91d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e412652f0027dd0da270f802d894d910736a9f23", "url": "https://api.github.com/repos/rust-lang/rust/commits/e412652f0027dd0da270f802d894d910736a9f23", "html_url": "https://github.com/rust-lang/rust/commit/e412652f0027dd0da270f802d894d910736a9f23"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c902809e4473c69411f9a32bf4499780e3df8754", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8a833dccd5dc6e7c2b0694e22334724fe32e91d/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a833dccd5dc6e7c2b0694e22334724fe32e91d/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=d8a833dccd5dc6e7c2b0694e22334724fe32e91d", "patch": "@@ -3,6 +3,6 @@\n use std;\n import std::task;\n \n-fn child2(s: str) { }\n+fn child2(s: -istr) { }\n \n-fn main() { let x = task::spawn(bind child2(\"hi\")); }\n+fn main() { let x = task::spawn(bind child2(~\"hi\")); }"}, {"sha": "bfaba60bcd15ba2b0455ecb7dc2b8d59bdf518cb", "filename": "src/test/run-pass/spawn-fn.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8a833dccd5dc6e7c2b0694e22334724fe32e91d/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a833dccd5dc6e7c2b0694e22334724fe32e91d/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-fn.rs?ref=d8a833dccd5dc6e7c2b0694e22334724fe32e91d", "patch": "@@ -4,12 +4,12 @@ use std;\n import std::task::yield;\n import std::task;\n \n-fn x(s: str, n: int) { log s; log n; }\n+fn x(s: -istr, n: int) { log s; log n; }\n \n fn main() {\n-    task::spawn(bind x(\"hello from first spawned fn\", 65));\n-    task::spawn(bind x(\"hello from second spawned fn\", 66));\n-    task::spawn(bind x(\"hello from third spawned fn\", 67));\n+    task::spawn(bind x(~\"hello from first spawned fn\", 65));\n+    task::spawn(bind x(~\"hello from second spawned fn\", 66));\n+    task::spawn(bind x(~\"hello from third spawned fn\", 67));\n     let i: int = 30;\n     while i > 0 { i = i - 1; log \"parent sleeping\"; yield(); }\n }"}, {"sha": "b8c78ecd12bf838b6dd71b06287e7eeb0660b51b", "filename": "src/test/run-pass/task-life-0.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8a833dccd5dc6e7c2b0694e22334724fe32e91d/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a833dccd5dc6e7c2b0694e22334724fe32e91d/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-life-0.rs?ref=d8a833dccd5dc6e7c2b0694e22334724fe32e91d", "patch": "@@ -1,7 +1,7 @@\n use std;\n import std::task;\n-fn main() { task::spawn(bind child(\"Hello\")); }\n+fn main() { task::spawn(bind child(~\"Hello\")); }\n \n-fn child(s: str) {\n+fn child(s: -str) {\n \n }"}]}