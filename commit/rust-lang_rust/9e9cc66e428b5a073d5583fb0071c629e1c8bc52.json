{"sha": "9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "node_id": "C_kwDOAAsO6NoAKDllOWNjNjZlNDI4YjVhMDczZDU1ODNmYjAwNzFjNjI5ZTFjOGJjNTI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-19T23:37:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-19T23:37:27Z"}, "message": "Rollup merge of #94091 - GuillaumeGomez:rustdoc-const-computed-value, r=oli-obk\n\nFix rustdoc const computed value\n\nFixes #85088.\n\nIt looks like this now (instead of hexadecimal):\n\n![Screenshot from 2022-02-17 17-55-39](https://user-images.githubusercontent.com/3050060/154532115-0f9861a0-406f-4c9c-957f-32bedd8aca7d.png)\n\nr? ````@oli-obk````", "tree": {"sha": "4c3a47e746f06bdad082af4f823db315aa5a04cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c3a47e746f06bdad082af4f823db315aa5a04cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiEX83CRBK7hj4Ov3rIwAA+fIIAEc9bUrzJIYb0sZxtSLC5gy/\ny1Gz69pwzedzA4pvwiNQhIfWlsa25hTkjMRSZZqKNcWJK4tmgWMakSlOLpqxIAsQ\nwSiak/jthXQSXRWscaBizX3VtOdEPfCwwIq0V7Lk080TvKuzkDa+ksMjpmEwht+d\nECkBz0JObR4pH15WuUrPAeVNX6OGtgXuyQfsYic8ZA/gEgVE/rOMRa08+J5k4IVD\nt8yahVJa6o2L2nbwM9Q0ZNQaUe+y1LbMOLXPEuneeaco/56fWTTmy/lhO+55OaBj\n1812/067S4Wl8JNtShJH9lvrcsVEzNkK16hRIg35Cj6v0LFa5yKlx22NZ5IYjP0=\n=B7Bx\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c3a47e746f06bdad082af4f823db315aa5a04cd\nparent 1771b98a69b0b8d142507cce4b32db404950add6\nparent 296adbac0a6bb06d60459ec0cd634cb530d3be3d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645313847 +0100\ncommitter GitHub <noreply@github.com> 1645313847 +0100\n\nRollup merge of #94091 - GuillaumeGomez:rustdoc-const-computed-value, r=oli-obk\n\nFix rustdoc const computed value\n\nFixes #85088.\n\nIt looks like this now (instead of hexadecimal):\n\n![Screenshot from 2022-02-17 17-55-39](https://user-images.githubusercontent.com/3050060/154532115-0f9861a0-406f-4c9c-957f-32bedd8aca7d.png)\n\nr? ````@oli-obk````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "html_url": "https://github.com/rust-lang/rust/commit/9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1771b98a69b0b8d142507cce4b32db404950add6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1771b98a69b0b8d142507cce4b32db404950add6", "html_url": "https://github.com/rust-lang/rust/commit/1771b98a69b0b8d142507cce4b32db404950add6"}, {"sha": "296adbac0a6bb06d60459ec0cd634cb530d3be3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/296adbac0a6bb06d60459ec0cd634cb530d3be3d", "html_url": "https://github.com/rust-lang/rust/commit/296adbac0a6bb06d60459ec0cd634cb530d3be3d"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "aa8730bf9cddec6b4a12a4008cc4244a78d8106e", "filename": "compiler/rustc_middle/src/mir/interpret/value.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fvalue.rs?ref=9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "patch": "@@ -456,6 +456,11 @@ impl<'tcx, Tag: Provenance> Scalar<Tag> {\n         // Going through `u64` to check size and truncation.\n         Ok(Double::from_bits(self.to_u64()?.into()))\n     }\n+\n+    // FIXME: Replace current `impl Display for Scalar` with `impl LowerHex`.\n+    pub fn rustdoc_display(&self) -> String {\n+        if let Scalar::Int(int) = self { int.to_string() } else { self.to_string() }\n+    }\n }\n \n #[derive(Clone, Copy, Eq, PartialEq, TyEncodable, TyDecodable, HashStable, Hash)]"}, {"sha": "72623ba54eeb46f97170e7d58c3202c9704d0d80", "filename": "compiler/rustc_middle/src/ty/consts/int.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fint.rs?ref=9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "patch": "@@ -384,3 +384,10 @@ impl fmt::UpperHex for ScalarInt {\n         write!(f, \"{:01$X}\", { self.data }, self.size as usize * 2)\n     }\n }\n+\n+impl fmt::Display for ScalarInt {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.check_data();\n+        write!(f, \"{}\", { self.data })\n+    }\n+}"}, {"sha": "fe1992a5d7e31ed5c47d4d9aa61fa99705b287e1", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "patch": "@@ -302,7 +302,11 @@ fn print_const_with_custom_print_scalar(tcx: TyCtxt<'_>, ct: ty::Const<'_>) -> S\n     // For all other types, fallback to the original `pretty_print_const`.\n     match (ct.val(), ct.ty().kind()) {\n         (ty::ConstKind::Value(ConstValue::Scalar(int)), ty::Uint(ui)) => {\n-            format!(\"{}{}\", format_integer_with_underscore_sep(&int.to_string()), ui.name_str())\n+            format!(\n+                \"{}{}\",\n+                format_integer_with_underscore_sep(&int.rustdoc_display()),\n+                ui.name_str()\n+            )\n         }\n         (ty::ConstKind::Value(ConstValue::Scalar(int)), ty::Int(i)) => {\n             let ty = tcx.lift(ct.ty()).unwrap();"}, {"sha": "0ae52592b64ba1dbb30a20bca9578ffe969a8474", "filename": "src/test/rustdoc/const-value-display.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/src%2Ftest%2Frustdoc%2Fconst-value-display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e9cc66e428b5a073d5583fb0071c629e1c8bc52/src%2Ftest%2Frustdoc%2Fconst-value-display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-value-display.rs?ref=9e9cc66e428b5a073d5583fb0071c629e1c8bc52", "patch": "@@ -0,0 +1,9 @@\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/constant.HOUR_IN_SECONDS.html'\n+// @has - '//*[@class=\"docblock item-decl\"]//code' 'pub const HOUR_IN_SECONDS: u64 = 60 * 60; // 3_600u64'\n+pub const HOUR_IN_SECONDS: u64 = 60 * 60;\n+\n+// @has 'foo/constant.NEGATIVE.html'\n+// @has - '//*[@class=\"docblock item-decl\"]//code' 'pub const NEGATIVE: i64 = -60 * 60; // -3_600i64'\n+pub const NEGATIVE: i64 = -60 * 60;"}]}