{"sha": "7944fa811b4fce638baaeb43f9e305858bceec6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NDRmYTgxMWI0ZmNlNjM4YmFhZWI0M2Y5ZTMwNTg1OGJjZWVjNmQ=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-06-03T19:42:41Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-06-03T19:42:41Z"}, "message": "Merge pull request #979 from Manishearth/fx-975\n\nCorrectly check for variable use in `useless_let_if_seq`", "tree": {"sha": "520ebc22192c4d71a41aa70ff2eec5c420bf45cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/520ebc22192c4d71a41aa70ff2eec5c420bf45cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7944fa811b4fce638baaeb43f9e305858bceec6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7944fa811b4fce638baaeb43f9e305858bceec6d", "html_url": "https://github.com/rust-lang/rust/commit/7944fa811b4fce638baaeb43f9e305858bceec6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7944fa811b4fce638baaeb43f9e305858bceec6d/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c49b205dbed7417db8cabfa784bb4ea5f5e6db", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c49b205dbed7417db8cabfa784bb4ea5f5e6db", "html_url": "https://github.com/rust-lang/rust/commit/d9c49b205dbed7417db8cabfa784bb4ea5f5e6db"}, {"sha": "5c2a10d703ea65741375ba6c27b64d9596b380fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c2a10d703ea65741375ba6c27b64d9596b380fc", "html_url": "https://github.com/rust-lang/rust/commit/5c2a10d703ea65741375ba6c27b64d9596b380fc"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "09172014c8cbf66facb2b248c53f600d858f6e60", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7944fa811b4fce638baaeb43f9e305858bceec6d/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7944fa811b4fce638baaeb43f9e305858bceec6d/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=7944fa811b4fce638baaeb43f9e305858bceec6d", "patch": "@@ -69,6 +69,11 @@ impl LateLintPass for LetIfSeq {\n                 let Some(def) = cx.tcx.def_map.borrow().get(&decl.pat.id),\n                 let hir::StmtExpr(ref if_, _) = expr.node,\n                 let hir::ExprIf(ref cond, ref then, ref else_) = if_.node,\n+                {\n+                    let mut v = UsedVisitor { cx: cx, id: def.def_id(), used: false };\n+                    hir::intravisit::walk_expr(&mut v, cond);\n+                    !v.used\n+                },\n                 let Some(value) = check_assign(cx, def.def_id(), then),\n             ], {\n                 let span = codemap::mk_sp(stmt.span.lo, if_.span.hi);\n@@ -163,13 +168,13 @@ fn check_assign<'e>(cx: &LateContext, decl: hir::def_id::DefId, block: &'e hir::\n \n         for s in block.stmts.iter().take(block.stmts.len()-1) {\n             hir::intravisit::walk_stmt(&mut v, s);\n+\n+            if v.used {\n+                return None;\n+            }\n         }\n \n-        return if v.used {\n-            None\n-        } else {\n-            Some(value)\n-        };\n+        return Some(value);\n     }}\n \n     None"}, {"sha": "caa8bae22fd857cb9fbc385f07db0e037c20040d", "filename": "tests/compile-fail/let_if_seq.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7944fa811b4fce638baaeb43f9e305858bceec6d/tests%2Fcompile-fail%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7944fa811b4fce638baaeb43f9e305858bceec6d/tests%2Fcompile-fail%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flet_if_seq.rs?ref=7944fa811b4fce638baaeb43f9e305858bceec6d", "patch": "@@ -6,6 +6,14 @@\n \n fn f() -> bool { true }\n \n+fn issue975() -> String {\n+    let mut udn = \"dummy\".to_string();\n+    if udn.starts_with(\"uuid:\") {\n+        udn = String::from(&udn[5..]);\n+    }\n+    udn\n+}\n+\n fn early_return() -> u8 {\n     // FIXME: we could extend the lint to include such cases:\n     let foo;\n@@ -21,6 +29,7 @@ fn early_return() -> u8 {\n \n fn main() {\n     early_return();\n+    issue975();\n \n     let mut foo = 0;\n     //~^ ERROR `if _ { .. } else { .. }` is an expression"}]}