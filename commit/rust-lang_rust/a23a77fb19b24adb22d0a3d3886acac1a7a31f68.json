{"sha": "a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyM2E3N2ZiMTliMjRhZGIyMmQwYTNkMzg4NmFjYWMxYTdhMzFmNjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-27T06:43:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-27T08:15:31Z"}, "message": "avoid materializing unintialized Boxes in RawVec", "tree": {"sha": "6f368529cf02baf5709aeee4e05f335f6b538985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f368529cf02baf5709aeee4e05f335f6b538985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "html_url": "https://github.com/rust-lang/rust/commit/a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a23a77fb19b24adb22d0a3d3886acac1a7a31f68/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed2a5115daaffdab30b102405ffcfb222decf444", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed2a5115daaffdab30b102405ffcfb222decf444", "html_url": "https://github.com/rust-lang/rust/commit/ed2a5115daaffdab30b102405ffcfb222decf444"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "5affdbdb7e9d1b7aefe82aebf809ce0e45f34908", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a23a77fb19b24adb22d0a3d3886acac1a7a31f68/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a23a77fb19b24adb22d0a3d3886acac1a7a31f68/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "patch": "@@ -546,9 +546,12 @@ impl<T: Copy> From<&[T]> for Box<[T]> {\n     /// println!(\"{:?}\", boxed_slice);\n     /// ```\n     fn from(slice: &[T]) -> Box<[T]> {\n-        let mut boxed = unsafe { RawVec::with_capacity(slice.len()).into_box() };\n-        boxed.copy_from_slice(slice);\n-        boxed\n+        let len = slice.len();\n+        let buf = RawVec::with_capacity(len);\n+        unsafe {\n+            ptr::copy_nonoverlapping(slice.as_ptr(), buf.ptr(), len);\n+            buf.into_box()\n+        }\n     }\n }\n "}, {"sha": "0454a564435790e56e3eed2a621bf5499a9d0724", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a23a77fb19b24adb22d0a3d3886acac1a7a31f68/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a23a77fb19b24adb22d0a3d3886acac1a7a31f68/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "patch": "@@ -685,12 +685,14 @@ impl<T, A: Alloc> RawVec<T, A> {\n impl<T> RawVec<T, Global> {\n     /// Converts the entire buffer into `Box<[T]>`.\n     ///\n-    /// While it is not *strictly* Undefined Behavior to call\n-    /// this procedure while some of the RawVec is uninitialized,\n-    /// it certainly makes it trivial to trigger it.\n-    ///\n     /// Note that this will correctly reconstitute any `cap` changes\n     /// that may have been performed. (see description of type for details)\n+    ///\n+    /// # Undefined Behavior\n+    ///\n+    /// All elements of `RawVec<T, Global>` must be initialized. Notice that\n+    /// the rules around uninitialized boxed values are not finalized yet,\n+    /// but until they are, it is advisable to avoid them.\n     pub unsafe fn into_box(self) -> Box<[T]> {\n         // NOTE: not calling `cap()` here, actually using the real `cap` field!\n         let slice = slice::from_raw_parts_mut(self.ptr(), self.cap);"}]}