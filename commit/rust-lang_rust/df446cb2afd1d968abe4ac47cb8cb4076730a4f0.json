{"sha": "df446cb2afd1d968abe4ac47cb8cb4076730a4f0", "node_id": "C_kwDOAAsO6NoAKGRmNDQ2Y2IyYWZkMWQ5NjhhYmU0YWM0N2NiOGNiNDA3NjczMGE0ZjA", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2022-05-08T16:37:36Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2022-05-08T16:37:36Z"}, "message": "Revert \"Implement [OsStr]::join\", which was merged without FCP\n\nThis reverts commit 4fcbc53820ab423bbeb41f07822369aa05da1d68.", "tree": {"sha": "472ca38f10e6b843790b32e0c0126d1d29f73d17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/472ca38f10e6b843790b32e0c0126d1d29f73d17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df446cb2afd1d968abe4ac47cb8cb4076730a4f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEh0+qV0hta6XFe2D54u/UMJ4RyKgFAmJ38eIACgkQ4u/UMJ4R\nyKhAxw/+L2Fy4ESxH7g7VZPEHSsGGXVJKO5SZM1dJAsqz7w0TNsRspeeRrlh94Ph\nqWKAsFP1UEZ6fzvkBJmwffAv8As5by1bFoFiUaTrf7VX4XYwBlVl8lXW2Sy64npm\nuloWEWuxRLFyOd4R7fbX3Ls2Lz854wawm1S/4XZPNJrs5Nhpics2WVsDJHzgQiKu\niwcGqFE0t2u99w+4REjeYOCeAvXfjNFsOUj6sFl0g+TKTVQGXD7k/xcdLmsSOR52\nrtIK279m9KMqUu0z54yyMI1Qlvm5CypohkK0qG7UhjhSFcxHJxq640wPT95HiAqE\nUp1YtheH2yMDCYx3OmR6QRfXH9XOayr6EAseNxTSzK+EiTDvwVtAMG7+pih+YRVo\n8dkqFOu3lGsJfrisLzEhWJCsT3834zwZmYlrxOQ3MwF3s3ammRSsZWcwLN7ygg8I\nxJEC16zzbnGyF5O59FjOjQSJWABNsOPPjJH6a/ig4y7WHwxOvW9LUsrt9Wh/o9kf\nompmOVN7zWc2/DxFcdjbjLRoDu1Sq5Na6nSt8eaU8bWzG+IbibeqlugKIi+UmJ6R\ne/56yP75dvoF6HHOELCxZNDGSzhcXqFB/pRHUMM56+OYlUdCQjadF9f65TZharH/\nYsQT/Gw6v6lp4qSrjOzZGpdO0q8AB228T+VcRWsOjPL2xXkWwp4=\n=hAbg\n-----END PGP SIGNATURE-----", "payload": "tree 472ca38f10e6b843790b32e0c0126d1d29f73d17\nparent 8fbd92d0b95d847c68948d8dbbfaccb470db4f92\nauthor Thom Chiovoloni <chiovolonit@gmail.com> 1652027856 -0700\ncommitter Thom Chiovoloni <chiovolonit@gmail.com> 1652027856 -0700\n\nRevert \"Implement [OsStr]::join\", which was merged without FCP\n\nThis reverts commit 4fcbc53820ab423bbeb41f07822369aa05da1d68.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df446cb2afd1d968abe4ac47cb8cb4076730a4f0", "html_url": "https://github.com/rust-lang/rust/commit/df446cb2afd1d968abe4ac47cb8cb4076730a4f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df446cb2afd1d968abe4ac47cb8cb4076730a4f0/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fbd92d0b95d847c68948d8dbbfaccb470db4f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fbd92d0b95d847c68948d8dbbfaccb470db4f92", "html_url": "https://github.com/rust-lang/rust/commit/8fbd92d0b95d847c68948d8dbbfaccb470db4f92"}], "stats": {"total": 33, "additions": 0, "deletions": 33}, "files": [{"sha": "9b5e5d6c0cc4b1d377896ba1ba8d7dc444a2bfe3", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/df446cb2afd1d968abe4ac47cb8cb4076730a4f0/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df446cb2afd1d968abe4ac47cb8cb4076730a4f0/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=df446cb2afd1d968abe4ac47cb8cb4076730a4f0", "patch": "@@ -1222,23 +1222,6 @@ impl OsStr {\n     }\n }\n \n-#[unstable(feature = \"slice_concat_ext\", issue = \"27747\")]\n-impl<S: Borrow<OsStr>> alloc::slice::Join<&OsStr> for [S] {\n-    type Output = OsString;\n-\n-    fn join(slice: &Self, sep: &OsStr) -> OsString {\n-        let Some(first) = slice.first() else {\n-            return OsString::new();\n-        };\n-        let first = first.borrow().to_owned();\n-        slice[1..].iter().fold(first, |mut a, b| {\n-            a.push(sep);\n-            a.push(b.borrow());\n-            a\n-        })\n-    }\n-}\n-\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Borrow<OsStr> for OsString {\n     #[inline]"}, {"sha": "283f2b577e89607bdd9940cc8b4c4d4300b35888", "filename": "library/std/src/ffi/os_str/tests.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/df446cb2afd1d968abe4ac47cb8cb4076730a4f0/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df446cb2afd1d968abe4ac47cb8cb4076730a4f0/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs?ref=df446cb2afd1d968abe4ac47cb8cb4076730a4f0", "patch": "@@ -84,20 +84,6 @@ fn test_os_string_reserve_exact() {\n     assert!(os_string.capacity() >= 33)\n }\n \n-#[test]\n-fn test_os_string_join() {\n-    let strings = [OsStr::new(\"hello\"), OsStr::new(\"dear\"), OsStr::new(\"world\")];\n-    assert_eq!(\"hello\", strings[..1].join(OsStr::new(\" \")));\n-    assert_eq!(\"hello dear world\", strings.join(OsStr::new(\" \")));\n-    assert_eq!(\"hellodearworld\", strings.join(OsStr::new(\"\")));\n-    assert_eq!(\"hello.\\n dear.\\n world\", strings.join(OsStr::new(\".\\n \")));\n-\n-    assert_eq!(\"dear world\", strings[1..].join(&OsString::from(\" \")));\n-\n-    let strings_abc = [OsString::from(\"a\"), OsString::from(\"b\"), OsString::from(\"c\")];\n-    assert_eq!(\"a b c\", strings_abc.join(OsStr::new(\" \")));\n-}\n-\n #[test]\n fn test_os_string_default() {\n     let os_string: OsString = Default::default();"}, {"sha": "8ee50925f85f8e1ac04cf059c738e0093624a930", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df446cb2afd1d968abe4ac47cb8cb4076730a4f0/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df446cb2afd1d968abe4ac47cb8cb4076730a4f0/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=df446cb2afd1d968abe4ac47cb8cb4076730a4f0", "patch": "@@ -241,7 +241,6 @@\n #![feature(intra_doc_pointers)]\n #![feature(lang_items)]\n #![feature(let_chains)]\n-#![feature(let_else)]\n #![feature(linkage)]\n #![feature(min_specialization)]\n #![feature(must_not_suspend)]\n@@ -302,7 +301,6 @@\n #![feature(toowned_clone_into)]\n #![feature(try_reserve_kind)]\n #![feature(vec_into_raw_parts)]\n-#![feature(slice_concat_trait)]\n //\n // Library features (unwind):\n #![feature(panic_unwind)]"}]}