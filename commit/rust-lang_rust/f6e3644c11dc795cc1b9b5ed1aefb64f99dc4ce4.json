{"sha": "f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZTM2NDRjMTFkYzc5NWNjMWI5YjVlZDFhZWZiNjRmOTlkYzRjZTQ=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-07-10T20:16:16Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-07-10T20:16:16Z"}, "message": "cleanup(rustdoc): remove unused function getObjectNameById\n\nThis function was used in an earlier version, when idx's were used\nto serialize function inputs and outputs. That's not done any more,\nso removed the JS-side support for it.", "tree": {"sha": "cc554b574064da2449705d0bcb16156b89b6f501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc554b574064da2449705d0bcb16156b89b6f501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4", "html_url": "https://github.com/rust-lang/rust/commit/f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3982eb35cabe3a99194d768d34a92347967c3fa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3982eb35cabe3a99194d768d34a92347967c3fa2", "html_url": "https://github.com/rust-lang/rust/commit/3982eb35cabe3a99194d768d34a92347967c3fa2"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "76e7295bce329df295ae279b0748a9f4780d9768", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=f6e3644c11dc795cc1b9b5ed1aefb64f99dc4ce4", "patch": "@@ -289,13 +289,6 @@ window.initSearch = function(rawSearchIndex) {\n             };\n         }\n \n-        function getObjectNameFromId(id) {\n-            if (typeof id === \"number\") {\n-                return searchIndex[id].name;\n-            }\n-            return id;\n-        }\n-\n         function checkGenerics(obj, val) {\n             // The names match, but we need to be sure that all generics kinda\n             // match as well.\n@@ -306,10 +299,10 @@ window.initSearch = function(rawSearchIndex) {\n                     var elems = Object.create(null);\n                     var elength = obj[GENERICS_DATA].length;\n                     for (var x = 0; x < elength; ++x) {\n-                        if (!elems[getObjectNameFromId(obj[GENERICS_DATA][x])]) {\n-                            elems[getObjectNameFromId(obj[GENERICS_DATA][x])] = 0;\n+                        if (!elems[obj[GENERICS_DATA][x]]) {\n+                            elems[obj[GENERICS_DATA][x]] = 0;\n                         }\n-                        elems[getObjectNameFromId(obj[GENERICS_DATA][x])] += 1;\n+                        elems[obj[GENERICS_DATA][x]] += 1;\n                     }\n                     var total = 0;\n                     var done = 0;\n@@ -318,7 +311,7 @@ window.initSearch = function(rawSearchIndex) {\n                     var vlength = val.generics.length;\n                     for (x = 0; x < vlength; ++x) {\n                         var lev = MAX_LEV_DISTANCE + 1;\n-                        var firstGeneric = getObjectNameFromId(val.generics[x]);\n+                        var firstGeneric = val.generics[x];\n                         var match = null;\n                         if (elems[firstGeneric]) {\n                             match = firstGeneric;\n@@ -361,16 +354,16 @@ window.initSearch = function(rawSearchIndex) {\n                             var elems = Object.create(null);\n                             len = obj[GENERICS_DATA].length;\n                             for (x = 0; x < len; ++x) {\n-                                if (!elems[getObjectNameFromId(obj[GENERICS_DATA][x])]) {\n-                                    elems[getObjectNameFromId(obj[GENERICS_DATA][x])] = 0;\n+                                if (!elems[obj[GENERICS_DATA][x]]) {\n+                                    elems[obj[GENERICS_DATA][x]] = 0;\n                                 }\n-                                elems[getObjectNameFromId(obj[GENERICS_DATA][x])] += 1;\n+                                elems[obj[GENERICS_DATA][x]] += 1;\n                             }\n \n                             var allFound = true;\n                             len = val.generics.length;\n                             for (x = 0; x < len; ++x) {\n-                                firstGeneric = getObjectNameFromId(val.generics[x]);\n+                                firstGeneric = val.generics[x];\n                                 if (elems[firstGeneric]) {\n                                     elems[firstGeneric] -= 1;\n                                 } else {"}]}