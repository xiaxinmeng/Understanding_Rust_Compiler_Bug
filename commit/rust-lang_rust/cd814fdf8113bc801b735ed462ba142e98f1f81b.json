{"sha": "cd814fdf8113bc801b735ed462ba142e98f1f81b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkODE0ZmRmODExM2JjODAxYjczNWVkNDYyYmExNDJlOThmMWY4MWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T15:24:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T15:24:30Z"}, "message": "trait bounds", "tree": {"sha": "07d131346f583ccdbc24fb5ebe81fa69d21290e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07d131346f583ccdbc24fb5ebe81fa69d21290e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd814fdf8113bc801b735ed462ba142e98f1f81b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd814fdf8113bc801b735ed462ba142e98f1f81b", "html_url": "https://github.com/rust-lang/rust/commit/cd814fdf8113bc801b735ed462ba142e98f1f81b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd814fdf8113bc801b735ed462ba142e98f1f81b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "892acc5b36552995515f91d2bc14ae82f81d7b8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/892acc5b36552995515f91d2bc14ae82f81d7b8d", "html_url": "https://github.com/rust-lang/rust/commit/892acc5b36552995515f91d2bc14ae82f81d7b8d"}], "stats": {"total": 197, "additions": 174, "deletions": 23}, "files": [{"sha": "037cdca53b60f5f76fb4748ec4b9ea442bd5a84c", "filename": "src/parser/grammar/items/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/src%2Fparser%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/src%2Fparser%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fitems%2Fmod.rs?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -149,6 +149,17 @@ fn item(p: &mut Parser) {\n                 }\n             }\n         }\n+        TRAIT_KW => {\n+            traits::trait_item(p);\n+            TRAIT_ITEM\n+        }\n+        // test auto_trait\n+        // auto trait T {}\n+        IDENT if p.at_contextual_kw(\"auto\") && la == TRAIT_KW => {\n+            p.bump_remap(AUTO_KW);\n+            traits::trait_item(p);\n+            TRAIT_ITEM\n+        }\n         IMPL_KW => {\n             traits::impl_item(p);\n             IMPL_ITEM"}, {"sha": "60158fe418d29fa3424ad35b67d0610a27ecf74d", "filename": "src/parser/grammar/items/traits.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fitems%2Ftraits.rs?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -1,9 +1,16 @@\n use super::*;\n \n+// test trait_item\n+// trait T<U>: Hash + Clone where U: Copy {}\n pub(super) fn trait_item(p: &mut Parser) {\n     assert!(p.at(TRAIT_KW));\n     p.bump();\n     name(p);\n+    type_params::list(p);\n+    if p.at(COLON) {\n+        type_params::bounds(p);\n+    }\n+    type_params::where_clause(p);\n     p.expect(L_CURLY);\n     p.expect(R_CURLY);\n }"}, {"sha": "3648ab5f3352d232e76cb3a6a203cf9c1960b01f", "filename": "src/parser/grammar/type_params.rs", "status": "modified", "additions": 29, "deletions": 23, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/src%2Fparser%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/src%2Fparser%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Ftype_params.rs?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -39,29 +39,8 @@ pub(super) fn list(p: &mut Parser) {\n         assert!(p.at(IDENT));\n         let m = p.start();\n         p.bump();\n-        if p.eat(COLON) {\n-            // test type_param_bounds\n-            // struct S<T: 'a + ?Sized + (Copy)>;\n-            loop {\n-                let has_paren = p.eat(L_PAREN);\n-                p.eat(QUESTION);\n-                if p.at(FOR_KW) {\n-                    //TODO\n-                }\n-                if p.at(LIFETIME) {\n-                    p.bump();\n-                } else if paths::is_path_start(p) {\n-                    paths::type_path(p);\n-                } else {\n-                    break;\n-                }\n-                if has_paren {\n-                    p.expect(R_PAREN);\n-                }\n-                if !p.eat(PLUS) {\n-                    break;\n-                }\n-            }\n+        if p.at(COLON) {\n+            bounds(p);\n         }\n         // test type_param_default\n         // struct S<T = i32>;\n@@ -73,6 +52,33 @@ pub(super) fn list(p: &mut Parser) {\n     }\n }\n \n+// test type_param_bounds\n+// struct S<T: 'a + ?Sized + (Copy)>;\n+pub(super) fn bounds(p: &mut Parser) {\n+    assert!(p.at(COLON));\n+    p.bump();\n+    loop {\n+        let has_paren = p.eat(L_PAREN);\n+        p.eat(QUESTION);\n+        if p.at(FOR_KW) {\n+            //TODO\n+        }\n+        if p.at(LIFETIME) {\n+            p.bump();\n+        } else if paths::is_path_start(p) {\n+            paths::type_path(p);\n+        } else {\n+            break;\n+        }\n+        if has_paren {\n+            p.expect(R_PAREN);\n+        }\n+        if !p.eat(PLUS) {\n+            break;\n+        }\n+    }\n+}\n+\n pub(super) fn where_clause(p: &mut Parser) {\n     if p.at(WHERE_KW) {\n         let m = p.start();"}, {"sha": "70aa81207a49ab8fac32fd822876bd01ac8f094e", "filename": "tests/data/parser/inline/0055_self_param.txt", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.txt", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0055_self_param.txt?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -0,0 +1,77 @@\n+FILE@[0; 80)\n+  IMPL_ITEM@[0; 80)\n+    IMPL_KW@[0; 4)\n+    PATH_TYPE@[4; 7)\n+      PATH@[4; 7)\n+        PATH_SEGMENT@[4; 7)\n+          NAME_REF@[4; 7)\n+            WHITESPACE@[4; 5)\n+            IDENT@[5; 6) \"S\"\n+            WHITESPACE@[6; 7)\n+    L_CURLY@[7; 8)\n+    FN_ITEM@[8; 31)\n+      WHITESPACE@[8; 13)\n+      FN_KW@[13; 15)\n+      NAME@[15; 17)\n+        WHITESPACE@[15; 16)\n+        IDENT@[16; 17) \"a\"\n+      PARAM_LIST@[17; 24)\n+        L_PAREN@[17; 18)\n+        SELF_PARAM@[18; 22)\n+          SELF_KW@[18; 22)\n+        R_PAREN@[22; 23)\n+        WHITESPACE@[23; 24)\n+      BLOCK@[24; 31)\n+        L_CURLY@[24; 25)\n+        R_CURLY@[25; 26)\n+        WHITESPACE@[26; 31)\n+    FN_ITEM@[31; 51)\n+      FN_KW@[31; 33)\n+      NAME@[33; 35)\n+        WHITESPACE@[33; 34)\n+        IDENT@[34; 35) \"b\"\n+      PARAM_LIST@[35; 44)\n+        L_PAREN@[35; 36)\n+        SELF_PARAM@[36; 41)\n+          AMPERSAND@[36; 37)\n+          SELF_KW@[37; 41)\n+        COMMA@[41; 42)\n+        R_PAREN@[42; 43)\n+        WHITESPACE@[43; 44)\n+      BLOCK@[44; 51)\n+        L_CURLY@[44; 45)\n+        R_CURLY@[45; 46)\n+        WHITESPACE@[46; 51)\n+    FN_ITEM@[51; 78)\n+      FN_KW@[51; 53)\n+      NAME@[53; 55)\n+        WHITESPACE@[53; 54)\n+        IDENT@[54; 55) \"c\"\n+      PARAM_LIST@[55; 75)\n+        L_PAREN@[55; 56)\n+        SELF_PARAM@[56; 65)\n+          AMPERSAND@[56; 57)\n+          MUT_KW@[57; 60)\n+          WHITESPACE@[60; 61)\n+          SELF_KW@[61; 65)\n+        COMMA@[65; 66)\n+        VALUE_PARAMETER@[66; 73)\n+          BIND_PAT@[66; 68)\n+            NAME@[66; 68)\n+              WHITESPACE@[66; 67)\n+              IDENT@[67; 68) \"x\"\n+          COLON@[68; 69)\n+          PATH_TYPE@[69; 73)\n+            PATH@[69; 73)\n+              PATH_SEGMENT@[69; 73)\n+                NAME_REF@[69; 73)\n+                  WHITESPACE@[69; 70)\n+                  IDENT@[70; 73) \"i32\"\n+        R_PAREN@[73; 74)\n+        WHITESPACE@[74; 75)\n+      BLOCK@[75; 78)\n+        L_CURLY@[75; 76)\n+        R_CURLY@[76; 77)\n+        WHITESPACE@[77; 78)\n+    R_CURLY@[78; 79)\n+    WHITESPACE@[79; 80)"}, {"sha": "4385afca9f2d0db1140fa93db62224dc71ca65bc", "filename": "tests/data/parser/inline/0056_trait_item.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.rs?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -0,0 +1 @@\n+trait T<U>: Hash + Clone where U: Copy {}"}, {"sha": "87efc78e94762dec157d965672008dcd0ac0b681", "filename": "tests/data/parser/inline/0056_trait_item.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0056_trait_item.txt?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -0,0 +1,36 @@\n+FILE@[0; 42)\n+  TRAIT_ITEM@[0; 42)\n+    TRAIT_KW@[0; 5)\n+    NAME@[5; 7)\n+      WHITESPACE@[5; 6)\n+      IDENT@[6; 7) \"T\"\n+    TYPE_PARAM_LIST@[7; 10)\n+      L_ANGLE@[7; 8)\n+      TYPE_PARAM@[8; 9)\n+        IDENT@[8; 9) \"U\"\n+      R_ANGLE@[9; 10)\n+    COLON@[10; 11)\n+    PATH@[11; 17)\n+      PATH_SEGMENT@[11; 17)\n+        NAME_REF@[11; 17)\n+          WHITESPACE@[11; 12)\n+          IDENT@[12; 16) \"Hash\"\n+          WHITESPACE@[16; 17)\n+    PLUS@[17; 18)\n+    PATH@[18; 25)\n+      PATH_SEGMENT@[18; 25)\n+        NAME_REF@[18; 25)\n+          WHITESPACE@[18; 19)\n+          IDENT@[19; 24) \"Clone\"\n+          WHITESPACE@[24; 25)\n+    WHERE_CLAUSE@[25; 39)\n+      WHERE_KW@[25; 30)\n+      WHITESPACE@[30; 31)\n+      IDENT@[31; 32) \"U\"\n+      COLON@[32; 33)\n+      WHITESPACE@[33; 34)\n+      IDENT@[34; 38) \"Copy\"\n+      WHITESPACE@[38; 39)\n+    L_CURLY@[39; 40)\n+    R_CURLY@[40; 41)\n+    WHITESPACE@[41; 42)"}, {"sha": "72adf603519a69df900245e786c86cd94e4cfe78", "filename": "tests/data/parser/inline/0057_auto_trait.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.rs?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -0,0 +1 @@\n+auto trait T {}"}, {"sha": "9d098f10becd63583b50ae05d3b0348b2d798dcb", "filename": "tests/data/parser/inline/0057_auto_trait.txt", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/cd814fdf8113bc801b735ed462ba142e98f1f81b/tests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0057_auto_trait.txt?ref=cd814fdf8113bc801b735ed462ba142e98f1f81b", "patch": "@@ -0,0 +1,12 @@\n+FILE@[0; 16)\n+  TRAIT_ITEM@[0; 16)\n+    AUTO_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    TRAIT_KW@[5; 10)\n+    NAME@[10; 13)\n+      WHITESPACE@[10; 11)\n+      IDENT@[11; 12) \"T\"\n+      WHITESPACE@[12; 13)\n+    L_CURLY@[13; 14)\n+    R_CURLY@[14; 15)\n+    WHITESPACE@[15; 16)"}]}