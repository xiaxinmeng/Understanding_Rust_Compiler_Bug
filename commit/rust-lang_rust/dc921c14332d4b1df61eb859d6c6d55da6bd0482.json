{"sha": "dc921c14332d4b1df61eb859d6c6d55da6bd0482", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjOTIxYzE0MzMyZDRiMWRmNjFlYjg1OWQ2YzZkNTVkYTZiZDA0ODI=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-21T03:04:16Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-21T03:05:05Z"}, "message": "Add .isatty() method to StdReader\n\nStdWriter has .isatty(). StdReader can trivially vend the same function,\nand someone asked today on IRC how to call isatty() on stdin.", "tree": {"sha": "d3dacfe1c79a4c8f2d0068bd13b693833ce845b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3dacfe1c79a4c8f2d0068bd13b693833ce845b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc921c14332d4b1df61eb859d6c6d55da6bd0482", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc921c14332d4b1df61eb859d6c6d55da6bd0482", "html_url": "https://github.com/rust-lang/rust/commit/dc921c14332d4b1df61eb859d6c6d55da6bd0482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc921c14332d4b1df61eb859d6c6d55da6bd0482/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e546452727379f701f2104eb826141a29d4b39fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e546452727379f701f2104eb826141a29d4b39fd", "html_url": "https://github.com/rust-lang/rust/commit/e546452727379f701f2104eb826141a29d4b39fd"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "991f3992dd1bd4952d80fb49a1722ce2498b76b4", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dc921c14332d4b1df61eb859d6c6d55da6bd0482/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc921c14332d4b1df61eb859d6c6d55da6bd0482/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=dc921c14332d4b1df61eb859d6c6d55da6bd0482", "patch": "@@ -290,6 +290,16 @@ pub struct StdReader {\n     inner: StdSource\n }\n \n+impl StdReader {\n+    /// Returns whether this stream is attached to a TTY instance or not.\n+    pub fn isatty(&self) -> bool {\n+        match self.inner {\n+            TTY(..) => true,\n+            File(..) => false,\n+        }\n+    }\n+}\n+\n impl Reader for StdReader {\n     fn read(&mut self, buf: &mut [u8]) -> IoResult<uint> {\n         let ret = match self.inner {"}]}