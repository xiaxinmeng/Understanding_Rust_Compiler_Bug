{"sha": "e66bcf44b969eb0c211dd16de89993dcdd160aa4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NmJjZjQ0Yjk2OWViMGMyMTFkZDE2ZGU4OTk5M2RjZGQxNjBhYTQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T03:09:14Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:25Z"}, "message": "librustc: De-`@mut` `CrateDebugContext::current_debug_location`", "tree": {"sha": "de7ae9ff72c4ec8a6ccc7668a5d85878c82ab79c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de7ae9ff72c4ec8a6ccc7668a5d85878c82ab79c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e66bcf44b969eb0c211dd16de89993dcdd160aa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e66bcf44b969eb0c211dd16de89993dcdd160aa4", "html_url": "https://github.com/rust-lang/rust/commit/e66bcf44b969eb0c211dd16de89993dcdd160aa4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e66bcf44b969eb0c211dd16de89993dcdd160aa4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f38561dfd603c5a39dc1c31b0165589da6a2f5b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f38561dfd603c5a39dc1c31b0165589da6a2f5b3", "html_url": "https://github.com/rust-lang/rust/commit/f38561dfd603c5a39dc1c31b0165589da6a2f5b3"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "c86c52011aae53c7a8e9d5d707476d69865df5ec", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e66bcf44b969eb0c211dd16de89993dcdd160aa4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e66bcf44b969eb0c211dd16de89993dcdd160aa4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=e66bcf44b969eb0c211dd16de89993dcdd160aa4", "patch": "@@ -142,7 +142,7 @@ use middle::pat_util;\n use util::ppaux;\n \n use std::c_str::ToCStr;\n-use std::cell::RefCell;\n+use std::cell::{Cell, RefCell};\n use std::hashmap::HashMap;\n use std::hashmap::HashSet;\n use std::libc::{c_uint, c_ulonglong, c_longlong};\n@@ -175,7 +175,7 @@ pub struct CrateDebugContext {\n     priv crate_file: ~str,\n     priv llcontext: ContextRef,\n     priv builder: DIBuilderRef,\n-    priv current_debug_location: DebugLocation,\n+    priv current_debug_location: Cell<DebugLocation>,\n     priv created_files: RefCell<HashMap<~str, DIFile>>,\n     priv created_types: RefCell<HashMap<uint, DIType>>,\n     priv namespace_map: RefCell<HashMap<~[ast::Ident], @NamespaceTreeNode>>,\n@@ -194,7 +194,7 @@ impl CrateDebugContext {\n             crate_file: crate,\n             llcontext: llcontext,\n             builder: builder,\n-            current_debug_location: UnknownLocation,\n+            current_debug_location: Cell::new(UnknownLocation),\n             created_files: RefCell::new(HashMap::new()),\n             created_types: RefCell::new(HashMap::new()),\n             namespace_map: RefCell::new(HashMap::new()),\n@@ -2193,7 +2193,7 @@ impl DebugLocation {\n }\n \n fn set_debug_location(cx: &mut CrateContext, debug_location: DebugLocation) {\n-    if debug_location == debug_context(cx).current_debug_location {\n+    if debug_location == debug_context(cx).current_debug_location.get() {\n         return;\n     }\n \n@@ -2220,7 +2220,7 @@ fn set_debug_location(cx: &mut CrateContext, debug_location: DebugLocation) {\n         llvm::LLVMSetCurrentDebugLocation(cx.builder.B, metadata_node);\n     }\n \n-    debug_context(cx).current_debug_location = debug_location;\n+    debug_context(cx).current_debug_location.set(debug_location);\n }\n \n //=-------------------------------------------------------------------------------------------------"}]}