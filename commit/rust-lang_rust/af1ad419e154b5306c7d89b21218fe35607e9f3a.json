{"sha": "af1ad419e154b5306c7d89b21218fe35607e9f3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMWFkNDE5ZTE1NGI1MzA2YzdkODliMjEyMThmZTM1NjA3ZTlmM2E=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-03T22:11:19Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2015-12-03T22:11:19Z"}, "message": "Use the extern item-path for documentation links\n\nThe local item-path includes the local crates path to the extern crate\ndeclaration which breaks cross-crate rustdoc links if the extern crate\nis not linked into the crate root or renamed via `extern foo as bar`.", "tree": {"sha": "024dba65141e4fcbdc67b31733f14006d770cb63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/024dba65141e4fcbdc67b31733f14006d770cb63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af1ad419e154b5306c7d89b21218fe35607e9f3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af1ad419e154b5306c7d89b21218fe35607e9f3a", "html_url": "https://github.com/rust-lang/rust/commit/af1ad419e154b5306c7d89b21218fe35607e9f3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af1ad419e154b5306c7d89b21218fe35607e9f3a/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f504c5b7324c77e78feffe5def4282d0f10573", "url": "https://api.github.com/repos/rust-lang/rust/commits/14f504c5b7324c77e78feffe5def4282d0f10573", "html_url": "https://github.com/rust-lang/rust/commit/14f504c5b7324c77e78feffe5def4282d0f10573"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "fba6dea4448b204a3ea6a4b8089b0a22ee1001a6", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=af1ad419e154b5306c7d89b21218fe35607e9f3a", "patch": "@@ -142,6 +142,7 @@ pub trait CrateStore<'tcx> : Any {\n     fn item_type(&self, tcx: &ty::ctxt<'tcx>, def: DefId)\n                  -> ty::TypeScheme<'tcx>;\n     fn item_path(&self, def: DefId) -> Vec<hir_map::PathElem>;\n+    fn extern_item_path(&self, def: DefId) -> Vec<hir_map::PathElem>;\n     fn item_name(&self, def: DefId) -> ast::Name;\n     fn item_predicates(&self, tcx: &ty::ctxt<'tcx>, def: DefId)\n                        -> ty::GenericPredicates<'tcx>;\n@@ -295,6 +296,7 @@ impl<'tcx> CrateStore<'tcx> for DummyCrateStore {\n     fn item_type(&self, tcx: &ty::ctxt<'tcx>, def: DefId)\n                  -> ty::TypeScheme<'tcx> { unimplemented!() }\n     fn item_path(&self, def: DefId) -> Vec<hir_map::PathElem> { unimplemented!() }\n+    fn extern_item_path(&self, def: DefId) -> Vec<hir_map::PathElem> { unimplemented!() }\n     fn item_name(&self, def: DefId) -> ast::Name { unimplemented!() }\n     fn item_predicates(&self, tcx: &ty::ctxt<'tcx>, def: DefId)\n                        -> ty::GenericPredicates<'tcx> { unimplemented!() }"}, {"sha": "822b11112f2113ab60e257489009edd25de03575", "filename": "src/librustc_metadata/csearch.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Flibrustc_metadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Flibrustc_metadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcsearch.rs?ref=af1ad419e154b5306c7d89b21218fe35607e9f3a", "patch": "@@ -21,14 +21,15 @@ use middle::lang_items;\n use middle::ty::{self, Ty};\n use middle::def_id::{DefId, DefIndex};\n \n-use rustc::front::map as ast_map;\n+use rustc::front::map as hir_map;\n use rustc::util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n \n use std::cell::RefCell;\n use std::rc::Rc;\n use std::path::PathBuf;\n use syntax::ast;\n use syntax::attr;\n+use syntax::parse::token;\n use rustc_back::svh::Svh;\n use rustc_back::target::Target;\n use rustc_front::hir;\n@@ -115,7 +116,7 @@ impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n         decoder::get_method_arg_names(&cdata, did.index)\n     }\n \n-    fn item_path(&self, def: DefId) -> Vec<ast_map::PathElem> {\n+    fn item_path(&self, def: DefId) -> Vec<hir_map::PathElem> {\n         let cdata = self.get_crate_data(def.krate);\n         let path = decoder::get_item_path(&*cdata, def.index);\n \n@@ -127,6 +128,17 @@ impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n         })\n     }\n \n+    fn extern_item_path(&self, def: DefId) -> Vec<hir_map::PathElem> {\n+        let cdata = self.get_crate_data(def.krate);\n+        let path = decoder::get_item_path(&*cdata, def.index);\n+\n+        let mut r = Vec::with_capacity(path.len() + 1);\n+        let crate_name = hir_map::PathMod(token::intern(&cdata.name));\n+        r.push(crate_name);\n+        r.push_all(&path);\n+        r\n+    }\n+\n     fn item_name(&self, def: DefId) -> ast::Name {\n         let cdata = self.get_crate_data(def.krate);\n         decoder::get_item_name(&self.intr, &cdata, def.index)\n@@ -350,7 +362,7 @@ impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n         decoder::get_reachable_ids(&*cdata)\n     }\n \n-    fn def_path(&self, def: DefId) -> ast_map::DefPath\n+    fn def_path(&self, def: DefId) -> hir_map::DefPath\n     {\n         let cdata = self.get_crate_data(def.krate);\n         let path = decoder::def_path(&*cdata, def.index);"}, {"sha": "40e7146670907f46eb451a58dd621bc0e2b3bbfa", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=af1ad419e154b5306c7d89b21218fe35607e9f3a", "patch": "@@ -138,7 +138,7 @@ pub fn load_attrs(cx: &DocContext, tcx: &ty::ctxt,\n pub fn record_extern_fqn(cx: &DocContext, did: DefId, kind: clean::TypeKind) {\n     match cx.tcx_opt() {\n         Some(tcx) => {\n-            let fqn = tcx.sess.cstore.item_path(did);\n+            let fqn = tcx.sess.cstore.extern_item_path(did);\n             let fqn = fqn.into_iter().map(|i| i.to_string()).collect();\n             cx.external_paths.borrow_mut().as_mut().unwrap().insert(did, (fqn, kind));\n         }"}, {"sha": "59f952a0b29d1b28dd1403bf0e4c0d8843071a3e", "filename": "src/test/auxiliary/issue-30109-1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Ftest%2Fauxiliary%2Fissue-30109-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Ftest%2Fauxiliary%2Fissue-30109-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-30109-1.rs?ref=af1ad419e154b5306c7d89b21218fe35607e9f3a", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Bar;"}, {"sha": "2d33e9323d149779bc3e529c8691051fb64da6ee", "filename": "src/test/rustdoc/issue-30109.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Ftest%2Frustdoc%2Fissue-30109.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1ad419e154b5306c7d89b21218fe35607e9f3a/src%2Ftest%2Frustdoc%2Fissue-30109.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-30109.rs?ref=af1ad419e154b5306c7d89b21218fe35607e9f3a", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// build-aux-docs\n+// aux-build:issue-30109-1.rs\n+// ignore-cross-compile\n+\n+pub mod quux {\n+    extern crate issue_30109_1 as bar;\n+    use self::bar::Bar;\n+\n+    pub trait Foo {}\n+\n+    // @has issue_30109/quux/trait.Foo.html \\\n+    //          '//a/@href' '../issue_30109_1/struct.Bar.html'\n+    impl Foo for Bar {}\n+}"}]}