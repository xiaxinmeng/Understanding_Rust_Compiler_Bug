{"sha": "513852f68b2f8436a8a3ec5b151568c09a751f3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMzg1MmY2OGIyZjg0MzZhOGEzZWM1YjE1MTU2OGMwOWE3NTFmM2M=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T01:30:28Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-30T04:43:06Z"}, "message": "borrowck-mutate-in-guard: update test.", "tree": {"sha": "a8cd1fb9b30a01fd83de6dffb882fe15a1f9a95a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8cd1fb9b30a01fd83de6dffb882fe15a1f9a95a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/513852f68b2f8436a8a3ec5b151568c09a751f3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/513852f68b2f8436a8a3ec5b151568c09a751f3c", "html_url": "https://github.com/rust-lang/rust/commit/513852f68b2f8436a8a3ec5b151568c09a751f3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/513852f68b2f8436a8a3ec5b151568c09a751f3c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bba2e4c3517a760ca8aaffbf1a8110c2a1417fbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bba2e4c3517a760ca8aaffbf1a8110c2a1417fbc", "html_url": "https://github.com/rust-lang/rust/commit/bba2e4c3517a760ca8aaffbf1a8110c2a1417fbc"}], "stats": {"total": 69, "additions": 8, "deletions": 61}, "files": [{"sha": "43b578e9f1eafff439d47ca4ab816522f34e271c", "filename": "src/test/ui/borrowck/borrowck-mutate-in-guard.nll.stderr", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/bba2e4c3517a760ca8aaffbf1a8110c2a1417fbc/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bba2e4c3517a760ca8aaffbf1a8110c2a1417fbc/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.nll.stderr?ref=bba2e4c3517a760ca8aaffbf1a8110c2a1417fbc", "patch": "@@ -1,41 +0,0 @@\n-error[E0302]: cannot assign in a pattern guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:10:25\n-   |\n-LL |         Enum::A(_) if { x = Enum::B(false); false } => 1,\n-   |                         ^^^^^^^^^^^^^^^^^^ assignment in pattern guard\n-\n-error[E0301]: cannot mutably borrow in a pattern guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:15:38\n-   |\n-LL |         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n-   |                                      ^ borrowed mutably in pattern guard\n-   |\n-   = help: add `#![feature(bind_by_move_pattern_guards)]` to the crate attributes to enable\n-\n-error[E0302]: cannot assign in a pattern guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:15:41\n-   |\n-LL |         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n-   |                                         ^^^^^^^^^^^^^^^^^^^ assignment in pattern guard\n-\n-error[E0510]: cannot assign `x` in match guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:10:25\n-   |\n-LL |     match x {\n-   |           - value is immutable in match guard\n-LL |         Enum::A(_) if { x = Enum::B(false); false } => 1,\n-   |                         ^^^^^^^^^^^^^^^^^^ cannot assign\n-\n-error[E0510]: cannot mutably borrow `x` in match guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:15:33\n-   |\n-LL |     match x {\n-   |           - value is immutable in match guard\n-...\n-LL |         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n-   |                                 ^^^^^^ cannot mutably borrow\n-\n-error: aborting due to 5 previous errors\n-\n-Some errors have detailed explanations: E0301, E0302, E0510.\n-For more information about an error, try `rustc --explain E0301`."}, {"sha": "5b6aa7a979be5678d2c83c65fd0bf7e604ff88cd", "filename": "src/test/ui/borrowck/borrowck-mutate-in-guard.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/513852f68b2f8436a8a3ec5b151568c09a751f3c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/513852f68b2f8436a8a3ec5b151568c09a751f3c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.rs?ref=513852f68b2f8436a8a3ec5b151568c09a751f3c", "patch": "@@ -9,15 +9,11 @@ fn foo() -> isize {\n     match x {\n         Enum::A(_) if { x = Enum::B(false); false } => 1,\n         //~^ ERROR cannot assign in a pattern guard\n-        //~| WARN cannot assign `x` in match guard\n-        //~| WARN this error has been downgraded to a warning for backwards compatibility\n-        //~| WARN this represents potential undefined behavior in your code and this warning will\n+        //~| ERROR cannot assign `x` in match guard\n         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n         //~^ ERROR cannot mutably borrow in a pattern guard\n         //~| ERROR cannot assign in a pattern guard\n-        //~| WARN cannot mutably borrow `x` in match guard\n-        //~| WARN this error has been downgraded to a warning for backwards compatibility\n-        //~| WARN this represents potential undefined behavior in your code and this warning will\n+        //~| ERROR cannot mutably borrow `x` in match guard\n         Enum::A(p) => *p,\n         Enum::B(_) => 2,\n     }"}, {"sha": "674f137dbb043cb8033ec1c2c9ed64370f0f06c8", "filename": "src/test/ui/borrowck/borrowck-mutate-in-guard.stderr", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/513852f68b2f8436a8a3ec5b151568c09a751f3c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/513852f68b2f8436a8a3ec5b151568c09a751f3c/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-mutate-in-guard.stderr?ref=513852f68b2f8436a8a3ec5b151568c09a751f3c", "patch": "@@ -5,45 +5,37 @@ LL |         Enum::A(_) if { x = Enum::B(false); false } => 1,\n    |                         ^^^^^^^^^^^^^^^^^^ assignment in pattern guard\n \n error[E0301]: cannot mutably borrow in a pattern guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:15:38\n+  --> $DIR/borrowck-mutate-in-guard.rs:13:38\n    |\n LL |         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n    |                                      ^ borrowed mutably in pattern guard\n    |\n    = help: add `#![feature(bind_by_move_pattern_guards)]` to the crate attributes to enable\n \n error[E0302]: cannot assign in a pattern guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:15:41\n+  --> $DIR/borrowck-mutate-in-guard.rs:13:41\n    |\n LL |         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n    |                                         ^^^^^^^^^^^^^^^^^^^ assignment in pattern guard\n \n-warning[E0510]: cannot assign `x` in match guard\n+error[E0510]: cannot assign `x` in match guard\n   --> $DIR/borrowck-mutate-in-guard.rs:10:25\n    |\n LL |     match x {\n    |           - value is immutable in match guard\n LL |         Enum::A(_) if { x = Enum::B(false); false } => 1,\n    |                         ^^^^^^^^^^^^^^^^^^ cannot assign\n-   |\n-   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n-   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n-   = note: for more information, try `rustc --explain E0729`\n \n-warning[E0510]: cannot mutably borrow `x` in match guard\n-  --> $DIR/borrowck-mutate-in-guard.rs:15:33\n+error[E0510]: cannot mutably borrow `x` in match guard\n+  --> $DIR/borrowck-mutate-in-guard.rs:13:33\n    |\n LL |     match x {\n    |           - value is immutable in match guard\n ...\n LL |         Enum::A(_) if { let y = &mut x; *y = Enum::B(false); false } => 1,\n    |                                 ^^^^^^ cannot mutably borrow\n-   |\n-   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n-   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n-   = note: for more information, try `rustc --explain E0729`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n \n Some errors have detailed explanations: E0301, E0302, E0510.\n For more information about an error, try `rustc --explain E0301`."}]}