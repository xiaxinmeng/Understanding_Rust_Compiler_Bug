{"sha": "95e2b1b8f91c3381b9b02b53a544a5f35eb2c853", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ZTJiMWI4ZjkxYzMzODFiOWIwMmI1M2E1NDRhNWYzNWViMmM4NTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-28T23:08:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-29T19:38:44Z"}, "message": "rustdoc: Add test that unexported resources are pruned", "tree": {"sha": "1f4f5a3a90ce83a75309e9ad45977afeb6c6112a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f4f5a3a90ce83a75309e9ad45977afeb6c6112a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95e2b1b8f91c3381b9b02b53a544a5f35eb2c853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95e2b1b8f91c3381b9b02b53a544a5f35eb2c853", "html_url": "https://github.com/rust-lang/rust/commit/95e2b1b8f91c3381b9b02b53a544a5f35eb2c853", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95e2b1b8f91c3381b9b02b53a544a5f35eb2c853/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d56a4dd04bf6fc3017f32cd4a6b4375c52e66a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d56a4dd04bf6fc3017f32cd4a6b4375c52e66a9c", "html_url": "https://github.com/rust-lang/rust/commit/d56a4dd04bf6fc3017f32cd4a6b4375c52e66a9c"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "0d17f5defba37bbc8796d00482c7e8d0ebdfc218", "filename": "src/rustdoc/prune_unexported_pass.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/95e2b1b8f91c3381b9b02b53a544a5f35eb2c853/src%2Frustdoc%2Fprune_unexported_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95e2b1b8f91c3381b9b02b53a544a5f35eb2c853/src%2Frustdoc%2Fprune_unexported_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_unexported_pass.rs?ref=95e2b1b8f91c3381b9b02b53a544a5f35eb2c853", "patch": "@@ -138,7 +138,7 @@ fn exported_items_from(\n     vec::filter_map(doc.items) { |itemtag|\n         let name = alt itemtag {\n           doc::enumtag(~{name, _}) { name }\n-          doc::restag(~{name, _}) { \"FIXME\" }\n+          doc::restag(~{name, _}) { name }\n         };\n         let itemtag = alt itemtag {\n           doc::enumtag(enumdoc) {\n@@ -332,3 +332,21 @@ fn should_prune_unexported_variants() {\n     let doc = run(srv, doc);\n     assert vec::len(doc.topmod.mods[0].enums()[0].variants) == 0u;\n }\n+\n+#[test]\n+fn should_prune_unexported_resources_from_top_mod() {\n+    let source = \"export a; mod a { } resource r(a: bool) { }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    assert vec::is_empty(doc.topmod.resources());\n+}\n+\n+#[test]\n+fn should_prune_unexported_resources() {\n+    let source = \"mod a { export a; mod a { } resource r(a: bool) { } }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    assert vec::is_empty(doc.topmod.mods[0].resources());\n+}"}]}