{"sha": "5ba0056346a745e61cb2cb90d69a3304a255ff42", "node_id": "C_kwDOAAsO6NoAKDViYTAwNTYzNDZhNzQ1ZTYxY2IyY2I5MGQ2OWEzMzA0YTI1NWZmNDI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-22T19:03:26Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-27T07:20:28Z"}, "message": "Use `TyCtxt::is_fn_trait` is a couple more places", "tree": {"sha": "03bdca49fb066f6dd5389ec3bb2a9bce47cda050", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03bdca49fb066f6dd5389ec3bb2a9bce47cda050"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ba0056346a745e61cb2cb90d69a3304a255ff42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba0056346a745e61cb2cb90d69a3304a255ff42", "html_url": "https://github.com/rust-lang/rust/commit/5ba0056346a745e61cb2cb90d69a3304a255ff42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ba0056346a745e61cb2cb90d69a3304a255ff42/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea447924cef96746d27c396d395cc5cfea738928", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea447924cef96746d27c396d395cc5cfea738928", "html_url": "https://github.com/rust-lang/rust/commit/ea447924cef96746d27c396d395cc5cfea738928"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "1f554c81eff8e1941453d2f0a544ec245cd16d51", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/placeholder_error.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5ba0056346a745e61cb2cb90d69a3304a255ff42/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba0056346a745e61cb2cb90d69a3304a255ff42/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fplaceholder_error.rs?ref=5ba0056346a745e61cb2cb90d69a3304a255ff42", "patch": "@@ -399,10 +399,7 @@ impl<'tcx> NiceRegionError<'_, 'tcx> {\n                 self_ty.highlight.maybe_highlighting_region(vid, actual_has_vid);\n \n                 if self_ty.value.is_closure()\n-                    && self\n-                        .tcx()\n-                        .fn_trait_kind_from_def_id(expected_trait_ref.value.def_id)\n-                        .is_some()\n+                    && self.tcx().is_fn_trait(expected_trait_ref.value.def_id)\n                 {\n                     let closure_sig = self_ty.map(|closure| {\n                         if let ty::Closure(_, substs) = closure.kind() {"}, {"sha": "2cb04b949546cc70b444f694069476930150d3ae", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ba0056346a745e61cb2cb90d69a3304a255ff42/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba0056346a745e61cb2cb90d69a3304a255ff42/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=5ba0056346a745e61cb2cb90d69a3304a255ff42", "patch": "@@ -1764,8 +1764,7 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                 .enumerate()\n                 .find(|(other_idx, (pred, _))| match pred.kind().skip_binder() {\n                     ty::PredicateKind::Clause(ty::Clause::Trait(trait_pred))\n-                        if self.tcx.fn_trait_kind_from_def_id(trait_pred.def_id())\n-                            .is_some()\n+                        if self.tcx.is_fn_trait(trait_pred.def_id())\n                             && other_idx != idx\n                             // Make sure that the self type matches\n                             // (i.e. constraining this closure)"}]}