{"sha": "88fd7a8eb7a0d0ada3e33060969ccd91cba0132b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZmQ3YThlYjdhMGQwYWRhM2UzMzA2MDk2OWNjZDkxY2JhMDEzMmI=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-31T21:44:14Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-06-04T21:43:14Z"}, "message": "Add `HygieneData::adjust`.", "tree": {"sha": "703501953cf6415cb4a3d48efb32d3dabb5fe8de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/703501953cf6415cb4a3d48efb32d3dabb5fe8de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b", "html_url": "https://github.com/rust-lang/rust/commit/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd64cc835dc8342a596222a7f82646adcf1cbca6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd64cc835dc8342a596222a7f82646adcf1cbca6", "html_url": "https://github.com/rust-lang/rust/commit/cd64cc835dc8342a596222a7f82646adcf1cbca6"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "e8dadf09648d829dc5e4264ea876d38da21971a5", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=88fd7a8eb7a0d0ada3e33060969ccd91cba0132b", "patch": "@@ -243,6 +243,14 @@ impl HygieneData {\n         *ctxt = self.prev_ctxt(*ctxt);\n         outer_mark\n     }\n+\n+    fn adjust(&self, ctxt: &mut SyntaxContext, expansion: Mark) -> Option<Mark> {\n+        let mut scope = None;\n+        while !self.is_descendant_of(expansion, self.outer(*ctxt)) {\n+            scope = Some(self.remove_mark(ctxt));\n+        }\n+        scope\n+    }\n }\n \n pub fn clear_markings() {\n@@ -455,11 +463,7 @@ impl SyntaxContext {\n     /// This returns the expansion whose definition scope we use to privacy check the resolution,\n     /// or `None` if we privacy check as usual (i.e., not w.r.t. a macro definition scope).\n     pub fn adjust(&mut self, expansion: Mark) -> Option<Mark> {\n-        let mut scope = None;\n-        while !expansion.outer_is_descendant_of(*self) {\n-            scope = Some(self.remove_mark());\n-        }\n-        scope\n+        HygieneData::with(|data| data.adjust(self, expansion))\n     }\n \n     /// Adjust this context for resolution in a scope created by the given expansion"}]}