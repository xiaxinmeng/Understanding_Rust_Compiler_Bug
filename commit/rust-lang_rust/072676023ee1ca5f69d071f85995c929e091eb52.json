{"sha": "072676023ee1ca5f69d071f85995c929e091eb52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MjY3NjAyM2VlMWNhNWY2OWQwNzFmODU5OTVjOTI5ZTA5MWViNTI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-24T11:24:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-24T11:24:32Z"}, "message": "better variable names", "tree": {"sha": "0fad7513c47d4f13eaa66db9e9483e2473d2b4a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fad7513c47d4f13eaa66db9e9483e2473d2b4a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/072676023ee1ca5f69d071f85995c929e091eb52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/072676023ee1ca5f69d071f85995c929e091eb52", "html_url": "https://github.com/rust-lang/rust/commit/072676023ee1ca5f69d071f85995c929e091eb52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/072676023ee1ca5f69d071f85995c929e091eb52/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db20f248ebcd2a6cb5230b3bde7f400a380b0b87", "url": "https://api.github.com/repos/rust-lang/rust/commits/db20f248ebcd2a6cb5230b3bde7f400a380b0b87", "html_url": "https://github.com/rust-lang/rust/commit/db20f248ebcd2a6cb5230b3bde7f400a380b0b87"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "e07db3ffba25edd3de2d08aff01e753276bb70b3", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/072676023ee1ca5f69d071f85995c929e091eb52/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072676023ee1ca5f69d071f85995c929e091eb52/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs?ref=072676023ee1ca5f69d071f85995c929e091eb52", "patch": "@@ -6,31 +6,31 @@\n use std::sync::atomic::AtomicUsize;\n use std::sync::atomic::Ordering;\n \n-const BOO: &usize = { //~ ERROR undefined behavior to use this value\n+const REF_INTERIOR_MUT: &usize = { //~ ERROR undefined behavior to use this value\n     static FOO: AtomicUsize = AtomicUsize::new(0);\n     unsafe { &*(&FOO as *const _ as *const usize) }\n     //~^ WARN skipping const checks\n };\n \n-const FOO: usize = {\n+const MUTATE_INTERIOR_MUT: usize = {\n     static FOO: AtomicUsize = AtomicUsize::new(0);\n     FOO.fetch_add(1, Ordering::Relaxed) //~ WARN any use of this value will cause an error\n     //~^ WARN skipping const checks\n     //~| WARN skipping const checks\n };\n \n-const BAR: usize = {\n+const READ_INTERIOR_MUT: usize = {\n     static FOO: AtomicUsize = AtomicUsize::new(0);\n     unsafe { *(&FOO as *const _ as *const usize) } //~ WARN any use of this value will cause an err\n     //~^ WARN skipping const checks\n };\n \n static mut MUTABLE: u32 = 0;\n-const BAD: u32 = unsafe { MUTABLE }; //~ WARN any use of this value will cause an error\n+const READ_MUT: u32 = unsafe { MUTABLE }; //~ WARN any use of this value will cause an error\n //~^ WARN skipping const checks\n \n // ok some day perhaps\n-const BOO_OK: &usize = { //~ ERROR it is undefined behavior to use this value\n+const READ_IMMUT: &usize = { //~ ERROR it is undefined behavior to use this value\n     static FOO: usize = 0;\n     &FOO\n     //~^ WARN skipping const checks"}, {"sha": "eae76c1389b62327a147760e3abbe89b7113680f", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/072676023ee1ca5f69d071f85995c929e091eb52/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/072676023ee1ca5f69d071f85995c929e091eb52/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr?ref=072676023ee1ca5f69d071f85995c929e091eb52", "patch": "@@ -23,10 +23,10 @@ LL |     unsafe { *(&FOO as *const _ as *const usize) }\n    |                 ^^^\n \n warning: skipping const checks\n-  --> $DIR/const_refers_to_static.rs:29:27\n+  --> $DIR/const_refers_to_static.rs:29:32\n    |\n-LL | const BAD: u32 = unsafe { MUTABLE };\n-   |                           ^^^^^^^\n+LL | const READ_MUT: u32 = unsafe { MUTABLE };\n+   |                                ^^^^^^^\n \n warning: skipping const checks\n   --> $DIR/const_refers_to_static.rs:35:6\n@@ -37,7 +37,7 @@ LL |     &FOO\n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/const_refers_to_static.rs:9:1\n    |\n-LL | / const BOO: &usize = {\n+LL | / const REF_INTERIOR_MUT: &usize = {\n LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);\n LL | |     unsafe { &*(&FOO as *const _ as *const usize) }\n LL | |\n@@ -49,7 +49,7 @@ LL | | };\n warning: any use of this value will cause an error\n   --> $DIR/const_refers_to_static.rs:17:5\n    |\n-LL | / const FOO: usize = {\n+LL | / const MUTATE_INTERIOR_MUT: usize = {\n LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);\n LL | |     FOO.fetch_add(1, Ordering::Relaxed)\n    | |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ calling non-const function `std::sync::atomic::AtomicUsize::fetch_add`\n@@ -67,7 +67,7 @@ LL | #![warn(const_err)]\n warning: any use of this value will cause an error\n   --> $DIR/const_refers_to_static.rs:24:14\n    |\n-LL | / const BAR: usize = {\n+LL | / const READ_INTERIOR_MUT: usize = {\n LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);\n LL | |     unsafe { *(&FOO as *const _ as *const usize) }\n    | |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constant accesses static\n@@ -76,17 +76,17 @@ LL | | };\n    | |__-\n \n warning: any use of this value will cause an error\n-  --> $DIR/const_refers_to_static.rs:29:27\n+  --> $DIR/const_refers_to_static.rs:29:32\n    |\n-LL | const BAD: u32 = unsafe { MUTABLE };\n-   | --------------------------^^^^^^^---\n-   |                           |\n-   |                           constant accesses static\n+LL | const READ_MUT: u32 = unsafe { MUTABLE };\n+   | -------------------------------^^^^^^^---\n+   |                                |\n+   |                                constant accesses static\n \n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/const_refers_to_static.rs:33:1\n    |\n-LL | / const BOO_OK: &usize = {\n+LL | / const READ_IMMUT: &usize = {\n LL | |     static FOO: usize = 0;\n LL | |     &FOO\n LL | |"}]}