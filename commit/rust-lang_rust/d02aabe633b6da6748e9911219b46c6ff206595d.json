{"sha": "d02aabe633b6da6748e9911219b46c6ff206595d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMmFhYmU2MzNiNmRhNjc0OGU5OTExMjE5YjQ2YzZmZjIwNjU5NWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T14:07:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T14:07:12Z"}, "message": "Complete parameters more aggressively", "tree": {"sha": "27fd90c9c6a788cf058c4a6f65b4a43b0e8db1c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27fd90c9c6a788cf058c4a6f65b4a43b0e8db1c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d02aabe633b6da6748e9911219b46c6ff206595d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d02aabe633b6da6748e9911219b46c6ff206595d", "html_url": "https://github.com/rust-lang/rust/commit/d02aabe633b6da6748e9911219b46c6ff206595d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d02aabe633b6da6748e9911219b46c6ff206595d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74d376763c767ce6e1358c794880f325486a565f", "url": "https://api.github.com/repos/rust-lang/rust/commits/74d376763c767ce6e1358c794880f325486a565f", "html_url": "https://github.com/rust-lang/rust/commit/74d376763c767ce6e1358c794880f325486a565f"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "ee91bbdeacb6e2aced90c3f361ebd3d17e8439ca", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d02aabe633b6da6748e9911219b46c6ff206595d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d02aabe633b6da6748e9911219b46c6ff206595d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=d02aabe633b6da6748e9911219b46c6ff206595d", "patch": "@@ -1,4 +1,4 @@\n-//! FIXME: write short doc here\n+//! See `complete_fn_param`.\n \n use ra_syntax::{\n     ast::{self, ModuleItemOwner},\n@@ -18,32 +18,36 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n     }\n \n     let mut params = FxHashMap::default();\n+    let mut me = None;\n     for node in ctx.token.parent().ancestors() {\n         let items = match_ast! {\n             match node {\n                 ast::SourceFile(it) => it.items(),\n                 ast::ItemList(it) => it.items(),\n+                ast::FnDef(it) => {\n+                    me = Some(it);\n+                    continue;\n+                },\n                 _ => continue,\n             }\n         };\n         for item in items {\n             if let ast::ModuleItem::FnDef(func) = item {\n+                if Some(&func) == me.as_ref() {\n+                    continue;\n+                }\n                 func.param_list().into_iter().flat_map(|it| it.params()).for_each(|param| {\n                     let text = param.syntax().text().to_string();\n-                    params.entry(text).or_insert((0, param)).0 += 1;\n+                    params.entry(text).or_insert(param);\n                 })\n             }\n         }\n     }\n     params\n         .into_iter()\n-        .filter_map(|(label, (count, param))| {\n+        .filter_map(|(label, param)| {\n             let lookup = param.pat()?.syntax().text().to_string();\n-            if count < 2 {\n-                None\n-            } else {\n-                Some((label, lookup))\n-            }\n+            Some((label, lookup))\n         })\n         .for_each(|(label, lookup)| {\n             CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label)\n@@ -83,7 +87,6 @@ fn baz(file<|>) {}\n         check(\n             r#\"\n fn foo(file_id: FileId) {}\n-fn bar(file_id: FileId) {}\n fn baz(file<|>, x: i32) {}\n \"#,\n             expect![[r#\""}]}