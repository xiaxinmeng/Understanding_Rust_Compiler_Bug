{"sha": "ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "node_id": "C_kwDOAAsO6NoAKGFiMDkzOGQwZGY2ZjY4MDFlMGFkMmQxZjZkMTFmMDUxMDZkMDA2NDY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-07T07:55:12Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-07T08:08:52Z"}, "message": "Filter out intrinsics if we have other import candidates to suggest", "tree": {"sha": "93baa298ba76b30b39798969e92e3d6c1df39cd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93baa298ba76b30b39798969e92e3d6c1df39cd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "html_url": "https://github.com/rust-lang/rust/commit/ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab0938d0df6f6801e0ad2d1f6d11f05106d00646/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f7e997c8bc3cacd2ab4eb75e63cb5fa9279c7b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7e997c8bc3cacd2ab4eb75e63cb5fa9279c7b0", "html_url": "https://github.com/rust-lang/rust/commit/9f7e997c8bc3cacd2ab4eb75e63cb5fa9279c7b0"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "6f1b1996474e4741bce757d5cde9662af02bf2e3", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ab0938d0df6f6801e0ad2d1f6d11f05106d00646/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab0938d0df6f6801e0ad2d1f6d11f05106d00646/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "patch": "@@ -384,7 +384,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n \n         // Try to lookup name in more relaxed fashion for better error reporting.\n         let ident = path.last().unwrap().ident;\n-        let candidates = self\n+        let mut candidates = self\n             .r\n             .lookup_import_candidates(ident, ns, &self.parent_scope, is_expected)\n             .into_iter()\n@@ -396,6 +396,18 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n             })\n             .collect::<Vec<_>>();\n         let crate_def_id = CRATE_DEF_ID.to_def_id();\n+        // Try to filter out intrinsics candidates, as long as we have\n+        // some other candidates to suggest.\n+        let intrinsic_candidates: Vec<_> = candidates\n+            .drain_filter(|sugg| {\n+                let path = path_names_to_string(&sugg.path);\n+                path.starts_with(\"core::intrinsics::\") || path.starts_with(\"std::intrinsics::\")\n+            })\n+            .collect();\n+        if candidates.is_empty() {\n+            // Put them back if we have no more candidates to suggest...\n+            candidates.extend(intrinsic_candidates);\n+        }\n         if candidates.is_empty() && is_expected(Res::Def(DefKind::Enum, crate_def_id)) {\n             let mut enum_candidates: Vec<_> = self\n                 .r"}, {"sha": "c0956ef85aff6b2b6765880228149179d8a866d9", "filename": "src/test/ui/resolve/filter-intrinsics.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab0938d0df6f6801e0ad2d1f6d11f05106d00646/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab0938d0df6f6801e0ad2d1f6d11f05106d00646/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.rs?ref=ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "patch": "@@ -0,0 +1,10 @@\n+fn main() {\n+    // Should suggest only `std::mem::size_of`\n+    let _ = size_of::<usize>();\n+    //~^ ERROR cannot find\n+\n+    // Should suggest `std::intrinsics::fabsf64`,\n+    // since there is no non-intrinsic to suggest.\n+    let _ = fabsf64(1.0);\n+    //~^ ERROR cannot find\n+}"}, {"sha": "955070891fbbea6084e5f9d027515d79dbe07b28", "filename": "src/test/ui/resolve/filter-intrinsics.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ab0938d0df6f6801e0ad2d1f6d11f05106d00646/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab0938d0df6f6801e0ad2d1f6d11f05106d00646/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.stderr?ref=ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "patch": "@@ -0,0 +1,25 @@\n+error[E0425]: cannot find function `size_of` in this scope\n+  --> $DIR/filter-intrinsics.rs:3:13\n+   |\n+LL |     let _ = size_of::<usize>();\n+   |             ^^^^^^^ not found in this scope\n+   |\n+help: consider importing this function\n+   |\n+LL | use std::mem::size_of;\n+   |\n+\n+error[E0425]: cannot find function `fabsf64` in this scope\n+  --> $DIR/filter-intrinsics.rs:8:13\n+   |\n+LL |     let _ = fabsf64(1.0);\n+   |             ^^^^^^^ not found in this scope\n+   |\n+help: consider importing this function\n+   |\n+LL | use std::intrinsics::fabsf64;\n+   |\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}