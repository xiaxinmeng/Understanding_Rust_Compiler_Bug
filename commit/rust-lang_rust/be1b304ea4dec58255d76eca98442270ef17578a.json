{"sha": "be1b304ea4dec58255d76eca98442270ef17578a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMWIzMDRlYTRkZWM1ODI1NWQ3NmVjYTk4NDQyMjcwZWYxNzU3OGE=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-08-28T08:23:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-28T08:23:59Z"}, "message": "Rollup merge of #75943 - elichai:2020-align_offset-docs, r=RalfJung\n\nFix potential UB in align_offset doc examples\n\nCurrently it takes a pointer only to the first element in the array, this changes the code to take a pointer to the whole array.\nmiri can't catch this right now because it later calls `x.len()` which re-tags the pointer for the whole array.\n\nhttps://github.com/rust-lang/miri/issues/1526#issuecomment-680897144", "tree": {"sha": "c6b8141b6bcebf9f7874b258cee3f51c1fbd6170", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6b8141b6bcebf9f7874b258cee3f51c1fbd6170"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be1b304ea4dec58255d76eca98442270ef17578a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfSL8fCRBK7hj4Ov3rIwAAdHIIAJByrpKayq/cZHvcnwKZBjU6\nwG7+VyluZd2PIsIaHSTJdFAk1AhsHVBCYOlFhRCZ2Sho5ToHTSSnkV3F6tGZYqmR\n36WBSCKgvwdyjogZh9MlKPPp8S5stS75wLRjm7WLBkWTuomlUEIg844eHvRH47as\nRT4Ol0zZNnjqF1OLAbMSD4BOdhTkhnVRcZgm7Y79GRT1qdalATUQXbbVKt/p/bNy\nh5G5GlP6wUyzzcE2RmNxHlN4k9GjZt8eZ26AgG/TlEE2gGTqwbSHL/kPQthX5Tt/\nfSB4gRMueGQLIx34orT9128SpaCF1gdjrox8N3E1uOvwkb4vM8Gxxnd3gu7b/F0=\n=DZ7F\n-----END PGP SIGNATURE-----\n", "payload": "tree c6b8141b6bcebf9f7874b258cee3f51c1fbd6170\nparent bc553136c731db2038c4a7ebf7cb37b94c962813\nparent 0cca5978a454fe7087d0182a8bfa1372a6aae320\nauthor Pietro Albini <pietro@pietroalbini.org> 1598603039 +0200\ncommitter GitHub <noreply@github.com> 1598603039 +0200\n\nRollup merge of #75943 - elichai:2020-align_offset-docs, r=RalfJung\n\nFix potential UB in align_offset doc examples\n\nCurrently it takes a pointer only to the first element in the array, this changes the code to take a pointer to the whole array.\nmiri can't catch this right now because it later calls `x.len()` which re-tags the pointer for the whole array.\n\nhttps://github.com/rust-lang/miri/issues/1526#issuecomment-680897144\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be1b304ea4dec58255d76eca98442270ef17578a", "html_url": "https://github.com/rust-lang/rust/commit/be1b304ea4dec58255d76eca98442270ef17578a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be1b304ea4dec58255d76eca98442270ef17578a/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc553136c731db2038c4a7ebf7cb37b94c962813", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc553136c731db2038c4a7ebf7cb37b94c962813", "html_url": "https://github.com/rust-lang/rust/commit/bc553136c731db2038c4a7ebf7cb37b94c962813"}, {"sha": "0cca5978a454fe7087d0182a8bfa1372a6aae320", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cca5978a454fe7087d0182a8bfa1372a6aae320", "html_url": "https://github.com/rust-lang/rust/commit/0cca5978a454fe7087d0182a8bfa1372a6aae320"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d09cdb44e083760bff48bb60ce51605a0327c934", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be1b304ea4dec58255d76eca98442270ef17578a/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be1b304ea4dec58255d76eca98442270ef17578a/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=be1b304ea4dec58255d76eca98442270ef17578a", "patch": "@@ -836,7 +836,7 @@ impl<T: ?Sized> *const T {\n     /// # use std::mem::align_of;\n     /// # unsafe {\n     /// let x = [5u8, 6u8, 7u8, 8u8, 9u8];\n-    /// let ptr = &x[n] as *const u8;\n+    /// let ptr = x.as_ptr().add(n) as *const u8;\n     /// let offset = ptr.align_offset(align_of::<u16>());\n     /// if offset < x.len() - n - 1 {\n     ///     let u16_ptr = ptr.add(offset) as *const u16;"}, {"sha": "537aa20bf1dbcb13652ad67a351cc00bb72fe654", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be1b304ea4dec58255d76eca98442270ef17578a/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be1b304ea4dec58255d76eca98442270ef17578a/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=be1b304ea4dec58255d76eca98442270ef17578a", "patch": "@@ -1094,7 +1094,7 @@ impl<T: ?Sized> *mut T {\n     /// # use std::mem::align_of;\n     /// # unsafe {\n     /// let x = [5u8, 6u8, 7u8, 8u8, 9u8];\n-    /// let ptr = &x[n] as *const u8;\n+    /// let ptr = x.as_ptr().add(n) as *const u8;\n     /// let offset = ptr.align_offset(align_of::<u16>());\n     /// if offset < x.len() - n - 1 {\n     ///     let u16_ptr = ptr.add(offset) as *const u16;"}]}