{"sha": "59083c57d450d5be49db460fa395e472c09ff393", "node_id": "C_kwDOAAsO6NoAKDU5MDgzYzU3ZDQ1MGQ1YmU0OWRiNDYwZmEzOTVlNDcyYzA5ZmYzOTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-12T21:32:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-12T21:32:23Z"}, "message": "Auto merge of #107967 - matthiaskrgr:rollup-7wvbla5, r=matthiaskrgr\n\nRollup of 8 pull requests\n\nSuccessful merges:\n\n - #107748 (refer to new home)\n - #107842 (Patch `build/rustfmt/lib/*.so` for NixOS)\n - #107930 (Improve JS function itemTypeFromName code a bit)\n - #107934 (rustdoc: account for intra-doc links in `<meta name=\"description\">`)\n - #107943 (Document `PointerLike`)\n - #107954 (avoid mixing accesses of ptrs derived from a mutable ref and parent ptrs)\n - #107955 (fix UB in ancient test)\n - #107964 (rustdoc: use tighter line height in h1 and h2)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "46d99084dafece236c36ba1d81a4b6d7a3b2489e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46d99084dafece236c36ba1d81a4b6d7a3b2489e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59083c57d450d5be49db460fa395e472c09ff393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59083c57d450d5be49db460fa395e472c09ff393", "html_url": "https://github.com/rust-lang/rust/commit/59083c57d450d5be49db460fa395e472c09ff393", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59083c57d450d5be49db460fa395e472c09ff393/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b8f284536d00ba649ca968584bedab4820d8527", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b8f284536d00ba649ca968584bedab4820d8527", "html_url": "https://github.com/rust-lang/rust/commit/5b8f284536d00ba649ca968584bedab4820d8527"}, {"sha": "1d4397ba70cccaf67911316549f4edb15b077cd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d4397ba70cccaf67911316549f4edb15b077cd1", "html_url": "https://github.com/rust-lang/rust/commit/1d4397ba70cccaf67911316549f4edb15b077cd1"}], "stats": {"total": 97, "additions": 65, "deletions": 32}, "files": [{"sha": "be1ff8559cf31aebc8febb6a95c3c3316fafb1b3", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -156,7 +156,7 @@ pub struct Session {\n     /// `-C metadata` arguments passed to the compiler. Its value forms a unique\n     /// global identifier for the crate. It is used to allow multiple crates\n     /// with the same name to coexist. See the\n-    /// `rustc_codegen_llvm::back::symbol_names` module for more information.\n+    /// `rustc_symbol_mangling` crate for more information.\n     pub stable_crate_id: OnceCell<StableCrateId>,\n \n     features: OnceCell<rustc_feature::Features>,"}, {"sha": "07a7d45c7ebccf45e63af4570c9c45bc949431dd", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -871,7 +871,10 @@ pub trait Destruct {}\n #[rustc_deny_explicit_impl]\n pub trait Tuple {}\n \n-/// A marker for things\n+/// A marker for pointer-like types.\n+///\n+/// All types that have the same size and alignment as a `usize` or\n+/// `*const ()` automatically implement this trait.\n #[unstable(feature = \"pointer_like_trait\", issue = \"none\")]\n #[cfg_attr(bootstrap, lang = \"pointer_sized\")]\n #[cfg_attr(not(bootstrap), lang = \"pointer_like\")]"}, {"sha": "c02cd99cc4477dd37c1999d35b9a8cb9da5021c9", "filename": "library/core/tests/ptr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/library%2Fcore%2Ftests%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/library%2Fcore%2Ftests%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fptr.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -25,7 +25,7 @@ fn test() {\n             snd: isize,\n         }\n         let mut p = Pair { fst: 10, snd: 20 };\n-        let pptr: *mut Pair = &mut p;\n+        let pptr: *mut Pair = addr_of_mut!(p);\n         let iptr: *mut isize = pptr as *mut isize;\n         assert_eq!(*iptr, 10);\n         *iptr = 30;\n@@ -1070,8 +1070,8 @@ fn swap_copy_untyped() {\n     let mut x = 5u8;\n     let mut y = 6u8;\n \n-    let ptr1 = &mut x as *mut u8 as *mut bool;\n-    let ptr2 = &mut y as *mut u8 as *mut bool;\n+    let ptr1 = addr_of_mut!(x).cast::<bool>();\n+    let ptr2 = addr_of_mut!(y).cast::<bool>();\n \n     unsafe {\n         ptr::swap(ptr1, ptr2);"}, {"sha": "d6592d2d77116507d9c54a3b8c0c0709f36a3025", "filename": "src/bootstrap/download.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/src%2Fbootstrap%2Fdownload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/src%2Fbootstrap%2Fdownload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdownload.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -181,8 +181,7 @@ impl Config {\n             // appear to have this (even when `../lib` is redundant).\n             // NOTE: there are only two paths here, delimited by a `:`\n             let mut entries = OsString::from(\"$ORIGIN/../lib:\");\n-            entries.push(t!(fs::canonicalize(nix_deps_dir)));\n-            entries.push(\"/lib\");\n+            entries.push(t!(fs::canonicalize(nix_deps_dir)).join(\"lib\"));\n             entries\n         };\n         patchelf.args(&[OsString::from(\"--set-rpath\"), rpath_entries]);\n@@ -370,6 +369,13 @@ impl Config {\n         if self.should_fix_bins_and_dylibs() {\n             self.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"rustfmt\"));\n             self.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"cargo-fmt\"));\n+            let lib_dir = bin_root.join(\"lib\");\n+            for lib in t!(fs::read_dir(&lib_dir), lib_dir.display().to_string()) {\n+                let lib = t!(lib);\n+                if lib.path().extension() == Some(OsStr::new(\"so\")) {\n+                    self.fix_bin_or_dylib(&lib.path());\n+                }\n+            }\n         }\n \n         self.create(&rustfmt_stamp, &channel);"}, {"sha": "331804393938f46ca320f23064a8ec57fa63578f", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -1176,14 +1176,23 @@ pub(crate) fn short_markdown_summary(markdown: &str, link_names: &[RenderedLink]\n /// - Headings, links, and formatting are stripped.\n /// - Inline code is rendered as-is, surrounded by backticks.\n /// - HTML and code blocks are ignored.\n-pub(crate) fn plain_text_summary(md: &str) -> String {\n+pub(crate) fn plain_text_summary(md: &str, link_names: &[RenderedLink]) -> String {\n     if md.is_empty() {\n         return String::new();\n     }\n \n     let mut s = String::with_capacity(md.len() * 3 / 2);\n \n-    for event in Parser::new_ext(md, summary_opts()) {\n+    let mut replacer = |broken_link: BrokenLink<'_>| {\n+        link_names\n+            .iter()\n+            .find(|link| link.original_text.as_str() == &*broken_link.reference)\n+            .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n+    };\n+\n+    let p = Parser::new_with_broken_link_callback(md, summary_opts(), Some(&mut replacer));\n+\n+    for event in p {\n         match &event {\n             Event::Text(text) => s.push_str(text),\n             Event::Code(code) => {"}, {"sha": "e05635a0207560f1f5d4260471e4bbfc18be348e", "filename": "src/librustdoc/html/markdown/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -249,7 +249,7 @@ fn test_short_markdown_summary() {\n #[test]\n fn test_plain_text_summary() {\n     fn t(input: &str, expect: &str) {\n-        let output = plain_text_summary(input);\n+        let output = plain_text_summary(input, &[]);\n         assert_eq!(output, expect, \"original: {}\", input);\n     }\n "}, {"sha": "6762fba9275cf2b4199806dad49c813247dc51ae", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -182,7 +182,10 @@ impl<'tcx> Context<'tcx> {\n         };\n         title.push_str(\" - Rust\");\n         let tyname = it.type_();\n-        let desc = it.doc_value().as_ref().map(|doc| plain_text_summary(doc));\n+        let desc = it\n+            .doc_value()\n+            .as_ref()\n+            .map(|doc| plain_text_summary(doc, &it.link_names(&self.cache())));\n         let desc = if let Some(desc) = desc {\n             desc\n         } else if it.is_crate() {"}, {"sha": "4f8f00f298a8fba992509e92b45d9a396ec22079", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -174,6 +174,14 @@ h1, h2, h3, h4 {\n .top-doc .docblock > h4 {\n \tborder-bottom: 1px solid var(--headings-border-bottom-color);\n }\n+/* while line-height 1.5 is required for any \"block of text\",\n+\twhich WCAG defines as more than one sentence, it looks weird for\n+\tvery large main headers */\n+h1, h2 {\n+\tline-height: 1.25;\n+\tpadding-top: 3px;\n+\tpadding-bottom: 9px;\n+}\n h3.code-header {\n \tfont-size: 1.125rem; /* 18px */\n }"}, {"sha": "ea1875d8e27a96545519bdd661fe300a2dacbc90", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -142,13 +142,11 @@ function initSearch(rawSearchIndex) {\n     }\n \n     function itemTypeFromName(typename) {\n-        for (let i = 0, len = itemTypes.length; i < len; ++i) {\n-            if (itemTypes[i] === typename) {\n-                return i;\n-            }\n+        const index = itemTypes.findIndex(i => i === typename);\n+        if (index < 0) {\n+            throw new Error(\"Unknown type filter `\" + typename + \"`\");\n         }\n-\n-        throw new Error(\"Unknown type filter `\" + typename + \"`\");\n+        return index;\n     }\n \n     /**"}, {"sha": "8c8516ebff8e49af69a93f51352699a10ab726c1", "filename": "tests/rustdoc-gui/mobile.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fmobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fmobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fmobile.goml?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -12,7 +12,7 @@ assert-css: (\".main-heading\", {\n   \"flex-direction\": \"column\"\n })\n \n-assert-property: (\".mobile-topbar h2\", {\"offsetHeight\": 36})\n+assert-property: (\".mobile-topbar h2\", {\"offsetHeight\": 33})\n \n // Note: We can't use assert-text here because the 'Since' is set by CSS and\n // is therefore not part of the DOM."}, {"sha": "dad727c775775253d51ae02684dd1cfc17027927", "filename": "tests/rustdoc-gui/scrape-examples-layout.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fscrape-examples-layout.goml", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fscrape-examples-layout.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fscrape-examples-layout.goml?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -40,10 +40,10 @@ assert-property: (\n store-value: (offset_y, 4)\n \n // First with desktop\n-assert-position: (\".scraped-example .code-wrapper\", {\"y\": 255})\n-assert-position: (\".scraped-example .code-wrapper .prev\", {\"y\": 255 + |offset_y|})\n+assert-position: (\".scraped-example .code-wrapper\", {\"y\": 253})\n+assert-position: (\".scraped-example .code-wrapper .prev\", {\"y\": 253 + |offset_y|})\n \n // Then with mobile\n size: (600, 600)\n-assert-position: (\".scraped-example .code-wrapper\", {\"y\": 314})\n-assert-position: (\".scraped-example .code-wrapper .prev\", {\"y\": 314 + |offset_y|})\n+assert-position: (\".scraped-example .code-wrapper\", {\"y\": 308})\n+assert-position: (\".scraped-example .code-wrapper .prev\", {\"y\": 308 + |offset_y|})"}, {"sha": "20a88c36edb3e16adf8e0c047c5ba0e500a1b026", "filename": "tests/rustdoc-gui/search-result-display.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fsearch-result-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fsearch-result-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-display.goml?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -22,7 +22,7 @@ size: (900, 900)\n \n // First we check the current width, height and position.\n assert-css: (\"#crate-search\", {\"width\": \"223px\"})\n-assert-css: (\".search-results-title\", {\"height\": \"44px\", \"width\": \"640px\"})\n+assert-css: (\".search-results-title\", {\"height\": \"50px\", \"width\": \"640px\"})\n assert-css: (\"#search\", {\"width\": \"640px\"})\n \n // Then we update the text of one of the `<option>`.\n@@ -33,7 +33,7 @@ text: (\n \n // Then we compare again to confirm the height didn't change.\n assert-css: (\"#crate-search\", {\"width\": \"527px\"})\n-assert-css: (\".search-results-title\", {\"height\": \"44px\", \"width\": \"640px\"})\n+assert-css: (\".search-results-title\", {\"height\": \"50px\", \"width\": \"640px\"})\n // And we check that the `<select>` isn't bigger than its container (\".search-results-title\").\n assert-css: (\"#search\", {\"width\": \"640px\"})\n "}, {"sha": "4442b263e9a9890b028cf99d3bb7fbde9c2699d6", "filename": "tests/rustdoc-gui/sidebar-mobile-scroll.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -6,7 +6,7 @@ assert-css: (\".sidebar\", {\"display\": \"block\", \"left\": \"-1000px\"})\n \n // Scroll down.\n scroll-to: \"//h2[@id='blanket-implementations']\"\n-assert-window-property: {\"pageYOffset\": \"627\"}\n+assert-window-property: {\"pageYOffset\": \"622\"}\n \n // Open the sidebar menu.\n click: \".sidebar-menu-toggle\"\n@@ -21,11 +21,11 @@ assert-window-property: {\"pageYOffset\": \"0\"}\n // Close the sidebar menu. Make sure the scroll position gets restored.\n click: \".sidebar-menu-toggle\"\n wait-for-css: (\".sidebar\", {\"left\": \"-1000px\"})\n-assert-window-property: {\"pageYOffset\": \"627\"}\n+assert-window-property: {\"pageYOffset\": \"622\"}\n \n // Now test that scrollability returns when the browser window is just resized.\n click: \".sidebar-menu-toggle\"\n wait-for-css: (\".sidebar\", {\"left\": \"0px\"})\n assert-window-property: {\"pageYOffset\": \"0\"}\n size: (900, 600)\n-assert-window-property: {\"pageYOffset\": \"627\"}\n+assert-window-property: {\"pageYOffset\": \"622\"}"}, {"sha": "cc6267c3dc9cbc19361f4089176e011401245131", "filename": "tests/rustdoc-gui/sidebar-mobile.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fsidebar-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc-gui%2Fsidebar-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-mobile.goml?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -45,7 +45,7 @@ assert-property: (\".mobile-topbar\", {\"clientHeight\": \"45\"})\n // so the target is not obscured by the topbar.\n click: \".sidebar-menu-toggle\"\n click: \".sidebar-elems section .block li > a\"\n-assert-position: (\"#method\\.must_use\", {\"y\": 45})\n+assert-position: (\"#method\\.must_use\", {\"y\": 46})\n \n // Check that the bottom-most item on the sidebar menu can be scrolled fully into view.\n click: \".sidebar-menu-toggle\""}, {"sha": "43cd59ebd0924e299cf2e591d387983aa56696a0", "filename": "tests/rustdoc/description.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc%2Fdescription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/tests%2Frustdoc%2Fdescription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fdescription.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -22,3 +22,9 @@ pub mod foo_mod {\n //   'Only paragraph.'\n /// Only paragraph.\n pub fn foo_fn() {}\n+\n+// @has 'foo/fn.bar_fn.html' '//meta[@name=\"description\"]/@content' \\\n+//   'Description with intra-doc link to foo_fn and [nonexistent_item] and foo_fn.'\n+#[allow(rustdoc::broken_intra_doc_links)]\n+/// Description with intra-doc link to [foo_fn] and [nonexistent_item] and [foo_fn](self::foo_fn).\n+pub fn bar_fn() {}"}, {"sha": "d5c93f81fd84d9446d3704b204f59446a7a1193c", "filename": "tests/ui/regions/regions-mock-codegen.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59083c57d450d5be49db460fa395e472c09ff393/tests%2Fui%2Fregions%2Fregions-mock-codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59083c57d450d5be49db460fa395e472c09ff393/tests%2Fui%2Fregions%2Fregions-mock-codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregions%2Fregions-mock-codegen.rs?ref=59083c57d450d5be49db460fa395e472c09ff393", "patch": "@@ -22,23 +22,23 @@ struct Ccx {\n     x: isize,\n }\n \n-fn allocate(_bcx: &arena) -> &Bcx<'_> {\n+fn allocate(_bcx: &arena) -> &mut Bcx<'_> {\n     unsafe {\n         let layout = Layout::new::<Bcx>();\n         let ptr = Global.allocate(layout).unwrap_or_else(|_| handle_alloc_error(layout));\n-        &*(ptr.as_ptr() as *const _)\n+        &mut *ptr.as_ptr().cast()\n     }\n }\n \n-fn h<'a>(bcx: &'a Bcx<'a>) -> &'a Bcx<'a> {\n+fn h<'a>(bcx: &'a Bcx<'a>) -> &'a mut Bcx<'a> {\n     return allocate(bcx.fcx.arena);\n }\n \n fn g(fcx: &Fcx) {\n     let bcx = Bcx { fcx };\n     let bcx2 = h(&bcx);\n     unsafe {\n-        Global.deallocate(NonNull::new_unchecked(bcx2 as *const _ as *mut _), Layout::new::<Bcx>());\n+        Global.deallocate(NonNull::new_unchecked(bcx2 as *mut _ as *mut _), Layout::new::<Bcx>());\n     }\n }\n "}]}