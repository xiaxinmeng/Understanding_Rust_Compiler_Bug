{"sha": "862b663501570d24deefd72e76dfd4ff35d88e61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MmI2NjM1MDE1NzBkMjRkZWVmZDcyZTc2ZGZkNGZmMzVkODhlNjE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-03-02T13:53:12Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-03-02T13:53:12Z"}, "message": "A bit of cleanup in ty.rs", "tree": {"sha": "4f700cec98628d0ea1a1ad704b3d4050ce71680c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f700cec98628d0ea1a1ad704b3d4050ce71680c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/862b663501570d24deefd72e76dfd4ff35d88e61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/862b663501570d24deefd72e76dfd4ff35d88e61", "html_url": "https://github.com/rust-lang/rust/commit/862b663501570d24deefd72e76dfd4ff35d88e61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/862b663501570d24deefd72e76dfd4ff35d88e61/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "592b906604d60a86af74c5dbb3bf40b2ddcf8061", "url": "https://api.github.com/repos/rust-lang/rust/commits/592b906604d60a86af74c5dbb3bf40b2ddcf8061", "html_url": "https://github.com/rust-lang/rust/commit/592b906604d60a86af74c5dbb3bf40b2ddcf8061"}], "stats": {"total": 29, "additions": 1, "deletions": 28}, "files": [{"sha": "78270a9b7cd9824ee092b92828fd58f5ca99902b", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/862b663501570d24deefd72e76dfd4ff35d88e61/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/862b663501570d24deefd72e76dfd4ff35d88e61/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=862b663501570d24deefd72e76dfd4ff35d88e61", "patch": "@@ -54,7 +54,7 @@ pub enum Ty {\n     /// The pointee of an array slice.  Written as `[T]`.\n     Slice(Arc<Ty>),\n \n-    // An array with the given length. Written as `[T; n]`.\n+    /// An array with the given length. Written as `[T; n]`.\n     Array(Arc<Ty>),\n \n     /// A raw pointer. Written as `*mut T` or `*const T`\n@@ -97,36 +97,12 @@ pub enum Ty {\n     /// ```\n     FnPtr(Arc<FnSig>),\n \n-    // rustc has a separate type for each function, which just coerces to the\n-    // above function pointer type. Once we implement generics, we will probably\n-    // need this as well.\n-\n-    // A trait, defined with `dyn Trait`.\n-    // Dynamic(),\n-\n-    // The anonymous type of a closure. Used to represent the type of\n-    // `|a| a`.\n-    // Closure(DefId, ClosureSubsts<'tcx>),\n-\n-    // The anonymous type of a generator. Used to represent the type of\n-    // `|a| yield a`.\n-    // Generator(DefId, GeneratorSubsts<'tcx>, hir::GeneratorMovability),\n-\n-    // A type representing the types stored inside a generator.\n-    // This should only appear in GeneratorInteriors.\n-    // GeneratorWitness(Binder<&'tcx List<Ty<'tcx>>>),\n     /// The never type `!`.\n     Never,\n \n     /// A tuple type.  For example, `(i32, bool)`.\n     Tuple(Arc<[Ty]>),\n \n-    // The projection of an associated type.  For example,\n-    // `<T as Trait<..>>::N`.pub\n-    // Projection(ProjectionTy),\n-\n-    // Opaque (`impl Trait`) type found in a return type.\n-    // Opaque(DefId, Substs),\n     /// A type parameter; for example, `T` in `fn f<T>(x: T) {}\n     Param {\n         /// The index of the parameter (starting with parameters from the\n@@ -304,9 +280,6 @@ impl Ty {\n                 if (idx as usize) < substs.0.len() {\n                     substs.0[idx as usize].clone()\n                 } else {\n-                    // TODO: does this indicate a bug? i.e. should we always\n-                    // have substs for all type params? (they might contain the\n-                    // params themselves again...)\n                     Ty::Param { idx, name }\n                 }\n             }"}]}