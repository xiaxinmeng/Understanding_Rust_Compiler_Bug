{"sha": "5766d526a250c92792ec877a65003d43683c94e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NjZkNTI2YTI1MGM5Mjc5MmVjODc3YTY1MDAzZDQzNjgzYzk0ZTU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-04-04T23:34:14Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-04-09T20:46:20Z"}, "message": "Remove --enable-save-analysis configure flag", "tree": {"sha": "3a9c8591fd8586e705cc75b9f6529c3f85d9b5ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a9c8591fd8586e705cc75b9f6529c3f85d9b5ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5766d526a250c92792ec877a65003d43683c94e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5766d526a250c92792ec877a65003d43683c94e5", "html_url": "https://github.com/rust-lang/rust/commit/5766d526a250c92792ec877a65003d43683c94e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5766d526a250c92792ec877a65003d43683c94e5/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "223b280f31622e6292653c5b5a0755657e514524", "url": "https://api.github.com/repos/rust-lang/rust/commits/223b280f31622e6292653c5b5a0755657e514524", "html_url": "https://github.com/rust-lang/rust/commit/223b280f31622e6292653c5b5a0755657e514524"}], "stats": {"total": 28, "additions": 6, "deletions": 22}, "files": [{"sha": "4e95c6b41eca3388f54dd5f7787366ad2df637b5", "filename": "cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -1 +1 @@\n-Subproject commit 4729175045b41b688ab903120860866ce7a22ba9\n+Subproject commit 4e95c6b41eca3388f54dd5f7787366ad2df637b5"}, {"sha": "35b376d5f27b8c498d3691e720c9d3dcde558f45", "filename": "configure", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5766d526a250c92792ec877a65003d43683c94e5/configure", "raw_url": "https://github.com/rust-lang/rust/raw/5766d526a250c92792ec877a65003d43683c94e5/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -445,7 +445,6 @@ opt dist-host-only 0 \"only install bins for the host architecture\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n opt llvm-version-check 1 \"check if the LLVM version is supported, build anyway\"\n opt codegen-tests 1 \"run the src/test/codegen tests\"\n-opt save-analysis 0 \"save API analysis data\"\n opt option-checking 1 \"complain about unrecognized options in this configure script\"\n opt ninja 0 \"build LLVM using the Ninja generator (for MSVC, requires building in the correct environment)\"\n opt locked-deps 0 \"force Cargo.lock to be up to date\""}, {"sha": "016cbc514cf44a2bd3fe806e8afa6b9c50287373", "filename": "rls", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rls?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -1 +1 @@\n-Subproject commit 88fc39bd654c536b4f8f1cd1fc8245706f0284ec\n+Subproject commit 016cbc514cf44a2bd3fe806e8afa6b9c50287373"}, {"sha": "693114d01ad9c56fc04409c7d02706e888695e88", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -74,7 +74,6 @@ pub struct Config {\n     pub rustc_default_ar: Option<String>,\n     pub rust_optimize_tests: bool,\n     pub rust_debuginfo_tests: bool,\n-    pub rust_save_analysis: bool,\n     pub rust_dist_src: bool,\n \n     pub build: String,\n@@ -226,7 +225,6 @@ struct Rust {\n     optimize_tests: Option<bool>,\n     debuginfo_tests: Option<bool>,\n     codegen_tests: Option<bool>,\n-    save_analysis: Option<bool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -352,7 +350,6 @@ impl Config {\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.rust_debuginfo_tests, rust.debuginfo_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n-            set(&mut config.rust_save_analysis, rust.save_analysis);\n             set(&mut config.rust_rpath, rust.rpath);\n             set(&mut config.debug_jemalloc, rust.debug_jemalloc);\n             set(&mut config.use_jemalloc, rust.use_jemalloc);\n@@ -460,7 +457,6 @@ impl Config {\n                 (\"LOCAL_REBUILD\", self.local_rebuild),\n                 (\"NINJA\", self.ninja),\n                 (\"CODEGEN_TESTS\", self.codegen_tests),\n-                (\"SAVE_ANALYSIS\", self.rust_save_analysis),\n                 (\"LOCKED_DEPS\", self.locked_deps),\n                 (\"VENDOR\", self.vendor),\n                 (\"FULL_BOOTSTRAP\", self.full_bootstrap),"}, {"sha": "fad79022043e33dbc800288edc60bd5174dc4f93", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -234,9 +234,6 @@\n # saying that the FileCheck executable is missing, you may want to disable this.\n #codegen-tests = true\n \n-# Flag indicating whether the API analysis data should be saved.\n-#save-analysis = false\n-\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "e786d69555a1056804634de77a67b6426090224e", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -315,15 +315,12 @@ pub fn rust_src_location(build: &Build) -> PathBuf {\n \n /// Creates a tarball of save-analysis metadata, if available.\n pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n-    if !build.config.rust_save_analysis {\n-        return\n-    }\n-\n+    assert!(build.config.extended);\n     println!(\"Dist analysis\");\n \n     if compiler.host != build.config.build {\n         println!(\"\\tskipping, not a build host\");\n-        return\n+        return;\n     }\n \n     // Package save-analysis from stage1 if not doing a full bootstrap, as the\n@@ -595,6 +592,7 @@ pub fn cargo(build: &Build, stage: u32, target: &str) {\n }\n \n pub fn rls(build: &Build, stage: u32, target: &str) {\n+    assert!(build.config.extended);\n     println!(\"Dist RLS stage{} ({})\", stage, target);\n     let compiler = Compiler::new(stage, &build.config.build);\n "}, {"sha": "d508616e4b1cc2e6caf285737c09137305f1e894", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -55,11 +55,6 @@ pub fn install(build: &Build, stage: u32, host: &str) {\n                    &docdir, &libdir, &mandir, &empty_dir);\n     }\n \n-    if build.config.rust_save_analysis {\n-        install_sh(&build, \"analysis\", \"rust-analysis\", stage, host, &prefix,\n-                   &docdir, &libdir, &mandir, &empty_dir);\n-    }\n-\n     install_sh(&build, \"rustc\", \"rustc\", stage, host, &prefix,\n                &docdir, &libdir, &mandir, &empty_dir);\n     t!(fs::remove_dir_all(&empty_dir));"}, {"sha": "e91664ac8aba76a96774948c7492c755a80a776f", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5766d526a250c92792ec877a65003d43683c94e5/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -545,7 +545,7 @@ impl Build {\n                  .env(format!(\"CFLAGS_{}\", target), self.cflags(target).join(\" \"));\n         }\n \n-        if self.config.rust_save_analysis && compiler.is_final_stage(self) {\n+        if self.config.extended && compiler.is_final_stage(self) {\n             cargo.env(\"RUSTC_SAVE_ANALYSIS\", \"api\".to_string());\n         }\n "}, {"sha": "c6510120b47ae7ec3fb500d71df5db6ba5dc52ff", "filename": "src/ci/run.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5766d526a250c92792ec877a65003d43683c94e5/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/5766d526a250c92792ec877a65003d43683c94e5/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=5766d526a250c92792ec877a65003d43683c94e5", "patch": "@@ -42,7 +42,6 @@ fi\n if [ \"$DEPLOY$DEPLOY_ALT\" != \"\" ]; then\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --release-channel=nightly\"\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-llvm-static-stdcpp\"\n-  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-save-analysis\"\n \n   if [ \"$NO_LLVM_ASSERTIONS\" = \"1\" ]; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\""}]}