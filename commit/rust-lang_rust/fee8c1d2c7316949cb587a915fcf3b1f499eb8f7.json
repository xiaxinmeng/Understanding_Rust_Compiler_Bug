{"sha": "fee8c1d2c7316949cb587a915fcf3b1f499eb8f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZThjMWQyYzczMTY5NDljYjU4N2E5MTVmY2YzYjFmNDk5ZWI4Zjc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-01-08T05:31:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-01-08T05:31:37Z"}, "message": "doc: Typos", "tree": {"sha": "295f55ae728c6a1875b73535caf724de37ea9b6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/295f55ae728c6a1875b73535caf724de37ea9b6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fee8c1d2c7316949cb587a915fcf3b1f499eb8f7", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fee8c1d2c7316949cb587a915fcf3b1f499eb8f7", "html_url": "https://github.com/rust-lang/rust/commit/fee8c1d2c7316949cb587a915fcf3b1f499eb8f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fee8c1d2c7316949cb587a915fcf3b1f499eb8f7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fd4c3bb400b85a87cb415b4c0c9b3c573b66fd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fd4c3bb400b85a87cb415b4c0c9b3c573b66fd5", "html_url": "https://github.com/rust-lang/rust/commit/1fd4c3bb400b85a87cb415b4c0c9b3c573b66fd5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bb1ce35d8736c8452d4d219f4324ccbb87e42c3e", "filename": "doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fee8c1d2c7316949cb587a915fcf3b1f499eb8f7/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/fee8c1d2c7316949cb587a915fcf3b1f499eb8f7/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=fee8c1d2c7316949cb587a915fcf3b1f499eb8f7", "patch": "@@ -1623,7 +1623,7 @@ defined in [`std::vec`] and [`std::str`].\n \n # Ownership escape hatches\n \n-Ownership can cleanly describe tree-like data structures, and refercences provide non-owning pointers. However, more flexibility is often desired and Rust provides ways to escape from strict\n+Ownership can cleanly describe tree-like data structures, and references provide non-owning pointers. However, more flexibility is often desired and Rust provides ways to escape from strict\n single parent ownership.\n \n The standard library provides the `std::rc::Rc` pointer type to express *shared ownership* over a"}]}