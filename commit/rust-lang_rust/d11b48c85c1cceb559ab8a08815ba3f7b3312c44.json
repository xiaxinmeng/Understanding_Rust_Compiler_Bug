{"sha": "d11b48c85c1cceb559ab8a08815ba3f7b3312c44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMWI0OGM4NWMxY2NlYjU1OWFiOGEwODgxNWJhM2Y3YjMzMTJjNDQ=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-02-28T18:22:24Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-02-28T18:28:49Z"}, "message": "Error out when using static_assert on a non-boolean value\n\nstatic_assert is documented as working on static with type `bool`, but\nwe currently accept it on any const static and crash when the const has\nan non-integral type.\n\nThis is a breaking-change for anyone who used static_assert on types\nlikes i32, which happened to work but seems like an unintended\nconsequence of the missing error checking.\n\n[breaking-change]\n\nFixes #22056", "tree": {"sha": "9892ae0c01cce5cc2c47c567ffa65c14cb05f7a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9892ae0c01cce5cc2c47c567ffa65c14cb05f7a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d11b48c85c1cceb559ab8a08815ba3f7b3312c44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d11b48c85c1cceb559ab8a08815ba3f7b3312c44", "html_url": "https://github.com/rust-lang/rust/commit/d11b48c85c1cceb559ab8a08815ba3f7b3312c44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d11b48c85c1cceb559ab8a08815ba3f7b3312c44/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48aeaba9347a25b2e3848e0dcbc1d8f6b0076718", "url": "https://api.github.com/repos/rust-lang/rust/commits/48aeaba9347a25b2e3848e0dcbc1d8f6b0076718", "html_url": "https://github.com/rust-lang/rust/commit/48aeaba9347a25b2e3848e0dcbc1d8f6b0076718"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "d1722de90fb130263db9015c73add84eb186b477", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d11b48c85c1cceb559ab8a08815ba3f7b3312c44/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11b48c85c1cceb559ab8a08815ba3f7b3312c44/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=d11b48c85c1cceb559ab8a08815ba3f7b3312c44", "patch": "@@ -2332,6 +2332,11 @@ pub fn trans_item(ccx: &CrateContext, item: &ast::Item) {\n           // Do static_assert checking. It can't really be done much earlier\n           // because we need to get the value of the bool out of LLVM\n           if attr::contains_name(&item.attrs, \"static_assert\") {\n+              if !ty::type_is_bool(ty::expr_ty(ccx.tcx(), expr)) {\n+                  ccx.sess().span_fatal(expr.span,\n+                                        \"can only have static_assert on a static \\\n+                                         with type `bool`\");\n+              }\n               if m == ast::MutMutable {\n                   ccx.sess().span_fatal(expr.span,\n                                         \"cannot have static_assert on a mutable \\"}, {"sha": "d85f58edc90d451d7f913936d2bbf8bd9e0b73f2", "filename": "src/test/compile-fail/nonbool_static_assert.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d11b48c85c1cceb559ab8a08815ba3f7b3312c44/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11b48c85c1cceb559ab8a08815ba3f7b3312c44/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs?ref=d11b48c85c1cceb559ab8a08815ba3f7b3312c44", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(dead_code)]\n+\n+#[static_assert]\n+static E: i32 = 1; //~ ERROR can only have static_assert on a static with type `bool`\n+\n+fn main() {}"}]}