{"sha": "4411903cca01933cc98ac903b3864768b6136024", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MTE5MDNjY2EwMTkzM2NjOThhYzkwM2IzODY0NzY4YjYxMzYwMjQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-23T23:22:32Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-08T11:37:25Z"}, "message": "Add a scheme for registering and obtaining errors even without access to an `InterpCx`", "tree": {"sha": "b4f6f67ade86baaaab4aeda6e60fe235d84c0611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4f6f67ade86baaaab4aeda6e60fe235d84c0611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4411903cca01933cc98ac903b3864768b6136024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4411903cca01933cc98ac903b3864768b6136024", "html_url": "https://github.com/rust-lang/rust/commit/4411903cca01933cc98ac903b3864768b6136024", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4411903cca01933cc98ac903b3864768b6136024/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4de031b3da1c3dc8091a64daa46322ced3796c0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4de031b3da1c3dc8091a64daa46322ced3796c0f", "html_url": "https://github.com/rust-lang/rust/commit/4de031b3da1c3dc8091a64daa46322ced3796c0f"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "2431d9230f36fff702576118933c10521c4def6b", "filename": "src/diagnostics.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4411903cca01933cc98ac903b3864768b6136024/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4411903cca01933cc98ac903b3864768b6136024/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=4411903cca01933cc98ac903b3864768b6136024", "patch": "@@ -60,3 +60,20 @@ pub fn report_err<'tcx, 'mir>(\n     // Let the reported error determine the return code.\n     return None;\n }\n+\n+use std::cell::RefCell;\n+thread_local! {\n+    static ECX: RefCell<Vec<InterpErrorInfo<'static>>> = RefCell::new(Vec::new());\n+}\n+\n+pub fn register_err(e: InterpErrorInfo<'static>) {\n+    ECX.with(|ecx| ecx.borrow_mut().push(e));\n+}\n+\n+pub fn process_errors(mut f: impl FnMut(InterpErrorInfo<'static>)) {\n+    ECX.with(|ecx| {\n+        for e in ecx.borrow_mut().drain(..) {\n+            f(e);\n+        }\n+    });\n+}"}, {"sha": "bf6b111754de9d384dee845abb7397080785f48b", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4411903cca01933cc98ac903b3864768b6136024/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4411903cca01933cc98ac903b3864768b6136024/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4411903cca01933cc98ac903b3864768b6136024", "patch": "@@ -42,7 +42,7 @@ pub use crate::shims::time::EvalContextExt as TimeEvalContextExt;\n pub use crate::shims::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n pub use crate::shims::EvalContextExt as ShimsEvalContextExt;\n \n-pub use crate::diagnostics::report_err;\n+pub use crate::diagnostics::{process_errors, register_err, report_err};\n pub use crate::eval::{create_ecx, eval_main, MiriConfig, TerminationInfo};\n pub use crate::helpers::EvalContextExt as HelpersEvalContextExt;\n pub use crate::machine::{"}]}