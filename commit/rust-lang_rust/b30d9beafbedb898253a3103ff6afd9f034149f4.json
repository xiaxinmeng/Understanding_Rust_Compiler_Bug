{"sha": "b30d9beafbedb898253a3103ff6afd9f034149f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMGQ5YmVhZmJlZGI4OTgyNTNhMzEwM2ZmNmFmZDlmMDM0MTQ5ZjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-29T02:36:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-29T02:36:01Z"}, "message": "Rollup merge of #64799 - Aaron1011:fix/double-panic, r=Mark-Simulacrum\n\nFix double panic when printing query stack during an ICE\n\nOn the latest nightly, any call to `bug` or `span_bug` will result in two panics - the first one as a normal result of calling `bug` / `span_bug`, and the second as a result of trying to print the query stack from the panic handler. This is caused by the query-printing code attempting to acquire a lock on `HandlerInnder`, which is still being held by `bug`.\n\nThis PR moves the actual panic out of `HandlerInner`, into `Handler`. This allows us to release the lock on `HandlerInner` before triggering the panic, ensuring that the panic handler will be able to acquire the lock if necessary.", "tree": {"sha": "a2805dc20aec6bff6618a21495ca632709979806", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2805dc20aec6bff6618a21495ca632709979806"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b30d9beafbedb898253a3103ff6afd9f034149f4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdkBiRCRBK7hj4Ov3rIwAAdHIIAJJmG/wc3jqivi7zJ1Uf3//I\nPdSBqX7HQRpRK3oF3cJ5OOeFfdcUATBg5XgU68SJPzlrwOP9OupXZS7OeeNG3o+k\nQ3D6Y3cMHTT+LZyfHzSCHFEifS2SMynYR3bNPYnWOL4SgAgK2eo1Kl5T2XPk9o5W\nJt/NSDG778FP1B+4ZOvYSZ/iCGSpzNj4Au0zS/Aynv4VkzCdIBUGmnbbSp6Spt+O\n+cUIGbFsX8rmqH2cK26h7HOxQA7YxR3kwDpi5ZvXzRT8vRwOsJdfAvD6LsCusCTJ\nx5DlBDB9K4L1ToTBVCuAzdHUma5JT10L0Cp6bhClHppVyl919Lru+LmVvMYh1yw=\n=ko4G\n-----END PGP SIGNATURE-----\n", "payload": "tree a2805dc20aec6bff6618a21495ca632709979806\nparent a874c659c89ede39068d01f9f799f07084161c15\nparent 97906bcd5c9c5ba5d165c7330b2ee062a97f11cf\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569724561 +0200\ncommitter GitHub <noreply@github.com> 1569724561 +0200\n\nRollup merge of #64799 - Aaron1011:fix/double-panic, r=Mark-Simulacrum\n\nFix double panic when printing query stack during an ICE\n\nOn the latest nightly, any call to `bug` or `span_bug` will result in two panics - the first one as a normal result of calling `bug` / `span_bug`, and the second as a result of trying to print the query stack from the panic handler. This is caused by the query-printing code attempting to acquire a lock on `HandlerInnder`, which is still being held by `bug`.\n\nThis PR moves the actual panic out of `HandlerInner`, into `Handler`. This allows us to release the lock on `HandlerInner` before triggering the panic, ensuring that the panic handler will be able to acquire the lock if necessary.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b30d9beafbedb898253a3103ff6afd9f034149f4", "html_url": "https://github.com/rust-lang/rust/commit/b30d9beafbedb898253a3103ff6afd9f034149f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b30d9beafbedb898253a3103ff6afd9f034149f4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a874c659c89ede39068d01f9f799f07084161c15", "url": "https://api.github.com/repos/rust-lang/rust/commits/a874c659c89ede39068d01f9f799f07084161c15", "html_url": "https://github.com/rust-lang/rust/commit/a874c659c89ede39068d01f9f799f07084161c15"}, {"sha": "97906bcd5c9c5ba5d165c7330b2ee062a97f11cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/97906bcd5c9c5ba5d165c7330b2ee062a97f11cf", "html_url": "https://github.com/rust-lang/rust/commit/97906bcd5c9c5ba5d165c7330b2ee062a97f11cf"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "da58a5ae1cdac93eb44d7d046bafb7fa1c3b6a2a", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b30d9beafbedb898253a3103ff6afd9f034149f4/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b30d9beafbedb898253a3103ff6afd9f034149f4/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=b30d9beafbedb898253a3103ff6afd9f034149f4", "patch": "@@ -15,6 +15,7 @@ use errors::DiagnosticBuilder;\n use errors::Level;\n use errors::Diagnostic;\n use errors::FatalError;\n+use errors::Handler;\n use rustc_data_structures::fx::{FxHashMap};\n use rustc_data_structures::sync::{Lrc, Lock};\n use rustc_data_structures::sharded::Sharded;\n@@ -321,9 +322,12 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n-    pub fn try_print_query_stack() {\n+    pub fn try_print_query_stack(handler: &Handler) {\n         eprintln!(\"query stack during panic:\");\n \n+        // Be careful reyling on global state here: this code is called from\n+        // a panic hook, which means that the global `Handler` may be in a weird\n+        // state if it was responsible for triggering the panic.\n         tls::with_context_opt(|icx| {\n             if let Some(icx) = icx {\n                 let mut current_query = icx.query.clone();\n@@ -336,7 +340,7 @@ impl<'tcx> TyCtxt<'tcx> {\n                                  query.info.query.name(),\n                                  query.info.query.describe(icx.tcx)));\n                     diag.span = icx.tcx.sess.source_map().def_span(query.info.span).into();\n-                    icx.tcx.sess.diagnostic().force_print_diagnostic(diag);\n+                    handler.force_print_diagnostic(diag);\n \n                     current_query = query.parent.clone();\n                     i += 1;"}, {"sha": "dd088b68a239afe03b107d036168dbe3ca7d29e7", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b30d9beafbedb898253a3103ff6afd9f034149f4/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b30d9beafbedb898253a3103ff6afd9f034149f4/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=b30d9beafbedb898253a3103ff6afd9f034149f4", "patch": "@@ -1231,7 +1231,7 @@ pub fn report_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n     let backtrace = env::var_os(\"RUST_BACKTRACE\").map(|x| &x != \"0\").unwrap_or(false);\n \n     if backtrace {\n-        TyCtxt::try_print_query_stack();\n+        TyCtxt::try_print_query_stack(&handler);\n     }\n \n     #[cfg(windows)]"}]}