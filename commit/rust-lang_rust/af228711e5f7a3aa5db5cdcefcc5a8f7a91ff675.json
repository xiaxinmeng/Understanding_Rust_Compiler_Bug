{"sha": "af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMjI4NzExZTVmN2EzYWE1ZGI1Y2RjZWZjYzVhOGY3YTkxZmY2NzU=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-01T01:24:00Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-01T02:07:24Z"}, "message": "Make lint properly deal with nested items. Closes #2473.", "tree": {"sha": "f99559d258f959218aa69cc8fee2fec77bd908af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f99559d258f959218aa69cc8fee2fec77bd908af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675", "html_url": "https://github.com/rust-lang/rust/commit/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84adcb9806044c118f987aca05e627682b956eac", "url": "https://api.github.com/repos/rust-lang/rust/commits/84adcb9806044c118f987aca05e627682b956eac", "html_url": "https://github.com/rust-lang/rust/commit/84adcb9806044c118f987aca05e627682b956eac"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "e32e6326a327f0a1d9e11e460711c300cde2ae1e", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=af228711e5f7a3aa5db5cdcefcc5a8f7a91ff675", "patch": "@@ -210,7 +210,7 @@ fn time(do_it: bool, what: str, thunk: fn()) {\n                                 end - start, what));\n }\n \n-fn check_item(cx: ctxt, i: @ast::item) {\n+fn check_item(i: @ast::item, &&cx: ctxt, v: visit::vt<ctxt>) {\n     cx.with_warn_attrs(i.attrs) {|cx|\n         for cx.curr.each {|lint, level|\n             alt int_to_lint(lint as int) {\n@@ -221,11 +221,20 @@ fn check_item(cx: ctxt, i: @ast::item) {\n               old_vecs { check_item_old_vecs(cx, level, i); }\n             }\n         }\n+        visit::visit_item(i, cx, v);\n     }\n }\n \n+// Take a visitor, and modify it so that it will not proceed past subitems.\n+// This is used to make the simple visitors used for the lint passes\n+// not traverse into subitems, since that is handled by the outer\n+// lint visitor.\n+fn item_stopping_visitor<E>(v: visit::vt<E>) -> visit::vt<E> {\n+    visit::mk_vt(@{visit_item: {|_i, _e, _v| } with **v})\n+}\n+\n fn check_item_while_true(cx: ctxt, level: level, it: @ast::item) {\n-    let visit = visit::mk_simple_visitor(@{\n+    let visit = item_stopping_visitor(visit::mk_simple_visitor(@{\n         visit_expr: fn@(e: @ast::expr) {\n            alt e.node {\n              ast::expr_while(cond, _) {\n@@ -242,7 +251,7 @@ fn check_item_while_true(cx: ctxt, level: level, it: @ast::item) {\n           }\n         }\n         with *visit::default_simple_visitor()\n-    });\n+    }));\n     visit::visit_item(it, (), visit);\n }\n \n@@ -295,7 +304,7 @@ fn check_item_ctypes(cx: ctxt, level: level, it: @ast::item) {\n }\n \n fn check_item_path_statement(cx: ctxt, level: level, it: @ast::item) {\n-    let visit = visit::mk_simple_visitor(@{\n+    let visit = item_stopping_visitor(visit::mk_simple_visitor(@{\n         visit_stmt: fn@(s: @ast::stmt) {\n             alt s.node {\n               ast::stmt_semi(@{id: _,\n@@ -309,14 +318,14 @@ fn check_item_path_statement(cx: ctxt, level: level, it: @ast::item) {\n             }\n         }\n         with *visit::default_simple_visitor()\n-    });\n+    }));\n     visit::visit_item(it, (), visit);\n }\n \n fn check_item_old_vecs(cx: ctxt, level: level, it: @ast::item) {\n     let uses_vstore = int_hash();\n \n-    let visit = visit::mk_simple_visitor(@{\n+    let visit = item_stopping_visitor(visit::mk_simple_visitor(@{\n \n         visit_expr:fn@(e: @ast::expr) {\n             alt e.node {\n@@ -353,7 +362,7 @@ fn check_item_old_vecs(cx: ctxt, level: level, it: @ast::item) {\n         }\n \n         with *visit::default_simple_visitor()\n-    });\n+    }));\n     visit::visit_item(it, (), visit);\n }\n \n@@ -379,11 +388,11 @@ fn check_crate(tcx: ty::ctxt, crate: @ast::crate,\n \n     time(time_pass, \"lint checking\") {||\n         cx.with_warn_attrs(crate.node.attrs) {|cx|\n-            let visit = visit::mk_simple_visitor(@{\n-                visit_item: fn@(i: @ast::item) { check_item(cx, i); }\n-                with *visit::default_simple_visitor()\n+            let visit = visit::mk_vt(@{\n+                visit_item: check_item\n+                with *visit::default_visitor()\n             });\n-            visit::visit_crate(*crate, (), visit);\n+            visit::visit_crate(*crate, cx, visit);\n         }\n     }\n "}]}