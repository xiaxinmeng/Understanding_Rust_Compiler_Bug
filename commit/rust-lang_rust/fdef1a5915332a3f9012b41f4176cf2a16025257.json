{"sha": "fdef1a5915332a3f9012b41f4176cf2a16025257", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZWYxYTU5MTUzMzJhM2Y5MDEyYjQxZjQxNzZjZjJhMTYwMjUyNTc=", "commit": {"author": {"name": "Poliorcetics", "email": "poliorcetics@users.noreply.github.com", "date": "2020-06-08T14:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-08T14:29:47Z"}, "message": "Simply use drop instead of std::mem::drop\n\nCo-authored-by: LeSeulArtichaut <leseulartichaut@gmail.com>", "tree": {"sha": "cc4d0cce9a207bc976e8773e27c5e8d00fdaddcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc4d0cce9a207bc976e8773e27c5e8d00fdaddcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdef1a5915332a3f9012b41f4176cf2a16025257", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3ktbCRBK7hj4Ov3rIwAAdHIIADijHENwtydZHh7R9JzU6HnY\n/2eSgKxQzIQDD1EZwuyRvLNKg9VJSFGtGM2QsAM+iRF7VynP55QU/sGT1hnQ5yFG\nyZWItcUVvy8+1OufJ2wRNBd8LNPly9R/YW6rO+a4Z2PHUpoH3f0IGHAa7pHxynA6\nvUKdF3Z3tmFOTT7B6l49xb6mGcKEJDHeKlV5fhKE3EZhr9FFhHSD0ERBi1oFVaHq\nzHUpbPJjZm8G+CHLasLAItQBqE4Anmvpt/v29Adq+ugGxxATtgvD1YlPAIjIRCMz\nWD5hWTY/P2YaPr+Zw7WRXi914xzs5OzZKMxMY0XFImMn4v/BiwFQS5+25OLLkEM=\n=q0ja\n-----END PGP SIGNATURE-----\n", "payload": "tree cc4d0cce9a207bc976e8773e27c5e8d00fdaddcb\nparent 9c8f881ccd050f06387612e4b8aa18111c51a63b\nauthor Poliorcetics <poliorcetics@users.noreply.github.com> 1591626587 +0200\ncommitter GitHub <noreply@github.com> 1591626587 +0200\n\nSimply use drop instead of std::mem::drop\n\nCo-authored-by: LeSeulArtichaut <leseulartichaut@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdef1a5915332a3f9012b41f4176cf2a16025257", "html_url": "https://github.com/rust-lang/rust/commit/fdef1a5915332a3f9012b41f4176cf2a16025257", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdef1a5915332a3f9012b41f4176cf2a16025257/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c8f881ccd050f06387612e4b8aa18111c51a63b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8f881ccd050f06387612e4b8aa18111c51a63b", "html_url": "https://github.com/rust-lang/rust/commit/9c8f881ccd050f06387612e4b8aa18111c51a63b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c2c86fae654cf493b1af46573186ae4dcc7896b5", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdef1a5915332a3f9012b41f4176cf2a16025257/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdef1a5915332a3f9012b41f4176cf2a16025257/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=fdef1a5915332a3f9012b41f4176cf2a16025257", "patch": "@@ -139,7 +139,7 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n ///         // and the thread still has work to do. This allow other threads to\n ///         // start working on the data immediately, without waiting\n ///         // for the rest of the unrelated work to be done here.\n-///         std::mem::drop(data);\n+///         drop(data);\n ///         *res_mutex_clone.lock().unwrap() += result;\n ///     }));\n /// });\n@@ -156,7 +156,7 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n /// // It's even more important here because we `.join` the threads after that.\n /// // If we had not dropped the lock, a thread could be waiting forever for\n /// // it, causing a deadlock.\n-/// std::mem::drop(data);\n+/// drop(data);\n /// // Here the lock is not assigned to a variable and so, even if the scope\n /// // does not end after this line, the mutex is still released:\n /// // there is no deadlock."}]}