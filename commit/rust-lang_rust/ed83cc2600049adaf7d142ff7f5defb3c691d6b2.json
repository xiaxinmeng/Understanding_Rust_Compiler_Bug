{"sha": "ed83cc2600049adaf7d142ff7f5defb3c691d6b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkODNjYzI2MDAwNDlhZGFmN2QxNDJmZjdmNWRlZmIzYzY5MWQ2YjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-12T16:03:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-12T16:03:40Z"}, "message": "use RUSTC_WRAPPER for the cargo hook", "tree": {"sha": "01a4a48f08ab12bea0d00d09393943cd74c60ab8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01a4a48f08ab12bea0d00d09393943cd74c60ab8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed83cc2600049adaf7d142ff7f5defb3c691d6b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed83cc2600049adaf7d142ff7f5defb3c691d6b2", "html_url": "https://github.com/rust-lang/rust/commit/ed83cc2600049adaf7d142ff7f5defb3c691d6b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed83cc2600049adaf7d142ff7f5defb3c691d6b2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff140da96fe800aaf0995c480814d374abb75374", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff140da96fe800aaf0995c480814d374abb75374", "html_url": "https://github.com/rust-lang/rust/commit/ff140da96fe800aaf0995c480814d374abb75374"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "f428062b3fc4a4b5ecc71c4bd73b297444cc8043", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ed83cc2600049adaf7d142ff7f5defb3c691d6b2/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed83cc2600049adaf7d142ff7f5defb3c691d6b2/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=ed83cc2600049adaf7d142ff7f5defb3c691d6b2", "patch": "@@ -305,8 +305,8 @@ fn main() {\n                 _ => {}\n             }\n         }\n-    } else {\n-        // This arm is executed when cargo-miri runs `cargo rustc` with the `RUSTC` env var set to itself:\n+    } else if let Some(\"rustc\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n+        // This arm is executed when cargo-miri runs `cargo rustc` with the `RUSTC_WRAPPER` env var set to itself:\n         // Dependencies get dispatched to rustc, the final test/binary to miri.\n \n         let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n@@ -332,11 +332,11 @@ fn main() {\n \n         // this conditional check for the --sysroot flag is there so users can call `cargo-miri` directly\n         // without having to pass --sysroot or anything\n+        let rustc_args = std::env::args().skip(2);\n         let mut args: Vec<String> = if std::env::args().any(|s| s == \"--sysroot\") {\n-            std::env::args().skip(1).collect()\n+            rustc_args.collect()\n         } else {\n-            std::env::args()\n-                .skip(1)\n+            rustc_args\n                 .chain(Some(\"--sysroot\".to_owned()))\n                 .chain(Some(sys_root))\n                 .collect()\n@@ -365,6 +365,8 @@ fn main() {\n             Err(ref e) if miri_enabled => panic!(\"error during miri run: {:?}\", e),\n             Err(ref e) => panic!(\"error during rustc call: {:?}\", e),\n         }\n+    } else {\n+        eprintln!(\"Unexpected call: Must be called with either `miri` or `rustc` as first argument.\")\n     }\n }\n \n@@ -389,7 +391,7 @@ where\n     let path = std::env::current_exe().expect(\"current executable path invalid\");\n     let exit_status = Command::new(\"cargo\")\n         .args(&args)\n-        .env(\"RUSTC\", path)\n+        .env(\"RUSTC_WRAPPER\", path)\n         .spawn()\n         .expect(\"could not run cargo\")\n         .wait()"}]}