{"sha": "6d50cff45afeeca85a14f1284badf9fc4b5b7668", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNTBjZmY0NWFmZWVjYTg1YTE0ZjEyODRiYWRmOWZjNGI1Yjc2Njg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-25T14:08:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-25T14:08:02Z"}, "message": "Auto merge of #7256 - xFrednet:7172-trick-cargos-caching-for-collection, r=flip1995\n\nAdding the ability to invalidate caches to force metadata collection\n\nThis adds the discussed hack to touch `clippy_lints/src/lib.rs` to invalidate cargos cache and force metadata collection. I've decided to use the [`filetime`](https://github.com/alexcrichton/filetime) crate instead of the touch command to make is cross-platform and just cleaner in general. Looking at the maintainers I would say that it's a save crate to use xD.\n\n---\n\ncc: #7172 I know this ID without looking it up now... This is not good\n\nchangelog: none\n\nr? `@flip1995`", "tree": {"sha": "64d60cb7ea22ebb58172360ded26accbfff73703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64d60cb7ea22ebb58172360ded26accbfff73703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d50cff45afeeca85a14f1284badf9fc4b5b7668", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d50cff45afeeca85a14f1284badf9fc4b5b7668", "html_url": "https://github.com/rust-lang/rust/commit/6d50cff45afeeca85a14f1284badf9fc4b5b7668", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d50cff45afeeca85a14f1284badf9fc4b5b7668/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd4abf93e08fc68f3bf287ab556935da457dc391", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4abf93e08fc68f3bf287ab556935da457dc391", "html_url": "https://github.com/rust-lang/rust/commit/cd4abf93e08fc68f3bf287ab556935da457dc391"}, {"sha": "e3a1ae7bfea265d0c452ce4511349c00ca0ee1b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a1ae7bfea265d0c452ce4511349c00ca0ee1b8", "html_url": "https://github.com/rust-lang/rust/commit/e3a1ae7bfea265d0c452ce4511349c00ca0ee1b8"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "458c28c2748393013c14ad089e9c4bad602c1fb2", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6d50cff45afeeca85a14f1284badf9fc4b5b7668/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6d50cff45afeeca85a14f1284badf9fc4b5b7668/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=6d50cff45afeeca85a14f1284badf9fc4b5b7668", "patch": "@@ -39,6 +39,8 @@ derive-new = \"0.5\"\n regex = \"1.4\"\n quote = \"1\"\n syn = { version = \"1\", features = [\"full\"] }\n+# This is used by the `collect-metadata` alias.\n+filetime = \"0.2\"\n \n # A noop dependency that changes in the Rust repository, it's a bit of a hack.\n # See the `src/tools/rustc-workspace-hack/README.md` file in `rust-lang/rust`"}, {"sha": "7de130c7dbefa6e3b7f3a0d7300289f1d7cc62b3", "filename": "tests/dogfood.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6d50cff45afeeca85a14f1284badf9fc4b5b7668/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d50cff45afeeca85a14f1284badf9fc4b5b7668/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=6d50cff45afeeca85a14f1284badf9fc4b5b7668", "patch": "@@ -179,8 +179,39 @@ fn dogfood_subprojects() {\n #[ignore]\n #[cfg(feature = \"metadata-collector-lint\")]\n fn run_metadata_collection_lint() {\n+    use std::fs::File;\n+    use std::time::SystemTime;\n+\n+    // Setup for validation\n+    let metadata_output_path = PathBuf::from(env!(\"CARGO_MANIFEST_DIR\")).join(\"util/gh-pages/metadata_collection.json\");\n+    let start_time = SystemTime::now();\n+\n+    // Run collection as is\n     std::env::set_var(\"ENABLE_METADATA_COLLECTION\", \"1\");\n     run_clippy_for_project(\"clippy_lints\");\n+\n+    // Check if cargo caching got in the way\n+    if let Ok(file) = File::open(metadata_output_path) {\n+        if let Ok(metadata) = file.metadata() {\n+            if let Ok(last_modification) = metadata.modified() {\n+                if last_modification > start_time {\n+                    // The output file has been modified. Most likely by a hungry\n+                    // metadata collection monster. So We'll return.\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n+    // Force cargo to invalidate the caches\n+    filetime::set_file_mtime(\n+        PathBuf::from(env!(\"CARGO_MANIFEST_DIR\")).join(\"clippy_lints/src/lib.rs\"),\n+        filetime::FileTime::now(),\n+    )\n+    .unwrap();\n+\n+    // Running the collection again\n+    run_clippy_for_project(\"clippy_lints\");\n }\n \n fn run_clippy_for_project(project: &str) {"}]}