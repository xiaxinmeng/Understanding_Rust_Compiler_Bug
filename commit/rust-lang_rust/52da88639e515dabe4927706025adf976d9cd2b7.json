{"sha": "52da88639e515dabe4927706025adf976d9cd2b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZGE4ODYzOWU1MTVkYWJlNDkyNzcwNjAyNWFkZjk3NmQ5Y2QyYjc=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-09-28T15:38:02Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-09-29T12:57:42Z"}, "message": "rustc/infer: miscellaneous minor code improvements", "tree": {"sha": "b85414a0b7fd5660e9cb7e0f217e569d013d1d88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b85414a0b7fd5660e9cb7e0f217e569d013d1d88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52da88639e515dabe4927706025adf976d9cd2b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52da88639e515dabe4927706025adf976d9cd2b7", "html_url": "https://github.com/rust-lang/rust/commit/52da88639e515dabe4927706025adf976d9cd2b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52da88639e515dabe4927706025adf976d9cd2b7/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70eeb054410031a0f23516be51bddaed5fe77276", "url": "https://api.github.com/repos/rust-lang/rust/commits/70eeb054410031a0f23516be51bddaed5fe77276", "html_url": "https://github.com/rust-lang/rust/commit/70eeb054410031a0f23516be51bddaed5fe77276"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "6b9bb852a54f2ebaf4541a1c9a7cf433cec0b742", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/52da88639e515dabe4927706025adf976d9cd2b7/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52da88639e515dabe4927706025adf976d9cd2b7/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=52da88639e515dabe4927706025adf976d9cd2b7", "patch": "@@ -406,10 +406,10 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             errors.clone()\n         } else {\n             errors\n-                .iter()\n-                .filter(|&e| !is_bound_failure(e))\n-                .cloned()\n-                .collect()\n+            .iter()\n+            .filter(|&e| !is_bound_failure(e))\n+            .cloned()\n+            .collect()\n         };\n \n         // sort the errors by span, for better error message stability."}, {"sha": "c2e75bedf0aed931ca5421c208eb14cab958b401", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52da88639e515dabe4927706025adf976d9cd2b7/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52da88639e515dabe4927706025adf976d9cd2b7/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=52da88639e515dabe4927706025adf976d9cd2b7", "patch": "@@ -147,9 +147,7 @@ impl<'cx, 'gcx, 'tcx> LexicalResolver<'cx, 'gcx, 'tcx> {\n     fn construct_var_data(&self, tcx: TyCtxt<'_, '_, 'tcx>) -> LexicalRegionResolutions<'tcx> {\n         LexicalRegionResolutions {\n             error_region: tcx.types.re_static,\n-            values: (0..self.num_vars())\n-                .map(|_| VarValue::Value(tcx.types.re_empty))\n-                .collect(),\n+            values: IndexVec::from_elem_n(VarValue::Value(tcx.types.re_empty), self.num_vars())\n         }\n     }\n "}, {"sha": "f6192efb79ec1e10d1d42870e74cfe1ab54a5a90", "filename": "src/librustc/infer/region_constraints/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52da88639e515dabe4927706025adf976d9cd2b7/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52da88639e515dabe4927706025adf976d9cd2b7/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_constraints%2Fmod.rs?ref=52da88639e515dabe4927706025adf976d9cd2b7", "patch": "@@ -443,7 +443,7 @@ impl<'tcx> RegionConstraintCollector<'tcx> {\n         assert!(self.undo_log[snapshot.length] == OpenSnapshot);\n \n         if snapshot.length == 0 {\n-            self.undo_log.truncate(0);\n+            self.undo_log.clear();\n         } else {\n             (*self.undo_log)[snapshot.length] = CommitedSnapshot;\n         }"}]}