{"sha": "210f0dcf007104240b2e286ed0b80cb4a61d7bae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMGYwZGNmMDA3MTA0MjQwYjJlMjg2ZWQwYjgwY2I0YTYxZDdiYWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-16T16:21:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-01-16T16:21:06Z"}, "message": "auto merge of #21162 : apasel422/rust/issue-16530, r=huonw\n\nThis fixes #16530 by hashing nullary structs [the same way as the empty tuple] (https://github.com/rust-lang/rust/blob/master/src/libcore/hash/mod.rs#L185). Other approaches are possible, but this was the simplest.", "tree": {"sha": "b689b3ef6381f71e2a5de664bb3cefc340b2c6b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b689b3ef6381f71e2a5de664bb3cefc340b2c6b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/210f0dcf007104240b2e286ed0b80cb4a61d7bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/210f0dcf007104240b2e286ed0b80cb4a61d7bae", "html_url": "https://github.com/rust-lang/rust/commit/210f0dcf007104240b2e286ed0b80cb4a61d7bae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/210f0dcf007104240b2e286ed0b80cb4a61d7bae/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee2bfae011e368e224d6d4f4c9fad13606ee99da", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee2bfae011e368e224d6d4f4c9fad13606ee99da", "html_url": "https://github.com/rust-lang/rust/commit/ee2bfae011e368e224d6d4f4c9fad13606ee99da"}, {"sha": "716effa34900781ddb201fbd50ee679a4964cb25", "url": "https://api.github.com/repos/rust-lang/rust/commits/716effa34900781ddb201fbd50ee679a4964cb25", "html_url": "https://github.com/rust-lang/rust/commit/716effa34900781ddb201fbd50ee679a4964cb25"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "08336be87d107712c5c8f1f156d2784efcde8f0f", "filename": "src/libsyntax/ext/deriving/hash.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/210f0dcf007104240b2e286ed0b80cb4a61d7bae/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/210f0dcf007104240b2e286ed0b80cb4a61d7bae/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fhash.rs?ref=210f0dcf007104240b2e286ed0b80cb4a61d7bae", "patch": "@@ -63,7 +63,7 @@ pub fn expand_deriving_hash<F>(cx: &mut ExtCtxt,\n fn hash_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure) -> P<Expr> {\n     let state_expr = match substr.nonself_args {\n         [ref state_expr] => state_expr,\n-        _ => cx.span_bug(trait_span, \"incorrect number of arguments in `deriving(Hash)`\")\n+        _ => cx.span_bug(trait_span, \"incorrect number of arguments in `derive(Hash)`\")\n     };\n     let call_hash = |&: span, thing_expr| {\n         let hash_path = {\n@@ -96,16 +96,12 @@ fn hash_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure)\n \n             fs\n         }\n-        _ => cx.span_bug(trait_span, \"impossible substructure in `deriving(Hash)`\")\n+        _ => cx.span_bug(trait_span, \"impossible substructure in `derive(Hash)`\")\n     };\n \n     for &FieldInfo { ref self_, span, .. } in fields.iter() {\n         stmts.push(call_hash(span, self_.clone()));\n     }\n \n-    if stmts.len() == 0 {\n-        cx.span_bug(trait_span, \"#[derive(Hash)] needs at least one field\");\n-    }\n-\n     cx.expr_block(cx.block(trait_span, stmts, None))\n }"}, {"sha": "7e3b796235d26a25367cf348590d65cf0018cc16", "filename": "src/test/run-pass/issue-16530.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/210f0dcf007104240b2e286ed0b80cb4a61d7bae/src%2Ftest%2Frun-pass%2Fissue-16530.rs", "raw_url": "https://github.com/rust-lang/rust/raw/210f0dcf007104240b2e286ed0b80cb4a61d7bae/src%2Ftest%2Frun-pass%2Fissue-16530.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16530.rs?ref=210f0dcf007104240b2e286ed0b80cb4a61d7bae", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::hash::{SipHasher, hash};\n+\n+#[derive(Hash)]\n+struct Empty;\n+\n+pub fn main() {\n+    assert!(hash::<_, SipHasher>(&Empty) == hash::<_, SipHasher>(&Empty));\n+}"}]}