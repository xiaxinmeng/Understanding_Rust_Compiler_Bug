{"sha": "0392085f5ce9ed610a95cc7b956545b0fd26252a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzOTIwODVmNWNlOWVkNjEwYTk1Y2M3Yjk1NjU0NWIwZmQyNjI1MmE=", "commit": {"author": {"name": "Jonathan Behrens", "email": "fintelia@gmail.com", "date": "2020-12-08T22:15:18Z"}, "committer": {"name": "Jonathan Behrens", "email": "fintelia@gmail.com", "date": "2021-01-22T19:46:11Z"}, "message": "More clear documentation for NonNull<T>\n\nRephrase and hopefully clarify the discussion of covariance in `NonNull<T>` documentation.", "tree": {"sha": "9743cbfae4a85d07c08275b4cd34d1bffb6be8f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9743cbfae4a85d07c08275b4cd34d1bffb6be8f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0392085f5ce9ed610a95cc7b956545b0fd26252a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0392085f5ce9ed610a95cc7b956545b0fd26252a", "html_url": "https://github.com/rust-lang/rust/commit/0392085f5ce9ed610a95cc7b956545b0fd26252a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0392085f5ce9ed610a95cc7b956545b0fd26252a/comments", "author": {"login": "fintelia", "id": 4943209, "node_id": "MDQ6VXNlcjQ5NDMyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4943209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fintelia", "html_url": "https://github.com/fintelia", "followers_url": "https://api.github.com/users/fintelia/followers", "following_url": "https://api.github.com/users/fintelia/following{/other_user}", "gists_url": "https://api.github.com/users/fintelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fintelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fintelia/subscriptions", "organizations_url": "https://api.github.com/users/fintelia/orgs", "repos_url": "https://api.github.com/users/fintelia/repos", "events_url": "https://api.github.com/users/fintelia/events{/privacy}", "received_events_url": "https://api.github.com/users/fintelia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fintelia", "id": 4943209, "node_id": "MDQ6VXNlcjQ5NDMyMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/4943209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fintelia", "html_url": "https://github.com/fintelia", "followers_url": "https://api.github.com/users/fintelia/followers", "following_url": "https://api.github.com/users/fintelia/following{/other_user}", "gists_url": "https://api.github.com/users/fintelia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fintelia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fintelia/subscriptions", "organizations_url": "https://api.github.com/users/fintelia/orgs", "repos_url": "https://api.github.com/users/fintelia/repos", "events_url": "https://api.github.com/users/fintelia/events{/privacy}", "received_events_url": "https://api.github.com/users/fintelia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e6e1e33a11d140a4d70f946730137f241224eb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e6e1e33a11d140a4d70f946730137f241224eb3", "html_url": "https://github.com/rust-lang/rust/commit/5e6e1e33a11d140a4d70f946730137f241224eb3"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "e45fefc7ed7657f1c3e0f949d97ed58a46f626ce", "filename": "library/core/src/ptr/non_null.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0392085f5ce9ed610a95cc7b956545b0fd26252a/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0392085f5ce9ed610a95cc7b956545b0fd26252a/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs?ref=0392085f5ce9ed610a95cc7b956545b0fd26252a", "patch": "@@ -19,12 +19,19 @@ use crate::slice::{self, SliceIndex};\n /// as a discriminant -- `Option<NonNull<T>>` has the same size as `*mut T`.\n /// However the pointer may still dangle if it isn't dereferenced.\n ///\n-/// Unlike `*mut T`, `NonNull<T>` is covariant over `T`. If this is incorrect\n-/// for your use case, you should include some [`PhantomData`] in your type to\n-/// provide invariance, such as `PhantomData<Cell<T>>` or `PhantomData<&'a mut T>`.\n-/// Usually this won't be necessary; covariance is correct for most safe abstractions,\n-/// such as `Box`, `Rc`, `Arc`, `Vec`, and `LinkedList`. This is the case because they\n-/// provide a public API that follows the normal shared XOR mutable rules of Rust.\n+/// Unlike `*mut T`, `NonNull<T>` was chosen to be covariant over `T`. This makes it\n+/// possible to use `NonNull<T>` when building covariant types, but introduces the\n+/// risk of unsoundness if used in a type that shouldn't actually be covariant.\n+/// (The opposite choice was made for `*mut T` even though technically the unsoundness\n+/// could only be caused by calling unsafe functions.)\n+///\n+/// Covariance is correct for most safe abstractions, such as `Box`, `Rc`, `Arc`, `Vec`,\n+/// and `LinkedList`. This is the case because they provide a public API that follows the\n+/// normal shared XOR mutable rules of Rust.\n+///\n+/// If your type cannot safely be covariant, you must ensure it contains some\n+/// additional field to provide invariance. Often this field will be a [`PhantomData`]\n+/// type like `PhantomData<Cell<T>>` or `PhantomData<&'a mut T>`.\n ///\n /// Notice that `NonNull<T>` has a `From` instance for `&T`. However, this does\n /// not change the fact that mutating through a (pointer derived from a) shared"}]}