{"sha": "5cc3593c17360edd92977301ca66551a45119619", "node_id": "C_kwDOAAsO6NoAKDVjYzM1OTNjMTczNjBlZGQ5Mjk3NzMwMWNhNjY1NTFhNDUxMTk2MTk", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-05-06T15:20:42Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-06-03T17:02:14Z"}, "message": "Fix emscripten linker invocation", "tree": {"sha": "b8869e04fb13b870d74f9bbbe4f6cfc6b1431afd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8869e04fb13b870d74f9bbbe4f6cfc6b1431afd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cc3593c17360edd92977301ca66551a45119619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc3593c17360edd92977301ca66551a45119619", "html_url": "https://github.com/rust-lang/rust/commit/5cc3593c17360edd92977301ca66551a45119619", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cc3593c17360edd92977301ca66551a45119619/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "606848a61ea6d303b2aa3d4cf01881a11971c0c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/606848a61ea6d303b2aa3d4cf01881a11971c0c1", "html_url": "https://github.com/rust-lang/rust/commit/606848a61ea6d303b2aa3d4cf01881a11971c0c1"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "dd1869fb01f099b2e2545633edc2d347b074c2ea", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5cc3593c17360edd92977301ca66551a45119619/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/5cc3593c17360edd92977301ca66551a45119619/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=5cc3593c17360edd92977301ca66551a45119619", "patch": "@@ -3686,6 +3686,7 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_symbol_mangling\",\n  \"rustc_target\",\n+ \"serde_json\",\n  \"smallvec\",\n  \"snap\",\n  \"tempfile\","}, {"sha": "fd8c4f78b2fc20fe98ed487de57b8c09025a99c4", "filename": "compiler/rustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5cc3593c17360edd92977301ca66551a45119619/compiler%2Frustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5cc3593c17360edd92977301ca66551a45119619/compiler%2Frustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2FCargo.toml?ref=5cc3593c17360edd92977301ca66551a45119619", "patch": "@@ -16,6 +16,7 @@ jobserver = \"0.1.22\"\n tempfile = \"3.2\"\n thorin-dwp = \"0.2\"\n pathdiff = \"0.2.0\"\n+serde_json = \"1.0.59\"\n snap = \"1\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n regex = \"1.4\""}, {"sha": "a24e4347839c7ac1ff42f85950d2516cf92256fc", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5cc3593c17360edd92977301ca66551a45119619/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc3593c17360edd92977301ca66551a45119619/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=5cc3593c17360edd92977301ca66551a45119619", "patch": "@@ -1146,24 +1146,17 @@ impl<'a> Linker for EmLinker<'a> {\n     }\n \n     fn export_symbols(&mut self, _tmpdir: &Path, _crate_type: CrateType, symbols: &[String]) {\n-        use std::fmt::Write;\n-\n         debug!(\"EXPORTED SYMBOLS:\");\n \n-        let mut encoded = \"[\".to_string();\n-        let mut symbols = symbols.iter();\n-        if let Some(first_symbol) = symbols.next() {\n-            write!(encoded, \"{:?}\", first_symbol).unwrap();\n-        }\n-        for symbol in symbols {\n-            write!(encoded, \",{:?}\", symbol).unwrap();\n-        }\n-        encoded.push(']');\n-        debug!(\"{}\", encoded);\n-\n         self.cmd.arg(\"-s\");\n \n         let mut arg = OsString::from(\"EXPORTED_FUNCTIONS=\");\n+        let encoded = serde_json::to_string(\n+            &symbols.iter().map(|sym| \"_\".to_owned() + sym).collect::<Vec<_>>(),\n+        )\n+        .unwrap();\n+        debug!(\"{}\", encoded);\n+\n         arg.push(encoded);\n \n         self.cmd.arg(arg);"}]}