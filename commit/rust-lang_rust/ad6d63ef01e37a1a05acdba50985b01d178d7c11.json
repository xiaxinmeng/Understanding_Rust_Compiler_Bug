{"sha": "ad6d63ef01e37a1a05acdba50985b01d178d7c11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNmQ2M2VmMDFlMzdhMWEwNWFjZGJhNTA5ODViMDFkMTc4ZDdjMTE=", "commit": {"author": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2020-07-26T13:31:58Z"}, "committer": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2020-07-28T06:30:32Z"}, "message": "Don't use \"weak count\" around Weak::from_raw_ptr\n\nAs `Rc/Arc::weak_count` returns 0 when having no strong counts, this\ncould be confusing and it's better to avoid using that completely.\n\nCloses #73840.", "tree": {"sha": "b66c2fb36135659a0850c1a9b2ad6d9b93b7da5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b66c2fb36135659a0850c1a9b2ad6d9b93b7da5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad6d63ef01e37a1a05acdba50985b01d178d7c11", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEQ8wy/3jh6tM0kr/e9wDQwBnkxm8FAl8fxggACgkQ9wDQwBnk\nxm+Cdw/+K4h7xeWjtw15JP4SGmFoGhAVGl/wDoyohWP78q939rZUQNgfH+3hToR2\np367AoAVWPqZiT9oRoRqGk27gTJq3o+E1QXU8oni041zrHt5zGIIDHk8Tt8BYI1U\nNeF4+IKxnzL6rHWqSz0cCw/s+B7JUgxS4d9pF5/baibFOKecqmNn28XfdupoyzON\nXcSuw8c1TIHUXkuCZpDoOMrEXTzitqICmJ/0yLys3IJVoQZbq+IaEPt4/Ze+97qd\nwQPEcNWAVrmxWIWVboBZkyusQZOypQNvxkvymZipiAECvHrAa1gg4GxOtmvKP5NJ\neoHKC/tgi8LwZ3kFnE6srdci9XMWYyaWlmAS2rAjSI0qMb4kQPofWsbu1DeqAt7f\njOO0FVaeS4Gn5MVC37yvcm8DeO2uzwPcSSneh6Rfh7gjoR3eCbwEuzmVqCER1xt0\nTOsXHw0Qc/2OVOD2ix2V/IfD7Ly5MaZpEQvxEnMwwYDBSb5aTbQiXMEG6UiVpxvq\nyZxZz9F6J3YD1APL9S4vOZUPLmu2JY1z9EdiSO/bzyv/4EJCYSrB/BmFexhE+bi6\nYpguwu0vkrErfIgf8NQIXpd679FwgfVjF6Vf0dy89JiqiB93lYPWkzvxPYBfueQ1\nfedGR91VpeltuUySHQXRVm/w7lzlEslgW7yyF4kzhsXLoJKwPH0=\n=0A06\n-----END PGP SIGNATURE-----", "payload": "tree b66c2fb36135659a0850c1a9b2ad6d9b93b7da5b\nparent 1454bbd4fdac9b7272b93fe82860613dccc0afad\nauthor Michal 'vorner' Vaner <vorner@vorner.cz> 1595770318 +0200\ncommitter Michal 'vorner' Vaner <vorner@vorner.cz> 1595917832 +0200\n\nDon't use \"weak count\" around Weak::from_raw_ptr\n\nAs `Rc/Arc::weak_count` returns 0 when having no strong counts, this\ncould be confusing and it's better to avoid using that completely.\n\nCloses #73840.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6d63ef01e37a1a05acdba50985b01d178d7c11", "html_url": "https://github.com/rust-lang/rust/commit/ad6d63ef01e37a1a05acdba50985b01d178d7c11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad6d63ef01e37a1a05acdba50985b01d178d7c11/comments", "author": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1454bbd4fdac9b7272b93fe82860613dccc0afad", "url": "https://api.github.com/repos/rust-lang/rust/commits/1454bbd4fdac9b7272b93fe82860613dccc0afad", "html_url": "https://github.com/rust-lang/rust/commit/1454bbd4fdac9b7272b93fe82860613dccc0afad"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "431672865dcc13661a7ad69054cd096c52b06e0f", "filename": "library/alloc/src/rc.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ad6d63ef01e37a1a05acdba50985b01d178d7c11/library%2Falloc%2Fsrc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad6d63ef01e37a1a05acdba50985b01d178d7c11/library%2Falloc%2Fsrc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Frc.rs?ref=ad6d63ef01e37a1a05acdba50985b01d178d7c11", "patch": "@@ -1715,8 +1715,9 @@ impl<T> Weak<T> {\n \n     /// Consumes the `Weak<T>` and turns it into a raw pointer.\n     ///\n-    /// This converts the weak pointer into a raw pointer, preserving the original weak count. It\n-    /// can be turned back into the `Weak<T>` with [`from_raw`].\n+    /// This converts the weak pointer into a raw pointer, while still preserving the ownership of\n+    /// one weak reference (the weak count is not modified by this operation). It can be turned\n+    /// back into the `Weak<T>` with [`from_raw`].\n     ///\n     /// The same restrictions of accessing the target of the pointer as with\n     /// [`as_ptr`] apply.\n@@ -1751,17 +1752,18 @@ impl<T> Weak<T> {\n     /// This can be used to safely get a strong reference (by calling [`upgrade`]\n     /// later) or to deallocate the weak count by dropping the `Weak<T>`.\n     ///\n-    /// It takes ownership of one weak count (with the exception of pointers created by [`new`],\n-    /// as these don't have any corresponding weak count).\n+    /// It takes ownership of one weak reference (with the exception of pointers created by [`new`],\n+    /// as these don't own anything; the method still works on them).\n     ///\n     /// # Safety\n     ///\n-    /// The pointer must have originated from the [`into_raw`]  and must still own its potential\n-    /// weak reference count.\n+    /// The pointer must have originated from the [`into_raw`] and must still own its potential\n+    /// weak reference.\n     ///\n-    /// It is allowed for the strong count to be 0 at the time of calling this, but the weak count\n-    /// must be non-zero or the pointer must have originated from a dangling `Weak<T>` (one created\n-    /// by [`new`]).\n+    /// It is allowed for the strong count to be 0 at the time of calling this. Nevertheless, this\n+    /// takes ownership of one weak reference currently represented as a raw pointer (the weak\n+    /// count is not modified by this operation) and therefore it must be paired with a previous\n+    /// call to [`into_raw`].\n     ///\n     /// # Examples\n     ///"}, {"sha": "a06dad77c4422d710f87e6951075b13ab7f3df65", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ad6d63ef01e37a1a05acdba50985b01d178d7c11/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad6d63ef01e37a1a05acdba50985b01d178d7c11/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=ad6d63ef01e37a1a05acdba50985b01d178d7c11", "patch": "@@ -1485,8 +1485,9 @@ impl<T> Weak<T> {\n \n     /// Consumes the `Weak<T>` and turns it into a raw pointer.\n     ///\n-    /// This converts the weak pointer into a raw pointer, preserving the original weak count. It\n-    /// can be turned back into the `Weak<T>` with [`from_raw`].\n+    /// This converts the weak pointer into a raw pointer, while still preserving the ownership of\n+    /// one weak reference (the weak count is not modified by this operation). It can be turned\n+    /// back into the `Weak<T>` with [`from_raw`].\n     ///\n     /// The same restrictions of accessing the target of the pointer as with\n     /// [`as_ptr`] apply.\n@@ -1516,24 +1517,23 @@ impl<T> Weak<T> {\n         result\n     }\n \n-    /// Converts a raw pointer previously created by [`into_raw`] back into\n-    /// `Weak<T>`.\n+    /// Converts a raw pointer previously created by [`into_raw`] back into `Weak<T>`.\n     ///\n     /// This can be used to safely get a strong reference (by calling [`upgrade`]\n     /// later) or to deallocate the weak count by dropping the `Weak<T>`.\n     ///\n-    /// It takes ownership of one weak count (with the exception of pointers created by [`new`],\n-    /// as these don't have any corresponding weak count).\n+    /// It takes ownership of one weak reference (with the exception of pointers created by [`new`],\n+    /// as these don't own anything; the method still works on them).\n     ///\n     /// # Safety\n     ///\n     /// The pointer must have originated from the [`into_raw`] and must still own its potential\n-    /// weak reference count.\n-    ///\n-    /// It is allowed for the strong count to be 0 at the time of calling this, but the weak count\n-    /// must be non-zero or the pointer must have originated from a dangling `Weak<T>` (one created\n-    /// by [`new`]).\n+    /// weak reference.\n     ///\n+    /// It is allowed for the strong count to be 0 at the time of calling this. Nevertheless, this\n+    /// takes ownership of one weak reference currently represented as a raw pointer (the weak\n+    /// count is not modified by this operation) and therefore it must be paired with a previous\n+    /// call to [`into_raw`].\n     /// # Examples\n     ///\n     /// ```"}]}