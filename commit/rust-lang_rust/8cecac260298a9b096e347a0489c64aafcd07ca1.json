{"sha": "8cecac260298a9b096e347a0489c64aafcd07ca1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZWNhYzI2MDI5OGE5YjA5NmUzNDdhMDQ4OWM2NGFhZmNkMDdjYTE=", "commit": {"author": {"name": "Katherine Philip", "email": "kurerunoshikaku@yahoo.com", "date": "2021-08-30T20:19:50Z"}, "committer": {"name": "Katherine Philip", "email": "kurerunoshikaku@yahoo.com", "date": "2021-08-30T20:20:11Z"}, "message": "Add test case for using `slice::fill` with MaybeUninit", "tree": {"sha": "d43f32c260a64bc92d3ff16eefcbfb47877bcb3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d43f32c260a64bc92d3ff16eefcbfb47877bcb3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cecac260298a9b096e347a0489c64aafcd07ca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cecac260298a9b096e347a0489c64aafcd07ca1", "html_url": "https://github.com/rust-lang/rust/commit/8cecac260298a9b096e347a0489c64aafcd07ca1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cecac260298a9b096e347a0489c64aafcd07ca1/comments", "author": {"login": "atsuzaki", "id": 16256974, "node_id": "MDQ6VXNlcjE2MjU2OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/16256974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atsuzaki", "html_url": "https://github.com/atsuzaki", "followers_url": "https://api.github.com/users/atsuzaki/followers", "following_url": "https://api.github.com/users/atsuzaki/following{/other_user}", "gists_url": "https://api.github.com/users/atsuzaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/atsuzaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atsuzaki/subscriptions", "organizations_url": "https://api.github.com/users/atsuzaki/orgs", "repos_url": "https://api.github.com/users/atsuzaki/repos", "events_url": "https://api.github.com/users/atsuzaki/events{/privacy}", "received_events_url": "https://api.github.com/users/atsuzaki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "atsuzaki", "id": 16256974, "node_id": "MDQ6VXNlcjE2MjU2OTc0", "avatar_url": "https://avatars.githubusercontent.com/u/16256974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atsuzaki", "html_url": "https://github.com/atsuzaki", "followers_url": "https://api.github.com/users/atsuzaki/followers", "following_url": "https://api.github.com/users/atsuzaki/following{/other_user}", "gists_url": "https://api.github.com/users/atsuzaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/atsuzaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atsuzaki/subscriptions", "organizations_url": "https://api.github.com/users/atsuzaki/orgs", "repos_url": "https://api.github.com/users/atsuzaki/repos", "events_url": "https://api.github.com/users/atsuzaki/events{/privacy}", "received_events_url": "https://api.github.com/users/atsuzaki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cfa773583bb5123e630668f5bfe466716225546", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfa773583bb5123e630668f5bfe466716225546", "html_url": "https://github.com/rust-lang/rust/commit/6cfa773583bb5123e630668f5bfe466716225546"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "a6c7794c150212dd5ddc22a1f5fe721c8c9510ca", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8cecac260298a9b096e347a0489c64aafcd07ca1/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cecac260298a9b096e347a0489c64aafcd07ca1/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=8cecac260298a9b096e347a0489c64aafcd07ca1", "patch": "@@ -2144,3 +2144,12 @@ fn test_slice_run_destructors() {\n \n     assert_eq!(x.get(), 1);\n }\n+\n+#[test]\n+fn test_slice_fill_with_uninit() {\n+    // This should not UB. See #87891\n+    use core::mem::MaybeUninit;\n+\n+    let mut a = [MaybeUninit::<u8>::uninit(); 10];\n+    a.fill(MaybeUninit::uninit());\n+}"}]}