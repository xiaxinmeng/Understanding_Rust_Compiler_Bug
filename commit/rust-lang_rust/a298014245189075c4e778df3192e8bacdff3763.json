{"sha": "a298014245189075c4e778df3192e8bacdff3763", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyOTgwMTQyNDUxODkwNzVjNGU3NzhkZjMxOTJlOGJhY2RmZjM3NjM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-15T22:26:15Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-18T17:32:38Z"}, "message": "Miscellaneous reformatttings and renamings.", "tree": {"sha": "3700a82f9066c6c3bbff05a442d38b14c6654a6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3700a82f9066c6c3bbff05a442d38b14c6654a6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a298014245189075c4e778df3192e8bacdff3763", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a298014245189075c4e778df3192e8bacdff3763", "html_url": "https://github.com/rust-lang/rust/commit/a298014245189075c4e778df3192e8bacdff3763", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a298014245189075c4e778df3192e8bacdff3763/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efef81e966a4e9b29dd37f690ab068ceb5447a1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/efef81e966a4e9b29dd37f690ab068ceb5447a1a", "html_url": "https://github.com/rust-lang/rust/commit/efef81e966a4e9b29dd37f690ab068ceb5447a1a"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "d7925177c29db8ed608dbeaf3edd8e1fbda8ec28", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=a298014245189075c4e778df3192e8bacdff3763", "patch": "@@ -65,8 +65,8 @@ pub type LoanDataFlow<'a, 'tcx> = DataFlowContext<'a, 'tcx, LoanDataFlowOperator\n \n impl<'a, 'tcx, 'v> Visitor<'v> for BorrowckCtxt<'a, 'tcx> {\n     fn visit_fn(&mut self, fk: FnKind<'v>, fd: &'v FnDecl,\n-                b: &'v Block, s: Span, n: NodeId) {\n-        borrowck_fn(self, fk, fd, b, s, n);\n+                b: &'v Block, s: Span, id: ast::NodeId) {\n+        borrowck_fn(self, fk, fd, b, s, id);\n     }\n \n     fn visit_item(&mut self, item: &ast::Item) {"}, {"sha": "c733084e9818a07a31fb615885ab70898a7021ae", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=a298014245189075c4e778df3192e8bacdff3763", "patch": "@@ -139,8 +139,8 @@ impl<'a, 'tcx, 'v> Visitor<'v> for MatchCheckCtxt<'a, 'tcx> {\n         check_local(self, l);\n     }\n     fn visit_fn(&mut self, fk: FnKind<'v>, fd: &'v FnDecl,\n-                b: &'v Block, s: Span, _: NodeId) {\n-        check_fn(self, fk, fd, b, s);\n+                b: &'v Block, s: Span, n: NodeId) {\n+        check_fn(self, fk, fd, b, s, n);\n     }\n }\n \n@@ -920,7 +920,8 @@ fn check_fn(cx: &mut MatchCheckCtxt,\n             kind: FnKind,\n             decl: &FnDecl,\n             body: &Block,\n-            sp: Span) {\n+            sp: Span,\n+            _: NodeId) {\n     visit::walk_fn(cx, kind, decl, body, sp);\n     for input in decl.inputs.iter() {\n         is_refutable(cx, &*input.pat, |pat| {"}, {"sha": "8604c3967a92602370d83e3d5b624a633272a754", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=a298014245189075c4e778df3192e8bacdff3763", "patch": "@@ -187,9 +187,8 @@ fn live_node_kind_to_string(lnk: LiveNodeKind, cx: &ty::ctxt) -> String {\n }\n \n impl<'a, 'tcx, 'v> Visitor<'v> for IrMaps<'a, 'tcx> {\n-    fn visit_fn(&mut self, fk: FnKind<'v>, fd: &'v FnDecl,\n-                b: &'v Block, s: Span, n: NodeId) {\n-        visit_fn(self, fk, fd, b, s, n);\n+    fn visit_fn(&mut self, fk: FnKind<'v>, fd: &'v FnDecl, b: &'v Block, s: Span, id: ast::NodeId) {\n+        visit_fn(self, fk, fd, b, s, id);\n     }\n     fn visit_local(&mut self, l: &ast::Local) { visit_local(self, l); }\n     fn visit_expr(&mut self, ex: &Expr) { visit_expr(self, ex); }\n@@ -374,9 +373,8 @@ fn visit_fn(ir: &mut IrMaps,\n             decl: &FnDecl,\n             body: &Block,\n             sp: Span,\n-            id: NodeId) {\n-    debug!(\"visit_fn: id={}\", id);\n-    let _i = ::util::common::indenter();\n+            id: ast::NodeId) {\n+    debug!(\"visit_fn\");\n \n     // swap in a new set of IR maps for this function body:\n     let mut fn_maps = IrMaps::new(ir.tcx);"}, {"sha": "c9410d753ae6abd53cbc367d392aad14e281f1f1", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a298014245189075c4e778df3192e8bacdff3763/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=a298014245189075c4e778df3192e8bacdff3763", "patch": "@@ -1095,7 +1095,7 @@ impl<'l, 'tcx, 'v> Visitor<'v> for DxrVisitor<'l, 'tcx> {\n                 fd: &'v ast::FnDecl,\n                 b: &'v ast::Block,\n                 s: Span,\n-                _: NodeId) {\n+                _: ast::NodeId) {\n         if generated_code(s) {\n             return;\n         }"}]}