{"sha": "60ca55cbdaaea86efb06ec5346f65bfa15552be8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwY2E1NWNiZGFhZWE4NmVmYjA2ZWM1MzQ2ZjY1YmZhMTU1NTJiZTg=", "commit": {"author": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-20T16:49:34Z"}, "committer": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-20T18:57:45Z"}, "message": "normalize use of backticks in compiler messages for librustc_incremental\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "860541c5df5dc10ff882b126a0eba86ae3d7bf04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/860541c5df5dc10ff882b126a0eba86ae3d7bf04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60ca55cbdaaea86efb06ec5346f65bfa15552be8", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEExrhwoK6DmrCETV5+4ilOki9MVuUFAl0zZCkACgkQ4ilOki9M\nVuWHUwv/RfF67S0B936gzIw3zp+kxa1wSLSflkJOu40EspvE85tyJHdMeP4yYGyo\nnbWOYrgnuGoG+9vXHdwHzOSN/w2VBQNTUWKOr9VAGWYX6g8VZqkeeep3oO2zAGJx\nBk7RuPkTrpUh/QLnOs/UxKJK6alxKTjkqhmb4UnOq43bKS7HFagN/w/fC8kY7E/v\niDZPJ71+21PUPL79wy+jwchXM1dO+20XlNG3zMWCxBHJsY0y8L8/PsdemKM7whDR\nDdLBjYWO82/BfrenO11XRvL9FlAxu63FHshnDLQG34MH+faBHaplGU8JZyQpCYyt\nbhQrU0Aj7gKL5xpQq/DI6fG5nDGUerpBw7nd0qh7K1e8L5xZsu3IWXHIu5lZaKY2\nSJXFZpicajH5KtyPApUwneReIMaeIgedBPjOUtWB93HaX9t2LVNY479bNSgAbZqz\nXzXXOHXb7rolKrcuRaM28csGenh9SG8pnVT7Ei2DkAPrjjrnPIe/2DpiJwz42lmZ\nY4LqDxtk\n=J0L3\n-----END PGP SIGNATURE-----", "payload": "tree 860541c5df5dc10ff882b126a0eba86ae3d7bf04\nparent 95b1fe560d2bd8472f250fb8cfd2168520a58405\nauthor Samy Kacimi <samy.kacimi@protonmail.ch> 1563641374 +0200\ncommitter Samy Kacimi <samy.kacimi@protonmail.ch> 1563649065 +0200\n\nnormalize use of backticks in compiler messages for librustc_incremental\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60ca55cbdaaea86efb06ec5346f65bfa15552be8", "html_url": "https://github.com/rust-lang/rust/commit/60ca55cbdaaea86efb06ec5346f65bfa15552be8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60ca55cbdaaea86efb06ec5346f65bfa15552be8/comments", "author": null, "committer": null, "parents": [{"sha": "95b1fe560d2bd8472f250fb8cfd2168520a58405", "url": "https://api.github.com/repos/rust-lang/rust/commits/95b1fe560d2bd8472f250fb8cfd2168520a58405", "html_url": "https://github.com/rust-lang/rust/commit/95b1fe560d2bd8472f250fb8cfd2168520a58405"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "07d426af6ee959f707c8f6f29f24400fda8664d3", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=60ca55cbdaaea86efb06ec5346f65bfa15552be8", "patch": "@@ -190,7 +190,7 @@ fn check_paths<'tcx>(tcx: TyCtxt<'tcx>, if_this_changed: &Sources, then_this_wou\n         for &(target_span, _, _, _) in then_this_would_need {\n             tcx.sess.span_err(\n                 target_span,\n-                \"no #[rustc_if_this_changed] annotation detected\");\n+                \"no `#[rustc_if_this_changed]` annotation detected\");\n \n         }\n         return;"}, {"sha": "aa98ebae543a3db202ae41e890762f7ee55d7f2c", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=60ca55cbdaaea86efb06ec5346f65bfa15552be8", "patch": "@@ -610,7 +610,7 @@ impl FindAllAttrs<'tcx> {\n         for attr in &self.found_attrs {\n             if !checked_attrs.contains(&attr.id) {\n                 self.tcx.sess.span_err(attr.span, &format!(\"found unchecked \\\n-                    #[rustc_dirty]/#[rustc_clean] attribute\"));\n+                    `#[rustc_dirty]` / `#[rustc_clean]` attribute\"));\n             }\n         }\n     }"}, {"sha": "0ab67af613bd7ad90bf3d2976fd0477e6d654733", "filename": "src/librustc_incremental/persist/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs?ref=60ca55cbdaaea86efb06ec5346f65bfa15552be8", "patch": "@@ -538,7 +538,7 @@ fn find_source_directory_in_iter<I>(iter: I,\n         if source_directories_already_tried.contains(&session_dir) ||\n            !is_session_directory(&directory_name) ||\n            !is_finalized(&directory_name) {\n-            debug!(\"find_source_directory_in_iter - ignoring.\");\n+            debug!(\"find_source_directory_in_iter - ignoring\");\n             continue\n         }\n \n@@ -693,7 +693,7 @@ pub fn garbage_collect_session_directories(sess: &Session) -> io::Result<()> {\n             let timestamp = match extract_timestamp_from_session_dir(lock_file_name) {\n                 Ok(timestamp) => timestamp,\n                 Err(()) => {\n-                    debug!(\"Found lock-file with malformed timestamp: {}\",\n+                    debug!(\"found lock-file with malformed timestamp: {}\",\n                         crate_directory.join(&lock_file_name).display());\n                     // Ignore it\n                     continue\n@@ -746,7 +746,7 @@ pub fn garbage_collect_session_directories(sess: &Session) -> io::Result<()> {\n         let timestamp = match extract_timestamp_from_session_dir(directory_name) {\n             Ok(timestamp) => timestamp,\n             Err(()) => {\n-                debug!(\"Found session-dir with malformed timestamp: {}\",\n+                debug!(\"found session-dir with malformed timestamp: {}\",\n                         crate_directory.join(directory_name).display());\n                 // Ignore it\n                 continue"}, {"sha": "66bdb670167eda2c90e52961364125be44eb0778", "filename": "src/test/incremental/unchecked_dirty_clean.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Ftest%2Fincremental%2Funchecked_dirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ca55cbdaaea86efb06ec5346f65bfa15552be8/src%2Ftest%2Fincremental%2Funchecked_dirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Funchecked_dirty_clean.rs?ref=60ca55cbdaaea86efb06ec5346f65bfa15552be8", "patch": "@@ -11,24 +11,24 @@\n fn main() {\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    //[cfail2]~^ ERROR found unchecked #[rustc_dirty]/#[rustc_clean] attribute\n+    //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     {\n         // empty block\n     }\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    //[cfail2]~^ ERROR found unchecked #[rustc_dirty]/#[rustc_clean] attribute\n+    //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     {\n         // empty block\n     }\n }\n \n struct _Struct {\n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    //[cfail2]~^ ERROR found unchecked #[rustc_dirty]/#[rustc_clean] attribute\n+    //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     _field1: i32,\n \n     #[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-    //[cfail2]~^ ERROR found unchecked #[rustc_dirty]/#[rustc_clean] attribute\n+    //[cfail2]~^ ERROR found unchecked `#[rustc_dirty]` / `#[rustc_clean]` attribute\n     _field2: i32,\n }"}]}