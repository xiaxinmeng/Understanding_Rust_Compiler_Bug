{"sha": "bc59f83f02d8350c84fed9ce47a910f651d8a48d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNTlmODNmMDJkODM1MGM4NGZlZDljZTQ3YTkxMGY2NTFkOGE0OGQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-27T06:30:32Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-27T06:34:35Z"}, "message": "Use max width for function decls, etc.\n\nWe were using ideal width + leeway before. This means we can remove leeway from the config. We could remove ideal_width too, but I want to use it for comments.", "tree": {"sha": "27f27fae3ec722bd83f620d0888a2059ad8a2350", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27f27fae3ec722bd83f620d0888a2059ad8a2350"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc59f83f02d8350c84fed9ce47a910f651d8a48d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc59f83f02d8350c84fed9ce47a910f651d8a48d", "html_url": "https://github.com/rust-lang/rust/commit/bc59f83f02d8350c84fed9ce47a910f651d8a48d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc59f83f02d8350c84fed9ce47a910f651d8a48d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "224eecce5078b54771906da85788b4b836deea0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/224eecce5078b54771906da85788b4b836deea0e", "html_url": "https://github.com/rust-lang/rust/commit/224eecce5078b54771906da85788b4b836deea0e"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "b21fe3d2a076c90f2236e5658715a60335b467e0", "filename": "src/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc59f83f02d8350c84fed9ce47a910f651d8a48d/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc59f83f02d8350c84fed9ce47a910f651d8a48d/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=bc59f83f02d8350c84fed9ce47a910f651d8a48d", "patch": "@@ -216,7 +216,6 @@ macro_rules! create_config {\n create_config! {\n     max_width: usize, \"Maximum width of each line\",\n     ideal_width: usize, \"Ideal width of each line (only used for comments)\",\n-    leeway: usize, \"Leeway of line width (deprecated)\",\n     tab_spaces: usize, \"Number of spaces per tab\",\n     fn_call_width: usize, \"Maximum width of the args of a function call\\\n                            before faling back to vertical formatting\",\n@@ -258,7 +257,6 @@ impl Default for Config {\n         Config {\n             max_width: 100,\n             ideal_width: 80,\n-            leeway: 5,\n             tab_spaces: 4,\n             fn_call_width: 50,\n             struct_lit_width: 12,"}, {"sha": "13e06d0b438c0309fccb0c5562f55bd5e3c9c307", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bc59f83f02d8350c84fed9ce47a910f651d8a48d/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc59f83f02d8350c84fed9ce47a910f651d8a48d/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=bc59f83f02d8350c84fed9ce47a910f651d8a48d", "patch": "@@ -528,7 +528,7 @@ impl<'a> FmtVisitor<'a> {\n \n             // 2 = `()`\n             let used_space = indent.width() + result.len() + 2;\n-            let max_space = self.config.ideal_width + self.config.leeway;\n+            let max_space = self.config.max_width;\n             debug!(\"compute_budgets_for_args: used_space: {}, max_space: {}\",\n                    used_space,\n                    max_space);\n@@ -542,7 +542,7 @@ impl<'a> FmtVisitor<'a> {\n         // Didn't work. we must force vertical layout and put args on a newline.\n         let new_indent = indent.block_indent(self.config);\n         let used_space = new_indent.width() + 2; // account for `(` and `)`\n-        let max_space = self.config.ideal_width + self.config.leeway;\n+        let max_space = self.config.max_width;\n         if used_space <= max_space {\n             (0, max_space - used_space, new_indent)\n         } else {\n@@ -637,7 +637,7 @@ impl<'a> FmtVisitor<'a> {\n                     } else {\n                         0\n                     };\n-                    let budget = self.config.ideal_width - indent.width() - comma_cost - 1; // 1 = )\n+                    let budget = self.config.max_width - indent.width() - comma_cost - 1; // 1 = )\n \n                     let fmt = ListFormatting {\n                         tactic: ListTactic::HorizontalVertical,\n@@ -774,7 +774,7 @@ impl<'a> FmtVisitor<'a> {\n         };\n \n         // 1 = ,\n-        let budget = self.config.ideal_width - offset.width() + self.config.tab_spaces - 1;\n+        let budget = self.config.max_width - offset.width() + self.config.tab_spaces - 1;\n         let fmt = ListFormatting {\n             tactic: tactic,\n             separator: \",\",\n@@ -979,7 +979,7 @@ impl<'a> FmtVisitor<'a> {\n         // FIXME: if where_pred_indent != Visual, then the budgets below might\n         // be out by a char or two.\n \n-        let budget = self.config.ideal_width + self.config.leeway - offset.width();\n+        let budget = self.config.max_width - offset.width();\n         let span_start = span_for_where_pred(&where_clause.predicates[0]).lo;\n         let items = itemize_list(self.codemap,\n                                  where_clause.predicates.iter(),"}, {"sha": "1681aff77b4b42233207210df27f35fbcce84dd5", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc59f83f02d8350c84fed9ce47a910f651d8a48d/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bc59f83f02d8350c84fed9ce47a910f651d8a48d/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=bc59f83f02d8350c84fed9ce47a910f651d8a48d", "patch": "@@ -1,6 +1,5 @@\n max_width = 100\n ideal_width = 80\n-leeway = 5\n tab_spaces = 2\n newline_style = \"Unix\"\n fn_brace_style = \"SameLineWhere\""}]}