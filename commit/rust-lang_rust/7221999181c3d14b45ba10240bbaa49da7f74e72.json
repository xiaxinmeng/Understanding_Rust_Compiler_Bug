{"sha": "7221999181c3d14b45ba10240bbaa49da7f74e72", "node_id": "C_kwDOAAsO6NoAKDcyMjE5OTkxODFjM2QxNGI0NWJhMTAyNDBiYmFhNDlkYTdmNzRlNzI", "commit": {"author": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-10-20T20:04:56Z"}, "committer": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-11-20T08:40:11Z"}, "message": "Add tests with closure", "tree": {"sha": "77c2751d8e82de61d1bdacb1f8c11dcc73166039", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77c2751d8e82de61d1bdacb1f8c11dcc73166039"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7221999181c3d14b45ba10240bbaa49da7f74e72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7221999181c3d14b45ba10240bbaa49da7f74e72", "html_url": "https://github.com/rust-lang/rust/commit/7221999181c3d14b45ba10240bbaa49da7f74e72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7221999181c3d14b45ba10240bbaa49da7f74e72/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abaaf744fdbe8106bc82ceaa34e8499d5436fc3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/abaaf744fdbe8106bc82ceaa34e8499d5436fc3c", "html_url": "https://github.com/rust-lang/rust/commit/abaaf744fdbe8106bc82ceaa34e8499d5436fc3c"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "72f335153c1b1282ec812f1fe09b56d6f97a2e48", "filename": "tests/ui/search_is_some.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7221999181c3d14b45ba10240bbaa49da7f74e72/tests%2Fui%2Fsearch_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7221999181c3d14b45ba10240bbaa49da7f74e72/tests%2Fui%2Fsearch_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some.rs?ref=7221999181c3d14b45ba10240bbaa49da7f74e72", "patch": "@@ -36,6 +36,9 @@ fn main() {\n     // check that we don't lint if `find()` is called with\n     // `Pattern` that is not a string\n     let _ = \"hello world\".find(|c: char| c == 'o' || c == 'l').is_some();\n+\n+    let some_closure = |x: &u32| *x == 0;\n+    let _ = (0..1).find(some_closure).is_some();\n }\n \n #[rustfmt::skip]\n@@ -70,4 +73,7 @@ fn is_none() {\n     // check that we don't lint if `find()` is called with\n     // `Pattern` that is not a string\n     let _ = \"hello world\".find(|c: char| c == 'o' || c == 'l').is_none();\n+\n+    let some_closure = |x: &u32| *x == 0;\n+    let _ = (0..1).find(some_closure).is_none();\n }"}, {"sha": "54760545bcedc38cfc536fc63ea90b305048a1a4", "filename": "tests/ui/search_is_some.stderr", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7221999181c3d14b45ba10240bbaa49da7f74e72/tests%2Fui%2Fsearch_is_some.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7221999181c3d14b45ba10240bbaa49da7f74e72/tests%2Fui%2Fsearch_is_some.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some.stderr?ref=7221999181c3d14b45ba10240bbaa49da7f74e72", "patch": "@@ -35,8 +35,14 @@ LL | |                    ).is_some();\n    |\n    = help: this is more succinctly expressed by calling `any()`\n \n+error: called `is_some()` after searching an `Iterator` with `find`\n+  --> $DIR/search_is_some.rs:41:20\n+   |\n+LL |     let _ = (0..1).find(some_closure).is_some();\n+   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(some_closure)`\n+\n error: called `is_none()` after searching an `Iterator` with `find`\n-  --> $DIR/search_is_some.rs:48:13\n+  --> $DIR/search_is_some.rs:51:13\n    |\n LL |       let _ = v.iter().find(|&x| {\n    |  _____________^\n@@ -48,7 +54,7 @@ LL | |                    ).is_none();\n    = help: this is more succinctly expressed by calling `any()` with negation\n \n error: called `is_none()` after searching an `Iterator` with `position`\n-  --> $DIR/search_is_some.rs:54:13\n+  --> $DIR/search_is_some.rs:57:13\n    |\n LL |       let _ = v.iter().position(|&x| {\n    |  _____________^\n@@ -60,7 +66,7 @@ LL | |                    ).is_none();\n    = help: this is more succinctly expressed by calling `any()` with negation\n \n error: called `is_none()` after searching an `Iterator` with `rposition`\n-  --> $DIR/search_is_some.rs:60:13\n+  --> $DIR/search_is_some.rs:63:13\n    |\n LL |       let _ = v.iter().rposition(|&x| {\n    |  _____________^\n@@ -71,5 +77,11 @@ LL | |                    ).is_none();\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n \n-error: aborting due to 6 previous errors\n+error: called `is_none()` after searching an `Iterator` with `find`\n+  --> $DIR/search_is_some.rs:78:13\n+   |\n+LL |     let _ = (0..1).find(some_closure).is_none();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!(0..1).any(some_closure)`\n+\n+error: aborting due to 8 previous errors\n "}]}