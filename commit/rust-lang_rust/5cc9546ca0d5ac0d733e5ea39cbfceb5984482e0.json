{"sha": "5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYzk1NDZjYTBkNWFjMGQ3MzNlNWVhMzljYmZjZWI1OTg0NDgyZTA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-23T21:10:14Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-23T21:36:23Z"}, "message": "Record definitions in `extern` blocks", "tree": {"sha": "66951b8c9030eea90f3d335f7c70fc0444987583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66951b8c9030eea90f3d335f7c70fc0444987583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "html_url": "https://github.com/rust-lang/rust/commit/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "189ac4abbf6037419cb195c0a36a179544496ced", "url": "https://api.github.com/repos/rust-lang/rust/commits/189ac4abbf6037419cb195c0a36a179544496ced", "html_url": "https://github.com/rust-lang/rust/commit/189ac4abbf6037419cb195c0a36a179544496ced"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "39b011ad724c53c08e1c7aea56c9bb803553a22e", "filename": "crates/ra_hir_def/src/nameres/raw.rs", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fraw.rs?ref=5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "patch": "@@ -266,8 +266,8 @@ impl RawItemsCollector {\n                 self.add_macro(current_module, it);\n                 return;\n             }\n-            ast::ModuleItem::ExternBlock(_) => {\n-                // FIXME: add extern block\n+            ast::ModuleItem::ExternBlock(it) => {\n+                self.add_extern_block(current_module, it);\n                 return;\n             }\n         };\n@@ -278,6 +278,34 @@ impl RawItemsCollector {\n         }\n     }\n \n+    fn add_extern_block(\n+        &mut self,\n+        current_module: Option<Idx<ModuleData>>,\n+        block: ast::ExternBlock,\n+    ) {\n+        if let Some(items) = block.extern_item_list() {\n+            for item in items.extern_items() {\n+                let attrs = self.parse_attrs(&item);\n+                let visibility =\n+                    RawVisibility::from_ast_with_hygiene(item.visibility(), &self.hygiene);\n+                let (kind, name) = match item {\n+                    ast::ExternItem::FnDef(it) => {\n+                        (DefKind::Function(self.source_ast_id_map.ast_id(&it)), it.name())\n+                    }\n+                    ast::ExternItem::StaticDef(it) => {\n+                        (DefKind::Static(self.source_ast_id_map.ast_id(&it)), it.name())\n+                    }\n+                };\n+\n+                if let Some(name) = name {\n+                    let name = name.as_name();\n+                    let def = self.raw_items.defs.alloc(DefData { name, kind, visibility });\n+                    self.push_item(current_module, attrs, RawItemKind::Def(def));\n+                }\n+            }\n+        }\n+    }\n+\n     fn add_module(&mut self, current_module: Option<Idx<ModuleData>>, module: ast::Module) {\n         let name = match module.name() {\n             Some(it) => it.as_name(),"}, {"sha": "83120fa365d68dabc9c824aeec4c907df02cf6f0", "filename": "crates/ra_hir_def/src/nameres/tests.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs?ref=5cc9546ca0d5ac0d733e5ea39cbfceb5984482e0", "patch": "@@ -25,7 +25,7 @@ fn compute_crate_def_map(fixture: &str) -> Arc<CrateDefMap> {\n #[test]\n fn crate_def_map_smoke_test() {\n     let map = def_map(\n-        \"\n+        r\"\n         //- /lib.rs\n         mod foo;\n         struct S;\n@@ -45,6 +45,11 @@ fn crate_def_map_smoke_test() {\n         }\n \n         enum E { V }\n+\n+        extern {\n+            static EXT: u8;\n+            fn ext();\n+        }\n         \",\n     );\n     assert_snapshot!(map, @r###\"\n@@ -61,7 +66,9 @@ fn crate_def_map_smoke_test() {\n         \u22eecrate::foo::bar\n         \u22eeBaz: t v\n         \u22eeE: t\n+        \u22eeEXT: v\n         \u22eeU: t v\n+        \u22eeext: v\n     \"###)\n }\n "}]}