{"sha": "480ea5ac55d99b9cf52f4df157a532005cd3ed75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MGVhNWFjNTVkOTliOWNmNTJmNGRmMTU3YTUzMjAwNWNkM2VkNzU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-16T13:41:33Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-16T13:44:17Z"}, "message": "Update `core::cell` for `isize/usize` transition.", "tree": {"sha": "6a0c9d0b4de95835cd3abe3fb16ad1248a8ed49d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a0c9d0b4de95835cd3abe3fb16ad1248a8ed49d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/480ea5ac55d99b9cf52f4df157a532005cd3ed75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/480ea5ac55d99b9cf52f4df157a532005cd3ed75", "html_url": "https://github.com/rust-lang/rust/commit/480ea5ac55d99b9cf52f4df157a532005cd3ed75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/480ea5ac55d99b9cf52f4df157a532005cd3ed75/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a97588c34b1d7aa442706ce2cf7a66375f695c6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a97588c34b1d7aa442706ce2cf7a66375f695c6b", "html_url": "https://github.com/rust-lang/rust/commit/a97588c34b1d7aa442706ce2cf7a66375f695c6b"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "5d351adfca06ba0f6589b938d56cc68f0975e3a9", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/480ea5ac55d99b9cf52f4df157a532005cd3ed75/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/480ea5ac55d99b9cf52f4df157a532005cd3ed75/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=480ea5ac55d99b9cf52f4df157a532005cd3ed75", "patch": "@@ -78,12 +78,12 @@\n //! use std::cell::RefCell;\n //!\n //! struct Graph {\n-//!     edges: Vec<(uint, uint)>,\n-//!     span_tree_cache: RefCell<Option<Vec<(uint, uint)>>>\n+//!     edges: Vec<(i32, i32)>,\n+//!     span_tree_cache: RefCell<Option<Vec<(i32, i32)>>>\n //! }\n //!\n //! impl Graph {\n-//!     fn minimum_spanning_tree(&self) -> Vec<(uint, uint)> {\n+//!     fn minimum_spanning_tree(&self) -> Vec<(i32, i32)> {\n //!         // Create a new scope to contain the lifetime of the\n //!         // dynamic borrow\n //!         {\n@@ -104,7 +104,7 @@\n //!         // This is the major hazard of using `RefCell`.\n //!         self.minimum_spanning_tree()\n //!     }\n-//! #   fn calc_span_tree(&self) -> Vec<(uint, uint)> { vec![] }\n+//! #   fn calc_span_tree(&self) -> Vec<(i32, i32)> { vec![] }\n //! }\n //! ```\n //!\n@@ -125,7 +125,7 @@\n //!\n //! struct RcBox<T> {\n //!     value: T,\n-//!     refcount: Cell<uint>\n+//!     refcount: Cell<usize>\n //! }\n //!\n //! impl<T> Clone for Rc<T> {\n@@ -279,8 +279,8 @@ pub enum BorrowState {\n }\n \n // Values [1, MAX-1] represent the number of `Ref` active\n-// (will not outgrow its range since `uint` is the size of the address space)\n-type BorrowFlag = uint;\n+// (will not outgrow its range since `usize` is the size of the address space)\n+type BorrowFlag = usize;\n const UNUSED: BorrowFlag = 0;\n const WRITING: BorrowFlag = -1;\n "}]}