{"sha": "b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MDhjZmJiNzRhNmQ5ZWUwMWQyMmExNzU0ZjhkZGZlMzAyMmIxZTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-02T23:50:00Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-02T23:51:05Z"}, "message": "rustc: Don't translate the expression twice when adapting a borrowed method receiver. Closes #3357.\n\nAdds a test case. I had to stare at this one for a bit.", "tree": {"sha": "ac829ca2cb540660d7f39148415f3e66960e013d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac829ca2cb540660d7f39148415f3e66960e013d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5", "html_url": "https://github.com/rust-lang/rust/commit/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49c9ac175f07505f2113feaca3546d4b8b44dfa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/49c9ac175f07505f2113feaca3546d4b8b44dfa8", "html_url": "https://github.com/rust-lang/rust/commit/49c9ac175f07505f2113feaca3546d4b8b44dfa8"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "49d626cce96de5b7b974c1ddd6867ac1f9fefa4d", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5", "patch": "@@ -3151,6 +3151,9 @@ fn trans_arg_expr(cx: block, arg: ty::arg, lldestty: TypeRef, e: @ast::expr,\n // routine consults this table and performs these adaptations.  It returns a\n // new location for the borrowed result as well as a new type for the argument\n // that reflects the borrowed value and not the original.\n+//\n+// NB: \"e\" has already been translated; do not translate it again. If you do,\n+// this will cause problems with autoderef and method receivers (bug #3357).\n fn adapt_borrowed_value(lv: lval_result,\n                         e: @ast::expr,\n                         e_ty: ty::t) -> {lv: lval_result,\n@@ -3200,7 +3203,7 @@ fn adapt_borrowed_value(lv: lval_result,\n \n       _ => {\n         // Just take a reference. This is basically like trans_addr_of.\n-        let mut {bcx, val, kind} = trans_temp_lval(bcx, e);\n+        let mut {bcx, val, kind} = lv;\n         let is_immediate = ty::type_is_immediate(e_ty);\n         if (kind == lv_temporary && is_immediate) || kind == lv_owned_imm {\n             val = do_spill(bcx, val, e_ty);"}, {"sha": "b3dc032f0bff282c2c66fb2f5e942cef1ea1e913", "filename": "src/rustc/middle/typeck/check/method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5", "patch": "@@ -183,6 +183,7 @@ struct lookup {\n             match ty::deref(self.tcx(), self.self_ty, false) {\n               None => break,\n               Some(mt) => {\n+                debug!(\"(checking method) ... autodereffing\");\n                 self.self_ty = mt.ty;\n                 self.derefs += 1u;\n               }"}, {"sha": "d8cdb109b6dbf26f6724ccad4b815a7813893774", "filename": "src/test/run-pass/autoderef-and-borrow-method-receiver.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5/src%2Ftest%2Frun-pass%2Fautoderef-and-borrow-method-receiver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5/src%2Ftest%2Frun-pass%2Fautoderef-and-borrow-method-receiver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-and-borrow-method-receiver.rs?ref=b808cfbb74a6d9ee01d22a1754f8ddfe3022b1e5", "patch": "@@ -0,0 +1,15 @@\n+struct Foo {\n+    x: int;\n+}\n+\n+impl Foo {\n+    fn f(&self) {}\n+}\n+\n+fn g(x: &mut Foo) {\n+    x.f();\n+}\n+\n+fn main() {\n+}\n+"}]}