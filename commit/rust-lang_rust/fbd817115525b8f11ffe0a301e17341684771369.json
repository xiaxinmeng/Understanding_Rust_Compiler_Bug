{"sha": "fbd817115525b8f11ffe0a301e17341684771369", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZDgxNzExNTUyNWI4ZjExZmZlMGEzMDFlMTczNDE2ODQ3NzEzNjk=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-31T13:07:18Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-02-24T19:05:25Z"}, "message": "Add some tests for dynamic dropping", "tree": {"sha": "1448636937ae2ff4e5e6acefbddf94fd16547f5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1448636937ae2ff4e5e6acefbddf94fd16547f5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbd817115525b8f11ffe0a301e17341684771369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbd817115525b8f11ffe0a301e17341684771369", "html_url": "https://github.com/rust-lang/rust/commit/fbd817115525b8f11ffe0a301e17341684771369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbd817115525b8f11ffe0a301e17341684771369/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba26efb60c9e11ab058a1c31b9816147c55ab417", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba26efb60c9e11ab058a1c31b9816147c55ab417", "html_url": "https://github.com/rust-lang/rust/commit/ba26efb60c9e11ab058a1c31b9816147c55ab417"}], "stats": {"total": 123, "additions": 123, "deletions": 0}, "files": [{"sha": "f3c2eafde2459517922fcd57f9dcfcc9b6fca854", "filename": "src/test/run-fail/mir_dynamic_drops_1.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/fbd817115525b8f11ffe0a301e17341684771369/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd817115525b8f11ffe0a301e17341684771369/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_1.rs?ref=fbd817115525b8f11ffe0a301e17341684771369", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(rustc_attrs)]\n+// error-pattern:drop 1\n+// error-pattern:drop 2\n+use std::io::{self, Write};\n+\n+\n+/// Structure which will not allow to be dropped twice.\n+struct Droppable(bool, u32);\n+impl Drop for Droppable {\n+    fn drop(&mut self) {\n+        if self.0 {\n+            writeln!(io::stderr(), \"{} dropped twice\", self.1);\n+            ::std::process::exit(1);\n+        }\n+        writeln!(io::stderr(), \"drop {}\", self.1);\n+        self.0 = true;\n+    }\n+}\n+\n+#[rustc_mir]\n+fn mir(){\n+    let x = Droppable(false, 1);\n+    let y = Droppable(false, 2);\n+    let mut z = x;\n+    let k = y;\n+    z = k;\n+}\n+\n+fn main() {\n+    mir();\n+    panic!();\n+}"}, {"sha": "ada04dfce647114dc59edfb730906c4f10b9dadb", "filename": "src/test/run-fail/mir_dynamic_drops_2.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/fbd817115525b8f11ffe0a301e17341684771369/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd817115525b8f11ffe0a301e17341684771369/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_2.rs?ref=fbd817115525b8f11ffe0a301e17341684771369", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(rustc_attrs)]\n+// error-pattern:drop 1\n+use std::io::{self, Write};\n+\n+\n+/// Structure which will not allow to be dropped twice.\n+struct Droppable(bool, u32);\n+impl Drop for Droppable {\n+    fn drop(&mut self) {\n+        if self.0 {\n+            writeln!(io::stderr(), \"{} dropped twice\", self.1);\n+            ::std::process::exit(1);\n+        }\n+        writeln!(io::stderr(), \"drop {}\", self.1);\n+        self.0 = true;\n+    }\n+}\n+\n+#[rustc_mir]\n+fn mir(d: Droppable){\n+    loop {\n+        let x = d;\n+        break;\n+    }\n+}\n+\n+fn main() {\n+    mir(Droppable(false, 1));\n+    panic!();\n+}"}, {"sha": "cfbfb075954624618cb48b4cf16946e21ac13d2c", "filename": "src/test/run-fail/mir_dynamic_drops_3.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/fbd817115525b8f11ffe0a301e17341684771369/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbd817115525b8f11ffe0a301e17341684771369/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmir_dynamic_drops_3.rs?ref=fbd817115525b8f11ffe0a301e17341684771369", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(rustc_attrs)]\n+// error-pattern:unwind happens\n+// error-pattern:drop 3\n+// error-pattern:drop 2\n+// error-pattern:drop 1\n+use std::io::{self, Write};\n+\n+\n+/// Structure which will not allow to be dropped twice.\n+struct Droppable(bool, u32);\n+impl Drop for Droppable {\n+    fn drop(&mut self) {\n+        if self.0 {\n+            writeln!(io::stderr(), \"{} dropped twice\", self.1);\n+            ::std::process::exit(1);\n+        }\n+        writeln!(io::stderr(), \"drop {}\", self.1);\n+        self.0 = true;\n+    }\n+}\n+\n+fn may_panic() -> Droppable {\n+    panic!(\"unwind happens\");\n+}\n+\n+#[rustc_mir]\n+fn mir(d: Droppable){\n+    let y = Droppable(false, 2);\n+    let x = [Droppable(false, 1), y, d, may_panic()];\n+}\n+\n+fn main() {\n+    mir(Droppable(false, 3));\n+}"}]}