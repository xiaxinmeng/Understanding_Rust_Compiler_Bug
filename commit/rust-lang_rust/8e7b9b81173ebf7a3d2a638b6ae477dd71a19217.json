{"sha": "8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlN2I5YjgxMTczZWJmN2EzZDJhNjM4YjZhZTQ3N2RkNzFhMTkyMTc=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-09T12:37:27Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-08-14T09:12:10Z"}, "message": "Suggested trait implementation ordering is now deterministic.", "tree": {"sha": "a52dab4e350d26e3f865b4696e4027af48998735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a52dab4e350d26e3f865b4696e4027af48998735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAltynOoACgkQAXYLT59T\n8VSguw//R2ufWxukgB3ZvppNe0pdEr/Egkxvvast1Ng2fyrO/yp45qXcC/gzOOWg\nGAQzQ6RUPSXQwcYBvE7Ta3r74D8QPIKarbUQYkkkgwrcO5aIqNcetWxYAeJhu2M0\nXXrnUKyJyg572snGXYQXekVXlTqofxxTcYcxggaom6zWbvvRgFuZnMX0lKcfuqNU\ndSM5zKUCk0ybeuiNXtTl3KV1+amJpSZpmA4mP1FWjHRkP4OCKycNSobCSJ7sbXXE\nMtG977s2/Sn8Y5+vuVTSDhJ6AUlVq2OT4jQQge1Oju46CPvyk1MGh+0+hwgn2o/D\nHUmWMfweCQVnlt+2+uvWr2MZW+mJL3o7PDMGEG3mqGSDEnuAGEWlWirauI8fnhky\nFp6lCuboXF8IDJLeVmueZDddpB4uD4xf1QQ4YfeFbP6VGRPRUfYI5/JuEZCiWJoD\nNH+58McuAgQ7tMyTeZJ1JyC2AgTv5RSBR9zc4+ZUO3mHAuVB6pYGcs0AsroNkRC+\nhMipaehwpd30dhAZ+55onCt34CK3LqepeVK+0urjholzghAudRgmnk27v+GnKogd\nB2fHuc0iXMtIcyokT6iTBC9F/69PiTCUE0/Tj8P6nUmZQQD7vxMluCSZ4q8rFwqP\nEjNfvtfGHDdsswU6Y24g89Rjnzg28xw4mHKsBXGR48P3qYSEM4Q=\n=tcBp\n-----END PGP SIGNATURE-----", "payload": "tree a52dab4e350d26e3f865b4696e4027af48998735\nparent dc5a6571a685189039feb9512dbcb599c1ef4102\nauthor David Wood <david@davidtw.co> 1533818247 +0200\ncommitter David Wood <david@davidtw.co> 1534237930 +0200\n\nSuggested trait implementation ordering is now deterministic.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "html_url": "https://github.com/rust-lang/rust/commit/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc5a6571a685189039feb9512dbcb599c1ef4102", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc5a6571a685189039feb9512dbcb599c1ef4102", "html_url": "https://github.com/rust-lang/rust/commit/dc5a6571a685189039feb9512dbcb599c1ef4102"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "7349c520c240778f09e433cbbc4aff66d58ff523", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "patch": "@@ -435,13 +435,14 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     fn report_similar_impl_candidates(&self,\n-                                      impl_candidates: Vec<ty::TraitRef<'tcx>>,\n+                                      mut impl_candidates: Vec<ty::TraitRef<'tcx>>,\n                                       err: &mut DiagnosticBuilder)\n     {\n         if impl_candidates.is_empty() {\n             return;\n         }\n \n+        let len = impl_candidates.len();\n         let end = if impl_candidates.len() <= 5 {\n             impl_candidates.len()\n         } else {\n@@ -459,10 +460,17 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             }\n         });\n \n+        // Sort impl candidates so that ordering is consistent for UI tests.\n+        let normalized_impl_candidates = &mut impl_candidates[0..end]\n+            .iter()\n+            .map(normalize)\n+            .collect::<Vec<String>>();\n+        normalized_impl_candidates.sort();\n+\n         err.help(&format!(\"the following implementations were found:{}{}\",\n-                          &impl_candidates[0..end].iter().map(normalize).collect::<String>(),\n-                          if impl_candidates.len() > 5 {\n-                              format!(\"\\nand {} others\", impl_candidates.len() - 4)\n+                          normalized_impl_candidates.join(\"\"),\n+                          if len > 5 {\n+                              format!(\"\\nand {} others\", len - 4)\n                           } else {\n                               \"\".to_owned()\n                           }"}, {"sha": "2ab5b3e31768cdedbf87ebecc81f7348ba0a32a6", "filename": "src/test/ui/catch/catch-bad-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Ftest%2Fui%2Fcatch%2Fcatch-bad-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Ftest%2Fui%2Fcatch%2Fcatch-bad-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcatch%2Fcatch-bad-type.stderr?ref=8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "patch": "@@ -5,10 +5,10 @@ LL |         Err(\"\")?; //~ ERROR the trait bound `i32: std::convert::From<&str>`\n    |         ^^^^^^^^ the trait `std::convert::From<&str>` is not implemented for `i32`\n    |\n    = help: the following implementations were found:\n-             <i32 as std::convert::From<u16>>\n              <i32 as std::convert::From<bool>>\n              <i32 as std::convert::From<i16>>\n              <i32 as std::convert::From<i8>>\n+             <i32 as std::convert::From<u16>>\n              <i32 as std::convert::From<u8>>\n    = note: required by `std::convert::From::from`\n "}, {"sha": "33804553a2981299a8795afe60dff229a4741f1e", "filename": "src/test/ui/did_you_mean/issue-21659-show-relevant-trait-impls-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr?ref=8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "patch": "@@ -5,9 +5,9 @@ LL |     f1.foo(1usize);\n    |        ^^^ the trait `Foo<usize>` is not implemented for `Bar`\n    |\n    = help: the following implementations were found:\n-             <Bar as Foo<i8>>\n              <Bar as Foo<i16>>\n              <Bar as Foo<i32>>\n+             <Bar as Foo<i8>>\n              <Bar as Foo<u8>>\n            and 2 others\n "}, {"sha": "3b08fcf0df10677ab208fcad654ce74cc4601843", "filename": "src/test/ui/did_you_mean/issue-39802-show-5-trait-impls.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e7b9b81173ebf7a3d2a638b6ae477dd71a19217/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr?ref=8e7b9b81173ebf7a3d2a638b6ae477dd71a19217", "patch": "@@ -5,11 +5,11 @@ LL |     Foo::<i32>::bar(&1i8); //~ ERROR is not satisfied\n    |     ^^^^^^^^^^^^^^^ the trait `Foo<i32>` is not implemented for `i8`\n    |\n    = help: the following implementations were found:\n-             <i8 as Foo<u8>>\n+             <i8 as Foo<bool>>\n              <i8 as Foo<u16>>\n              <i8 as Foo<u32>>\n              <i8 as Foo<u64>>\n-             <i8 as Foo<bool>>\n+             <i8 as Foo<u8>>\n note: required by `Foo::bar`\n   --> $DIR/issue-39802-show-5-trait-impls.rs:12:5\n    |\n@@ -23,10 +23,10 @@ LL |     Foo::<i32>::bar(&1u8); //~ ERROR is not satisfied\n    |     ^^^^^^^^^^^^^^^ the trait `Foo<i32>` is not implemented for `u8`\n    |\n    = help: the following implementations were found:\n+             <u8 as Foo<bool>>\n              <u8 as Foo<u16>>\n              <u8 as Foo<u32>>\n              <u8 as Foo<u64>>\n-             <u8 as Foo<bool>>\n note: required by `Foo::bar`\n   --> $DIR/issue-39802-show-5-trait-impls.rs:12:5\n    |\n@@ -40,10 +40,10 @@ LL |     Foo::<i32>::bar(&true); //~ ERROR is not satisfied\n    |     ^^^^^^^^^^^^^^^ the trait `Foo<i32>` is not implemented for `bool`\n    |\n    = help: the following implementations were found:\n-             <bool as Foo<u8>>\n              <bool as Foo<u16>>\n              <bool as Foo<u32>>\n              <bool as Foo<u64>>\n+             <bool as Foo<u8>>\n            and 2 others\n note: required by `Foo::bar`\n   --> $DIR/issue-39802-show-5-trait-impls.rs:12:5"}]}