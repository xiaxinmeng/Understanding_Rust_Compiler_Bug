{"sha": "92719e438c4cb38067446388d41a2abe651ab9a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNzE5ZTQzOGM0Y2IzODA2NzQ0NjM4OGQ0MWEyYWJlNjUxYWI5YTk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-15T12:32:58Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-08-16T11:45:41Z"}, "message": "Clean up zip and unzip in std::ivec", "tree": {"sha": "bc72e995ca0a326afe64393517714f85b054f7ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc72e995ca0a326afe64393517714f85b054f7ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92719e438c4cb38067446388d41a2abe651ab9a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92719e438c4cb38067446388d41a2abe651ab9a9", "html_url": "https://github.com/rust-lang/rust/commit/92719e438c4cb38067446388d41a2abe651ab9a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92719e438c4cb38067446388d41a2abe651ab9a9/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfcf997801b7b49853ebe61cec2219562ab7c4a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcf997801b7b49853ebe61cec2219562ab7c4a5", "html_url": "https://github.com/rust-lang/rust/commit/dfcf997801b7b49853ebe61cec2219562ab7c4a5"}], "stats": {"total": 55, "additions": 25, "deletions": 30}, "files": [{"sha": "be2a1eeea6ffeb93bc51da675b5108b2fb2609d9", "filename": "src/lib/ivec.rs", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Flib%2Fivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Flib%2Fivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fivec.rs?ref=92719e438c4cb38067446388d41a2abe651ab9a9", "patch": "@@ -269,30 +269,25 @@ fn position_pred[T](f: fn(&T) -> bool , v: &[T]) -> option::t[uint] {\n     ret none[uint];\n }\n \n-fn unzip[@T, @U](v: &[{_0: T, _1: U}]) -> {_0: [T], _1: [U]} {\n-    let sz = len(v);\n-    if sz == 0u {\n-        ret {_0: ~[], _1: ~[]};\n-    } else {\n-        let rest = slice(v, 1u, sz);\n-        let tl = unzip(rest);\n-        let a = ~[v.(0)._0];\n-        let b = ~[v.(0)._1];\n-        ret {_0: a + tl._0, _1: b + tl._1};\n+fn unzip[@T, @U](v: &[(T, U)]) -> ([T], [U]) {\n+    let as = ~[], bs = ~[];\n+    for (a, b) in v {\n+        as += ~[a];\n+        bs += ~[b];\n     }\n+    ret (as, bs);\n }\n \n-\n // FIXME make the lengths being equal a constraint\n-fn zip[@T, @U](v: &[T], u: &[U]) -> [{_0: T, _1: U}] {\n-    let sz = len(v);\n+fn zip[@T, @U](v: &[T], u: &[U]) -> [(T, U)] {\n+    let zipped = ~[];\n+    let sz = len(v), i = 0u;\n     assert (sz == len(u));\n-    if sz == 0u {\n-        ret ~[];\n-    } else {\n-        let rest = zip(slice(v, 1u, sz), slice(u, 1u, sz));\n-        ret ~[{_0: v.(0), _1: u.(0)}] + rest;\n+    while i < sz {\n+        zipped += ~[(v.(i), u.(i))];\n+        i += 1u;\n     }\n+    ret zipped;\n }\n \n // Swaps two elements in a vector"}, {"sha": "3293fb5eb66cdc7a9d4d074b862e26e28213afc8", "filename": "src/test/stdtest/ivec.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Ftest%2Fstdtest%2Fivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Ftest%2Fstdtest%2Fivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fivec.rs?ref=92719e438c4cb38067446388d41a2abe651ab9a9", "patch": "@@ -314,15 +314,15 @@ fn test_zip_unzip() {\n     let v2 = ~[4, 5, 6];\n     let z1 = ivec::zip(v1, v2);\n \n-    assert ({_0: 1, _1: 4} == z1.(0));\n-    assert ({_0: 2, _1: 5} == z1.(1));\n-    assert ({_0: 3, _1: 6} == z1.(2));\n+    assert ((1, 4) == z1.(0));\n+    assert ((2, 5) == z1.(1));\n+    assert ((3, 6) == z1.(2));\n \n-    let u1 = ivec::unzip(z1);\n+    let (left, right) = ivec::unzip(z1);\n \n-    assert ({_0: 1, _1: 4} == {_0: u1._0.(0), _1: u1._1.(0)});\n-    assert ({_0: 2, _1: 5} == {_0: u1._0.(1), _1: u1._1.(1)});\n-    assert ({_0: 3, _1: 6} == {_0: u1._0.(2), _1: u1._1.(2)});\n+    assert ((1, 4) == (left.(0), right.(0)));\n+    assert ((2, 5) == (left.(1), right.(1)));\n+    assert ((3, 6) == (left.(2), right.(2)));\n }\n \n #[test]"}, {"sha": "f8928b7a2c2dd440f51a5c116791f6b777e602fd", "filename": "src/test/stdtest/qsort.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Ftest%2Fstdtest%2Fqsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Ftest%2Fstdtest%2Fqsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fqsort.rs?ref=92719e438c4cb38067446388d41a2abe651ab9a9", "patch": "@@ -50,9 +50,9 @@ fn test_simple() {\n     sort::quick_sort(lteq, names);\n \n     let pairs = ivec::zip(expected, ivec::from_mut(names));\n-    for p: {_0: int, _1: int} in pairs {\n-        log #fmt(\"%d %d\", p._0, p._1);\n-        assert (p._0 == p._1);\n+    for (a, b) in pairs {\n+        log #fmt(\"%d %d\", a, b);\n+        assert (a == b);\n     }\n }\n "}, {"sha": "135cfee36c244cbe9b890842f50e4d89e2ed7d0e", "filename": "src/test/stdtest/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Ftest%2Fstdtest%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92719e438c4cb38067446388d41a2abe651ab9a9/src%2Ftest%2Fstdtest%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ftest.rs?ref=92719e438c4cb38067446388d41a2abe651ab9a9", "patch": "@@ -89,8 +89,8 @@ fn sort_tests() {\n     let pairs = ivec::zip(expected, filtered);\n \n \n-    for p: {_0: str, _1: test::test_desc} in pairs {\n-        assert (p._0 == p._1.name);\n+    for (a, b) in pairs {\n+        assert (a == b.name);\n     }\n }\n "}]}