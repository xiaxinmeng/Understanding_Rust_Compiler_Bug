{"sha": "24831c7221c7b4e32a02f8e8cffe7dfacb88b520", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ODMxYzcyMjFjN2I0ZTMyYTAyZjhlOGNmZmU3ZGZhY2I4OGI1MjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-23T22:21:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-23T22:21:32Z"}, "message": "Auto merge of #44436 - MicroJoe:master, r=alexcrichton\n\nAdd Duration::from_micros\n\nThis fixes #44400 that explains why it could be useful for embedded designs timing.", "tree": {"sha": "5783bd8009b1bd403fb7bd111d6a626a281d32e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5783bd8009b1bd403fb7bd111d6a626a281d32e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24831c7221c7b4e32a02f8e8cffe7dfacb88b520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24831c7221c7b4e32a02f8e8cffe7dfacb88b520", "html_url": "https://github.com/rust-lang/rust/commit/24831c7221c7b4e32a02f8e8cffe7dfacb88b520", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24831c7221c7b4e32a02f8e8cffe7dfacb88b520/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26015da01497b4014fc4f2ecedee5a7090c354e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/26015da01497b4014fc4f2ecedee5a7090c354e6", "html_url": "https://github.com/rust-lang/rust/commit/26015da01497b4014fc4f2ecedee5a7090c354e6"}, {"sha": "b40a9f4ecac2d0da2c96576e63e456a868026245", "url": "https://api.github.com/repos/rust-lang/rust/commits/b40a9f4ecac2d0da2c96576e63e456a868026245", "html_url": "https://github.com/rust-lang/rust/commit/b40a9f4ecac2d0da2c96576e63e456a868026245"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "86927ce322eae89019d902342f537bc8eed8ec1e", "filename": "src/libstd/time/duration.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/24831c7221c7b4e32a02f8e8cffe7dfacb88b520/src%2Flibstd%2Ftime%2Fduration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24831c7221c7b4e32a02f8e8cffe7dfacb88b520/src%2Flibstd%2Ftime%2Fduration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime%2Fduration.rs?ref=24831c7221c7b4e32a02f8e8cffe7dfacb88b520", "patch": "@@ -13,7 +13,9 @@ use ops::{Add, Sub, Mul, Div, AddAssign, SubAssign, MulAssign, DivAssign};\n \n const NANOS_PER_SEC: u32 = 1_000_000_000;\n const NANOS_PER_MILLI: u32 = 1_000_000;\n+const NANOS_PER_MICRO: u32 = 1_000;\n const MILLIS_PER_SEC: u64 = 1_000;\n+const MICROS_PER_SEC: u64 = 1_000_000;\n \n /// A `Duration` type to represent a span of time, typically used for system\n /// timeouts.\n@@ -116,6 +118,27 @@ impl Duration {\n         Duration { secs: secs, nanos: nanos }\n     }\n \n+    /// Creates a new `Duration` from the specified number of microseconds.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(duration_from_micros)]\n+    /// use std::time::Duration;\n+    ///\n+    /// let duration = Duration::from_micros(1_000_002);\n+    ///\n+    /// assert_eq!(1, duration.as_secs());\n+    /// assert_eq!(2000, duration.subsec_nanos());\n+    /// ```\n+    #[unstable(feature = \"duration_from_micros\", issue = \"44400\")]\n+    #[inline]\n+    pub fn from_micros(micros: u64) -> Duration {\n+        let secs = micros / MICROS_PER_SEC;\n+        let nanos = ((micros % MICROS_PER_SEC) as u32) * NANOS_PER_MICRO;\n+        Duration { secs: secs, nanos: nanos }\n+    }\n+\n     /// Returns the number of _whole_ seconds contained by this `Duration`.\n     ///\n     /// The returned value does not include the fractional (nanosecond) part of the"}]}