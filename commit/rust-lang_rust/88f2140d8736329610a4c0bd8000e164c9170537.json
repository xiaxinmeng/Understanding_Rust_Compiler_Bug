{"sha": "88f2140d8736329610a4c0bd8000e164c9170537", "node_id": "C_kwDOAAsO6NoAKDg4ZjIxNDBkODczNjMyOTYxMGE0YzBiZDgwMDBlMTY0YzkxNzA1Mzc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-11T05:21:41Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-11T05:23:08Z"}, "message": "Do not suggest same trait over again", "tree": {"sha": "4a342b7f10edc09e7e2c7d0912fe8613a77c250e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a342b7f10edc09e7e2c7d0912fe8613a77c250e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88f2140d8736329610a4c0bd8000e164c9170537", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88f2140d8736329610a4c0bd8000e164c9170537", "html_url": "https://github.com/rust-lang/rust/commit/88f2140d8736329610a4c0bd8000e164c9170537", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88f2140d8736329610a4c0bd8000e164c9170537/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c39762dd620c278f1defa42394f09293e1a98b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c39762dd620c278f1defa42394f09293e1a98b9", "html_url": "https://github.com/rust-lang/rust/commit/0c39762dd620c278f1defa42394f09293e1a98b9"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "c0b3a23fde437f0c5626c2cef6ccd25cffcbba96", "filename": "compiler/rustc_typeck/src/check/method/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88f2140d8736329610a4c0bd8000e164c9170537/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88f2140d8736329610a4c0bd8000e164c9170537/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=88f2140d8736329610a4c0bd8000e164c9170537", "patch": "@@ -20,8 +20,8 @@ use rustc_hir::def_id::DefId;\n use rustc_infer::infer::{self, InferOk};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n-use rustc_middle::ty::GenericParamDefKind;\n use rustc_middle::ty::{self, ToPredicate, Ty, TypeVisitable};\n+use rustc_middle::ty::{DefIdTree, GenericParamDefKind};\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n use rustc_trait_selection::traits;\n@@ -221,7 +221,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n \n             // We probe again, taking all traits into account (not only those in scope).\n-            let candidates = match self.lookup_probe(\n+            let mut candidates = match self.lookup_probe(\n                 span,\n                 segment.ident,\n                 self_ty,\n@@ -243,6 +243,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     .collect(),\n                 _ => Vec::new(),\n             };\n+            candidates.retain(|candidate| *candidate != self.tcx.parent(result.callee.def_id));\n \n             return Err(IllegalSizedBound(candidates, needs_mut, span));\n         }"}, {"sha": "fe16f97b9d0f5c54fc78895b4c9f609e2eb8e8af", "filename": "src/test/ui/issues/issue-35976.stderr", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/88f2140d8736329610a4c0bd8000e164c9170537/src%2Ftest%2Fui%2Fissues%2Fissue-35976.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88f2140d8736329610a4c0bd8000e164c9170537/src%2Ftest%2Fui%2Fissues%2Fissue-35976.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35976.stderr?ref=88f2140d8736329610a4c0bd8000e164c9170537", "patch": "@@ -6,11 +6,6 @@ LL |         fn wait(&self) where Self: Sized;\n ...\n LL |     arg.wait();\n    |         ^^^^\n-   |\n-help: another candidate was found in the following trait, perhaps add a `use` for it:\n-   |\n-LL | use private::Future;\n-   |\n \n error: aborting due to previous error\n "}]}