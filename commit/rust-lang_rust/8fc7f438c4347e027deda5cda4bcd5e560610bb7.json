{"sha": "8fc7f438c4347e027deda5cda4bcd5e560610bb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYzdmNDM4YzQzNDdlMDI3ZGVkYTVjZGE0YmNkNWU1NjA2MTBiYjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-31T10:35:48Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-31T10:35:48Z"}, "message": "start item recovery", "tree": {"sha": "fea53412ee0462dbecc6071a85164c18bd5f9fa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fea53412ee0462dbecc6071a85164c18bd5f9fa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fc7f438c4347e027deda5cda4bcd5e560610bb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc7f438c4347e027deda5cda4bcd5e560610bb7", "html_url": "https://github.com/rust-lang/rust/commit/8fc7f438c4347e027deda5cda4bcd5e560610bb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fc7f438c4347e027deda5cda4bcd5e560610bb7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faebae74e48e3e7e0d3dfddc5b5cf0b18535cc6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/faebae74e48e3e7e0d3dfddc5b5cf0b18535cc6b", "html_url": "https://github.com/rust-lang/rust/commit/faebae74e48e3e7e0d3dfddc5b5cf0b18535cc6b"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "e672aa4194186d0477f9f99c14e49ff52adddacb", "filename": "crates/libsyntax2/src/grammar/items/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs?ref=8fc7f438c4347e027deda5cda4bcd5e560610bb7", "patch": "@@ -24,6 +24,10 @@ pub(super) enum ItemFlavor {\n     Mod, Trait\n }\n \n+const ITEM_RECOVERY_SET: TokenSet =\n+    token_set![FN_KW, STRUCT_KW, ENUM_KW, IMPL_KW, TRAIT_KW, CONST_KW, STATIC_KW, LET_KW,\n+               MOD_KW, PUB_KW, CRATE_KW];\n+\n pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool, flavor: ItemFlavor) {\n     let m = p.start();\n     match maybe_item(p, flavor) {\n@@ -231,7 +235,7 @@ fn fn_def(p: &mut Parser, flavor: ItemFlavor) {\n     assert!(p.at(FN_KW));\n     p.bump();\n \n-    name(p);\n+    name_r(p, ITEM_RECOVERY_SET);\n     // test function_type_params\n     // fn foo<T: Clone + Copy>(){}\n     type_params::opt_type_param_list(p);"}, {"sha": "f1e78865c77d093b8807ef4ea51ba5086fc8d313", "filename": "crates/libsyntax2/src/grammar/items/structs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Fstructs.rs?ref=8fc7f438c4347e027deda5cda4bcd5e560610bb7", "patch": "@@ -4,7 +4,7 @@ pub(super) fn struct_def(p: &mut Parser) {\n     assert!(p.at(STRUCT_KW));\n     p.bump();\n \n-    name(p);\n+    name_r(p, ITEM_RECOVERY_SET);\n     type_params::opt_type_param_list(p);\n     match p.current() {\n         WHERE_KW => {\n@@ -41,7 +41,7 @@ pub(super) fn struct_def(p: &mut Parser) {\n pub(super) fn enum_def(p: &mut Parser) {\n     assert!(p.at(ENUM_KW));\n     p.bump();\n-    name(p);\n+    name_r(p, ITEM_RECOVERY_SET);\n     type_params::opt_type_param_list(p);\n     type_params::opt_where_clause(p);\n     if p.at(L_CURLY) {"}, {"sha": "9d21d4d364603890704ace061953f2ff9a483c30", "filename": "crates/libsyntax2/src/grammar/items/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=8fc7f438c4347e027deda5cda4bcd5e560610bb7", "patch": "@@ -5,7 +5,7 @@ use super::*;\n pub(super) fn trait_def(p: &mut Parser) {\n     assert!(p.at(TRAIT_KW));\n     p.bump();\n-    name(p);\n+    name_r(p, ITEM_RECOVERY_SET);\n     type_params::opt_type_param_list(p);\n     if p.at(COLON) {\n         type_params::bounds(p);"}, {"sha": "339664af3cd797eb16ac3b2080f028dbe634d645", "filename": "crates/libsyntax2/src/grammar/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Fmod.rs?ref=8fc7f438c4347e027deda5cda4bcd5e560610bb7", "patch": "@@ -129,16 +129,20 @@ fn opt_fn_ret_type(p: &mut Parser) -> bool {\n     }\n }\n \n-fn name(p: &mut Parser) {\n+fn name_r(p: &mut Parser, recovery: TokenSet) {\n     if p.at(IDENT) {\n         let m = p.start();\n         p.bump();\n         m.complete(p, NAME);\n     } else {\n-        p.err_and_bump(\"expected a name\");\n+        p.err_recover(\"expected a name\", recovery);\n     }\n }\n \n+fn name(p: &mut Parser) {\n+    name_r(p, TokenSet::EMPTY)\n+}\n+\n fn name_ref(p: &mut Parser) {\n     if p.at(IDENT) {\n         let m = p.start();"}, {"sha": "9bc58e7f7207e71552c5442baa152d13bd8d9c17", "filename": "crates/libsyntax2/src/parser_api.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs?ref=8fc7f438c4347e027deda5cda4bcd5e560610bb7", "patch": "@@ -12,7 +12,7 @@ fn mask(kind: SyntaxKind) -> u128 {\n }\n \n impl TokenSet {\n-    const EMPTY: TokenSet = TokenSet(0);\n+    pub const EMPTY: TokenSet = TokenSet(0);\n \n     pub fn contains(&self, kind: SyntaxKind) -> bool {\n         self.0 & mask(kind) != 0\n@@ -145,10 +145,10 @@ impl<'t> Parser<'t> {\n     }\n \n     /// Create an error node and consume the next token.\n-    pub(crate) fn err_recover(&mut self, message: &str, recovery_set: TokenSet) {\n+    pub(crate) fn err_recover(&mut self, message: &str, recovery: TokenSet) {\n         if self.at(SyntaxKind::L_CURLY)\n             || self.at(SyntaxKind::R_CURLY)\n-            || recovery_set.contains(self.current()) {\n+            || recovery.contains(self.current()) {\n             self.error(message);\n         } else {\n             let m = self.start();"}, {"sha": "3393b668b419f617eb32eba62993e7dc0c55e36a", "filename": "crates/libsyntax2/tests/data/parser/err/0020_fn_recover.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0020_fn_recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0020_fn_recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0020_fn_recover.rs?ref=8fc7f438c4347e027deda5cda4bcd5e560610bb7", "patch": "@@ -0,0 +1,3 @@\n+fn\n+\n+fn foo() {}"}, {"sha": "b5218b0fac4e9a65a8e2593a88db281e2040244f", "filename": "crates/libsyntax2/tests/data/parser/err/0020_fn_recover.txt", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0020_fn_recover.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8fc7f438c4347e027deda5cda4bcd5e560610bb7/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0020_fn_recover.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0020_fn_recover.txt?ref=8fc7f438c4347e027deda5cda4bcd5e560610bb7", "patch": "@@ -0,0 +1,20 @@\n+ROOT@[0; 16)\n+  FN_DEF@[0; 2)\n+    FN_KW@[0; 2)\n+    err: `expected a name`\n+    err: `expected function arguments`\n+    err: `expected a block`\n+  WHITESPACE@[2; 4)\n+  FN_DEF@[4; 15)\n+    FN_KW@[4; 6)\n+    WHITESPACE@[6; 7)\n+    NAME@[7; 10)\n+      IDENT@[7; 10) \"foo\"\n+    PARAM_LIST@[10; 12)\n+      L_PAREN@[10; 11)\n+      R_PAREN@[11; 12)\n+    WHITESPACE@[12; 13)\n+    BLOCK@[13; 15)\n+      L_CURLY@[13; 14)\n+      R_CURLY@[14; 15)\n+  WHITESPACE@[15; 16)"}]}