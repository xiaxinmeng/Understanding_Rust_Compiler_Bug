{"sha": "41321d96789ed918eebda02ada76758765d19d16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMzIxZDk2Nzg5ZWQ5MThlZWJkYTAyYWRhNzY3NTg3NjVkMTlkMTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-10T18:30:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-10T18:30:11Z"}, "message": "Merge #6807\n\n6807: Replicate Cargo environment variables r=jonas-schievink a=jonas-schievink\n\nThese might be relied on by procedural macros, and can also be accessed via `env!`.\r\n\r\nRequired for fixing https://github.com/rust-analyzer/rust-analyzer/issues/6696. We do not yet propagate these to any proc macros though.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "1d2b0272f9ae48e143b2e6fa7260c6664eb40b03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d2b0272f9ae48e143b2e6fa7260c6664eb40b03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41321d96789ed918eebda02ada76758765d19d16", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf0mkzCRBK7hj4Ov3rIwAAdHIIAEmRnLUJr5XgfA0zI3O1Ytn6\nqbD4U5yjSIuNWevFwR/S7SnYk6Ll5hkTr1z5gvckAGecmxNvTusvLAPdXqyOPP0l\nGfpMCI8gvGObjvVX9ld1dl1Aut8OeuVdRbWNDotF1fnTOBm2rEwq7JuRdL3dk+xJ\nVW9VNaxNaUdFoAP0y3Zemz/aME0FbNLExqwFUm/xUjEtjA6xXXwMt3o8QKb8bVJc\n1CRSAN00P26s9RRO8j3kd/WYCS0WoJYgiOGJ15+fykXSrgTJzE9yIm9zVPBBdE94\nWTo7o3NVXK42dH3CzIvvkCgMSTHZkurW7nUR0WT/z/bBfodZDXjHomU0gPuBuwY=\n=hux8\n-----END PGP SIGNATURE-----\n", "payload": "tree 1d2b0272f9ae48e143b2e6fa7260c6664eb40b03\nparent 814e31957ea0e063272132afd15c3e8f4ed54454\nparent 4d4b91117a02b55e913216459ae661d8dd166579\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607625011 +0000\ncommitter GitHub <noreply@github.com> 1607625011 +0000\n\nMerge #6807\n\n6807: Replicate Cargo environment variables r=jonas-schievink a=jonas-schievink\n\nThese might be relied on by procedural macros, and can also be accessed via `env!`.\r\n\r\nRequired for fixing https://github.com/rust-analyzer/rust-analyzer/issues/6696. We do not yet propagate these to any proc macros though.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41321d96789ed918eebda02ada76758765d19d16", "html_url": "https://github.com/rust-lang/rust/commit/41321d96789ed918eebda02ada76758765d19d16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41321d96789ed918eebda02ada76758765d19d16/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "814e31957ea0e063272132afd15c3e8f4ed54454", "url": "https://api.github.com/repos/rust-lang/rust/commits/814e31957ea0e063272132afd15c3e8f4ed54454", "html_url": "https://github.com/rust-lang/rust/commit/814e31957ea0e063272132afd15c3e8f4ed54454"}, {"sha": "4d4b91117a02b55e913216459ae661d8dd166579", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4b91117a02b55e913216459ae661d8dd166579", "html_url": "https://github.com/rust-lang/rust/commit/4d4b91117a02b55e913216459ae661d8dd166579"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "d3aec4c996b5c201f3025bbb0e0cf953255ffebc", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41321d96789ed918eebda02ada76758765d19d16/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/41321d96789ed918eebda02ada76758765d19d16/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=41321d96789ed918eebda02ada76758765d19d16", "patch": "@@ -1229,6 +1229,7 @@ dependencies = [\n  \"base_db\",\n  \"cargo_metadata\",\n  \"cfg\",\n+ \"itertools\",\n  \"log\",\n  \"paths\",\n  \"proc_macro_api\","}, {"sha": "c55e85709223a475fea61e6fac54efe185a27104", "filename": "crates/project_model/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41321d96789ed918eebda02ada76758765d19d16/crates%2Fproject_model%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/41321d96789ed918eebda02ada76758765d19d16/crates%2Fproject_model%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2FCargo.toml?ref=41321d96789ed918eebda02ada76758765d19d16", "patch": "@@ -16,6 +16,7 @@ cargo_metadata = \"=0.12.0\"\n serde = { version = \"1.0.106\", features = [\"derive\"] }\n serde_json = \"1.0.48\"\n anyhow = \"1.0.26\"\n+itertools = \"0.9.0\"\n \n arena = { path = \"../arena\", version = \"0.0.0\" }\n cfg = { path = \"../cfg\", version = \"0.0.0\" }"}, {"sha": "894c5c952aae0eeb0c786dfefbdf772bd088abe6", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/41321d96789ed918eebda02ada76758765d19d16/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41321d96789ed918eebda02ada76758765d19d16/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=41321d96789ed918eebda02ada76758765d19d16", "patch": "@@ -11,6 +11,7 @@ use anyhow::{Context, Result};\n use arena::{Arena, Idx};\n use base_db::Edition;\n use cargo_metadata::{BuildScript, CargoOpt, Message, MetadataCommand, PackageId};\n+use itertools::Itertools;\n use paths::{AbsPath, AbsPathBuf};\n use rustc_hash::FxHashMap;\n \n@@ -192,6 +193,9 @@ impl CargoWorkspace {\n \n         meta.packages.sort_by(|a, b| a.id.cmp(&b.id));\n         for meta_pkg in meta.packages {\n+            let id = meta_pkg.id.clone();\n+            inject_cargo_env(&meta_pkg, envs.entry(id).or_default());\n+\n             let cargo_metadata::Package { id, edition, name, manifest_path, version, .. } =\n                 meta_pkg;\n             let is_member = ws_members.contains(&id);\n@@ -385,3 +389,38 @@ fn is_dylib(path: &Path) -> bool {\n         Some(ext) => matches!(ext.as_str(), \"dll\" | \"dylib\" | \"so\"),\n     }\n }\n+\n+/// Recreates the compile-time environment variables that Cargo sets.\n+///\n+/// Should be synced with <https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-crates>\n+fn inject_cargo_env(package: &cargo_metadata::Package, env: &mut Vec<(String, String)>) {\n+    // FIXME: Missing variables:\n+    // CARGO, CARGO_PKG_HOMEPAGE, CARGO_CRATE_NAME, CARGO_BIN_NAME, CARGO_BIN_EXE_<name>\n+\n+    let mut manifest_dir = package.manifest_path.clone();\n+    manifest_dir.pop();\n+    if let Some(cargo_manifest_dir) = manifest_dir.to_str() {\n+        env.push((\"CARGO_MANIFEST_DIR\".into(), cargo_manifest_dir.into()));\n+    }\n+\n+    env.push((\"CARGO_PKG_VERSION\".into(), package.version.to_string()));\n+    env.push((\"CARGO_PKG_VERSION_MAJOR\".into(), package.version.major.to_string()));\n+    env.push((\"CARGO_PKG_VERSION_MINOR\".into(), package.version.minor.to_string()));\n+    env.push((\"CARGO_PKG_VERSION_PATCH\".into(), package.version.patch.to_string()));\n+\n+    let pre = package.version.pre.iter().map(|id| id.to_string()).format(\".\");\n+    env.push((\"CARGO_PKG_VERSION_PRE\".into(), pre.to_string()));\n+\n+    let authors = package.authors.join(\";\");\n+    env.push((\"CARGO_PKG_AUTHORS\".into(), authors));\n+\n+    env.push((\"CARGO_PKG_NAME\".into(), package.name.clone()));\n+    env.push((\"CARGO_PKG_DESCRIPTION\".into(), package.description.clone().unwrap_or_default()));\n+    //env.push((\"CARGO_PKG_HOMEPAGE\".into(), package.homepage.clone().unwrap_or_default()));\n+    env.push((\"CARGO_PKG_REPOSITORY\".into(), package.repository.clone().unwrap_or_default()));\n+    env.push((\"CARGO_PKG_LICENSE\".into(), package.license.clone().unwrap_or_default()));\n+\n+    let license_file =\n+        package.license_file.as_ref().map(|buf| buf.display().to_string()).unwrap_or_default();\n+    env.push((\"CARGO_PKG_LICENSE_FILE\".into(), license_file));\n+}"}]}