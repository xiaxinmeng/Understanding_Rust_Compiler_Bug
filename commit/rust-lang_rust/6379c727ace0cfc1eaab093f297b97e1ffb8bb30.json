{"sha": "6379c727ace0cfc1eaab093f297b97e1ffb8bb30", "node_id": "C_kwDOAAsO6NoAKDYzNzljNzI3YWNlMGNmYzFlYWFiMDkzZjI5N2I5N2UxZmZiOGJiMzA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-16T23:19:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-16T23:19:33Z"}, "message": "Rollup merge of #104068 - yancyribbens:partial-cmp-doc-update, r=scottmcm\n\nrustdoc: Add PartialOrd trait to doc comment explanation\n\nThe doc comments for [partial_cmp](https://github.com/rust-lang/rust/blob/master/library/core/src/iter/traits/iterator.rs#L3478) is the exact same as the doc comment for [cmp](https://github.com/rust-lang/rust/blob/master/library/core/src/iter/traits/iterator.rs#L3413).  This PR adds to the description `partial_cmp` to disambiguate the description from `cmp.`", "tree": {"sha": "c677bcb0a082066b947f537c2ad7315be4c6ce51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c677bcb0a082066b947f537c2ad7315be4c6ce51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6379c727ace0cfc1eaab093f297b97e1ffb8bb30", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj7roFCRBK7hj4Ov3rIwAAYx8IAAQa18O0PIrSG8scve/7c4Jv\neIM5RmGiaxRoa+z/M5R16LfprRi/hjsrB3jy0d0GR3IT5M5uzdankbHjrfCoFnKM\ntAbz6TMLSr4x/KDnGAAW+5cGCdpd9OBwbpkHRO5VAMnfSAeXy7f/mO8cTIYv+mCq\nIENQ5EB/zi+klBjsPxOp1/rz8dxq84feUwB0GZzIDkX7FAS/TuNhJGxZtiLsipPc\n2XxW3u6+yLqujScOoS0VU7wdV/8EjY59TxA5wOPWq+Q5VRXmF1ndrWdSxy6tgMMK\nJc8qsuvyd3HL/ofjbom6I45oal94Xz4vSVJqykUjKaghG3xXM3nSf9hLqljHGT4=\n=gzhk\n-----END PGP SIGNATURE-----\n", "payload": "tree c677bcb0a082066b947f537c2ad7315be4c6ce51\nparent 9a7cc6c32f1a690f86827e4724bcda85e506ef35\nparent ced962975b5d42607ec50425e6b2d8d504784248\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676589573 +0100\ncommitter GitHub <noreply@github.com> 1676589573 +0100\n\nRollup merge of #104068 - yancyribbens:partial-cmp-doc-update, r=scottmcm\n\nrustdoc: Add PartialOrd trait to doc comment explanation\n\nThe doc comments for [partial_cmp](https://github.com/rust-lang/rust/blob/master/library/core/src/iter/traits/iterator.rs#L3478) is the exact same as the doc comment for [cmp](https://github.com/rust-lang/rust/blob/master/library/core/src/iter/traits/iterator.rs#L3413).  This PR adds to the description `partial_cmp` to disambiguate the description from `cmp.`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6379c727ace0cfc1eaab093f297b97e1ffb8bb30", "html_url": "https://github.com/rust-lang/rust/commit/6379c727ace0cfc1eaab093f297b97e1ffb8bb30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6379c727ace0cfc1eaab093f297b97e1ffb8bb30/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a7cc6c32f1a690f86827e4724bcda85e506ef35", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a7cc6c32f1a690f86827e4724bcda85e506ef35", "html_url": "https://github.com/rust-lang/rust/commit/9a7cc6c32f1a690f86827e4724bcda85e506ef35"}, {"sha": "ced962975b5d42607ec50425e6b2d8d504784248", "url": "https://api.github.com/repos/rust-lang/rust/commits/ced962975b5d42607ec50425e6b2d8d504784248", "html_url": "https://github.com/rust-lang/rust/commit/ced962975b5d42607ec50425e6b2d8d504784248"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "9e3e13e70040e953c7c48298aeccc8d4d5b68368", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6379c727ace0cfc1eaab093f297b97e1ffb8bb30/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6379c727ace0cfc1eaab093f297b97e1ffb8bb30/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=6379c727ace0cfc1eaab093f297b97e1ffb8bb30", "patch": "@@ -3502,8 +3502,10 @@ pub trait Iterator {\n         }\n     }\n \n-    /// [Lexicographically](Ord#lexicographical-comparison) compares the elements of this [`Iterator`] with those\n-    /// of another.\n+    /// [Lexicographically](Ord#lexicographical-comparison) compares the [`PartialOrd`] elements of\n+    /// this [`Iterator`] with those of another. The comparison works like short-circuit\n+    /// evaluation, returning a result without comparing the remaining elements.\n+    /// As soon as an order can be determined, the evaluation stops and a result is returned.\n     ///\n     /// # Examples\n     ///\n@@ -3513,9 +3515,25 @@ pub trait Iterator {\n     /// assert_eq!([1.].iter().partial_cmp([1.].iter()), Some(Ordering::Equal));\n     /// assert_eq!([1.].iter().partial_cmp([1., 2.].iter()), Some(Ordering::Less));\n     /// assert_eq!([1., 2.].iter().partial_cmp([1.].iter()), Some(Ordering::Greater));\n+    /// ```\n     ///\n+    /// For floating-point numbers, NaN does not have a total order and will result\n+    /// in `None` when compared:\n+    ///\n+    /// ```\n     /// assert_eq!([f64::NAN].iter().partial_cmp([1.].iter()), None);\n     /// ```\n+    ///\n+    /// The results are determined by the order of evaluation.\n+    ///\n+    /// ```\n+    /// use std::cmp::Ordering;\n+    ///\n+    /// assert_eq!([1.0, f64::NAN].iter().partial_cmp([2.0, f64::NAN].iter()), Some(Ordering::Less));\n+    /// assert_eq!([2.0, f64::NAN].iter().partial_cmp([1.0, f64::NAN].iter()), Some(Ordering::Greater));\n+    /// assert_eq!([f64::NAN, 1.0].iter().partial_cmp([f64::NAN, 2.0].iter()), None);\n+    /// ```\n+    ///\n     #[stable(feature = \"iter_order\", since = \"1.5.0\")]\n     fn partial_cmp<I>(self, other: I) -> Option<Ordering>\n     where"}]}