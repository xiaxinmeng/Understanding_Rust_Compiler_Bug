{"sha": "11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYzg0YzY2MjVkNWU5Mzc0YWE0ZjhhNjBiNjdjM2M0YTZmMjMzYjY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-14T22:12:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-16T10:58:00Z"}, "message": "Nit: improve comment to explain why we wait until regionck", "tree": {"sha": "bd126d2c5644cc1c7e04ae40fde3af7fb1a64307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd126d2c5644cc1c7e04ae40fde3af7fb1a64307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6", "html_url": "https://github.com/rust-lang/rust/commit/11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15739b820f95ea213870790e67ee04dc359192d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/15739b820f95ea213870790e67ee04dc359192d1", "html_url": "https://github.com/rust-lang/rust/commit/15739b820f95ea213870790e67ee04dc359192d1"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "6680de522e531854acd29c1436df7ea6b14cc6a6", "filename": "src/librustc/infer/outlives/obligations.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs?ref=11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6", "patch": "@@ -55,15 +55,19 @@\n //! type-check the closure body (e.g., here it informs us that `T`\n //! outlives the late-bound region `'a`).\n //!\n-//! > That said, in writing this, I have come to wonder: this\n-//!   inference dependency, I think, is only interesting for\n-//!   late-bound regions in the closure -- if the region appears free\n-//!   in the closure signature, then the relationship must be known to\n-//!   the caller (here, `foo`), and hence could be verified earlier\n-//!   up. Moreover, we infer late-bound regions quite early on right\n-//!   now, i.e., only when the expected signature is known.  So we\n-//!   *may* be able to sidestep this. Regardless, once the NLL\n-//!   transition is complete, this concern will be gone. -nmatsakis\n+//! Note that by delaying the gathering of implied bounds until all\n+//! inference information is known, we may find relationships between\n+//! bound regions and other regions in the environment. For example,\n+//! when we first check a closure like the one expected as argument\n+//! to `foo`:\n+//!\n+//! ```\n+//! fn foo<U, F: for<'a> FnMut(&'a U)>(_f: F) {}\n+//! ```\n+//!\n+//! the type of the closure's first argument would be `&'a ?U`.  We\n+//! might later infer `?U` to something like `&'b u32`, which would\n+//! imply that `'b: 'a`.\n \n use hir::def_id::DefId;\n use infer::{self, GenericKind, InferCtxt, RegionObligation, SubregionOrigin, VerifyBound};"}]}