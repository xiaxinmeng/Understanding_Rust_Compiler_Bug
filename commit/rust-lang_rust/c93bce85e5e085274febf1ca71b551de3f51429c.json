{"sha": "c93bce85e5e085274febf1ca71b551de3f51429c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5M2JjZTg1ZTVlMDg1Mjc0ZmViZjFjYTcxYjU1MWRlM2Y1MTQyOWM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-05T13:18:09Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-05T13:18:09Z"}, "message": "Add more tests", "tree": {"sha": "2803b41b51f9437b349d24539443f427737ec58e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2803b41b51f9437b349d24539443f427737ec58e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c93bce85e5e085274febf1ca71b551de3f51429c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c93bce85e5e085274febf1ca71b551de3f51429c", "html_url": "https://github.com/rust-lang/rust/commit/c93bce85e5e085274febf1ca71b551de3f51429c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c93bce85e5e085274febf1ca71b551de3f51429c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2241f640bb9f04cce88b2d28092cbfcee04c43e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2241f640bb9f04cce88b2d28092cbfcee04c43e", "html_url": "https://github.com/rust-lang/rust/commit/f2241f640bb9f04cce88b2d28092cbfcee04c43e"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "83501ad8c41a790eb211faa1a1fafbaa85415b9a", "filename": "src/test/ui/existential_types/generic_duplicate_param_use8.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use8.rs?ref=c93bce85e5e085274febf1ca71b551de3f51429c", "patch": "@@ -0,0 +1,16 @@\n+#![feature(existential_type)]\n+\n+use std::fmt::Debug;\n+\n+fn main() {}\n+\n+existential type Two<T, U>: Debug;\n+\n+fn two<T: Debug, U: Debug>(t: T, _: U) -> Two<T, U> {\n+    (t, 4u32)\n+}\n+\n+fn three<T: Debug, U: Debug>(_: T, u: U) -> Two<T, U> {\n+//~^ concrete type differs from previous\n+    (u, 4u32)\n+}"}, {"sha": "80c7441c857d14f07a2c4e2714a6c3ea993f3c5d", "filename": "src/test/ui/existential_types/generic_duplicate_param_use8.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fgeneric_duplicate_param_use8.stderr?ref=c93bce85e5e085274febf1ca71b551de3f51429c", "patch": "@@ -0,0 +1,19 @@\n+error: concrete type differs from previous defining existential type use\n+  --> $DIR/generic_duplicate_param_use8.rs:13:1\n+   |\n+LL | / fn three<T: Debug, U: Debug>(_: T, u: U) -> Two<T, U> {\n+LL | | //~^ concrete type differs from previous\n+LL | |     (u, 4u32)\n+LL | | }\n+   | |_^ expected `(T, u32)`, got `(U, u32)`\n+   |\n+note: previous use here\n+  --> $DIR/generic_duplicate_param_use8.rs:9:1\n+   |\n+LL | / fn two<T: Debug, U: Debug>(t: T, _: U) -> Two<T, U> {\n+LL | |     (t, 4u32)\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}, {"sha": "413cc6788c28159fe11f4d3646ea1b56f0820f62", "filename": "src/test/ui/existential_types/not_a_defining_use.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fnot_a_defining_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fnot_a_defining_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fnot_a_defining_use.rs?ref=c93bce85e5e085274febf1ca71b551de3f51429c", "patch": "@@ -0,0 +1,39 @@\n+#![feature(existential_type)]\n+\n+use std::fmt::Debug;\n+\n+fn main() {}\n+\n+existential type Two<T, U>: Debug;\n+\n+fn two<T: Debug>(t: T) -> Two<T, u32> {\n+    (t, 4i8)\n+}\n+\n+fn three<T: Debug, U>(t: T) -> Two<T, U> {\n+    (t, 5i8)\n+}\n+\n+trait Bar {\n+    type Blub: Debug;\n+    const FOO: Self::Blub;\n+}\n+\n+impl Bar for u32 {\n+    type Blub = i32;\n+    const FOO: i32 = 42;\n+}\n+\n+// this should work! But it requires `two` and `three` not to be defining uses,\n+// just restricting uses\n+fn four<T: Debug, U: Bar>(t: T) -> Two<T, U> { //~ concrete type differs from previous\n+    (t, <U as Bar>::FOO)\n+}\n+\n+fn is_sync<T: Sync>() {}\n+\n+fn asdfl() {\n+    //FIXME(oli-obk): these currently cause cycle errors\n+    //is_sync::<Two<i32, u32>>();\n+    //is_sync::<Two<i32, *const i32>>();\n+}"}, {"sha": "a6ed5dbe0a9dd302c1e6747b535bfe9e2805ce5b", "filename": "src/test/ui/existential_types/not_a_defining_use.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fnot_a_defining_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c93bce85e5e085274febf1ca71b551de3f51429c/src%2Ftest%2Fui%2Fexistential_types%2Fnot_a_defining_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fnot_a_defining_use.stderr?ref=c93bce85e5e085274febf1ca71b551de3f51429c", "patch": "@@ -0,0 +1,18 @@\n+error: concrete type differs from previous defining existential type use\n+  --> $DIR/not_a_defining_use.rs:29:1\n+   |\n+LL | / fn four<T: Debug, U: Bar>(t: T) -> Two<T, U> { //~ concrete type differs from previous\n+LL | |     (t, <U as Bar>::FOO)\n+LL | | }\n+   | |_^ expected `(T, i8)`, got `(T, <U as Bar>::Blub)`\n+   |\n+note: previous use here\n+  --> $DIR/not_a_defining_use.rs:9:1\n+   |\n+LL | / fn two<T: Debug>(t: T) -> Two<T, u32> {\n+LL | |     (t, 4i8)\n+LL | | }\n+   | |_^\n+\n+error: aborting due to previous error\n+"}]}