{"sha": "1c5c054e4cb59fe05f574ae6322794f93569dd8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNWMwNTRlNGNiNTlmZTA1ZjU3NGFlNjMyMjc5NGY5MzU2OWRkOGI=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2020-02-14T05:07:06Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2020-02-19T18:21:18Z"}, "message": "Rename for clarity", "tree": {"sha": "2bc3e24fda6696e3e3bd99dfe49197ce1919cd7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bc3e24fda6696e3e3bd99dfe49197ce1919cd7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c5c054e4cb59fe05f574ae6322794f93569dd8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c5c054e4cb59fe05f574ae6322794f93569dd8b", "html_url": "https://github.com/rust-lang/rust/commit/1c5c054e4cb59fe05f574ae6322794f93569dd8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c5c054e4cb59fe05f574ae6322794f93569dd8b/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca", "html_url": "https://github.com/rust-lang/rust/commit/06f0ab03ef63869eb159cf7d57d5d5e826ff10ca"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "109bea7fff2ab3c80fb8f2a479ef52aac2c6aa7b", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1c5c054e4cb59fe05f574ae6322794f93569dd8b/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c5c054e4cb59fe05f574ae6322794f93569dd8b/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=1c5c054e4cb59fe05f574ae6322794f93569dd8b", "patch": "@@ -452,7 +452,7 @@ impl<'a, 'tcx> PossibleBorrowerVisitor<'a, 'tcx> {\n         self,\n         cx: &LateContext<'a, 'tcx>,\n         maybe_live: DataflowResults<'tcx, MaybeStorageLive<'a, 'tcx>>,\n-    ) -> PossibleBorrower<'a, 'tcx> {\n+    ) -> PossibleBorrowerMap<'a, 'tcx> {\n         let mut map = FxHashMap::default();\n         for row in (1..self.body.local_decls.len()).map(mir::Local::from_usize) {\n             if is_copy(cx, self.body.local_decls[row].ty) {\n@@ -475,7 +475,7 @@ impl<'a, 'tcx> PossibleBorrowerVisitor<'a, 'tcx> {\n         }\n \n         let bs = BitSet::new_empty(self.body.local_decls.len());\n-        PossibleBorrower {\n+        PossibleBorrowerMap {\n             map,\n             maybe_live: DataflowResultsCursor::new(maybe_live, self.body),\n             bitset: (bs.clone(), bs),\n@@ -557,15 +557,15 @@ fn rvalue_locals(rvalue: &mir::Rvalue<'_>, mut visit: impl FnMut(mir::Local)) {\n }\n \n /// Result of `PossibleBorrowerVisitor`.\n-struct PossibleBorrower<'a, 'tcx> {\n+struct PossibleBorrowerMap<'a, 'tcx> {\n     /// Mapping `Local -> its possible borrowers`\n     map: FxHashMap<mir::Local, HybridBitSet<mir::Local>>,\n     maybe_live: DataflowResultsCursor<'a, 'tcx, MaybeStorageLive<'a, 'tcx>>,\n     // Caches to avoid allocation of `BitSet` on every query\n     bitset: (BitSet<mir::Local>, BitSet<mir::Local>),\n }\n \n-impl PossibleBorrower<'_, '_> {\n+impl PossibleBorrowerMap<'_, '_> {\n     /// Returns true if the set of borrowers of `borrowed` living at `at` matches with `borrowers`.\n     fn only_borrowers(&mut self, borrowers: &[mir::Local], borrowed: mir::Local, at: mir::Location) -> bool {\n         self.maybe_live.seek(at);"}]}