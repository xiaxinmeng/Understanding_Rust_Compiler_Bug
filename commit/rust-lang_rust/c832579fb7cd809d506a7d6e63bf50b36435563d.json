{"sha": "c832579fb7cd809d506a7d6e63bf50b36435563d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MzI1NzlmYjdjZDgwOWQ1MDZhN2Q2ZTYzYmY1MGIzNjQzNTU2M2Q=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-28T09:30:55Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-10-03T12:43:57Z"}, "message": "Removed hardcoded crate.\n\nPreviously, `meta` crate was hardcoded as attempting to resolve a path\nwith it would ICE. Now, we attempt to load each extern crate first so\nthat resolving a path involving that crate doesn't error.", "tree": {"sha": "99b53a912999b27bf9584466464b3a201ca7c117", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99b53a912999b27bf9584466464b3a201ca7c117"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c832579fb7cd809d506a7d6e63bf50b36435563d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlu0uY0ACgkQAXYLT59T\n8VRO3hAAswqDbjSYTPi7EW60PztakIyqXng/NIP636XUD90Jh68WXS+mhx4tZ1MP\n2HYOz0tSESmVB0lnJ8Zgn6UrC+o6oVaB/WYmvoFe8lc64xz23IrhhrVncDYZfQRo\nhpgnh+NErQrG7SkXSq8VsMTfc0HURI4tok0ynH1LFvx41j4vqkH0QA54ILY1DcwX\nYr1wsca+vvDHhbomij6gsCJqLeEkrzhblZr4XrtpbElp7Eg0dI/LTYRerCrJk33H\nG3CKDfzUzPsdZmfYzueO6ta+Okvyb+wy4MuJlZQ2wbQ94PYCJyuPE1HYZwIlF/R/\nELkXyktIzwzfIQRM8E87C+9aqMHvXxSID/PYlXO68ajGEM1YBwsUfBIhU7Q2Bj+Y\nxda1IiuK1+3l+svTA6lEo58ogKnsSydLZF1nAWl0KLPcEu6LSY4HEWXGcYyaZWUY\nW22nzwTrkUCzUUZd7IvCqSmMwgBmPBJdj9AMGH/iCAC1+oIrTvLFrCl58bR9CsgX\nseaOsZ6Tq0U1lviQD5wEEdA4K0nc89SZHFczZdFvr7aHcf9laNOAvwwdM/XUM8B8\nOWE6/nGjtdhGLOPyNTj6Mu+pAXShYsLw1LgQ8VasCdLOxCg2TWiYn3fgKVrkbuR6\n0bRNeB+asOp0swCv8sf5O5zPhox1M6XkMY9glwVoceQUbWqAToE=\n=d5VO\n-----END PGP SIGNATURE-----", "payload": "tree 99b53a912999b27bf9584466464b3a201ca7c117\nparent 29e2376ac7f8719930a14f256a84fbcd65e10163\nauthor David Wood <david@davidtw.co> 1538127055 +0200\ncommitter David Wood <david@davidtw.co> 1538570637 +0200\n\nRemoved hardcoded crate.\n\nPreviously, `meta` crate was hardcoded as attempting to resolve a path\nwith it would ICE. Now, we attempt to load each extern crate first so\nthat resolving a path involving that crate doesn't error.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c832579fb7cd809d506a7d6e63bf50b36435563d", "html_url": "https://github.com/rust-lang/rust/commit/c832579fb7cd809d506a7d6e63bf50b36435563d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c832579fb7cd809d506a7d6e63bf50b36435563d/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29e2376ac7f8719930a14f256a84fbcd65e10163", "url": "https://api.github.com/repos/rust-lang/rust/commits/29e2376ac7f8719930a14f256a84fbcd65e10163", "html_url": "https://github.com/rust-lang/rust/commit/29e2376ac7f8719930a14f256a84fbcd65e10163"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "7a66750d700ba502da3c7fd9154303346c6a1a7e", "filename": "src/librustc_resolve/error_reporting.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c832579fb7cd809d506a7d6e63bf50b36435563d/src%2Flibrustc_resolve%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c832579fb7cd809d506a7d6e63bf50b36435563d/src%2Flibrustc_resolve%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Ferror_reporting.rs?ref=c832579fb7cd809d506a7d6e63bf50b36435563d", "patch": "@@ -121,7 +121,7 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n     /// ```\n     ///    |\n     /// LL | use foobar::Baz;\n-    ///    |     ^^^ Did you mean `baz::foobar`?\n+    ///    |     ^^^^^^ Did you mean `baz::foobar`?\n     /// ```\n     ///\n     /// Used when importing a submodule of an external crate but missing that crate's\n@@ -139,19 +139,19 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n         path.insert(1, new_path_segment);\n \n         for name in &external_crate_names {\n-            // Don't suggest meta as it will error in `resolve_path`.\n-            if name.as_str() == \"meta\" {\n-                continue;\n-            }\n-\n-            // Replace the first after root (a placeholder we inserted) with a crate name\n-            // and check if that is valid.\n-            path[1].name = *name;\n-            let result = self.resolve_path(None, &path, None, false, span, CrateLint::No);\n-            debug!(\"make_external_crate_suggestion: name={:?} path={:?} result={:?}\",\n-                   name, path, result);\n-            if let PathResult::Module(..) = result {\n-                return Some(path)\n+            let ident = Ident::with_empty_ctxt(*name);\n+            // Calling `maybe_process_path_extern` ensures that we're only running `resolve_path`\n+            // on a crate name that won't ICE.\n+            if let Some(_) = self.crate_loader.maybe_process_path_extern(*name, ident.span) {\n+                // Replace the first after root (a placeholder we inserted) with a crate name\n+                // and check if that is valid.\n+                path[1].name = *name;\n+                let result = self.resolve_path(None, &path, None, false, span, CrateLint::No);\n+                debug!(\"make_external_crate_suggestion: name={:?} path={:?} result={:?}\",\n+                       name, path, result);\n+                if let PathResult::Module(..) = result {\n+                    return Some(path)\n+                }\n             }\n         }\n "}]}