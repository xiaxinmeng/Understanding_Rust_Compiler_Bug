{"sha": "3da61fa4274b370dc2c72ce8b7bdbbfeb836110a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYTYxZmE0Mjc0YjM3MGRjMmM3MmNlOGI3YmRiYmZlYjgzNjExMGE=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2020-05-18T14:39:19Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2020-05-24T22:02:54Z"}, "message": "Add comments explaining the declare_id macro.", "tree": {"sha": "46fa513b89c4f2d333c455e97cade215350dd02f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46fa513b89c4f2d333c455e97cade215350dd02f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3da61fa4274b370dc2c72ce8b7bdbbfeb836110a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3da61fa4274b370dc2c72ce8b7bdbbfeb836110a", "html_url": "https://github.com/rust-lang/rust/commit/3da61fa4274b370dc2c72ce8b7bdbbfeb836110a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3da61fa4274b370dc2c72ce8b7bdbbfeb836110a/comments", "author": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bbac1275177176c6bb1a8640b5ef34dbb5c5074", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bbac1275177176c6bb1a8640b5ef34dbb5c5074", "html_url": "https://github.com/rust-lang/rust/commit/0bbac1275177176c6bb1a8640b5ef34dbb5c5074"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "7957faeb7e3d76814fb3029561b176644bd4dfe8", "filename": "src/sync.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3da61fa4274b370dc2c72ce8b7bdbbfeb836110a/src%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da61fa4274b370dc2c72ce8b7bdbbfeb836110a/src%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsync.rs?ref=3da61fa4274b370dc2c72ce8b7bdbbfeb836110a", "patch": "@@ -6,6 +6,10 @@ use rustc_index::vec::{Idx, IndexVec};\n \n use crate::*;\n \n+/// We cannot use the `newtype_index!` macro because we have to use 0 as a\n+/// sentinel value meaning that the identifier is not assigned. This is because\n+/// the pthreads static initializers initialize memory with zeros (see the\n+/// `src/shims/sync.rs` file).\n macro_rules! declare_id {\n     ($name: ident) => {\n         /// 0 is used to indicate that the id was not yet assigned and,\n@@ -22,9 +26,13 @@ macro_rules! declare_id {\n \n         impl Idx for $name {\n             fn new(idx: usize) -> Self {\n+                // We use 0 as a sentinel value (see the comment above) and,\n+                // therefore, need to shift by one when converting from an index\n+                // into a vector.\n                 $name(NonZeroU32::new(u32::try_from(idx).unwrap() + 1).unwrap())\n             }\n             fn index(self) -> usize {\n+                // See the comment in `Self::new`.\n                 usize::try_from(self.0.get() - 1).unwrap()\n             }\n         }"}]}