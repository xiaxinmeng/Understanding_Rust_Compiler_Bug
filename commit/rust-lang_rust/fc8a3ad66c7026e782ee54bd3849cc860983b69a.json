{"sha": "fc8a3ad66c7026e782ee54bd3849cc860983b69a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjOGEzYWQ2NmM3MDI2ZTc4MmVlNTRiZDM4NDljYzg2MDk4M2I2OWE=", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-08-30T19:51:30Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-08-30T19:51:30Z"}, "message": "Update for moved function from #74932", "tree": {"sha": "da48a58834b23b52b85f832c36fa5c18bc6e2d7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da48a58834b23b52b85f832c36fa5c18bc6e2d7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc8a3ad66c7026e782ee54bd3849cc860983b69a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc8a3ad66c7026e782ee54bd3849cc860983b69a", "html_url": "https://github.com/rust-lang/rust/commit/fc8a3ad66c7026e782ee54bd3849cc860983b69a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc8a3ad66c7026e782ee54bd3849cc860983b69a/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7636de33cf7935835d3be4fc504b1acc218dec6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7636de33cf7935835d3be4fc504b1acc218dec6c", "html_url": "https://github.com/rust-lang/rust/commit/7636de33cf7935835d3be4fc504b1acc218dec6c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d768775e0cf39dc1d3ea54b5b29d67eb13b36c3f", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fc8a3ad66c7026e782ee54bd3849cc860983b69a/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc8a3ad66c7026e782ee54bd3849cc860983b69a/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=fc8a3ad66c7026e782ee54bd3849cc860983b69a", "patch": "@@ -290,14 +290,14 @@ impl EarlyLintPass for UnsafeCode {\n             }\n \n             ast::ItemKind::Fn(..) => {\n-                if let Some(attr) = attr::find_by_name(&it.attrs, sym::no_mangle) {\n+                if let Some(attr) = cx.sess().find_by_name(&it.attrs, sym::no_mangle) {\n                     self.report_overriden_symbol_name(\n                         cx,\n                         attr.span,\n                         \"declaration of a `no_mangle` function\",\n                     );\n                 }\n-                if let Some(attr) = attr::find_by_name(&it.attrs, sym::export_name) {\n+                if let Some(attr) = cx.sess().find_by_name(&it.attrs, sym::export_name) {\n                     self.report_overriden_symbol_name(\n                         cx,\n                         attr.span,\n@@ -307,14 +307,14 @@ impl EarlyLintPass for UnsafeCode {\n             }\n \n             ast::ItemKind::Static(..) => {\n-                if let Some(attr) = attr::find_by_name(&it.attrs, sym::no_mangle) {\n+                if let Some(attr) = cx.sess().find_by_name(&it.attrs, sym::no_mangle) {\n                     self.report_overriden_symbol_name(\n                         cx,\n                         attr.span,\n                         \"declaration of a `no_mangle` static\",\n                     );\n                 }\n-                if let Some(attr) = attr::find_by_name(&it.attrs, sym::export_name) {\n+                if let Some(attr) = cx.sess().find_by_name(&it.attrs, sym::export_name) {\n                     self.report_overriden_symbol_name(\n                         cx,\n                         attr.span,"}]}