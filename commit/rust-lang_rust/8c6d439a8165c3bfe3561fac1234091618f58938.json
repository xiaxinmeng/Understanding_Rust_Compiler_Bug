{"sha": "8c6d439a8165c3bfe3561fac1234091618f58938", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNmQ0MzlhODE2NWMzYmZlMzU2MWZhYzEyMzQwOTE2MThmNTg5Mzg=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-07T23:29:41Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-07T23:29:41Z"}, "message": "Comments only: annotate remainder of FIXMEs in typestate", "tree": {"sha": "aac2ba39eeebeaeb53a7ecd84bc2d25950d2a14a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aac2ba39eeebeaeb53a7ecd84bc2d25950d2a14a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c6d439a8165c3bfe3561fac1234091618f58938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6d439a8165c3bfe3561fac1234091618f58938", "html_url": "https://github.com/rust-lang/rust/commit/8c6d439a8165c3bfe3561fac1234091618f58938", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c6d439a8165c3bfe3561fac1234091618f58938/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64b5ae27accc1e7b095287034bbd9727850b42de", "url": "https://api.github.com/repos/rust-lang/rust/commits/64b5ae27accc1e7b095287034bbd9727850b42de", "html_url": "https://github.com/rust-lang/rust/commit/64b5ae27accc1e7b095287034bbd9727850b42de"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "c5a4e1c58150a69582e86af742272823b115b883", "filename": "src/rustc/middle/tstate/states.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c6d439a8165c3bfe3561fac1234091618f58938/src%2Frustc%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6d439a8165c3bfe3561fac1234091618f58938/src%2Frustc%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fstates.rs?ref=8c6d439a8165c3bfe3561fac1234091618f58938", "patch": "@@ -168,7 +168,9 @@ fn find_pre_post_state_call(fcx: fn_ctxt, pres: prestate, a: @expr,\n                             id: node_id, ops: [init_op], bs: [@expr],\n                             cf: ret_style) -> bool {\n     let mut changed = find_pre_post_state_expr(fcx, pres, a);\n-    // FIXME: This could be a typestate constraint\n+    // FIXME: This could be a typestate constraint (except we're\n+    // not using them inside the compiler, I guess... see\n+    // discussion at #2178)\n     if vec::len(bs) != vec::len(ops) {\n         fcx.ccx.tcx.sess.span_bug(a.span,\n                                   #fmt[\"mismatched arg lengths: \\\n@@ -511,8 +513,6 @@ fn find_pre_post_state_expr(fcx: fn_ctxt, pres: prestate, e: @expr) -> bool {\n         ret find_pre_post_state_sub(fcx, pres, x, e.id, none);\n       }\n       expr_fail(maybe_fail_val) {\n-        // FIXME Should factor out this code,\n-        // which also appears in find_pre_post_state_exprs\n         /* if execution continues after fail, then everything is true!\n         woo! */\n         let post = false_postcond(num_constrs);"}, {"sha": "546a8ae7deb0aec55ff70ea78bf6c56b6973649b", "filename": "src/rustc/middle/tstate/tritv.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8c6d439a8165c3bfe3561fac1234091618f58938/src%2Frustc%2Fmiddle%2Ftstate%2Ftritv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6d439a8165c3bfe3561fac1234091618f58938/src%2Frustc%2Fmiddle%2Ftstate%2Ftritv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Ftritv.rs?ref=8c6d439a8165c3bfe3561fac1234091618f58938", "patch": "@@ -27,6 +27,8 @@ export to_str;\n    11 should never appear\n  FIXME: typestate precondition (uncertain and val must\n  have the same length; 11 should never appear in a given position)\n+ (except we're not putting typestate constraints in the compiler, as\n+ per discussion at #2178).\n */\n \n type t = {uncertain: bitv::bitv, val: bitv::bitv, nbits: uint};\n@@ -88,11 +90,9 @@ fn trit_or(a: trit, b: trit) -> trit {\n       tfalse {\n         alt b {\n           ttrue { dont_care }\n-\n-\n-\n-\n-          /* FIXME: ?????? */\n+          /* FIXME: ??????\n+             Again, unit tests would help here -- #2538\n+           */\n           _ {\n             tfalse\n           }\n@@ -106,6 +106,7 @@ fn trit_or(a: trit, b: trit) -> trit {\n // all variables start out in a 0 state. Probably I need\n // to make it so that all constraints start out in a 0 state\n // (we consider a constraint false until proven true), too.\n+// #2538 would help.\n fn trit_and(a: trit, b: trit) -> trit {\n     alt a {\n       dont_care { b }"}]}