{"sha": "e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZjQ3ZjQzYTZiMmMyNmE1ZWVmN2Q0YTcxMzc5YzQ3YTZlYTRlYWY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-17T15:00:34Z"}, "committer": {"name": "Tinco Andringa", "email": "mail@tinco.nl", "date": "2018-09-10T10:33:38Z"}, "message": "Update `compiletest` so that the pretty tests only read from stdin when they *have* to.\n\nThis allows us to test expansion of files that use `mod foo;` syntax.", "tree": {"sha": "8613335885f1cf2d9b4ef373e13dca7614f1ecd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8613335885f1cf2d9b4ef373e13dca7614f1ecd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf", "html_url": "https://github.com/rust-lang/rust/commit/e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tinco", "id": 22532, "node_id": "MDQ6VXNlcjIyNTMy", "avatar_url": "https://avatars.githubusercontent.com/u/22532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinco", "html_url": "https://github.com/tinco", "followers_url": "https://api.github.com/users/tinco/followers", "following_url": "https://api.github.com/users/tinco/following{/other_user}", "gists_url": "https://api.github.com/users/tinco/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinco/subscriptions", "organizations_url": "https://api.github.com/users/tinco/orgs", "repos_url": "https://api.github.com/users/tinco/repos", "events_url": "https://api.github.com/users/tinco/events{/privacy}", "received_events_url": "https://api.github.com/users/tinco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23ee94e92b2111a65de9b6269df858a565656ff8", "url": "https://api.github.com/repos/rust-lang/rust/commits/23ee94e92b2111a65de9b6269df858a565656ff8", "html_url": "https://github.com/rust-lang/rust/commit/23ee94e92b2111a65de9b6269df858a565656ff8"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "261986af52f2183ff20b12c1ed025e14a11021c5", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e4f47f43a6b2c26a5eef7d4a71379c47a6ea4eaf", "patch": "@@ -240,6 +240,11 @@ struct DebuggerCommands {\n     breakpoint_lines: Vec<usize>,\n }\n \n+enum ReadFrom {\n+    Path,\n+    Stdin,\n+}\n+\n impl<'test> TestCx<'test> {\n     /// Code executed for each revision in turn (or, if there are no\n     /// revisions, exactly once, with revision == None).\n@@ -421,7 +426,10 @@ impl<'test> TestCx<'test> {\n                     round, self.revision\n                 ),\n             );\n-            let proc_res = self.print_source(srcs[round].to_owned(), &self.props.pretty_mode);\n+            let read_from = if round == 0 { ReadFrom::Path } else { ReadFrom::Stdin };\n+            let proc_res = self.print_source(srcs[round].to_owned(),\n+                                             &self.props.pretty_mode,\n+                                             read_from);\n \n             if !proc_res.status.success() {\n                 self.fatal_proc_rec(\n@@ -477,7 +485,7 @@ impl<'test> TestCx<'test> {\n         }\n \n         // additionally, run `--pretty expanded` and try to build it.\n-        let proc_res = self.print_source(srcs[round].clone(), \"expanded\");\n+        let proc_res = self.print_source(srcs[round].clone(), \"expanded\", ReadFrom::Path);\n         if !proc_res.status.success() {\n             self.fatal_proc_rec(\"pretty-printing (expanded) failed\", &proc_res);\n         }\n@@ -495,12 +503,16 @@ impl<'test> TestCx<'test> {\n         }\n     }\n \n-    fn print_source(&self, src: String, pretty_type: &str) -> ProcRes {\n+    fn print_source(&self, src: String, pretty_type: &str, read_from: ReadFrom) -> ProcRes {\n         let aux_dir = self.aux_output_dir_name();\n+        let input: &str = match read_from {\n+            ReadFrom::Stdin => \"-\",\n+            ReadFrom::Path => self.testpaths.file.to_str().unwrap(),\n+        };\n \n         let mut rustc = Command::new(&self.config.rustc_path);\n         rustc\n-            .arg(\"-\")\n+            .arg(input)\n             .args(&[\"-Z\", &format!(\"unpretty={}\", pretty_type)])\n             .args(&[\"--target\", &self.config.target])\n             .arg(\"-L\")"}]}