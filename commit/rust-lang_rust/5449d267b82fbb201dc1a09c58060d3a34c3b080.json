{"sha": "5449d267b82fbb201dc1a09c58060d3a34c3b080", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NDlkMjY3YjgyZmJiMjAxZGMxYTA5YzU4MDYwZDNhMzRjM2IwODA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-15T11:08:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-15T11:08:12Z"}, "message": "Merge #2850\n\n2850: Use types from vscode-languageclient r=matklad a=kiljacken\n\nNow that we're running with 3.15 of the LSP for VSCode we don't need to define these interfaces ourselves. Yay!\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>", "tree": {"sha": "7ba01677ada676242f74151f716a2e0bcc47e1a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ba01677ada676242f74151f716a2e0bcc47e1a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5449d267b82fbb201dc1a09c58060d3a34c3b080", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHvKcCRBK7hj4Ov3rIwAAdHIIAKsOMqOH+Iq8GZ5Uy5ozhae/\nSvmubdI3WoaTn0OVAgSsisyUwQBkHFeAUjKgA/YHHmxOQPzJnkqerL94rsf4htVD\nr1BL3g/J+vSTDYwkBEruJgHNS2iwiOA+NM9iZwjEvVrO/SG+p5+KKe7dGoKanj6E\npcvkEXDUNmgdw7oFwmXWIw8XaOtcw8KH2L81hZU9WdRmvwt+ORxa5N01aybHgY7a\n1wpCpLS1F7UUxPj6GU6tNE9WjLIh2R8KUYyl7UaKnkrpL1wc3t6d1tLNEC3fqXJd\nL31rjETVALfXXm+Hd+m1GUVu0mPpVYMG/gDMKJpHqwLYi6WcYk0tBqBN12GuNpI=\n=uox0\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ba01677ada676242f74151f716a2e0bcc47e1a2\nparent 876f92d547af5f39170350f3995647ec934f590b\nparent 70cba0fe0fe3583deb19709a61768695b83d3ea9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1579086492 +0000\ncommitter GitHub <noreply@github.com> 1579086492 +0000\n\nMerge #2850\n\n2850: Use types from vscode-languageclient r=matklad a=kiljacken\n\nNow that we're running with 3.15 of the LSP for VSCode we don't need to define these interfaces ourselves. Yay!\n\nCo-authored-by: Emil Lauridsen <mine809@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5449d267b82fbb201dc1a09c58060d3a34c3b080", "html_url": "https://github.com/rust-lang/rust/commit/5449d267b82fbb201dc1a09c58060d3a34c3b080", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5449d267b82fbb201dc1a09c58060d3a34c3b080/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "876f92d547af5f39170350f3995647ec934f590b", "url": "https://api.github.com/repos/rust-lang/rust/commits/876f92d547af5f39170350f3995647ec934f590b", "html_url": "https://github.com/rust-lang/rust/commit/876f92d547af5f39170350f3995647ec934f590b"}, {"sha": "70cba0fe0fe3583deb19709a61768695b83d3ea9", "url": "https://api.github.com/repos/rust-lang/rust/commits/70cba0fe0fe3583deb19709a61768695b83d3ea9", "html_url": "https://github.com/rust-lang/rust/commit/70cba0fe0fe3583deb19709a61768695b83d3ea9"}], "stats": {"total": 40, "additions": 9, "deletions": 31}, "files": [{"sha": "de6a3b2b7ed14ef28f4d8c642ebf0f0422522727", "filename": "editors/code/rollup.config.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5449d267b82fbb201dc1a09c58060d3a34c3b080/editors%2Fcode%2Frollup.config.js", "raw_url": "https://github.com/rust-lang/rust/raw/5449d267b82fbb201dc1a09c58060d3a34c3b080/editors%2Fcode%2Frollup.config.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Frollup.config.js?ref=5449d267b82fbb201dc1a09c58060d3a34c3b080", "patch": "@@ -13,7 +13,7 @@ export default {\n         commonjs({\n             namedExports: {\n                 // squelch missing import warnings\n-                'vscode-languageclient': ['CreateFile', 'RenameFile', 'ErrorCodes']\n+                'vscode-languageclient': ['CreateFile', 'RenameFile', 'ErrorCodes', 'WorkDoneProgress', 'WorkDoneProgressBegin', 'WorkDoneProgressReport', 'WorkDoneProgressEnd']\n             }\n         })\n     ],"}, {"sha": "6357e44f1ef3dcf4896d43011586afd428c3c968", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5449d267b82fbb201dc1a09c58060d3a34c3b080/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5449d267b82fbb201dc1a09c58060d3a34c3b080/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=5449d267b82fbb201dc1a09c58060d3a34c3b080", "patch": "@@ -42,7 +42,7 @@ const parameterHintDecorationType = vscode.window.createTextEditorDecorationType\n     before: {\n         color: new vscode.ThemeColor('rust_analyzer.inlayHint'),\n     }\n-})\n+});\n \n class HintsUpdater {\n     private pending: Map<string, vscode.CancellationTokenSource> = new Map();"}, {"sha": "c75fddf9d749987a1031cfd85b278802c482ca8f", "filename": "editors/code/src/status_display.ts", "status": "modified", "additions": 7, "deletions": 29, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5449d267b82fbb201dc1a09c58060d3a34c3b080/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5449d267b82fbb201dc1a09c58060d3a34c3b080/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fstatus_display.ts?ref=5449d267b82fbb201dc1a09c58060d3a34c3b080", "patch": "@@ -1,5 +1,7 @@\n import * as vscode from 'vscode';\n \n+import { WorkDoneProgress, WorkDoneProgressBegin, WorkDoneProgressReport, WorkDoneProgressEnd } from 'vscode-languageclient';\n+\n import { Ctx } from './ctx';\n \n const spinnerFrames = ['\u280b', '\u2819', '\u2839', '\u2838', '\u283c', '\u2834', '\u2826', '\u2827', '\u2807', '\u280f'];\n@@ -8,7 +10,7 @@ export function activateStatusDisplay(ctx: Ctx) {\n     const statusDisplay = new StatusDisplay(ctx.config.cargoWatchOptions.command);\n     ctx.pushCleanup(statusDisplay);\n     ctx.onDidRestart(client => {\n-        client.onNotification('$/progress', params => statusDisplay.handleProgressNotification(params));\n+        client.onProgress(WorkDoneProgress.type, 'rustAnalyzer/cargoWatcher', params => statusDisplay.handleProgressNotification(params));\n     });\n }\n \n@@ -63,20 +65,15 @@ class StatusDisplay implements vscode.Disposable {\n         this.statusBarItem.dispose();\n     }\n \n-    handleProgressNotification(params: ProgressParams) {\n-        const { token, value } = params;\n-        if (token !== 'rustAnalyzer/cargoWatcher') {\n-            return;\n-        }\n-\n-        switch (value.kind) {\n+    handleProgressNotification(params: WorkDoneProgressBegin | WorkDoneProgressReport | WorkDoneProgressEnd) {\n+        switch (params.kind) {\n             case 'begin':\n                 this.show();\n                 break;\n \n             case 'report':\n-                if (value.message) {\n-                    this.packageName = value.message;\n+                if (params.message) {\n+                    this.packageName = params.message;\n                 }\n                 break;\n \n@@ -90,22 +87,3 @@ class StatusDisplay implements vscode.Disposable {\n         return spinnerFrames[(this.i = ++this.i % spinnerFrames.length)];\n     }\n }\n-\n-// FIXME: Replace this once vscode-languageclient is updated to LSP 3.15\n-interface ProgressParams {\n-    token: string;\n-    value: WorkDoneProgress;\n-}\n-\n-enum WorkDoneProgressKind {\n-    Begin = 'begin',\n-    Report = 'report',\n-    End = 'end',\n-}\n-\n-interface WorkDoneProgress {\n-    kind: WorkDoneProgressKind;\n-    message?: string;\n-    cancelable?: boolean;\n-    percentage?: string;\n-}"}]}