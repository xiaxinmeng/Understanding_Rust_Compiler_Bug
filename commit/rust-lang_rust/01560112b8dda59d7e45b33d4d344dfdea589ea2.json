{"sha": "01560112b8dda59d7e45b33d4d344dfdea589ea2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNTYwMTEyYjhkZGE1OWQ3ZTQ1YjMzZDRkMzQ0ZGZkZWE1ODllYTI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T18:29:36Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T18:29:36Z"}, "message": "Test fixes and rebase conflicts, round 1", "tree": {"sha": "5610d43cfcb6630d7d4af76fb94ebeebacd39993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5610d43cfcb6630d7d4af76fb94ebeebacd39993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01560112b8dda59d7e45b33d4d344dfdea589ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01560112b8dda59d7e45b33d4d344dfdea589ea2", "html_url": "https://github.com/rust-lang/rust/commit/01560112b8dda59d7e45b33d4d344dfdea589ea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01560112b8dda59d7e45b33d4d344dfdea589ea2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e361b25c5e0ae2b49b1850499f0c19683c843fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e361b25c5e0ae2b49b1850499f0c19683c843fe6", "html_url": "https://github.com/rust-lang/rust/commit/e361b25c5e0ae2b49b1850499f0c19683c843fe6"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "5c27c03e8e0b259a0216abb1245f5e82b8b4fea7", "filename": "src/doc/trpl/lang-items.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Flang-items.md?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -16,7 +16,7 @@ and one for deallocation. A freestanding program that uses the `Box`\n sugar for dynamic allocations via `malloc` and `free`:\n \n ```\n-#![feature(lang_items, box_syntax, start, no_std)]\n+#![feature(lang_items, box_syntax, start, no_std, libc)]\n #![no_std]\n \n extern crate libc;"}, {"sha": "094c82a08cc9d12ac3eb57ac09deae56043b65ee", "filename": "src/doc/trpl/no-stdlib.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Fno-stdlib.md", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Fno-stdlib.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fno-stdlib.md?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -21,7 +21,7 @@ The function marked `#[start]` is passed the command line parameters\n in the same format as C:\n \n ```\n-#![feature(lang_items, start, no_std)]\n+#![feature(lang_items, start, no_std, libc)]\n #![no_std]\n \n // Pull in the system libc library for what crt0.o likely requires\n@@ -104,7 +104,7 @@ As an example, here is a program that will calculate the dot product of two\n vectors provided from C, using idiomatic Rust practices.\n \n ```\n-#![feature(lang_items, start, no_std)]\n+#![feature(lang_items, start, no_std, core, libc)]\n #![no_std]\n \n # extern crate libc;"}, {"sha": "6226ea9f3e75a21e067909c49155bad69e03bb4b", "filename": "src/doc/trpl/tracing-macros.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Ftracing-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Ftracing-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ftracing-macros.md?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -31,7 +31,7 @@ macro_rules! bct {\n \n This is pretty complex! we can see the output\n \n- ```rust\n+```rust,ignore\n #![feature(trace_macros)]\n \n macro_rules! bct {\n@@ -61,6 +61,7 @@ fn main() {\n \n     bct!(0, 0, 1, 1, 1 ; 1, 0, 1);\n }\n+```\n \n This will print out a wall of text:\n "}, {"sha": "e8e02cc9d092c2310f7a291b1b48923e197abf53", "filename": "src/doc/trpl/unstable.md", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Funstable.md", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Fdoc%2Ftrpl%2Funstable.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Funstable.md?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -0,0 +1 @@\n+% Unstable Rust"}, {"sha": "6d9b93e9be07e0354077fed8467b46878074292d", "filename": "src/libcore/option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -151,7 +151,7 @@ use default::Default;\n use iter::{ExactSizeIterator};\n use iter::{Iterator, IteratorExt, DoubleEndedIterator, FromIterator, IntoIterator};\n use mem;\n-use ops::{Deref, FnOnce};\n+use ops::FnOnce;\n use result::Result::{Ok, Err};\n use result::Result;\n #[allow(deprecated)]"}, {"sha": "569142c0d7dc9609d0e1f04d7b837c6fb3bf9458", "filename": "src/libcoretest/option.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibcoretest%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibcoretest%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Foption.rs?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -258,9 +258,6 @@ fn test_cloned() {\n     assert_eq!(opt_none.clone(), None);\n     assert_eq!(opt_none.cloned(), None);\n \n-    // Mutable refs work\n-    assert_eq!(opt_mut_ref.cloned(), Some(2u32));\n-\n     // Immutable ref works\n     assert_eq!(opt_ref.clone(), Some(&val1));\n     assert_eq!(opt_ref.cloned(), Some(1u32));"}, {"sha": "54feed930a80d7b9766d1e54bade1090abcf5da6", "filename": "src/librustc_borrowck/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibrustc_borrowck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibrustc_borrowck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Flib.rs?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -21,7 +21,6 @@\n \n #![allow(non_camel_case_types)]\n \n-#![feature(core)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(rustc_private)]"}, {"sha": "24278af48a964e9687d63565337cecdcab7ece7e", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01560112b8dda59d7e45b33d4d344dfdea589ea2/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=01560112b8dda59d7e45b33d4d344dfdea589ea2", "patch": "@@ -21,7 +21,6 @@\n \n #![feature(alloc)]\n #![feature(collections)]\n-#![feature(core)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(rustc_private)]\n #![feature(staged_api)]"}]}