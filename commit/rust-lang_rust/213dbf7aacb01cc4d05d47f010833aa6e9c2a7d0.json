{"sha": "213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxM2RiZjdhYWNiMDFjYzRkMDVkNDdmMDEwODMzYWE2ZTljMmE3ZDA=", "commit": {"author": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-12T21:58:59Z"}, "committer": {"name": "dvermd", "email": "315743+dvermd@users.noreply.github.com", "date": "2020-10-26T21:34:40Z"}, "message": "clippy_lint: Add 'ref_option_ref'", "tree": {"sha": "5d275255d35a08d2f5e176ee449f6cafba3a2fda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d275255d35a08d2f5e176ee449f6cafba3a2fda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "html_url": "https://github.com/rust-lang/rust/commit/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/comments", "author": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dvermd", "id": 315743, "node_id": "MDQ6VXNlcjMxNTc0Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/315743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvermd", "html_url": "https://github.com/dvermd", "followers_url": "https://api.github.com/users/dvermd/followers", "following_url": "https://api.github.com/users/dvermd/following{/other_user}", "gists_url": "https://api.github.com/users/dvermd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvermd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvermd/subscriptions", "organizations_url": "https://api.github.com/users/dvermd/orgs", "repos_url": "https://api.github.com/users/dvermd/repos", "events_url": "https://api.github.com/users/dvermd/events{/privacy}", "received_events_url": "https://api.github.com/users/dvermd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afbac8906e614a63ff5825710c3ebe45a3b5e01a", "url": "https://api.github.com/repos/rust-lang/rust/commits/afbac8906e614a63ff5825710c3ebe45a3b5e01a", "html_url": "https://github.com/rust-lang/rust/commit/afbac8906e614a63ff5825710c3ebe45a3b5e01a"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "db834fe108bca6f137f3db1ab1909dc38089599f", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "patch": "@@ -1917,6 +1917,7 @@ Released 2018-09-13\n [`redundant_pub_crate`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pub_crate\n [`redundant_static_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n [`ref_in_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_in_deref\n+[`ref_option_ref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_option_ref\n [`regex_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#regex_macro\n [`repeat_once`]: https://rust-lang.github.io/rust-clippy/master/index.html#repeat_once\n [`replace_consts`]: https://rust-lang.github.io/rust-clippy/master/index.html#replace_consts"}, {"sha": "1ab36231758f56241f78fcdbaca6fabc22ee0c8e", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "patch": "@@ -293,6 +293,7 @@ mod redundant_closure_call;\n mod redundant_field_names;\n mod redundant_pub_crate;\n mod redundant_static_lifetimes;\n+mod ref_option_ref;\n mod reference;\n mod regex;\n mod repeat_once;\n@@ -803,6 +804,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &redundant_field_names::REDUNDANT_FIELD_NAMES,\n         &redundant_pub_crate::REDUNDANT_PUB_CRATE,\n         &redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES,\n+        &ref_option_ref::REF_OPTION_REF,\n         &reference::DEREF_ADDROF,\n         &reference::REF_IN_DEREF,\n         &regex::INVALID_REGEX,\n@@ -1024,6 +1026,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &sess.target,\n     );\n     store.register_late_pass(move || box pass_by_ref_or_value);\n+    store.register_late_pass(|| box ref_option_ref::RefOptionRef);\n     store.register_late_pass(|| box try_err::TryErr);\n     store.register_late_pass(|| box use_self::UseSelf);\n     store.register_late_pass(|| box bytecount::ByteCount);\n@@ -1493,6 +1496,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&redundant_closure_call::REDUNDANT_CLOSURE_CALL),\n         LintId::of(&redundant_field_names::REDUNDANT_FIELD_NAMES),\n         LintId::of(&redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n+        LintId::of(&ref_option_ref::REF_OPTION_REF),\n         LintId::of(&reference::DEREF_ADDROF),\n         LintId::of(&reference::REF_IN_DEREF),\n         LintId::of(&regex::INVALID_REGEX),\n@@ -1648,6 +1652,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&ranges::MANUAL_RANGE_CONTAINS),\n         LintId::of(&redundant_field_names::REDUNDANT_FIELD_NAMES),\n         LintId::of(&redundant_static_lifetimes::REDUNDANT_STATIC_LIFETIMES),\n+        LintId::of(&ref_option_ref::REF_OPTION_REF),\n         LintId::of(&regex::TRIVIAL_REGEX),\n         LintId::of(&returns::LET_AND_RETURN),\n         LintId::of(&returns::NEEDLESS_RETURN),"}, {"sha": "fbee3263556b750b38b4a03b36474daf5d100733", "filename": "clippy_lints/src/ref_option_ref.rs", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/clippy_lints%2Fsrc%2Fref_option_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/clippy_lints%2Fsrc%2Fref_option_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fref_option_ref.rs?ref=213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "patch": "@@ -0,0 +1,65 @@\n+use crate::utils::{last_path_segment, match_def_path, paths, snippet, span_lint_and_sugg};\n+use rustc_hir::{GenericArg, Local, Mutability, TyKind};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for usage of `&Option<&T>`.\n+    ///\n+    /// **Why is this bad?** Since `&` is Copy, it's useless to have a\n+    /// reference on `Option<&T>`.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust,ignore\n+    /// // example code where clippy issues a warning\n+    /// let x: &Option<&u32> = &Some(&0u32);\n+    /// ```\n+    /// Use instead:\n+    /// ```rust,ignore\n+    /// // example code which does not raise clippy warning\n+    /// let x: Option<&u32> = Some(&0u32);\n+    /// ```\n+    pub REF_OPTION_REF,\n+    style,\n+    \"use `Option<&T>` instead of `&Option<&T>`\"\n+}\n+\n+declare_lint_pass!(RefOptionRef => [REF_OPTION_REF]);\n+\n+impl<'tcx> LateLintPass<'tcx> for RefOptionRef {\n+    fn check_local(&mut self, cx: &LateContext<'tcx>, local: &'tcx Local<'_>) {\n+        if_chain! {\n+            if let Some(ref ty) = local.ty;\n+            if let TyKind::Rptr(_, ref mut_ty) = ty.kind;\n+            if mut_ty.mutbl == Mutability::Not;\n+            if let TyKind::Path(ref qpath) = &mut_ty.ty.kind ;\n+            if let Some(def_id) = cx.typeck_results().qpath_res(qpath, local.hir_id).opt_def_id();\n+            if match_def_path(cx, def_id, &paths::OPTION);\n+            if let Some(ref params) = last_path_segment(qpath).args ;\n+            if !params.parenthesized;\n+            if let Some(inner_ty) = params.args.iter().find_map(|arg| match arg {\n+                GenericArg::Type(inner_ty) => Some(inner_ty),\n+                _ => None,\n+            });\n+            if let TyKind::Rptr(_, _) = inner_ty.kind;\n+\n+            then {\n+                span_lint_and_sugg(\n+                    cx,\n+                    REF_OPTION_REF,\n+                    ty.span,\n+                    \"since & implements Copy trait, &Option<&T> can be simplifyied into Option<&T>\",\n+                    \"try\",\n+                    format!(\"Option<{}>\", &snippet(cx, inner_ty.span, \"..\")),\n+                    Applicability::MachineApplicable,\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "b3bd1923d4e6fecfcc323be10cecd4b9606eade5", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "patch": "@@ -2013,6 +2013,13 @@ vec![\n         deprecation: None,\n         module: \"reference\",\n     },\n+    Lint {\n+        name: \"ref_option_ref\",\n+        group: \"style\",\n+        desc: \"use `Option<&T>` instead of `&Option<&T>`\",\n+        deprecation: None,\n+        module: \"ref_option_ref\",\n+    },\n     Lint {\n         name: \"repeat_once\",\n         group: \"complexity\","}, {"sha": "7f05990c0a0dcf15ca2a6d05744351900f24a50a", "filename": "tests/ui/ref_option_ref.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/tests%2Fui%2Fref_option_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/tests%2Fui%2Fref_option_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_option_ref.rs?ref=213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "patch": "@@ -0,0 +1,5 @@\n+#![warn(clippy::ref_option_ref)]\n+\n+fn main() {\n+    let x: &Option<&u32> = &None;\n+}"}, {"sha": "90bcaef757093c29c5b105e1de95a88a193ed370", "filename": "tests/ui/ref_option_ref.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/tests%2Fui%2Fref_option_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0/tests%2Fui%2Fref_option_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fref_option_ref.stderr?ref=213dbf7aacb01cc4d05d47f010833aa6e9c2a7d0", "patch": "@@ -0,0 +1,10 @@\n+error: since & implements Copy trait, &Option<&T> can be simplifyied into Option<&T>\n+  --> $DIR/ref_option_ref.rs:4:12\n+   |\n+LL |     let x: &Option<&u32> = &None;\n+   |            ^^^^^^^^^^^^^ help: try: `Option<&u32>`\n+   |\n+   = note: `-D clippy::ref-option-ref` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}