{"sha": "78f93c8033d4803167536a070c2162b072e16055", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZjkzYzgwMzNkNDgwMzE2NzUzNmEwNzBjMjE2MmIwNzJlMTYwNTU=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-30T20:08:59Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-30T20:08:59Z"}, "message": "traits => match_ast!", "tree": {"sha": "bc2a50b6af2d38debd3f5fba0e18da4e7cd3a8e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc2a50b6af2d38debd3f5fba0e18da4e7cd3a8e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78f93c8033d4803167536a070c2162b072e16055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78f93c8033d4803167536a070c2162b072e16055", "html_url": "https://github.com/rust-lang/rust/commit/78f93c8033d4803167536a070c2162b072e16055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78f93c8033d4803167536a070c2162b072e16055/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b205a0ced3f8b2136ac256d8a3dca9fa09e910be", "url": "https://api.github.com/repos/rust-lang/rust/commits/b205a0ced3f8b2136ac256d8a3dca9fa09e910be", "html_url": "https://github.com/rust-lang/rust/commit/b205a0ced3f8b2136ac256d8a3dca9fa09e910be"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "c2b005886a97f58b5beea1b46eb43dbf7db7ebf3", "filename": "crates/ra_syntax/src/ast/traits.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/78f93c8033d4803167536a070c2162b072e16055/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f93c8033d4803167536a070c2162b072e16055/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs?ref=78f93c8033d4803167536a070c2162b072e16055", "patch": "@@ -6,6 +6,7 @@ use itertools::Itertools;\n \n use crate::{\n     ast::{self, child_opt, children, AstChildren, AstNode, AstToken},\n+    match_ast,\n     syntax_node::{SyntaxElementChildren, SyntaxNodeChildren},\n };\n \n@@ -68,11 +69,12 @@ impl Iterator for ItemOrMacroIter {\n     fn next(&mut self) -> Option<ItemOrMacro> {\n         loop {\n             let n = self.0.next()?;\n-            if let Some(item) = ast::ModuleItem::cast(n.clone()) {\n-                return Some(ItemOrMacro::Item(item));\n-            }\n-            if let Some(call) = ast::MacroCall::cast(n) {\n-                return Some(ItemOrMacro::Macro(call));\n+            match_ast! {\n+                match n {\n+                    ast::ModuleItem(it) => { return Some(ItemOrMacro::Item(it)) },\n+                    ast::MacroCall(it) => { return Some(ItemOrMacro::Macro(it)) },\n+                    _ => {},\n+                }\n             }\n         }\n     }"}]}