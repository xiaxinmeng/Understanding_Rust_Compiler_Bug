{"sha": "92bd267ba8d8d12cba15490c618628c1f3ea5ac5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyYmQyNjdiYThkOGQxMmNiYTE1NDkwYzYxODYyOGMxZjNlYTVhYzU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-09T19:18:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-09T19:18:29Z"}, "message": "Rollup merge of #66254 - CAD97:patch-1, r=KodrAus\n\nMake Layout::new const\n\nThis seems like a reasonable change to make. If we don't provide `Layout::new::<T>` as `const`, then users can just instead do the more error prone `Layout::from_size_align_unchecked(mem::size_of::<T>(), mem::align_of::<T>())` for the same effect and an extra `unsafe { }` incantation.", "tree": {"sha": "8582ecf268d798cb4219229716a51e417a5e837c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8582ecf268d798cb4219229716a51e417a5e837c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92bd267ba8d8d12cba15490c618628c1f3ea5ac5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeF3yFCRBK7hj4Ov3rIwAAdHIIAK7G6vDyvXVYft8+igQdiDtn\n3Mi9MxXu2tMYNk/gy7asba9UzLlUywhJOMCfUOqlbkPmfHODeqAD60BiGNWa1gbz\nERcQvfvvapbtNmfAXRQtRGlmIN+tlRMMQv/Mv4P5xumbArOcxk7SGfjWb0xUCbcn\nLfMrBfgVVzGu2FBMBCKxJKghaQJcvdNLnTs+pAHM5ttuaCerLgFQFJppDUdAJmFN\n5CCn2sBEzBFGX+EEf8wce1q3bkdSG4HGR0HH5zXSw8h5fCSyGDTTRDqXt14ZsG9V\nnjIUlWoJibMXU91gdepE7vECIP168/SG+npHmiqEMYZgJDtnX/hrv2W2NEXPhnE=\n=3KjY\n-----END PGP SIGNATURE-----\n", "payload": "tree 8582ecf268d798cb4219229716a51e417a5e837c\nparent c404ce689f7692f2c9b1df51803faf88ba11d2e8\nparent d860def8e2e2c807c37907c764b937ec35d4f2e6\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578597509 +0900\ncommitter GitHub <noreply@github.com> 1578597509 +0900\n\nRollup merge of #66254 - CAD97:patch-1, r=KodrAus\n\nMake Layout::new const\n\nThis seems like a reasonable change to make. If we don't provide `Layout::new::<T>` as `const`, then users can just instead do the more error prone `Layout::from_size_align_unchecked(mem::size_of::<T>(), mem::align_of::<T>())` for the same effect and an extra `unsafe { }` incantation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92bd267ba8d8d12cba15490c618628c1f3ea5ac5", "html_url": "https://github.com/rust-lang/rust/commit/92bd267ba8d8d12cba15490c618628c1f3ea5ac5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92bd267ba8d8d12cba15490c618628c1f3ea5ac5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c404ce689f7692f2c9b1df51803faf88ba11d2e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c404ce689f7692f2c9b1df51803faf88ba11d2e8", "html_url": "https://github.com/rust-lang/rust/commit/c404ce689f7692f2c9b1df51803faf88ba11d2e8"}, {"sha": "d860def8e2e2c807c37907c764b937ec35d4f2e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d860def8e2e2c807c37907c764b937ec35d4f2e6", "html_url": "https://github.com/rust-lang/rust/commit/d860def8e2e2c807c37907c764b937ec35d4f2e6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "163f9170b8bfbd7ae9c6d51fe12527456028b4e4", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/92bd267ba8d8d12cba15490c618628c1f3ea5ac5/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92bd267ba8d8d12cba15490c618628c1f3ea5ac5/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=92bd267ba8d8d12cba15490c618628c1f3ea5ac5", "patch": "@@ -17,7 +17,7 @@ use crate::usize;\n #[derive(Debug)]\n pub struct Excess(pub NonNull<u8>, pub usize);\n \n-fn size_align<T>() -> (usize, usize) {\n+const fn size_align<T>() -> (usize, usize) {\n     (mem::size_of::<T>(), mem::align_of::<T>())\n }\n \n@@ -120,14 +120,14 @@ impl Layout {\n \n     /// Constructs a `Layout` suitable for holding a value of type `T`.\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n+    #[rustc_const_stable(feature = \"alloc_layout_const_new\", since = \"1.42.0\")]\n     #[inline]\n-    pub fn new<T>() -> Self {\n+    pub const fn new<T>() -> Self {\n         let (size, align) = size_align::<T>();\n         // Note that the align is guaranteed by rustc to be a power of two and\n         // the size+align combo is guaranteed to fit in our address space. As a\n         // result use the unchecked constructor here to avoid inserting code\n         // that panics if it isn't optimized well enough.\n-        debug_assert!(Layout::from_size_align(size, align).is_ok());\n         unsafe { Layout::from_size_align_unchecked(size, align) }\n     }\n "}]}