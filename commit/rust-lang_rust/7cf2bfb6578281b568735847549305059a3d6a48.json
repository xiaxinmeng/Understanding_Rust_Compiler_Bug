{"sha": "7cf2bfb6578281b568735847549305059a3d6a48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZjJiZmI2NTc4MjgxYjU2ODczNTg0NzU0OTMwNTA1OWEzZDZhNDg=", "commit": {"author": {"name": "Andre Richter", "email": "andre.o.richter@gmail.com", "date": "2020-02-28T20:51:16Z"}, "committer": {"name": "Andre Richter", "email": "andre.o.richter@gmail.com", "date": "2020-02-28T20:51:16Z"}, "message": "Fix no_std detection for target triples\n\nThe current check for wether a target is no_std or not is matching for the\nstring \"-none-\" in a target triple. This doesn't work for triples that end in\n\"-none\", like \"aarch64-unknown-none\".\n\nFix this by matching for \"-none\" instead.\n\nI checked for all the current target triples containing \"none\", and this should\nnot generate any false positives.\n\nThis fixes an issue encountered in https://github.com/rust-lang/rust/pull/68334", "tree": {"sha": "dab0e3dc1d4aa59941d8e87c759b7cf1623275ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dab0e3dc1d4aa59941d8e87c759b7cf1623275ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cf2bfb6578281b568735847549305059a3d6a48", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEgYxQvhftoHGii/kEIRbBqxAvYV4FAl5ZfpcACgkQIRbBqxAv\nYV6JQBAAqywsl7TCQdmNG+weNgfbpnvWmYR4dOeax74uTNiI3MjbGHhYBFeJG2Mg\nDG4OxCU4DcYsT32JFQSQyWw1RvD7RwFqMF0KSliEhpZ4DkqP10RPNjMAKE48jkSl\n2Oz9RhEJnaQqhJmDfS9mFSMP5m+woq5TlHX4wv2VKl/8bKIVMlZ4/b2KOqg148YQ\nrJiiSFf+wm+m9G2kIyC+zmFkgz0w2N3b/kzPAtF1I3H85sgplHjkB418HJLXE1Xv\n5PHq8d0HBnOZHconCrev9iPqH5Ob52s2jhm1Oe8kQbkE+paQC6LJgdf7ZyJlCxDr\nvXhkXea4uOL6iN4kMrwZhPv4san4vVdnsCOgLxzxKVsZZYxeKXgg0XCZtRd3nfZC\nPfSowZPVwDqljX6vy44FXJK2EXZOx3NsGfI4aoDR1URP5tHLlYXsfHjE4FFaAMC/\n7pFwmI35OkKjafgJymZnvLz2J/BzE5yHYlJ+iqJIKmMXbpLq12QOt880Q+OzhTBe\nEIQTVbuljVeuakMA3PJF1tg/JhrLgVdgclt9+oe8MyoknAaC9sPPOs3u+rPxda4J\nKoJPtm75jKXdL9ETByD7NUeZxy90Jmu4wipr6afFcU43ndFZb4duEvD8tPCip30n\nAvCFRic52BiUeickRETFzf3I7oj2GcyXdwnJN8X1ZSFdmm4O3sU=\n=iKLF\n-----END PGP SIGNATURE-----", "payload": "tree dab0e3dc1d4aa59941d8e87c759b7cf1623275ad\nparent eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc\nauthor Andre Richter <andre.o.richter@gmail.com> 1582923076 +0100\ncommitter Andre Richter <andre.o.richter@gmail.com> 1582923076 +0100\n\nFix no_std detection for target triples\n\nThe current check for wether a target is no_std or not is matching for the\nstring \"-none-\" in a target triple. This doesn't work for triples that end in\n\"-none\", like \"aarch64-unknown-none\".\n\nFix this by matching for \"-none\" instead.\n\nI checked for all the current target triples containing \"none\", and this should\nnot generate any false positives.\n\nThis fixes an issue encountered in https://github.com/rust-lang/rust/pull/68334\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf2bfb6578281b568735847549305059a3d6a48", "html_url": "https://github.com/rust-lang/rust/commit/7cf2bfb6578281b568735847549305059a3d6a48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cf2bfb6578281b568735847549305059a3d6a48/comments", "author": {"login": "andre-richter", "id": 4130005, "node_id": "MDQ6VXNlcjQxMzAwMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4130005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andre-richter", "html_url": "https://github.com/andre-richter", "followers_url": "https://api.github.com/users/andre-richter/followers", "following_url": "https://api.github.com/users/andre-richter/following{/other_user}", "gists_url": "https://api.github.com/users/andre-richter/gists{/gist_id}", "starred_url": "https://api.github.com/users/andre-richter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andre-richter/subscriptions", "organizations_url": "https://api.github.com/users/andre-richter/orgs", "repos_url": "https://api.github.com/users/andre-richter/repos", "events_url": "https://api.github.com/users/andre-richter/events{/privacy}", "received_events_url": "https://api.github.com/users/andre-richter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andre-richter", "id": 4130005, "node_id": "MDQ6VXNlcjQxMzAwMDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4130005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andre-richter", "html_url": "https://github.com/andre-richter", "followers_url": "https://api.github.com/users/andre-richter/followers", "following_url": "https://api.github.com/users/andre-richter/following{/other_user}", "gists_url": "https://api.github.com/users/andre-richter/gists{/gist_id}", "starred_url": "https://api.github.com/users/andre-richter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andre-richter/subscriptions", "organizations_url": "https://api.github.com/users/andre-richter/orgs", "repos_url": "https://api.github.com/users/andre-richter/repos", "events_url": "https://api.github.com/users/andre-richter/events{/privacy}", "received_events_url": "https://api.github.com/users/andre-richter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc", "html_url": "https://github.com/rust-lang/rust/commit/eaa02f599f651246d5d1b99e7a4c6fa8d04bc9dc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "56164b74f3088c9db77d94cd9b8a585595fecefb", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cf2bfb6578281b568735847549305059a3d6a48/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf2bfb6578281b568735847549305059a3d6a48/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=7cf2bfb6578281b568735847549305059a3d6a48", "patch": "@@ -180,7 +180,7 @@ pub struct Target {\n impl Target {\n     pub fn from_triple(triple: &str) -> Self {\n         let mut target: Self = Default::default();\n-        if triple.contains(\"-none-\") || triple.contains(\"nvptx\") {\n+        if triple.contains(\"-none\") || triple.contains(\"nvptx\") {\n             target.no_std = true;\n         }\n         target"}]}