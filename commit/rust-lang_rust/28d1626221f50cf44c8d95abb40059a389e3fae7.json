{"sha": "28d1626221f50cf44c8d95abb40059a389e3fae7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZDE2MjYyMjFmNTBjZjQ0YzhkOTVhYmI0MDA1OWEzODllM2ZhZTc=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-20T21:59:45Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-20T22:09:24Z"}, "message": "Remove the old library names. These were unused since rustboot.\nRight now rustc hardcodes -lrustllvm. The idea is to instead remember all the native\nmodules used and convert them to -l directives to the linker. In the case of a\nlibrary that is installed in an unusual location, Graydon suggested using metadata:\n\nnative module foo = \"bar\" {\n}", "tree": {"sha": "18b109c9c92ef3a39888c39e0f06962605d45b6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18b109c9c92ef3a39888c39e0f06962605d45b6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28d1626221f50cf44c8d95abb40059a389e3fae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28d1626221f50cf44c8d95abb40059a389e3fae7", "html_url": "https://github.com/rust-lang/rust/commit/28d1626221f50cf44c8d95abb40059a389e3fae7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28d1626221f50cf44c8d95abb40059a389e3fae7/comments", "author": null, "committer": null, "parents": [{"sha": "2ad0954941c839474f501252cf1551ff94bd5903", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad0954941c839474f501252cf1551ff94bd5903", "html_url": "https://github.com/rust-lang/rust/commit/2ad0954941c839474f501252cf1551ff94bd5903"}], "stats": {"total": 23, "additions": 2, "deletions": 21}, "files": [{"sha": "c72cd4f41fdbb3678e4940bfd43f6b1589d27120", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/28d1626221f50cf44c8d95abb40059a389e3fae7/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28d1626221f50cf44c8d95abb40059a389e3fae7/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=28d1626221f50cf44c8d95abb40059a389e3fae7", "patch": "@@ -125,7 +125,7 @@ const uint LLVMRealULT = 12u;\n const uint LLVMRealULE = 13u;\n const uint LLVMRealUNE = 14u;\n \n-native mod llvm = llvm_lib {\n+native mod llvm = \"rustllvm\" {\n \n     type ModuleRef;\n     type ContextRef;\n@@ -883,9 +883,6 @@ native mod llvm = llvm_lib {\n     fn LLVMLinkModules(ModuleRef Dest, ModuleRef Src) -> Bool;\n }\n \n-native mod rustllvm = llvm_lib {\n-}\n-\n /* Slightly more terse object-interface to LLVM's 'builder' functions. For the\n  * most part, build.Foo() wraps LLVMBuildFoo(), threading the correct\n  * BuilderRef B into place.  A BuilderRef is a cursor-like LLVM value that"}, {"sha": "565b436d404543663d54f8294bd150b71bc51284", "filename": "src/comp/rustc.rc", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/28d1626221f50cf44c8d95abb40059a389e3fae7/src%2Fcomp%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/28d1626221f50cf44c8d95abb40059a389e3fae7/src%2Fcomp%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Frustc.rc?ref=28d1626221f50cf44c8d95abb40059a389e3fae7", "patch": "@@ -80,23 +80,7 @@ auth middle::trans = unsafe;\n auth lib::llvm = unsafe;\n \n mod lib {\n-    alt (target_os) {\n-        case (\"win32\") {\n-            let (llvm_lib = \"rustllvm.dll\") {\n-                mod llvm;\n-            }\n-        }\n-        case (\"macos\") {\n-            let (llvm_lib = \"librustllvm.dylib\") {\n-                mod llvm;\n-            }\n-        }\n-        case (_) {\n-            let (llvm_lib = \"librustllvm.so\") {\n-                mod llvm;\n-            }\n-        }\n-    }\n+    mod llvm;\n }\n \n // Local Variables:"}]}