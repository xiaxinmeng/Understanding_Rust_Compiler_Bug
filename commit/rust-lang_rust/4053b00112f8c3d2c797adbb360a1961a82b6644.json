{"sha": "4053b00112f8c3d2c797adbb360a1961a82b6644", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTNiMDAxMTJmOGMzZDJjNzk3YWRiYjM2MGExOTYxYTgyYjY2NDQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-25T10:57:55Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-26T13:08:55Z"}, "message": "Use `-Z force-dropflag-checks=on/off` for emitting sanity-check.\n\n(That is, added config and debugflag a la check-overflow but for drop\nflag sanity-check.)\n\nRemove now-unused import of NoDebugInfo from trans::glue.", "tree": {"sha": "05aed5fc464ec0d956771a69b335cea964ceb1a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05aed5fc464ec0d956771a69b335cea964ceb1a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4053b00112f8c3d2c797adbb360a1961a82b6644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4053b00112f8c3d2c797adbb360a1961a82b6644", "html_url": "https://github.com/rust-lang/rust/commit/4053b00112f8c3d2c797adbb360a1961a82b6644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4053b00112f8c3d2c797adbb360a1961a82b6644/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "601eca3b53a1a66a53a296f78428c1342b5f7758", "url": "https://api.github.com/repos/rust-lang/rust/commits/601eca3b53a1a66a53a296f78428c1342b5f7758", "html_url": "https://github.com/rust-lang/rust/commit/601eca3b53a1a66a53a296f78428c1342b5f7758"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "c5498f5075e5118d28e3128f78e92f83adbd5fad", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=4053b00112f8c3d2c797adbb360a1961a82b6644", "patch": "@@ -605,6 +605,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"Print the size of enums and their variants\"),\n     force_overflow_checks: Option<bool> = (None, parse_opt_bool,\n           \"Force overflow checks on or off\"),\n+    force_dropflag_checks: Option<bool> = (None, parse_opt_bool,\n+          \"Force drop flag checks on or off\"),\n }\n \n pub fn default_lib_output() -> CrateType {"}, {"sha": "f482e4fa72b84531c67ac9d1a3897d46cdede060", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=4053b00112f8c3d2c797adbb360a1961a82b6644", "patch": "@@ -3029,6 +3029,12 @@ pub fn trans_crate<'tcx>(analysis: ty::CrateAnalysis<'tcx>)\n         tcx.sess.opts.debug_assertions\n     };\n \n+    let check_dropflag = if let Some(v) = tcx.sess.opts.debugging_opts.force_dropflag_checks {\n+        v\n+    } else {\n+        tcx.sess.opts.debug_assertions\n+    };\n+\n     // Before we touch LLVM, make sure that multithreading is enabled.\n     unsafe {\n         use std::sync::{Once, ONCE_INIT};\n@@ -3057,7 +3063,8 @@ pub fn trans_crate<'tcx>(analysis: ty::CrateAnalysis<'tcx>)\n                                              Sha256::new(),\n                                              link_meta.clone(),\n                                              reachable,\n-                                             check_overflow);\n+                                             check_overflow,\n+                                             check_dropflag);\n \n     {\n         let ccx = shared_ccx.get_ccx(0);"}, {"sha": "b834050a6d929b2f71be37047c8ee0ca6188fe4d", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=4053b00112f8c3d2c797adbb360a1961a82b6644", "patch": "@@ -69,6 +69,7 @@ pub struct SharedCrateContext<'tcx> {\n     tcx: ty::ctxt<'tcx>,\n     stats: Stats,\n     check_overflow: bool,\n+    check_drop_flag_for_sanity: bool,\n \n     available_monomorphizations: RefCell<FnvHashSet<String>>,\n     available_drop_glues: RefCell<FnvHashMap<Ty<'tcx>, String>>,\n@@ -242,7 +243,8 @@ impl<'tcx> SharedCrateContext<'tcx> {\n                symbol_hasher: Sha256,\n                link_meta: LinkMeta,\n                reachable: NodeSet,\n-               check_overflow: bool)\n+               check_overflow: bool,\n+               check_drop_flag_for_sanity: bool)\n                -> SharedCrateContext<'tcx> {\n         let (metadata_llcx, metadata_llmod) = unsafe {\n             create_context_and_module(&tcx.sess, \"metadata\")\n@@ -271,6 +273,7 @@ impl<'tcx> SharedCrateContext<'tcx> {\n                 fn_stats: RefCell::new(Vec::new()),\n             },\n             check_overflow: check_overflow,\n+            check_drop_flag_for_sanity: check_drop_flag_for_sanity,\n             available_monomorphizations: RefCell::new(FnvHashSet()),\n             available_drop_glues: RefCell::new(FnvHashMap()),\n         };\n@@ -727,6 +730,13 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n     pub fn check_overflow(&self) -> bool {\n         self.shared.check_overflow\n     }\n+\n+    pub fn check_drop_flag_for_sanity(&self) -> bool {\n+        // This controls whether we emit a conditional llvm.debugtrap\n+        // guarded on whether the dropflag is one of its (two) valid\n+        // values.\n+        self.shared.check_drop_flag_for_sanity\n+    }\n }\n \n fn declare_intrinsic(ccx: &CrateContext, key: & &'static str) -> Option<ValueRef> {"}, {"sha": "32b4d14177c2a050fbd512c4df1b0efe32b09448", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4053b00112f8c3d2c797adbb360a1961a82b6644/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=4053b00112f8c3d2c797adbb360a1961a82b6644", "patch": "@@ -40,7 +40,6 @@ use util::ppaux;\n \n use arena::TypedArena;\n use libc::c_uint;\n-use session::config::NoDebugInfo;\n use syntax::ast;\n \n pub fn trans_exchange_free_dyn<'blk, 'tcx>(cx: Block<'blk, 'tcx>,\n@@ -237,7 +236,7 @@ fn trans_struct_drop_flag<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n     let drop_flag_llty = type_of(bcx.fcx.ccx, bcx.tcx().dtor_type());\n     let init_val = C_integral(drop_flag_llty, adt::DTOR_NEEDED as u64, false);\n \n-    let bcx = if bcx.tcx().sess.opts.debuginfo == NoDebugInfo {\n+    let bcx = if !bcx.ccx().check_drop_flag_for_sanity() {\n         bcx\n     } else {\n         let drop_flag_llty = type_of(bcx.fcx.ccx, bcx.tcx().dtor_type());"}]}