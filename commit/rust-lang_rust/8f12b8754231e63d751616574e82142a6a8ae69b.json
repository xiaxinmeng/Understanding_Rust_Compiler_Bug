{"sha": "8f12b8754231e63d751616574e82142a6a8ae69b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMTJiODc1NDIzMWU2M2Q3NTE2MTY1NzRlODIxNDJhNmE4YWU2OWI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-14T10:13:23Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-14T10:13:23Z"}, "message": "Implement shl and shr overflow checks\n\ncc #6", "tree": {"sha": "2d824a1af45ef1132f6172d0b3023495d0f444c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d824a1af45ef1132f6172d0b3023495d0f444c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f12b8754231e63d751616574e82142a6a8ae69b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f12b8754231e63d751616574e82142a6a8ae69b", "html_url": "https://github.com/rust-lang/rust/commit/8f12b8754231e63d751616574e82142a6a8ae69b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f12b8754231e63d751616574e82142a6a8ae69b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ea4cbdf1bbe0a7db018f4acd0258e13734b0338", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ea4cbdf1bbe0a7db018f4acd0258e13734b0338", "html_url": "https://github.com/rust-lang/rust/commit/6ea4cbdf1bbe0a7db018f4acd0258e13734b0338"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "417b9b5f7172ddf37932e7372a1453187bec8856", "filename": "src/num.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8f12b8754231e63d751616574e82142a6a8ae69b/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f12b8754231e63d751616574e82142a6a8ae69b/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=8f12b8754231e63d751616574e82142a6a8ae69b", "patch": "@@ -258,8 +258,10 @@ pub fn trans_checked_int_binop<'tcx>(\n         }\n         BinOp::Shl => {\n             let val = fx.bcx.ins().ishl(lhs, rhs);\n-            // TODO: check for overflow\n-            let has_overflow = fx.bcx.ins().bconst(types::B1, false);\n+            let ty = fx.bcx.func.dfg.value_type(val);\n+            let max_shift = i64::from(ty.bits()) - 1;\n+            let has_overflow =\n+                fx.bcx.ins().icmp_imm(IntCC::UnsignedGreaterThan, rhs, max_shift);\n             (val, has_overflow)\n         }\n         BinOp::Shr => {\n@@ -268,8 +270,10 @@ pub fn trans_checked_int_binop<'tcx>(\n             } else {\n                 fx.bcx.ins().sshr(lhs, rhs)\n             };\n-            // TODO: check for overflow\n-            let has_overflow = fx.bcx.ins().bconst(types::B1, false);\n+            let ty = fx.bcx.func.dfg.value_type(val);\n+            let max_shift = i64::from(ty.bits()) - 1;\n+            let has_overflow =\n+                fx.bcx.ins().icmp_imm(IntCC::UnsignedGreaterThan, rhs, max_shift);\n             (val, has_overflow)\n         }\n         _ => bug!("}]}