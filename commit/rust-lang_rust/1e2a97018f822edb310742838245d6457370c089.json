{"sha": "1e2a97018f822edb310742838245d6457370c089", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMmE5NzAxOGY4MjJlZGIzMTA3NDI4MzgyNDVkNjQ1NzM3MGMwODk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-14T14:42:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-14T14:42:25Z"}, "message": "Rollup merge of #64372 - Wind-River:master, r=alexcrichton\n\nuse randSecure and randABytes\n\nr? @alexcrichton\n\ncc @n-salim", "tree": {"sha": "f3867b8f0fb0ee8d3695fed3ea3db4521b0416e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3867b8f0fb0ee8d3695fed3ea3db4521b0416e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e2a97018f822edb310742838245d6457370c089", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdfPxRCRBK7hj4Ov3rIwAAdHIIADlP2r//G/b4ILE+PJB/uEQy\naXBGtKY5M9qKlXBPJp8k8o2qn7ezC+CTU86Vi5W845rEi7+gcNuHpJad6tPSKWB0\nnPKnrDVHj1g7ABzMqkNn9LSCK8I1IYsFEJB1r+hlyaNgiRcBKvfuu4tT+sOPlbTy\n8rzaaY5pe4yuvX7QJzYfjTqYa8SJ1b97Tiy0rE4vrTBmmb/eLAtQUkCMHKFFetls\nEmVP7FpYbmzFfnsv0/lLJJ8OepyvTlIXJB23DjR5z+7ajJaG0s0FSgXrsk0ohUmK\nCUBcx5M/U6Ay+mZB5ZJUSDx190+7t1nwQAkf1TtarpMbaAW2AFICh4sUVMFR13c=\n=IfKZ\n-----END PGP SIGNATURE-----\n", "payload": "tree f3867b8f0fb0ee8d3695fed3ea3db4521b0416e9\nparent 10541584d134089e914dd0ee6eadc384b86c94b7\nparent 83e7976c842a8ad73aa176b8439e1a2480596134\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1568472145 +0200\ncommitter GitHub <noreply@github.com> 1568472145 +0200\n\nRollup merge of #64372 - Wind-River:master, r=alexcrichton\n\nuse randSecure and randABytes\n\nr? @alexcrichton\n\ncc @n-salim\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e2a97018f822edb310742838245d6457370c089", "html_url": "https://github.com/rust-lang/rust/commit/1e2a97018f822edb310742838245d6457370c089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e2a97018f822edb310742838245d6457370c089/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10541584d134089e914dd0ee6eadc384b86c94b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/10541584d134089e914dd0ee6eadc384b86c94b7", "html_url": "https://github.com/rust-lang/rust/commit/10541584d134089e914dd0ee6eadc384b86c94b7"}, {"sha": "83e7976c842a8ad73aa176b8439e1a2480596134", "url": "https://api.github.com/repos/rust-lang/rust/commits/83e7976c842a8ad73aa176b8439e1a2480596134", "html_url": "https://github.com/rust-lang/rust/commit/83e7976c842a8ad73aa176b8439e1a2480596134"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "c22880db2bf032cae9cdf6a9beb9d8540f3afa98", "filename": "src/libstd/sys/vxworks/rand.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1e2a97018f822edb310742838245d6457370c089/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e2a97018f822edb310742838245d6457370c089/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Frand.rs?ref=1e2a97018f822edb310742838245d6457370c089", "patch": "@@ -14,17 +14,24 @@ pub fn hashmap_random_keys() -> (u64, u64) {\n mod imp {\n     use libc;\n     use crate::io;\n-\n-    extern \"C\" {\n-        fn randBytes (randBuf: *mut libc::c_uchar,\n-                      numOfBytes: libc::c_int) -> libc::c_int;\n-    }\n+    use core::sync::atomic::{AtomicBool, Ordering::Relaxed};\n \n     pub fn fill_bytes(v: &mut [u8]) {\n+        static RNG_INIT: AtomicBool = AtomicBool::new(false);\n+        while !RNG_INIT.load(Relaxed) {\n+            let ret = unsafe { libc::randSecure() };\n+            if ret < 0 {\n+                panic!(\"couldn't generate random bytes: {}\", io::Error::last_os_error());\n+            } else if ret > 0 {\n+                RNG_INIT.store(true, Relaxed);\n+                break;\n+            }\n+            unsafe { libc::usleep(10) };\n+        }\n         let ret = unsafe {\n-            randBytes(v.as_mut_ptr() as *mut libc::c_uchar, v.len() as libc::c_int)\n+            libc::randABytes(v.as_mut_ptr() as *mut libc::c_uchar, v.len() as libc::c_int)\n         };\n-        if ret == -1 {\n+        if ret < 0 {\n             panic!(\"couldn't generate random bytes: {}\", io::Error::last_os_error());\n         }\n     }"}]}