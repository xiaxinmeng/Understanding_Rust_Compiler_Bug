{"sha": "bdbdade036fe71c4438f931f450beb711d1379ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYmRhZGUwMzZmZTcxYzQ0MzhmOTMxZjQ1MGJlYjcxMWQxMzc5ZWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-05T14:38:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-05T14:39:34Z"}, "message": "move typeof to hover", "tree": {"sha": "232dc42dc6e42812f1b6bf4d33b2b9cf05465792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/232dc42dc6e42812f1b6bf4d33b2b9cf05465792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdbdade036fe71c4438f931f450beb711d1379ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdbdade036fe71c4438f931f450beb711d1379ed", "html_url": "https://github.com/rust-lang/rust/commit/bdbdade036fe71c4438f931f450beb711d1379ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdbdade036fe71c4438f931f450beb711d1379ed/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f44d4c56d51fdae1ff073df261b8c897b27c824", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f44d4c56d51fdae1ff073df261b8c897b27c824", "html_url": "https://github.com/rust-lang/rust/commit/9f44d4c56d51fdae1ff073df261b8c897b27c824"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "766fa05478f5ce06db3e9a056e0c0bb39c259af0", "filename": "crates/ra_analysis/src/hover.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bdbdade036fe71c4438f931f450beb711d1379ed/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdbdade036fe71c4438f931f450beb711d1379ed/crates%2Fra_analysis%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhover.rs?ref=bdbdade036fe71c4438f931f450beb711d1379ed", "patch": "@@ -2,7 +2,7 @@ use ra_db::{Cancelable, SyntaxDatabase};\n use ra_syntax::{\n     AstNode, SyntaxNode,\n     ast::{self, NameOwner},\n-    algo::visit::{visitor, Visitor},\n+    algo::{find_covering_node, visit::{visitor, Visitor}},\n };\n \n use crate::{db::RootDatabase, RangeInfo, FilePosition, FileRange, NavigationTarget};\n@@ -27,7 +27,7 @@ pub(crate) fn hover(\n             file_id: position.file_id,\n             range: expr.syntax().range(),\n         };\n-        res.extend(db.type_of(frange)?);\n+        res.extend(type_of(db, frange)?);\n         expr.syntax().range()\n     };\n     if res.is_empty() {\n@@ -37,6 +37,20 @@ pub(crate) fn hover(\n     Ok(Some(res))\n }\n \n+pub(crate) fn type_of(db: &RootDatabase, frange: FileRange) -> Cancelable<Option<String>> {\n+    let file = db.source_file(frange.file_id);\n+    let syntax = file.syntax();\n+    let node = find_covering_node(syntax, frange.range);\n+    let parent_fn = ctry!(node.ancestors().find_map(ast::FnDef::cast));\n+    let function = ctry!(hir::source_binder::function_from_source(\n+        db,\n+        frange.file_id,\n+        parent_fn\n+    )?);\n+    let infer = function.infer(db)?;\n+    Ok(infer.type_of_node(node).map(|t| t.to_string()))\n+}\n+\n // FIXME: this should not really use navigation target. Rather, approximatelly\n // resovled symbol should return a `DefId`.\n fn doc_text_for(db: &RootDatabase, nav: NavigationTarget) -> Cancelable<Option<String>> {"}, {"sha": "e2871451c220ea0a824a40f6aff14916e795a99b", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bdbdade036fe71c4438f931f450beb711d1379ed/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdbdade036fe71c4438f931f450beb711d1379ed/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=bdbdade036fe71c4438f931f450beb711d1379ed", "patch": "@@ -8,8 +8,7 @@ use hir::{\n use ra_db::{FilesDatabase, SourceRoot, SourceRootId, SyntaxDatabase};\n use ra_editor::{self, find_node_at_offset, assists, LocalEdit, Severity};\n use ra_syntax::{\n-    algo::find_covering_node,\n-    ast::{self, ArgListOwner, Expr, FnDef, NameOwner},\n+    ast::{self, ArgListOwner, Expr, NameOwner},\n     AstNode, SourceFileNode,\n     SyntaxKind::*,\n     SyntaxNodeRef, TextRange, TextUnit,\n@@ -398,19 +397,6 @@ impl db::RootDatabase {\n         Ok(None)\n     }\n \n-    pub(crate) fn type_of(&self, frange: FileRange) -> Cancelable<Option<String>> {\n-        let file = self.source_file(frange.file_id);\n-        let syntax = file.syntax();\n-        let node = find_covering_node(syntax, frange.range);\n-        let parent_fn = ctry!(node.ancestors().find_map(FnDef::cast));\n-        let function = ctry!(source_binder::function_from_source(\n-            self,\n-            frange.file_id,\n-            parent_fn\n-        )?);\n-        let infer = function.infer(self)?;\n-        Ok(infer.type_of_node(node).map(|t| t.to_string()))\n-    }\n     pub(crate) fn rename(\n         &self,\n         position: FilePosition,"}, {"sha": "b068119d2b2c22ededc808b2b7c805c24b016d26", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdbdade036fe71c4438f931f450beb711d1379ed/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdbdade036fe71c4438f931f450beb711d1379ed/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=bdbdade036fe71c4438f931f450beb711d1379ed", "patch": "@@ -450,7 +450,7 @@ impl Analysis {\n     }\n     /// Computes the type of the expression at the given position.\n     pub fn type_of(&self, frange: FileRange) -> Cancelable<Option<String>> {\n-        self.db.type_of(frange)\n+        hover::type_of(&*self.db, frange)\n     }\n     /// Returns the edit required to rename reference at the position to the new\n     /// name."}]}