{"sha": "405cf2044210f5f2286d6b526882744d403ea805", "node_id": "C_kwDOAAsO6NoAKDQwNWNmMjA0NDIxMGY1ZjIyODZkNmI1MjY4ODI3NDRkNDAzZWE4MDU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T16:10:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T16:10:33Z"}, "message": "Rollup merge of #91694 - euclio:stability-improvements, r=GuillaumeGomez\n\nrustdoc: decouple stability and const-stability\n\nThis PR tweaks the stability rendering code to consider stability and const-stability separately. This fixes two issues:\n\n- Stabilities that match the enclosing item are now always omitted, even if the item has const-stability as well (#90552)\n- Const-stable unstable functions will now have their (const-) stability rendered.\n\nFixes #90552.", "tree": {"sha": "3f3f6e966f6a074ae8f699427035ae49b9d92c73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f3f6e966f6a074ae8f699427035ae49b9d92c73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/405cf2044210f5f2286d6b526882744d403ea805", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6Yl5CRBK7hj4Ov3rIwAAEyYIAEIDAZp28Dkn4C+n1HvA+ma4\nWOtQ28ZrwXP6XKu6wfHPihs7O3cLtw2xMwbpq2bcTjvZyIpp12nm6Lhgzi28F0XF\nLTAQb3v6/kPN4ZQdrq1Dk4lI4dPQveD1kAXKNc1UQ/aX32r301B8m4j3+hgt5xKJ\nhqEDx2SQU8JuL+TgX+0w1MBVTTQZLCPnxEPm2f5kcSKaVRj3r7inbxM8x/z6wM/q\nK8Q7kg1yIkm+7hWsEkWlEIWGDr6YIlAov7UgCFhEVnV0lEQmorLMUsokdqyYqBZ8\nCqzHz+6Q5O4inmvvfr3U2cH5tMuCpfqDdA4B/d8XEx6duVTT4f8Zy/y/5Vn0G00=\n=jmHO\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f3f6e966f6a074ae8f699427035ae49b9d92c73\nparent 02379e917b2e187997bdabd290e61ecf0744faaf\nparent dc1c39b10ed4650de784e860e2778c3e246f585e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642695033 +0100\ncommitter GitHub <noreply@github.com> 1642695033 +0100\n\nRollup merge of #91694 - euclio:stability-improvements, r=GuillaumeGomez\n\nrustdoc: decouple stability and const-stability\n\nThis PR tweaks the stability rendering code to consider stability and const-stability separately. This fixes two issues:\n\n- Stabilities that match the enclosing item are now always omitted, even if the item has const-stability as well (#90552)\n- Const-stable unstable functions will now have their (const-) stability rendered.\n\nFixes #90552.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/405cf2044210f5f2286d6b526882744d403ea805", "html_url": "https://github.com/rust-lang/rust/commit/405cf2044210f5f2286d6b526882744d403ea805", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/405cf2044210f5f2286d6b526882744d403ea805/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02379e917b2e187997bdabd290e61ecf0744faaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/02379e917b2e187997bdabd290e61ecf0744faaf", "html_url": "https://github.com/rust-lang/rust/commit/02379e917b2e187997bdabd290e61ecf0744faaf"}, {"sha": "dc1c39b10ed4650de784e860e2778c3e246f585e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc1c39b10ed4650de784e860e2778c3e246f585e", "html_url": "https://github.com/rust-lang/rust/commit/dc1c39b10ed4650de784e860e2778c3e246f585e"}], "stats": {"total": 110, "additions": 73, "deletions": 37}, "files": [{"sha": "8badce8226fd9e67a444b2f6e9ce21cb34b1647f", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 55, "deletions": 36, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/405cf2044210f5f2286d6b526882744d403ea805/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405cf2044210f5f2286d6b526882744d403ea805/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=405cf2044210f5f2286d6b526882744d403ea805", "patch": "@@ -799,58 +799,77 @@ fn assoc_type(\n     }\n }\n \n+/// Writes a span containing the versions at which an item became stable and/or const-stable. For\n+/// example, if the item became stable at 1.0.0, and const-stable at 1.45.0, this function would\n+/// write a span containing \"1.0.0 (const: 1.45.0)\".\n+///\n+/// Returns `true` if a stability annotation was rendered.\n+///\n+/// Stability and const-stability are considered separately. If the item is unstable, no version\n+/// will be written. If the item is const-unstable, \"const: unstable\" will be appended to the\n+/// span, with a link to the tracking issue if present. If an item's stability or const-stability\n+/// version matches the version of its enclosing item, that version will be omitted.\n+///\n+/// Note that it is possible for an unstable function to be const-stable. In that case, the span\n+/// will include the const-stable version, but no stable version will be emitted, as a natural\n+/// consequence of the above rules.\n fn render_stability_since_raw(\n     w: &mut Buffer,\n     ver: Option<Symbol>,\n     const_stability: Option<ConstStability>,\n     containing_ver: Option<Symbol>,\n     containing_const_ver: Option<Symbol>,\n ) -> bool {\n-    let ver = ver.filter(|inner| !inner.is_empty());\n+    let stable_version = ver.filter(|inner| !inner.is_empty() && Some(*inner) != containing_ver);\n \n-    match (ver, const_stability) {\n-        // stable and const stable\n-        (Some(v), Some(ConstStability { level: StabilityLevel::Stable { since }, .. }))\n+    let mut title = String::new();\n+    let mut stability = String::new();\n+\n+    if let Some(ver) = stable_version {\n+        stability.push_str(&ver.as_str());\n+        title.push_str(&format!(\"Stable since Rust version {}\", ver));\n+    }\n+\n+    let const_title_and_stability = match const_stability {\n+        Some(ConstStability { level: StabilityLevel::Stable { since }, .. })\n             if Some(since) != containing_const_ver =>\n         {\n-            write!(\n-                w,\n-                \"<span class=\\\"since\\\" title=\\\"Stable since Rust version {0}, const since {1}\\\">{0} (const: {1})</span>\",\n-                v, since\n-            );\n+            Some((format!(\"const since {}\", since), format!(\"const: {}\", since)))\n         }\n-        // stable and const unstable\n-        (\n-            Some(v),\n-            Some(ConstStability { level: StabilityLevel::Unstable { issue, .. }, feature, .. }),\n-        ) => {\n-            write!(\n-                w,\n-                \"<span class=\\\"since\\\" title=\\\"Stable since Rust version {0}, const unstable\\\">{0} (const: \",\n-                v\n-            );\n-            if let Some(n) = issue {\n-                write!(\n-                    w,\n-                    \"<a href=\\\"https://github.com/rust-lang/rust/issues/{}\\\" title=\\\"Tracking issue for {}\\\">unstable</a>\",\n+        Some(ConstStability { level: StabilityLevel::Unstable { issue, .. }, feature, .. }) => {\n+            let unstable = if let Some(n) = issue {\n+                format!(\n+                    r#\"<a href=\"https://github.com/rust-lang/rust/issues/{}\" title=\"Tracking issue for {}\">unstable</a>\"#,\n                     n, feature\n-                );\n+                )\n             } else {\n-                write!(w, \"unstable\");\n-            }\n-            write!(w, \")</span>\");\n+                String::from(\"unstable\")\n+            };\n+\n+            Some((String::from(\"const unstable\"), format!(\"const: {}\", unstable)))\n         }\n-        // stable\n-        (Some(v), _) if ver != containing_ver => {\n-            write!(\n-                w,\n-                \"<span class=\\\"since\\\" title=\\\"Stable since Rust version {0}\\\">{0}</span>\",\n-                v\n-            );\n+        _ => None,\n+    };\n+\n+    if let Some((const_title, const_stability)) = const_title_and_stability {\n+        if !title.is_empty() {\n+            title.push_str(&format!(\", {}\", const_title));\n+        } else {\n+            title.push_str(&const_title);\n+        }\n+\n+        if !stability.is_empty() {\n+            stability.push_str(&format!(\" ({})\", const_stability));\n+        } else {\n+            stability.push_str(&const_stability);\n         }\n-        _ => return false,\n     }\n-    true\n+\n+    if !stability.is_empty() {\n+        write!(w, r#\"<span class=\"since\" title=\"{}\">{}</span>\"#, title, stability);\n+    }\n+\n+    !stability.is_empty()\n }\n \n fn render_assoc_item("}, {"sha": "b8e101038f8f11b4ba74c1f8f97c7aabd148807d", "filename": "src/test/rustdoc/const-display.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/405cf2044210f5f2286d6b526882744d403ea805/src%2Ftest%2Frustdoc%2Fconst-display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405cf2044210f5f2286d6b526882744d403ea805/src%2Ftest%2Frustdoc%2Fconst-display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-display.rs?ref=405cf2044210f5f2286d6b526882744d403ea805", "patch": "@@ -67,3 +67,20 @@ impl Foo {\n     #[rustc_const_stable(feature = \"rust1\", since = \"1.2.0\")]\n     pub const fn stable_impl() -> u32 { 42 }\n }\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub struct Bar;\n+\n+impl Bar {\n+    // Do not show non-const stabilities that are the same as the enclosing item.\n+    // @matches 'foo/struct.Bar.html' '//span[@class=\"since\"]' '^const: 1.2.0$'\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_stable(feature = \"rust1\", since = \"1.2.0\")]\n+    pub const fn stable_impl() -> u32 { 42 }\n+\n+    // Show const-stability even for unstable functions.\n+    // @matches 'foo/struct.Bar.html' '//span[@class=\"since\"]' '^const: 1.3.0$'\n+    #[unstable(feature = \"foo2\", issue = \"none\")]\n+    #[rustc_const_stable(feature = \"rust1\", since = \"1.3.0\")]\n+    pub const fn const_stable_unstable() -> u32 { 42 }\n+}"}, {"sha": "8ecca6d12d24af01bd4c61fe58a422a97bd9e607", "filename": "src/test/rustdoc/deref-const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/405cf2044210f5f2286d6b526882744d403ea805/src%2Ftest%2Frustdoc%2Fderef-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405cf2044210f5f2286d6b526882744d403ea805/src%2Ftest%2Frustdoc%2Fderef-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-const-fn.rs?ref=405cf2044210f5f2286d6b526882744d403ea805", "patch": "@@ -13,7 +13,7 @@ pub struct Bar;\n \n impl Bar {\n     // @has - '//*[@id=\"method.len\"]' 'pub const fn len(&self) -> usize'\n-    // @has - '//*[@id=\"method.len\"]//span[@class=\"since\"]' '1.0.0 (const: 1.0.0)'\n+    // @has - '//*[@id=\"method.len\"]//span[@class=\"since\"]' 'const: 1.0.0'\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_const_stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub const fn len(&self) -> usize { 0 }"}]}