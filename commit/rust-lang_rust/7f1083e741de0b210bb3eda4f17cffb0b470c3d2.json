{"sha": "7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMTA4M2U3NDFkZTBiMjEwYmIzZWRhNGYxN2NmZmIwYjQ3MGMzZDI=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-29T20:53:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-29T20:53:31Z"}, "message": "Rollup merge of #40816 - estebank:issue-38321, r=nikomatsakis\n\nClarify suggetion for field used as method\n\nInstead of\n\n```rust\nerror: no method named `src_addr` found for type `&wire::ipv4::Repr` in the current scope\n   --> src/wire/ipv4.rs:409:34\n    |\n409 |         packet.set_src_addr(self.src_addr());\n    |                                  ^^^^^^^^\n    |\nnote: did you mean to write `self.src_addr`?\n   --> src/wire/ipv4.rs:409:34\n    |\n409 |         packet.set_src_addr(self.src_addr());\n    |                                  ^^^^^^^^\n```\n\npresent\n\n```rust\nerror: no method named `src_addr` found for type `&wire::ipv4::Repr` in the current scope\n   --> src/wire/ipv4.rs:409:34\n    |\n409 |         packet.set_src_addr(self.src_addr());\n    |                                  ^^^^^^^^ field, not a method\n    |\n    = help: did you mean to write `self.src_addr` instead of `self.src_addr(...)`?\n```\n\nFix #38321.", "tree": {"sha": "00a092e4c808b06285033a2c8b7f723d0dce1016", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00a092e4c808b06285033a2c8b7f723d0dce1016"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "html_url": "https://github.com/rust-lang/rust/commit/7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea9c8b992c2155f3cb2e19dc0e7f65ce16158889", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea9c8b992c2155f3cb2e19dc0e7f65ce16158889", "html_url": "https://github.com/rust-lang/rust/commit/ea9c8b992c2155f3cb2e19dc0e7f65ce16158889"}, {"sha": "872d3bc0d713a85f2050f99d0cf33dd060318411", "url": "https://api.github.com/repos/rust-lang/rust/commits/872d3bc0d713a85f2050f99d0cf33dd060318411", "html_url": "https://github.com/rust-lang/rust/commit/872d3bc0d713a85f2050f99d0cf33dd060318411"}], "stats": {"total": 216, "additions": 186, "deletions": 30}, "files": [{"sha": "67ee7ef58653057542de300eb054dff68864141b", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -197,18 +197,18 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                     let field_ty = field.ty(tcx, substs);\n \n                                     if self.is_fn_ty(&field_ty, span) {\n-                                        err.span_note(span,\n-                                                      &format!(\"use `({0}.{1})(...)` if you \\\n-                                                                meant to call the function \\\n-                                                                stored in the `{1}` field\",\n-                                                               expr_string,\n-                                                               item_name));\n+                                        err.help(&format!(\"use `({0}.{1})(...)` if you \\\n+                                                           meant to call the function \\\n+                                                           stored in the `{1}` field\",\n+                                                          expr_string,\n+                                                          item_name));\n                                     } else {\n-                                        err.span_note(span,\n-                                                      &format!(\"did you mean to write `{0}.{1}`?\",\n-                                                               expr_string,\n-                                                               item_name));\n+                                        err.help(&format!(\"did you mean to write `{0}.{1}` \\\n+                                                           instead of `{0}.{1}(...)`?\",\n+                                                          expr_string,\n+                                                          item_name));\n                                     }\n+                                    err.span_label(span, &\"field, not a method\");\n                                     break;\n                                 }\n                             }"}, {"sha": "fc3c58e5223a3921ff2c97034b06e1807dd150bd", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-18343.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.rs?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -14,6 +14,8 @@ struct Obj<F> where F: FnMut() -> u32 {\n \n fn main() {\n     let o = Obj { closure: || 42 };\n-    o.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+    o.closure();\n+    //~^ ERROR no method named `closure` found\n+    //~| HELP use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~| NOTE field, not a method\n }", "previous_filename": "src/test/compile-fail/issue-18343.rs"}, {"sha": "9e5e4adb180d5fdb1aef2b9177e42baf4f80db8f", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-18343.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -0,0 +1,10 @@\n+error: no method named `closure` found for type `Obj<[closure@$DIR/issue-18343.rs:16:28: 16:33]>` in the current scope\n+  --> $DIR/issue-18343.rs:17:7\n+   |\n+17 |     o.closure();\n+   |       ^^^^^^^ field, not a method\n+   |\n+   = help: use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: aborting due to previous error\n+"}, {"sha": "f84f35ce84bf9e8f04446b7f07a7e0f03890af2f", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-2392.rs", "status": "renamed", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.rs?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -48,45 +48,58 @@ fn main() {\n \n     let o_closure = Obj { closure: || 42, not_closure: 42 };\n     o_closure.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_closure.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(o_closure.closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n-    o_closure.not_closure(); //~ ERROR no method named `not_closure` found\n-    //~^ NOTE did you mean to write `o_closure.not_closure`?\n+    o_closure.not_closure();\n+    //~^ ERROR no method named `not_closure` found\n+    //~| NOTE field, not a method\n+    //~| HELP did you mean to write `o_closure.not_closure` instead of `o_closure.not_closure(...)`?\n \n     let o_func = Obj { closure: func, not_closure: 5 };\n     o_func.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(o_func.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(o_func.closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n     let boxed_fn = BoxedObj { boxed_closure: Box::new(func) };\n     boxed_fn.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n     let boxed_closure = BoxedObj { boxed_closure: Box::new(|| 42_u32) as Box<FnBox() -> u32> };\n     boxed_closure.boxed_closure();//~ ERROR no method named `boxed_closure` found\n-    //~^ NOTE use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n     // test expression writing in the notes\n \n     let w = Wrapper { wrap: o_func };\n     w.wrap.closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(w.wrap.closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(w.wrap.closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n \n-    w.wrap.not_closure();//~ ERROR no method named `not_closure` found\n-    //~^ NOTE did you mean to write `w.wrap.not_closure`?\n+    w.wrap.not_closure();\n+    //~^ ERROR no method named `not_closure` found\n+    //~| NOTE field, not a method\n+    //~| HELP did you mean to write `w.wrap.not_closure` instead of `w.wrap.not_closure(...)`?\n \n     check_expression().closure();//~ ERROR no method named `closure` found\n-    //~^ NOTE use `(check_expression().closure)(...)` if you meant to call the function stored\n+    //~^ HELP use `(check_expression().closure)(...)` if you meant to call the function stored\n+    //~| NOTE field, not a method\n }\n \n impl FuncContainerOuter {\n     fn run(&self) {\n         unsafe {\n             (*self.container).f1(1); //~ ERROR no method named `f1` found\n-            //~^ NOTE use `((*self.container).f1)(...)`\n+            //~^ HELP use `((*self.container).f1)(...)`\n+            //~| NOTE field, not a method\n             (*self.container).f2(1); //~ ERROR no method named `f2` found\n-            //~^ NOTE use `((*self.container).f2)(...)`\n+            //~^ HELP use `((*self.container).f2)(...)`\n+            //~| NOTE field, not a method\n             (*self.container).f3(1); //~ ERROR no method named `f3` found\n-            //~^ NOTE use `((*self.container).f3)(...)`\n+            //~^ HELP use `((*self.container).f3)(...)`\n+            //~| NOTE field, not a method\n         }\n     }\n }", "previous_filename": "src/test/compile-fail/issue-2392.rs"}, {"sha": "56e1060bdb95ae2645cd4556e248a690ac1fa804", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-2392.stderr", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -0,0 +1,90 @@\n+error: no method named `closure` found for type `Obj<[closure@$DIR/issue-2392.rs:49:36: 49:41]>` in the current scope\n+  --> $DIR/issue-2392.rs:50:15\n+   |\n+50 |     o_closure.closure(); //~ ERROR no method named `closure` found\n+   |               ^^^^^^^ field, not a method\n+   |\n+   = help: use `(o_closure.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `not_closure` found for type `Obj<[closure@$DIR/issue-2392.rs:49:36: 49:41]>` in the current scope\n+  --> $DIR/issue-2392.rs:54:15\n+   |\n+54 |     o_closure.not_closure();\n+   |               ^^^^^^^^^^^ field, not a method\n+   |\n+   = help: did you mean to write `o_closure.not_closure` instead of `o_closure.not_closure(...)`?\n+\n+error: no method named `closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n+  --> $DIR/issue-2392.rs:60:12\n+   |\n+60 |     o_func.closure(); //~ ERROR no method named `closure` found\n+   |            ^^^^^^^ field, not a method\n+   |\n+   = help: use `(o_func.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `boxed_closure` found for type `BoxedObj` in the current scope\n+  --> $DIR/issue-2392.rs:65:14\n+   |\n+65 |     boxed_fn.boxed_closure();//~ ERROR no method named `boxed_closure` found\n+   |              ^^^^^^^^^^^^^ field, not a method\n+   |\n+   = help: use `(boxed_fn.boxed_closure)(...)` if you meant to call the function stored in the `boxed_closure` field\n+\n+error: no method named `boxed_closure` found for type `BoxedObj` in the current scope\n+  --> $DIR/issue-2392.rs:70:19\n+   |\n+70 |     boxed_closure.boxed_closure();//~ ERROR no method named `boxed_closure` found\n+   |                   ^^^^^^^^^^^^^ field, not a method\n+   |\n+   = help: use `(boxed_closure.boxed_closure)(...)` if you meant to call the function stored in the `boxed_closure` field\n+\n+error: no method named `closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n+  --> $DIR/issue-2392.rs:77:12\n+   |\n+77 |     w.wrap.closure();//~ ERROR no method named `closure` found\n+   |            ^^^^^^^ field, not a method\n+   |\n+   = help: use `(w.wrap.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `not_closure` found for type `Obj<fn() -> u32 {func}>` in the current scope\n+  --> $DIR/issue-2392.rs:81:12\n+   |\n+81 |     w.wrap.not_closure();\n+   |            ^^^^^^^^^^^ field, not a method\n+   |\n+   = help: did you mean to write `w.wrap.not_closure` instead of `w.wrap.not_closure(...)`?\n+\n+error: no method named `closure` found for type `Obj<std::boxed::Box<std::boxed::FnBox<(), Output=u32> + 'static>>` in the current scope\n+  --> $DIR/issue-2392.rs:86:24\n+   |\n+86 |     check_expression().closure();//~ ERROR no method named `closure` found\n+   |                        ^^^^^^^ field, not a method\n+   |\n+   = help: use `(check_expression().closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `f1` found for type `FuncContainer` in the current scope\n+  --> $DIR/issue-2392.rs:94:31\n+   |\n+94 |             (*self.container).f1(1); //~ ERROR no method named `f1` found\n+   |                               ^^ field, not a method\n+   |\n+   = help: use `((*self.container).f1)(...)` if you meant to call the function stored in the `f1` field\n+\n+error: no method named `f2` found for type `FuncContainer` in the current scope\n+  --> $DIR/issue-2392.rs:97:31\n+   |\n+97 |             (*self.container).f2(1); //~ ERROR no method named `f2` found\n+   |                               ^^ field, not a method\n+   |\n+   = help: use `((*self.container).f2)(...)` if you meant to call the function stored in the `f2` field\n+\n+error: no method named `f3` found for type `FuncContainer` in the current scope\n+   --> $DIR/issue-2392.rs:100:31\n+    |\n+100 |             (*self.container).f3(1); //~ ERROR no method named `f3` found\n+    |                               ^^ field, not a method\n+    |\n+    = help: use `((*self.container).f3)(...)` if you meant to call the function stored in the `f3` field\n+\n+error: aborting due to 11 previous errors\n+"}, {"sha": "2fd7dc246c206aa0dc45f653a5c52de95e95b8dc", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-32128.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.rs?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -19,7 +19,9 @@ fn main() {\n         })\n     };\n \n-    demo.example(1);    //~ ERROR no method named `example`\n-                        //~^ NOTE use `(demo.example)(...)`\n+    demo.example(1);\n+    //~^ ERROR no method named `example`\n+    //~| HELP use `(demo.example)(...)`\n+    //~| NOTE field, not a method\n     // (demo.example)(1);\n }", "previous_filename": "src/test/compile-fail/issue-32128.rs"}, {"sha": "0d2a895bad16d31fea4529f0c6c1f52a4166df79", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-32128.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -0,0 +1,10 @@\n+error: no method named `example` found for type `Example` in the current scope\n+  --> $DIR/issue-32128.rs:22:10\n+   |\n+22 |     demo.example(1);\n+   |          ^^^^^^^ field, not a method\n+   |\n+   = help: use `(demo.example)(...)` if you meant to call the function stored in the `example` field\n+\n+error: aborting due to previous error\n+"}, {"sha": "03c84fc57befee8ee745e39e22dc7c42af87fff1", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-33784.rs", "status": "renamed", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.rs?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -35,12 +35,15 @@ fn main() {\n     let o = Obj { fn_ptr: empty, closure: || 42 };\n     let p = &o;\n     p.closure(); //~ ERROR no method named `closure` found\n-    //~^ NOTE use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~^ HELP use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+    //~| NOTE `closure` is a field storing a function, not a method\n     let q = &p;\n     q.fn_ptr(); //~ ERROR no method named `fn_ptr` found\n-    //~^ NOTE use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+    //~^ HELP use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+    //~| NOTE `fn_ptr` is a field storing a function, not a method\n     let r = D(C { c_fn_ptr: empty });\n     let s = &r;\n     s.c_fn_ptr(); //~ ERROR no method named `c_fn_ptr` found\n-    //~^ NOTE use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr`\n+    //~^ HELP use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr`\n+    //~| NOTE `c_fn_ptr` is a field storing a function, not a method\n }", "previous_filename": "src/test/compile-fail/issue-33784.rs"}, {"sha": "70d64e3ffa3319d05ec92a62513988d303d8d6be", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-33784.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f1083e741de0b210bb3eda4f17cffb0b470c3d2/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr?ref=7f1083e741de0b210bb3eda4f17cffb0b470c3d2", "patch": "@@ -0,0 +1,26 @@\n+error: no method named `closure` found for type `&Obj<[closure@$DIR/issue-33784.rs:35:43: 35:48]>` in the current scope\n+  --> $DIR/issue-33784.rs:37:7\n+   |\n+37 |     p.closure(); //~ ERROR no method named `closure` found\n+   |       ^^^^^^^ field, not a method\n+   |\n+   = help: use `(p.closure)(...)` if you meant to call the function stored in the `closure` field\n+\n+error: no method named `fn_ptr` found for type `&&Obj<[closure@$DIR/issue-33784.rs:35:43: 35:48]>` in the current scope\n+  --> $DIR/issue-33784.rs:41:7\n+   |\n+41 |     q.fn_ptr(); //~ ERROR no method named `fn_ptr` found\n+   |       ^^^^^^ field, not a method\n+   |\n+   = help: use `(q.fn_ptr)(...)` if you meant to call the function stored in the `fn_ptr` field\n+\n+error: no method named `c_fn_ptr` found for type `&D` in the current scope\n+  --> $DIR/issue-33784.rs:46:7\n+   |\n+46 |     s.c_fn_ptr(); //~ ERROR no method named `c_fn_ptr` found\n+   |       ^^^^^^^^ field, not a method\n+   |\n+   = help: use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr` field\n+\n+error: aborting due to 3 previous errors\n+"}]}