{"sha": "6436e348e97a09c2155d0dcd710416e6e0d84371", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0MzZlMzQ4ZTk3YTA5YzIxNTVkMGRjZDcxMDQxNmU2ZTBkODQzNzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-08T22:08:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-08T22:08:31Z"}, "message": "Auto merge of #24144 - richo:ptr-formatter, r=alexcrichton\n\n~~I believe this should fix the issue. Opening a PR to ensure noone duplicates effort, I'm running check now.~~\r\n\r\nCloses #24091", "tree": {"sha": "592eb6fa4567c7b29cd90c17c370d0fa0f692cf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/592eb6fa4567c7b29cd90c17c370d0fa0f692cf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6436e348e97a09c2155d0dcd710416e6e0d84371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6436e348e97a09c2155d0dcd710416e6e0d84371", "html_url": "https://github.com/rust-lang/rust/commit/6436e348e97a09c2155d0dcd710416e6e0d84371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6436e348e97a09c2155d0dcd710416e6e0d84371/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff804778c8d69d7835cf7076886ac5dac9a39659", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff804778c8d69d7835cf7076886ac5dac9a39659", "html_url": "https://github.com/rust-lang/rust/commit/ff804778c8d69d7835cf7076886ac5dac9a39659"}, {"sha": "a329a61b9bf01bfc3f9f7316bb800b2bc8b76382", "url": "https://api.github.com/repos/rust-lang/rust/commits/a329a61b9bf01bfc3f9f7316bb800b2bc8b76382", "html_url": "https://github.com/rust-lang/rust/commit/a329a61b9bf01bfc3f9f7316bb800b2bc8b76382"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "ff176d815916bd8dfe5a928261d61dd16b346a3e", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=6436e348e97a09c2155d0dcd710416e6e0d84371", "patch": "@@ -668,6 +668,13 @@ impl<T: fmt::Debug> fmt::Debug for Arc<T> {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> fmt::Pointer for Arc<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        fmt::Pointer::fmt(&*self._ptr, f)\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Default + Sync + Send> Default for Arc<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "4468e425a852da07088bd0aca40667c98c05546b", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=6436e348e97a09c2155d0dcd710416e6e0d84371", "patch": "@@ -275,6 +275,16 @@ impl<T: fmt::Debug + ?Sized> fmt::Debug for Box<T> {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> fmt::Pointer for Box<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        // It's not possible to extract the inner Uniq directly from the Box,\n+        // instead we cast it to a *const which aliases the Unique\n+        let ptr: *const T = &**self;\n+        fmt::Pointer::fmt(&ptr, f)\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized> Deref for Box<T> {\n     type Target = T;"}, {"sha": "67805d10a4a6313736b37bf4eb548cb82f26f3fb", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=6436e348e97a09c2155d0dcd710416e6e0d84371", "patch": "@@ -634,6 +634,13 @@ impl<T: fmt::Debug> fmt::Debug for Rc<T> {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> fmt::Pointer for Rc<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        fmt::Pointer::fmt(&*self._ptr, f)\n+    }\n+}\n+\n /// A weak version of `Rc<T>`.\n ///\n /// Weak references do not count when determining if the inner value should be"}, {"sha": "36b33e7581dd98fb5a3d12a3c0f6380b56e70999", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=6436e348e97a09c2155d0dcd710416e6e0d84371", "patch": "@@ -94,6 +94,7 @@ use mem;\n use clone::Clone;\n use intrinsics;\n use ops::Deref;\n+use core::fmt;\n use option::Option::{self, Some, None};\n use marker::{PhantomData, Send, Sized, Sync};\n use nonzero::NonZero;\n@@ -570,3 +571,10 @@ impl<T:?Sized> Deref for Unique<T> {\n         unsafe { mem::transmute(&*self.pointer) }\n     }\n }\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> fmt::Pointer for Unique<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        fmt::Pointer::fmt(&*self.pointer, f)\n+    }\n+}"}, {"sha": "5032cd57eeb376772caf416f74966e961e2a5887", "filename": "src/libsyntax/ptr.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Flibsyntax%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Flibsyntax%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fptr.rs?ref=6436e348e97a09c2155d0dcd710416e6e0d84371", "patch": "@@ -111,6 +111,13 @@ impl<T: Display> Display for P<T> {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T> fmt::Pointer for P<T> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        fmt::Pointer::fmt(&self.ptr, f)\n+    }\n+}\n+\n impl<T: Hash> Hash for P<T> {\n     fn hash<H: Hasher>(&self, state: &mut H) {\n         (**self).hash(state);"}, {"sha": "be8ecde67836e5e78776203e6ab6fa910b62bd11", "filename": "src/test/run-pass/fmt-pointer-trait.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6436e348e97a09c2155d0dcd710416e6e0d84371/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffmt-pointer-trait.rs?ref=6436e348e97a09c2155d0dcd710416e6e0d84371", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(libc)]\n+extern crate libc;\n+use std::ptr;\n+use std::rc::Rc;\n+use std::sync::Arc;\n+\n+fn main() {\n+    let p: *const libc::c_void = ptr::null();\n+    let rc = Rc::new(1usize);\n+    let arc = Arc::new(1usize);\n+    let b = Box::new(\"hi\");\n+\n+    let _ = format!(\"{:p}{:p}{:p}\",\n+                    rc, arc, b);\n+\n+    assert_eq!(format!(\"{:p}\", p),\n+               \"0x0\");\n+}"}]}