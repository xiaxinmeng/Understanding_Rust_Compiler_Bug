{"sha": "ac60d53c65fe499660ea6b508200283bb3cdb19d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNjBkNTNjNjVmZTQ5OTY2MGVhNmI1MDgyMDAyODNiYjNjZGIxOWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-13T05:36:24Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-03-14T03:07:11Z"}, "message": "test: Some test fixes", "tree": {"sha": "46e6758a314c026c43660d8c9d92e62327484e07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46e6758a314c026c43660d8c9d92e62327484e07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac60d53c65fe499660ea6b508200283bb3cdb19d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac60d53c65fe499660ea6b508200283bb3cdb19d", "html_url": "https://github.com/rust-lang/rust/commit/ac60d53c65fe499660ea6b508200283bb3cdb19d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac60d53c65fe499660ea6b508200283bb3cdb19d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fa66e8e07ca565119de195ceefb20cff50ae1ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fa66e8e07ca565119de195ceefb20cff50ae1ea", "html_url": "https://github.com/rust-lang/rust/commit/8fa66e8e07ca565119de195ceefb20cff50ae1ea"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "aebe9382f64a74e8ad185fd07c43581250596247", "filename": "src/test/auxiliary/cci_impl_lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Fauxiliary%2Fcci_impl_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Fauxiliary%2Fcci_impl_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_impl_lib.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -11,13 +11,13 @@\n #[link(name=\"cci_impl_lib\", vers=\"0.0\")];\n \n trait uint_helpers {\n-    fn to(self, v: uint, f: &fn(uint));\n+    fn to(&self, v: uint, f: &fn(uint));\n }\n \n impl uint_helpers for uint {\n     #[inline]\n-    fn to(self, v: uint, f: &fn(uint)) {\n-        let mut i = self;\n+    fn to(&self, v: uint, f: &fn(uint)) {\n+        let mut i = *self;\n         while i < v {\n             f(i);\n             i += 1u;"}, {"sha": "5d3ad4b3b2bb654d939e2978e751d289934bc3d7", "filename": "src/test/run-pass/assignability-trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fassignability-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fassignability-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassignability-trait.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -18,15 +18,15 @@ trait iterable<A> {\n \n impl<A> iterable<A> for &self/[A] {\n     fn iterate(&self, f: &fn(x: &A) -> bool) {\n-        for vec::each(self) |e| {\n+        for vec::each(*self) |e| {\n             if !f(e) { break; }\n         }\n     }\n }\n \n impl<A> iterable<A> for ~[A] {\n     fn iterate(&self, f: &fn(x: &A) -> bool) {\n-        for vec::each(self) |e| {\n+        for vec::each(*self) |e| {\n             if !f(e) { break; }\n         }\n     }"}, {"sha": "f7c0f513a9df601e871a58b6e431992d73b07ebf", "filename": "src/test/run-pass/auto-ref.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fauto-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fauto-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-ref.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -13,11 +13,11 @@ struct Foo {\n }\n \n trait Stuff {\n-    fn printme(self);\n+    fn printme(&self);\n }\n \n-impl Stuff for &self/Foo {\n-    fn printme(self) {\n+impl Stuff for Foo {\n+    fn printme(&self) {\n         io::println(fmt!(\"%d\", self.x));\n     }\n }"}, {"sha": "3fabb95f2a351dadd262948c4fc9917e98b6b136", "filename": "src/test/run-pass/autoderef-method-on-trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-method-on-trait.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n trait double {\n-    fn double(self) -> uint;\n+    fn double(@self) -> uint;\n }\n \n impl double for uint {\n-    fn double(self) -> uint { self * 2u }\n+    fn double(@self) -> uint { *self * 2u }\n }\n \n pub fn main() {"}, {"sha": "a54e77476cf7c477ea0c8b43bed59bd7106534a0", "filename": "src/test/run-pass/autoderef-method-twice-but-not-thrice.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method-twice-but-not-thrice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method-twice-but-not-thrice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-method-twice-but-not-thrice.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n trait double {\n-    fn double(self) -> uint;\n+    fn double(@self) -> uint;\n }\n \n-impl double for @@uint {\n-    fn double(self) -> uint { **self * 2u }\n+impl double for @uint {\n+    fn double(@self) -> uint { **self * 2u }\n }\n \n pub fn main() {"}, {"sha": "dde6ae9e5de482df5816c253e9a96c919835a53b", "filename": "src/test/run-pass/autoderef-method-twice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-method-twice.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n trait double {\n-    fn double(self) -> uint;\n+    fn double(@self) -> uint;\n }\n \n impl double for uint {\n-    fn double(self) -> uint { self * 2u }\n+    fn double(@self) -> uint { *self * 2u }\n }\n \n pub fn main() {"}, {"sha": "f6e04c79d454a29cc988a10c3051b5e7e1d7e140", "filename": "src/test/run-pass/autoderef-method.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fautoderef-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautoderef-method.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n trait double {\n-    fn double(self) -> uint;\n+    fn double(@self) -> uint;\n }\n \n impl double for uint {\n-    fn double(self) -> uint { self * 2u }\n+    fn double(@self) -> uint { *self * 2u }\n }\n \n pub fn main() {"}, {"sha": "1aac86238dc581ba1dffc82b48e4c96445fa4fab", "filename": "src/test/run-pass/boxed-trait-with-vstore.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac60d53c65fe499660ea6b508200283bb3cdb19d/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs?ref=ac60d53c65fe499660ea6b508200283bb3cdb19d", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n trait Foo {\n-    fn foo(self);\n+    fn foo(@self);\n }\n \n impl Foo for int {\n-    fn foo(self) {\n+    fn foo(@self) {\n         io::println(\"Hello world!\");\n     }\n }"}]}