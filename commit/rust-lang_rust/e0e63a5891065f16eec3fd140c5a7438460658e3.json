{"sha": "e0e63a5891065f16eec3fd140c5a7438460658e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZTYzYTU4OTEwNjVmMTZlZWMzZmQxNDBjNWE3NDM4NDYwNjU4ZTM=", "commit": {"author": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-10-05T00:37:00Z"}, "committer": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-10-05T00:37:00Z"}, "message": "Merge pull request #3665 from apasel422/tutorial-fix\n\ndocs: minor tutorial fixes", "tree": {"sha": "98005ff54bd33a79e19dcc6de4ea27b454a60030", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98005ff54bd33a79e19dcc6de4ea27b454a60030"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0e63a5891065f16eec3fd140c5a7438460658e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e63a5891065f16eec3fd140c5a7438460658e3", "html_url": "https://github.com/rust-lang/rust/commit/e0e63a5891065f16eec3fd140c5a7438460658e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0e63a5891065f16eec3fd140c5a7438460658e3/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cb3da576deb06a7c298761c01708ea90b18659b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cb3da576deb06a7c298761c01708ea90b18659b", "html_url": "https://github.com/rust-lang/rust/commit/8cb3da576deb06a7c298761c01708ea90b18659b"}, {"sha": "1ee056672bd7b2b73561394a5e949fb4042640c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee056672bd7b2b73561394a5e949fb4042640c5", "html_url": "https://github.com/rust-lang/rust/commit/1ee056672bd7b2b73561394a5e949fb4042640c5"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "c8a04349eace0ac7c16911807438dd61a27707c7", "filename": "doc/tutorial.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e0e63a5891065f16eec3fd140c5a7438460658e3/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/e0e63a5891065f16eec3fd140c5a7438460658e3/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=e0e63a5891065f16eec3fd140c5a7438460658e3", "patch": "@@ -358,7 +358,7 @@ This may sound intricate, but it is super-useful and will grow on you.\n \n ## Types\n \n-The basic types include the usual boolean, integral, and floating point types.\n+The basic types include the usual boolean, integral, and floating-point types.\n \n ------------------------- -----------------------------------------------\n `()`                      Nil, the type that has only a single value\n@@ -367,8 +367,8 @@ The basic types include the usual boolean, integral, and floating point types.\n `i8`, `i16`, `i32`, `i64` Signed integers with a specific size (in bits)\n `u8`, `u16`, `u32`, `u64` Unsigned integers with a specific size\n `float`                   The largest floating-point type efficiently supported on the target machine\n-`f32`, `f64`              Floating-point types with a specific size.\n-`char`                    A Unicode character (32 bits).\n+`f32`, `f64`              Floating-point types with a specific size\n+`char`                    A Unicode character (32 bits)\n ------------------------- -----------------------------------------------\n \n These can be combined in composite types, which will be described in\n@@ -378,7 +378,7 @@ while N should be a literal number):\n ------------------------- -----------------------------------------------\n `[T * N]`                 Vector (like an array in other languages) with N elements\n `[mut T * N]`             Mutable vector with N elements\n-`(T1, T2)`                Tuple type. Any arity above 1 is supported\n+`(T1, T2)`                Tuple type; any arity above 1 is supported\n `&T`, `~T`, `@T`          [Pointer types](#boxes-and-pointers)\n ------------------------- -----------------------------------------------\n \n@@ -863,7 +863,7 @@ the return type follows the arrow.\n \n ~~~~\n fn line(a: int, b: int, x: int) -> int {\n-    return a*x + b;\n+    return a * x + b;\n }\n ~~~~\n \n@@ -874,7 +874,7 @@ expression.\n \n ~~~~\n fn line(a: int, b: int, x: int) -> int {\n-    a*x + b\n+    a * x + b\n }\n ~~~~\n \n@@ -891,11 +891,11 @@ fn do_nothing_the_easy_way() { }\n Ending the function with a semicolon like so is equivalent to returning `()`.\n \n ~~~~\n-fn line(a: int, b: int, x: int) -> int { a*x + b  }\n-fn oops(a: int, b: int, x: int) -> ()  { a*x + b; }\n+fn line(a: int, b: int, x: int) -> int { a * x + b  }\n+fn oops(a: int, b: int, x: int) -> ()  { a * x + b; }\n \n-assert 8  == line(5,3,1);\n-assert () == oops(5,3,1);\n+assert 8  == line(5, 3, 1);\n+assert () == oops(5, 3, 1);\n ~~~~\n \n Methods are like functions, except that they are defined for a specific\n@@ -1319,7 +1319,7 @@ Strings are implemented with vectors of `[u8]`, though they have a distinct\n type. They support most of the same allocation options as\n vectors, though the string literal without a storage sigil, e.g.\n `\"foo\"` is treated differently than a comparable vector (`[foo]`).\n-Wheras plain vectors are stack-allocated fixed length vectors,\n+Whereas plain vectors are stack-allocated fixed-length vectors,\n plain strings are region pointers to read-only memory.\n \n ~~~"}]}