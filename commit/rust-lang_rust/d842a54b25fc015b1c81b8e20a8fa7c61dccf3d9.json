{"sha": "d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NDJhNTRiMjVmYzAxNWIxYzgxYjhlMjBhOGZhN2M2MWRjY2YzZDk=", "commit": {"author": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2015-11-14T23:23:31Z"}, "committer": {"name": "Jonathan S", "email": "gereeter+code@gmail.com", "date": "2015-11-14T23:39:15Z"}, "message": "Stop using dynamic borrowing in MoveErrorCollector", "tree": {"sha": "94956267f42235e18229902abb19ebb3791d0cc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94956267f42235e18229902abb19ebb3791d0cc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9", "html_url": "https://github.com/rust-lang/rust/commit/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9/comments", "author": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gereeter", "id": 2328242, "node_id": "MDQ6VXNlcjIzMjgyNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2328242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gereeter", "html_url": "https://github.com/gereeter", "followers_url": "https://api.github.com/users/gereeter/followers", "following_url": "https://api.github.com/users/gereeter/following{/other_user}", "gists_url": "https://api.github.com/users/gereeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/gereeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gereeter/subscriptions", "organizations_url": "https://api.github.com/users/gereeter/orgs", "repos_url": "https://api.github.com/users/gereeter/repos", "events_url": "https://api.github.com/users/gereeter/events{/privacy}", "received_events_url": "https://api.github.com/users/gereeter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f5edf9e386f9ee7ed3f34edbaa3b71bd574c207", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f5edf9e386f9ee7ed3f34edbaa3b71bd574c207", "html_url": "https://github.com/rust-lang/rust/commit/4f5edf9e386f9ee7ed3f34edbaa3b71bd574c207"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "90c936162325232c708ee83b49e0214d695b2278", "filename": "src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs?ref=d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9", "patch": "@@ -44,7 +44,7 @@ pub fn gather_decl<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n \n pub fn gather_move_from_expr<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                        move_data: &MoveData<'tcx>,\n-                                       move_error_collector: &MoveErrorCollector<'tcx>,\n+                                       move_error_collector: &mut MoveErrorCollector<'tcx>,\n                                        move_expr_id: ast::NodeId,\n                                        cmt: mc::cmt<'tcx>,\n                                        move_reason: euv::MoveReason) {\n@@ -63,7 +63,7 @@ pub fn gather_move_from_expr<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n \n pub fn gather_match_variant<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                       move_data: &MoveData<'tcx>,\n-                                      _move_error_collector: &MoveErrorCollector<'tcx>,\n+                                      _move_error_collector: &mut MoveErrorCollector<'tcx>,\n                                       move_pat: &hir::Pat,\n                                       cmt: mc::cmt<'tcx>,\n                                       mode: euv::MatchMode) {\n@@ -94,7 +94,7 @@ pub fn gather_match_variant<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n \n pub fn gather_move_from_pat<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                       move_data: &MoveData<'tcx>,\n-                                      move_error_collector: &MoveErrorCollector<'tcx>,\n+                                      move_error_collector: &mut MoveErrorCollector<'tcx>,\n                                       move_pat: &hir::Pat,\n                                       cmt: mc::cmt<'tcx>) {\n     let pat_span_path_opt = match move_pat.node {\n@@ -115,7 +115,7 @@ pub fn gather_move_from_pat<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n \n fn gather_move<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                          move_data: &MoveData<'tcx>,\n-                         move_error_collector: &MoveErrorCollector<'tcx>,\n+                         move_error_collector: &mut MoveErrorCollector<'tcx>,\n                          move_info: GatherMoveInfo<'tcx>) {\n     debug!(\"gather_move(move_id={}, cmt={:?})\",\n            move_info.id, move_info.cmt);"}, {"sha": "de0b1fddc2006f27ac91731e45143ba246354f6b", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9", "patch": "@@ -86,7 +86,7 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for GatherLoanCtxt<'a, 'tcx> {\n         match mode {\n             euv::Move(move_reason) => {\n                 gather_moves::gather_move_from_expr(\n-                    self.bccx, &self.move_data, &self.move_error_collector,\n+                    self.bccx, &self.move_data, &mut self.move_error_collector,\n                     consume_id, cmt, move_reason);\n             }\n             euv::Copy => { }\n@@ -104,7 +104,7 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for GatherLoanCtxt<'a, 'tcx> {\n \n         if let Categorization::Downcast(..) = cmt.cat {\n             gather_moves::gather_match_variant(\n-                self.bccx, &self.move_data, &self.move_error_collector,\n+                self.bccx, &self.move_data, &mut self.move_error_collector,\n                 matched_pat, cmt, mode);\n         }\n     }\n@@ -124,7 +124,7 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for GatherLoanCtxt<'a, 'tcx> {\n         }\n \n         gather_moves::gather_move_from_pat(\n-            self.bccx, &self.move_data, &self.move_error_collector,\n+            self.bccx, &self.move_data, &mut self.move_error_collector,\n             consume_pat, cmt);\n     }\n "}, {"sha": "a56a03174f609af1c5e3c83534eca65b40774836", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=d842a54b25fc015b1c81b8e20a8fa7c61dccf3d9", "patch": "@@ -13,28 +13,27 @@ use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::mem_categorization::InteriorOffsetKind as Kind;\n use rustc::middle::ty;\n-use std::cell::RefCell;\n use syntax::ast;\n use syntax::codemap;\n use rustc_front::hir;\n \n pub struct MoveErrorCollector<'tcx> {\n-    errors: RefCell<Vec<MoveError<'tcx>>>\n+    errors: Vec<MoveError<'tcx>>\n }\n \n impl<'tcx> MoveErrorCollector<'tcx> {\n     pub fn new() -> MoveErrorCollector<'tcx> {\n         MoveErrorCollector {\n-            errors: RefCell::new(Vec::new())\n+            errors: Vec::new()\n         }\n     }\n \n-    pub fn add_error(&self, error: MoveError<'tcx>) {\n-        self.errors.borrow_mut().push(error);\n+    pub fn add_error(&mut self, error: MoveError<'tcx>) {\n+        self.errors.push(error);\n     }\n \n     pub fn report_potential_errors<'a>(&self, bccx: &BorrowckCtxt<'a, 'tcx>) {\n-        report_move_errors(bccx, &*self.errors.borrow())\n+        report_move_errors(bccx, &self.errors)\n     }\n }\n "}]}