{"sha": "45d5a37787accac8bd4276ea47872a561069109c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZDVhMzc3ODdhY2NhYzhiZDQyNzZlYTQ3ODcyYTU2MTA2OTEwOWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-11T19:05:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-11T19:39:18Z"}, "message": "rustup+fix", "tree": {"sha": "55f37050c51c975ee17c78f9118f475c64992ded", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55f37050c51c975ee17c78f9118f475c64992ded"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45d5a37787accac8bd4276ea47872a561069109c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45d5a37787accac8bd4276ea47872a561069109c", "html_url": "https://github.com/rust-lang/rust/commit/45d5a37787accac8bd4276ea47872a561069109c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45d5a37787accac8bd4276ea47872a561069109c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "704228d0bb65227c82a8b44ab819485912b44007", "url": "https://api.github.com/repos/rust-lang/rust/commits/704228d0bb65227c82a8b44ab819485912b44007", "html_url": "https://github.com/rust-lang/rust/commit/704228d0bb65227c82a8b44ab819485912b44007"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "66d096c0a02b066dc56d2325489656353167ccfe", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a37787accac8bd4276ea47872a561069109c/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a37787accac8bd4276ea47872a561069109c/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=45d5a37787accac8bd4276ea47872a561069109c", "patch": "@@ -1 +1 @@\n-303d8aff6092709edd4dbd35b1c88e9aa40bf6d8\n+c20d7eecbc0928b57da8fe30b2ef8528e2bdd5be"}, {"sha": "bd5884786c0e0f90373e1129e6707f6df256d43a", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a37787accac8bd4276ea47872a561069109c/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a37787accac8bd4276ea47872a561069109c/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=45d5a37787accac8bd4276ea47872a561069109c", "patch": "@@ -265,11 +265,10 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n     #[inline(always)]\n     fn assert_panic(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n-        span: Span,\n         msg: &mir::AssertMessage<'tcx>,\n         unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx> {\n-        ecx.assert_panic(span, msg, unwind)\n+        ecx.assert_panic(msg, unwind)\n     }\n \n     #[inline(always)]"}, {"sha": "d6f563deb0f930eba46a43efdcafbeadeead5900", "filename": "src/shims/panic.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a37787accac8bd4276ea47872a561069109c/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a37787accac8bd4276ea47872a561069109c/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=45d5a37787accac8bd4276ea47872a561069109c", "patch": "@@ -14,7 +14,6 @@\n use rustc::mir;\n use rustc::ty::{self, layout::LayoutOf};\n use rustc_target::spec::PanicStrategy;\n-use rustc_span::source_map::Span;\n \n use crate::*;\n \n@@ -176,7 +175,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n     fn assert_panic(\n         &mut self,\n-        span: Span,\n         msg: &mir::AssertMessage<'tcx>,\n         unwind: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx> {\n@@ -187,19 +185,17 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             BoundsCheck { ref index, ref len } => {\n                 // Forward to `panic_bounds_check` lang item.\n \n-                // First arg: Caller location.\n-                let location = this.alloc_caller_location_for_span(span);\n-                // Second arg: index.\n+                // First arg: index.\n                 let index = this.read_scalar(this.eval_operand(index, None)?)?;\n-                // Third arg: len.\n+                // Second arg: len.\n                 let len = this.read_scalar(this.eval_operand(len, None)?)?;\n \n                 // Call the lang item.\n                 let panic_bounds_check = this.tcx.lang_items().panic_bounds_check_fn().unwrap();\n                 let panic_bounds_check = ty::Instance::mono(this.tcx.tcx, panic_bounds_check);\n                 this.call_function(\n                     panic_bounds_check,\n-                    &[location.ptr.into(), index.into(), len.into()],\n+                    &[index.into(), len.into()],\n                     None,\n                     StackPopCleanup::Goto { ret: None, unwind },\n                 )?;"}]}