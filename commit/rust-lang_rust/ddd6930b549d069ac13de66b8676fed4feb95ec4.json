{"sha": "ddd6930b549d069ac13de66b8676fed4feb95ec4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZDY5MzBiNTQ5ZDA2OWFjMTNkZTY2Yjg2NzZmZWQ0ZmViOTVlYzQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-26T19:39:24Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-18T19:23:01Z"}, "message": "perf: bail out when there's >500 candidate locals", "tree": {"sha": "05cfa2d1f72b4e537e417a9c1b1c37ff60100f1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05cfa2d1f72b4e537e417a9c1b1c37ff60100f1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddd6930b549d069ac13de66b8676fed4feb95ec4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd6930b549d069ac13de66b8676fed4feb95ec4", "html_url": "https://github.com/rust-lang/rust/commit/ddd6930b549d069ac13de66b8676fed4feb95ec4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddd6930b549d069ac13de66b8676fed4feb95ec4/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab26fb140c9225c690a219c055a54eba57188d4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab26fb140c9225c690a219c055a54eba57188d4a", "html_url": "https://github.com/rust-lang/rust/commit/ab26fb140c9225c690a219c055a54eba57188d4a"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "cb4321ace7f9a4d8a89f8c80d42f166605e5a200", "filename": "compiler/rustc_mir/src/transform/dest_prop.rs", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ddd6930b549d069ac13de66b8676fed4feb95ec4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddd6930b549d069ac13de66b8676fed4feb95ec4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs?ref=ddd6930b549d069ac13de66b8676fed4feb95ec4", "patch": "@@ -114,6 +114,8 @@ use rustc_middle::mir::{\n };\n use rustc_middle::ty::{self, Ty, TyCtxt};\n \n+const MAX_LOCALS: usize = 500;\n+\n pub struct DestinationPropagation;\n \n impl<'tcx> MirPass<'tcx> for DestinationPropagation {\n@@ -137,7 +139,29 @@ impl<'tcx> MirPass<'tcx> for DestinationPropagation {\n             relevant_locals.insert(*src);\n         }\n \n+        // This pass unfortunately has `O(l\u00b2 * s)` performance, where `l` is the number of locals\n+        // and `s` is the number of statements and terminators in the function.\n+        // To prevent blowing up compile times too much, we bail out when there are too many locals.\n+        let relevant = relevant_locals.count();\n+        debug!(\n+            \"{:?}: {} locals ({} relevant), {} blocks\",\n+            source.def_id(),\n+            body.local_decls.len(),\n+            relevant,\n+            body.basic_blocks().len()\n+        );\n+        if relevant > MAX_LOCALS {\n+            warn!(\n+                \"too many candidate locals in {:?} ({}, max is {}), not optimizing\",\n+                source.def_id(),\n+                relevant,\n+                MAX_LOCALS\n+            );\n+            return;\n+        }\n+\n         let mut conflicts = Conflicts::build(tcx, body, source, &relevant_locals);\n+\n         let mut replacements = Replacements::new(body.local_decls.len());\n         for candidate @ CandidateAssignment { dest, src, loc } in candidates {\n             // Merge locals that don't conflict.\n@@ -392,12 +416,6 @@ impl Conflicts {\n         // We don't have to look out for locals that have their address taken, since\n         // `find_candidates` already takes care of that.\n \n-        debug!(\n-            \"Conflicts::build: {}/{} locals relevant\",\n-            relevant_locals.count(),\n-            body.local_decls.len()\n-        );\n-\n         let mut conflicts = BitMatrix::from_row_n(\n             &BitSet::new_empty(body.local_decls.len()),\n             body.local_decls.len(),"}]}