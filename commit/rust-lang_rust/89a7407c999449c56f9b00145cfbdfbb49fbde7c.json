{"sha": "89a7407c999449c56f9b00145cfbdfbb49fbde7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YTc0MDdjOTk5NDQ5YzU2ZjliMDAxNDVjZmJkZmJiNDlmYmRlN2M=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-03-24T10:44:47Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-24T21:19:31Z"}, "message": "librustc: clean-up expr_repeat loop generation: use native integers", "tree": {"sha": "4e6129fc2abfc516bd4d2e00123e9bbd8231aa7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e6129fc2abfc516bd4d2e00123e9bbd8231aa7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89a7407c999449c56f9b00145cfbdfbb49fbde7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89a7407c999449c56f9b00145cfbdfbb49fbde7c", "html_url": "https://github.com/rust-lang/rust/commit/89a7407c999449c56f9b00145cfbdfbb49fbde7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89a7407c999449c56f9b00145cfbdfbb49fbde7c/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "441313fc0ca635be18d1175e7dc265ab9ffa9d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/441313fc0ca635be18d1175e7dc265ab9ffa9d7d", "html_url": "https://github.com/rust-lang/rust/commit/441313fc0ca635be18d1175e7dc265ab9ffa9d7d"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "a86a4aec6b49fc2cf615c528522828f576b4430f", "filename": "src/librustc/middle/trans/tvec.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/89a7407c999449c56f9b00145cfbdfbb49fbde7c/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89a7407c999449c56f9b00145cfbdfbb49fbde7c/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftvec.rs?ref=89a7407c999449c56f9b00145cfbdfbb49fbde7c", "patch": "@@ -427,19 +427,17 @@ pub fn write_content(bcx: block,\n \n                     let loop_counter = {\n                         // i = 0\n-                        let i = alloca(loop_bcx, T_i64());\n-                        Store(loop_bcx, C_i64(0), i);\n+                        let i = alloca(loop_bcx, bcx.ccx().int_type);\n+                        Store(loop_bcx, C_uint(bcx.ccx(), 0), i);\n \n                         Br(loop_bcx, cond_bcx.llbb);\n                         i\n                     };\n \n                     { // i < count\n                         let lhs = Load(cond_bcx, loop_counter);\n-                        let rhs = C_integral(T_i64(), count as u64, lib::llvm::False);\n-                        let cmp_lr = ICmp(cond_bcx, lib::llvm::IntULT, lhs, rhs);\n-                        let zext = ZExt(cond_bcx, cmp_lr, T_i8());\n-                        let cond_val = ICmp(cond_bcx, lib::llvm::IntNE, zext, C_u8(0));\n+                        let rhs = C_uint(bcx.ccx(), count);\n+                        let cond_val = ICmp(cond_bcx, lib::llvm::IntULT, lhs, rhs);\n \n                         CondBr(cond_bcx, cond_val, set_bcx.llbb, next_bcx.llbb);\n                     }\n@@ -454,7 +452,7 @@ pub fn write_content(bcx: block,\n \n                     { // i += 1\n                         let i = Load(inc_bcx, loop_counter);\n-                        let plusone = Add(inc_bcx, i, C_i64(1));\n+                        let plusone = Add(inc_bcx, i, C_uint(bcx.ccx(), 1));\n                         Store(inc_bcx, plusone, loop_counter);\n \n                         Br(inc_bcx, cond_bcx.llbb);"}]}