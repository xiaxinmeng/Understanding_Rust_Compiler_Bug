{"sha": "3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMGJmZTEyMzhlMjZjZTU3YzIyMDExNzJmMGE0YmI3Y2ZiYmJhMGE=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2020-01-20T18:14:51Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2020-01-20T18:14:51Z"}, "message": "rustdoc: Correct order of `async` and `unsafe` in `async unsafe fn`s", "tree": {"sha": "61b2f411fe890e968f420581a2686b37b82f0ed5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61b2f411fe890e968f420581a2686b37b82f0ed5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a", "html_url": "https://github.com/rust-lang/rust/commit/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "900811e43047fc5593f39b0363373530b02c87e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/900811e43047fc5593f39b0363373530b02c87e0", "html_url": "https://github.com/rust-lang/rust/commit/900811e43047fc5593f39b0363373530b02c87e0"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "ab38eec5f3ea9f2b175e8305d62c52271e12b74b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a", "patch": "@@ -2321,8 +2321,8 @@ fn item_function(w: &mut Buffer, cx: &Context, it: &clean::Item, f: &clean::Func\n         \"{}{}{}{}{:#}fn {}{:#}\",\n         it.visibility.print_with_space(),\n         f.header.constness.print_with_space(),\n-        f.header.unsafety.print_with_space(),\n         f.header.asyncness.print_with_space(),\n+        f.header.unsafety.print_with_space(),\n         print_abi_with_space(f.header.abi),\n         it.name.as_ref().unwrap(),\n         f.generics.print()\n@@ -2332,12 +2332,12 @@ fn item_function(w: &mut Buffer, cx: &Context, it: &clean::Item, f: &clean::Func\n     render_attributes(w, it, false);\n     write!(\n         w,\n-        \"{vis}{constness}{unsafety}{asyncness}{abi}fn \\\n+        \"{vis}{constness}{asyncness}{unsafety}{abi}fn \\\n            {name}{generics}{decl}{where_clause}</pre>\",\n         vis = it.visibility.print_with_space(),\n         constness = f.header.constness.print_with_space(),\n-        unsafety = f.header.unsafety.print_with_space(),\n         asyncness = f.header.asyncness.print_with_space(),\n+        unsafety = f.header.unsafety.print_with_space(),\n         abi = print_abi_with_space(f.header.abi),\n         name = it.name.as_ref().unwrap(),\n         generics = f.generics.print(),\n@@ -2832,8 +2832,8 @@ fn render_assoc_item(\n             \"{}{}{}{}{}{:#}fn {}{:#}\",\n             meth.visibility.print_with_space(),\n             header.constness.print_with_space(),\n-            header.unsafety.print_with_space(),\n             header.asyncness.print_with_space(),\n+            header.unsafety.print_with_space(),\n             print_default_space(meth.is_default()),\n             print_abi_with_space(header.abi),\n             name,\n@@ -2854,8 +2854,8 @@ fn render_assoc_item(\n             if parent == ItemType::Trait { \"    \" } else { \"\" },\n             meth.visibility.print_with_space(),\n             header.constness.print_with_space(),\n-            header.unsafety.print_with_space(),\n             header.asyncness.print_with_space(),\n+            header.unsafety.print_with_space(),\n             print_default_space(meth.is_default()),\n             print_abi_with_space(header.abi),\n             href = href,"}, {"sha": "5a03e821e8a2ff637b7adbc2117dd987652ba04a", "filename": "src/test/rustdoc/async-fn.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fasync-fn.rs?ref=3e0bfe1238e26ce57c2201172f0a4bb7cfbbba0a", "patch": "@@ -15,6 +15,11 @@ pub async fn baz<T>(a: T) -> T {\n     a\n }\n \n+// @has async_fn/fn.qux.html '//pre[@class=\"rust fn\"]' 'pub async unsafe fn qux() -> char'\n+pub async unsafe fn qux() -> char {\n+    '\u26a0'\n+}\n+\n trait Bar {}\n \n impl Bar for () {}\n@@ -26,8 +31,10 @@ pub async fn quux() -> impl Bar {\n \n // @has async_fn/struct.Foo.html\n // @matches - '//code' 'pub async fn f\\(\\)$'\n+// @matches - '//code' 'pub async unsafe fn g\\(\\)$'\n pub struct Foo;\n \n impl Foo {\n     pub async fn f() {}\n+    pub async unsafe fn g() {}\n }"}]}