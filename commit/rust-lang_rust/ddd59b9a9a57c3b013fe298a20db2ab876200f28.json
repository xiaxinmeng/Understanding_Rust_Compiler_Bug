{"sha": "ddd59b9a9a57c3b013fe298a20db2ab876200f28", "node_id": "C_kwDOAAsO6NoAKGRkZDU5YjlhOWE1N2MzYjAxM2ZlMjk4YTIwZGIyYWI4NzYyMDBmMjg", "commit": {"author": {"name": "feniljain", "email": "fkjainco@gmail.com", "date": "2022-05-21T13:12:35Z"}, "committer": {"name": "feniljain", "email": "fkjainco@gmail.com", "date": "2022-05-21T13:43:49Z"}, "message": "fix(extract_module): nearby imports deletion causing panic", "tree": {"sha": "edd9fd7e70100828a41462f7d7bdd0a57328e3f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd9fd7e70100828a41462f7d7bdd0a57328e3f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddd59b9a9a57c3b013fe298a20db2ab876200f28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd59b9a9a57c3b013fe298a20db2ab876200f28", "html_url": "https://github.com/rust-lang/rust/commit/ddd59b9a9a57c3b013fe298a20db2ab876200f28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddd59b9a9a57c3b013fe298a20db2ab876200f28/comments", "author": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "feniljain", "id": 49019259, "node_id": "MDQ6VXNlcjQ5MDE5MjU5", "avatar_url": "https://avatars.githubusercontent.com/u/49019259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feniljain", "html_url": "https://github.com/feniljain", "followers_url": "https://api.github.com/users/feniljain/followers", "following_url": "https://api.github.com/users/feniljain/following{/other_user}", "gists_url": "https://api.github.com/users/feniljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/feniljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feniljain/subscriptions", "organizations_url": "https://api.github.com/users/feniljain/orgs", "repos_url": "https://api.github.com/users/feniljain/repos", "events_url": "https://api.github.com/users/feniljain/events{/privacy}", "received_events_url": "https://api.github.com/users/feniljain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57861bd99eb98ce04b020572bfc1a2a5e689b101", "url": "https://api.github.com/repos/rust-lang/rust/commits/57861bd99eb98ce04b020572bfc1a2a5e689b101", "html_url": "https://github.com/rust-lang/rust/commit/57861bd99eb98ce04b020572bfc1a2a5e689b101"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "1f20149d6a34a349b7ab421b8d911bc6edc3a96d", "filename": "crates/ide-assists/src/handlers/extract_module.rs", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/ddd59b9a9a57c3b013fe298a20db2ab876200f28/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddd59b9a9a57c3b013fe298a20db2ab876200f28/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_module.rs?ref=ddd59b9a9a57c3b013fe298a20db2ab876200f28", "patch": "@@ -180,6 +180,7 @@ pub(crate) fn extract_module(acc: &mut Assists, ctx: &AssistContext) -> Option<(\n             }\n \n             for import_path_text_range in import_paths_to_be_removed {\n+                println!(\"Deleting : {:?}\", import_path_text_range);\n                 builder.delete(import_path_text_range);\n             }\n \n@@ -439,7 +440,28 @@ impl Module {\n                                         ctx,\n                                     )\n                                 {\n-                                    import_paths_to_be_removed.push(import_path);\n+                                    if import_paths_to_be_removed.len() > 0 {\n+                                        // Text ranges recieved here for imports are extended to the\n+                                        // next/previous comma which can cause intersections among them\n+                                        // and later deletion of these can cause panics similar\n+                                        // to reported in #11766. So to mitigate it, we\n+                                        // check for intersection between all current members\n+                                        // and if it exists we combine both text ranges into\n+                                        // one\n+                                        for i in 0..import_paths_to_be_removed.len() {\n+                                            if let Some(_) =\n+                                                import_paths_to_be_removed[i].intersect(import_path)\n+                                            {\n+                                                import_paths_to_be_removed[i] =\n+                                                    import_paths_to_be_removed[i]\n+                                                        .cover(import_path);\n+                                            } else {\n+                                                import_paths_to_be_removed.push(import_path);\n+                                            }\n+                                        }\n+                                    } else {\n+                                        import_paths_to_be_removed.push(import_path);\n+                                    }\n                                 }\n                             }\n                         }\n@@ -1495,4 +1517,38 @@ mod modname {\n         \",\n         )\n     }\n+\n+    #[test]\n+    fn test_issue_11766() {\n+        //https://github.com/rust-lang/rust-analyzer/issues/11766\n+        check_assist(\n+            extract_module,\n+            r\"\n+            mod x {\n+                pub struct Foo;\n+                pub struct Bar;\n+            }\n+\n+            use x::{Bar, Foo};\n+\n+            $0type A = (Foo, Bar);$0\n+        \",\n+            r\"\n+            mod x {\n+                pub struct Foo;\n+                pub struct Bar;\n+            }\n+\n+            use x::{};\n+\n+            mod modname {\n+                use super::x::Bar;\n+\n+                use super::x::Foo;\n+\n+                pub(crate) type A = (Foo, Bar);\n+            }\n+        \",\n+        )\n+    }\n }"}]}