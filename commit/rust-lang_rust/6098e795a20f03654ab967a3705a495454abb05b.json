{"sha": "6098e795a20f03654ab967a3705a495454abb05b", "node_id": "C_kwDOAAsO6NoAKDYwOThlNzk1YTIwZjAzNjU0YWI5NjdhMzcwNWE0OTU0NTRhYmIwNWI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-30T12:16:33Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-30T12:16:33Z"}, "message": "Limit symbols exported from proc macros\n\nOnly __rustc_proc_macro_decls_*__ and rust_metadata_* need to be\nexported for proc macros to work. All other symbols only increase binary\nsize and have the potential to conflict with symbols from the host\ncompiler.", "tree": {"sha": "51e4551e46d31600c559ccb2b46a5300999032c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51e4551e46d31600c559ccb2b46a5300999032c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6098e795a20f03654ab967a3705a495454abb05b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6098e795a20f03654ab967a3705a495454abb05b", "html_url": "https://github.com/rust-lang/rust/commit/6098e795a20f03654ab967a3705a495454abb05b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6098e795a20f03654ab967a3705a495454abb05b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "760d8a2cb169974971cb54302c857bfed0070f6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/760d8a2cb169974971cb54302c857bfed0070f6e", "html_url": "https://github.com/rust-lang/rust/commit/760d8a2cb169974971cb54302c857bfed0070f6e"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "3d77ddc3f84c227cd2c5e0fbad8347c77a99470d", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6098e795a20f03654ab967a3705a495454abb05b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6098e795a20f03654ab967a3705a495454abb05b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=6098e795a20f03654ab967a3705a495454abb05b", "patch": "@@ -656,9 +656,7 @@ impl<'a> Linker for GccLinker<'a> {\n             return;\n         }\n \n-        if crate_type == CrateType::ProcMacro {\n-            return;\n-        }\n+        // FIXME hide #[no_mangle] symbols for proc-macros\n \n         let is_windows = self.sess.target.is_like_windows;\n         let path = tmpdir.join(if is_windows { \"list.def\" } else { \"list\" });"}, {"sha": "e6b6055759d27c74d1bd615bc410f9744e20fac3", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6098e795a20f03654ab967a3705a495454abb05b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6098e795a20f03654ab967a3705a495454abb05b/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=6098e795a20f03654ab967a3705a495454abb05b", "patch": "@@ -257,16 +257,18 @@ fn exported_symbols_provider_local<'tcx>(\n         }));\n     }\n \n-    if tcx.sess.crate_types().contains(&CrateType::Dylib) {\n+    if tcx.sess.crate_types().contains(&CrateType::Dylib)\n+        || tcx.sess.crate_types().contains(&CrateType::ProcMacro)\n+    {\n         let symbol_name = metadata_symbol_name(tcx);\n         let exported_symbol = ExportedSymbol::NoDefId(SymbolName::new(tcx, &symbol_name));\n \n         symbols.push((\n             exported_symbol,\n             SymbolExportInfo {\n-                level: SymbolExportLevel::Rust,\n+                level: SymbolExportLevel::C,\n                 kind: SymbolExportKind::Data,\n-                used: false,\n+                used: true,\n             },\n         ));\n     }"}, {"sha": "b816afa7395a1c1182dea3b3e88d7767eaca80f8", "filename": "src/test/run-make-fulldeps/symbol-visibility/Makefile", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6098e795a20f03654ab967a3705a495454abb05b/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/6098e795a20f03654ab967a3705a495454abb05b/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile?ref=6098e795a20f03654ab967a3705a495454abb05b", "patch": "@@ -5,13 +5,15 @@ include ../tools.mk\n NM=nm -D\n CDYLIB_NAME=liba_cdylib.so\n RDYLIB_NAME=liba_rust_dylib.so\n+PROC_MACRO_NAME=liba_proc_macro.so\n EXE_NAME=an_executable\n COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.so\n \n ifeq ($(UNAME),Darwin)\n NM=nm -gU\n CDYLIB_NAME=liba_cdylib.dylib\n RDYLIB_NAME=liba_rust_dylib.dylib\n+PROC_MACRO_NAME=liba_proc_macro.dylib\n EXE_NAME=an_executable\n COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.dylib\n endif\n@@ -20,6 +22,7 @@ ifdef IS_WINDOWS\n NM=nm -g\n CDYLIB_NAME=liba_cdylib.dll.a\n RDYLIB_NAME=liba_rust_dylib.dll.a\n+PROC_MACRO_NAME=liba_proc_macro.dll\n EXE_NAME=an_executable.exe\n COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.dll.a\n endif\n@@ -31,6 +34,7 @@ all:\n \t$(RUSTC) -Zshare-generics=no an_rlib.rs\n \t$(RUSTC) -Zshare-generics=no a_cdylib.rs\n \t$(RUSTC) -Zshare-generics=no a_rust_dylib.rs\n+\t$(RUSTC) -Zshare-generics=no a_proc_macro.rs\n \t$(RUSTC) -Zshare-generics=no an_executable.rs\n \t$(RUSTC) -Zshare-generics=no a_cdylib.rs --crate-name combined_rlib_dylib --crate-type=rlib,cdylib\n \n@@ -54,6 +58,14 @@ all:\n \t# Check that a Rust dylib does not export generics if -Zshare-generics=no\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_generic_function_from_rlib)\" -eq \"0\" ]\n \n+\t# Check that a proc macro exports its public #[no_mangle] functions\n+\t# FIXME avoid exporting #[no_mangle] symbols for proc macros\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n+\t# Check that a proc macro exports the public #[no_mangle] functions of dependencies\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n+\t# Check that a proc macro DOES NOT export any public Rust functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c $(RE_ANY_RUST_SYMBOL))\" -eq \"0\" ]\n+\n # FIXME(nbdd0121): This is broken in MinGW, see https://github.com/rust-lang/rust/pull/95604#issuecomment-1101564032\n ifndef IS_WINDOWS\n \t# Check that an executable does not export any dynamic symbols\n@@ -75,6 +87,7 @@ endif\n \t$(RUSTC) -Zshare-generics=yes an_rlib.rs\n \t$(RUSTC) -Zshare-generics=yes a_cdylib.rs\n \t$(RUSTC) -Zshare-generics=yes a_rust_dylib.rs\n+\t$(RUSTC) -Zshare-generics=yes a_proc_macro.rs\n \t$(RUSTC) -Zshare-generics=yes an_executable.rs\n \n \t# Check that a cdylib exports its public #[no_mangle] functions\n@@ -94,6 +107,14 @@ endif\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_rust_function_from_rlib)\" -eq \"1\" ]\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_generic_function_from_rlib)\" -eq \"1\" ]\n \n+\t# Check that a proc macro exports its public #[no_mangle] functions\n+\t# FIXME avoid exporting #[no_mangle] symbols for proc macros\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n+\t# Check that a proc macro exports the public #[no_mangle] functions of dependencies\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n+\t# Check that a proc macro DOES NOT export any public Rust functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c $(RE_ANY_RUST_SYMBOL))\" -eq \"0\" ]\n+\n ifndef IS_WINDOWS\n \t# Check that an executable does not export any dynamic symbols\n \t[ \"$$($(NM) $(TMPDIR)/$(EXE_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"0\" ]"}, {"sha": "9fd1a8a671767f6d649484c4ad1ea0993bab938c", "filename": "src/test/run-make-fulldeps/symbol-visibility/a_proc_macro.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6098e795a20f03654ab967a3705a495454abb05b/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6098e795a20f03654ab967a3705a495454abb05b/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_proc_macro.rs?ref=6098e795a20f03654ab967a3705a495454abb05b", "patch": "@@ -0,0 +1,9 @@\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate an_rlib;\n+\n+// This should not be exported\n+#[no_mangle]\n+extern \"C\" fn public_c_function_from_cdylib() {\n+    an_rlib::public_c_function_from_rlib();\n+}"}]}