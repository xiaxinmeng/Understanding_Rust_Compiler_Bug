{"sha": "5e622332774fbd57c12addd46b058c8feb2b08a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNjIyMzMyNzc0ZmJkNTdjMTJhZGRkNDZiMDU4YzhmZWIyYjA4YTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-03T16:43:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-03T16:43:26Z"}, "message": "Merge #6401\n\n6401: Only show `self` ident when showing parameter self hints r=matklad a=Veykril\n\nThis just hints all self parameters with the `self` token, this is therefor equal to how all other parameters are displayed, but given the self param special in how its defined in a function signature it might make sense to keep the `&`/`&mut` parts as well as emitting those tokens for explict `Self` types that are taken by ref like `self: &Rc<Self>`?\r\n\r\nFixes #6400\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "280d119f7430989cb9097425cbcfc03aa3c6eb04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/280d119f7430989cb9097425cbcfc03aa3c6eb04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e622332774fbd57c12addd46b058c8feb2b08a6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfoYiuCRBK7hj4Ov3rIwAAdHIIAK6V07Xn2HdkUl67ETSEnvcL\nPR3Wbbk29AaitdP/zU04QtdrUz2/opKs6PVJZxC8zC+T9CgwyYXxuT9UMCPUvjTG\nSnshdCp5UFDsHRoExhL8Cfk7ehFtcrsmh7qLV0tr+irEA2rVkBs6jcEvldah+Fp2\nLn4+g0/mbsXG16Ssdz85f49IZPNIu0/B9osbcBm2SAqr9UXQGHpgU/qpdYGte7U8\n3tQTbxhKXtBz8BWdhhlgstzDeVQCwUr67xiPjseYXBUiXWRNH5Z7kDrF7GzGj58y\nqIxvbSeFkP9GzURffKS8deK4+/h70/1/RIAnENlizpiuOVcZ+k2RCIRWAsJChPY=\n=dfWS\n-----END PGP SIGNATURE-----\n", "payload": "tree 280d119f7430989cb9097425cbcfc03aa3c6eb04\nparent 8ad01d863bd747f194ac391ba6fcb950c78e3ea3\nparent 74c82ca8ce82360f9509ab433263d2f4e872209b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1604421806 +0000\ncommitter GitHub <noreply@github.com> 1604421806 +0000\n\nMerge #6401\n\n6401: Only show `self` ident when showing parameter self hints r=matklad a=Veykril\n\nThis just hints all self parameters with the `self` token, this is therefor equal to how all other parameters are displayed, but given the self param special in how its defined in a function signature it might make sense to keep the `&`/`&mut` parts as well as emitting those tokens for explict `Self` types that are taken by ref like `self: &Rc<Self>`?\r\n\r\nFixes #6400\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e622332774fbd57c12addd46b058c8feb2b08a6", "html_url": "https://github.com/rust-lang/rust/commit/5e622332774fbd57c12addd46b058c8feb2b08a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e622332774fbd57c12addd46b058c8feb2b08a6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ad01d863bd747f194ac391ba6fcb950c78e3ea3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad01d863bd747f194ac391ba6fcb950c78e3ea3", "html_url": "https://github.com/rust-lang/rust/commit/8ad01d863bd747f194ac391ba6fcb950c78e3ea3"}, {"sha": "74c82ca8ce82360f9509ab433263d2f4e872209b", "url": "https://api.github.com/repos/rust-lang/rust/commits/74c82ca8ce82360f9509ab433263d2f4e872209b", "html_url": "https://github.com/rust-lang/rust/commit/74c82ca8ce82360f9509ab433263d2f4e872209b"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "6cfb22e13ee35483236601d7b98830d4abaffabd", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5e622332774fbd57c12addd46b058c8feb2b08a6/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e622332774fbd57c12addd46b058c8feb2b08a6/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=5e622332774fbd57c12addd46b058c8feb2b08a6", "patch": "@@ -162,7 +162,7 @@ fn get_param_name_hints(\n         .zip(args)\n         .filter_map(|((param, _ty), arg)| {\n             let param_name = match param? {\n-                Either::Left(self_param) => self_param.to_string(),\n+                Either::Left(_) => \"self\".to_string(),\n                 Either::Right(pat) => match pat {\n                     ast::Pat::IdentPat(it) => it.name()?.to_string(),\n                     _ => return None,\n@@ -809,7 +809,7 @@ fn main() {\n     t.method(123);\n            //^^^ param\n     Test::method(&t,      3456);\n-               //^^ &self ^^^^ param\n+               //^^ self  ^^^^ param\n     Test::from_syntax(\n         FileId {},\n       //^^^^^^^^^ file_id\n@@ -1360,4 +1360,25 @@ fn main() {\n             \"#,\n         );\n     }\n+\n+    #[test]\n+    fn self_param_hints() {\n+        check(\n+            r#\"\n+struct Foo;\n+\n+impl Foo {\n+    fn foo(self: Self) {}\n+    fn bar(self: &Self) {}\n+}\n+\n+fn main() {\n+    Foo::foo(Foo);\n+           //^^^ self\n+    Foo::bar(&Foo);\n+           //^^^^ self\n+}\n+\"#,\n+        )\n+    }\n }"}]}