{"sha": "6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZTVhYjZhN2U1NjY5MzJhZDFlMzk4N2FlNzY0NWViMDEyNWRmZTU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-26T18:24:22Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-26T19:02:43Z"}, "message": "rustc_span: Add `Symbol::to_ident_string` for use in diagnostic messages", "tree": {"sha": "e638ee90e0a24aa5474f1f21b707b22273c623f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e638ee90e0a24aa5474f1f21b707b22273c623f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5", "html_url": "https://github.com/rust-lang/rust/commit/6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "892cb143e5984f220e6b26b48d972bd1f4644298", "url": "https://api.github.com/repos/rust-lang/rust/commits/892cb143e5984f220e6b26b48d972bd1f4644298", "html_url": "https://github.com/rust-lang/rust/commit/892cb143e5984f220e6b26b48d972bd1f4644298"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "d6232f32f4c1bf8e27a85861709d962846dfa6af", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=6ce5ab6a7e566932ad1e3987ae7645eb0125dfe5", "patch": "@@ -1023,6 +1023,14 @@ impl Symbol {\n     pub fn as_u32(self) -> u32 {\n         self.0.as_u32()\n     }\n+\n+    /// This method is supposed to be used in error messages, so it's expected to be\n+    /// identical to printing the original identifier token written in source code\n+    /// (`token_to_string`, `Ident::to_string`), except that symbols don't keep the rawness flag\n+    /// or edition, so we have to guess the rawness using the global edition.\n+    pub fn to_ident_string(self) -> String {\n+        Ident::with_dummy_span(self).to_string()\n+    }\n }\n \n impl fmt::Debug for Symbol {"}]}