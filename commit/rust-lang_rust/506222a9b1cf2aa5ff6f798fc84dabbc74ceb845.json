{"sha": "506222a9b1cf2aa5ff6f798fc84dabbc74ceb845", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNjIyMmE5YjFjZjJhYTVmZjZmNzk4ZmM4NGRhYmJjNzRjZWI4NDU=", "commit": {"author": {"name": "Alexander Andreev", "email": "andreevlex.as@gmail.com", "date": "2019-09-30T09:09:56Z"}, "committer": {"name": "Alexander Andreev", "email": "andreevlex.as@gmail.com", "date": "2019-09-30T09:09:56Z"}, "message": "Drop debug strings.", "tree": {"sha": "5e0716dba1ca6fba545c2104cf4c6b5781c01086", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e0716dba1ca6fba545c2104cf4c6b5781c01086"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/506222a9b1cf2aa5ff6f798fc84dabbc74ceb845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/506222a9b1cf2aa5ff6f798fc84dabbc74ceb845", "html_url": "https://github.com/rust-lang/rust/commit/506222a9b1cf2aa5ff6f798fc84dabbc74ceb845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/506222a9b1cf2aa5ff6f798fc84dabbc74ceb845/comments", "author": {"login": "ava57r", "id": 20382553, "node_id": "MDQ6VXNlcjIwMzgyNTUz", "avatar_url": "https://avatars.githubusercontent.com/u/20382553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ava57r", "html_url": "https://github.com/ava57r", "followers_url": "https://api.github.com/users/ava57r/followers", "following_url": "https://api.github.com/users/ava57r/following{/other_user}", "gists_url": "https://api.github.com/users/ava57r/gists{/gist_id}", "starred_url": "https://api.github.com/users/ava57r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ava57r/subscriptions", "organizations_url": "https://api.github.com/users/ava57r/orgs", "repos_url": "https://api.github.com/users/ava57r/repos", "events_url": "https://api.github.com/users/ava57r/events{/privacy}", "received_events_url": "https://api.github.com/users/ava57r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ava57r", "id": 20382553, "node_id": "MDQ6VXNlcjIwMzgyNTUz", "avatar_url": "https://avatars.githubusercontent.com/u/20382553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ava57r", "html_url": "https://github.com/ava57r", "followers_url": "https://api.github.com/users/ava57r/followers", "following_url": "https://api.github.com/users/ava57r/following{/other_user}", "gists_url": "https://api.github.com/users/ava57r/gists{/gist_id}", "starred_url": "https://api.github.com/users/ava57r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ava57r/subscriptions", "organizations_url": "https://api.github.com/users/ava57r/orgs", "repos_url": "https://api.github.com/users/ava57r/repos", "events_url": "https://api.github.com/users/ava57r/events{/privacy}", "received_events_url": "https://api.github.com/users/ava57r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81efd696ccb369d6c4813bad1107bfd9e270385b", "url": "https://api.github.com/repos/rust-lang/rust/commits/81efd696ccb369d6c4813bad1107bfd9e270385b", "html_url": "https://github.com/rust-lang/rust/commit/81efd696ccb369d6c4813bad1107bfd9e270385b"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "b4403c4710006150b9bc2e3f8e21ae8f286d2d35", "filename": "crates/ra_tools/tests/docs.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/506222a9b1cf2aa5ff6f798fc84dabbc74ceb845/crates%2Fra_tools%2Ftests%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506222a9b1cf2aa5ff6f798fc84dabbc74ceb845/crates%2Fra_tools%2Ftests%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tools%2Ftests%2Fdocs.rs?ref=506222a9b1cf2aa5ff6f798fc84dabbc74ceb845", "patch": "@@ -35,27 +35,23 @@ fn no_docs_comments() {\n     let crates = project_root().join(\"crates\");\n     let iter = WalkDir::new(crates);\n     for f in iter.into_iter().filter_entry(|e| !is_hidden(e)) {\n-        let f = f.unwrap(); //dbg!(f.unwrap());\n+        let f = f.unwrap();\n         if f.file_type().is_dir() {\n             continue;\n         }\n         if f.path().extension().map(|it| it != \"rs\").unwrap_or(false) {\n-            //dbg!(f.path());\n             continue;\n         }\n         if is_exclude_dir(f.path()) {\n-            //dbg!(f.path());\n             continue;\n         }\n         if is_exclude_file(&f) {\n-            //dbg!(f.path());\n             continue;\n         }\n         let mut reader = BufReader::new(fs::File::open(f.path()).unwrap());\n         let mut line = String::new();\n         reader.read_line(&mut line).unwrap();\n         if !line.starts_with(\"//!\") {\n-            //dbg!(line);\n             panic!(\n                 \"\\nMissing docs strings\\n\\\n                  module: {}\\n\\"}]}