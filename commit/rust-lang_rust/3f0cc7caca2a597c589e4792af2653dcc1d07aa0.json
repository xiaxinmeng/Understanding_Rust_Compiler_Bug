{"sha": "3f0cc7caca2a597c589e4792af2653dcc1d07aa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMGNjN2NhY2EyYTU5N2M1ODllNDc5MmFmMjY1M2RjYzFkMDdhYTA=", "commit": {"author": {"name": "Jeff Crocker", "email": "crockagile@gmail.com", "date": "2017-12-05T23:27:14Z"}, "committer": {"name": "Jeff Crocker", "email": "crockagile@gmail.com", "date": "2017-12-05T23:27:14Z"}, "message": "Format function interface fingerprint hash tests", "tree": {"sha": "d03b29920c2abf5200fd98a4ede8b379e2fc57b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d03b29920c2abf5200fd98a4ede8b379e2fc57b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f0cc7caca2a597c589e4792af2653dcc1d07aa0", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJaJytSAAoJEAWZfbCdMLzWbCMP/3+tITuWNtT8+5gzzwWOg9i3\ng7VhvWLJ2K8PPotSbPZKROoz6tU4Vz9dqhLZOj2KffVE807k+7dTcV5HyoZpYup1\nbLPG9VP8/fcH0jj72U8XSqh5zqjnjSChvGSiKnA7pCOKi+AVedJIpIXQ1uM0qAgB\nSUsn5pb8aedWRRCJyUq6C97A23RB5nrpethxJhUjMeilcYOf9rVZ4kk468jhQ2bR\nRNTuosX3Wyv4pyRQuWAfCozpkibXeGHq8BJ8iv1JI+uJ2AbJgWC7o0/q/wxPxyDB\na4+Sodifwa8jk32SfatwlLpABOSpGVMFIdYIJgAm1mE0Cdd3NJQK9GBKhFg3NyPc\nlkq0q1CnBNEVeFLGaQhJCxdm2rLvGyQlNXmRd0wLnzdci0c/dOtll5OMujsJuWjV\nqFwJCZKPT0cnz/d/4vf+wKG339JQlWyYbtTpG3UZN2WIMKK4+KtsmNQCqOX9Kcou\n8U0jOY/kPjJmbuAfMGzFYUdxF/XT/5lj5OUVxmO7uZicTlJfXIY/vu7vrMthNBlN\nksYwcO68VZ9cgaJrjxQY4gvKhh0LP1QvIr6KAv8Z+7mNR6G6MI5gaxeCnxC8dZ7/\n/BY8mu2PCWcTxnw0vtcA5bUIqM+f07w7i7LcVwmaoRpSF3ljE7F+oTqqXs8tkPrs\nvOcY7DNCh7bZTnaulhRV\n=aIZ2\n-----END PGP SIGNATURE-----", "payload": "tree d03b29920c2abf5200fd98a4ede8b379e2fc57b5\nparent 104ebd2c43ce69d346a6031809c6bfe621eed5eb\nauthor Jeff Crocker <crockagile@gmail.com> 1512516434 -0800\ncommitter Jeff Crocker <crockagile@gmail.com> 1512516434 -0800\n\nFormat function interface fingerprint hash tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0cc7caca2a597c589e4792af2653dcc1d07aa0", "html_url": "https://github.com/rust-lang/rust/commit/3f0cc7caca2a597c589e4792af2653dcc1d07aa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f0cc7caca2a597c589e4792af2653dcc1d07aa0/comments", "author": {"login": "CrockAgile", "id": 5395183, "node_id": "MDQ6VXNlcjUzOTUxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5395183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrockAgile", "html_url": "https://github.com/CrockAgile", "followers_url": "https://api.github.com/users/CrockAgile/followers", "following_url": "https://api.github.com/users/CrockAgile/following{/other_user}", "gists_url": "https://api.github.com/users/CrockAgile/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrockAgile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrockAgile/subscriptions", "organizations_url": "https://api.github.com/users/CrockAgile/orgs", "repos_url": "https://api.github.com/users/CrockAgile/repos", "events_url": "https://api.github.com/users/CrockAgile/events{/privacy}", "received_events_url": "https://api.github.com/users/CrockAgile/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CrockAgile", "id": 5395183, "node_id": "MDQ6VXNlcjUzOTUxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/5395183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrockAgile", "html_url": "https://github.com/CrockAgile", "followers_url": "https://api.github.com/users/CrockAgile/followers", "following_url": "https://api.github.com/users/CrockAgile/following{/other_user}", "gists_url": "https://api.github.com/users/CrockAgile/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrockAgile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrockAgile/subscriptions", "organizations_url": "https://api.github.com/users/CrockAgile/orgs", "repos_url": "https://api.github.com/users/CrockAgile/repos", "events_url": "https://api.github.com/users/CrockAgile/events{/privacy}", "received_events_url": "https://api.github.com/users/CrockAgile/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "104ebd2c43ce69d346a6031809c6bfe621eed5eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/104ebd2c43ce69d346a6031809c6bfe621eed5eb", "html_url": "https://github.com/rust-lang/rust/commit/104ebd2c43ce69d346a6031809c6bfe621eed5eb"}], "stats": {"total": 126, "additions": 70, "deletions": 56}, "files": [{"sha": "952256a65bd8012a6f7e6f8c4ad3fbb5201b8780", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 70, "deletions": 56, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/3f0cc7caca2a597c589e4792af2653dcc1d07aa0/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f0cc7caca2a597c589e4792af2653dcc1d07aa0/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=3f0cc7caca2a597c589e4792af2653dcc1d07aa0", "patch": "@@ -26,7 +26,7 @@\n #![feature(intrinsics)]\n #![feature(linkage)]\n #![feature(rustc_attrs)]\n-#![crate_type=\"rlib\"]\n+#![crate_type = \"rlib\"]\n \n \n // Add Parameter ---------------------------------------------------------------\n@@ -35,8 +35,9 @@\n pub fn add_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn add_parameter(p: i32) {}\n \n \n@@ -46,8 +47,8 @@ pub fn add_parameter(p: i32) {}\n pub fn add_return_type() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn add_return_type() -> () {}\n \n \n@@ -57,8 +58,9 @@ pub fn add_return_type() -> () {}\n pub fn type_of_parameter(p: i32) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter(p: i64) {}\n \n \n@@ -68,8 +70,9 @@ pub fn type_of_parameter(p: i64) {}\n pub fn type_of_parameter_ref(p: &i32) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn type_of_parameter_ref(p: &mut i32) {}\n \n \n@@ -79,8 +82,9 @@ pub fn type_of_parameter_ref(p: &mut i32) {}\n pub fn order_of_parameters(p1: i32, p2: i64) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn order_of_parameters(p2: i64, p1: i32) {}\n \n \n@@ -90,8 +94,9 @@ pub fn order_of_parameters(p2: i64, p1: i32) {}\n pub fn make_unsafe() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub unsafe fn make_unsafe() {}\n \n \n@@ -101,9 +106,9 @@ pub unsafe fn make_unsafe() {}\n pub fn make_extern() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n-pub extern fn make_extern() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub extern \"C\" fn make_extern() {}\n \n \n // Extern C Extern Rust-Intrinsic ----------------------------------------------\n@@ -112,8 +117,8 @@ pub extern fn make_extern() {}\n pub extern \"C\" fn make_intrinsic() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub extern \"rust-intrinsic\" fn make_intrinsic() {}\n \n \n@@ -123,8 +128,9 @@ pub extern \"rust-intrinsic\" fn make_intrinsic() {}\n pub fn type_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn type_parameter<T>() {}\n \n \n@@ -134,8 +140,8 @@ pub fn type_parameter<T>() {}\n pub fn lifetime_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, GenericsOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, GenericsOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_parameter<'a>() {}\n \n \n@@ -145,8 +151,8 @@ pub fn lifetime_parameter<'a>() {}\n pub fn trait_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, PredicatesOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn trait_bound<T: Eq>() {}\n \n \n@@ -156,8 +162,8 @@ pub fn trait_bound<T: Eq>() {}\n pub fn builtin_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, PredicatesOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn builtin_bound<T: Send>() {}\n \n \n@@ -167,8 +173,9 @@ pub fn builtin_bound<T: Send>() {}\n pub fn lifetime_bound<'a, T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn lifetime_bound<'a, T: 'a>() {}\n \n \n@@ -178,8 +185,8 @@ pub fn lifetime_bound<'a, T: 'a>() {}\n pub fn second_trait_bound<T: Eq>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, PredicatesOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn second_trait_bound<T: Eq + Clone>() {}\n \n \n@@ -189,8 +196,8 @@ pub fn second_trait_bound<T: Eq + Clone>() {}\n pub fn second_builtin_bound<T: Send>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, PredicatesOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn second_builtin_bound<T: Send + Sized>() {}\n \n \n@@ -200,8 +207,9 @@ pub fn second_builtin_bound<T: Send + Sized>() {}\n pub fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n \n \n@@ -211,8 +219,8 @@ pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n pub fn inline() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n #[inline]\n pub fn inline() {}\n \n@@ -224,8 +232,8 @@ pub fn inline() {}\n pub fn inline_never() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n #[inline(never)]\n pub fn inline_never() {}\n \n@@ -236,8 +244,8 @@ pub fn inline_never() {}\n pub fn no_mangle() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n #[no_mangle]\n pub fn no_mangle() {}\n \n@@ -248,9 +256,9 @@ pub fn no_mangle() {}\n pub fn linkage() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n-#[linkage=\"weak_odr\"]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+#[linkage = \"weak_odr\"]\n pub fn linkage() {}\n \n \n@@ -262,8 +270,8 @@ pub fn return_impl_trait() -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, TypeckTables, FnSignature\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn return_impl_trait() -> impl Clone {\n     0\n }\n@@ -277,8 +285,8 @@ pub fn change_return_impl_trait() -> impl Clone {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody\")]\n-#[rustc_clean(cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n pub fn change_return_impl_trait() -> impl Copy {\n     0u32\n }\n@@ -295,8 +303,9 @@ pub mod change_return_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as ReturnType;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n-    #[rustc_clean(cfg=\"cfail3\")]\n+    #[rustc_clean(cfg = \"cfail2\",\n+                  except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_return_type() -> ReturnType {\n         ReturnType {}\n     }\n@@ -311,8 +320,9 @@ pub mod change_parameter_type_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as ParameterType;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n-    #[rustc_clean(cfg=\"cfail3\")]\n+    #[rustc_clean(cfg = \"cfail2\",\n+                  except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_parameter_type(p: ParameterType) {}\n }\n \n@@ -328,8 +338,8 @@ pub mod change_trait_bound_indirectly {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, PredicatesOfItem\")]\n-    #[rustc_clean(cfg=\"cfail3\")]\n+    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n     pub fn indirect_trait_bound<T: Trait>(p: T) {}\n }\n \n@@ -342,7 +352,11 @@ pub mod change_trait_bound_indirectly_in_where_clause {\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir, HirBody, PredicatesOfItem\")]\n-    #[rustc_clean(cfg=\"cfail3\")]\n-    pub fn indirect_trait_bound_where<T>(p: T) where T: Trait {}\n+    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n+    pub fn indirect_trait_bound_where<T>(p: T)\n+    where\n+        T: Trait,\n+    {\n+    }\n }"}]}