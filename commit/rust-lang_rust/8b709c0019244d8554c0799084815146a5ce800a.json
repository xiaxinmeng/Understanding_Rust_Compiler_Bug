{"sha": "8b709c0019244d8554c0799084815146a5ce800a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNzA5YzAwMTkyNDRkODU1NGMwNzk5MDg0ODE1MTQ2YTVjZTgwMGE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-10-12T02:17:27Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-10-12T02:20:42Z"}, "message": "Add `attr_fn_like_width` to the width heuristics\n\nIt is a bit larger than than `fn_call_width` which we used previously, so fewer attributes get reformatted.\n\nCloses #2929", "tree": {"sha": "81abbadc82dcb760669f3a8ac9cf9a541e2b6e7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81abbadc82dcb760669f3a8ac9cf9a541e2b6e7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b709c0019244d8554c0799084815146a5ce800a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b709c0019244d8554c0799084815146a5ce800a", "html_url": "https://github.com/rust-lang/rust/commit/8b709c0019244d8554c0799084815146a5ce800a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b709c0019244d8554c0799084815146a5ce800a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b82949b36e7fb66162e31066d3d6f6174f680b5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b82949b36e7fb66162e31066d3d6f6174f680b5b", "html_url": "https://github.com/rust-lang/rust/commit/b82949b36e7fb66162e31066d3d6f6174f680b5b"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "033f3767ecdcf3e50ac9fdb092f94b5c6d2c8473", "filename": "src/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b709c0019244d8554c0799084815146a5ce800a/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b709c0019244d8554c0799084815146a5ce800a/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=8b709c0019244d8554c0799084815146a5ce800a", "patch": "@@ -224,7 +224,7 @@ impl Rewrite for ast::MetaItem {\n                     // 1 = \"]\"\n                     shape.sub_width(1)?,\n                     self.span,\n-                    context.config.width_heuristics().fn_call_width,\n+                    context.config.width_heuristics().attr_fn_like_width,\n                     Some(if has_trailing_comma {\n                         SeparatorTactic::Always\n                     } else {"}, {"sha": "27a4db70feac1d2ba1c625789761e4d0c2a9c03e", "filename": "src/config/options.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b709c0019244d8554c0799084815146a5ce800a/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b709c0019244d8554c0799084815146a5ce800a/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=8b709c0019244d8554c0799084815146a5ce800a", "patch": "@@ -316,6 +316,9 @@ pub struct WidthHeuristics {\n     // Maximum width of the args of a function call before falling back\n     // to vertical formatting.\n     pub fn_call_width: usize,\n+    // Maximum width of the args of a function-like attributes before falling\n+    // back to vertical formatting.\n+    pub attr_fn_like_width: usize,\n     // Maximum width in the body of a struct lit before falling back to\n     // vertical formatting.\n     pub struct_lit_width: usize,\n@@ -337,6 +340,7 @@ impl WidthHeuristics {\n     pub fn null() -> WidthHeuristics {\n         WidthHeuristics {\n             fn_call_width: usize::max_value(),\n+            attr_fn_like_width: usize::max_value(),\n             struct_lit_width: 0,\n             struct_variant_width: 0,\n             array_width: usize::max_value(),\n@@ -348,6 +352,7 @@ impl WidthHeuristics {\n     pub fn set(max_width: usize) -> WidthHeuristics {\n         WidthHeuristics {\n             fn_call_width: max_width,\n+            attr_fn_like_width: max_width,\n             struct_lit_width: max_width,\n             struct_variant_width: max_width,\n             array_width: max_width,\n@@ -368,6 +373,7 @@ impl WidthHeuristics {\n         };\n         WidthHeuristics {\n             fn_call_width: (60.0 * max_width_ratio).round() as usize,\n+            attr_fn_like_width: (70.0 * max_width_ratio).round() as usize,\n             struct_lit_width: (18.0 * max_width_ratio).round() as usize,\n             struct_variant_width: (35.0 * max_width_ratio).round() as usize,\n             array_width: (60.0 * max_width_ratio).round() as usize,"}, {"sha": "c348b5752e2a8ab902cf65172d92610a1ddbe997", "filename": "tests/source/enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b709c0019244d8554c0799084815146a5ce800a/tests%2Fsource%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b709c0019244d8554c0799084815146a5ce800a/tests%2Fsource%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fenum.rs?ref=8b709c0019244d8554c0799084815146a5ce800a", "patch": "@@ -189,7 +189,7 @@ pub enum QlError {\n     // (from, to)\n     #[fail(display = \"Translation error: from {} to {}\", 0, 1)] TranslationError(String, String),\n     // (kind, input, expected)\n-    #[fail(display = \"Could not find {}: Found: {}, expected: {:?}\", 0, 1, 2)] ResolveError(&'static str, String, Option<String>),\n+    #[fail(display = \"aaaaaaaaaaaaCould not find {}: Found: {}, expected: {:?}\", 0, 1, 2)] ResolveError(&'static str, String, Option<String>),\n }\n \n // #2594"}, {"sha": "dda58c4b5b0798dee54f6196143dd5e0dba1dd07", "filename": "tests/target/enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b709c0019244d8554c0799084815146a5ce800a/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b709c0019244d8554c0799084815146a5ce800a/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=8b709c0019244d8554c0799084815146a5ce800a", "patch": "@@ -255,7 +255,7 @@ pub enum QlError {\n     TranslationError(String, String),\n     // (kind, input, expected)\n     #[fail(\n-        display = \"Could not find {}: Found: {}, expected: {:?}\",\n+        display = \"aaaaaaaaaaaaCould not find {}: Found: {}, expected: {:?}\",\n         0, 1, 2\n     )]\n     ResolveError(&'static str, String, Option<String>),"}]}