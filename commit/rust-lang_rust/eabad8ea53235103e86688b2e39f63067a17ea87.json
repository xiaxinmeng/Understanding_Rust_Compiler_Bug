{"sha": "eabad8ea53235103e86688b2e39f63067a17ea87", "node_id": "C_kwDOAAsO6NoAKGVhYmFkOGVhNTMyMzUxMDNlODY2ODhiMmUzOWY2MzA2N2ExN2VhODc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-12T06:43:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-12T06:43:42Z"}, "message": "Auto merge of #9149 - kyoto7250:issue_9013, r=Jarcho\n\nchange applicability type to MaybeIncorrect in `explicit_counter_loop`\n\nclose #9013\n\nThis PR changes  applicability type to `MaybeIncorrect`,  because the suggestion is not `MachineApplicable`.\n\nchangelog: change applicability type to MaybeIncorrect in `explicit_counter_loop`", "tree": {"sha": "cf3fd0077181747429ae2f27c5d68b785eb27f85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf3fd0077181747429ae2f27c5d68b785eb27f85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eabad8ea53235103e86688b2e39f63067a17ea87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eabad8ea53235103e86688b2e39f63067a17ea87", "html_url": "https://github.com/rust-lang/rust/commit/eabad8ea53235103e86688b2e39f63067a17ea87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eabad8ea53235103e86688b2e39f63067a17ea87/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3206fb4eb172600ff666c6409d112f2cfa0f88f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3206fb4eb172600ff666c6409d112f2cfa0f88f9", "html_url": "https://github.com/rust-lang/rust/commit/3206fb4eb172600ff666c6409d112f2cfa0f88f9"}, {"sha": "134d0dee41846d1c0867fa3745b8de25b52ae7af", "url": "https://api.github.com/repos/rust-lang/rust/commits/134d0dee41846d1c0867fa3745b8de25b52ae7af", "html_url": "https://github.com/rust-lang/rust/commit/134d0dee41846d1c0867fa3745b8de25b52ae7af"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "8e3ab26a947f1c9413e1e06233696a2c075448c3", "filename": "clippy_lints/src/loops/explicit_counter_loop.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eabad8ea53235103e86688b2e39f63067a17ea87/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eabad8ea53235103e86688b2e39f63067a17ea87/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs?ref=eabad8ea53235103e86688b2e39f63067a17ea87", "patch": "@@ -34,15 +34,16 @@ pub(super) fn check<'tcx>(\n                 if let Some((name, ty, initializer)) = initialize_visitor.get_result();\n                 if is_integer_const(cx, initializer, 0);\n                 then {\n-                    let mut applicability = Applicability::MachineApplicable;\n+                    let mut applicability = Applicability::MaybeIncorrect;\n+                    let span = expr.span.with_hi(arg.span.hi());\n \n                     let int_name = match ty.map(Ty::kind) {\n                         // usize or inferred\n                         Some(ty::Uint(UintTy::Usize)) | None => {\n                             span_lint_and_sugg(\n                                 cx,\n                                 EXPLICIT_COUNTER_LOOP,\n-                                expr.span.with_hi(arg.span.hi()),\n+                                span,\n                                 &format!(\"the variable `{}` is used as a loop counter\", name),\n                                 \"consider using\",\n                                 format!(\n@@ -63,11 +64,11 @@ pub(super) fn check<'tcx>(\n                     span_lint_and_then(\n                         cx,\n                         EXPLICIT_COUNTER_LOOP,\n-                        expr.span.with_hi(arg.span.hi()),\n+                        span,\n                         &format!(\"the variable `{}` is used as a loop counter\", name),\n                         |diag| {\n                             diag.span_suggestion(\n-                                expr.span.with_hi(arg.span.hi()),\n+                                span,\n                                 \"consider using\",\n                                 format!(\n                                     \"for ({}, {}) in (0_{}..).zip({})\","}]}