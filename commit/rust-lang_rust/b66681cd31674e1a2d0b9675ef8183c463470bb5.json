{"sha": "b66681cd31674e1a2d0b9675ef8183c463470bb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NjY4MWNkMzE2NzRlMWEyZDBiOTY3NWVmODE4M2M0NjM0NzBiYjU=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-11-25T00:38:06Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-12-19T07:31:34Z"}, "message": "Allow args to work without rt initialization", "tree": {"sha": "478c2accf952f3b9908428f57bc4557ce0f2b564", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/478c2accf952f3b9908428f57bc4557ce0f2b564"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b66681cd31674e1a2d0b9675ef8183c463470bb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b66681cd31674e1a2d0b9675ef8183c463470bb5", "html_url": "https://github.com/rust-lang/rust/commit/b66681cd31674e1a2d0b9675ef8183c463470bb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b66681cd31674e1a2d0b9675ef8183c463470bb5/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74d07699938b846703ab552f52cd5c32f751900f", "url": "https://api.github.com/repos/rust-lang/rust/commits/74d07699938b846703ab552f52cd5c32f751900f", "html_url": "https://github.com/rust-lang/rust/commit/74d07699938b846703ab552f52cd5c32f751900f"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "f46d9ab7c7e4bbf635926206232881b91035eeb4", "filename": "src/libstd/os.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b66681cd31674e1a2d0b9675ef8183c463470bb5/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66681cd31674e1a2d0b9675ef8183c463470bb5/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=b66681cd31674e1a2d0b9675ef8183c463470bb5", "patch": "@@ -702,11 +702,7 @@ fn real_args_as_bytes() -> Vec<Vec<u8>> {\n           target_os = \"dragonfly\"))]\n fn real_args_as_bytes() -> Vec<Vec<u8>> {\n     use rt;\n-\n-    match rt::args::clone() {\n-        Some(args) => args,\n-        None => panic!(\"process arguments not initialized\")\n-    }\n+    rt::args::clone().unwrap_or_else(|| vec![])\n }\n \n #[cfg(not(windows))]"}, {"sha": "93c956fc3c54a22c3c800a5a53bdbf9181cf7df4", "filename": "src/libstd/rt/args.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b66681cd31674e1a2d0b9675ef8183c463470bb5/src%2Flibstd%2Frt%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b66681cd31674e1a2d0b9675ef8183c463470bb5/src%2Flibstd%2Frt%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fargs.rs?ref=b66681cd31674e1a2d0b9675ef8183c463470bb5", "patch": "@@ -62,37 +62,33 @@ mod imp {\n     }\n \n     pub unsafe fn cleanup() {\n-        rtassert!(take().is_some());\n+        take();\n         LOCK.destroy();\n     }\n \n     pub fn take() -> Option<Vec<Vec<u8>>> {\n-        with_lock(|| unsafe {\n+        let guard = LOCK.lock();\n+        unsafe {\n             let ptr = get_global_ptr();\n             let val = mem::replace(&mut *ptr, None);\n             val.as_ref().map(|s: &Box<Vec<Vec<u8>>>| (**s).clone())\n-        })\n+        }\n     }\n \n     pub fn put(args: Vec<Vec<u8>>) {\n-        with_lock(|| unsafe {\n+        let guard = LOCK.lock();\n+        unsafe {\n             let ptr = get_global_ptr();\n             rtassert!((*ptr).is_none());\n             (*ptr) = Some(box args.clone());\n-        })\n+        }\n     }\n \n     pub fn clone() -> Option<Vec<Vec<u8>>> {\n-        with_lock(|| unsafe {\n+        let guard = LOCK.lock();\n+        unsafe {\n             let ptr = get_global_ptr();\n             (*ptr).as_ref().map(|s: &Box<Vec<Vec<u8>>>| (**s).clone())\n-        })\n-    }\n-\n-    fn with_lock<T, F>(f: F) -> T where F: FnOnce() -> T {\n-        unsafe {\n-            let _guard = LOCK.lock();\n-            f()\n         }\n     }\n "}]}