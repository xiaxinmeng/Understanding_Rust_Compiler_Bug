{"sha": "a8f47dc7aa237b074f718c446b040e86ac633b17", "node_id": "C_kwDOAAsO6NoAKGE4ZjQ3ZGM3YWEyMzdiMDc0ZjcxOGM0NDZiMDQwZTg2YWM2MzNiMTc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-07T10:05:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-07T10:05:03Z"}, "message": "Rollup merge of #91503 - estebank:call-fn-span, r=michaelwoerister\n\nTweak \"call this function\" suggestion to have smaller span", "tree": {"sha": "54452d6b1c1c74e783e9618f5afad41edf950055", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54452d6b1c1c74e783e9618f5afad41edf950055"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8f47dc7aa237b074f718c446b040e86ac633b17", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrzHQCRBK7hj4Ov3rIwAA/1MIAEpCQxfvmOetmW0pwHGelGHd\nQaWXQVcNzQ7kIQh1Vm5Mii62ZpabkbMkuYGzPlaF8mnSfxwp7G5LiohtlqzWgfDx\nIipq5ZoqoXkanUzcLx4F+PqgXmUX5qDotx4K2VuuiEEH6XLSEBLuUtHT07BfzJWf\npRJjFaX4vWzrrKSMoVK9FPDMQ82iN3lkddw1p3kCLlHyii8lca2POaoeurDAZTDO\nZ0jo1vNX3WYuDduEmU5wrw8CkLagA3MMqd1jBUnIIyuMjYluxIPkugT+nMvspu1R\noUhrGrIC2ht0jzFgDvy6XIuOgL0RY2knr9jMA+2HCFd3qYME0EGO6guhFp2bNKY=\n=nUxD\n-----END PGP SIGNATURE-----\n", "payload": "tree 54452d6b1c1c74e783e9618f5afad41edf950055\nparent dd929ae4c56bbffb465ad12e70c9f40adfffe57f\nparent 93564c317ba34b9059197cc4985d32efae147730\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638871503 +0100\ncommitter GitHub <noreply@github.com> 1638871503 +0100\n\nRollup merge of #91503 - estebank:call-fn-span, r=michaelwoerister\n\nTweak \"call this function\" suggestion to have smaller span\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f47dc7aa237b074f718c446b040e86ac633b17", "html_url": "https://github.com/rust-lang/rust/commit/a8f47dc7aa237b074f718c446b040e86ac633b17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8f47dc7aa237b074f718c446b040e86ac633b17/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd929ae4c56bbffb465ad12e70c9f40adfffe57f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd929ae4c56bbffb465ad12e70c9f40adfffe57f", "html_url": "https://github.com/rust-lang/rust/commit/dd929ae4c56bbffb465ad12e70c9f40adfffe57f"}, {"sha": "93564c317ba34b9059197cc4985d32efae147730", "url": "https://api.github.com/repos/rust-lang/rust/commits/93564c317ba34b9059197cc4985d32efae147730", "html_url": "https://github.com/rust-lang/rust/commit/93564c317ba34b9059197cc4985d32efae147730"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "4956321eb5cd49ed26e897e3ef0839c76b03305b", "filename": "compiler/rustc_typeck/src/check/op.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a8f47dc7aa237b074f718c446b040e86ac633b17/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f47dc7aa237b074f718c446b040e86ac633b17/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs?ref=a8f47dc7aa237b074f718c446b040e86ac633b17", "patch": "@@ -492,7 +492,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     ) -> bool /* did we suggest to call a function because of missing parentheses? */ {\n         err.span_label(span, ty.to_string());\n         if let FnDef(def_id, _) = *ty.kind() {\n-            let source_map = self.tcx.sess.source_map();\n             if !self.tcx.has_typeck_results(def_id) {\n                 return false;\n             }\n@@ -517,20 +516,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 .lookup_op_method(fn_sig.output(), &[other_ty], Op::Binary(op, is_assign))\n                 .is_ok()\n             {\n-                if let Ok(snippet) = source_map.span_to_snippet(span) {\n-                    let (variable_snippet, applicability) = if !fn_sig.inputs().is_empty() {\n-                        (format!(\"{}( /* arguments */ )\", snippet), Applicability::HasPlaceholders)\n-                    } else {\n-                        (format!(\"{}()\", snippet), Applicability::MaybeIncorrect)\n-                    };\n+                let (variable_snippet, applicability) = if !fn_sig.inputs().is_empty() {\n+                    (\"( /* arguments */ )\".to_string(), Applicability::HasPlaceholders)\n+                } else {\n+                    (\"()\".to_string(), Applicability::MaybeIncorrect)\n+                };\n \n-                    err.span_suggestion(\n-                        span,\n-                        \"you might have forgotten to call this function\",\n-                        variable_snippet,\n-                        applicability,\n-                    );\n-                }\n+                err.span_suggestion_verbose(\n+                    span.shrink_to_hi(),\n+                    \"you might have forgotten to call this function\",\n+                    variable_snippet,\n+                    applicability,\n+                );\n                 return true;\n             }\n         }"}, {"sha": "096440225b99907c57b1f73d35043c2198a12e3e", "filename": "src/test/ui/fn/fn-compare-mismatch.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8f47dc7aa237b074f718c446b040e86ac633b17/src%2Ftest%2Fui%2Ffn%2Ffn-compare-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8f47dc7aa237b074f718c446b040e86ac633b17/src%2Ftest%2Fui%2Ffn%2Ffn-compare-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn%2Ffn-compare-mismatch.stderr?ref=a8f47dc7aa237b074f718c446b040e86ac633b17", "patch": "@@ -9,11 +9,11 @@ LL |     let x = f == g;\n help: you might have forgotten to call this function\n    |\n LL |     let x = f() == g;\n-   |             ~~~\n+   |              ++\n help: you might have forgotten to call this function\n    |\n LL |     let x = f == g();\n-   |                  ~~~\n+   |                   ++\n \n error[E0308]: mismatched types\n   --> $DIR/fn-compare-mismatch.rs:4:18"}, {"sha": "47fd9fdb65472970bebb8eca51ef764796b9f287", "filename": "src/test/ui/issues/issue-59488.stderr", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a8f47dc7aa237b074f718c446b040e86ac633b17/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8f47dc7aa237b074f718c446b040e86ac633b17/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr?ref=a8f47dc7aa237b074f718c446b040e86ac633b17", "patch": "@@ -5,7 +5,11 @@ LL |     foo > 12;\n    |     --- ^ -- {integer}\n    |     |\n    |     fn() -> i32 {foo}\n-   |     help: you might have forgotten to call this function: `foo()`\n+   |\n+help: you might have forgotten to call this function\n+   |\n+LL |     foo() > 12;\n+   |        ++\n \n error[E0308]: mismatched types\n   --> $DIR/issue-59488.rs:14:11\n@@ -23,7 +27,11 @@ LL |     bar > 13;\n    |     --- ^ -- {integer}\n    |     |\n    |     fn(i64) -> i64 {bar}\n-   |     help: you might have forgotten to call this function: `bar( /* arguments */ )`\n+   |\n+help: you might have forgotten to call this function\n+   |\n+LL |     bar( /* arguments */ ) > 13;\n+   |        +++++++++++++++++++\n \n error[E0308]: mismatched types\n   --> $DIR/issue-59488.rs:18:11\n@@ -45,11 +53,11 @@ LL |     foo > foo;\n help: you might have forgotten to call this function\n    |\n LL |     foo() > foo;\n-   |     ~~~~~\n+   |        ++\n help: you might have forgotten to call this function\n    |\n LL |     foo > foo();\n-   |           ~~~~~\n+   |              ++\n \n error[E0369]: binary operation `>` cannot be applied to type `fn() -> i32 {foo}`\n   --> $DIR/issue-59488.rs:25:9"}, {"sha": "4c11f3544948e694becba10e8d13aa8c0c0699f1", "filename": "src/test/ui/issues/issue-70724-add_type_neq_err_label-unwrap.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a8f47dc7aa237b074f718c446b040e86ac633b17/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8f47dc7aa237b074f718c446b040e86ac633b17/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr?ref=a8f47dc7aa237b074f718c446b040e86ac633b17", "patch": "@@ -6,9 +6,12 @@ LL |     assert_eq!(a, 0);\n    |     |\n    |     fn() -> i32 {a}\n    |     {integer}\n-   |     help: you might have forgotten to call this function: `*left_val()`\n    |\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: you might have forgotten to call this function\n+   |\n+LL |                 if !(*left_val() == *right_val) {\n+   |                               ++\n \n error[E0308]: mismatched types\n   --> $DIR/issue-70724-add_type_neq_err_label-unwrap.rs:6:5"}]}