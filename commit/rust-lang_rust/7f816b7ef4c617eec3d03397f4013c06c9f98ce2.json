{"sha": "7f816b7ef4c617eec3d03397f4013c06c9f98ce2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmODE2YjdlZjRjNjE3ZWVjM2QwMzM5N2Y0MDEzYzA2YzlmOThjZTI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T22:26:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:36Z"}, "message": "librustc: De-`@mut` the `idstack` in constant checking", "tree": {"sha": "4448944b4220da057f71e9181a037d307ef57a4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4448944b4220da057f71e9181a037d307ef57a4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f816b7ef4c617eec3d03397f4013c06c9f98ce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f816b7ef4c617eec3d03397f4013c06c9f98ce2", "html_url": "https://github.com/rust-lang/rust/commit/7f816b7ef4c617eec3d03397f4013c06c9f98ce2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f816b7ef4c617eec3d03397f4013c06c9f98ce2/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c703643ad0bb1c70c249dc16b5a32e253815be1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c703643ad0bb1c70c249dc16b5a32e253815be1", "html_url": "https://github.com/rust-lang/rust/commit/8c703643ad0bb1c70c249dc16b5a32e253815be1"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "3922d338f3e900e30b88d60e7eaa7fdc826b7a09", "filename": "src/librustc/middle/check_const.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7f816b7ef4c617eec3d03397f4013c06c9f98ce2/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f816b7ef4c617eec3d03397f4013c06c9f98ce2/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_const.rs?ref=7f816b7ef4c617eec3d03397f4013c06c9f98ce2", "patch": "@@ -15,6 +15,7 @@ use middle::ty;\n use middle::typeck;\n use util::ppaux;\n \n+use std::cell::RefCell;\n use syntax::ast::*;\n use syntax::codemap;\n use syntax::{ast_util, ast_map};\n@@ -215,7 +216,7 @@ struct env {\n     sess: Session,\n     ast_map: ast_map::map,\n     def_map: resolve::DefMap,\n-    idstack: @mut ~[NodeId]\n+    idstack: @RefCell<~[NodeId]>,\n }\n \n struct CheckItemRecursionVisitor {\n@@ -233,7 +234,7 @@ pub fn check_item_recursion(sess: Session,\n         sess: sess,\n         ast_map: ast_map,\n         def_map: def_map,\n-        idstack: @mut ~[]\n+        idstack: @RefCell::new(~[]),\n     };\n \n     let mut visitor = CheckItemRecursionVisitor { env: env };\n@@ -242,12 +243,19 @@ pub fn check_item_recursion(sess: Session,\n \n impl Visitor<()> for CheckItemRecursionVisitor {\n     fn visit_item(&mut self, it: @item, _: ()) {\n-        if self.env.idstack.iter().any(|x| x == &(it.id)) {\n-            self.env.sess.span_fatal(self.env.root_it.span, \"recursive constant\");\n+        {\n+            let mut idstack = self.env.idstack.borrow_mut();\n+            if idstack.get().iter().any(|x| x == &(it.id)) {\n+                self.env.sess.span_fatal(self.env.root_it.span,\n+                                         \"recursive constant\");\n+            }\n+            idstack.get().push(it.id);\n         }\n-        self.env.idstack.push(it.id);\n         visit::walk_item(self, it, ());\n-        self.env.idstack.pop();\n+        {\n+            let mut idstack = self.env.idstack.borrow_mut();\n+            idstack.get().pop();\n+        }\n     }\n \n     fn visit_expr(&mut self, e: @Expr, _: ()) {"}]}