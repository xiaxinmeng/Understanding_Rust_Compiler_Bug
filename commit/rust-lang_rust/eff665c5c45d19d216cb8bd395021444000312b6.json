{"sha": "eff665c5c45d19d216cb8bd395021444000312b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZjY2NWM1YzQ1ZDE5ZDIxNmNiOGJkMzk1MDIxNDQ0MDAwMzEyYjY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-02-26T22:57:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-26T22:57:58Z"}, "message": "Merge pull request #1334 from gypsydave5/fix_1255\n\nFix #1255 - incorrect removal of `default` on associated types", "tree": {"sha": "2ecadefa0aac58c2d4a0810a19fef4ca687328b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ecadefa0aac58c2d4a0810a19fef4ca687328b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eff665c5c45d19d216cb8bd395021444000312b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eff665c5c45d19d216cb8bd395021444000312b6", "html_url": "https://github.com/rust-lang/rust/commit/eff665c5c45d19d216cb8bd395021444000312b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eff665c5c45d19d216cb8bd395021444000312b6/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30ecc5d7856e4af4251461fcef3fe95661149ba8", "url": "https://api.github.com/repos/rust-lang/rust/commits/30ecc5d7856e4af4251461fcef3fe95661149ba8", "html_url": "https://github.com/rust-lang/rust/commit/30ecc5d7856e4af4251461fcef3fe95661149ba8"}, {"sha": "371ffa4710e4babfe0f87d4929f15a8f0cb93ebb", "url": "https://api.github.com/repos/rust-lang/rust/commits/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb", "html_url": "https://github.com/rust-lang/rust/commit/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "457c6749520f8706240aa4d5f96f3b4adf3ec411", "filename": "src/items.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/eff665c5c45d19d216cb8bd395021444000312b6/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff665c5c45d19d216cb8bd395021444000312b6/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=eff665c5c45d19d216cb8bd395021444000312b6", "patch": "@@ -1240,11 +1240,11 @@ pub fn rewrite_associated_type(ident: ast::Ident,\n     let type_bounds_str = if let Some(ty_param_bounds) = ty_param_bounds_opt {\n         let bounds: &[_] = ty_param_bounds;\n         let bound_str = try_opt!(bounds.iter()\n-                                     .map(|ty_bound| {\n-            ty_bound.rewrite(context, Shape::legacy(context.config.max_width, indent))\n-        })\n-                                     .intersperse(Some(\" + \".to_string()))\n-                                     .collect::<Option<String>>());\n+            .map(|ty_bound| {\n+                ty_bound.rewrite(context, Shape::legacy(context.config.max_width, indent))\n+            })\n+            .intersperse(Some(\" + \".to_string()))\n+            .collect::<Option<String>>());\n         if bounds.len() > 0 {\n             format!(\": {}\", bound_str)\n         } else {\n@@ -1267,6 +1267,22 @@ pub fn rewrite_associated_type(ident: ast::Ident,\n     }\n }\n \n+pub fn rewrite_associated_impl_type(ident: ast::Ident,\n+                                    defaultness: ast::Defaultness,\n+                                    ty_opt: Option<&ptr::P<ast::Ty>>,\n+                                    ty_param_bounds_opt: Option<&ast::TyParamBounds>,\n+                                    context: &RewriteContext,\n+                                    indent: Indent)\n+                                    -> Option<String> {\n+    let result =\n+        try_opt!(rewrite_associated_type(ident, ty_opt, ty_param_bounds_opt, context, indent));\n+\n+    match defaultness {\n+        ast::Defaultness::Default => Some(format!(\"default {}\", result)),\n+        _ => Some(result),\n+    }\n+}\n+\n impl Rewrite for ast::FunctionRetTy {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         match *self {"}, {"sha": "6cd00ffc1f49b25023c391b3ed1a1c840b1b173c", "filename": "src/visitor.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/eff665c5c45d19d216cb8bd395021444000312b6/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff665c5c45d19d216cb8bd395021444000312b6/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=eff665c5c45d19d216cb8bd395021444000312b6", "patch": "@@ -21,7 +21,8 @@ use config::Config;\n use rewrite::{Rewrite, RewriteContext};\n use comment::rewrite_comment;\n use macros::{rewrite_macro, MacroPosition};\n-use items::{rewrite_static, rewrite_associated_type, rewrite_type_alias, format_impl, format_trait};\n+use items::{rewrite_static, rewrite_associated_type, rewrite_associated_impl_type,\n+            rewrite_type_alias, format_impl, format_trait};\n \n fn is_use_item(item: &ast::Item) -> bool {\n     match item.node {\n@@ -411,11 +412,12 @@ impl<'a> FmtVisitor<'a> {\n                 self.push_rewrite(ii.span, rewrite);\n             }\n             ast::ImplItemKind::Type(ref ty) => {\n-                let rewrite = rewrite_associated_type(ii.ident,\n-                                                      Some(ty),\n-                                                      None,\n-                                                      &self.get_context(),\n-                                                      self.block_indent);\n+                let rewrite = rewrite_associated_impl_type(ii.ident,\n+                                                           ii.defaultness,\n+                                                           Some(ty),\n+                                                           None,\n+                                                           &self.get_context(),\n+                                                           self.block_indent);\n                 self.push_rewrite(ii.span, rewrite);\n             }\n             ast::ImplItemKind::Macro(ref mac) => {"}, {"sha": "2d4633844a9feb5102449026aa1f1dd4e8624a96", "filename": "tests/target/issue-1255.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eff665c5c45d19d216cb8bd395021444000312b6/tests%2Ftarget%2Fissue-1255.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff665c5c45d19d216cb8bd395021444000312b6/tests%2Ftarget%2Fissue-1255.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1255.rs?ref=eff665c5c45d19d216cb8bd395021444000312b6", "patch": "@@ -0,0 +1,10 @@\n+// Test for issue #1255\n+// Default annotation incorrectly removed on associated types\n+#![feature(specialization)]\n+\n+trait Trait {\n+    type Type;\n+}\n+impl<T> Trait for T {\n+    default type Type = u64; // 'default' should not be removed\n+}"}]}