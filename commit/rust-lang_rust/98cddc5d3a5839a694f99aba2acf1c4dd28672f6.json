{"sha": "98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4Y2RkYzVkM2E1ODM5YTY5NGY5OWFiYTJhY2YxYzRkZDI4NjcyZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T13:31:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-18T13:31:18Z"}, "message": "Auto merge of #7241 - flip1995:warn-deny-warnings, r=camsteffen\n\nDeny warnings in every main sub-crate\n\nPointed out by `@xFrednet` in https://github.com/rust-lang/rust-clippy/pull/7229#issuecomment-842978909\n\nThis enables the same (rustc) lints in every main sub-crate:\n\n- `clippy`\n- `clippy_lints`\n- `clippy_utils`\n- `clippy_dev`\n\nIn addition it forwards the `deny-warnings` feature to those sub-crates, so we don't miss warnings that then become a problem during sync. (I wanted to fix that before, but forgot about it, so thanks for pointing it out `@xFrednet!)`\n\nchangelog: none", "tree": {"sha": "74464921113da8510297ee0539c8802d4e579d84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74464921113da8510297ee0539c8802d4e579d84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "html_url": "https://github.com/rust-lang/rust/commit/98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7", "html_url": "https://github.com/rust-lang/rust/commit/213b8d9a2b88e0db15bcdf2fd696afa6b7db12c7"}, {"sha": "9586ddb0461c9696f372502371ab0f3710192f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/9586ddb0461c9696f372502371ab0f3710192f34", "html_url": "https://github.com/rust-lang/rust/commit/9586ddb0461c9696f372502371ab0f3710192f34"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "848476a9d05847b616f819117763dfb7bb02fe3d", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "patch": "@@ -49,7 +49,7 @@ rustc-workspace-hack = \"1.0.0\"\n rustc_tools_util = { version = \"0.2.0\", path = \"rustc_tools_util\" }\n \n [features]\n-deny-warnings = []\n+deny-warnings = [\"clippy_lints/deny-warnings\"]\n integration = [\"tempfile\"]\n internal-lints = [\"clippy_lints/internal-lints\"]\n metadata-collector-lint = [\"internal-lints\", \"clippy_lints/metadata-collector-lint\"]"}, {"sha": "69f42aca8b6900a092fc09e73aff9b23eea1e817", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "patch": "@@ -1,5 +1,7 @@\n-#![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![feature(once_cell)]\n+#![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n+// warn on lints, that are included in `rust-lang/rust`s bootstrap\n+#![warn(rust_2018_idioms, unused_lifetimes)]\n \n use itertools::Itertools;\n use regex::Regex;"}, {"sha": "7040c257c831b0e49ec02e340ecdb4878876d8a1", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "patch": "@@ -1,4 +1,6 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n+// warn on lints, that are included in `rust-lang/rust`s bootstrap\n+#![warn(rust_2018_idioms, unused_lifetimes)]\n \n use clap::{App, Arg, ArgMatches, SubCommand};\n use clippy_dev::{bless, fmt, ide_setup, new_lint, serve, stderr_length_check, update_lints};"}, {"sha": "48f2972ec58d1887c166ebdd6f1e6d043c3adb74", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "patch": "@@ -30,7 +30,7 @@ rustc-semver = \"1.1.0\"\n url = { version = \"2.1.0\", features = [\"serde\"] }\n \n [features]\n-deny-warnings = []\n+deny-warnings = [\"clippy_utils/deny-warnings\"]\n # build clippy with internal lints enabled, off by default\n internal-lints = [\"clippy_utils/internal-lints\"]\n metadata-collector-lint = [\"serde_json\", \"clippy_utils/metadata-collector-lint\"]"}, {"sha": "93ed3b1840068416459a731f682cde21b01472a0", "filename": "clippy_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2FCargo.toml?ref=98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "patch": "@@ -14,6 +14,7 @@ unicode-normalization = \"0.1\"\n rustc-semver=\"1.1.0\"\n \n [features]\n+deny-warnings = []\n internal-lints = []\n metadata-collector-lint = []\n "}, {"sha": "0ae0450cbe030bf574e2865aaba914499d4dc960", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "patch": "@@ -3,7 +3,14 @@\n #![feature(iter_zip)]\n #![feature(rustc_private)]\n #![recursion_limit = \"512\"]\n+#![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![allow(clippy::missing_errors_doc, clippy::missing_panics_doc, clippy::must_use_candidate)]\n+// warn on the same lints as `clippy_lints`\n+#![warn(trivial_casts, trivial_numeric_casts)]\n+// warn on lints, that are included in `rust-lang/rust`s bootstrap\n+#![warn(rust_2018_idioms, unused_lifetimes)]\n+// warn on rustc internal lints\n+#![warn(rustc::internal)]\n \n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)\n@@ -13,7 +20,6 @@ extern crate rustc_attr;\n extern crate rustc_data_structures;\n extern crate rustc_errors;\n extern crate rustc_hir;\n-extern crate rustc_hir_pretty;\n extern crate rustc_infer;\n extern crate rustc_lexer;\n extern crate rustc_lint;\n@@ -1326,7 +1332,7 @@ pub fn if_sequence<'tcx>(mut expr: &'tcx Expr<'tcx>) -> (Vec<&'tcx Expr<'tcx>>,\n }\n \n /// Checks if the given function kind is an async function.\n-pub fn is_async_fn(kind: FnKind) -> bool {\n+pub fn is_async_fn(kind: FnKind<'_>) -> bool {\n     matches!(kind, FnKind::ItemFn(_, _, header, _) if header.asyncness == IsAsync::Async)\n }\n "}, {"sha": "c36e215f184adc2eac06e3962f1b8efa3a771df1", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98cddc5d3a5839a694f99aba2acf1c4dd28672f6/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=98cddc5d3a5839a694f99aba2acf1c4dd28672f6", "patch": "@@ -2,9 +2,8 @@\n \n #![allow(clippy::module_name_repetitions)]\n \n-use std::collections::HashMap;\n-\n use rustc_ast::ast::Mutability;\n+use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{TyKind, Unsafety};\n@@ -184,14 +183,14 @@ pub fn is_must_use_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n /// Checks if `Ty` is normalizable. This function is useful\n /// to avoid crashes on `layout_of`.\n pub fn is_normalizable<'tcx>(cx: &LateContext<'tcx>, param_env: ty::ParamEnv<'tcx>, ty: Ty<'tcx>) -> bool {\n-    is_normalizable_helper(cx, param_env, ty, &mut HashMap::new())\n+    is_normalizable_helper(cx, param_env, ty, &mut FxHashMap::default())\n }\n \n fn is_normalizable_helper<'tcx>(\n     cx: &LateContext<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     ty: Ty<'tcx>,\n-    cache: &mut HashMap<Ty<'tcx>, bool>,\n+    cache: &mut FxHashMap<Ty<'tcx>, bool>,\n ) -> bool {\n     if let Some(&cached_result) = cache.get(ty) {\n         return cached_result;"}]}