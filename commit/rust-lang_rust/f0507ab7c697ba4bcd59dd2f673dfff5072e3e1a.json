{"sha": "f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNTA3YWI3YzY5N2JhNGJjZDU5ZGQyZjY3M2RmZmY1MDcyZTNlMWE=", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-04-18T18:18:48Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-04-18T18:18:48Z"}, "message": "hir_ty: cleanups and extend infinitely_recursive_macro_type  test", "tree": {"sha": "c7d98c642ea0ead859ed143b02bd9916da4fabf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7d98c642ea0ead859ed143b02bd9916da4fabf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a", "html_url": "https://github.com/rust-lang/rust/commit/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ed2fd233b569d01169fc888f30c358dd289d260", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed2fd233b569d01169fc888f30c358dd289d260", "html_url": "https://github.com/rust-lang/rust/commit/6ed2fd233b569d01169fc888f30c358dd289d260"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "7fd46becdb944c624193a16cdf6a488af2ba61f3", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a", "patch": "@@ -296,9 +296,11 @@ impl<'a> TyLoweringContext<'a> {\n                 }\n             }\n             TypeRef::Macro(macro_call) => {\n-                let (expander, recursion_start) = match self.expander.borrow_mut() {\n-                    expander if expander.is_some() => (Some(expander), false),\n-                    mut expander => {\n+                let (expander, recursion_start) = {\n+                    let mut expander = self.expander.borrow_mut();\n+                    if expander.is_some() {\n+                        (Some(expander), false)\n+                    } else {\n                         if let Some(module_id) = self.resolver.module() {\n                             *expander = Some(Expander::new(\n                                 self.db.upcast(),"}, {"sha": "6588aa46c1e073a0b0a3a68dc79660c16f2f26f7", "filename": "crates/hir_ty/src/tests/macros.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=f0507ab7c697ba4bcd59dd2f673dfff5072e3e1a", "patch": "@@ -1248,24 +1248,28 @@ fn macros_in_type_generics() {\n fn infinitely_recursive_macro_type() {\n     check_infer(\n         r#\"\n-        struct Bar<T>(T);\n+        struct Bar<T, X>(T, X);\n \n         macro_rules! Foo {\n             () => { Foo!() }\n         }\n \n+        macro_rules! U32 {\n+            () => { u32 }\n+        }\n+\n         type A = Foo!();\n-        type B = Bar<Foo!()>;\n+        type B = Bar<Foo!(), U32!()>;\n \n         fn main() {\n             let a: A;\n             let b: B;\n         }\n         \"#,\n         expect![[r#\"\n-            112..143 '{     ...: B; }': ()\n-            122..123 'a': {unknown}\n-            136..137 'b': Bar<{unknown}>\n+            166..197 '{     ...: B; }': ()\n+            176..177 'a': {unknown}\n+            190..191 'b': Bar<{unknown}, u32>\n         \"#]],\n     );\n }"}]}