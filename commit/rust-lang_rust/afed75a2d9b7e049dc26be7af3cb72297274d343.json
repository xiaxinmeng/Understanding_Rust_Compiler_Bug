{"sha": "afed75a2d9b7e049dc26be7af3cb72297274d343", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZWQ3NWEyZDliN2UwNDlkYzI2YmU3YWYzY2I3MjI5NzI3NGQzNDM=", "commit": {"author": {"name": "Lee Bousfield", "email": "ljbousfield@gmail.com", "date": "2017-07-08T14:28:20Z"}, "committer": {"name": "Lee Bousfield", "email": "ljbousfield@gmail.com", "date": "2017-07-08T14:28:56Z"}, "message": "Lower alignment limit down to 2^31 - 1 (from LLVM)", "tree": {"sha": "2b3e04c0d249821ae26a710621b515297f46a615", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b3e04c0d249821ae26a710621b515297f46a615"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afed75a2d9b7e049dc26be7af3cb72297274d343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afed75a2d9b7e049dc26be7af3cb72297274d343", "html_url": "https://github.com/rust-lang/rust/commit/afed75a2d9b7e049dc26be7af3cb72297274d343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afed75a2d9b7e049dc26be7af3cb72297274d343/comments", "author": {"login": "PlasmaPower", "id": 6006498, "node_id": "MDQ6VXNlcjYwMDY0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6006498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PlasmaPower", "html_url": "https://github.com/PlasmaPower", "followers_url": "https://api.github.com/users/PlasmaPower/followers", "following_url": "https://api.github.com/users/PlasmaPower/following{/other_user}", "gists_url": "https://api.github.com/users/PlasmaPower/gists{/gist_id}", "starred_url": "https://api.github.com/users/PlasmaPower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PlasmaPower/subscriptions", "organizations_url": "https://api.github.com/users/PlasmaPower/orgs", "repos_url": "https://api.github.com/users/PlasmaPower/repos", "events_url": "https://api.github.com/users/PlasmaPower/events{/privacy}", "received_events_url": "https://api.github.com/users/PlasmaPower/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PlasmaPower", "id": 6006498, "node_id": "MDQ6VXNlcjYwMDY0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/6006498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PlasmaPower", "html_url": "https://github.com/PlasmaPower", "followers_url": "https://api.github.com/users/PlasmaPower/followers", "following_url": "https://api.github.com/users/PlasmaPower/following{/other_user}", "gists_url": "https://api.github.com/users/PlasmaPower/gists{/gist_id}", "starred_url": "https://api.github.com/users/PlasmaPower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PlasmaPower/subscriptions", "organizations_url": "https://api.github.com/users/PlasmaPower/orgs", "repos_url": "https://api.github.com/users/PlasmaPower/repos", "events_url": "https://api.github.com/users/PlasmaPower/events{/privacy}", "received_events_url": "https://api.github.com/users/PlasmaPower/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a10213f297be8e231f55fd6db843674a8f512140", "url": "https://api.github.com/repos/rust-lang/rust/commits/a10213f297be8e231f55fd6db843674a8f512140", "html_url": "https://github.com/rust-lang/rust/commit/a10213f297be8e231f55fd6db843674a8f512140"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "6fb26f0dd6dbf85eb4ed5ead4dc917be7e5c20d3", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/afed75a2d9b7e049dc26be7af3cb72297274d343/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afed75a2d9b7e049dc26be7af3cb72297274d343/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=afed75a2d9b7e049dc26be7af3cb72297274d343", "patch": "@@ -285,7 +285,9 @@ impl Size {\n }\n \n /// Alignment of a type in bytes, both ABI-mandated and preferred.\n-/// Each field is a power of two.\n+/// Each field is a power of two, giving the alignment a maximum\n+/// value of 2^(2^8 - 1), which is limited by LLVM to a i32, with\n+/// a maximum capacity of 2^31 - 1 or 2147483647.\n #[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]\n pub struct Align {\n     abi: u8,\n@@ -298,7 +300,7 @@ impl Align {\n     }\n \n     pub fn from_bytes(abi: u64, pref: u64) -> Result<Align, String> {\n-        let pack = |align: u64| {\n+        let log2 = |align: u64| {\n             // Treat an alignment of 0 bytes like 1-byte alignment.\n             if align == 0 {\n                 return Ok(0);\n@@ -318,8 +320,8 @@ impl Align {\n         };\n \n         Ok(Align {\n-            abi: pack(abi)?,\n-            pref: pack(pref)?,\n+            abi: log2(abi)?,\n+            pref: log2(pref)?,\n         })\n     }\n "}, {"sha": "a247fe7f8a56aa3dffd435ab0df1a30340561d4d", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/afed75a2d9b7e049dc26be7af3cb72297274d343/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afed75a2d9b7e049dc26be7af3cb72297274d343/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=afed75a2d9b7e049dc26be7af3cb72297274d343", "patch": "@@ -974,11 +974,11 @@ pub fn find_repr_attrs(diagnostic: &Handler, attr: &Attribute) -> Vec<ReprAttr>\n                         let mut align_error = None;\n                         if let ast::LitKind::Int(align, ast::LitIntType::Unsuffixed) = value.node {\n                             if align.is_power_of_two() {\n-                                // rustc::ty::layout::Align restricts align to <= 2147483648\n-                                if align <= 2147483648 {\n+                                // rustc::ty::layout::Align restricts align to <= 2147483647\n+                                if align <= 2147483647 {\n                                     acc.push(ReprAlign(align as u32));\n                                 } else {\n-                                    align_error = Some(\"larger than 2147483648\");\n+                                    align_error = Some(\"larger than 2147483647\");\n                                 }\n                             } else {\n                                 align_error = Some(\"not a power of two\");"}, {"sha": "bc9cf065e5a0a27171308012db1de708bbcbf78a", "filename": "src/test/compile-fail/repr-align.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afed75a2d9b7e049dc26be7af3cb72297274d343/src%2Ftest%2Fcompile-fail%2Frepr-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afed75a2d9b7e049dc26be7af3cb72297274d343/src%2Ftest%2Fcompile-fail%2Frepr-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepr-align.rs?ref=afed75a2d9b7e049dc26be7af3cb72297274d343", "patch": "@@ -17,7 +17,7 @@ struct A(i32);\n #[repr(align(15))] //~ ERROR: invalid `repr(align)` attribute: not a power of two\n struct B(i32);\n \n-#[repr(align(4294967296))] //~ ERROR: invalid `repr(align)` attribute: larger than 2147483648\n+#[repr(align(4294967296))] //~ ERROR: invalid `repr(align)` attribute: larger than 2147483647\n struct C(i32);\n \n fn main() {}"}]}