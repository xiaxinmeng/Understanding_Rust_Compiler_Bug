{"sha": "53fa985fc4eac40dfef71d344b62bd243499dff1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZmE5ODVmYzRlYWM0MGRmZWY3MWQzNDRiNjJiZDI0MzQ5OWRmZjE=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-01-17T03:37:53Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-01-17T03:37:53Z"}, "message": "Update for changes in rustc.", "tree": {"sha": "b3a4f2ef9c32d0a53a85b2d95d44b97920fcc6d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3a4f2ef9c32d0a53a85b2d95d44b97920fcc6d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53fa985fc4eac40dfef71d344b62bd243499dff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53fa985fc4eac40dfef71d344b62bd243499dff1", "html_url": "https://github.com/rust-lang/rust/commit/53fa985fc4eac40dfef71d344b62bd243499dff1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53fa985fc4eac40dfef71d344b62bd243499dff1/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac2bf50f9d853a56ff1a236d456619b2d3b65b64", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac2bf50f9d853a56ff1a236d456619b2d3b65b64", "html_url": "https://github.com/rust-lang/rust/commit/ac2bf50f9d853a56ff1a236d456619b2d3b65b64"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "79a1af50ad1f22276455df3637e04568c6ddc2b6", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/53fa985fc4eac40dfef71d344b62bd243499dff1/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fa985fc4eac40dfef71d344b62bd243499dff1/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=53fa985fc4eac40dfef71d344b62bd243499dff1", "patch": "@@ -1,5 +1,4 @@\n use byteorder::{ReadBytesExt, WriteBytesExt, LittleEndian, BigEndian};\n-use std::collections::Bound::{Included, Excluded};\n use std::collections::{btree_map, BTreeMap, HashMap, HashSet, VecDeque};\n use std::{fmt, iter, ptr, mem, io};\n \n@@ -710,7 +709,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n     {\n         let start = ptr.offset.saturating_sub(self.pointer_size() - 1);\n         let end = ptr.offset + size;\n-        Ok(self.get(ptr.alloc_id)?.relocations.range(Included(&start), Excluded(&end)))\n+        Ok(self.get(ptr.alloc_id)?.relocations.range(start..end))\n     }\n \n     fn clear_relocations(&mut self, ptr: Pointer, size: u64) -> EvalResult<'tcx, ()> {"}]}