{"sha": "aa8adba8fbd408d94af21fbf768ffab95f7866ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhOGFkYmE4ZmJkNDA4ZDk0YWYyMWZiZjc2OGZmYWI5NWY3ODY2ZWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-06T22:44:23Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:43:28Z"}, "message": "simplify parse_literal_maybe_minus", "tree": {"sha": "b71e89aebbd07c68394b6834adec88aaaf46a466", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b71e89aebbd07c68394b6834adec88aaaf46a466"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa8adba8fbd408d94af21fbf768ffab95f7866ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa8adba8fbd408d94af21fbf768ffab95f7866ef", "html_url": "https://github.com/rust-lang/rust/commit/aa8adba8fbd408d94af21fbf768ffab95f7866ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa8adba8fbd408d94af21fbf768ffab95f7866ef/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f647c11121bcaff1a9006b7d04cd52331f1be869", "url": "https://api.github.com/repos/rust-lang/rust/commits/f647c11121bcaff1a9006b7d04cd52331f1be869", "html_url": "https://github.com/rust-lang/rust/commit/f647c11121bcaff1a9006b7d04cd52331f1be869"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "982a7e8db54f204e901a56632facc038892f462a", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aa8adba8fbd408d94af21fbf768ffab95f7866ef/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa8adba8fbd408d94af21fbf768ffab95f7866ef/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=aa8adba8fbd408d94af21fbf768ffab95f7866ef", "patch": "@@ -1280,17 +1280,13 @@ impl<'a> Parser<'a> {\n     pub fn parse_literal_maybe_minus(&mut self) -> PResult<'a, P<Expr>> {\n         maybe_whole_expr!(self);\n \n-        let minus_lo = self.token.span;\n-        let minus_present = self.eat(&token::BinOp(token::Minus));\n         let lo = self.token.span;\n-        let literal = self.parse_lit()?;\n-        let hi = self.prev_span;\n-        let expr = self.mk_expr(lo.to(hi), ExprKind::Lit(literal), AttrVec::new());\n+        let minus_present = self.eat(&token::BinOp(token::Minus));\n+        let lit = self.parse_lit()?;\n+        let expr = self.mk_expr(lit.span, ExprKind::Lit(lit), AttrVec::new());\n \n         if minus_present {\n-            let minus_hi = self.prev_span;\n-            let unary = self.mk_unary(UnOp::Neg, expr);\n-            Ok(self.mk_expr(minus_lo.to(minus_hi), unary, AttrVec::new()))\n+            Ok(self.mk_expr(lo.to(self.prev_span), self.mk_unary(UnOp::Neg, expr), AttrVec::new()))\n         } else {\n             Ok(expr)\n         }"}]}