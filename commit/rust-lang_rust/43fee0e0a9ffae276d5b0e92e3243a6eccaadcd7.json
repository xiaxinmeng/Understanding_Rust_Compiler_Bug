{"sha": "43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "node_id": "C_kwDOAAsO6NoAKDQzZmVlMGUwYTlmZmFlMjc2ZDViMGU5MmUzMjQzYTZlY2NhYWRjZDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-06T22:12:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-06T22:12:06Z"}, "message": "Rollup merge of #90646 - BoxyUwU:funky_ice, r=estebank\n\ntype error go brrrrrrrr\n\nFixes #90444\n\nwhen we relate something like:\n`fn(fn((), (), u32))` with `fn(fn((), (), ()))`\nwe relate the inner fn ptrs:\n`fn((), (), u32)` with `fn((), (), ())`\nyielding a `TypeError::ArgumentSorts(_, 2)` which we then use as the `TypeError` for the `fn(fn(..))` which later causes the ICE as the `2` does not correspond to any input or output types in `fn(_)`\n\nr? `@estebank`", "tree": {"sha": "614121464f688d48a598f65332476c0b00c7890b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/614121464f688d48a598f65332476c0b00c7890b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhhv22CRBK7hj4Ov3rIwAAtrYIAAYsO/F+3907PVBmXbJ21Gnr\nxtsyipshXVu8SB25opajLEhk2a3hBeVKN7H3DeFeno88nNjvv48NqRJvow5+ghLC\nCT5egSMK0LaMHo1jj+rhdl0YDhi8DOFHT9KXZgxGwpvW6UnbqwsHwVAle8D+BffD\n9c6/3jjKmqBxgDjFgwSlmh977VuKS4HOQaU48onUJeXQqqjre2JJDnpVU68TsxL1\nkYS4d0Klje02EOCdxi/jSq6m3bE65YK7Tag+PCfru9nL4vxdllWDBgYWWlhm5x5J\nSKntmB/E+MxO/srTzpOwuLcP2dwGPZ4fACkZ53Xh22LyeCOkXAw1hnAd6zMuUhs=\n=q7tP\n-----END PGP SIGNATURE-----\n", "payload": "tree 614121464f688d48a598f65332476c0b00c7890b\nparent 5f0e6ca6a3bd38538fd6d14b21b5a6011a8c7baa\nparent abb9a9853b094eeeea5ea784d188e842a17c5dc8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1636236726 +0100\ncommitter GitHub <noreply@github.com> 1636236726 +0100\n\nRollup merge of #90646 - BoxyUwU:funky_ice, r=estebank\n\ntype error go brrrrrrrr\n\nFixes #90444\n\nwhen we relate something like:\n`fn(fn((), (), u32))` with `fn(fn((), (), ()))`\nwe relate the inner fn ptrs:\n`fn((), (), u32)` with `fn((), (), ())`\nyielding a `TypeError::ArgumentSorts(_, 2)` which we then use as the `TypeError` for the `fn(fn(..))` which later causes the ICE as the `2` does not correspond to any input or output types in `fn(_)`\n\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "html_url": "https://github.com/rust-lang/rust/commit/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f0e6ca6a3bd38538fd6d14b21b5a6011a8c7baa", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f0e6ca6a3bd38538fd6d14b21b5a6011a8c7baa", "html_url": "https://github.com/rust-lang/rust/commit/5f0e6ca6a3bd38538fd6d14b21b5a6011a8c7baa"}, {"sha": "abb9a9853b094eeeea5ea784d188e842a17c5dc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/abb9a9853b094eeeea5ea784d188e842a17c5dc8", "html_url": "https://github.com/rust-lang/rust/commit/abb9a9853b094eeeea5ea784d188e842a17c5dc8"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "c7d8bec506f6b80af01ed5e80d120ea8879ac7bb", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "patch": "@@ -187,8 +187,12 @@ impl<'tcx> Relate<'tcx> for ty::FnSig<'tcx> {\n             })\n             .enumerate()\n             .map(|(i, r)| match r {\n-                Err(TypeError::Sorts(exp_found)) => Err(TypeError::ArgumentSorts(exp_found, i)),\n-                Err(TypeError::Mutability) => Err(TypeError::ArgumentMutability(i)),\n+                Err(TypeError::Sorts(exp_found) | TypeError::ArgumentSorts(exp_found, _)) => {\n+                    Err(TypeError::ArgumentSorts(exp_found, i))\n+                }\n+                Err(TypeError::Mutability | TypeError::ArgumentMutability(_)) => {\n+                    Err(TypeError::ArgumentMutability(i))\n+                }\n                 r => r,\n             });\n         Ok(ty::FnSig {"}, {"sha": "7c262dcf723390fbe58ef980b862666e536d2986", "filename": "compiler/rustc_typeck/src/check/compare_method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "patch": "@@ -453,6 +453,7 @@ fn check_region_bounds_on_impl_item<'tcx>(\n     Ok(())\n }\n \n+#[instrument(level = \"debug\", skip(infcx))]\n fn extract_spans_for_error_reporting<'a, 'tcx>(\n     infcx: &infer::InferCtxt<'a, 'tcx>,\n     terr: &TypeError<'_>,"}, {"sha": "6c287d9a707de2e456c51c4506609febb26c22c9", "filename": "src/test/ui/compare-method/issue-90444.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/src%2Ftest%2Fui%2Fcompare-method%2Fissue-90444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/src%2Ftest%2Fui%2Fcompare-method%2Fissue-90444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fissue-90444.rs?ref=43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "patch": "@@ -0,0 +1,17 @@\n+pub struct A;\n+impl From<fn((), (), &())> for A {\n+    fn from(_: fn((), (), &mut ())) -> Self {\n+        //~^ error: method `from` has an incompatible type for trait\n+        loop {}\n+    }\n+}\n+\n+pub struct B;\n+impl From<fn((), (), u32)> for B {\n+    fn from(_: fn((), (), u64)) -> Self {\n+        //~^ error: method `from` has an incompatible type for trait\n+        loop {}\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "84bbec0623fd8f56c72d45b5b6e75941bef8915a", "filename": "src/test/ui/compare-method/issue-90444.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/src%2Ftest%2Fui%2Fcompare-method%2Fissue-90444.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7/src%2Ftest%2Fui%2Fcompare-method%2Fissue-90444.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fissue-90444.stderr?ref=43fee0e0a9ffae276d5b0e92e3243a6eccaadcd7", "patch": "@@ -0,0 +1,27 @@\n+error[E0053]: method `from` has an incompatible type for trait\n+  --> $DIR/issue-90444.rs:3:16\n+   |\n+LL |     fn from(_: fn((), (), &mut ())) -> Self {\n+   |                ^^^^^^^^^^^^^^^^^^^\n+   |                |\n+   |                types differ in mutability\n+   |                help: change the parameter type to match the trait: `for<'r> fn((), (), &'r ())`\n+   |\n+   = note: expected fn pointer `fn(for<'r> fn((), (), &'r ())) -> A`\n+              found fn pointer `fn(for<'r> fn((), (), &'r mut ())) -> A`\n+\n+error[E0053]: method `from` has an incompatible type for trait\n+  --> $DIR/issue-90444.rs:11:16\n+   |\n+LL |     fn from(_: fn((), (), u64)) -> Self {\n+   |                ^^^^^^^^^^^^^^^\n+   |                |\n+   |                expected `u32`, found `u64`\n+   |                help: change the parameter type to match the trait: `fn((), (), u32)`\n+   |\n+   = note: expected fn pointer `fn(fn((), (), u32)) -> B`\n+              found fn pointer `fn(fn((), (), u64)) -> B`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0053`."}]}