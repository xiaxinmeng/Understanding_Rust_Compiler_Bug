{"sha": "462f86da9ac5e6c129ea75226767bb08a6eb84d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MmY4NmRhOWFjNWU2YzEyOWVhNzUyMjY3NjdiYjA4YTZlYjg0ZDI=", "commit": {"author": {"name": "Griffin Smith", "email": "root@gws.fyi", "date": "2021-01-15T17:20:54Z"}, "committer": {"name": "Griffin Smith", "email": "root@gws.fyi", "date": "2021-04-07T14:29:04Z"}, "message": "Stabilize cmp_min_max_by\n\nI would like to propose cmp::{min_by, min_by_key, max_by, max_by_key}\nfor stabilization.\n\nThese are relatively simple and seemingly uncontroversial functions and\nhave been unchanged in unstable for a while now.", "tree": {"sha": "4aa6b9752e6ead416157ea9fdd014e564a28e74e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aa6b9752e6ead416157ea9fdd014e564a28e74e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/462f86da9ac5e6c129ea75226767bb08a6eb84d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/462f86da9ac5e6c129ea75226767bb08a6eb84d2", "html_url": "https://github.com/rust-lang/rust/commit/462f86da9ac5e6c129ea75226767bb08a6eb84d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/462f86da9ac5e6c129ea75226767bb08a6eb84d2/comments", "author": {"login": "glittershark", "id": 1481027, "node_id": "MDQ6VXNlcjE0ODEwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1481027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glittershark", "html_url": "https://github.com/glittershark", "followers_url": "https://api.github.com/users/glittershark/followers", "following_url": "https://api.github.com/users/glittershark/following{/other_user}", "gists_url": "https://api.github.com/users/glittershark/gists{/gist_id}", "starred_url": "https://api.github.com/users/glittershark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glittershark/subscriptions", "organizations_url": "https://api.github.com/users/glittershark/orgs", "repos_url": "https://api.github.com/users/glittershark/repos", "events_url": "https://api.github.com/users/glittershark/events{/privacy}", "received_events_url": "https://api.github.com/users/glittershark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glittershark", "id": 1481027, "node_id": "MDQ6VXNlcjE0ODEwMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1481027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glittershark", "html_url": "https://github.com/glittershark", "followers_url": "https://api.github.com/users/glittershark/followers", "following_url": "https://api.github.com/users/glittershark/following{/other_user}", "gists_url": "https://api.github.com/users/glittershark/gists{/gist_id}", "starred_url": "https://api.github.com/users/glittershark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glittershark/subscriptions", "organizations_url": "https://api.github.com/users/glittershark/orgs", "repos_url": "https://api.github.com/users/glittershark/repos", "events_url": "https://api.github.com/users/glittershark/events{/privacy}", "received_events_url": "https://api.github.com/users/glittershark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76aca6659a0eb3f5696541d0be518530cabdd963", "url": "https://api.github.com/repos/rust-lang/rust/commits/76aca6659a0eb3f5696541d0be518530cabdd963", "html_url": "https://github.com/rust-lang/rust/commit/76aca6659a0eb3f5696541d0be518530cabdd963"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "d5e2e9d9b68319304f2c3fb4b7d251811195f15e", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/462f86da9ac5e6c129ea75226767bb08a6eb84d2/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/462f86da9ac5e6c129ea75226767bb08a6eb84d2/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=462f86da9ac5e6c129ea75226767bb08a6eb84d2", "patch": "@@ -29,7 +29,6 @@\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(cmp_min_max_by)]\n #![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(core_intrinsics)]"}, {"sha": "21534e3b8deadc1da312edb73f1cca144a650d19", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/462f86da9ac5e6c129ea75226767bb08a6eb84d2/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/462f86da9ac5e6c129ea75226767bb08a6eb84d2/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=462f86da9ac5e6c129ea75226767bb08a6eb84d2", "patch": "@@ -1053,16 +1053,14 @@ pub fn min<T: Ord>(v1: T, v2: T) -> T {\n /// # Examples\n ///\n /// ```\n-/// #![feature(cmp_min_max_by)]\n-///\n /// use std::cmp;\n ///\n /// assert_eq!(cmp::min_by(-2, 1, |x: &i32, y: &i32| x.abs().cmp(&y.abs())), 1);\n /// assert_eq!(cmp::min_by(-2, 2, |x: &i32, y: &i32| x.abs().cmp(&y.abs())), -2);\n /// ```\n #[inline]\n #[must_use]\n-#[unstable(feature = \"cmp_min_max_by\", issue = \"64460\")]\n+#[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n pub fn min_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n     match compare(&v1, &v2) {\n         Ordering::Less | Ordering::Equal => v1,\n@@ -1077,16 +1075,14 @@ pub fn min_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n /// # Examples\n ///\n /// ```\n-/// #![feature(cmp_min_max_by)]\n-///\n /// use std::cmp;\n ///\n /// assert_eq!(cmp::min_by_key(-2, 1, |x: &i32| x.abs()), 1);\n /// assert_eq!(cmp::min_by_key(-2, 2, |x: &i32| x.abs()), -2);\n /// ```\n #[inline]\n #[must_use]\n-#[unstable(feature = \"cmp_min_max_by\", issue = \"64460\")]\n+#[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n pub fn min_by_key<T, F: FnMut(&T) -> K, K: Ord>(v1: T, v2: T, mut f: F) -> T {\n     min_by(v1, v2, |v1, v2| f(v1).cmp(&f(v2)))\n }\n@@ -1119,16 +1115,14 @@ pub fn max<T: Ord>(v1: T, v2: T) -> T {\n /// # Examples\n ///\n /// ```\n-/// #![feature(cmp_min_max_by)]\n-///\n /// use std::cmp;\n ///\n /// assert_eq!(cmp::max_by(-2, 1, |x: &i32, y: &i32| x.abs().cmp(&y.abs())), -2);\n /// assert_eq!(cmp::max_by(-2, 2, |x: &i32, y: &i32| x.abs().cmp(&y.abs())), 2);\n /// ```\n #[inline]\n #[must_use]\n-#[unstable(feature = \"cmp_min_max_by\", issue = \"64460\")]\n+#[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n pub fn max_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n     match compare(&v1, &v2) {\n         Ordering::Less | Ordering::Equal => v2,\n@@ -1143,16 +1137,14 @@ pub fn max_by<T, F: FnOnce(&T, &T) -> Ordering>(v1: T, v2: T, compare: F) -> T {\n /// # Examples\n ///\n /// ```\n-/// #![feature(cmp_min_max_by)]\n-///\n /// use std::cmp;\n ///\n /// assert_eq!(cmp::max_by_key(-2, 1, |x: &i32| x.abs()), -2);\n /// assert_eq!(cmp::max_by_key(-2, 2, |x: &i32| x.abs()), 2);\n /// ```\n #[inline]\n #[must_use]\n-#[unstable(feature = \"cmp_min_max_by\", issue = \"64460\")]\n+#[stable(feature = \"cmp_min_max_by\", since = \"1.53.0\")]\n pub fn max_by_key<T, F: FnMut(&T) -> K, K: Ord>(v1: T, v2: T, mut f: F) -> T {\n     max_by(v1, v2, |v1, v2| f(v1).cmp(&f(v2)))\n }"}, {"sha": "6b668c80d3854a228a2f5d88514b943889678e7d", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/462f86da9ac5e6c129ea75226767bb08a6eb84d2/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/462f86da9ac5e6c129ea75226767bb08a6eb84d2/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=462f86da9ac5e6c129ea75226767bb08a6eb84d2", "patch": "@@ -50,7 +50,6 @@\n #![feature(iter_partition_in_place)]\n #![feature(iter_is_partitioned)]\n #![feature(iter_order_by)]\n-#![feature(cmp_min_max_by)]\n #![feature(iter_map_while)]\n #![feature(const_mut_refs)]\n #![feature(const_pin)]"}]}