{"sha": "4eb67547498dd338800a4ebefd0a0e907752d04b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYjY3NTQ3NDk4ZGQzMzg4MDBhNGViZWZkMGEwZTkwNzc1MmQwNGI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-21T16:02:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-21T16:02:04Z"}, "message": "Sync from rust 3e826bb11228508fbe749e594038d6727208aa94", "tree": {"sha": "d937981df38508009328f608bc967d4a9110b570", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d937981df38508009328f608bc967d4a9110b570"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4eb67547498dd338800a4ebefd0a0e907752d04b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb67547498dd338800a4ebefd0a0e907752d04b", "html_url": "https://github.com/rust-lang/rust/commit/4eb67547498dd338800a4ebefd0a0e907752d04b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4eb67547498dd338800a4ebefd0a0e907752d04b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecba16f29616265b81b415921f69e5b104085123", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecba16f29616265b81b415921f69e5b104085123", "html_url": "https://github.com/rust-lang/rust/commit/ecba16f29616265b81b415921f69e5b104085123"}, {"sha": "702676bfff241bc1b8766f11f6dd42b356ebc071", "url": "https://api.github.com/repos/rust-lang/rust/commits/702676bfff241bc1b8766f11f6dd42b356ebc071", "html_url": "https://github.com/rust-lang/rust/commit/702676bfff241bc1b8766f11f6dd42b356ebc071"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "a7fcbb2f1e4b2da9b870c932acf5b1fb39f913b3", "filename": "src/driver/aot.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4eb67547498dd338800a4ebefd0a0e907752d04b/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb67547498dd338800a4ebefd0a0e907752d04b/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=4eb67547498dd338800a4ebefd0a0e907752d04b", "patch": "@@ -139,8 +139,8 @@ fn module_codegen(\n             MonoItem::Static(def_id) => {\n                 crate::constant::codegen_static(&mut cx.constants_cx, def_id)\n             }\n-            MonoItem::GlobalAsm(hir_id) => {\n-                let item = cx.tcx.hir().expect_item(hir_id);\n+            MonoItem::GlobalAsm(item_id) => {\n+                let item = cx.tcx.hir().item(item_id);\n                 if let rustc_hir::ItemKind::GlobalAsm(rustc_hir::GlobalAsm { asm }) = item.kind {\n                     cx.global_asm.push_str(&*asm.as_str());\n                     cx.global_asm.push_str(\"\\n\\n\");\n@@ -433,9 +433,5 @@ fn determine_cgu_reuse<'tcx>(tcx: TyCtxt<'tcx>, cgu: &CodegenUnit<'tcx>) -> CguR\n         cgu.name()\n     );\n \n-    if tcx.dep_graph.try_mark_green(tcx, &dep_node).is_some() {\n-        CguReuse::PreLto\n-    } else {\n-        CguReuse::No\n-    }\n+    if tcx.try_mark_green(&dep_node) { CguReuse::PreLto } else { CguReuse::No }\n }"}, {"sha": "7857e83714399680c4e8cf236c422f38c2aef30c", "filename": "src/driver/jit.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4eb67547498dd338800a4ebefd0a0e907752d04b/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb67547498dd338800a4ebefd0a0e907752d04b/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=4eb67547498dd338800a4ebefd0a0e907752d04b", "patch": "@@ -76,10 +76,9 @@ pub(super) fn run_jit(tcx: TyCtxt<'_>, backend_config: BackendConfig) -> ! {\n                 MonoItem::Static(def_id) => {\n                     crate::constant::codegen_static(&mut cx.constants_cx, def_id);\n                 }\n-                MonoItem::GlobalAsm(hir_id) => {\n-                    let item = cx.tcx.hir().expect_item(hir_id);\n-                    tcx.sess\n-                        .span_fatal(item.span, \"Global asm is not supported in JIT mode\");\n+                MonoItem::GlobalAsm(item_id) => {\n+                    let item = cx.tcx.hir().item(item_id);\n+                    tcx.sess.span_fatal(item.span, \"Global asm is not supported in JIT mode\");\n                 }\n             }\n         }"}]}