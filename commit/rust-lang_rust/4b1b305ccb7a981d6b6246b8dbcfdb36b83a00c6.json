{"sha": "4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6", "node_id": "C_kwDOAAsO6NoAKDRiMWIzMDVjY2I3YTk4MWQ2YjYyNDZiOGRiY2ZkYjM2YjgzYTAwYzY", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-01T09:11:58Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-01T09:11:58Z"}, "message": "Use MaybeUninit for clock_gettime's timespec.", "tree": {"sha": "37d5bf157158d4dedeb99b448a7e18bc38398005", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37d5bf157158d4dedeb99b448a7e18bc38398005"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6", "html_url": "https://github.com/rust-lang/rust/commit/4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "321690c8278a5cf038adc50d1642c8e158de38a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/321690c8278a5cf038adc50d1642c8e158de38a7", "html_url": "https://github.com/rust-lang/rust/commit/321690c8278a5cf038adc50d1642c8e158de38a7"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "498c94d0cdcba2bad36d2f203ccf3580d0704dd0", "filename": "library/std/src/sys/unix/time.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ftime.rs?ref=4b1b305ccb7a981d6b6246b8dbcfdb36b83a00c6", "patch": "@@ -266,6 +266,7 @@ mod inner {\n #[cfg(not(any(target_os = \"macos\", target_os = \"ios\")))]\n mod inner {\n     use crate::fmt;\n+    use crate::mem::MaybeUninit;\n     use crate::sys::cvt;\n     use crate::time::Duration;\n \n@@ -350,9 +351,9 @@ mod inner {\n \n     impl Timespec {\n         pub fn now(clock: clock_t) -> Timespec {\n-            let mut t = Timespec { t: libc::timespec { tv_sec: 0, tv_nsec: 0 } };\n-            cvt(unsafe { libc::clock_gettime(clock, &mut t.t) }).unwrap();\n-            t\n+            let mut t = MaybeUninit::uninit();\n+            cvt(unsafe { libc::clock_gettime(clock, t.as_mut_ptr()) }).unwrap();\n+            Timespec { t: unsafe { t.assume_init() } }\n         }\n     }\n }"}]}