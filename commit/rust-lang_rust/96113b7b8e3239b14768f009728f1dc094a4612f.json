{"sha": "96113b7b8e3239b14768f009728f1dc094a4612f", "node_id": "C_kwDOAAsO6NoAKDk2MTEzYjdiOGUzMjM5YjE0NzY4ZjAwOTcyOGYxZGMwOTRhNDYxMmY", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-05-10T09:27:28Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-05-11T12:13:10Z"}, "message": "Remove prelude fallback path for Rust <1.52.0\n\nWe've already removed non-sysroot proc macro server, which effectively\nremoved support for Rust <1.64.0, so this removal of fallback path\nshouldn't be problem at this point.", "tree": {"sha": "46d4fcbe461f57a77e189e3d831530031b030651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46d4fcbe461f57a77e189e3d831530031b030651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96113b7b8e3239b14768f009728f1dc094a4612f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmRc29YACgkQ4laYqTBY\nYXGTZxAAqBjyHb6pLo/7kGZVJcMZYWRfm7CJTgXlu93AWZk7kBqltHZabratkj4F\nmgG+GFG0bWBBc+wcS8GK8mWhreSFQGChW1uMfFnWQG1vQUqeE344123O3xqY9cB9\nXt4tnngYAWgkr4Zh+QQJDjBiZ6kfR/sFJ1fmnBaniqKh2k+y5Jm1vIMiQ2+lkzWa\nNLJ+H1qvBJZVW+omeUV5AZohrCbQxkEZMUnLSmCvx3Nmjpe88Ry730LllYoPD/xV\nQFiVpokaGAnedeVjbguPw36IiF+IrYMDZfVsW3RD/Ys/e7FsMpgeHHqQvN8gAhp5\nGiOeyDUruwc0Bb5pryEem4cRyYF8neugehpRoBkDudqbUUrBMEVrkC6v9bs+94m7\npHifP9rwb1KxMMdlmhgTvs484M/JFuo/U4KkzN/xutrMvBn4tkFv+EHoMl+GZ6Zx\nUDjXFmWiPs4BB/BdPA2zbWcbO+9Pb7o0DRp/kOfkysZFQBtaaB9EcWjXa6nYm/C2\nHUo2prmzaRGTtRePb3H/DrBgT5Z53KBjBPZ93scQ7YVoxuo96FuNVoR3BQzrwadB\nDidOJKiZExidUIvyB5D1U0pSGkfys8jkUNMkRa3JozHHKlMwhWO/4TQRMt0SFgAj\nx9UfwnQ/LfwgEVfC/Vu6Y/suppIKkiBzRvcVA2x7pXNYTA59Yrs=\n=3RR5\n-----END PGP SIGNATURE-----", "payload": "tree 46d4fcbe461f57a77e189e3d831530031b030651\nparent 34a912933323aa343ffa016b19c6e73155a26431\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1683710848 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1683807190 +0900\n\nRemove prelude fallback path for Rust <1.52.0\n\nWe've already removed non-sysroot proc macro server, which effectively\nremoved support for Rust <1.64.0, so this removal of fallback path\nshouldn't be problem at this point.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96113b7b8e3239b14768f009728f1dc094a4612f", "html_url": "https://github.com/rust-lang/rust/commit/96113b7b8e3239b14768f009728f1dc094a4612f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96113b7b8e3239b14768f009728f1dc094a4612f/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a912933323aa343ffa016b19c6e73155a26431", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a912933323aa343ffa016b19c6e73155a26431", "html_url": "https://github.com/rust-lang/rust/commit/34a912933323aa343ffa016b19c6e73155a26431"}], "stats": {"total": 40, "additions": 14, "deletions": 26}, "files": [{"sha": "2d8870af9fbf4d004f06f2c5678824d2c83e4db5", "filename": "crates/hir-def/src/nameres/collector.rs", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/96113b7b8e3239b14768f009728f1dc094a4612f/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96113b7b8e3239b14768f009728f1dc094a4612f/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Fcollector.rs?ref=96113b7b8e3239b14768f009728f1dc094a4612f", "patch": "@@ -547,33 +547,21 @@ impl DefCollector<'_> {\n             Edition::Edition2015 => PathKind::Plain,\n             _ => PathKind::Abs,\n         };\n-        let path =\n-            ModPath::from_segments(path_kind, [krate.clone(), name![prelude], edition].into_iter());\n-        // Fall back to the older `std::prelude::v1` for compatibility with Rust <1.52.0\n-        // FIXME remove this fallback\n-        let fallback_path =\n-            ModPath::from_segments(path_kind, [krate, name![prelude], name![v1]].into_iter());\n-\n-        for path in &[path, fallback_path] {\n-            let (per_ns, _) = self.def_map.resolve_path(\n-                self.db,\n-                self.def_map.root,\n-                path,\n-                BuiltinShadowMode::Other,\n-            );\n+        let path = ModPath::from_segments(path_kind, [krate, name![prelude], edition]);\n \n-            match per_ns.types {\n-                Some((ModuleDefId::ModuleId(m), _)) => {\n-                    self.def_map.prelude = Some(m);\n-                    break;\n-                }\n-                types => {\n-                    tracing::debug!(\n-                        \"could not resolve prelude path `{}` to module (resolved to {:?})\",\n-                        path,\n-                        types\n-                    );\n-                }\n+        let (per_ns, _) =\n+            self.def_map.resolve_path(self.db, self.def_map.root, &path, BuiltinShadowMode::Other);\n+\n+        match per_ns.types {\n+            Some((ModuleDefId::ModuleId(m), _)) => {\n+                self.def_map.prelude = Some(m);\n+            }\n+            types => {\n+                tracing::debug!(\n+                    \"could not resolve prelude path `{}` to module (resolved to {:?})\",\n+                    path,\n+                    types\n+                );\n             }\n         }\n     }"}]}