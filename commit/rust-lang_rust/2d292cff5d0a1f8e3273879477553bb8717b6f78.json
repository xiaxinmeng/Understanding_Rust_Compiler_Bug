{"sha": "2d292cff5d0a1f8e3273879477553bb8717b6f78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMjkyY2ZmNWQwYTFmOGUzMjczODc5NDc3NTUzYmI4NzE3YjZmNzg=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-09-14T02:44:14Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-09-14T02:44:14Z"}, "message": "Remove unneeded `loop`.", "tree": {"sha": "b8efbdc36f3e2e7faf0178fa86ddbb39166bd7b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8efbdc36f3e2e7faf0178fa86ddbb39166bd7b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d292cff5d0a1f8e3273879477553bb8717b6f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d292cff5d0a1f8e3273879477553bb8717b6f78", "html_url": "https://github.com/rust-lang/rust/commit/2d292cff5d0a1f8e3273879477553bb8717b6f78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d292cff5d0a1f8e3273879477553bb8717b6f78/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94211416bcde4d1049f241b6c95594e28c8865e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/94211416bcde4d1049f241b6c95594e28c8865e6", "html_url": "https://github.com/rust-lang/rust/commit/94211416bcde4d1049f241b6c95594e28c8865e6"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "7da6371cc19072dd94e001a317ebe107c6d4a46c", "filename": "src/liballoc/btree/set.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2d292cff5d0a1f8e3273879477553bb8717b6f78/src%2Fliballoc%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d292cff5d0a1f8e3273879477553bb8717b6f78/src%2Fliballoc%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fset.rs?ref=2d292cff5d0a1f8e3273879477553bb8717b6f78", "patch": "@@ -1110,15 +1110,13 @@ impl<'a, T: Ord> Iterator for Union<'a, T> {\n     type Item = &'a T;\n \n     fn next(&mut self) -> Option<&'a T> {\n-        loop {\n-            match cmp_opt(self.a.peek(), self.b.peek(), Greater, Less) {\n-                Less => return self.a.next(),\n-                Equal => {\n-                    self.b.next();\n-                    return self.a.next();\n-                }\n-                Greater => return self.b.next(),\n+        match cmp_opt(self.a.peek(), self.b.peek(), Greater, Less) {\n+            Less => self.a.next(),\n+            Equal => {\n+                self.b.next();\n+                self.a.next()\n             }\n+            Greater => self.b.next(),\n         }\n     }\n "}]}