{"sha": "ca4969d4da07faab68ab8be893602a41fca63724", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNDk2OWQ0ZGEwN2ZhYWI2OGFiOGJlODkzNjAyYTQxZmNhNjM3MjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-02T17:50:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-04T08:30:42Z"}, "message": "consolidate atomic tests", "tree": {"sha": "ceaf898468c0f8f9e1e0500b8c548421279fb686", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceaf898468c0f8f9e1e0500b8c548421279fb686"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca4969d4da07faab68ab8be893602a41fca63724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca4969d4da07faab68ab8be893602a41fca63724", "html_url": "https://github.com/rust-lang/rust/commit/ca4969d4da07faab68ab8be893602a41fca63724", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca4969d4da07faab68ab8be893602a41fca63724/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9d6df93a98f6545b2757a802e440eb043f23945", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9d6df93a98f6545b2757a802e440eb043f23945", "html_url": "https://github.com/rust-lang/rust/commit/d9d6df93a98f6545b2757a802e440eb043f23945"}], "stats": {"total": 48, "additions": 26, "deletions": 22}, "files": [{"sha": "68a5d7295f1761e1c114f6f042af1165cb8eb1d4", "filename": "tests/run-pass/atomic-access-bool.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d9d6df93a98f6545b2757a802e440eb043f23945/tests%2Frun-pass%2Fatomic-access-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9d6df93a98f6545b2757a802e440eb043f23945/tests%2Frun-pass%2Fatomic-access-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fatomic-access-bool.rs?ref=d9d6df93a98f6545b2757a802e440eb043f23945", "patch": "@@ -1,19 +0,0 @@\n-use std::sync::atomic::{AtomicBool, Ordering::*};\n-\n-static mut ATOMIC: AtomicBool = AtomicBool::new(false);\n-\n-fn main() {\n-    unsafe {\n-        assert_eq!(*ATOMIC.get_mut(), false);\n-        ATOMIC.store(true, SeqCst);\n-        assert_eq!(*ATOMIC.get_mut(), true);\n-        ATOMIC.fetch_or(false, SeqCst);\n-        assert_eq!(*ATOMIC.get_mut(), true);\n-        ATOMIC.fetch_and(false, SeqCst);\n-        assert_eq!(*ATOMIC.get_mut(), false);\n-        ATOMIC.fetch_nand(true, SeqCst);\n-        assert_eq!(*ATOMIC.get_mut(), true);\n-        ATOMIC.fetch_xor(true, SeqCst);\n-        assert_eq!(*ATOMIC.get_mut(), false);\n-    }\n-}"}, {"sha": "ed9a9f453490830b28f16b8e014226362f044c72", "filename": "tests/run-pass/atomic.rs", "status": "renamed", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ca4969d4da07faab68ab8be893602a41fca63724/tests%2Frun-pass%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca4969d4da07faab68ab8be893602a41fca63724/tests%2Frun-pass%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fatomic.rs?ref=ca4969d4da07faab68ab8be893602a41fca63724", "patch": "@@ -1,8 +1,31 @@\n-use std::sync::atomic::{AtomicIsize, Ordering::*};\n-\n-static ATOMIC: AtomicIsize = AtomicIsize::new(0);\n+use std::sync::atomic::{AtomicBool, AtomicIsize, Ordering::*};\n \n fn main() {\n+    atomic_bool();\n+    atomic_isize();\n+}\n+\n+fn atomic_bool() {\n+    static mut ATOMIC: AtomicBool = AtomicBool::new(false);\n+\n+    unsafe {\n+        assert_eq!(*ATOMIC.get_mut(), false);\n+        ATOMIC.store(true, SeqCst);\n+        assert_eq!(*ATOMIC.get_mut(), true);\n+        ATOMIC.fetch_or(false, SeqCst);\n+        assert_eq!(*ATOMIC.get_mut(), true);\n+        ATOMIC.fetch_and(false, SeqCst);\n+        assert_eq!(*ATOMIC.get_mut(), false);\n+        ATOMIC.fetch_nand(true, SeqCst);\n+        assert_eq!(*ATOMIC.get_mut(), true);\n+        ATOMIC.fetch_xor(true, SeqCst);\n+        assert_eq!(*ATOMIC.get_mut(), false);\n+    }\n+}\n+\n+fn atomic_isize() {\n+    static ATOMIC: AtomicIsize = AtomicIsize::new(0);\n+\n     // Make sure trans can emit all the intrinsics correctly\n     assert_eq!(ATOMIC.compare_exchange(0, 1, Relaxed, Relaxed), Ok(0));\n     assert_eq!(ATOMIC.compare_exchange(0, 2, Acquire, Relaxed), Err(1));", "previous_filename": "tests/run-pass/atomic-compare_exchange.rs"}]}