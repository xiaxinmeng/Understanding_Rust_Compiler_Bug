{"sha": "2b62a80202e2855d47f20d271842e0e9aec6d8e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNjJhODAyMDJlMjg1NWQ0N2YyMGQyNzE4NDJlMGU5YWVjNmQ4ZTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-29T01:09:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-29T08:25:11Z"}, "message": "stdlib: Add result::chain for composing results", "tree": {"sha": "a37878693d9c0aa58bfa63a3eed957f4502811ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a37878693d9c0aa58bfa63a3eed957f4502811ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b62a80202e2855d47f20d271842e0e9aec6d8e2", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b62a80202e2855d47f20d271842e0e9aec6d8e2", "html_url": "https://github.com/rust-lang/rust/commit/2b62a80202e2855d47f20d271842e0e9aec6d8e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b62a80202e2855d47f20d271842e0e9aec6d8e2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1092fb6d88efe51e42df3aae2a321cc669e12a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1092fb6d88efe51e42df3aae2a321cc669e12a0", "html_url": "https://github.com/rust-lang/rust/commit/c1092fb6d88efe51e42df3aae2a321cc669e12a0"}], "stats": {"total": 57, "additions": 49, "deletions": 8}, "files": [{"sha": "8b07138d8d07cb59e118d7368df7d2fdc174ad1f", "filename": "src/lib/result.rs", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/2b62a80202e2855d47f20d271842e0e9aec6d8e2/src%2Flib%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b62a80202e2855d47f20d271842e0e9aec6d8e2/src%2Flib%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fresult.rs?ref=2b62a80202e2855d47f20d271842e0e9aec6d8e2", "patch": "@@ -19,11 +19,11 @@ tag t<T, U> {\n     */\n     ok(T);\n     /*\n-    Variant: error\n+    Variant: err\n \n     Contains the error value\n     */\n-    error(U);\n+    err(U);\n }\n \n /* Section: Operations */\n@@ -40,24 +40,24 @@ If the result is an error\n fn get<T, U>(res: t<T, U>) -> T {\n     alt res {\n       ok(t) { t }\n-      error(_) {\n+      err(_) {\n         fail \"get called on error result\";\n       }\n     }\n }\n \n /*\n-Function: get\n+Function: get_err\n \n Get the value out of an error result\n \n Failure:\n \n If the result is not an error\n */\n-fn get_error<T, U>(res: t<T, U>) -> U {\n+fn get_err<T, U>(res: t<T, U>) -> U {\n     alt res {\n-      error(u) { u }\n+      err(u) { u }\n       ok(_) {\n         fail \"get_error called on ok result\";\n       }\n@@ -72,7 +72,7 @@ Returns true if the result is <ok>\n fn success<T, U>(res: t<T, U>) -> bool {\n     alt res {\n       ok(_) { true }\n-      error(_) { false }\n+      err(_) { false }\n     }\n }\n \n@@ -83,4 +83,27 @@ Returns true if the result is <error>\n */\n fn failure<T, U>(res: t<T, U>) -> bool {\n     !success(res)\n-}\n\\ No newline at end of file\n+}\n+\n+/*\n+Function: chain\n+\n+Call a function based on a previous result\n+\n+If `res` is <ok> then the value is extracted and passed to `op` whereupon\n+`op`s result is returned. if `res` is <err> then it is immediately returned.\n+This function can be used to compose the results of two functions.\n+\n+Example:\n+\n+> let res = chain(read_file(file), { |buf]\n+>   ok(parse_buf(buf))\n+> })\n+\n+*/\n+fn chain<T, U, V>(res: t<T, V>, op: block(T) -> t<U, V>) -> t<U, V> {\n+    alt res {\n+      ok(t) { op(t) }\n+      err(e) { err(e) }\n+    }\n+}"}, {"sha": "9a7b390a52307b68bda67d4157d488d4e82dc3f7", "filename": "src/test/stdtest/result.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2b62a80202e2855d47f20d271842e0e9aec6d8e2/src%2Ftest%2Fstdtest%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b62a80202e2855d47f20d271842e0e9aec6d8e2/src%2Ftest%2Fstdtest%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fresult.rs?ref=2b62a80202e2855d47f20d271842e0e9aec6d8e2", "patch": "@@ -0,0 +1,17 @@\n+import std::result;\n+\n+fn op1() -> result::t<int, str> { result::ok(666) }\n+\n+fn op2(&&i: int) -> result::t<uint, str> { result::ok(i as uint + 1u) }\n+\n+fn op3() -> result::t<int, str> { result::err(\"sadface\") }\n+\n+#[test]\n+fn chain_success() {\n+    assert result::get(result::chain(op1(), op2)) == 667u;\n+}\n+\n+#[test]\n+fn chain_failure() {\n+    assert result::get_err(result::chain(op3(), op2)) == \"sadface\";\n+}\n\\ No newline at end of file"}, {"sha": "c47b85c65f8a635d79402fe13c2e8411b06cbb90", "filename": "src/test/stdtest/stdtest.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b62a80202e2855d47f20d271842e0e9aec6d8e2/src%2Ftest%2Fstdtest%2Fstdtest.rc", "raw_url": "https://github.com/rust-lang/rust/raw/2b62a80202e2855d47f20d271842e0e9aec6d8e2/src%2Ftest%2Fstdtest%2Fstdtest.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstdtest.rc?ref=2b62a80202e2855d47f20d271842e0e9aec6d8e2", "patch": "@@ -31,6 +31,7 @@ mod test;\n mod uint;\n mod float;\n mod math;\n+mod result;\n \n // Local Variables:\n // mode: rust"}]}