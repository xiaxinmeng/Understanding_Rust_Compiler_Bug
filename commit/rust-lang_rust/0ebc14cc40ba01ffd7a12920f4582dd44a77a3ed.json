{"sha": "0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYmMxNGNjNDBiYTAxZmZkN2ExMjkyMGY0NTgyZGQ0NGE3N2EzZWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-23T16:25:32Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-25T13:38:51Z"}, "message": "Remove unused macro args", "tree": {"sha": "631c17fc6e4bbd93d9dba73838a5e64e4de04d66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/631c17fc6e4bbd93d9dba73838a5e64e4de04d66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed", "html_url": "https://github.com/rust-lang/rust/commit/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb943648106d674b62f388365de056109a8319c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb943648106d674b62f388365de056109a8319c", "html_url": "https://github.com/rust-lang/rust/commit/9eb943648106d674b62f388365de056109a8319c"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "012829822060757ee67437b4851256641dfb76d5", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed", "patch": "@@ -267,10 +267,10 @@ macro simd_cmp {\n }\n \n macro simd_int_binop {\n-    ($fx:expr, $intrinsic:expr, $op:ident($x:ident, $y:ident) -> $ret:ident) => {\n-        simd_int_binop!($fx, $intrinsic, $op|$op($x, $y) -> $ret);\n+    ($fx:expr, $op:ident($x:ident, $y:ident) -> $ret:ident) => {\n+        simd_int_binop!($fx, $op|$op($x, $y) -> $ret);\n     },\n-    ($fx:expr, $intrinsic:expr, $op_u:ident|$op_s:ident($x:ident, $y:ident) -> $ret:ident) => {\n+    ($fx:expr, $op_u:ident|$op_s:ident($x:ident, $y:ident) -> $ret:ident) => {\n         let (lane_layout, lane_count) = lane_type_and_count($fx.tcx, $x.layout());\n         let x_val = $x.load_vector($fx);\n         let y_val = $y.load_vector($fx);\n@@ -285,10 +285,10 @@ macro simd_int_binop {\n }\n \n macro simd_int_flt_binop {\n-    ($fx:expr, $intrinsic:expr, $op:ident|$op_f:ident($x:ident, $y:ident) -> $ret:ident) => {\n-        simd_int_flt_binop!($fx, $intrinsic, $op|$op|$op_f($x, $y) -> $ret);\n+    ($fx:expr, $op:ident|$op_f:ident($x:ident, $y:ident) -> $ret:ident) => {\n+        simd_int_flt_binop!($fx, $op|$op|$op_f($x, $y) -> $ret);\n     },\n-    ($fx:expr, $intrinsic:expr, $op_u:ident|$op_s:ident|$op_f:ident($x:ident, $y:ident) -> $ret:ident) => {\n+    ($fx:expr, $op_u:ident|$op_s:ident|$op_f:ident($x:ident, $y:ident) -> $ret:ident) => {\n         let (lane_layout, lane_count) = lane_type_and_count($fx.tcx, $x.layout());\n         let x_val = $x.load_vector($fx);\n         let y_val = $y.load_vector($fx);\n@@ -303,7 +303,7 @@ macro simd_int_flt_binop {\n     },\n }\n \n-macro simd_flt_binop($fx:expr, $intrinsic:expr, $op:ident($x:ident, $y:ident) -> $ret:ident) {\n+macro simd_flt_binop($fx:expr, $op:ident($x:ident, $y:ident) -> $ret:ident) {\n     let (lane_layout, lane_count) = lane_type_and_count($fx.tcx, $x.layout());\n     let x_val = $x.load_vector($fx);\n     let y_val = $y.load_vector($fx);"}, {"sha": "1870192e2241a41bd3a4515b5e0e86259a48fc67", "filename": "src/intrinsics/simd.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed/src%2Fintrinsics%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed/src%2Fintrinsics%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fsimd.rs?ref=0ebc14cc40ba01ffd7a12920f4582dd44a77a3ed", "patch": "@@ -127,38 +127,38 @@ pub fn codegen_simd_intrinsic_call<'tcx>(\n         };\n \n         simd_add, (c x, c y) {\n-            simd_int_flt_binop!(fx, intrinsic, iadd|fadd(x, y) -> ret);\n+            simd_int_flt_binop!(fx, iadd|fadd(x, y) -> ret);\n         };\n         simd_sub, (c x, c y) {\n-            simd_int_flt_binop!(fx, intrinsic, isub|fsub(x, y) -> ret);\n+            simd_int_flt_binop!(fx, isub|fsub(x, y) -> ret);\n         };\n         simd_mul, (c x, c y) {\n-            simd_int_flt_binop!(fx, intrinsic, imul|fmul(x, y) -> ret);\n+            simd_int_flt_binop!(fx, imul|fmul(x, y) -> ret);\n         };\n         simd_div, (c x, c y) {\n-            simd_int_flt_binop!(fx, intrinsic, udiv|sdiv|fdiv(x, y) -> ret);\n+            simd_int_flt_binop!(fx, udiv|sdiv|fdiv(x, y) -> ret);\n         };\n         simd_shl, (c x, c y) {\n-            simd_int_binop!(fx, intrinsic, ishl(x, y) -> ret);\n+            simd_int_binop!(fx, ishl(x, y) -> ret);\n         };\n         simd_shr, (c x, c y) {\n-            simd_int_binop!(fx, intrinsic, ushr|sshr(x, y) -> ret);\n+            simd_int_binop!(fx, ushr|sshr(x, y) -> ret);\n         };\n         simd_and, (c x, c y) {\n-            simd_int_binop!(fx, intrinsic, band(x, y) -> ret);\n+            simd_int_binop!(fx, band(x, y) -> ret);\n         };\n         simd_or, (c x, c y) {\n-            simd_int_binop!(fx, intrinsic, bor(x, y) -> ret);\n+            simd_int_binop!(fx, bor(x, y) -> ret);\n         };\n         simd_xor, (c x, c y) {\n-            simd_int_binop!(fx, intrinsic, bxor(x, y) -> ret);\n+            simd_int_binop!(fx, bxor(x, y) -> ret);\n         };\n \n         simd_fmin, (c x, c y) {\n-            simd_flt_binop!(fx, intrinsic, fmin(x, y) -> ret);\n+            simd_flt_binop!(fx, fmin(x, y) -> ret);\n         };\n         simd_fmax, (c x, c y) {\n-            simd_flt_binop!(fx, intrinsic, fmax(x, y) -> ret);\n+            simd_flt_binop!(fx, fmax(x, y) -> ret);\n         };\n     }\n }"}]}