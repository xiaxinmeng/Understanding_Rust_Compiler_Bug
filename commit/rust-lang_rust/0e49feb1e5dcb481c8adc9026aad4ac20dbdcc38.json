{"sha": "0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNDlmZWIxZTVkY2I0ODFjOGFkYzkwMjZhYWQ0YWMyMGRiZGNjMzg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-31T08:41:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-31T08:41:20Z"}, "message": "Rollup merge of #88409 - spastorino:autoleakage-tait-test, r=oli-obk\n\nAdd auto trait leakage TAIT test\n\nr? `@oli-obk`\n\nRelated to #86727", "tree": {"sha": "855cbf930d10a9cc6d2803ea9f0b6967fdf49ede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/855cbf930d10a9cc6d2803ea9f0b6967fdf49ede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLeswCRBK7hj4Ov3rIwAAIMYIAHY0ziEKZWINAb2C4kczqSQj\nPzZDdJr8oPcxMsv7aIdEVtGZEcAVdDxIZ7qHEul3pPQGHoPHSMCVF5sQcZ4q8PxW\naJmA8akheozSQSzHQQqh11qDl3s2GeagJCfnKEn1gELdr0xPyAtT2EV6TsF3stIk\n8IK2AZc/uZQoMseEsOsVz0RqTVDjZj6YHgGci8Q6A6Yzem+4elumSXQ9UfnxJC9/\n+N9I1+JDzjWDAAzijgnHEdsPRAsEcyz/psbYbRTEDDZWWNlqu2rB1qSyKiCgL7Rh\nyOFoQrXXaCLR488XqJXlHROdd6qdW6OFgj2kLXA6UbgNGbEcETv32vbtdZG+vX4=\n=JySF\n-----END PGP SIGNATURE-----\n", "payload": "tree 855cbf930d10a9cc6d2803ea9f0b6967fdf49ede\nparent b490f3580bada670576b63ee2523536baa7165e3\nparent c85529e6288028ecf62635ff001caf0603d67ac2\nauthor Mara Bos <m-ou.se@m-ou.se> 1630399280 +0200\ncommitter GitHub <noreply@github.com> 1630399280 +0200\n\nRollup merge of #88409 - spastorino:autoleakage-tait-test, r=oli-obk\n\nAdd auto trait leakage TAIT test\n\nr? `@oli-obk`\n\nRelated to #86727\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "html_url": "https://github.com/rust-lang/rust/commit/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b490f3580bada670576b63ee2523536baa7165e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b490f3580bada670576b63ee2523536baa7165e3", "html_url": "https://github.com/rust-lang/rust/commit/b490f3580bada670576b63ee2523536baa7165e3"}, {"sha": "c85529e6288028ecf62635ff001caf0603d67ac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c85529e6288028ecf62635ff001caf0603d67ac2", "html_url": "https://github.com/rust-lang/rust/commit/c85529e6288028ecf62635ff001caf0603d67ac2"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "a1584581e6c45cc0cad384deccd8226ea878c169", "filename": "src/test/ui/type-alias-impl-trait/auto-trait-leakage.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage.rs?ref=0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "patch": "@@ -0,0 +1,18 @@\n+// check-pass\n+\n+#![feature(type_alias_impl_trait)]\n+#![allow(dead_code)]\n+\n+mod m {\n+    type Foo = impl std::fmt::Debug;\n+\n+    pub fn foo() -> Foo {\n+        22_u32\n+    }\n+}\n+\n+fn is_send<T: Send>(_: T) {}\n+\n+fn main() {\n+    is_send(m::foo());\n+}"}, {"sha": "745379efa6df90e41b136773128944fb2e6d9add", "filename": "src/test/ui/type-alias-impl-trait/auto-trait-leakage2.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage2.rs?ref=0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "patch": "@@ -0,0 +1,19 @@\n+#![feature(type_alias_impl_trait)]\n+#![allow(dead_code)]\n+\n+mod m {\n+    use std::rc::Rc;\n+\n+    type Foo = impl std::fmt::Debug;\n+\n+    pub fn foo() -> Foo {\n+        Rc::new(22_u32)\n+    }\n+}\n+\n+fn is_send<T: Send>(_: T) {}\n+\n+fn main() {\n+    is_send(m::foo());\n+    //~^ ERROR: `Rc<u32>` cannot be sent between threads safely [E0277]\n+}"}, {"sha": "d60be4b1ccf9ca04289899c22b46222d5484dde4", "filename": "src/test/ui/type-alias-impl-trait/auto-trait-leakage2.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage2.stderr?ref=0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "patch": "@@ -0,0 +1,20 @@\n+error[E0277]: `Rc<u32>` cannot be sent between threads safely\n+  --> $DIR/auto-trait-leakage2.rs:17:5\n+   |\n+LL |     type Foo = impl std::fmt::Debug;\n+   |                -------------------- within this `impl Debug`\n+...\n+LL |     is_send(m::foo());\n+   |     ^^^^^^^ `Rc<u32>` cannot be sent between threads safely\n+   |\n+   = help: within `impl Debug`, the trait `Send` is not implemented for `Rc<u32>`\n+   = note: required because it appears within the type `impl Debug`\n+note: required by a bound in `is_send`\n+  --> $DIR/auto-trait-leakage2.rs:14:15\n+   |\n+LL | fn is_send<T: Send>(_: T) {}\n+   |               ^^^^ required by this bound in `is_send`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "5fb7a9473d3dfbc57cef2537e10e59729a553908", "filename": "src/test/ui/type-alias-impl-trait/auto-trait-leakage3.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.rs?ref=0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "patch": "@@ -0,0 +1,21 @@\n+#![feature(type_alias_impl_trait)]\n+#![allow(dead_code)]\n+\n+// FIXME This should compile, but it currently doesn't\n+\n+mod m {\n+    type Foo = impl std::fmt::Debug;\n+    //~^ ERROR: cycle detected when computing type of `m::Foo::{opaque#0}` [E0391]\n+\n+    pub fn foo() -> Foo {\n+        22_u32\n+    }\n+\n+    pub fn bar() {\n+        is_send(foo());\n+    }\n+\n+    fn is_send<T: Send>(_: T) {}\n+}\n+\n+fn main() {}"}, {"sha": "ac7bbd272c7718b7a6d015455ca8474116369376", "filename": "src/test/ui/type-alias-impl-trait/auto-trait-leakage3.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fauto-trait-leakage3.stderr?ref=0e49feb1e5dcb481c8adc9026aad4ac20dbdcc38", "patch": "@@ -0,0 +1,22 @@\n+error[E0391]: cycle detected when computing type of `m::Foo::{opaque#0}`\n+  --> $DIR/auto-trait-leakage3.rs:7:16\n+   |\n+LL |     type Foo = impl std::fmt::Debug;\n+   |                ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: ...which requires type-checking `m::bar`...\n+  --> $DIR/auto-trait-leakage3.rs:14:5\n+   |\n+LL |     pub fn bar() {\n+   |     ^^^^^^^^^^^^\n+   = note: ...which requires evaluating trait selection obligation `impl std::fmt::Debug: std::marker::Send`...\n+   = note: ...which again requires computing type of `m::Foo::{opaque#0}`, completing the cycle\n+note: cycle used when checking item types in module `m`\n+  --> $DIR/auto-trait-leakage3.rs:6:1\n+   |\n+LL | mod m {\n+   | ^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0391`."}]}