{"sha": "4fbe53f70b544a41a277c37b017a85d41ba344a0", "node_id": "C_kwDOAAsO6NoAKDRmYmU1M2Y3MGI1NDRhNDFhMjc3YzM3YjAxN2E4NWQ0MWJhMzQ0YTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-02T21:07:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-02T21:07:46Z"}, "message": "Rollup merge of #100008 - jyn514:eager-submodules, r=bjorn3\n\nUpdate all pre-cloned submodules on startup\n\nFixes https://github.com/rust-lang/rust/issues/99083", "tree": {"sha": "3c5cf3d5a56606b30bec92a61cfa1ce7e90a7c04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c5cf3d5a56606b30bec92a61cfa1ce7e90a7c04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fbe53f70b544a41a277c37b017a85d41ba344a0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi6ZIiCRBK7hj4Ov3rIwAApR4IAHI4T5Zvudno2bmphhJmChxI\nHe4bACel8bmYoktkzziD/g7thP5BiZVd5v0ixj/jheZDN2/q/8GhGaPzz3VakVR+\nlhampNST6u/DDWUkF03uKKJ7oxXi5EjaJSU11O5MbcdabpBxpMN0XnL+ixNdtMIc\ncmgYqGNzSIFlwsF4X+ESU2JXeJ+MDt6+PNH4d+YNGJ0+JTSKZ/k8PcHBk6T1yGh6\nRHRtn9/Xmxd78BHx4LkgyRVPVW4dOvYKGP3LQZq+trE62WtIiEVfNn1XuH1jyq92\n5UstMPwQL6FqkEgW4Mocx45lR1ixdDvmzV0WflplL+m8g935wwNVaugqrXKyoDM=\n=2N/A\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c5cf3d5a56606b30bec92a61cfa1ce7e90a7c04\nparent 82feb4996cb9195b0979ab6ab1dac379ade7f500\nparent f2164c324cedfed8e655342b26b2831bdb39c5f2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659474466 +0200\ncommitter GitHub <noreply@github.com> 1659474466 +0200\n\nRollup merge of #100008 - jyn514:eager-submodules, r=bjorn3\n\nUpdate all pre-cloned submodules on startup\n\nFixes https://github.com/rust-lang/rust/issues/99083\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbe53f70b544a41a277c37b017a85d41ba344a0", "html_url": "https://github.com/rust-lang/rust/commit/4fbe53f70b544a41a277c37b017a85d41ba344a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fbe53f70b544a41a277c37b017a85d41ba344a0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82feb4996cb9195b0979ab6ab1dac379ade7f500", "url": "https://api.github.com/repos/rust-lang/rust/commits/82feb4996cb9195b0979ab6ab1dac379ade7f500", "html_url": "https://github.com/rust-lang/rust/commit/82feb4996cb9195b0979ab6ab1dac379ade7f500"}, {"sha": "f2164c324cedfed8e655342b26b2831bdb39c5f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2164c324cedfed8e655342b26b2831bdb39c5f2", "html_url": "https://github.com/rust-lang/rust/commit/f2164c324cedfed8e655342b26b2831bdb39c5f2"}], "stats": {"total": 20, "additions": 2, "deletions": 18}, "files": [{"sha": "f84de73297acb066e0d0988d4fd0a610fbc1ad51", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4fbe53f70b544a41a277c37b017a85d41ba344a0/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fbe53f70b544a41a277c37b017a85d41ba344a0/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=4fbe53f70b544a41a277c37b017a85d41ba344a0", "patch": "@@ -624,20 +624,6 @@ impl Build {\n     /// If any submodule has been initialized already, sync it unconditionally.\n     /// This avoids contributors checking in a submodule change by accident.\n     pub fn maybe_update_submodules(&self) {\n-        // WARNING: keep this in sync with the submodules hard-coded in bootstrap.py\n-        let mut bootstrap_submodules: Vec<&str> = vec![\n-            \"src/tools/rust-installer\",\n-            \"src/tools/cargo\",\n-            \"src/tools/rls\",\n-            \"src/tools/miri\",\n-            \"library/backtrace\",\n-            \"library/stdarch\",\n-        ];\n-        // As in bootstrap.py, we include `rust-analyzer` if `build.vendor` was set in\n-        // `config.toml`.\n-        if self.config.vendor {\n-            bootstrap_submodules.push(\"src/tools/rust-analyzer\");\n-        }\n         // Avoid running git when there isn't a git checkout.\n         if !self.config.submodules(&self.rust_info) {\n             return;\n@@ -653,10 +639,8 @@ impl Build {\n             // Look for `submodule.$name.path = $path`\n             // Sample output: `submodule.src/rust-installer.path src/tools/rust-installer`\n             let submodule = Path::new(line.splitn(2, ' ').nth(1).unwrap());\n-            // avoid updating submodules twice\n-            if !bootstrap_submodules.iter().any(|&p| Path::new(p) == submodule)\n-                && channel::GitInfo::new(false, submodule).is_git()\n-            {\n+            // Don't update the submodule unless it's already been cloned.\n+            if channel::GitInfo::new(false, submodule).is_git() {\n                 self.update_submodule(submodule);\n             }\n         }"}]}