{"sha": "c7ebc590da425621cde05877b8a0fc43ca502ee3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZWJjNTkwZGE0MjU2MjFjZGUwNTg3N2I4YTBmYzQzY2E1MDJlZTM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-15T15:06:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-15T15:06:56Z"}, "message": "Rollup merge of #82060 - taiki-e:typo, r=m-ou-se\n\nFix typos in BTreeSet::{first, last} docs\n\nmap -> set", "tree": {"sha": "f92362dfe48a25419927c86e07d3896d170c54fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f92362dfe48a25419927c86e07d3896d170c54fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7ebc590da425621cde05877b8a0fc43ca502ee3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgKo4QCRBK7hj4Ov3rIwAAdHIIAKWHGcK1zHzQjwrM/CgKlNLi\nUNBs0dpA98cf3e7JBggZHNlN5HlGMvVK9qy6qllGf3agKUlwHw5iMDyAbl90/HAg\nCdkfetuOVqFFSvhpvCA/u+58DeBoXGT56Oe+M+rouHyks9qRBh74oFKX8X1xAwkE\n2Xw2+3L/yU9ml4DS1zasaY/s8u9gyZ1TOq1tTz9vbGjQebbCO+C2/FHuxREALzac\nYH/+hG66qLOQLNrzw+oB4XAtvTSEoQdqpgc+LfqXOc11l1C48GkFzJ8pBuv8gRsO\nF5EkxflQkM6Q4ucKOxq3B1PdiszQqbZPDnqq0m1hgjYHWGCEy6l8eiS0J7c/nKI=\n=I2Qx\n-----END PGP SIGNATURE-----\n", "payload": "tree f92362dfe48a25419927c86e07d3896d170c54fe\nparent 6fde3c54385b92711a9087336fb6ab43000e9fad\nparent dd9db236cd15215c878a873b0b5a94efb6867771\nauthor Jonas Schievink <jonasschievink@gmail.com> 1613401616 +0100\ncommitter GitHub <noreply@github.com> 1613401616 +0100\n\nRollup merge of #82060 - taiki-e:typo, r=m-ou-se\n\nFix typos in BTreeSet::{first, last} docs\n\nmap -> set\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ebc590da425621cde05877b8a0fc43ca502ee3", "html_url": "https://github.com/rust-lang/rust/commit/c7ebc590da425621cde05877b8a0fc43ca502ee3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7ebc590da425621cde05877b8a0fc43ca502ee3/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fde3c54385b92711a9087336fb6ab43000e9fad", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fde3c54385b92711a9087336fb6ab43000e9fad", "html_url": "https://github.com/rust-lang/rust/commit/6fde3c54385b92711a9087336fb6ab43000e9fad"}, {"sha": "dd9db236cd15215c878a873b0b5a94efb6867771", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd9db236cd15215c878a873b0b5a94efb6867771", "html_url": "https://github.com/rust-lang/rust/commit/dd9db236cd15215c878a873b0b5a94efb6867771"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "f2ec2774484409462ee7814ec81db8f428461fad", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c7ebc590da425621cde05877b8a0fc43ca502ee3/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7ebc590da425621cde05877b8a0fc43ca502ee3/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=c7ebc590da425621cde05877b8a0fc43ca502ee3", "patch": "@@ -649,12 +649,12 @@ impl<T> BTreeSet<T> {\n     /// #![feature(map_first_last)]\n     /// use std::collections::BTreeSet;\n     ///\n-    /// let mut map = BTreeSet::new();\n-    /// assert_eq!(map.first(), None);\n-    /// map.insert(1);\n-    /// assert_eq!(map.first(), Some(&1));\n-    /// map.insert(2);\n-    /// assert_eq!(map.first(), Some(&1));\n+    /// let mut set = BTreeSet::new();\n+    /// assert_eq!(set.first(), None);\n+    /// set.insert(1);\n+    /// assert_eq!(set.first(), Some(&1));\n+    /// set.insert(2);\n+    /// assert_eq!(set.first(), Some(&1));\n     /// ```\n     #[unstable(feature = \"map_first_last\", issue = \"62924\")]\n     pub fn first(&self) -> Option<&T>\n@@ -675,12 +675,12 @@ impl<T> BTreeSet<T> {\n     /// #![feature(map_first_last)]\n     /// use std::collections::BTreeSet;\n     ///\n-    /// let mut map = BTreeSet::new();\n-    /// assert_eq!(map.last(), None);\n-    /// map.insert(1);\n-    /// assert_eq!(map.last(), Some(&1));\n-    /// map.insert(2);\n-    /// assert_eq!(map.last(), Some(&2));\n+    /// let mut set = BTreeSet::new();\n+    /// assert_eq!(set.last(), None);\n+    /// set.insert(1);\n+    /// assert_eq!(set.last(), Some(&1));\n+    /// set.insert(2);\n+    /// assert_eq!(set.last(), Some(&2));\n     /// ```\n     #[unstable(feature = \"map_first_last\", issue = \"62924\")]\n     pub fn last(&self) -> Option<&T>"}]}