{"sha": "a417518173bae739d1aef50c6cf1a1e3bd4c4319", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MTc1MTgxNzNiYWU3MzlkMWFlZjUwYzZjZjFhMWUzYmQ0YzQzMTk=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-06-23T23:49:09Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-06-24T05:57:37Z"}, "message": "structured suggestion and rewording for `...` expression syntax error\n\nNow that `..=` inclusive ranges are stabilized, people probably\nshouldn't be using `...` even in patterns, even if it's still legal\nthere (see #51043). To avoid drawing attention to `...` being a real\nthing, let's reword this message to just say \"unexpected token\" rather\n\"cannot be used in expressions\".", "tree": {"sha": "b9128702ccb5e0139d58f31c6d4a5797a300fb82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9128702ccb5e0139d58f31c6d4a5797a300fb82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a417518173bae739d1aef50c6cf1a1e3bd4c4319", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a417518173bae739d1aef50c6cf1a1e3bd4c4319", "html_url": "https://github.com/rust-lang/rust/commit/a417518173bae739d1aef50c6cf1a1e3bd4c4319", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a417518173bae739d1aef50c6cf1a1e3bd4c4319/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4650361fb627f7dd6b8d5c1cee8a7a12a050ba80", "url": "https://api.github.com/repos/rust-lang/rust/commits/4650361fb627f7dd6b8d5c1cee8a7a12a050ba80", "html_url": "https://github.com/rust-lang/rust/commit/4650361fb627f7dd6b8d5c1cee8a7a12a050ba80"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "955bdbdcf917765d8620b4a730070b1da4812d2e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a417518173bae739d1aef50c6cf1a1e3bd4c4319", "patch": "@@ -4800,12 +4800,14 @@ impl<'a> Parser<'a> {\n \n     fn err_dotdotdot_syntax(&self, span: Span) {\n         self.diagnostic().struct_span_err(span, {\n-            \"`...` syntax cannot be used in expressions\"\n-        }).help({\n-            \"Use `..` if you need an exclusive range (a < b)\"\n-        }).help({\n-            \"or `..=` if you need an inclusive range (a <= b)\"\n-        }).emit();\n+            \"unexpected token: `...`\"\n+        }).span_suggestion_with_applicability(\n+            span, \"use `..` for an exclusive range\", \"..\".to_owned(),\n+            Applicability::MaybeIncorrect\n+        ).span_suggestion_with_applicability(\n+            span, \"or `..=` for an inclusive range\", \"..=\".to_owned(),\n+            Applicability::MaybeIncorrect\n+        ).emit();\n     }\n \n     // Parse bounds of a type parameter `BOUND + BOUND + BOUND`, possibly with trailing `+`."}, {"sha": "34b96a59c2dde784b5f7b4bc39beb0cfa63f10e2", "filename": "src/test/parse-fail/range_inclusive_dotdotdot.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Ftest%2Fparse-fail%2Frange_inclusive_dotdotdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Ftest%2Fparse-fail%2Frange_inclusive_dotdotdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Frange_inclusive_dotdotdot.rs?ref=a417518173bae739d1aef50c6cf1a1e3bd4c4319", "patch": "@@ -15,22 +15,21 @@\n use std::ops::RangeToInclusive;\n \n fn return_range_to() -> RangeToInclusive<i32> {\n-    return ...1; //~ERROR `...` syntax cannot be used in expressions\n-                 //~^HELP  Use `..` if you need an exclusive range (a < b)\n-                 //~^^HELP or `..=` if you need an inclusive range (a <= b)\n+    return ...1; //~ERROR unexpected token: `...`\n+                 //~^HELP  use `..` for an exclusive range\n+                 //~^^HELP or `..=` for an inclusive range\n }\n \n pub fn main() {\n-    let x = ...0;    //~ERROR `...` syntax cannot be used in expressions\n-                     //~^HELP  Use `..` if you need an exclusive range (a < b)\n-                     //~^^HELP or `..=` if you need an inclusive range (a <= b)\n+    let x = ...0;    //~ERROR unexpected token: `...`\n+                     //~^HELP  use `..` for an exclusive range\n+                     //~^^HELP or `..=` for an inclusive range\n \n-    let x = 5...5;   //~ERROR `...` syntax cannot be used in expressions\n-                     //~^HELP  Use `..` if you need an exclusive range (a < b)\n-                     //~^^HELP or `..=` if you need an inclusive range (a <= b)\n+    let x = 5...5;   //~ERROR unexpected token: `...`\n+                     //~^HELP  use `..` for an exclusive range\n+                     //~^^HELP or `..=` for an inclusive range\n \n-    for _ in 0...1 {} //~ERROR `...` syntax cannot be used in expressions\n-                     //~^HELP  Use `..` if you need an exclusive range (a < b)\n-                     //~^^HELP or `..=` if you need an inclusive range (a <= b)\n+    for _ in 0...1 {} //~ERROR unexpected token: `...`\n+                     //~^HELP  use `..` for an exclusive range\n+                     //~^^HELP or `..=` for an inclusive range\n }\n-"}, {"sha": "afb73a526a8fe638fa8c6b2828ac5d24eedf6fc6", "filename": "src/test/ui/suggestions/dotdotdot-expr.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Ftest%2Fui%2Fsuggestions%2Fdotdotdot-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Ftest%2Fui%2Fsuggestions%2Fdotdotdot-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdotdotdot-expr.rs?ref=a417518173bae739d1aef50c6cf1a1e3bd4c4319", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let _redemptive = 1...21;\n+    //~^ ERROR unexpected token\n+}"}, {"sha": "3315538f2f7597859917275a00cfbe3184e222a8", "filename": "src/test/ui/suggestions/dotdotdot-expr.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Ftest%2Fui%2Fsuggestions%2Fdotdotdot-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a417518173bae739d1aef50c6cf1a1e3bd4c4319/src%2Ftest%2Fui%2Fsuggestions%2Fdotdotdot-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdotdotdot-expr.stderr?ref=a417518173bae739d1aef50c6cf1a1e3bd4c4319", "patch": "@@ -0,0 +1,16 @@\n+error: unexpected token: `...`\n+  --> $DIR/dotdotdot-expr.rs:12:24\n+   |\n+LL |     let _redemptive = 1...21;\n+   |                        ^^^\n+help: use `..` for an exclusive range\n+   |\n+LL |     let _redemptive = 1..21;\n+   |                        ^^\n+help: or `..=` for an inclusive range\n+   |\n+LL |     let _redemptive = 1..=21;\n+   |                        ^^^\n+\n+error: aborting due to previous error\n+"}]}