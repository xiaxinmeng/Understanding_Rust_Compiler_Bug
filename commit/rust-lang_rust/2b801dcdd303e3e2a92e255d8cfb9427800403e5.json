{"sha": "2b801dcdd303e3e2a92e255d8cfb9427800403e5", "node_id": "C_kwDOAAsO6NoAKDJiODAxZGNkZDMwM2UzZTJhOTJlMjU1ZDhjZmI5NDI3ODAwNDAzZTU", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-12-28T02:57:07Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-12-28T02:57:07Z"}, "message": "Move `ExternalLocation` to `clean::types`\n\nIt was previously defined in `render::search_index` but wasn't used at\nall there. `clean::types` seems like a better fit since that's where\n`ExternalCrate` is defined.", "tree": {"sha": "4526c678e360cc3c097a48ee53acfdd5bc2f7b73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4526c678e360cc3c097a48ee53acfdd5bc2f7b73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b801dcdd303e3e2a92e255d8cfb9427800403e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b801dcdd303e3e2a92e255d8cfb9427800403e5", "html_url": "https://github.com/rust-lang/rust/commit/2b801dcdd303e3e2a92e255d8cfb9427800403e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b801dcdd303e3e2a92e255d8cfb9427800403e5/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e19593f0e51196dc3528bb5fa8b89e81ae493092", "url": "https://api.github.com/repos/rust-lang/rust/commits/e19593f0e51196dc3528bb5fa8b89e81ae493092", "html_url": "https://github.com/rust-lang/rust/commit/e19593f0e51196dc3528bb5fa8b89e81ae493092"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "861b70bac6c4f29621d87702b0d5996776328367", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=2b801dcdd303e3e2a92e255d8cfb9427800403e5", "patch": "@@ -38,7 +38,6 @@ use crate::clean::Clean;\n use crate::core::DocContext;\n use crate::formats::cache::Cache;\n use crate::formats::item_type::ItemType;\n-use crate::html::render::search_index::ExternalLocation;\n use crate::html::render::Context;\n \n crate use self::FnRetTy::*;\n@@ -337,6 +336,16 @@ impl ExternalCrate {\n     }\n }\n \n+/// Indicates where an external crate can be found.\n+crate enum ExternalLocation {\n+    /// Remote URL root of the external crate\n+    Remote(String),\n+    /// This external crate can be found in the local doc/ folder\n+    Local,\n+    /// The external crate could not be found.\n+    Unknown,\n+}\n+\n /// Anything with a source location and set of attributes and, optionally, a\n /// name. That is, anything that can be documented. This doesn't correspond\n /// directly to the AST's concept of an item; it's a strict superset."}, {"sha": "4dbf3b64a3d18dd443e4c3e3a308d3664a47f3fa", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=2b801dcdd303e3e2a92e255d8cfb9427800403e5", "patch": "@@ -6,13 +6,13 @@ use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n-use crate::clean::{self, ExternalCrate, ItemId, PrimitiveType};\n+use crate::clean::{self, types::ExternalLocation, ExternalCrate, ItemId, PrimitiveType};\n use crate::core::DocContext;\n use crate::fold::DocFolder;\n use crate::formats::item_type::ItemType;\n use crate::formats::Impl;\n use crate::html::markdown::short_markdown_summary;\n-use crate::html::render::search_index::{get_index_search_type, ExternalLocation};\n+use crate::html::render::search_index::get_index_search_type;\n use crate::html::render::IndexItem;\n \n /// This cache is used to store information about the [`clean::Crate`] being"}, {"sha": "4088163df391875f5f5297bd8f3406eae542e358", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=2b801dcdd303e3e2a92e255d8cfb9427800403e5", "patch": "@@ -21,10 +21,12 @@ use rustc_middle::ty::TyCtxt;\n use rustc_span::def_id::CRATE_DEF_INDEX;\n use rustc_target::spec::abi::Abi;\n \n-use crate::clean::{self, utils::find_nearest_parent_module, ExternalCrate, ItemId, PrimitiveType};\n+use crate::clean::{\n+    self, types::ExternalLocation, utils::find_nearest_parent_module, ExternalCrate, ItemId,\n+    PrimitiveType,\n+};\n use crate::formats::item_type::ItemType;\n use crate::html::escape::Escape;\n-use crate::html::render::search_index::ExternalLocation;\n use crate::html::render::Context;\n \n use super::url_parts_builder::UrlPartsBuilder;"}, {"sha": "534a542d58ed0b596e5ffe754128715b5ea80fb9", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=2b801dcdd303e3e2a92e255d8cfb9427800403e5", "patch": "@@ -14,15 +14,15 @@ use rustc_span::source_map::FileName;\n use rustc_span::symbol::sym;\n \n use super::print_item::{full_path, item_path, print_item};\n-use super::search_index::{build_index, ExternalLocation};\n+use super::search_index::build_index;\n use super::templates;\n use super::write_shared::write_shared;\n use super::{\n     collect_spans_and_sources, print_sidebar, settings, AllTypes, LinkFromSrc, NameDoc, StylePath,\n     BASIC_KEYWORDS,\n };\n \n-use crate::clean::{self, ExternalCrate};\n+use crate::clean::{self, types::ExternalLocation, ExternalCrate};\n use crate::config::RenderOptions;\n use crate::docfs::{DocFS, PathError};\n use crate::error::Error;"}, {"sha": "787f047790aebb717da5f4390a09ef823e2eec2a", "filename": "src/librustdoc/html/render/search_index.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs?ref=2b801dcdd303e3e2a92e255d8cfb9427800403e5", "patch": "@@ -13,16 +13,6 @@ use crate::formats::item_type::ItemType;\n use crate::html::markdown::short_markdown_summary;\n use crate::html::render::{IndexItem, IndexItemFunctionType, RenderType, TypeWithKind};\n \n-/// Indicates where an external crate can be found.\n-crate enum ExternalLocation {\n-    /// Remote URL root of the external crate\n-    Remote(String),\n-    /// This external crate can be found in the local doc/ folder\n-    Local,\n-    /// The external crate could not be found.\n-    Unknown,\n-}\n-\n /// Builds the search index from the collected metadata\n crate fn build_index<'tcx>(krate: &clean::Crate, cache: &mut Cache, tcx: TyCtxt<'tcx>) -> String {\n     let mut defid_to_pathid = FxHashMap::default();"}, {"sha": "005da01b52b6c43813e1d109a45a8be51c99e2a2", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b801dcdd303e3e2a92e255d8cfb9427800403e5/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=2b801dcdd303e3e2a92e255d8cfb9427800403e5", "patch": "@@ -19,12 +19,11 @@ use rustc_session::Session;\n use rustdoc_json_types as types;\n \n use crate::clean;\n-use crate::clean::ExternalCrate;\n+use crate::clean::types::{ExternalCrate, ExternalLocation};\n use crate::config::RenderOptions;\n use crate::error::Error;\n use crate::formats::cache::Cache;\n use crate::formats::FormatRenderer;\n-use crate::html::render::search_index::ExternalLocation;\n use crate::json::conversions::{from_item_id, IntoWithTcx};\n \n #[derive(Clone)]"}]}