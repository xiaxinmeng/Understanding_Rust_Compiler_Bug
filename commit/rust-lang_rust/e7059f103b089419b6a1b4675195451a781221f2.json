{"sha": "e7059f103b089419b6a1b4675195451a781221f2", "node_id": "C_kwDOAAsO6NoAKGU3MDU5ZjEwM2IwODk0MTliNmExYjQ2NzUxOTU0NTFhNzgxMjIxZjI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-06-08T08:15:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-08T08:15:09Z"}, "message": "Rollup merge of #112034 - sladyn98:migrate-opaque-ty, r=GuillaumeGomez\n\nMigrate `item_opaque_ty` to Askama\n\nThis PR migrates `item_opaque_ty` to Askama\n\nRefers: https://github.com/rust-lang/rust/issues/108868", "tree": {"sha": "6a6c3ed7b1a2b886c11e4aa991a9f9ede9bf1664", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a6c3ed7b1a2b886c11e4aa991a9f9ede9bf1664"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7059f103b089419b6a1b4675195451a781221f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkgY4NCRBK7hj4Ov3rIwAA6CcIABcXLYYHL8xFl88XOxPkWOUh\nwa5jaqeO0G5Z1z+RWl5nNrMGZTgYxCiDlInaCDZ9YD7nknWryKx7B8VkmrQ9U8fS\nBaw5PmlehYVPmEOTQ5a7X28J0fdKXi6pJVCwqGb6Gh21sm+FlkQU9ZfjyAIPos2o\nnap5Lx5cVWHjR/5Tx/uGYdmTkrh8PoNz81UUAvGgB9J8h3vxpSoWKrtH8ff8C/35\n7UklZImqOs/lFke8ML1tgMdmAiHnvQxw315Yz/7CP/EdLfUD0i19M7jq6BUEw5QR\nl6lPV92XoD5sQvu0Ysq9ZJYW1MW6TV5A0ukrh0GXSiA5B3BcYCSp+m9v5L08O9s=\n=iqLW\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a6c3ed7b1a2b886c11e4aa991a9f9ede9bf1664\nparent 80917360d350fb55aebf383e7ff99efea41f63fd\nparent 29a51e14d9d7eb299683556a172cd06a11237b35\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1686212109 +0200\ncommitter GitHub <noreply@github.com> 1686212109 +0200\n\nRollup merge of #112034 - sladyn98:migrate-opaque-ty, r=GuillaumeGomez\n\nMigrate `item_opaque_ty` to Askama\n\nThis PR migrates `item_opaque_ty` to Askama\n\nRefers: https://github.com/rust-lang/rust/issues/108868\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7059f103b089419b6a1b4675195451a781221f2", "html_url": "https://github.com/rust-lang/rust/commit/e7059f103b089419b6a1b4675195451a781221f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7059f103b089419b6a1b4675195451a781221f2/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80917360d350fb55aebf383e7ff99efea41f63fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/80917360d350fb55aebf383e7ff99efea41f63fd", "html_url": "https://github.com/rust-lang/rust/commit/80917360d350fb55aebf383e7ff99efea41f63fd"}, {"sha": "29a51e14d9d7eb299683556a172cd06a11237b35", "url": "https://api.github.com/repos/rust-lang/rust/commits/29a51e14d9d7eb299683556a172cd06a11237b35", "html_url": "https://github.com/rust-lang/rust/commit/29a51e14d9d7eb299683556a172cd06a11237b35"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "4be0a7b4a5fb8b2a69bb564a997f18877c3cce05", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e7059f103b089419b6a1b4675195451a781221f2/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7059f103b089419b6a1b4675195451a781221f2/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=e7059f103b089419b6a1b4675195451a781221f2", "patch": "@@ -1129,7 +1129,12 @@ fn item_trait_alias(\n         .unwrap();\n }\n \n-fn item_opaque_ty(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::OpaqueTy) {\n+fn item_opaque_ty(\n+    w: &mut impl fmt::Write,\n+    cx: &mut Context<'_>,\n+    it: &clean::Item,\n+    t: &clean::OpaqueTy,\n+) {\n     wrap_item(w, |w| {\n         write!(\n             w,\n@@ -1139,16 +1144,18 @@ fn item_opaque_ty(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &cl\n             where_clause = print_where_clause(&t.generics, cx, 0, Ending::Newline),\n             bounds = bounds(&t.bounds, false, cx),\n             attrs = render_attributes_in_pre(it, \"\", cx.tcx()),\n-        );\n+        )\n+        .unwrap();\n     });\n \n-    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2));\n+    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2)).unwrap();\n \n     // Render any items associated directly to this alias, as otherwise they\n     // won't be visible anywhere in the docs. It would be nice to also show\n     // associated items from the aliased type (see discussion in #32077), but\n     // we need #14072 to make sense of the generics.\n     write!(w, \"{}\", render_assoc_items(cx, it, it.item_id.expect_def_id(), AssocItemRender::All))\n+        .unwrap();\n }\n \n fn item_typedef(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::Typedef) {"}]}