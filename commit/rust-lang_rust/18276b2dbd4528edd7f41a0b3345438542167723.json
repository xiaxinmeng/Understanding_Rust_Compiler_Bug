{"sha": "18276b2dbd4528edd7f41a0b3345438542167723", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4Mjc2YjJkYmQ0NTI4ZWRkN2Y0MWEwYjMzNDU0Mzg1NDIxNjc3MjM=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2020-11-27T02:17:13Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2020-11-28T02:59:20Z"}, "message": "Apply review: use from_hir, add macro source fix.", "tree": {"sha": "5dcb48fd295cde6f7d70575cb635b7aa99b19958", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dcb48fd295cde6f7d70575cb635b7aa99b19958"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18276b2dbd4528edd7f41a0b3345438542167723", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAl/BvQgACgkQfsyTL4ss\ncx6z6w//RoiXZ0mvPsANYvl5e17r2lasxANtAn+GcECEt+w0G5XcZBgPWHOwZOcq\nl6xlyRqU7W3SU95NyOmKs/0rImaUHnDoqOJV4mrDWqeRvPQmUHXNHWMj9lhYTHr6\n33xZ5uhAy91h/avM45hpzC15Wpp/5pgiogOjs36aIDMSvu+K8ZTVLG2qG5mR1ATZ\n5LyVdlaBwxBxsTwrTmasjmz2Lh4ei3AeVnFCdORmTPmjSVqd0xk2TBijaqHAF41v\nesoL8yxFXufefIdppL6HkwH2jT+nr4vUYLMHawo0G7DG5T3bZ9jx48MJRbwqt9t3\nUPBXzAFkVCY5bXUgZMolVm0qPb/q4OtabzzUN/rrpXXBnbteTeog1+udDHZXzptU\no82Tm7BKHlK1OfikwG3mnJ79oyI6yRqg65Q8qKzHU3GssdDSYGR3FdmDweUfSPt6\nTGyZSPYOA2E2NdelOF+wN2+mNuut+dZDwTAg+NoDsOJesrjRAa1InymgrASqXqMR\nD6YbZm37nJBfw/vpF0KBS3YgqNz2E0OHedgGfebDs4uHGriiBWOU1rj4vQtU7UQv\nHuSSB65Gn200aKVJWW9tVY2mRBDTMRfwjo0taCrzaWVYS8F8mxVO3Nmnun/qtusW\nmVt62ut5JTCUEHFtzYq0lBUgrZhR8Qyt8zG7PbF08/pQmfsKTNQ=\n=ATeO\n-----END PGP SIGNATURE-----", "payload": "tree 5dcb48fd295cde6f7d70575cb635b7aa99b19958\nparent ccb9cc1200e26a5f0cdaac321bd10185d91e87e4\nauthor Rune Tynan <runetynan@gmail.com> 1606443433 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1606532360 -0500\n\nApply review: use from_hir, add macro source fix.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18276b2dbd4528edd7f41a0b3345438542167723", "html_url": "https://github.com/rust-lang/rust/commit/18276b2dbd4528edd7f41a0b3345438542167723", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18276b2dbd4528edd7f41a0b3345438542167723/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccb9cc1200e26a5f0cdaac321bd10185d91e87e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccb9cc1200e26a5f0cdaac321bd10185d91e87e4", "html_url": "https://github.com/rust-lang/rust/commit/ccb9cc1200e26a5f0cdaac321bd10185d91e87e4"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "d9a3c16fb5351568cc7a176dc895f6faf357f030", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/18276b2dbd4528edd7f41a0b3345438542167723/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18276b2dbd4528edd7f41a0b3345438542167723/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=18276b2dbd4528edd7f41a0b3345438542167723", "patch": "@@ -2320,22 +2320,29 @@ impl Clean<Item> for (&hir::MacroDef<'_>, Option<Ident>) {\n         let tts = item.ast.body.inner_tokens().trees().collect::<Vec<_>>();\n         // Extract the spans of all matchers. They represent the \"interface\" of the macro.\n         let matchers = tts.chunks(4).map(|arm| arm[0].span()).collect::<Vec<_>>();\n+        let source = if item.ast.macro_rules {\n+            format!(\n+                \"macro_rules! {} {{\\n{}}}\",\n+                name,\n+                matchers\n+                    .iter()\n+                    .map(|span| { format!(\"    {} => {{ ... }};\\n\", span.to_src(cx)) })\n+                    .collect::<String>(),\n+            )\n+        } else {\n+            // This code currently assumes that there will only be one or zero matchers, as syntax\n+            // for multiple is not currently defined.\n+            format!(\n+                \"pub macro {}({}) {{\\n\\t...\\n}}\",\n+                name,\n+                matchers.iter().map(|span| span.to_src(cx)).collect::<String>(),\n+            )\n+        };\n \n-        Item::from_def_id_and_parts(\n-            cx.tcx.hir().local_def_id(item.hir_id).to_def_id(),\n+        Item::from_hir_id_and_parts(\n+            item.hir_id,\n             Some(name.clean(cx)),\n-            MacroItem(Macro {\n-                // FIXME(#76761): Make this respect `macro_rules!` vs `pub macro`\n-                source: format!(\n-                    \"macro_rules! {} {{\\n{}}}\",\n-                    name,\n-                    matchers\n-                        .iter()\n-                        .map(|span| { format!(\"    {} => {{ ... }};\\n\", span.to_src(cx)) })\n-                        .collect::<String>(),\n-                ),\n-                imported_from: None,\n-            }),\n+            MacroItem(Macro { source, imported_from: None }),\n             cx,\n         )\n     }"}]}