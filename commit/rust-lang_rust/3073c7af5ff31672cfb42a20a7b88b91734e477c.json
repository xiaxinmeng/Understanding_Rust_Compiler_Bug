{"sha": "3073c7af5ff31672cfb42a20a7b88b91734e477c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNzNjN2FmNWZmMzE2NzJjZmI0MmEyMGE3Yjg4YjkxNzM0ZTQ3N2M=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-12-06T06:48:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-06T06:48:48Z"}, "message": "Rollup merge of #56315 - weiznich:rustdoc_inline_macro_reexport, r=QuietMisdreavus\n\nRustdoc inline macro reexport\n\nFixes #56173\n\nI assume this needs to have tests? Any pointers where these need to be added?", "tree": {"sha": "6322280b02dc492d7779c3131638c5cafd5e7169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6322280b02dc492d7779c3131638c5cafd5e7169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3073c7af5ff31672cfb42a20a7b88b91734e477c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcCMZQCRBK7hj4Ov3rIwAAdHIIAFGrANVcNJuPJnbGRBuJszuS\n19nQXAc8DU7KNI7RVusmp8fptYklP555fuUrFvZ4ZZ4DdOkCMCK7ZcVr0ZzBFmlQ\nFjNw/ly4eR7Cljst/Fk4r4g15lmytcNVA/Lh9aplhHl7uLbJimvojgEO1UhARXtI\n+wetoSl0eI30sOkeamo+b7ic/AxNmAOXia3EeN6H5wvNlkORO8YftnmhlFvb9fLM\nyOPD1r9vIFbLN42vnA5g06UK0XrbOJndIrJS2tsR45jMvG/1EiE7wJRULqLSktIs\nvTS7CS5qPg8Lq9m6chAPtM/3H2Xb3PpJd2fQTOMdx41pGyYyj7on5PIHPopU7JA=\n=UJ5t\n-----END PGP SIGNATURE-----\n", "payload": "tree 6322280b02dc492d7779c3131638c5cafd5e7169\nparent 1839c144bc6db8c07945caacd449aa7f3a76cd47\nparent 956b03f7db8b6b6b73bb4b2b6e0cbb1016e08f8a\nauthor Pietro Albini <pietro@pietroalbini.org> 1544078928 +0100\ncommitter GitHub <noreply@github.com> 1544078928 +0100\n\nRollup merge of #56315 - weiznich:rustdoc_inline_macro_reexport, r=QuietMisdreavus\n\nRustdoc inline macro reexport\n\nFixes #56173\n\nI assume this needs to have tests? Any pointers where these need to be added?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3073c7af5ff31672cfb42a20a7b88b91734e477c", "html_url": "https://github.com/rust-lang/rust/commit/3073c7af5ff31672cfb42a20a7b88b91734e477c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3073c7af5ff31672cfb42a20a7b88b91734e477c/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1839c144bc6db8c07945caacd449aa7f3a76cd47", "url": "https://api.github.com/repos/rust-lang/rust/commits/1839c144bc6db8c07945caacd449aa7f3a76cd47", "html_url": "https://github.com/rust-lang/rust/commit/1839c144bc6db8c07945caacd449aa7f3a76cd47"}, {"sha": "956b03f7db8b6b6b73bb4b2b6e0cbb1016e08f8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/956b03f7db8b6b6b73bb4b2b6e0cbb1016e08f8a", "html_url": "https://github.com/rust-lang/rust/commit/956b03f7db8b6b6b73bb4b2b6e0cbb1016e08f8a"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "31adb2e0369c9f539c72465dd5ec8957649c803f", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3073c7af5ff31672cfb42a20a7b88b91734e477c/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3073c7af5ff31672cfb42a20a7b88b91734e477c/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=3073c7af5ff31672cfb42a20a7b88b91734e477c", "patch": "@@ -100,7 +100,7 @@ impl<'a, 'tcx, 'rcx, 'cstore> RustdocVisitor<'a, 'tcx, 'rcx, 'cstore> {\n                                               None);\n         // attach the crate's exported macros to the top-level module:\n         let macro_exports: Vec<_> =\n-            krate.exported_macros.iter().map(|def| self.visit_local_macro(def)).collect();\n+            krate.exported_macros.iter().map(|def| self.visit_local_macro(def, None)).collect();\n         self.module.macros.extend(macro_exports);\n         self.module.is_crate = true;\n \n@@ -376,6 +376,10 @@ impl<'a, 'tcx, 'rcx, 'cstore> RustdocVisitor<'a, 'tcx, 'rcx, 'cstore> {\n                 });\n                 true\n             }\n+            Node::MacroDef(def) if !glob => {\n+                om.macros.push(self.visit_local_macro(def, renamed));\n+                true\n+            }\n             _ => false,\n         };\n         self.view_item_stack.remove(&def_node_id);\n@@ -593,7 +597,11 @@ impl<'a, 'tcx, 'rcx, 'cstore> RustdocVisitor<'a, 'tcx, 'rcx, 'cstore> {\n     }\n \n     // convert each exported_macro into a doc item\n-    fn visit_local_macro(&self, def: &hir::MacroDef) -> Macro {\n+    fn visit_local_macro(\n+        &self,\n+        def: &hir::MacroDef,\n+        renamed: Option<ast::Name>\n+    ) -> Macro {\n         debug!(\"visit_local_macro: {}\", def.name);\n         let tts = def.body.trees().collect::<Vec<_>>();\n         // Extract the spans of all matchers. They represent the \"interface\" of the macro.\n@@ -602,7 +610,7 @@ impl<'a, 'tcx, 'rcx, 'cstore> RustdocVisitor<'a, 'tcx, 'rcx, 'cstore> {\n         Macro {\n             def_id: self.cx.tcx.hir.local_def_id(def.id),\n             attrs: def.attrs.clone(),\n-            name: def.name,\n+            name: renamed.unwrap_or(def.name),\n             whence: def.span,\n             matchers,\n             stab: self.stability(def.id),"}, {"sha": "93d55ec0798ac97d2e982dede823b98895247563", "filename": "src/test/rustdoc/inline_local/macro_by_example.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3073c7af5ff31672cfb42a20a7b88b91734e477c/src%2Ftest%2Frustdoc%2Finline_local%2Fmacro_by_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3073c7af5ff31672cfb42a20a7b88b91734e477c/src%2Ftest%2Frustdoc%2Finline_local%2Fmacro_by_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_local%2Fmacro_by_example.rs?ref=3073c7af5ff31672cfb42a20a7b88b91734e477c", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+/// docs for foo\n+#[deprecated(since = \"1.2.3\", note = \"text\")]\n+#[macro_export]\n+macro_rules! foo {\n+    ($($tt:tt)*) => {}\n+}\n+\n+// @has macro_by_example/macros/index.html\n+pub mod macros {\n+    // @!has - 'pub use foo as bar;'\n+    // @has macro_by_example/macros/macro.bar.html\n+    // @has - '//*[@class=\"docblock\"]' 'docs for foo'\n+    // @has - '//*[@class=\"stab deprecated\"]' 'Deprecated since 1.2.3: text'\n+    // @has - '//a/@href' 'macro_by_example.rs.html#15-17'\n+    #[doc(inline)]\n+    pub use foo as bar;\n+}"}]}