{"sha": "766e21c7d7f9a0469997c714787d8e244df651b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NmUyMWM3ZDdmOWEwNDY5OTk3YzcxNDc4N2Q4ZTI0NGRmNjUxYjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-05T10:08:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-05T10:08:01Z"}, "message": "Auto merge of #52121 - jebrosen:macros2_feature, r=petrochenkov\n\nMerge `proc_macro_` expansion feature gates as `proc_macro_hygiene`\n\nMerges `proc_macro_mod`, `proc_macro_expr`, `proc_macro_non_items`, and `proc_macro_gen` into a single feature: `proc_macro_hygiene`. These features are not all blocked on implementing macro hygiene *per se*, but rather on interactions with hygiene that have not been entirely resolved.", "tree": {"sha": "fde3d79aa2eb03712822e0176e8e6bab8976f468", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fde3d79aa2eb03712822e0176e8e6bab8976f468"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/766e21c7d7f9a0469997c714787d8e244df651b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/766e21c7d7f9a0469997c714787d8e244df651b3", "html_url": "https://github.com/rust-lang/rust/commit/766e21c7d7f9a0469997c714787d8e244df651b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/766e21c7d7f9a0469997c714787d8e244df651b3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61f5ca7d6419ecd22dc4c0eaf2902d7fe7db4323", "url": "https://api.github.com/repos/rust-lang/rust/commits/61f5ca7d6419ecd22dc4c0eaf2902d7fe7db4323", "html_url": "https://github.com/rust-lang/rust/commit/61f5ca7d6419ecd22dc4c0eaf2902d7fe7db4323"}, {"sha": "d3c902f3113575b134641c14a9734b5075d06b09", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c902f3113575b134641c14a9734b5075d06b09", "html_url": "https://github.com/rust-lang/rust/commit/d3c902f3113575b134641c14a9734b5075d06b09"}], "stats": {"total": 86, "additions": 42, "deletions": 44}, "files": [{"sha": "aef1113eef96c84fd0dbc742b02a667670deac4f", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -645,18 +645,18 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         let (kind, gate) = match *item {\n             Annotatable::Item(ref item) => {\n                 match item.node {\n-                    ItemKind::Mod(_) if self.cx.ecfg.proc_macro_mod() => return,\n-                    ItemKind::Mod(_) => (\"modules\", \"proc_macro_mod\"),\n+                    ItemKind::Mod(_) if self.cx.ecfg.proc_macro_hygiene() => return,\n+                    ItemKind::Mod(_) => (\"modules\", \"proc_macro_hygiene\"),\n                     _ => return,\n                 }\n             }\n             Annotatable::TraitItem(_) => return,\n             Annotatable::ImplItem(_) => return,\n             Annotatable::ForeignItem(_) => return,\n             Annotatable::Stmt(_) |\n-            Annotatable::Expr(_) if self.cx.ecfg.proc_macro_expr() => return,\n-            Annotatable::Stmt(_) => (\"statements\", \"proc_macro_expr\"),\n-            Annotatable::Expr(_) => (\"expressions\", \"proc_macro_expr\"),\n+            Annotatable::Expr(_) if self.cx.ecfg.proc_macro_hygiene() => return,\n+            Annotatable::Stmt(_) => (\"statements\", \"proc_macro_hygiene\"),\n+            Annotatable::Expr(_) => (\"expressions\", \"proc_macro_hygiene\"),\n         };\n         emit_feature_err(\n             self.cx.parse_sess,\n@@ -668,7 +668,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     }\n \n     fn gate_proc_macro_expansion(&self, span: Span, fragment: &Option<AstFragment>) {\n-        if self.cx.ecfg.proc_macro_gen() {\n+        if self.cx.ecfg.proc_macro_hygiene() {\n             return\n         }\n         let fragment = match fragment {\n@@ -691,7 +691,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n                 if let ast::ItemKind::MacroDef(_) = i.node {\n                     emit_feature_err(\n                         self.parse_sess,\n-                        \"proc_macro_gen\",\n+                        \"proc_macro_hygiene\",\n                         self.span,\n                         GateIssue::Language,\n                         &format!(\"procedural macros cannot expand to macro definitions\"),\n@@ -885,12 +885,12 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             AstFragmentKind::ImplItems => return,\n             AstFragmentKind::ForeignItems => return,\n         };\n-        if self.cx.ecfg.proc_macro_non_items() {\n+        if self.cx.ecfg.proc_macro_hygiene() {\n             return\n         }\n         emit_feature_err(\n             self.cx.parse_sess,\n-            \"proc_macro_non_items\",\n+            \"proc_macro_hygiene\",\n             span,\n             GateIssue::Language,\n             &format!(\"procedural macros cannot be expanded to {}\", kind),\n@@ -1612,10 +1612,7 @@ impl<'feat> ExpansionConfig<'feat> {\n         fn enable_custom_derive = custom_derive,\n         fn enable_format_args_nl = format_args_nl,\n         fn macros_in_extern_enabled = macros_in_extern,\n-        fn proc_macro_mod = proc_macro_mod,\n-        fn proc_macro_gen = proc_macro_gen,\n-        fn proc_macro_expr = proc_macro_expr,\n-        fn proc_macro_non_items = proc_macro_non_items,\n+        fn proc_macro_hygiene = proc_macro_hygiene,\n     }\n \n     fn enable_custom_inner_attributes(&self) -> bool {"}, {"sha": "674740a52e67942a9b6f0e2a8598312e36bfd653", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -441,10 +441,7 @@ declare_features! (\n \n     // Allows macro invocations on modules expressions and statements and\n     // procedural macros to expand to non-items.\n-    (active, proc_macro_mod, \"1.27.0\", Some(54727), None),\n-    (active, proc_macro_expr, \"1.27.0\", Some(54727), None),\n-    (active, proc_macro_non_items, \"1.27.0\", Some(54727), None),\n-    (active, proc_macro_gen, \"1.27.0\", Some(54727), None),\n+    (active, proc_macro_hygiene, \"1.30.0\", Some(54727), None),\n \n     // #[doc(alias = \"...\")]\n     (active, doc_alias, \"1.27.0\", Some(50146), None),\n@@ -541,6 +538,14 @@ declare_features! (\n      Some(\"merged into `#![feature(slice_patterns)]`\")),\n     (removed, macro_reexport, \"1.0.0\", Some(29638), None,\n      Some(\"subsumed by `pub use`\")),\n+    (removed, proc_macro_mod, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, proc_macro_expr, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, proc_macro_non_items, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, proc_macro_gen, \"1.27.0\", Some(54727), None,\n+     Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n );\n \n declare_features! ("}, {"sha": "f52c251c14d7bd4a105bee20a36f8108e84a21c1", "filename": "src/test/compile-fail-fulldeps/proc-macro/attr-invalid-exprs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattr-invalid-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattr-invalid-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattr-invalid-exprs.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -13,7 +13,7 @@\n \n //! Attributes producing expressions in invalid locations\n \n-#![feature(stmt_expr_attributes, proc_macro_expr)]\n+#![feature(stmt_expr_attributes, proc_macro_hygiene)]\n \n extern crate attr_stmt_expr;\n use attr_stmt_expr::{duplicate, no_output};"}, {"sha": "1344156b3053cabf57ef61064f3ad26dc93da025", "filename": "src/test/compile-fail-fulldeps/proc-macro/attr-stmt-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:attr-stmt-expr.rs\n // ignore-stage1\n \n-#![feature(proc_macro_expr)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate attr_stmt_expr;\n use attr_stmt_expr::{expect_let, expect_print_stmt, expect_expr, expect_print_expr};"}, {"sha": "60e533d3ea8d29f2397dd75583505509be2912ee", "filename": "src/test/compile-fail-fulldeps/proc-macro/lints_in_proc_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Flints_in_proc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Flints_in_proc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Flints_in_proc_macros.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:bang_proc_macro2.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n #![allow(unused_macros)]\n \n extern crate bang_proc_macro2;"}, {"sha": "5049a474dd215064a695fb7885d6734f9372e847", "filename": "src/test/compile-fail-fulldeps/proc-macro/proc-macro-gates.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fproc-macro-gates.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -9,11 +9,7 @@\n // except according to those terms.\n \n // aux-build:proc-macro-gates.rs\n-// gate-test-proc_macro_non_items\n-// gate-test-proc_macro_mod line\n-// gate-test-proc_macro_expr\n-// gate-test-proc_macro_mod\n-// gate-test-proc_macro_gen\n+// gate-test-proc_macro_hygiene\n \n #![feature(stmt_expr_attributes)]\n "}, {"sha": "e7545f954daab00a0378a713646f6bcd0c49b5be", "filename": "src/test/run-pass-fulldeps/auxiliary/cond_plugin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate proc_macro;\n "}, {"sha": "caf56dabf796adf00bfe288e3c9eb30ed448330d", "filename": "src/test/run-pass-fulldeps/auxiliary/hello_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fhello_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fhello_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fhello_macro.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro_non_items, proc_macro_quote)]\n+#![feature(proc_macro_hygiene, proc_macro_quote)]\n \n extern crate proc_macro;\n "}, {"sha": "847db0098fffc622bab245e248b531c5ec3c64ac", "filename": "src/test/run-pass-fulldeps/auxiliary/proc_macro_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate proc_macro;\n "}, {"sha": "d438adda151fa25360565d63634b157255a5aeec", "filename": "src/test/run-pass-fulldeps/macro-quote-cond.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-cond.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -12,7 +12,7 @@\n // aux-build:cond_plugin.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate cond_plugin;\n "}, {"sha": "f967ef56bb8f0bb1bdfb4d1d2a573793747d9a34", "filename": "src/test/run-pass-fulldeps/macro-quote-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-test.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -13,7 +13,7 @@\n // aux-build:hello_macro.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items, proc_macro_gen)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate hello_macro;\n "}, {"sha": "8a3452f24d24708c0cb94be099c038814dd23e65", "filename": "src/test/run-pass-fulldeps/proc-macro/attr-stmt-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:attr-stmt-expr.rs\n // ignore-stage1\n \n-#![feature(stmt_expr_attributes, proc_macro_expr)]\n+#![feature(stmt_expr_attributes, proc_macro_hygiene)]\n \n extern crate attr_stmt_expr;\n use attr_stmt_expr::{expect_let, expect_print_stmt, expect_expr, expect_print_expr,"}, {"sha": "77d0d9339feffe17cd382a6217d31a201e9215a1", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/count_compound_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fcount_compound_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fcount_compound_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fcount_compound_ops.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -10,7 +10,7 @@\n \n // no-prefer-dynamic\n \n-#![feature(proc_macro_non_items, proc_macro_quote)]\n+#![feature(proc_macro_hygiene, proc_macro_quote)]\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro;"}, {"sha": "551ac3863e1ab44fe25bfba1f2da9976e810f8a8", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/hygiene_example_codegen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -10,7 +10,7 @@\n \n // no-prefer-dynamic\n \n-#![feature(proc_macro_quote, proc_macro_non_items)]\n+#![feature(proc_macro_quote, proc_macro_hygiene)]\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro as proc_macro_renamed; // This does not break `quote!`"}, {"sha": "10fe015555557072fb3857eb3b348c30809e8577", "filename": "src/test/run-pass-fulldeps/proc-macro/bang-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fbang-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fbang-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fbang-macro.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:bang-macro.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate bang_macro;\n use bang_macro::rewrite;"}, {"sha": "b27c806f04717a8d55a330c539c7824135efb82d", "filename": "src/test/run-pass-fulldeps/proc-macro/call-site.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcall-site.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcall-site.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcall-site.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -13,7 +13,7 @@\n // aux-build:call-site.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate call_site;\n use call_site::*;"}, {"sha": "07ad4f288d8948f5804e4f0cc0c2992903100336", "filename": "src/test/run-pass-fulldeps/proc-macro/count_compound_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcount_compound_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcount_compound_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fcount_compound_ops.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:count_compound_ops.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate count_compound_ops;\n use count_compound_ops::count_compound_ops;"}, {"sha": "cf18bb247c7696ecafe9529af65c470e47d39cec", "filename": "src/test/run-pass-fulldeps/proc-macro/hygiene_example.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -13,7 +13,7 @@\n // aux-build:hygiene_example.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate hygiene_example;\n use hygiene_example::hello;"}, {"sha": "ccd729badebb908864ed46bd669c9ad218f45af6", "filename": "src/test/run-pass-fulldeps/proc-macro/negative-token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fnegative-token.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fnegative-token.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fnegative-token.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:negative-token.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate negative_token;\n "}, {"sha": "27e0c23561f5759bc5568ff4fd98886ab59a9e87", "filename": "src/test/run-pass-fulldeps/proc_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Frun-pass-fulldeps%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc_macro.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -12,7 +12,7 @@\n // ignore-stage1\n // ignore-cross-compile\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate proc_macro_def;\n "}, {"sha": "ff6464a7a3a70fdee854028d6a4e1c3fd54efa9b", "filename": "src/test/ui-fulldeps/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flifetimes.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:lifetimes.rs\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate lifetimes;\n "}, {"sha": "d7713f48e703b8574f95cf47b28a852ad6247b88", "filename": "src/test/ui-fulldeps/proc-macro/macro-use-bang.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fmacro-use-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fmacro-use-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fmacro-use-bang.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // compile-pass\n // aux-build:bang_proc_macro.rs\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n #[macro_use]\n extern crate bang_proc_macro;"}, {"sha": "63a95ce211d7ada864adbbe8fe6e7f592b837a3f", "filename": "src/test/ui-fulldeps/proc-macro/multispan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fmultispan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fmultispan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fmultispan.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:multispan.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate multispan;\n "}, {"sha": "7c30a8e328aa5ecb92df3fd00608daa782bac5ff", "filename": "src/test/ui-fulldeps/proc-macro/parent-source-spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fparent-source-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fparent-source-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fparent-source-spans.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:parent-source-spans.rs\n // ignore-stage1\n \n-#![feature(decl_macro, proc_macro_non_items)]\n+#![feature(decl_macro, proc_macro_hygiene)]\n \n extern crate parent_source_spans;\n "}, {"sha": "dd81b1017ebc31dfa740e1eb949e7eaba1f7e067", "filename": "src/test/ui-fulldeps/proc-macro/three-equals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fthree-equals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766e21c7d7f9a0469997c714787d8e244df651b3/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fthree-equals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fthree-equals.rs?ref=766e21c7d7f9a0469997c714787d8e244df651b3", "patch": "@@ -11,7 +11,7 @@\n // aux-build:three-equals.rs\n // ignore-stage1\n \n-#![feature(proc_macro_non_items)]\n+#![feature(proc_macro_hygiene)]\n \n extern crate three_equals;\n "}]}