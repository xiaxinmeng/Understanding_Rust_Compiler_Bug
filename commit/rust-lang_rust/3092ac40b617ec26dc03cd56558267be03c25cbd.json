{"sha": "3092ac40b617ec26dc03cd56558267be03c25cbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOTJhYzQwYjYxN2VjMjZkYzAzY2Q1NjU1ODI2N2JlMDNjMjVjYmQ=", "commit": {"author": {"name": "Cengiz Can", "email": "canc@thoughtworks.com", "date": "2017-04-18T18:42:55Z"}, "committer": {"name": "Cengiz Can", "email": "canc@thoughtworks.com", "date": "2017-04-18T18:43:22Z"}, "message": "change note for patterns", "tree": {"sha": "a3239bcc3a7cfcb758b24b14a168f9f95386e407", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3239bcc3a7cfcb758b24b14a168f9f95386e407"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3092ac40b617ec26dc03cd56558267be03c25cbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3092ac40b617ec26dc03cd56558267be03c25cbd", "html_url": "https://github.com/rust-lang/rust/commit/3092ac40b617ec26dc03cd56558267be03c25cbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3092ac40b617ec26dc03cd56558267be03c25cbd/comments", "author": null, "committer": null, "parents": [{"sha": "8b45a21bd1900fa7935fea96bdaf8583e1002832", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b45a21bd1900fa7935fea96bdaf8583e1002832", "html_url": "https://github.com/rust-lang/rust/commit/8b45a21bd1900fa7935fea96bdaf8583e1002832"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "71dff3b2bb94d0c18ea120474da98a9fcdb2cc03", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=3092ac40b617ec26dc03cd56558267be03c25cbd", "patch": "@@ -940,7 +940,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             if let Some(simple_name) = pattern.simple_name() {\n                 labels.push((pattern.span, format!(\"consider giving `{}` a type\", simple_name)));\n             } else {\n-                labels.push((pattern.span, format!(\"consider giving a type to pattern\")));\n+                labels.push((pattern.span, format!(\"consider giving the pattern a type\")));\n             }\n         }\n "}, {"sha": "a79021d3cd5d23cc55e7689208001124c90c541a", "filename": "src/test/compile-fail/issue-12187-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Ftest%2Fcompile-fail%2Fissue-12187-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Ftest%2Fcompile-fail%2Fissue-12187-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12187-1.rs?ref=3092ac40b617ec26dc03cd56558267be03c25cbd", "patch": "@@ -16,5 +16,5 @@ fn main() {\n     let &v = new();\n     //~^ ERROR type annotations needed [E0282]\n     //~| NOTE cannot infer type for `_`\n-    //~| NOTE consider giving a type to pattern\n+    //~| NOTE consider giving the pattern a type\n }"}, {"sha": "38b3c5d4e9a644edad04260d6f9c07f7b5b01b2a", "filename": "src/test/compile-fail/issue-12187-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Ftest%2Fcompile-fail%2Fissue-12187-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Ftest%2Fcompile-fail%2Fissue-12187-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12187-2.rs?ref=3092ac40b617ec26dc03cd56558267be03c25cbd", "patch": "@@ -16,5 +16,5 @@ fn main() {\n     let &v = new();\n     //~^ ERROR type annotations needed [E0282]\n     //~| NOTE cannot infer type for `_`\n-    //~| NOTE consider giving a type to pattern\n+    //~| NOTE consider giving the pattern a type\n }"}, {"sha": "ccffadebe9ee2c177ed408509ae3789ede07e7f9", "filename": "src/test/ui/type-check/cannot_infer_local_or_vec_in_tuples.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3092ac40b617ec26dc03cd56558267be03c25cbd/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr?ref=3092ac40b617ec26dc03cd56558267be03c25cbd", "patch": "@@ -4,7 +4,7 @@ error[E0282]: type annotations needed\n 12 |     let (x, ) = (vec![], );\n    |         -----    ^^^^^^ cannot infer type for `T`\n    |         |\n-   |         consider giving a type to pattern\n+   |         consider giving the pattern a type\n    |\n    = note: this error originates in a macro outside of the current crate\n "}]}