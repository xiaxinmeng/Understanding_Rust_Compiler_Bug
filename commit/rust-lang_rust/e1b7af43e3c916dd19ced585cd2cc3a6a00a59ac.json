{"sha": "e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYjdhZjQzZTNjOTE2ZGQxOWNlZDU4NWNkMmNjM2E2YTAwYTU5YWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-15T09:57:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-15T09:57:00Z"}, "message": "Merge #2254\n\n2254: Auto-upgrade some insta snapshots r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "5674794ed5d5eb7be2026d6cf2105602fa87d882", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5674794ed5d5eb7be2026d6cf2105602fa87d882"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdznZsCRBK7hj4Ov3rIwAAdHIIAK946/ud02SnrM0LulCBKupR\n9fmyOI3g/YJIU3lyoHNHxiP0G+Y9PlG3WFKO0pVGug0F6QHGZrS3PtjJTzvcf/pX\nwzRDl7x2JcfE5kFkIV8LD7rATvnuCd638FDmBxZLUeNCitAjL+8LBsile6+s0Z+9\nanpJtEaUF1yIRWUBiHoTqgnEJWDAmlA5amGpW+c+2goV3fvyVFcsRxQyg+aorFzR\nXWZqWFY8sQHQwwuQEyu4/TabJVf9XHzveWPLwMFqE0iftKVNSRa0qjD7opOobK/x\nh7SWXJWcvzSKcyto73BN9PC3QzK1G+zhmh9nicMAZmnU+4RQ+yV//UNuT83nFyk=\n=ovmt\n-----END PGP SIGNATURE-----\n", "payload": "tree 5674794ed5d5eb7be2026d6cf2105602fa87d882\nparent e05fc9455dd64c240ddc5896f739ea3842838210\nparent 3564fbb7f5fc7fc91530c441a6dacce88762fcc9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1573811820 +0000\ncommitter GitHub <noreply@github.com> 1573811820 +0000\n\nMerge #2254\n\n2254: Auto-upgrade some insta snapshots r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "html_url": "https://github.com/rust-lang/rust/commit/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e05fc9455dd64c240ddc5896f739ea3842838210", "url": "https://api.github.com/repos/rust-lang/rust/commits/e05fc9455dd64c240ddc5896f739ea3842838210", "html_url": "https://github.com/rust-lang/rust/commit/e05fc9455dd64c240ddc5896f739ea3842838210"}, {"sha": "3564fbb7f5fc7fc91530c441a6dacce88762fcc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3564fbb7f5fc7fc91530c441a6dacce88762fcc9", "html_url": "https://github.com/rust-lang/rust/commit/3564fbb7f5fc7fc91530c441a6dacce88762fcc9"}], "stats": {"total": 3239, "additions": 1643, "deletions": 1596}, "files": [{"sha": "fe9346c78327d1dd44299d963a8c4e6eb8d4db6d", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 5, "deletions": 49, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -254,7 +254,6 @@ fn test(a: u32, b: isize, c: !, d: &str) {\n     1.0f32;\n }\"#),\n         @r###\"\n-\n     [9; 10) 'a': u32\n     [17; 18) 'b': isize\n     [27; 28) 'c': !\n@@ -317,7 +316,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [15; 20) '{ 1 }': u32\n     [17; 18) '1': u32\n     [48; 53) '{ 1 }': u32\n@@ -354,7 +352,7 @@ fn test() {\n     [66; 74) 'S::foo()': i32\n     [80; 88) '<S>::foo': fn foo() -> i32\n     [80; 90) '<S>::foo()': i32\n-\"###\n+    \"###\n     );\n }\n \n@@ -409,7 +407,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [72; 154) '{     ...a.c; }': ()\n     [82; 83) 'c': C\n     [86; 87) 'C': C(usize) -> C\n@@ -443,7 +440,6 @@ fn test() {\n   E::V2;\n }\"#),\n         @r###\"\n-\n     [48; 82) '{   E:...:V2; }': ()\n     [52; 70) 'E::V1 ...d: 1 }': E\n     [67; 68) '1': u32\n@@ -471,7 +467,6 @@ fn test(a: &u32, b: &mut u32, c: *const u32, d: *mut u32) {\n }\n \"#),\n         @r###\"\n-\n     [9; 10) 'a': &u32\n     [18; 19) 'b': &mut u32\n     [31; 32) 'c': *const u32\n@@ -524,7 +519,6 @@ fn test() {\n }\n \"##),\n         @r###\"\n-\n     [11; 221) '{     ...o\"#; }': ()\n     [17; 21) '5i32': i32\n     [27; 31) '5f32': f32\n@@ -568,7 +562,6 @@ fn test(x: SomeType) {\n }\n \"#),\n         @r###\"\n-\n     [27; 28) 'x': SomeType\n     [40; 272) '{     ...lo\"; }': ()\n     [50; 51) 'b': bool\n@@ -632,7 +625,6 @@ fn test() -> &mut &f64 {\n }\n \"#),\n         @r###\"\n-\n     [14; 15) 'x': u32\n     [22; 24) '{}': ()\n     [78; 231) '{     ...t &c }': &mut &f64\n@@ -679,7 +671,6 @@ impl S {\n }\n \"#),\n         @r###\"\n-\n     [34; 38) 'self': &S\n     [40; 61) '{     ...     }': ()\n     [50; 54) 'self': &S\n@@ -719,7 +710,6 @@ fn test() -> bool {\n }\n \"#),\n         @r###\"\n-\n     [6; 7) 'x': bool\n     [22; 34) '{     0i32 }': i32\n     [28; 32) '0i32': i32\n@@ -802,7 +792,6 @@ fn test2(a1: *const A, a2: *mut A) {\n }\n \"#),\n         @r###\"\n-\n     [44; 45) 'a': A\n     [50; 213) '{     ...5.b; }': ()\n     [60; 62) 'a1': A\n@@ -970,7 +959,7 @@ fn test(a: A<i32>) {\n     [374; 375) 'B': B<A<i32>>(T) -> B<T>\n     [374; 378) 'B(a)': B<A<i32>>\n     [376; 377) 'a': A<i32>\n-\"###\n+    \"###\n     );\n }\n \n@@ -983,7 +972,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [11; 37) '{    l... {}; }': ()\n     [20; 21) 'x': ()\n     [24; 34) 'if true {}': ()\n@@ -1105,7 +1093,6 @@ fn test(a: A) {\n }\n \"#),\n         @r###\"\n-\n     [32; 36) 'self': A\n     [38; 39) 'x': u32\n     [53; 55) '{}': ()\n@@ -1142,7 +1129,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [40; 44) 'self': &str\n     [53; 55) '{}': ()\n     [69; 89) '{     ...o(); }': ()\n@@ -1166,7 +1152,6 @@ fn test(x: &str, y: isize) {\n }\n \"#),\n         @r###\"\n-\n     [9; 10) 'x': &str\n     [18; 19) 'y': isize\n     [28; 170) '{     ...d\"); }': ()\n@@ -1367,7 +1352,6 @@ fn test() {\n }\n \"#),\n     @r###\"\n-\n     [28; 79) '{     ...(1); }': ()\n     [38; 42) 'A(n)': A<i32>\n     [40; 41) 'n': &i32\n@@ -1396,7 +1380,6 @@ fn test() {\n }\n \"#),\n     @r###\"\n-\n     [11; 57) '{     ...= v; }': ()\n     [21; 22) 'v': &(i32, &i32)\n     [25; 33) '&(1, &2)': &(i32, &i32)\n@@ -1441,7 +1424,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [68; 289) '{     ...  d; }': ()\n     [78; 79) 'e': E\n     [82; 95) 'E::A { x: 3 }': E\n@@ -1488,7 +1470,6 @@ fn test(a1: A<u32>, i: i32) {\n }\n \"#),\n         @r###\"\n-\n     [36; 38) 'a1': A<u32>\n     [48; 49) 'i': i32\n     [56; 147) '{     ...3.x; }': ()\n@@ -1569,7 +1550,6 @@ fn test(a1: A<u32>, o: Option<u64>) {\n }\n \"#),\n         @r###\"\n-\n     [79; 81) 'a1': A<u32>\n     [91; 92) 'o': Option<u64>\n     [107; 244) '{     ...  }; }': ()\n@@ -1604,7 +1584,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [10; 11) 't': T\n     [21; 26) '{ t }': T\n     [23; 24) 't': T\n@@ -1652,7 +1631,6 @@ fn test() -> i128 {\n }\n \"#),\n         @r###\"\n-\n     [74; 78) 'self': A<X, Y>\n     [85; 107) '{     ...     }': X\n     [95; 99) 'self': A<X, Y>\n@@ -1706,7 +1684,6 @@ fn test(o: Option<u32>) {\n }\n \"#),\n         @r###\"\n-\n     [78; 82) 'self': &Option<T>\n     [98; 100) '{}': ()\n     [111; 112) 'o': Option<u32>\n@@ -1744,7 +1721,6 @@ fn test() -> i128 {\n }\n \"#),\n         @r###\"\n-\n     [53; 57) 'self': A<T2>\n     [65; 87) '{     ...     }': T2\n     [75; 79) 'self': A<T2>\n@@ -1921,7 +1897,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [56; 64) '{ A {} }': A\n     [58; 62) 'A {}': A\n     [126; 132) '{ 99 }': u32\n@@ -1961,7 +1936,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [64; 67) 'val': T\n     [82; 109) '{     ...     }': Gen<T>\n     [92; 103) 'Gen { val }': Gen<T>\n@@ -2129,7 +2103,6 @@ fn test(x: X) {\n }\n \"#),\n         @r###\"\n-\n     [20; 21) 'x': X\n     [26; 47) '{     ...eld; }': ()\n     [32; 33) 'x': X\n@@ -2151,7 +2124,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [11; 89) '{     ...   } }': ()\n     [17; 21) 'X {}': {unknown}\n     [27; 87) 'match ...     }': ()\n@@ -2174,7 +2146,6 @@ fn quux() {\n }\n \"#),\n         @r###\"\n-\n     [11; 41) '{     ...+ y; }': ()\n     [21; 22) 'y': i32\n     [25; 27) '92': i32\n@@ -2300,7 +2271,6 @@ fn write() {\n }\n \"#),\n         @r###\"\n-\n     [54; 139) '{     ...   } }': ()\n     [60; 137) 'match ...     }': ()\n     [66; 83) 'someth...nknown': Maybe<{unknown}>\n@@ -2322,7 +2292,6 @@ fn test_line_buffer() {\n }\n \"#),\n         @r###\"\n-\n     [23; 53) '{     ...n']; }': ()\n     [29; 50) '&[0, b...b'\\n']': &[u8;_]\n     [30; 50) '[0, b'...b'\\n']': [u8;_]\n@@ -2446,7 +2415,6 @@ fn test<R>(query_response: Canonical<QueryResponse<R>>) {\n }\n \"#),\n         @r###\"\n-\n     [92; 106) 'query_response': Canonical<QueryResponse<R>>\n     [137; 167) '{     ...lue; }': ()\n     [143; 164) '&query....value': &QueryResponse<R>\n@@ -2472,7 +2440,6 @@ pub fn main_loop() {\n }\n \"#),\n     @r###\"\n-\n     [144; 146) '{}': ()\n     [169; 198) '{     ...t(); }': ()\n     [175; 193) 'FxHash...efault': fn default<{unknown}, FxHasher>() -> HashSet<T, H>\n@@ -2518,7 +2485,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [49; 50) '0': u32\n     [80; 83) '101': u32\n     [95; 213) '{     ...NST; }': ()\n@@ -2549,7 +2515,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [29; 32) '101': u32\n     [70; 73) '101': u32\n     [85; 280) '{     ...MUT; }': ()\n@@ -2588,7 +2553,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [31; 35) 'self': &Self\n     [110; 114) 'self': &Self\n     [170; 228) '{     ...i128 }': ()\n@@ -2636,7 +2600,6 @@ mod bar_test {\n }\n \"#),\n         @r###\"\n-\n     [63; 67) 'self': &Self\n     [169; 173) 'self': &Self\n     [300; 337) '{     ...     }': ()\n@@ -2664,7 +2627,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [33; 37) 'self': &Self\n     [92; 111) '{     ...d(); }': ()\n     [98; 99) 'S': S\n@@ -2694,7 +2656,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [43; 47) 'self': &Self\n     [82; 86) 'self': &Self\n     [210; 361) '{     ..., i8 }': ()\n@@ -2725,7 +2686,6 @@ fn test() {\n }\n \"#),\n         @r###\"\n-\n     [33; 37) 'self': &Self\n     [102; 127) '{     ...d(); }': ()\n     [108; 109) 'S': S<u32>(T) -> S<T>\n@@ -3130,7 +3090,6 @@ fn test<T: Iterable<Item=u32>>() {\n }\n \"#),\n         @r###\"\n-\n     [67; 100) '{     ...own; }': ()\n     [77; 78) 'y': {unknown}\n     [90; 97) 'unknown': {unknown}\n@@ -3146,7 +3105,6 @@ const A: u32 = 1 + 1;\n static B: u64 = { let x = 1; x };\n \"#),\n         @r###\"\n-\n     [16; 17) '1': u32\n     [16; 21) '1 + 1': u32\n     [20; 21) '1': u32\n@@ -3170,7 +3128,6 @@ fn test() -> u64 {\n }\n \"#),\n         @r###\"\n-\n     [38; 87) '{     ... a.1 }': u64\n     [48; 49) 'a': S\n     [52; 53) 'S': S(i32, u64) -> S\n@@ -3225,7 +3182,6 @@ fn indexing_arrays() {\n     assert_snapshot!(\n         infer(\"fn main() { &mut [9][2]; }\"),\n         @r###\"\n-\n     [10; 26) '{ &mut...[2]; }': ()\n     [12; 23) '&mut [9][2]': &mut {unknown}\n     [17; 20) '[9]': [i32;_]\n@@ -4822,9 +4778,9 @@ fn main() {\n }\n \"#),\n         @r###\"\n-        ![0; 1) '6': i32\n-        [64; 88) '{     ...!(); }': ()\n-        [74; 75) 'x': i32\n+    ![0; 1) '6': i32\n+    [64; 88) '{     ...!(); }': ()\n+    [74; 75) 'x': i32\n     \"###\n     );\n }"}, {"sha": "4e2c497e1db85e2ef84b92a40d5916cbf0f28cf8", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -88,16 +88,16 @@ mod tests {\n                 \",\n         ),\n             @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"the_field\",\n-       \u22ee        source_range: [94; 94),\n-       \u22ee        delete: [94; 94),\n-       \u22ee        insert: \"the_field\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"the_field\",\n+                source_range: [94; 94),\n+                delete: [94; 94),\n+                insert: \"the_field\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###\n         );\n     }\n@@ -349,24 +349,24 @@ mod tests {\n             \",\n         ),\n         @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"0\",\n-       \u22ee        source_range: [75; 75),\n-       \u22ee        delete: [75; 75),\n-       \u22ee        insert: \"0\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"i32\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"1\",\n-       \u22ee        source_range: [75; 75),\n-       \u22ee        delete: [75; 75),\n-       \u22ee        insert: \"1\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"f64\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"0\",\n+                source_range: [75; 75),\n+                delete: [75; 75),\n+                insert: \"0\",\n+                kind: Field,\n+                detail: \"i32\",\n+            },\n+            CompletionItem {\n+                label: \"1\",\n+                source_range: [75; 75),\n+                delete: [75; 75),\n+                insert: \"1\",\n+                kind: Field,\n+                detail: \"f64\",\n+            },\n+        ]\n         \"###\n         );\n     }\n@@ -419,16 +419,16 @@ mod tests {\n             \",\n         ),\n         @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"the_field\",\n-       \u22ee        source_range: [106; 106),\n-       \u22ee        delete: [106; 106),\n-       \u22ee        insert: \"the_field\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"the_field\",\n+                source_range: [106; 106),\n+                delete: [106; 106),\n+                insert: \"the_field\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###\n         );\n     }\n@@ -452,15 +452,15 @@ mod tests {\n             }\n             \"###, CompletionKind::Keyword),\n         @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"await\",\n-       \u22ee        source_range: [74; 74),\n-       \u22ee        delete: [74; 74),\n-       \u22ee        insert: \"await\",\n-       \u22ee        detail: \"expr.await\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"await\",\n+                source_range: [74; 74),\n+                delete: [74; 74),\n+                insert: \"await\",\n+                detail: \"expr.await\",\n+            },\n+        ]\n         \"###\n         )\n     }"}, {"sha": "50245870658563bcda0caf8154d77e21dc7dda67", "filename": "crates/ra_ide_api/src/completion/complete_fn_param.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -70,15 +70,15 @@ mod tests {\n                 \",\n         ),\n             @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"file_id: FileId\",\n-       \u22ee        source_range: [110; 114),\n-       \u22ee        delete: [110; 114),\n-       \u22ee        insert: \"file_id: FileId\",\n-       \u22ee        lookup: \"file_id\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"file_id: FileId\",\n+                source_range: [110; 114),\n+                delete: [110; 114),\n+                insert: \"file_id: FileId\",\n+                lookup: \"file_id\",\n+            },\n+        ]\n         \"###\n         );\n     }\n@@ -94,15 +94,15 @@ mod tests {\n                 \",\n         ),\n             @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"file_id: FileId\",\n-       \u22ee        source_range: [110; 114),\n-       \u22ee        delete: [110; 114),\n-       \u22ee        insert: \"file_id: FileId\",\n-       \u22ee        lookup: \"file_id\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"file_id: FileId\",\n+                source_range: [110; 114),\n+                delete: [110; 114),\n+                insert: \"file_id: FileId\",\n+                lookup: \"file_id\",\n+            },\n+        ]\n         \"###\n         );\n     }\n@@ -121,15 +121,15 @@ mod tests {\n                 \",\n         ),\n             @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"file_id: FileId\",\n-       \u22ee        source_range: [289; 293),\n-       \u22ee        delete: [289; 293),\n-       \u22ee        insert: \"file_id: FileId\",\n-       \u22ee        lookup: \"file_id\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"file_id: FileId\",\n+                source_range: [289; 293),\n+                delete: [289; 293),\n+                insert: \"file_id: FileId\",\n+                lookup: \"file_id\",\n+            },\n+        ]\n         \"###\n         );\n     }"}, {"sha": "eb7cd9ac209a1e45c45194356457f618fcf583b4", "filename": "crates/ra_ide_api/src/completion/complete_keyword.rs", "status": "modified", "additions": 493, "deletions": 467, "changes": 960, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -131,29 +131,31 @@ mod tests {\n                 use <|>\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"crate\",\n-        source_range: [21; 21),\n-        delete: [21; 21),\n-        insert: \"crate::\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [21; 21),\n-        delete: [21; 21),\n-        insert: \"self\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"super\",\n-        source_range: [21; 21),\n-        delete: [21; 21),\n-        insert: \"super::\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"crate\",\n+                source_range: [21; 21),\n+                delete: [21; 21),\n+                insert: \"crate::\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"self\",\n+                source_range: [21; 21),\n+                delete: [21; 21),\n+                insert: \"self\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"super\",\n+                source_range: [21; 21),\n+                delete: [21; 21),\n+                insert: \"super::\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n \n         assert_debug_snapshot!(\n@@ -162,22 +164,24 @@ mod tests {\n                 use a::<|>\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [24; 24),\n-        delete: [24; 24),\n-        insert: \"self\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"super\",\n-        source_range: [24; 24),\n-        delete: [24; 24),\n-        insert: \"super::\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"self\",\n+                source_range: [24; 24),\n+                delete: [24; 24),\n+                insert: \"self\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"super\",\n+                source_range: [24; 24),\n+                delete: [24; 24),\n+                insert: \"super::\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n \n         assert_debug_snapshot!(\n@@ -186,22 +190,24 @@ mod tests {\n                 use a::{b, <|>}\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [28; 28),\n-        delete: [28; 28),\n-        insert: \"self\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"super\",\n-        source_range: [28; 28),\n-        delete: [28; 28),\n-        insert: \"super::\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"self\",\n+                source_range: [28; 28),\n+                delete: [28; 28),\n+                insert: \"self\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"super\",\n+                source_range: [28; 28),\n+                delete: [28; 28),\n+                insert: \"super::\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -215,43 +221,45 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"return;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"return;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -267,57 +275,59 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"else\",\n-        source_range: [108; 108),\n-        delete: [108; 108),\n-        insert: \"else {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"else if\",\n-        source_range: [108; 108),\n-        delete: [108; 108),\n-        insert: \"else if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [108; 108),\n-        delete: [108; 108),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [108; 108),\n-        delete: [108; 108),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [108; 108),\n-        delete: [108; 108),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [108; 108),\n-        delete: [108; 108),\n-        insert: \"return;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [108; 108),\n-        delete: [108; 108),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"else\",\n+                source_range: [108; 108),\n+                delete: [108; 108),\n+                insert: \"else {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"else if\",\n+                source_range: [108; 108),\n+                delete: [108; 108),\n+                insert: \"else if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [108; 108),\n+                delete: [108; 108),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [108; 108),\n+                delete: [108; 108),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [108; 108),\n+                delete: [108; 108),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [108; 108),\n+                delete: [108; 108),\n+                insert: \"return;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [108; 108),\n+                delete: [108; 108),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -332,43 +342,45 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [56; 56),\n-        delete: [56; 56),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [56; 56),\n-        delete: [56; 56),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [56; 56),\n-        delete: [56; 56),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [56; 56),\n-        delete: [56; 56),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [56; 56),\n-        delete: [56; 56),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [56; 56),\n+                delete: [56; 56),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [56; 56),\n+                delete: [56; 56),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [56; 56),\n+                delete: [56; 56),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [56; 56),\n+                delete: [56; 56),\n+                insert: \"return $0;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [56; 56),\n+                delete: [56; 56),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n         assert_debug_snapshot!(\n             do_keyword_completion(\n@@ -379,43 +391,45 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"return;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [49; 49),\n-        delete: [49; 49),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"return;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [49; 49),\n+                delete: [49; 49),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -431,43 +445,45 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [97; 97),\n-        delete: [97; 97),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [97; 97),\n-        delete: [97; 97),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [97; 97),\n-        delete: [97; 97),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [97; 97),\n-        delete: [97; 97),\n-        insert: \"return $0\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [97; 97),\n-        delete: [97; 97),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [97; 97),\n+                delete: [97; 97),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [97; 97),\n+                delete: [97; 97),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [97; 97),\n+                delete: [97; 97),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [97; 97),\n+                delete: [97; 97),\n+                insert: \"return $0\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [97; 97),\n+                delete: [97; 97),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -483,43 +499,45 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"return $0;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n         assert_debug_snapshot!(\n             do_keyword_completion(\n@@ -533,43 +551,45 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [95; 95),\n-        delete: [95; 95),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"return $0;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [95; 95),\n+                delete: [95; 95),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -583,57 +603,59 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"break\",\n-        source_range: [63; 63),\n-        delete: [63; 63),\n-        insert: \"break;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"continue\",\n-        source_range: [63; 63),\n-        delete: [63; 63),\n-        insert: \"continue;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [63; 63),\n-        delete: [63; 63),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [63; 63),\n-        delete: [63; 63),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [63; 63),\n-        delete: [63; 63),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [63; 63),\n-        delete: [63; 63),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [63; 63),\n-        delete: [63; 63),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"break\",\n+                source_range: [63; 63),\n+                delete: [63; 63),\n+                insert: \"break;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"continue\",\n+                source_range: [63; 63),\n+                delete: [63; 63),\n+                insert: \"continue;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [63; 63),\n+                delete: [63; 63),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [63; 63),\n+                delete: [63; 63),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [63; 63),\n+                delete: [63; 63),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [63; 63),\n+                delete: [63; 63),\n+                insert: \"return $0;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [63; 63),\n+                delete: [63; 63),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n \n         // No completion: lambda isolates control flow\n@@ -645,43 +667,45 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [68; 68),\n-        delete: [68; 68),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [68; 68),\n-        delete: [68; 68),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [68; 68),\n-        delete: [68; 68),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [68; 68),\n-        delete: [68; 68),\n-        insert: \"return $0;\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [68; 68),\n-        delete: [68; 68),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [68; 68),\n+                delete: [68; 68),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [68; 68),\n+                delete: [68; 68),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [68; 68),\n+                delete: [68; 68),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [68; 68),\n+                delete: [68; 68),\n+                insert: \"return $0;\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [68; 68),\n+                delete: [68; 68),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -699,57 +723,59 @@ mod tests {\n                 }\n                 \",\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"break\",\n-        source_range: [122; 124),\n-        delete: [122; 124),\n-        insert: \"break\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"continue\",\n-        source_range: [122; 124),\n-        delete: [122; 124),\n-        insert: \"continue\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [122; 124),\n-        delete: [122; 124),\n-        insert: \"if $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"loop\",\n-        source_range: [122; 124),\n-        delete: [122; 124),\n-        insert: \"loop {$0}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [122; 124),\n-        delete: [122; 124),\n-        insert: \"match $0 {}\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"return\",\n-        source_range: [122; 124),\n-        delete: [122; 124),\n-        insert: \"return\",\n-        kind: Keyword,\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [122; 124),\n-        delete: [122; 124),\n-        insert: \"while $0 {}\",\n-        kind: Keyword,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"break\",\n+                source_range: [122; 124),\n+                delete: [122; 124),\n+                insert: \"break\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"continue\",\n+                source_range: [122; 124),\n+                delete: [122; 124),\n+                insert: \"continue\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [122; 124),\n+                delete: [122; 124),\n+                insert: \"if $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"loop\",\n+                source_range: [122; 124),\n+                delete: [122; 124),\n+                insert: \"loop {$0}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [122; 124),\n+                delete: [122; 124),\n+                insert: \"match $0 {}\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"return\",\n+                source_range: [122; 124),\n+                delete: [122; 124),\n+                insert: \"return\",\n+                kind: Keyword,\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [122; 124),\n+                delete: [122; 124),\n+                insert: \"while $0 {}\",\n+                kind: Keyword,\n+            },\n+        ]\n+        \"###\n         )\n     }\n }"}, {"sha": "faadd1e3f4e4d0e52ea6811e1498cb6a64b2fe64", "filename": "crates/ra_ide_api/src/completion/complete_macro_in_item_position.rs", "status": "modified", "additions": 50, "deletions": 45, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -37,16 +37,18 @@ mod tests {\n                 <|>\n                 \"\n             ),\n-            @r##\"[\n-    CompletionItem {\n-        label: \"foo!\",\n-        source_range: [46; 46),\n-        delete: [46; 46),\n-        insert: \"foo!($0)\",\n-        kind: Macro,\n-        detail: \"macro_rules! foo\",\n-    },\n-]\"##\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"foo!\",\n+                source_range: [46; 46),\n+                delete: [46; 46),\n+                insert: \"foo!($0)\",\n+                kind: Macro,\n+                detail: \"macro_rules! foo\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -75,19 +77,21 @@ mod tests {\n                 <|>\n                 \"\n             ),\n-            @r##\"[\n-    CompletionItem {\n-        label: \"vec!\",\n-        source_range: [280; 280),\n-        delete: [280; 280),\n-        insert: \"vec![$0]\",\n-        kind: Macro,\n-        detail: \"macro_rules! vec\",\n-        documentation: Documentation(\n-            \"Creates a [`Vec`] containing the arguments.\\n\\n- Create a [`Vec`] containing a given list of elements:\\n\\n```\\nlet v = vec![1, 2, 3];\\nassert_eq!(v[0], 1);\\nassert_eq!(v[1], 2);\\nassert_eq!(v[2], 3);\\n```\",\n-        ),\n-    },\n-]\"##\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"vec!\",\n+                source_range: [280; 280),\n+                delete: [280; 280),\n+                insert: \"vec![$0]\",\n+                kind: Macro,\n+                detail: \"macro_rules! vec\",\n+                documentation: Documentation(\n+                    \"Creates a [`Vec`] containing the arguments.\\n\\n- Create a [`Vec`] containing a given list of elements:\\n\\n```\\nlet v = vec![1, 2, 3];\\nassert_eq!(v[0], 1);\\nassert_eq!(v[1], 2);\\nassert_eq!(v[2], 3);\\n```\",\n+                ),\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -110,28 +114,29 @@ mod tests {\n                 }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"foo!\",\n-        source_range: [163; 163),\n-        delete: [163; 163),\n-        insert: \"foo! {$0}\",\n-        kind: Macro,\n-        detail: \"macro_rules! foo\",\n-        documentation: Documentation(\n-            \"Foo\\n\\nNot call `fooo!()` `fooo!()`, or `_foo![]` `_foo![]`.\\nCall as `let _=foo!  { hello world };`\",\n-        ),\n-    },\n-    CompletionItem {\n-        label: \"main()\",\n-        source_range: [163; 163),\n-        delete: [163; 163),\n-        insert: \"main()$0\",\n-        kind: Function,\n-        lookup: \"main\",\n-        detail: \"fn main()\",\n-    },\n-]\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"foo!\",\n+                source_range: [163; 163),\n+                delete: [163; 163),\n+                insert: \"foo! {$0}\",\n+                kind: Macro,\n+                detail: \"macro_rules! foo\",\n+                documentation: Documentation(\n+                    \"Foo\\n\\nNot call `fooo!()` `fooo!()`, or `_foo![]` `_foo![]`.\\nCall as `let _=foo!  { hello world };`\",\n+                ),\n+            },\n+            CompletionItem {\n+                label: \"main()\",\n+                source_range: [163; 163),\n+                delete: [163; 163),\n+                insert: \"main()$0\",\n+                kind: Function,\n+                lookup: \"main\",\n+                detail: \"fn main()\",\n+            },\n+        ]\n         \"###\n         );\n     }"}, {"sha": "5d974cf6d56d60979c2d8137faa362407a7704a9", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 176, "deletions": 156, "changes": 332, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -152,18 +152,20 @@ mod tests {\n                 }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"my\",\n-        source_range: [27; 29),\n-        delete: [27; 29),\n-        insert: \"my\",\n-        kind: Module,\n-        documentation: Documentation(\n-            \"Some simple\\ndocs describing `mod my`.\",\n-        ),\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"my\",\n+                source_range: [27; 29),\n+                delete: [27; 29),\n+                insert: \"my\",\n+                kind: Module,\n+                documentation: Documentation(\n+                    \"Some simple\\ndocs describing `mod my`.\",\n+                ),\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -179,15 +181,17 @@ mod tests {\n                 }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [30; 30),\n-        delete: [30; 30),\n-        insert: \"Bar\",\n-        kind: Struct,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Bar\",\n+                source_range: [30; 30),\n+                delete: [30; 30),\n+                insert: \"Bar\",\n+                kind: Struct,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -203,22 +207,24 @@ mod tests {\n                 use crate::Sp<|>\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"Spam\",\n-        source_range: [11; 13),\n-        delete: [11; 13),\n-        insert: \"Spam\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [11; 13),\n-        delete: [11; 13),\n-        insert: \"foo\",\n-        kind: Module,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Spam\",\n+                source_range: [11; 13),\n+                delete: [11; 13),\n+                insert: \"Spam\",\n+                kind: Struct,\n+            },\n+            CompletionItem {\n+                label: \"foo\",\n+                source_range: [11; 13),\n+                delete: [11; 13),\n+                insert: \"foo\",\n+                kind: Module,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -234,22 +240,24 @@ mod tests {\n                 use crate::{Sp<|>};\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"Spam\",\n-        source_range: [12; 14),\n-        delete: [12; 14),\n-        insert: \"Spam\",\n-        kind: Struct,\n-    },\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [12; 14),\n-        delete: [12; 14),\n-        insert: \"foo\",\n-        kind: Module,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Spam\",\n+                source_range: [12; 14),\n+                delete: [12; 14),\n+                insert: \"Spam\",\n+                kind: Struct,\n+            },\n+            CompletionItem {\n+                label: \"foo\",\n+                source_range: [12; 14),\n+                delete: [12; 14),\n+                insert: \"foo\",\n+                kind: Module,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -269,15 +277,17 @@ mod tests {\n                 use crate::{bar::{baz::Sp<|>}};\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"Spam\",\n-        source_range: [23; 25),\n-        delete: [23; 25),\n-        insert: \"Spam\",\n-        kind: Struct,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Spam\",\n+                source_range: [23; 25),\n+                delete: [23; 25),\n+                insert: \"Spam\",\n+                kind: Struct,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -297,30 +307,32 @@ mod tests {\n                 fn foo() { let _ = E::<|> }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [116; 116),\n-        delete: [116; 116),\n-        insert: \"Bar\",\n-        kind: EnumVariant,\n-        detail: \"(i32)\",\n-        documentation: Documentation(\n-            \"Bar Variant with i32\",\n-        ),\n-    },\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [116; 116),\n-        delete: [116; 116),\n-        insert: \"Foo\",\n-        kind: EnumVariant,\n-        detail: \"()\",\n-        documentation: Documentation(\n-            \"Foo Variant\",\n-        ),\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Bar\",\n+                source_range: [116; 116),\n+                delete: [116; 116),\n+                insert: \"Bar\",\n+                kind: EnumVariant,\n+                detail: \"(i32)\",\n+                documentation: Documentation(\n+                    \"Bar Variant with i32\",\n+                ),\n+            },\n+            CompletionItem {\n+                label: \"Foo\",\n+                source_range: [116; 116),\n+                delete: [116; 116),\n+                insert: \"Foo\",\n+                kind: EnumVariant,\n+                detail: \"()\",\n+                documentation: Documentation(\n+                    \"Foo Variant\",\n+                ),\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -343,41 +355,43 @@ mod tests {\n                 fn foo() { let _ = E::<|> }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"Bar\",\n-        source_range: [180; 180),\n-        delete: [180; 180),\n-        insert: \"Bar\",\n-        kind: EnumVariant,\n-        detail: \"(i32, u32)\",\n-        documentation: Documentation(\n-            \"Bar Variant with i32 and u32\",\n-        ),\n-    },\n-    CompletionItem {\n-        label: \"Foo\",\n-        source_range: [180; 180),\n-        delete: [180; 180),\n-        insert: \"Foo\",\n-        kind: EnumVariant,\n-        detail: \"()\",\n-        documentation: Documentation(\n-            \"Foo Variant (empty)\",\n-        ),\n-    },\n-    CompletionItem {\n-        label: \"S\",\n-        source_range: [180; 180),\n-        delete: [180; 180),\n-        insert: \"S\",\n-        kind: EnumVariant,\n-        detail: \"(S)\",\n-        documentation: Documentation(\n-            \"\",\n-        ),\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Bar\",\n+                source_range: [180; 180),\n+                delete: [180; 180),\n+                insert: \"Bar\",\n+                kind: EnumVariant,\n+                detail: \"(i32, u32)\",\n+                documentation: Documentation(\n+                    \"Bar Variant with i32 and u32\",\n+                ),\n+            },\n+            CompletionItem {\n+                label: \"Foo\",\n+                source_range: [180; 180),\n+                delete: [180; 180),\n+                insert: \"Foo\",\n+                kind: EnumVariant,\n+                detail: \"()\",\n+                documentation: Documentation(\n+                    \"Foo Variant (empty)\",\n+                ),\n+            },\n+            CompletionItem {\n+                label: \"S\",\n+                source_range: [180; 180),\n+                delete: [180; 180),\n+                insert: \"S\",\n+                kind: EnumVariant,\n+                detail: \"(S)\",\n+                documentation: Documentation(\n+                    \"\",\n+                ),\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -434,19 +448,21 @@ mod tests {\n                 fn foo() { let _ = S::<|> }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"C\",\n-        source_range: [107; 107),\n-        delete: [107; 107),\n-        insert: \"C\",\n-        kind: Const,\n-        detail: \"const C: i32 = 42;\",\n-        documentation: Documentation(\n-            \"An associated const\",\n-        ),\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"C\",\n+                source_range: [107; 107),\n+                delete: [107; 107),\n+                insert: \"C\",\n+                kind: Const,\n+                detail: \"const C: i32 = 42;\",\n+                documentation: Documentation(\n+                    \"An associated const\",\n+                ),\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -467,19 +483,21 @@ mod tests {\n                 fn foo() { let _ = S::<|> }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"T\",\n-        source_range: [101; 101),\n-        delete: [101; 101),\n-        insert: \"T\",\n-        kind: TypeAlias,\n-        detail: \"type T = i32;\",\n-        documentation: Documentation(\n-            \"An associated type\",\n-        ),\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"T\",\n+                source_range: [101; 101),\n+                delete: [101; 101),\n+                insert: \"T\",\n+                kind: TypeAlias,\n+                detail: \"type T = i32;\",\n+                documentation: Documentation(\n+                    \"An associated type\",\n+                ),\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -569,15 +587,17 @@ mod tests {\n                 }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"bar\",\n-        source_range: [9; 9),\n-        delete: [9; 9),\n-        insert: \"bar\",\n-        kind: Module,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"bar\",\n+                source_range: [9; 9),\n+                delete: [9; 9),\n+                insert: \"bar\",\n+                kind: Module,\n+            },\n+        ]\n+        \"###\n         );\n     }\n "}, {"sha": "fd03b1c40586ad07fa4f83d00accddbbdd79b724", "filename": "crates/ra_ide_api/src/completion/complete_pattern.rs", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -54,36 +54,36 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"E\",\n-       \u22ee        source_range: [246; 246),\n-       \u22ee        delete: [246; 246),\n-       \u22ee        insert: \"E\",\n-       \u22ee        kind: Enum,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"X\",\n-       \u22ee        source_range: [246; 246),\n-       \u22ee        delete: [246; 246),\n-       \u22ee        insert: \"X\",\n-       \u22ee        kind: EnumVariant,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"Z\",\n-       \u22ee        source_range: [246; 246),\n-       \u22ee        delete: [246; 246),\n-       \u22ee        insert: \"Z\",\n-       \u22ee        kind: Const,\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"m\",\n-       \u22ee        source_range: [246; 246),\n-       \u22ee        delete: [246; 246),\n-       \u22ee        insert: \"m\",\n-       \u22ee        kind: Module,\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"E\",\n+                source_range: [246; 246),\n+                delete: [246; 246),\n+                insert: \"E\",\n+                kind: Enum,\n+            },\n+            CompletionItem {\n+                label: \"X\",\n+                source_range: [246; 246),\n+                delete: [246; 246),\n+                insert: \"X\",\n+                kind: EnumVariant,\n+            },\n+            CompletionItem {\n+                label: \"Z\",\n+                source_range: [246; 246),\n+                delete: [246; 246),\n+                insert: \"Z\",\n+                kind: Const,\n+            },\n+            CompletionItem {\n+                label: \"m\",\n+                source_range: [246; 246),\n+                delete: [246; 246),\n+                insert: \"m\",\n+                kind: Module,\n+            },\n+        ]\n         \"###);\n     }\n }"}, {"sha": "17b75cf7eb6c2f268eb8dd43ce493dd8eb088972", "filename": "crates/ra_ide_api/src/completion/complete_postfix.rs", "status": "modified", "additions": 152, "deletions": 146, "changes": 298, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -104,64 +104,66 @@ mod tests {\n                 }\n                 \"#,\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"box\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"Box::new(bar)\",\n-        detail: \"Box::new(expr)\",\n-    },\n-    CompletionItem {\n-        label: \"dbg\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"dbg!(bar)\",\n-        detail: \"dbg!(expr)\",\n-    },\n-    CompletionItem {\n-        label: \"if\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"if bar {$0}\",\n-        detail: \"if expr {}\",\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n-        detail: \"match expr {}\",\n-    },\n-    CompletionItem {\n-        label: \"not\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"!bar\",\n-        detail: \"!expr\",\n-    },\n-    CompletionItem {\n-        label: \"ref\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"&bar\",\n-        detail: \"&expr\",\n-    },\n-    CompletionItem {\n-        label: \"refm\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"&mut bar\",\n-        detail: \"&mut expr\",\n-    },\n-    CompletionItem {\n-        label: \"while\",\n-        source_range: [89; 89),\n-        delete: [85; 89),\n-        insert: \"while bar {\\n$0\\n}\",\n-        detail: \"while expr {}\",\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"box\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"Box::new(bar)\",\n+                detail: \"Box::new(expr)\",\n+            },\n+            CompletionItem {\n+                label: \"dbg\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"dbg!(bar)\",\n+                detail: \"dbg!(expr)\",\n+            },\n+            CompletionItem {\n+                label: \"if\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"if bar {$0}\",\n+                detail: \"if expr {}\",\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n+                detail: \"match expr {}\",\n+            },\n+            CompletionItem {\n+                label: \"not\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"!bar\",\n+                detail: \"!expr\",\n+            },\n+            CompletionItem {\n+                label: \"ref\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"&bar\",\n+                detail: \"&expr\",\n+            },\n+            CompletionItem {\n+                label: \"refm\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"&mut bar\",\n+                detail: \"&mut expr\",\n+            },\n+            CompletionItem {\n+                label: \"while\",\n+                source_range: [89; 89),\n+                delete: [85; 89),\n+                insert: \"while bar {\\n$0\\n}\",\n+                detail: \"while expr {}\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -176,50 +178,52 @@ mod tests {\n                 }\n                 \"#,\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"box\",\n-        source_range: [91; 91),\n-        delete: [87; 91),\n-        insert: \"Box::new(bar)\",\n-        detail: \"Box::new(expr)\",\n-    },\n-    CompletionItem {\n-        label: \"dbg\",\n-        source_range: [91; 91),\n-        delete: [87; 91),\n-        insert: \"dbg!(bar)\",\n-        detail: \"dbg!(expr)\",\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [91; 91),\n-        delete: [87; 91),\n-        insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n-        detail: \"match expr {}\",\n-    },\n-    CompletionItem {\n-        label: \"not\",\n-        source_range: [91; 91),\n-        delete: [87; 91),\n-        insert: \"!bar\",\n-        detail: \"!expr\",\n-    },\n-    CompletionItem {\n-        label: \"ref\",\n-        source_range: [91; 91),\n-        delete: [87; 91),\n-        insert: \"&bar\",\n-        detail: \"&expr\",\n-    },\n-    CompletionItem {\n-        label: \"refm\",\n-        source_range: [91; 91),\n-        delete: [87; 91),\n-        insert: \"&mut bar\",\n-        detail: \"&mut expr\",\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"box\",\n+                source_range: [91; 91),\n+                delete: [87; 91),\n+                insert: \"Box::new(bar)\",\n+                detail: \"Box::new(expr)\",\n+            },\n+            CompletionItem {\n+                label: \"dbg\",\n+                source_range: [91; 91),\n+                delete: [87; 91),\n+                insert: \"dbg!(bar)\",\n+                detail: \"dbg!(expr)\",\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [91; 91),\n+                delete: [87; 91),\n+                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n+                detail: \"match expr {}\",\n+            },\n+            CompletionItem {\n+                label: \"not\",\n+                source_range: [91; 91),\n+                delete: [87; 91),\n+                insert: \"!bar\",\n+                detail: \"!expr\",\n+            },\n+            CompletionItem {\n+                label: \"ref\",\n+                source_range: [91; 91),\n+                delete: [87; 91),\n+                insert: \"&bar\",\n+                detail: \"&expr\",\n+            },\n+            CompletionItem {\n+                label: \"refm\",\n+                source_range: [91; 91),\n+                delete: [87; 91),\n+                insert: \"&mut bar\",\n+                detail: \"&mut expr\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -233,50 +237,52 @@ mod tests {\n                 }\n                 \"#,\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"box\",\n-        source_range: [52; 52),\n-        delete: [49; 52),\n-        insert: \"Box::new(42)\",\n-        detail: \"Box::new(expr)\",\n-    },\n-    CompletionItem {\n-        label: \"dbg\",\n-        source_range: [52; 52),\n-        delete: [49; 52),\n-        insert: \"dbg!(42)\",\n-        detail: \"dbg!(expr)\",\n-    },\n-    CompletionItem {\n-        label: \"match\",\n-        source_range: [52; 52),\n-        delete: [49; 52),\n-        insert: \"match 42 {\\n    ${1:_} => {$0\\\\},\\n}\",\n-        detail: \"match expr {}\",\n-    },\n-    CompletionItem {\n-        label: \"not\",\n-        source_range: [52; 52),\n-        delete: [49; 52),\n-        insert: \"!42\",\n-        detail: \"!expr\",\n-    },\n-    CompletionItem {\n-        label: \"ref\",\n-        source_range: [52; 52),\n-        delete: [49; 52),\n-        insert: \"&42\",\n-        detail: \"&expr\",\n-    },\n-    CompletionItem {\n-        label: \"refm\",\n-        source_range: [52; 52),\n-        delete: [49; 52),\n-        insert: \"&mut 42\",\n-        detail: \"&mut expr\",\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"box\",\n+                source_range: [52; 52),\n+                delete: [49; 52),\n+                insert: \"Box::new(42)\",\n+                detail: \"Box::new(expr)\",\n+            },\n+            CompletionItem {\n+                label: \"dbg\",\n+                source_range: [52; 52),\n+                delete: [49; 52),\n+                insert: \"dbg!(42)\",\n+                detail: \"dbg!(expr)\",\n+            },\n+            CompletionItem {\n+                label: \"match\",\n+                source_range: [52; 52),\n+                delete: [49; 52),\n+                insert: \"match 42 {\\n    ${1:_} => {$0\\\\},\\n}\",\n+                detail: \"match expr {}\",\n+            },\n+            CompletionItem {\n+                label: \"not\",\n+                source_range: [52; 52),\n+                delete: [49; 52),\n+                insert: \"!42\",\n+                detail: \"!expr\",\n+            },\n+            CompletionItem {\n+                label: \"ref\",\n+                source_range: [52; 52),\n+                delete: [49; 52),\n+                insert: \"&42\",\n+                detail: \"&expr\",\n+            },\n+            CompletionItem {\n+                label: \"refm\",\n+                source_range: [52; 52),\n+                delete: [49; 52),\n+                insert: \"&mut 42\",\n+                detail: \"&mut expr\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n }"}, {"sha": "45a4a9738289a5324503cadaf99c7bafccca59a2", "filename": "crates/ra_ide_api/src/completion/complete_record_literal.rs", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -45,17 +45,17 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"the_field\",\n-       \u22ee        source_range: [142; 145),\n-       \u22ee        delete: [142; 145),\n-       \u22ee        insert: \"the_field\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee        deprecated: true,\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"the_field\",\n+                source_range: [142; 145),\n+                delete: [142; 145),\n+                insert: \"the_field\",\n+                kind: Field,\n+                detail: \"u32\",\n+                deprecated: true,\n+            },\n+        ]\n         \"###);\n     }\n \n@@ -70,16 +70,16 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"the_field\",\n-       \u22ee        source_range: [83; 86),\n-       \u22ee        delete: [83; 86),\n-       \u22ee        insert: \"the_field\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"the_field\",\n+                source_range: [83; 86),\n+                delete: [83; 86),\n+                insert: \"the_field\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###);\n     }\n \n@@ -96,16 +96,16 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"a\",\n-       \u22ee        source_range: [119; 119),\n-       \u22ee        delete: [119; 119),\n-       \u22ee        insert: \"a\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"a\",\n+                source_range: [119; 119),\n+                delete: [119; 119),\n+                insert: \"a\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###);\n     }\n \n@@ -122,16 +122,16 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"b\",\n-       \u22ee        source_range: [119; 119),\n-       \u22ee        delete: [119; 119),\n-       \u22ee        insert: \"b\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"b\",\n+                source_range: [119; 119),\n+                delete: [119; 119),\n+                insert: \"b\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###);\n     }\n \n@@ -147,16 +147,16 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"a\",\n-       \u22ee        source_range: [93; 93),\n-       \u22ee        delete: [93; 93),\n-       \u22ee        insert: \"a\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"a\",\n+                source_range: [93; 93),\n+                delete: [93; 93),\n+                insert: \"a\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###);\n     }\n }"}, {"sha": "aa0fd6d24f9abb0bb868dcfdb91b0afe214bbffa", "filename": "crates/ra_ide_api/src/completion/complete_record_pattern.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -44,16 +44,16 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"foo\",\n-       \u22ee        source_range: [117; 118),\n-       \u22ee        delete: [117; 118),\n-       \u22ee        insert: \"foo\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"foo\",\n+                source_range: [117; 118),\n+                delete: [117; 118),\n+                insert: \"foo\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###);\n     }\n \n@@ -73,24 +73,24 @@ mod tests {\n             \",\n         );\n         assert_debug_snapshot!(completions, @r###\"\n-       \u22ee[\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"bar\",\n-       \u22ee        source_range: [161; 161),\n-       \u22ee        delete: [161; 161),\n-       \u22ee        insert: \"bar\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"()\",\n-       \u22ee    },\n-       \u22ee    CompletionItem {\n-       \u22ee        label: \"foo\",\n-       \u22ee        source_range: [161; 161),\n-       \u22ee        delete: [161; 161),\n-       \u22ee        insert: \"foo\",\n-       \u22ee        kind: Field,\n-       \u22ee        detail: \"u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            CompletionItem {\n+                label: \"bar\",\n+                source_range: [161; 161),\n+                delete: [161; 161),\n+                insert: \"bar\",\n+                kind: Field,\n+                detail: \"()\",\n+            },\n+            CompletionItem {\n+                label: \"foo\",\n+                source_range: [161; 161),\n+                delete: [161; 161),\n+                insert: \"foo\",\n+                kind: Field,\n+                detail: \"u32\",\n+            },\n+        ]\n         \"###);\n     }\n }"}, {"sha": "8c57c907d9bd8a0a8380e18f704577e61b89bb3f", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -409,15 +409,17 @@ mod tests {\n                 // nothing here\n                 \"\n             ),\n-            @r#\"[\n-    CompletionItem {\n-        label: \"other_crate\",\n-        source_range: [4; 4),\n-        delete: [4; 4),\n-        insert: \"other_crate\",\n-        kind: Module,\n-    },\n-]\"#\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"other_crate\",\n+                source_range: [4; 4),\n+                delete: [4; 4),\n+                insert: \"other_crate\",\n+                kind: Module,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -530,23 +532,25 @@ mod tests {\n     fn completes_self_in_methods() {\n         assert_debug_snapshot!(\n             do_reference_completion(r\"impl S { fn foo(&self) { <|> } }\"),\n-            @r#\"[\n-    CompletionItem {\n-        label: \"Self\",\n-        source_range: [25; 25),\n-        delete: [25; 25),\n-        insert: \"Self\",\n-        kind: TypeParam,\n-    },\n-    CompletionItem {\n-        label: \"self\",\n-        source_range: [25; 25),\n-        delete: [25; 25),\n-        insert: \"self\",\n-        kind: Binding,\n-        detail: \"&{unknown}\",\n-    },\n-]\"#\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Self\",\n+                source_range: [25; 25),\n+                delete: [25; 25),\n+                insert: \"Self\",\n+                kind: TypeParam,\n+            },\n+            CompletionItem {\n+                label: \"self\",\n+                source_range: [25; 25),\n+                delete: [25; 25),\n+                insert: \"self\",\n+                kind: Binding,\n+                detail: \"&{unknown}\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n "}, {"sha": "1f2988b36bfce62290beedc4e3851941d28040f7", "filename": "crates/ra_ide_api/src/completion/complete_snippet.rs", "status": "modified", "additions": 39, "deletions": 35, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -52,34 +52,36 @@ mod tests {\n     fn completes_snippets_in_expressions() {\n         assert_debug_snapshot!(\n                     do_snippet_completion(r\"fn foo(x: i32) { <|> }\"),\n-        @r#\"[\n-    CompletionItem {\n-        label: \"pd\",\n-        source_range: [17; 17),\n-        delete: [17; 17),\n-        insert: \"eprintln!(\\\"$0 = {:?}\\\", $0);\",\n-        kind: Snippet,\n-    },\n-    CompletionItem {\n-        label: \"ppd\",\n-        source_range: [17; 17),\n-        delete: [17; 17),\n-        insert: \"eprintln!(\\\"$0 = {:#?}\\\", $0);\",\n-        kind: Snippet,\n-    },\n-]\"#\n+        @r###\"\n+        [\n+            CompletionItem {\n+                label: \"pd\",\n+                source_range: [17; 17),\n+                delete: [17; 17),\n+                insert: \"eprintln!(\\\"$0 = {:?}\\\", $0);\",\n+                kind: Snippet,\n+            },\n+            CompletionItem {\n+                label: \"ppd\",\n+                source_range: [17; 17),\n+                delete: [17; 17),\n+                insert: \"eprintln!(\\\"$0 = {:#?}\\\", $0);\",\n+                kind: Snippet,\n+            },\n+        ]\n+        \"###\n                 );\n     }\n \n     #[test]\n     fn should_not_complete_snippets_in_path() {\n         assert_debug_snapshot!(\n                     do_snippet_completion(r\"fn foo(x: i32) { ::foo<|> }\"),\n-        @r#\"[]\"#\n+        @\"[]\"\n                 );\n         assert_debug_snapshot!(\n                     do_snippet_completion(r\"fn foo(x: i32) { ::<|> }\"),\n-        @r#\"[]\"#\n+        @\"[]\"\n                 );\n     }\n \n@@ -94,23 +96,25 @@ mod tests {\n                 }\n                 \"\n             ),\n-            @r###\"[\n-    CompletionItem {\n-        label: \"Test function\",\n-        source_range: [78; 78),\n-        delete: [78; 78),\n-        insert: \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\",\n-        kind: Snippet,\n-        lookup: \"tfn\",\n-    },\n-    CompletionItem {\n-        label: \"pub(crate)\",\n-        source_range: [78; 78),\n-        delete: [78; 78),\n-        insert: \"pub(crate) $0\",\n-        kind: Snippet,\n-    },\n-]\"###\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"Test function\",\n+                source_range: [78; 78),\n+                delete: [78; 78),\n+                insert: \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\",\n+                kind: Snippet,\n+                lookup: \"tfn\",\n+            },\n+            CompletionItem {\n+                label: \"pub(crate)\",\n+                source_range: [78; 78),\n+                delete: [78; 78),\n+                insert: \"pub(crate) $0\",\n+                kind: Snippet,\n+            },\n+        ]\n+        \"###\n         );\n     }\n }"}, {"sha": "501b7da4e720a73492d492a28bafb0d9ac9c72d5", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 76, "deletions": 70, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -323,38 +323,38 @@ mod tests {\n                 \"#,\n             ),\n             @r###\"\n-            [\n-                CompletionItem {\n-                    label: \"main()\",\n-                    source_range: [203; 206),\n-                    delete: [203; 206),\n-                    insert: \"main()$0\",\n-                    kind: Function,\n-                    lookup: \"main\",\n-                    detail: \"fn main()\",\n-                },\n-                CompletionItem {\n-                    label: \"something_deprecated()\",\n-                    source_range: [203; 206),\n-                    delete: [203; 206),\n-                    insert: \"something_deprecated()$0\",\n-                    kind: Function,\n-                    lookup: \"something_deprecated\",\n-                    detail: \"fn something_deprecated()\",\n-                    deprecated: true,\n-                },\n-                CompletionItem {\n-                    label: \"something_else_deprecated()\",\n-                    source_range: [203; 206),\n-                    delete: [203; 206),\n-                    insert: \"something_else_deprecated()$0\",\n-                    kind: Function,\n-                    lookup: \"something_else_deprecated\",\n-                    detail: \"fn something_else_deprecated()\",\n-                    deprecated: true,\n-                },\n-            ]\n-            \"###\n+        [\n+            CompletionItem {\n+                label: \"main()\",\n+                source_range: [203; 206),\n+                delete: [203; 206),\n+                insert: \"main()$0\",\n+                kind: Function,\n+                lookup: \"main\",\n+                detail: \"fn main()\",\n+            },\n+            CompletionItem {\n+                label: \"something_deprecated()\",\n+                source_range: [203; 206),\n+                delete: [203; 206),\n+                insert: \"something_deprecated()$0\",\n+                kind: Function,\n+                lookup: \"something_deprecated\",\n+                detail: \"fn something_deprecated()\",\n+                deprecated: true,\n+            },\n+            CompletionItem {\n+                label: \"something_else_deprecated()\",\n+                source_range: [203; 206),\n+                delete: [203; 206),\n+                insert: \"something_else_deprecated()$0\",\n+                kind: Function,\n+                lookup: \"something_else_deprecated\",\n+                detail: \"fn something_else_deprecated()\",\n+                deprecated: true,\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -459,16 +459,18 @@ mod tests {\n                 use crate::m::f<|>;\n                 \"\n             ),\n-            @r#\"[\n-    CompletionItem {\n-        label: \"foo\",\n-        source_range: [40; 41),\n-        delete: [40; 41),\n-        insert: \"foo\",\n-        kind: Function,\n-        detail: \"pub fn foo()\",\n-    },\n-]\"#\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"foo\",\n+                source_range: [40; 41),\n+                delete: [40; 41),\n+                insert: \"foo\",\n+                kind: Function,\n+                detail: \"pub fn foo()\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -484,24 +486,26 @@ mod tests {\n                 }\n                 \"\n             ),\n-            @r#\"[\n-    CompletionItem {\n-        label: \"frobnicate\",\n-        source_range: [35; 39),\n-        delete: [35; 39),\n-        insert: \"frobnicate\",\n-        kind: Function,\n-        detail: \"fn frobnicate()\",\n-    },\n-    CompletionItem {\n-        label: \"main\",\n-        source_range: [35; 39),\n-        delete: [35; 39),\n-        insert: \"main\",\n-        kind: Function,\n-        detail: \"fn main()\",\n-    },\n-]\"#\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"frobnicate\",\n+                source_range: [35; 39),\n+                delete: [35; 39),\n+                insert: \"frobnicate\",\n+                kind: Function,\n+                detail: \"fn frobnicate()\",\n+            },\n+            CompletionItem {\n+                label: \"main\",\n+                source_range: [35; 39),\n+                delete: [35; 39),\n+                insert: \"main\",\n+                kind: Function,\n+                detail: \"fn main()\",\n+            },\n+        ]\n+        \"###\n         );\n         assert_debug_snapshot!(\n             do_reference_completion(\n@@ -514,16 +518,18 @@ mod tests {\n                 }\n                 \"\n             ),\n-            @r#\"[\n-    CompletionItem {\n-        label: \"new\",\n-        source_range: [67; 69),\n-        delete: [67; 69),\n-        insert: \"new\",\n-        kind: Function,\n-        detail: \"fn new() -> Foo\",\n-    },\n-]\"#\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"new\",\n+                source_range: [67; 69),\n+                delete: [67; 69),\n+                insert: \"new\",\n+                kind: Function,\n+                detail: \"fn new() -> Foo\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n "}, {"sha": "e52ffefb36c9ff7c3359083cb39e63af9e7e578f", "filename": "crates/ra_ide_api/src/diagnostics.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -526,28 +526,28 @@ mod tests {\n         let (analysis, file_id) = single_file(\"mod foo;\");\n         let diagnostics = analysis.diagnostics(file_id).unwrap();\n         assert_debug_snapshot!(diagnostics, @r###\"\n-       \u22ee[\n-       \u22ee    Diagnostic {\n-       \u22ee        message: \"unresolved module\",\n-       \u22ee        range: [0; 8),\n-       \u22ee        fix: Some(\n-       \u22ee            SourceChange {\n-       \u22ee                label: \"create module\",\n-       \u22ee                source_file_edits: [],\n-       \u22ee                file_system_edits: [\n-       \u22ee                    CreateFile {\n-       \u22ee                        source_root: SourceRootId(\n-       \u22ee                            0,\n-       \u22ee                        ),\n-       \u22ee                        path: \"foo.rs\",\n-       \u22ee                    },\n-       \u22ee                ],\n-       \u22ee                cursor_position: None,\n-       \u22ee            },\n-       \u22ee        ),\n-       \u22ee        severity: Error,\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            Diagnostic {\n+                message: \"unresolved module\",\n+                range: [0; 8),\n+                fix: Some(\n+                    SourceChange {\n+                        label: \"create module\",\n+                        source_file_edits: [],\n+                        file_system_edits: [\n+                            CreateFile {\n+                                source_root: SourceRootId(\n+                                    0,\n+                                ),\n+                                path: \"foo.rs\",\n+                            },\n+                        ],\n+                        cursor_position: None,\n+                    },\n+                ),\n+                severity: Error,\n+            },\n+        ]\n         \"###);\n     }\n "}, {"sha": "a80d65ac714f180b518e86ba1459d7e91d6bca98", "filename": "crates/ra_ide_api/src/display/structure.rs", "status": "modified", "additions": 187, "deletions": 185, "changes": 372, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -209,191 +209,193 @@ fn very_obsolete() {}\n         .unwrap();\n         let structure = file_structure(&file);\n         assert_debug_snapshot!(structure,\n-        @r#\"[\n-    StructureNode {\n-        parent: None,\n-        label: \"Foo\",\n-        navigation_range: [8; 11),\n-        node_range: [1; 26),\n-        kind: STRUCT_DEF,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            0,\n-        ),\n-        label: \"x\",\n-        navigation_range: [18; 19),\n-        node_range: [18; 24),\n-        kind: RECORD_FIELD_DEF,\n-        detail: Some(\n-            \"i32\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"m\",\n-        navigation_range: [32; 33),\n-        node_range: [28; 158),\n-        kind: MODULE,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            2,\n-        ),\n-        label: \"bar1\",\n-        navigation_range: [43; 47),\n-        node_range: [40; 52),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn()\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            2,\n-        ),\n-        label: \"bar2\",\n-        navigation_range: [60; 64),\n-        node_range: [57; 81),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn<T>(t: T) -> T\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            2,\n-        ),\n-        label: \"bar3\",\n-        navigation_range: [89; 93),\n-        node_range: [86; 156),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn<A, B>(a: A, b: B) -> Vec< u32 >\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"E\",\n-        navigation_range: [165; 166),\n-        node_range: [160; 180),\n-        kind: ENUM_DEF,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            6,\n-        ),\n-        label: \"X\",\n-        navigation_range: [169; 170),\n-        node_range: [169; 170),\n-        kind: ENUM_VARIANT,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: Some(\n-            6,\n-        ),\n-        label: \"Y\",\n-        navigation_range: [172; 173),\n-        node_range: [172; 178),\n-        kind: ENUM_VARIANT,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"T\",\n-        navigation_range: [186; 187),\n-        node_range: [181; 193),\n-        kind: TYPE_ALIAS_DEF,\n-        detail: Some(\n-            \"()\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"S\",\n-        navigation_range: [201; 202),\n-        node_range: [194; 213),\n-        kind: STATIC_DEF,\n-        detail: Some(\n-            \"i32\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"C\",\n-        navigation_range: [220; 221),\n-        node_range: [214; 232),\n-        kind: CONST_DEF,\n-        detail: Some(\n-            \"i32\",\n-        ),\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"impl E\",\n-        navigation_range: [239; 240),\n-        node_range: [234; 243),\n-        kind: IMPL_BLOCK,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"impl fmt::Debug for E\",\n-        navigation_range: [265; 266),\n-        node_range: [245; 269),\n-        kind: IMPL_BLOCK,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"mc\",\n-        navigation_range: [284; 286),\n-        node_range: [271; 303),\n-        kind: MACRO_CALL,\n-        detail: None,\n-        deprecated: false,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"obsolete\",\n-        navigation_range: [322; 330),\n-        node_range: [305; 335),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn()\",\n-        ),\n-        deprecated: true,\n-    },\n-    StructureNode {\n-        parent: None,\n-        label: \"very_obsolete\",\n-        navigation_range: [375; 388),\n-        node_range: [337; 393),\n-        kind: FN_DEF,\n-        detail: Some(\n-            \"fn()\",\n-        ),\n-        deprecated: true,\n-    },\n-]\"#\n+        @r###\"\n+        [\n+            StructureNode {\n+                parent: None,\n+                label: \"Foo\",\n+                navigation_range: [8; 11),\n+                node_range: [1; 26),\n+                kind: STRUCT_DEF,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: Some(\n+                    0,\n+                ),\n+                label: \"x\",\n+                navigation_range: [18; 19),\n+                node_range: [18; 24),\n+                kind: RECORD_FIELD_DEF,\n+                detail: Some(\n+                    \"i32\",\n+                ),\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"m\",\n+                navigation_range: [32; 33),\n+                node_range: [28; 158),\n+                kind: MODULE,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: Some(\n+                    2,\n+                ),\n+                label: \"bar1\",\n+                navigation_range: [43; 47),\n+                node_range: [40; 52),\n+                kind: FN_DEF,\n+                detail: Some(\n+                    \"fn()\",\n+                ),\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: Some(\n+                    2,\n+                ),\n+                label: \"bar2\",\n+                navigation_range: [60; 64),\n+                node_range: [57; 81),\n+                kind: FN_DEF,\n+                detail: Some(\n+                    \"fn<T>(t: T) -> T\",\n+                ),\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: Some(\n+                    2,\n+                ),\n+                label: \"bar3\",\n+                navigation_range: [89; 93),\n+                node_range: [86; 156),\n+                kind: FN_DEF,\n+                detail: Some(\n+                    \"fn<A, B>(a: A, b: B) -> Vec< u32 >\",\n+                ),\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"E\",\n+                navigation_range: [165; 166),\n+                node_range: [160; 180),\n+                kind: ENUM_DEF,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: Some(\n+                    6,\n+                ),\n+                label: \"X\",\n+                navigation_range: [169; 170),\n+                node_range: [169; 170),\n+                kind: ENUM_VARIANT,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: Some(\n+                    6,\n+                ),\n+                label: \"Y\",\n+                navigation_range: [172; 173),\n+                node_range: [172; 178),\n+                kind: ENUM_VARIANT,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"T\",\n+                navigation_range: [186; 187),\n+                node_range: [181; 193),\n+                kind: TYPE_ALIAS_DEF,\n+                detail: Some(\n+                    \"()\",\n+                ),\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"S\",\n+                navigation_range: [201; 202),\n+                node_range: [194; 213),\n+                kind: STATIC_DEF,\n+                detail: Some(\n+                    \"i32\",\n+                ),\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"C\",\n+                navigation_range: [220; 221),\n+                node_range: [214; 232),\n+                kind: CONST_DEF,\n+                detail: Some(\n+                    \"i32\",\n+                ),\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"impl E\",\n+                navigation_range: [239; 240),\n+                node_range: [234; 243),\n+                kind: IMPL_BLOCK,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"impl fmt::Debug for E\",\n+                navigation_range: [265; 266),\n+                node_range: [245; 269),\n+                kind: IMPL_BLOCK,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"mc\",\n+                navigation_range: [284; 286),\n+                node_range: [271; 303),\n+                kind: MACRO_CALL,\n+                detail: None,\n+                deprecated: false,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"obsolete\",\n+                navigation_range: [322; 330),\n+                node_range: [305; 335),\n+                kind: FN_DEF,\n+                detail: Some(\n+                    \"fn()\",\n+                ),\n+                deprecated: true,\n+            },\n+            StructureNode {\n+                parent: None,\n+                label: \"very_obsolete\",\n+                navigation_range: [375; 388),\n+                node_range: [337; 393),\n+                kind: FN_DEF,\n+                detail: Some(\n+                    \"fn()\",\n+                ),\n+                deprecated: true,\n+            },\n+        ]\n+        \"###\n                 );\n     }\n }"}, {"sha": "2ff10b89a850937e47b4702a925ec05aafce8641", "filename": "crates/ra_ide_api/src/inlay_hints.rs", "status": "modified", "additions": 162, "deletions": 152, "changes": 314, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -214,58 +214,60 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n-    InlayHint {\n-        range: [193; 197),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [236; 244),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [275; 279),\n-        kind: TypeHint,\n-        label: \"&str\",\n-    },\n-    InlayHint {\n-        range: [539; 543),\n-        kind: TypeHint,\n-        label: \"(i32, char)\",\n-    },\n-    InlayHint {\n-        range: [566; 567),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [570; 571),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [573; 574),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [584; 585),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [577; 578),\n-        kind: TypeHint,\n-        label: \"f64\",\n-    },\n-    InlayHint {\n-        range: [580; 581),\n-        kind: TypeHint,\n-        label: \"f64\",\n-    },\n-]\"#\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n+        [\n+            InlayHint {\n+                range: [193; 197),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [236; 244),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [275; 279),\n+                kind: TypeHint,\n+                label: \"&str\",\n+            },\n+            InlayHint {\n+                range: [539; 543),\n+                kind: TypeHint,\n+                label: \"(i32, char)\",\n+            },\n+            InlayHint {\n+                range: [566; 567),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [570; 571),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [573; 574),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [584; 585),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [577; 578),\n+                kind: TypeHint,\n+                label: \"f64\",\n+            },\n+            InlayHint {\n+                range: [580; 581),\n+                kind: TypeHint,\n+                label: \"f64\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -281,18 +283,20 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n-    InlayHint {\n-        range: [21; 30),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [57; 66),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-]\"#\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n+        [\n+            InlayHint {\n+                range: [21; 30),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [57; 66),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -308,18 +312,20 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n-    InlayHint {\n-        range: [21; 30),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-    InlayHint {\n-        range: [44; 53),\n-        kind: TypeHint,\n-        label: \"i32\",\n-    },\n-]\"#\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n+        [\n+            InlayHint {\n+                range: [21; 30),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+            InlayHint {\n+                range: [44; 53),\n+                kind: TypeHint,\n+                label: \"i32\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -354,33 +360,35 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n-    InlayHint {\n-        range: [166; 170),\n-        kind: TypeHint,\n-        label: \"CustomOption<Test>\",\n-    },\n-    InlayHint {\n-        range: [334; 338),\n-        kind: TypeHint,\n-        label: \"&Test\",\n-    },\n-    InlayHint {\n-        range: [389; 390),\n-        kind: TypeHint,\n-        label: \"&CustomOption<u32>\",\n-    },\n-    InlayHint {\n-        range: [392; 393),\n-        kind: TypeHint,\n-        label: \"&u8\",\n-    },\n-    InlayHint {\n-        range: [531; 532),\n-        kind: TypeHint,\n-        label: \"&u32\",\n-    },\n-]\"#\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n+        [\n+            InlayHint {\n+                range: [166; 170),\n+                kind: TypeHint,\n+                label: \"CustomOption<Test>\",\n+            },\n+            InlayHint {\n+                range: [334; 338),\n+                kind: TypeHint,\n+                label: \"&Test\",\n+            },\n+            InlayHint {\n+                range: [389; 390),\n+                kind: TypeHint,\n+                label: \"&CustomOption<u32>\",\n+            },\n+            InlayHint {\n+                range: [392; 393),\n+                kind: TypeHint,\n+                label: \"&u8\",\n+            },\n+            InlayHint {\n+                range: [531; 532),\n+                kind: TypeHint,\n+                label: \"&u32\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n \n@@ -416,33 +424,33 @@ fn main() {\n         );\n \n         assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n-       \u22ee[\n-       \u22ee    InlayHint {\n-       \u22ee        range: [166; 170),\n-       \u22ee        kind: TypeHint,\n-       \u22ee        label: \"CustomOption<Test>\",\n-       \u22ee    },\n-       \u22ee    InlayHint {\n-       \u22ee        range: [343; 347),\n-       \u22ee        kind: TypeHint,\n-       \u22ee        label: \"&Test\",\n-       \u22ee    },\n-       \u22ee    InlayHint {\n-       \u22ee        range: [401; 402),\n-       \u22ee        kind: TypeHint,\n-       \u22ee        label: \"&CustomOption<u32>\",\n-       \u22ee    },\n-       \u22ee    InlayHint {\n-       \u22ee        range: [404; 405),\n-       \u22ee        kind: TypeHint,\n-       \u22ee        label: \"&u8\",\n-       \u22ee    },\n-       \u22ee    InlayHint {\n-       \u22ee        range: [549; 550),\n-       \u22ee        kind: TypeHint,\n-       \u22ee        label: \"&u32\",\n-       \u22ee    },\n-       \u22ee]\n+        [\n+            InlayHint {\n+                range: [166; 170),\n+                kind: TypeHint,\n+                label: \"CustomOption<Test>\",\n+            },\n+            InlayHint {\n+                range: [343; 347),\n+                kind: TypeHint,\n+                label: \"&Test\",\n+            },\n+            InlayHint {\n+                range: [401; 402),\n+                kind: TypeHint,\n+                label: \"&CustomOption<u32>\",\n+            },\n+            InlayHint {\n+                range: [404; 405),\n+                kind: TypeHint,\n+                label: \"&u8\",\n+            },\n+            InlayHint {\n+                range: [549; 550),\n+                kind: TypeHint,\n+                label: \"&u32\",\n+            },\n+        ]\n         \"###\n         );\n     }\n@@ -478,28 +486,30 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n-    InlayHint {\n-        range: [311; 315),\n-        kind: TypeHint,\n-        label: \"Test\",\n-    },\n-    InlayHint {\n-        range: [358; 359),\n-        kind: TypeHint,\n-        label: \"CustomOption<u32>\",\n-    },\n-    InlayHint {\n-        range: [361; 362),\n-        kind: TypeHint,\n-        label: \"u8\",\n-    },\n-    InlayHint {\n-        range: [484; 485),\n-        kind: TypeHint,\n-        label: \"u32\",\n-    },\n-]\"#\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n+        [\n+            InlayHint {\n+                range: [311; 315),\n+                kind: TypeHint,\n+                label: \"Test\",\n+            },\n+            InlayHint {\n+                range: [358; 359),\n+                kind: TypeHint,\n+                label: \"CustomOption<u32>\",\n+            },\n+            InlayHint {\n+                range: [361; 362),\n+                kind: TypeHint,\n+                label: \"u8\",\n+            },\n+            InlayHint {\n+                range: [484; 485),\n+                kind: TypeHint,\n+                label: \"u32\",\n+            },\n+        ]\n+        \"###\n         );\n     }\n }"}, {"sha": "366ac8048606025c2abccc84eed7775cb385fa33", "filename": "crates/ra_ide_api/src/runnables.rs", "status": "modified", "additions": 68, "deletions": 60, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs?ref=e1b7af43e3c916dd19ced585cd2cc3a6a00a59ac", "patch": "@@ -97,24 +97,26 @@ mod tests {\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n         assert_debug_snapshot!(&runnables,\n-        @r#\"[\n-    Runnable {\n-        range: [1; 21),\n-        kind: Bin,\n-    },\n-    Runnable {\n-        range: [22; 46),\n-        kind: Test {\n-            name: \"test_foo\",\n-        },\n-    },\n-    Runnable {\n-        range: [47; 81),\n-        kind: Test {\n-            name: \"test_foo\",\n-        },\n-    },\n-]\"#\n+        @r###\"\n+        [\n+            Runnable {\n+                range: [1; 21),\n+                kind: Bin,\n+            },\n+            Runnable {\n+                range: [22; 46),\n+                kind: Test {\n+                    name: \"test_foo\",\n+                },\n+            },\n+            Runnable {\n+                range: [47; 81),\n+                kind: Test {\n+                    name: \"test_foo\",\n+                },\n+            },\n+        ]\n+        \"###\n                 );\n     }\n \n@@ -132,20 +134,22 @@ mod tests {\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n         assert_debug_snapshot!(&runnables,\n-        @r#\"[\n-    Runnable {\n-        range: [1; 59),\n-        kind: TestMod {\n-            path: \"test_mod\",\n-        },\n-    },\n-    Runnable {\n-        range: [28; 57),\n-        kind: Test {\n-            name: \"test_foo1\",\n-        },\n-    },\n-]\"#\n+        @r###\"\n+        [\n+            Runnable {\n+                range: [1; 59),\n+                kind: TestMod {\n+                    path: \"test_mod\",\n+                },\n+            },\n+            Runnable {\n+                range: [28; 57),\n+                kind: Test {\n+                    name: \"test_foo1\",\n+                },\n+            },\n+        ]\n+        \"###\n                 );\n     }\n \n@@ -165,20 +169,22 @@ mod tests {\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n         assert_debug_snapshot!(&runnables,\n-        @r#\"[\n-    Runnable {\n-        range: [23; 85),\n-        kind: TestMod {\n-            path: \"foo::test_mod\",\n-        },\n-    },\n-    Runnable {\n-        range: [46; 79),\n-        kind: Test {\n-            name: \"test_foo1\",\n-        },\n-    },\n-]\"#\n+        @r###\"\n+        [\n+            Runnable {\n+                range: [23; 85),\n+                kind: TestMod {\n+                    path: \"foo::test_mod\",\n+                },\n+            },\n+            Runnable {\n+                range: [46; 79),\n+                kind: Test {\n+                    name: \"test_foo1\",\n+                },\n+            },\n+        ]\n+        \"###\n                 );\n     }\n \n@@ -200,20 +206,22 @@ mod tests {\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n         assert_debug_snapshot!(&runnables,\n-        @r#\"[\n-    Runnable {\n-        range: [41; 115),\n-        kind: TestMod {\n-            path: \"foo::bar::test_mod\",\n-        },\n-    },\n-    Runnable {\n-        range: [68; 105),\n-        kind: Test {\n-            name: \"test_foo1\",\n-        },\n-    },\n-]\"#\n+        @r###\"\n+        [\n+            Runnable {\n+                range: [41; 115),\n+                kind: TestMod {\n+                    path: \"foo::bar::test_mod\",\n+                },\n+            },\n+            Runnable {\n+                range: [68; 105),\n+                kind: Test {\n+                    name: \"test_foo1\",\n+                },\n+            },\n+        ]\n+        \"###\n                 );\n     }\n "}]}