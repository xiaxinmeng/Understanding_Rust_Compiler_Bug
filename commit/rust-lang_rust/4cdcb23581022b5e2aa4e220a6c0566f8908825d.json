{"sha": "4cdcb23581022b5e2aa4e220a6c0566f8908825d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZGNiMjM1ODEwMjJiNWUyYWE0ZTIyMGE2YzA1NjZmODkwODgyNWQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2018-08-17T15:23:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-17T15:23:42Z"}, "message": "Rollup merge of #53406 - estebank:to_string-to_string, r=michaelwoerister\n\nDo not suggest conversion method that is already there\n\nFix #53348.", "tree": {"sha": "2720d647f24ba66db78618a511ed0edf5a721914", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2720d647f24ba66db78618a511ed0edf5a721914"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cdcb23581022b5e2aa4e220a6c0566f8908825d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbduh+CRBK7hj4Ov3rIwAAdHIIAHTl9R0kaDo//A1bQjv6wP7x\nDN4LKxiOx5e9f6+KyUIHpIaU9jrpUGImvsR117dYjPCp+F4BOVMQCpmecgkEBBUu\nepvmTvyiJ/pPvgAdbY7siMCTLiirEhxuvwhzPmRXIKJKuLz6Q6GKZJDGpJkscSRb\nTzzs0n+D3vcXDPRSojvgIgEAFLj3fn7LtvCrhas8oN6X1lW3SL3dZZCzoZlznvtd\njZ2j6IQioacUxFI419Yj1MV0B9Zj4gaQCmg7Qi3H2eyecdMN6k+P3GbwYwcjf5uR\n9STASRt4t8CtsTwREsR66O/EYz7HGEXP/0ELYu9D0ocAfSQgJ9Tplzr4cBykVJA=\n=NFnK\n-----END PGP SIGNATURE-----\n", "payload": "tree 2720d647f24ba66db78618a511ed0edf5a721914\nparent f0764433f7551afe4ba29c409abad48e121ab69f\nparent 5a0a38a46f325512f00809ba5406c1fd6b3dae49\nauthor Corey Farwell <coreyf@rwell.org> 1534519422 -0700\ncommitter GitHub <noreply@github.com> 1534519422 -0700\n\nRollup merge of #53406 - estebank:to_string-to_string, r=michaelwoerister\n\nDo not suggest conversion method that is already there\n\nFix #53348.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cdcb23581022b5e2aa4e220a6c0566f8908825d", "html_url": "https://github.com/rust-lang/rust/commit/4cdcb23581022b5e2aa4e220a6c0566f8908825d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cdcb23581022b5e2aa4e220a6c0566f8908825d/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0764433f7551afe4ba29c409abad48e121ab69f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0764433f7551afe4ba29c409abad48e121ab69f", "html_url": "https://github.com/rust-lang/rust/commit/f0764433f7551afe4ba29c409abad48e121ab69f"}, {"sha": "5a0a38a46f325512f00809ba5406c1fd6b3dae49", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a0a38a46f325512f00809ba5406c1fd6b3dae49", "html_url": "https://github.com/rust-lang/rust/commit/5a0a38a46f325512f00809ba5406c1fd6b3dae49"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "4fac11189a40004951629cd2c9e344247a677344", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4cdcb23581022b5e2aa4e220a6c0566f8908825d/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cdcb23581022b5e2aa4e220a6c0566f8908825d/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4cdcb23581022b5e2aa4e220a6c0566f8908825d", "patch": "@@ -4629,8 +4629,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             let methods = self.get_conversion_methods(expr.span, expected, found);\n             if let Ok(expr_text) = self.sess().codemap().span_to_snippet(expr.span) {\n                 let suggestions = iter::repeat(expr_text).zip(methods.iter())\n-                    .map(|(receiver, method)| format!(\"{}.{}()\", receiver, method.ident))\n-                    .collect::<Vec<_>>();\n+                    .filter_map(|(receiver, method)| {\n+                        let method_call = format!(\".{}()\", method.ident);\n+                        if receiver.ends_with(&method_call) {\n+                            None  // do not suggest code that is already there (#53348)\n+                        } else {\n+                            Some(format!(\"{}{}\", receiver, method_call))\n+                        }\n+                    }) .collect::<Vec<_>>();\n                 if !suggestions.is_empty() {\n                     err.span_suggestions(expr.span, \"try using a conversion method\", suggestions);\n                 }"}, {"sha": "46ab07dad6e476cf45428417235b447ac8170ff5", "filename": "src/test/ui/issues/issue-53348.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4cdcb23581022b5e2aa4e220a6c0566f8908825d/src%2Ftest%2Fui%2Fissues%2Fissue-53348.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cdcb23581022b5e2aa4e220a6c0566f8908825d/src%2Ftest%2Fui%2Fissues%2Fissue-53348.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53348.rs?ref=4cdcb23581022b5e2aa4e220a6c0566f8908825d", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let mut v = vec![\"hello\", \"this\", \"is\", \"a\", \"test\"];\n+\n+    let v2 = Vec::new();\n+\n+    v.into_iter().map(|s|s.to_owned()).collect::<Vec<_>>();\n+\n+    let mut a = String::new();\n+    for i in v {\n+        a = *i.to_string();\n+        //~^ ERROR mismatched types\n+        //~| NOTE expected struct `std::string::String`, found str\n+        //~| NOTE expected type\n+        v2.push(a);\n+    }\n+}"}, {"sha": "9aab4928ffa5733d4229a07be1c86a9e6ac67afe", "filename": "src/test/ui/issues/issue-53348.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4cdcb23581022b5e2aa4e220a6c0566f8908825d/src%2Ftest%2Fui%2Fissues%2Fissue-53348.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4cdcb23581022b5e2aa4e220a6c0566f8908825d/src%2Ftest%2Fui%2Fissues%2Fissue-53348.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53348.stderr?ref=4cdcb23581022b5e2aa4e220a6c0566f8908825d", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-53348.rs:20:13\n+   |\n+LL |         a = *i.to_string();\n+   |             ^^^^^^^^^^^^^^ expected struct `std::string::String`, found str\n+   |\n+   = note: expected type `std::string::String`\n+              found type `str`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}