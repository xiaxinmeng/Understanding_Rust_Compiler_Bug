{"sha": "8b041cd8f99ba27393d857623f4e9ee502fed29d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMDQxY2Q4Zjk5YmEyNzM5M2Q4NTc2MjNmNGU5ZWU1MDJmZWQyOWQ=", "commit": {"author": {"name": "Daiki Ihara", "email": "sasurau4@gmail.com", "date": "2021-01-15T13:33:51Z"}, "committer": {"name": "Daiki Ihara", "email": "sasurau4@gmail.com", "date": "2021-01-18T12:57:15Z"}, "message": "Add test case for suggestion E0283", "tree": {"sha": "cda0c2f1550fb9e0ed04ebebb4c2559b93f1350e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cda0c2f1550fb9e0ed04ebebb4c2559b93f1350e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b041cd8f99ba27393d857623f4e9ee502fed29d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b041cd8f99ba27393d857623f4e9ee502fed29d", "html_url": "https://github.com/rust-lang/rust/commit/8b041cd8f99ba27393d857623f4e9ee502fed29d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b041cd8f99ba27393d857623f4e9ee502fed29d/comments", "author": {"login": "sasurau4", "id": 13580199, "node_id": "MDQ6VXNlcjEzNTgwMTk5", "avatar_url": "https://avatars.githubusercontent.com/u/13580199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasurau4", "html_url": "https://github.com/sasurau4", "followers_url": "https://api.github.com/users/sasurau4/followers", "following_url": "https://api.github.com/users/sasurau4/following{/other_user}", "gists_url": "https://api.github.com/users/sasurau4/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasurau4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasurau4/subscriptions", "organizations_url": "https://api.github.com/users/sasurau4/orgs", "repos_url": "https://api.github.com/users/sasurau4/repos", "events_url": "https://api.github.com/users/sasurau4/events{/privacy}", "received_events_url": "https://api.github.com/users/sasurau4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sasurau4", "id": 13580199, "node_id": "MDQ6VXNlcjEzNTgwMTk5", "avatar_url": "https://avatars.githubusercontent.com/u/13580199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasurau4", "html_url": "https://github.com/sasurau4", "followers_url": "https://api.github.com/users/sasurau4/followers", "following_url": "https://api.github.com/users/sasurau4/following{/other_user}", "gists_url": "https://api.github.com/users/sasurau4/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasurau4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasurau4/subscriptions", "organizations_url": "https://api.github.com/users/sasurau4/orgs", "repos_url": "https://api.github.com/users/sasurau4/repos", "events_url": "https://api.github.com/users/sasurau4/events{/privacy}", "received_events_url": "https://api.github.com/users/sasurau4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db95b5ca9bb0631108ea85ee80caf9abb11dee6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/db95b5ca9bb0631108ea85ee80caf9abb11dee6e", "html_url": "https://github.com/rust-lang/rust/commit/db95b5ca9bb0631108ea85ee80caf9abb11dee6e"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "4d7c2f2396d75b7d54919a7914742cf6b3a8eccb", "filename": "src/test/ui/error-codes/E0283.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8b041cd8f99ba27393d857623f4e9ee502fed29d/src%2Ftest%2Fui%2Ferror-codes%2FE0283.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b041cd8f99ba27393d857623f4e9ee502fed29d/src%2Ftest%2Fui%2Ferror-codes%2FE0283.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0283.rs?ref=8b041cd8f99ba27393d857623f4e9ee502fed29d", "patch": "@@ -8,6 +8,18 @@ impl Generator for Impl {\n     fn create() -> u32 { 1 }\n }\n \n+impl Impl {\n+    fn new() -> Self {\n+        Impl{}\n+    }\n+}\n+\n+impl Into<u32> for Impl {\n+    fn into(self) -> u32 { 1 }\n+}\n+\n+fn foo(bar: u32) {}\n+\n struct AnotherImpl;\n \n impl Generator for AnotherImpl {\n@@ -17,3 +29,9 @@ impl Generator for AnotherImpl {\n fn main() {\n     let cont: u32 = Generator::create(); //~ ERROR E0283\n }\n+\n+fn buzz() {\n+    let foo_impl = Impl::new();\n+    let bar = foo_impl.into() * 1u32; //~ ERROR E0283\n+    foo(bar);\n+}"}, {"sha": "2f0dfb6dd8248e8093fb75036b175f9b4fdb4863", "filename": "src/test/ui/error-codes/E0283.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8b041cd8f99ba27393d857623f4e9ee502fed29d/src%2Ftest%2Fui%2Ferror-codes%2FE0283.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b041cd8f99ba27393d857623f4e9ee502fed29d/src%2Ftest%2Fui%2Ferror-codes%2FE0283.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0283.stderr?ref=8b041cd8f99ba27393d857623f4e9ee502fed29d", "patch": "@@ -1,5 +1,5 @@\n error[E0283]: type annotations needed\n-  --> $DIR/E0283.rs:18:21\n+  --> $DIR/E0283.rs:30:21\n    |\n LL |     fn create() -> u32;\n    |     ------------------- required by `Generator::create`\n@@ -9,6 +9,18 @@ LL |     let cont: u32 = Generator::create();\n    |\n    = note: cannot satisfy `_: Generator`\n \n-error: aborting due to previous error\n+error[E0283]: type annotations needed\n+  --> $DIR/E0283.rs:35:24\n+   |\n+LL |     let bar = foo_impl.into() * 1u32;\n+   |               ---------^^^^--\n+   |               |        |\n+   |               |        cannot infer type for type parameter `T` declared on the trait `Into`\n+   |               this method call resolves to `T`\n+   |               help: use the fully qualified path for the potential candidate: `<Impl as Into<u32>>::into(foo_impl)`\n+   |\n+   = note: cannot satisfy `Impl: Into<_>`\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0283`."}]}