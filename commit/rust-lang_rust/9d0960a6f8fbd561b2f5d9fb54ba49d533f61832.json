{"sha": "9d0960a6f8fbd561b2f5d9fb54ba49d533f61832", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMDk2MGE2ZjhmYmQ1NjFiMmY1ZDlmYjU0YmE0OWQ1MzNmNjE4MzI=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-06-05T23:54:34Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-06-22T20:00:48Z"}, "message": "Fix HIR visit order\n\nFixes #61442\n\nWhen rustc::middle::region::ScopeTree ccomputes its yield_in_scope\nfield, it relies on the HIR visitor order to properly compute which\ntypes must be live across yield points. In order for the computed scopes\nto agree with the generated MIR, we must ensure that expressions\nevaluated before a yield point are visited before the 'yield'\nexpression.\n\nHowever, the visitor order for ExprKind::AssignOp\nwas incorrect. The left-hand side of a compund assignment expression is\nevaluated before the right-hand side, but the right-hand expression was\nbeing visited before the left-hand expression. If the left-hand\nexpression caused a new type to be introduced (e.g. through a\nderef-coercion), the new type would be incorrectly seen as occuring\n*after* the yield point, instead of before. This leads to a mismatch\nbetween the computed generator types and the MIR, since the MIR will\ncorrectly see the type as being live across the yield point.\n\nTo fix this, we correct the visitor order for ExprKind::AssignOp\nto reflect the actual evaulation order.", "tree": {"sha": "4b52f8cca53781e6f903f61aed4f02366af94009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b52f8cca53781e6f903f61aed4f02366af94009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl0OiPAACgkQtAh+UQ6Y\nsWSZlhAArmUg/64iihdcYzqrHmJlE0pqqwgWQ8wQLnX86LHyPBrywyBVZEmp6UC0\nNlJYrhVIgxvbL/Vmlc+f9xqX2FuPqWFBd+wBl+grfMKRHYS6SPDJbgFL3x2vvnIi\noDhtns6oHX+6Pw76N8pfFjKv0804/eF/gLQq+bUCv9GNG98AYiv8qp5+l5/oLRO1\nzbd2fcEv6tWKZFjFNeHRrLhVsoCsLbW0SUTM383B2MvlfuCkiQ5Q53rs7fgSVUu8\nmJoaVCXDmuCG3job+HHqArcGuux4mjtnRxe+iZIPDgSkrCG9HVltFkHzD2Dy9Uef\nUj99sDUesrP0lopbuiu11KPkOLCHI1OG215Nv5qDCyP1YBrsT57kA9xf8U9NgaNM\nC4qT+h1OJ+zOhhfewHVmRuCyg5fsfCthLF4enD083Qef3F/teWs2ThEc2d5jz9VP\nRV6uBCaC2Qrqf07WPQKWbi1ZaftexTkJ5h6Ypc+KjY4mKr/rTqXOybaFMnTzxxGg\n31t/Nts3d4FXH5y9oTu/9ZeaakBgoD5zUm8/laQUZfR6A4f1DaabQtGFPomqH7Pl\naCvVl/Ku65wn7wHfp8tANcOJshkR9bxr6hDqHHzzs2LbmS0MRVKk9hZ053LxpGig\nc3aBWABbaNdJ8+Jb4Vsvl/E8R/eq64arxkLWpjA0pddjAWrDNVk=\n=hset\n-----END PGP SIGNATURE-----", "payload": "tree 4b52f8cca53781e6f903f61aed4f02366af94009\nparent 4a365a29d64bec75d107214319a129ba68fc12a3\nauthor Aaron Hill <aa1ronham@gmail.com> 1559778874 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1561233648 -0400\n\nFix HIR visit order\n\nFixes #61442\n\nWhen rustc::middle::region::ScopeTree ccomputes its yield_in_scope\nfield, it relies on the HIR visitor order to properly compute which\ntypes must be live across yield points. In order for the computed scopes\nto agree with the generated MIR, we must ensure that expressions\nevaluated before a yield point are visited before the 'yield'\nexpression.\n\nHowever, the visitor order for ExprKind::AssignOp\nwas incorrect. The left-hand side of a compund assignment expression is\nevaluated before the right-hand side, but the right-hand expression was\nbeing visited before the left-hand expression. If the left-hand\nexpression caused a new type to be introduced (e.g. through a\nderef-coercion), the new type would be incorrectly seen as occuring\n*after* the yield point, instead of before. This leads to a mismatch\nbetween the computed generator types and the MIR, since the MIR will\ncorrectly see the type as being live across the yield point.\n\nTo fix this, we correct the visitor order for ExprKind::AssignOp\nto reflect the actual evaulation order.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832", "html_url": "https://github.com/rust-lang/rust/commit/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a365a29d64bec75d107214319a129ba68fc12a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a365a29d64bec75d107214319a129ba68fc12a3", "html_url": "https://github.com/rust-lang/rust/commit/4a365a29d64bec75d107214319a129ba68fc12a3"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "05bef951ddbdd21d8d5e3fd4d399e4657434593c", "filename": "src/librustc/hir/intravisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832/src%2Flibrustc%2Fhir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832/src%2Flibrustc%2Fhir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fintravisit.rs?ref=9d0960a6f8fbd561b2f5d9fb54ba49d533f61832", "patch": "@@ -1055,8 +1055,8 @@ pub fn walk_expr<'v, V: Visitor<'v>>(visitor: &mut V, expression: &'v Expr) {\n             visitor.visit_expr(left_hand_expression)\n         }\n         ExprKind::AssignOp(_, ref left_expression, ref right_expression) => {\n+            visitor.visit_expr(left_expression);\n             visitor.visit_expr(right_expression);\n-            visitor.visit_expr(left_expression)\n         }\n         ExprKind::Field(ref subexpression, ident) => {\n             visitor.visit_expr(subexpression);"}, {"sha": "89d1dac08bc1077e8478669935dfd33d5540953e", "filename": "src/test/run-pass/issues/issue-61442.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832/src%2Ftest%2Frun-pass%2Fissues%2Fissue-61442.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d0960a6f8fbd561b2f5d9fb54ba49d533f61832/src%2Ftest%2Frun-pass%2Fissues%2Fissue-61442.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-61442.rs?ref=9d0960a6f8fbd561b2f5d9fb54ba49d533f61832", "patch": "@@ -0,0 +1,12 @@\n+#![feature(generators)]\n+\n+fn foo() {\n+    let _x = static || {\n+        let mut s = String::new();\n+        s += { yield; \"\" };\n+    };\n+}\n+\n+fn main() {\n+    foo()\n+}"}]}