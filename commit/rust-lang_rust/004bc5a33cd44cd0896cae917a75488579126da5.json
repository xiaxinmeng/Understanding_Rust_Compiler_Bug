{"sha": "004bc5a33cd44cd0896cae917a75488579126da5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNGJjNWEzM2NkNDRjZDA4OTZjYWU5MTdhNzU0ODg1NzkxMjZkYTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-09T01:36:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-09T01:36:58Z"}, "message": "Auto merge of #53949 - estebank:unclosed-delim, r=nikomatsakis\n\nImprove messages for un-closed delimiter errors", "tree": {"sha": "d0da7000dd54a3a1bc3e9d24e902fbb99912d38f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0da7000dd54a3a1bc3e9d24e902fbb99912d38f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/004bc5a33cd44cd0896cae917a75488579126da5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/004bc5a33cd44cd0896cae917a75488579126da5", "html_url": "https://github.com/rust-lang/rust/commit/004bc5a33cd44cd0896cae917a75488579126da5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/004bc5a33cd44cd0896cae917a75488579126da5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0198a1ea45e29af00d92423aa6d2ac876410c3f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0198a1ea45e29af00d92423aa6d2ac876410c3f9", "html_url": "https://github.com/rust-lang/rust/commit/0198a1ea45e29af00d92423aa6d2ac876410c3f9"}, {"sha": "3192d3dc0c4417a6e360018b341c07d32f3f3d7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3192d3dc0c4417a6e360018b341c07d32f3f3d7f", "html_url": "https://github.com/rust-lang/rust/commit/3192d3dc0c4417a6e360018b341c07d32f3f3d7f"}], "stats": {"total": 211, "additions": 171, "deletions": 40}, "files": [{"sha": "b7e8a880e7e509936746875b04553c9a67203884", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -66,6 +66,10 @@ pub struct StringReader<'a> {\n     /// The raw source span which *does not* take `override_span` into account\n     span_src_raw: Span,\n     open_braces: Vec<(token::DelimToken, Span)>,\n+    /// The type and spans for all braces that have different indentation.\n+    ///\n+    /// Used only for error recovery when arriving to EOF with mismatched braces.\n+    suspicious_open_spans: Vec<(token::DelimToken, Span, Span)>,\n     crate override_span: Option<Span>,\n     last_unclosed_found_span: Option<Span>,\n }\n@@ -216,6 +220,7 @@ impl<'a> StringReader<'a> {\n             span: syntax_pos::DUMMY_SP,\n             span_src_raw: syntax_pos::DUMMY_SP,\n             open_braces: Vec::new(),\n+            suspicious_open_spans: Vec::new(),\n             override_span,\n             last_unclosed_found_span: None,\n         }"}, {"sha": "e6ad3b9203ea76ebb143bf9667cab07f56dcace0", "filename": "src/libsyntax/parse/lexer/tokentrees.rs", "status": "modified", "additions": 43, "deletions": 4, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -49,9 +49,26 @@ impl<'a> StringReader<'a> {\n                 let msg = \"this file contains an un-closed delimiter\";\n                 let mut err = self.sess.span_diagnostic.struct_span_err(self.span, msg);\n                 for &(_, sp) in &self.open_braces {\n-                    err.span_help(sp, \"did you mean to close this delimiter?\");\n+                    err.span_label(sp, \"un-closed delimiter\");\n                 }\n \n+                if let Some((delim, _)) = self.open_braces.last() {\n+                    if let Some((d, open_sp, close_sp)) = self.suspicious_open_spans.iter()\n+                        .filter(|(d, _, _)| delim == d)\n+                        .next()  // these are in reverse order as they get inserted on close, but\n+                    {            // we want the last open/first close\n+                        if d == delim {\n+                            err.span_label(\n+                                *open_sp,\n+                                \"this delimiter might not be properly closed...\",\n+                            );\n+                            err.span_label(\n+                                *close_sp,\n+                                \"...as it matches this but it has different indentation\",\n+                            );\n+                        }\n+                    }\n+                }\n                 Err(err)\n             },\n             token::OpenDelim(delim) => {\n@@ -70,11 +87,20 @@ impl<'a> StringReader<'a> {\n                 // Expand to cover the entire delimited token tree\n                 let span = pre_span.with_hi(self.span.hi());\n \n+                let sm = self.sess.source_map();\n                 match self.token {\n                     // Correct delimiter.\n                     token::CloseDelim(d) if d == delim => {\n-                        self.open_braces.pop().unwrap();\n-\n+                        let (open_brace, open_brace_span) = self.open_braces.pop().unwrap();\n+                        if let Some(current_padding) = sm.span_to_margin(self.span) {\n+                            if let Some(padding) = sm.span_to_margin(open_brace_span) {\n+                                if current_padding != padding {\n+                                    self.suspicious_open_spans.push(\n+                                        (open_brace, open_brace_span, self.span),\n+                                    );\n+                                }\n+                            }\n+                        }\n                         // Parse the close delimiter.\n                         self.real_token();\n                     }\n@@ -94,8 +120,21 @@ impl<'a> StringReader<'a> {\n                             // delimiter. The previous unclosed delimiters could actually be\n                             // closed! The parser just hasn't gotten to them yet.\n                             if let Some(&(_, sp)) = self.open_braces.last() {\n-                                err.span_label(sp, \"unclosed delimiter\");\n+                                err.span_label(sp, \"un-closed delimiter\");\n                             };\n+                            if let Some(current_padding) = sm.span_to_margin(self.span) {\n+                                for (brace, brace_span) in &self.open_braces {\n+                                    if let Some(padding) = sm.span_to_margin(*brace_span) {\n+                                        // high likelihood of these two corresponding\n+                                        if current_padding == padding && brace == &other {\n+                                            err.span_label(\n+                                                *brace_span,\n+                                                \"close delimiter possibly meant for this\",\n+                                            );\n+                                        }\n+                                    }\n+                                }\n+                            }\n                             err.emit();\n                         }\n                         self.open_braces.pop().unwrap();"}, {"sha": "7ee583506218493effaa4492b881fa6a689ea899", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -251,17 +251,18 @@ impl SourceMap {\n     /// crate. The source code of such an \"imported source_file\" is not available,\n     /// but we still know enough to generate accurate debuginfo location\n     /// information for things inlined from other crates.\n-    pub fn new_imported_source_file(&self,\n-                                filename: FileName,\n-                                name_was_remapped: bool,\n-                                crate_of_origin: u32,\n-                                src_hash: u128,\n-                                name_hash: u128,\n-                                source_len: usize,\n-                                mut file_local_lines: Vec<BytePos>,\n-                                mut file_local_multibyte_chars: Vec<MultiByteChar>,\n-                                mut file_local_non_narrow_chars: Vec<NonNarrowChar>)\n-                                -> Lrc<SourceFile> {\n+    pub fn new_imported_source_file(\n+        &self,\n+        filename: FileName,\n+        name_was_remapped: bool,\n+        crate_of_origin: u32,\n+        src_hash: u128,\n+        name_hash: u128,\n+        source_len: usize,\n+        mut file_local_lines: Vec<BytePos>,\n+        mut file_local_multibyte_chars: Vec<MultiByteChar>,\n+        mut file_local_non_narrow_chars: Vec<NonNarrowChar>,\n+    ) -> Lrc<SourceFile> {\n         let start_pos = self.next_start_pos();\n \n         let end_pos = Pos::from_usize(start_pos + source_len);\n@@ -578,6 +579,15 @@ impl SourceMap {\n                                                                 .to_string())\n     }\n \n+    pub fn span_to_margin(&self, sp: Span) -> Option<usize> {\n+        match self.span_to_prev_source(sp) {\n+            Err(_) => None,\n+            Ok(source) => source.split('\\n').last().map(|last_line| {\n+                last_line.len() - last_line.trim_left().len()\n+            })\n+        }\n+    }\n+\n     /// Return the source snippet as `String` before the given `Span`\n     pub fn span_to_prev_source(&self, sp: Span) -> Result<String, SpanSnippetError> {\n         self.span_to_source(sp, |src, start_index, _| src[..start_index].to_string())"}, {"sha": "375b951ee1585df4e7e5b8b7bb3858c03479b524", "filename": "src/test/ui/issue-10636-1.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-10636-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-10636-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10636-1.rs?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -10,7 +10,8 @@\n \n // compile-flags: -Z parse-only\n \n-struct Obj { //~ NOTE: unclosed delimiter\n+struct Obj {\n+    //~^ NOTE: un-closed delimiter\n     member: usize\n )\n //~^ ERROR incorrect close delimiter"}, {"sha": "49b6d08aff505f6eaacb0e1038024be6ff2f6b8a", "filename": "src/test/ui/issue-10636-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-10636-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-10636-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10636-1.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -1,9 +1,9 @@\n error: incorrect close delimiter: `)`\n-  --> $DIR/issue-10636-1.rs:15:1\n+  --> $DIR/issue-10636-1.rs:16:1\n    |\n-LL | struct Obj { //~ NOTE: unclosed delimiter\n-   |            - unclosed delimiter\n-LL |     member: usize\n+LL | struct Obj {\n+   |            - un-closed delimiter\n+...\n LL | )\n    | ^ incorrect close delimiter\n "}, {"sha": "35fddcb0de4427121d75217409e4b18ecf048947", "filename": "src/test/ui/issue-2354.rs", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-2354.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-2354.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-2354.rs?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -10,11 +10,13 @@\n \n // compile-flags: -Z parse-only\n \n-fn foo() { //~ HELP did you mean to close this delimiter?\n+fn foo() { //~ NOTE un-closed delimiter\n   match Some(x) {\n+  //~^ NOTE this delimiter might not be properly closed...\n       Some(y) => { panic!(); }\n       None => { panic!(); }\n }\n+//~^ NOTE ...as it matches this but it has different indentation\n \n fn bar() {\n     let mut i = 0;", "previous_filename": "src/test/parse-fail/issue-2354.rs"}, {"sha": "9cf569b685b11854158e77c5ce223607c5409831", "filename": "src/test/ui/issue-2354.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-2354.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fissue-2354.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-2354.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -0,0 +1,16 @@\n+error: this file contains an un-closed delimiter\n+  --> $DIR/issue-2354.rs:26:66\n+   |\n+LL | fn foo() { //~ NOTE un-closed delimiter\n+   |          - un-closed delimiter\n+LL |   match Some(x) {\n+   |                 - this delimiter might not be properly closed...\n+...\n+LL | }\n+   | - ...as it matches this but it has different indentation\n+...\n+LL | fn main() {} //~ ERROR this file contains an un-closed delimiter\n+   |                                                                  ^\n+\n+error: aborting due to previous error\n+"}, {"sha": "f51bcb9e70cad2911a8fb8a6d154daa7d7ce105c", "filename": "src/test/ui/parser-recovery-1.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser-recovery-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser-recovery-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-1.rs?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -14,11 +14,12 @@\n \n trait Foo {\n     fn bar() {\n-        let x = foo(); //~ ERROR cannot find function `foo` in this scope\n-\n+        let x = foo();\n+        //~^ ERROR cannot find function `foo` in this scope\n }\n \n fn main() {\n-    let x = y.;  //~ ERROR unexpected token\n-                 //~^ ERROR cannot find value `y` in this scope\n+    let x = y.;\n+    //~^ ERROR unexpected token\n+    //~| ERROR cannot find value `y` in this scope\n } //~ ERROR this file contains an un-closed delimiter"}, {"sha": "5ba96e1a5dd8fdfa7664c3f6e50658caff7d776a", "filename": "src/test/ui/parser-recovery-1.stderr", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser-recovery-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser-recovery-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-1.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -1,31 +1,33 @@\n error: this file contains an un-closed delimiter\n-  --> $DIR/parser-recovery-1.rs:24:55\n+  --> $DIR/parser-recovery-1.rs:25:55\n    |\n+LL | trait Foo {\n+   |           - un-closed delimiter\n+LL |     fn bar() {\n+   |              - this delimiter might not be properly closed...\n+...\n+LL | }\n+   | - ...as it matches this but it has different indentation\n+...\n LL | } //~ ERROR this file contains an un-closed delimiter\n    |                                                       ^\n-   |\n-help: did you mean to close this delimiter?\n-  --> $DIR/parser-recovery-1.rs:15:11\n-   |\n-LL | trait Foo {\n-   |           ^\n \n error: unexpected token: `;`\n   --> $DIR/parser-recovery-1.rs:22:15\n    |\n-LL |     let x = y.;  //~ ERROR unexpected token\n+LL |     let x = y.;\n    |               ^\n \n error[E0425]: cannot find function `foo` in this scope\n   --> $DIR/parser-recovery-1.rs:17:17\n    |\n-LL |         let x = foo(); //~ ERROR cannot find function `foo` in this scope\n+LL |         let x = foo();\n    |                 ^^^ not found in this scope\n \n error[E0425]: cannot find value `y` in this scope\n   --> $DIR/parser-recovery-1.rs:22:13\n    |\n-LL |     let x = y.;  //~ ERROR unexpected token\n+LL |     let x = y.;\n    |             ^ not found in this scope\n \n error[E0601]: `main` function not found in crate `parser_recovery_1`"}, {"sha": "2965e4eb581240448bc34d76c2c3f34608363350", "filename": "src/test/ui/parser-recovery-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser-recovery-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser-recovery-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser-recovery-2.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -2,7 +2,7 @@ error: incorrect close delimiter: `)`\n   --> $DIR/parser-recovery-2.rs:18:5\n    |\n LL |     fn bar() {\n-   |              - unclosed delimiter\n+   |              - un-closed delimiter\n LL |         let x = foo(); //~ ERROR cannot find function `foo` in this scope\n LL |     ) //~ ERROR incorrect close delimiter: `)`\n    |     ^ incorrect close delimiter"}, {"sha": "802133ae6b98b8658424ef728a4536077c88162b", "filename": "src/test/ui/parser/unclosed-braces.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.rs?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S {\n+    x: [usize; 3],\n+}\n+\n+fn foo() {\n+    {\n+        {\n+            println!(\"hi\");\n+        }\n+    }\n+}\n+\n+fn main() {\n+//~^ NOTE un-closed delimiter\n+    {\n+        {\n+        //~^ NOTE this delimiter might not be properly closed...\n+            foo();\n+    }\n+    //~^ NOTE ...as it matches this but it has different indentation\n+}\n+//~ ERROR this file contains an un-closed delimiter"}, {"sha": "4f865bc9b39cbee5724407a1c2579299b9fa568e", "filename": "src/test/ui/parser/unclosed-braces.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funclosed-braces.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -0,0 +1,17 @@\n+error: this file contains an un-closed delimiter\n+  --> $DIR/unclosed-braces.rs:32:53\n+   |\n+LL | fn main() {\n+   |           - un-closed delimiter\n+...\n+LL |         {\n+   |         - this delimiter might not be properly closed...\n+...\n+LL |     }\n+   |     - ...as it matches this but it has different indentation\n+...\n+LL | //~ ERROR this file contains an un-closed delimiter\n+   |                                                     ^\n+\n+error: aborting due to previous error\n+"}, {"sha": "6965c864569c1fec460372e066a91c54ca0d42e2", "filename": "src/test/ui/resolve/token-error-correct-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -2,7 +2,7 @@ error: incorrect close delimiter: `)`\n   --> $DIR/token-error-correct-2.rs:16:5\n    |\n LL |     if foo {\n-   |            - unclosed delimiter\n+   |            - un-closed delimiter\n LL |     //~^ ERROR: cannot find value `foo`\n LL |     ) //~ ERROR: incorrect close delimiter: `)`\n    |     ^ incorrect close delimiter"}, {"sha": "b87a59d219655004b2cdb95659c014b5de27e2fe", "filename": "src/test/ui/resolve/token-error-correct-3.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -1,8 +1,10 @@\n error: incorrect close delimiter: `}`\n   --> $DIR/token-error-correct-3.rs:30:9\n    |\n+LL |         if !is_directory(path.as_ref()) { //~ ERROR: cannot find function `is_directory`\n+   |                                         - close delimiter possibly meant for this\n LL |             callback(path.as_ref(); //~ ERROR expected one of\n-   |                     - unclosed delimiter\n+   |                     - un-closed delimiter\n ...\n LL |         } else { //~ ERROR: incorrect close delimiter: `}`\n    |         ^ incorrect close delimiter"}, {"sha": "b69098407323af79d253999430e7a943d8d6709f", "filename": "src/test/ui/resolve/token-error-correct.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -1,8 +1,10 @@\n error: incorrect close delimiter: `}`\n   --> $DIR/token-error-correct.rs:16:1\n    |\n+LL | fn main() {\n+   |           - close delimiter possibly meant for this\n LL |     foo(bar(;\n-   |            - unclosed delimiter\n+   |            - un-closed delimiter\n LL |     //~^ ERROR: expected expression, found `;`\n LL | }\n    | ^ incorrect close delimiter"}, {"sha": "9800b0c5e3f05bf10af16c5cffbee4c75edfb439", "filename": "src/test/ui/token/issue-10636-2.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/004bc5a33cd44cd0896cae917a75488579126da5/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr?ref=004bc5a33cd44cd0896cae917a75488579126da5", "patch": "@@ -1,8 +1,10 @@\n error: incorrect close delimiter: `}`\n   --> $DIR/issue-10636-2.rs:18:1\n    |\n+LL | pub fn trace_option(option: Option<isize>) {\n+   |                                            - close delimiter possibly meant for this\n LL |     option.map(|some| 42;\n-   |               - unclosed delimiter\n+   |               - un-closed delimiter\n ...\n LL | } //~ ERROR: incorrect close delimiter\n    | ^ incorrect close delimiter"}]}