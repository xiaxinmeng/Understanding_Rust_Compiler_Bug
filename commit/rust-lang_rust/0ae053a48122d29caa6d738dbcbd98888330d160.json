{"sha": "0ae053a48122d29caa6d738dbcbd98888330d160", "node_id": "C_kwDOAAsO6NoAKDBhZTA1M2E0ODEyMmQyOWNhYTZkNzM4ZGJjYmQ5ODg4ODMzMGQxNjA", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-19T20:54:05Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-19T20:54:05Z"}, "message": "rustdoc: Fix some unescaped HTML tags in docs\n\nThey were being interpreted literally.", "tree": {"sha": "e5cccbbf21903c613c3a62c1378fa30b1b6ef6af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5cccbbf21903c613c3a62c1378fa30b1b6ef6af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ae053a48122d29caa6d738dbcbd98888330d160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ae053a48122d29caa6d738dbcbd98888330d160", "html_url": "https://github.com/rust-lang/rust/commit/0ae053a48122d29caa6d738dbcbd98888330d160", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ae053a48122d29caa6d738dbcbd98888330d160/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "548c1088eff51fd92ad94d56b8c5b2d48b7088f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/548c1088eff51fd92ad94d56b8c5b2d48b7088f0", "html_url": "https://github.com/rust-lang/rust/commit/548c1088eff51fd92ad94d56b8c5b2d48b7088f0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6ed911b8d24099ff4cf3e1dc2079a734df6a08e8", "filename": "src/librustdoc/externalfiles.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ae053a48122d29caa6d738dbcbd98888330d160/src%2Flibrustdoc%2Fexternalfiles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ae053a48122d29caa6d738dbcbd98888330d160/src%2Flibrustdoc%2Fexternalfiles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fexternalfiles.rs?ref=0ae053a48122d29caa6d738dbcbd98888330d160", "patch": "@@ -8,13 +8,13 @@ use serde::Serialize;\n \n #[derive(Clone, Debug, Serialize)]\n crate struct ExternalHtml {\n-    /// Content that will be included inline in the <head> section of a\n+    /// Content that will be included inline in the `<head>` section of a\n     /// rendered Markdown file or generated documentation\n     crate in_header: String,\n-    /// Content that will be included inline between <body> and the content of\n+    /// Content that will be included inline between `<body>` and the content of\n     /// a rendered Markdown file or generated documentation\n     crate before_content: String,\n-    /// Content that will be included inline between the content and </body> of\n+    /// Content that will be included inline between the content and `</body>` of\n     /// a rendered Markdown file or generated documentation\n     crate after_content: String,\n }"}]}