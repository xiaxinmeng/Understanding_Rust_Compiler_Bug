{"sha": "05be48b18b896c16b36cf3f68c14c87b79081f94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YmU0OGIxOGI4OTZjMTZiMzZjZjNmNjhjMTRjODdiNzkwODFmOTQ=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-12-19T07:59:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-12-19T07:59:44Z"}, "message": "Rollup merge of #38459 - nagisa:rustbuild-exec, r=alexcrichton\n\nUse exec for the wrapper on UNIXes\n\nThis not only avoids the small \u2013 and unnecessary \u2013 constant overhead for each compiler invocation,\nbut also helps somewhat by only having \u201ccorrect\u201d rustc processes to look for in `/proc/`.\n\nThis also makes the wrapper behave effectively as a regular exec wrapper its intended to be.\n\nI also took liberty to change the fallback error code from `1` to `0xfe` (now only relevant on windows) so that when people complain about \u201ccompiler exited with code 254\u201d, its obvious where the issue lies (wrapper losing the exit code somehow).\n\nr? @alexcrichton", "tree": {"sha": "ae6628c5ebb622603c6518865d2b46e60ad1aefd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae6628c5ebb622603c6518865d2b46e60ad1aefd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05be48b18b896c16b36cf3f68c14c87b79081f94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05be48b18b896c16b36cf3f68c14c87b79081f94", "html_url": "https://github.com/rust-lang/rust/commit/05be48b18b896c16b36cf3f68c14c87b79081f94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05be48b18b896c16b36cf3f68c14c87b79081f94/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fda41c6b5cbdd7d848eb1011d4a22b496e077f00", "url": "https://api.github.com/repos/rust-lang/rust/commits/fda41c6b5cbdd7d848eb1011d4a22b496e077f00", "html_url": "https://github.com/rust-lang/rust/commit/fda41c6b5cbdd7d848eb1011d4a22b496e077f00"}, {"sha": "b3b2f1b0d626e79c0a4dd8650042fb805b79a6c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b2f1b0d626e79c0a4dd8650042fb805b79a6c4", "html_url": "https://github.com/rust-lang/rust/commit/b3b2f1b0d626e79c0a4dd8650042fb805b79a6c4"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "c5684e69994ea86618740f82ff9ba62c4cae663b", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/05be48b18b896c16b36cf3f68c14c87b79081f94/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05be48b18b896c16b36cf3f68c14c87b79081f94/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=05be48b18b896c16b36cf3f68c14c87b79081f94", "patch": "@@ -30,7 +30,7 @@ extern crate bootstrap;\n use std::env;\n use std::ffi::OsString;\n use std::path::PathBuf;\n-use std::process::Command;\n+use std::process::{Command, ExitStatus};\n \n fn main() {\n     let args = env::args_os().skip(1).collect::<Vec<_>>();\n@@ -180,8 +180,19 @@ fn main() {\n     }\n \n     // Actually run the compiler!\n-    std::process::exit(match cmd.status() {\n-        Ok(s) => s.code().unwrap_or(1),\n+    std::process::exit(match exec_cmd(&mut cmd) {\n+        Ok(s) => s.code().unwrap_or(0xfe),\n         Err(e) => panic!(\"\\n\\nfailed to run {:?}: {}\\n\\n\", cmd, e),\n     })\n }\n+\n+#[cfg(unix)]\n+fn exec_cmd(cmd: &mut Command) -> ::std::io::Result<ExitStatus> {\n+    use std::os::unix::process::CommandExt;\n+    Err(cmd.exec())\n+}\n+\n+#[cfg(not(unix))]\n+fn exec_cmd(cmd: &mut Command) -> ::std::io::Result<ExitStatus> {\n+    cmd.status()\n+}"}]}