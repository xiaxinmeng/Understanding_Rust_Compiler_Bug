{"sha": "2ced7ecb9f54e2798989ff5e5946c73f4b740afe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZWQ3ZWNiOWY1NGUyNzk4OTg5ZmY1ZTU5NDZjNzNmNGI3NDBhZmU=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-26T13:49:56Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-26T14:21:07Z"}, "message": "`ArgFlagValueWithOtherArgsIter` -> `ArgSplitFlagValue`", "tree": {"sha": "28725360da84450c7f7439824a09f23a517f36e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28725360da84450c7f7439824a09f23a517f36e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ced7ecb9f54e2798989ff5e5946c73f4b740afe", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYNc30xUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLhRGwD/ffwC2O1zaANwklpiXUptMULOwESz\nAijmsfB6Z+QfyfQBAN+nJ7K+AYQsDgCKjbHV6aNZmIci5UFdEoKi3Mj3hnkC\n=60QG\n-----END PGP SIGNATURE-----", "payload": "tree 28725360da84450c7f7439824a09f23a517f36e8\nparent 59408b68dd79b54cda6b1d31dc6ef0b6048a6555\nauthor hyd-dev <yd-huang@outlook.com> 1624715396 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1624717267 +0800\n\n`ArgFlagValueWithOtherArgsIter` -> `ArgSplitFlagValue`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ced7ecb9f54e2798989ff5e5946c73f4b740afe", "html_url": "https://github.com/rust-lang/rust/commit/2ced7ecb9f54e2798989ff5e5946c73f4b740afe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ced7ecb9f54e2798989ff5e5946c73f4b740afe/comments", "author": null, "committer": null, "parents": [{"sha": "59408b68dd79b54cda6b1d31dc6ef0b6048a6555", "url": "https://api.github.com/repos/rust-lang/rust/commits/59408b68dd79b54cda6b1d31dc6ef0b6048a6555", "html_url": "https://github.com/rust-lang/rust/commit/59408b68dd79b54cda6b1d31dc6ef0b6048a6555"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "939ea5ac507fc9715fdee340ef11d52b26832fc2", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2ced7ecb9f54e2798989ff5e5946c73f4b740afe/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ced7ecb9f54e2798989ff5e5946c73f4b740afe/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=2ced7ecb9f54e2798989ff5e5946c73f4b740afe", "patch": "@@ -114,12 +114,12 @@ fn has_arg_flag(name: &str) -> bool {\n \n /// Yields all values of command line flag `name` as `Ok(arg)`, and all other arguments except\n /// the flag as `Err(arg)`.\n-struct ArgFlagValueWithOtherArgsIter<'a, I> {\n+struct ArgSplitFlagValue<'a, I> {\n     args: TakeWhile<I, fn(&String) -> bool>,\n     name: &'a str,\n }\n \n-impl<'a, I: Iterator<Item = String>> ArgFlagValueWithOtherArgsIter<'a, I> {\n+impl<'a, I: Iterator<Item = String>> ArgSplitFlagValue<'a, I> {\n     fn new(args: I, name: &'a str) -> Self {\n         Self {\n             // Stop searching at `--`.\n@@ -129,7 +129,7 @@ impl<'a, I: Iterator<Item = String>> ArgFlagValueWithOtherArgsIter<'a, I> {\n     }\n }\n \n-impl<I: Iterator<Item = String>> Iterator for ArgFlagValueWithOtherArgsIter<'_, I> {\n+impl<I: Iterator<Item = String>> Iterator for ArgSplitFlagValue<'_, I> {\n     type Item = Result<String, String>;\n \n     fn next(&mut self) -> Option<Self::Item> {\n@@ -151,11 +151,11 @@ impl<I: Iterator<Item = String>> Iterator for ArgFlagValueWithOtherArgsIter<'_,\n }\n \n /// Yields all values of command line flag `name`.\n-struct ArgFlagValueIter<'a>(ArgFlagValueWithOtherArgsIter<'a, env::Args>);\n+struct ArgFlagValueIter<'a>(ArgSplitFlagValue<'a, env::Args>);\n \n impl<'a> ArgFlagValueIter<'a> {\n     fn new(name: &'a str) -> Self {\n-        Self(ArgFlagValueWithOtherArgsIter::new(env::args(), name))\n+        Self(ArgSplitFlagValue::new(env::args(), name))\n     }\n }\n \n@@ -484,7 +484,7 @@ fn detect_target_dir() -> PathBuf {\n     // The `build.target-dir` config can by passed by `--config` flags, so forward them to\n     // `cargo metadata`.\n     let config_flag = \"--config\";\n-    for arg in ArgFlagValueWithOtherArgsIter::new(\n+    for arg in ArgSplitFlagValue::new(\n         env::args().skip(3), // skip the program name, \"miri\" and \"run\" / \"test\"\n         config_flag,\n     ) {\n@@ -570,7 +570,7 @@ fn phase_cargo_miri(mut args: env::Args) {\n     let mut target_dir = None;\n \n     // Forward all arguments before `--` other than `--target-dir` and its value to Cargo.\n-    for arg in ArgFlagValueWithOtherArgsIter::new(&mut args, \"--target-dir\") {\n+    for arg in ArgSplitFlagValue::new(&mut args, \"--target-dir\") {\n         match arg {\n             Ok(value) => target_dir = Some(value.into()),\n             Err(arg) => drop(cmd.arg(arg)),"}]}