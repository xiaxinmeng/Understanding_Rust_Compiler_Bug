{"sha": "83ed227a8f66faccade2fa9affc51e50a0087a5b", "node_id": "C_kwDOAAsO6NoAKDgzZWQyMjdhOGY2NmZhY2NhZGUyZmE5YWZmYzUxZTUwYTAwODdhNWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-08T10:04:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-08T10:04:52Z"}, "message": "Rollup merge of #94580 - xFrednet:55112-only-reason-in-lint-attr, r=lcnr\n\nEmit `unused_attributes` if a level attr only has a reason\n\nFixes a comment from `compiler/rustc_lint/src/levels.rs`. Lint level attributes that only contain a reason will also trigger the `unused_attribute` lint. The lint now also checks for the `expect` lint level.\n\nThat's it, have a great rest of the day for everyone reasoning this :upside_down_face:\n\ncc: #55112", "tree": {"sha": "e42af7f3d6b86009cf38a7e4c5e1c39707731e23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e42af7f3d6b86009cf38a7e4c5e1c39707731e23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83ed227a8f66faccade2fa9affc51e50a0087a5b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiJypECRBK7hj4Ov3rIwAAckYIAK2StPYTDs3l8ITs5h16+EhO\nHZ23jaeACzbQh9Gu5UtWA4JHiMD2iiIpuVs3CBGZ1ST5IMA7pwc66NK7SfeY6H17\ni9eBUpJFND8mKmWRIL2XzSHJKANpFYAu7RKwF+5Eo60a/JgY97erWt8UFvT7UXAc\nKOi/GUioMMQF2jKsevh67ITtXRlSWVA823x0+sZ+PETMywq2nH7dUTlpWovjOFxz\n+lR3FdRQKBUrw7mFlpXqlgeDyOWGUZFLfw3GHC3jjzIIafuuOlCLClOCc5wcNLM/\n2h8UjHK++HIuPewNzcuGQwweBrihOJIqrpo58q0jItU4LNa70XLRyWmQeyVF6tI=\n=eBVx\n-----END PGP SIGNATURE-----\n", "payload": "tree e42af7f3d6b86009cf38a7e4c5e1c39707731e23\nparent aec535f8051c7cf00b1e373a05893b2cb580eeac\nparent 700ec66aed90f446a2d09b6fc96599b1f8099057\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646733892 +0100\ncommitter GitHub <noreply@github.com> 1646733892 +0100\n\nRollup merge of #94580 - xFrednet:55112-only-reason-in-lint-attr, r=lcnr\n\nEmit `unused_attributes` if a level attr only has a reason\n\nFixes a comment from `compiler/rustc_lint/src/levels.rs`. Lint level attributes that only contain a reason will also trigger the `unused_attribute` lint. The lint now also checks for the `expect` lint level.\n\nThat's it, have a great rest of the day for everyone reasoning this :upside_down_face:\n\ncc: #55112\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83ed227a8f66faccade2fa9affc51e50a0087a5b", "html_url": "https://github.com/rust-lang/rust/commit/83ed227a8f66faccade2fa9affc51e50a0087a5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83ed227a8f66faccade2fa9affc51e50a0087a5b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aec535f8051c7cf00b1e373a05893b2cb580eeac", "url": "https://api.github.com/repos/rust-lang/rust/commits/aec535f8051c7cf00b1e373a05893b2cb580eeac", "html_url": "https://github.com/rust-lang/rust/commit/aec535f8051c7cf00b1e373a05893b2cb580eeac"}, {"sha": "700ec66aed90f446a2d09b6fc96599b1f8099057", "url": "https://api.github.com/repos/rust-lang/rust/commits/700ec66aed90f446a2d09b6fc96599b1f8099057", "html_url": "https://github.com/rust-lang/rust/commit/700ec66aed90f446a2d09b6fc96599b1f8099057"}], "stats": {"total": 174, "additions": 133, "deletions": 41}, "files": [{"sha": "bbfbf61f4869abefe4f17b0b76755001ddad8324", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/83ed227a8f66faccade2fa9affc51e50a0087a5b/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ed227a8f66faccade2fa9affc51e50a0087a5b/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=83ed227a8f66faccade2fa9affc51e50a0087a5b", "patch": "@@ -258,7 +258,7 @@ impl<'s> LintLevelsBuilder<'s> {\n             };\n \n             if metas.is_empty() {\n-                // FIXME (#55112): issue unused-attributes lint for `#[level()]`\n+                // This emits the unused_attributes lint for `#[level()]`\n                 continue;\n             }\n \n@@ -271,8 +271,6 @@ impl<'s> LintLevelsBuilder<'s> {\n                     ast::MetaItemKind::Word => {} // actual lint names handled later\n                     ast::MetaItemKind::NameValue(ref name_value) => {\n                         if item.path == sym::reason {\n-                            // FIXME (#55112): issue unused-attributes lint if we thereby\n-                            // don't have any lint names (`#[level(reason = \"foo\")]`)\n                             if let ast::LitKind::Str(rationale, _) = name_value.kind {\n                                 if !self.sess.features_untracked().lint_reasons {\n                                     feature_err("}, {"sha": "2202001555084523b9afc39c584b15447409a7b8", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 51, "deletions": 29, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/83ed227a8f66faccade2fa9affc51e50a0087a5b/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ed227a8f66faccade2fa9affc51e50a0087a5b/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=83ed227a8f66faccade2fa9affc51e50a0087a5b", "patch": "@@ -4,7 +4,7 @@\n //! conflicts between multiple such attributes attached to the same\n //! item.\n \n-use rustc_ast::{ast, AttrStyle, Attribute, Lit, LitKind, NestedMetaItem};\n+use rustc_ast::{ast, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{pluralize, struct_span_err, Applicability};\n use rustc_feature::{AttributeDuplicates, AttributeType, BuiltinAttribute, BUILTIN_ATTRIBUTE_MAP};\n@@ -178,34 +178,7 @@ impl CheckAttrVisitor<'_> {\n                 check_duplicates(self.tcx, attr, hir_id, *duplicates, &mut seen);\n             }\n \n-            // Warn on useless empty attributes.\n-            if matches!(\n-                attr.name_or_empty(),\n-                sym::macro_use\n-                    | sym::allow\n-                    | sym::warn\n-                    | sym::deny\n-                    | sym::forbid\n-                    | sym::feature\n-                    | sym::repr\n-                    | sym::target_feature\n-            ) && attr.meta_item_list().map_or(false, |list| list.is_empty())\n-            {\n-                self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n-                    lint.build(\"unused attribute\")\n-                        .span_suggestion(\n-                            attr.span,\n-                            \"remove this attribute\",\n-                            String::new(),\n-                            Applicability::MachineApplicable,\n-                        )\n-                        .note(&format!(\n-                            \"attribute `{}` with an empty list has no effect\",\n-                            attr.name_or_empty()\n-                        ))\n-                        .emit();\n-                });\n-            }\n+            self.check_unused_attribute(hir_id, attr)\n         }\n \n         if !is_valid {\n@@ -1969,6 +1942,55 @@ impl CheckAttrVisitor<'_> {\n             });\n         }\n     }\n+\n+    fn check_unused_attribute(&self, hir_id: HirId, attr: &Attribute) {\n+        // Warn on useless empty attributes.\n+        let note = if matches!(\n+            attr.name_or_empty(),\n+            sym::macro_use\n+                | sym::allow\n+                | sym::expect\n+                | sym::warn\n+                | sym::deny\n+                | sym::forbid\n+                | sym::feature\n+                | sym::repr\n+                | sym::target_feature\n+        ) && attr.meta_item_list().map_or(false, |list| list.is_empty())\n+        {\n+            format!(\n+                \"attribute `{}` with an empty list has no effect\",\n+                attr.name_or_empty()\n+            )\n+        } else if matches!(\n+                attr.name_or_empty(),\n+                sym::allow | sym::warn | sym::deny | sym::forbid | sym::expect\n+            ) && let Some(meta) = attr.meta_item_list()\n+            && meta.len() == 1\n+            && let Some(item) = meta[0].meta_item()\n+            && let MetaItemKind::NameValue(_) = &item.kind\n+            && item.path == sym::reason\n+        {\n+            format!(\n+                \"attribute `{}` without any lints has no effect\",\n+                attr.name_or_empty()\n+            )\n+        } else {\n+            return;\n+        };\n+\n+        self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n+            lint.build(\"unused attribute\")\n+                .span_suggestion(\n+                    attr.span,\n+                    \"remove this attribute\",\n+                    String::new(),\n+                    Applicability::MachineApplicable,\n+                )\n+                .note(&note)\n+                .emit();\n+        });\n+    }\n }\n \n impl<'tcx> Visitor<'tcx> for CheckAttrVisitor<'tcx> {"}, {"sha": "d319227b217a73624e0a64aeb079d05a104306bb", "filename": "src/test/ui/empty/empty-attributes.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.rs?ref=83ed227a8f66faccade2fa9affc51e50a0087a5b", "patch": "@@ -1,5 +1,8 @@\n+#![feature(lint_reasons)]\n+\n #![deny(unused_attributes)]\n #![allow()] //~ ERROR unused attribute\n+#![expect()] //~ ERROR unused attribute\n #![warn()] //~ ERROR unused attribute\n #![deny()] //~ ERROR unused attribute\n #![forbid()] //~ ERROR unused attribute"}, {"sha": "8653eaf5ccdf3e9f048541f859a19744745a59e8", "filename": "src/test/ui/empty/empty-attributes.stderr", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-attributes.stderr?ref=83ed227a8f66faccade2fa9affc51e50a0087a5b", "patch": "@@ -1,63 +1,71 @@\n error: unused attribute\n-  --> $DIR/empty-attributes.rs:8:1\n+  --> $DIR/empty-attributes.rs:11:1\n    |\n LL | #[repr()]\n    | ^^^^^^^^^ help: remove this attribute\n    |\n note: the lint level is defined here\n-  --> $DIR/empty-attributes.rs:1:9\n+  --> $DIR/empty-attributes.rs:3:9\n    |\n LL | #![deny(unused_attributes)]\n    |         ^^^^^^^^^^^^^^^^^\n    = note: attribute `repr` with an empty list has no effect\n \n error: unused attribute\n-  --> $DIR/empty-attributes.rs:11:1\n+  --> $DIR/empty-attributes.rs:14:1\n    |\n LL | #[target_feature()]\n    | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n    |\n    = note: attribute `target_feature` with an empty list has no effect\n \n error: unused attribute\n-  --> $DIR/empty-attributes.rs:2:1\n+  --> $DIR/empty-attributes.rs:4:1\n    |\n LL | #![allow()]\n    | ^^^^^^^^^^^ help: remove this attribute\n    |\n    = note: attribute `allow` with an empty list has no effect\n \n error: unused attribute\n-  --> $DIR/empty-attributes.rs:3:1\n+  --> $DIR/empty-attributes.rs:5:1\n+   |\n+LL | #![expect()]\n+   | ^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `expect` with an empty list has no effect\n+\n+error: unused attribute\n+  --> $DIR/empty-attributes.rs:6:1\n    |\n LL | #![warn()]\n    | ^^^^^^^^^^ help: remove this attribute\n    |\n    = note: attribute `warn` with an empty list has no effect\n \n error: unused attribute\n-  --> $DIR/empty-attributes.rs:4:1\n+  --> $DIR/empty-attributes.rs:7:1\n    |\n LL | #![deny()]\n    | ^^^^^^^^^^ help: remove this attribute\n    |\n    = note: attribute `deny` with an empty list has no effect\n \n error: unused attribute\n-  --> $DIR/empty-attributes.rs:5:1\n+  --> $DIR/empty-attributes.rs:8:1\n    |\n LL | #![forbid()]\n    | ^^^^^^^^^^^^ help: remove this attribute\n    |\n    = note: attribute `forbid` with an empty list has no effect\n \n error: unused attribute\n-  --> $DIR/empty-attributes.rs:6:1\n+  --> $DIR/empty-attributes.rs:9:1\n    |\n LL | #![feature()]\n    | ^^^^^^^^^^^^^ help: remove this attribute\n    |\n    = note: attribute `feature` with an empty list has no effect\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "bafdea96e08dfd474acd26bb0c39e96dd433b6c6", "filename": "src/test/ui/lint/rfc-2383-lint-reason/lint-attribute-only-with-reason.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Flint-attribute-only-with-reason.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Flint-attribute-only-with-reason.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Flint-attribute-only-with-reason.rs?ref=83ed227a8f66faccade2fa9affc51e50a0087a5b", "patch": "@@ -0,0 +1,14 @@\n+#![feature(lint_reasons)]\n+\n+#![deny(unused_attributes)]\n+\n+#[allow(reason = \"I want to allow something\")]//~ ERROR unused attribute\n+#[expect(reason = \"I don't know what I'm waiting for\")]//~ ERROR unused attribute\n+#[warn(reason = \"This should be warn by default\")]//~ ERROR unused attribute\n+#[deny(reason = \"All listed lints are denied\")]//~ ERROR unused attribute\n+#[forbid(reason = \"Just some reason\")]//~ ERROR unused attribute\n+\n+#[allow(clippy::box_collection, reason = \"This is still valid\")]\n+#[warn(dead_code, reason = \"This is also reasonable\")]\n+\n+fn main() {}"}, {"sha": "3bf8137dc6e40ca028b0032ba73b6b0c7a73c730", "filename": "src/test/ui/lint/rfc-2383-lint-reason/lint-attribute-only-with-reason.stderr", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Flint-attribute-only-with-reason.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ed227a8f66faccade2fa9affc51e50a0087a5b/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Flint-attribute-only-with-reason.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Frfc-2383-lint-reason%2Flint-attribute-only-with-reason.stderr?ref=83ed227a8f66faccade2fa9affc51e50a0087a5b", "patch": "@@ -0,0 +1,47 @@\n+error: unused attribute\n+  --> $DIR/lint-attribute-only-with-reason.rs:5:1\n+   |\n+LL | #[allow(reason = \"I want to allow something\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-attribute-only-with-reason.rs:3:9\n+   |\n+LL | #![deny(unused_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = note: attribute `allow` without any lints has no effect\n+\n+error: unused attribute\n+  --> $DIR/lint-attribute-only-with-reason.rs:6:1\n+   |\n+LL | #[expect(reason = \"I don't know what I'm waiting for\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `expect` without any lints has no effect\n+\n+error: unused attribute\n+  --> $DIR/lint-attribute-only-with-reason.rs:7:1\n+   |\n+LL | #[warn(reason = \"This should be warn by default\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `warn` without any lints has no effect\n+\n+error: unused attribute\n+  --> $DIR/lint-attribute-only-with-reason.rs:8:1\n+   |\n+LL | #[deny(reason = \"All listed lints are denied\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `deny` without any lints has no effect\n+\n+error: unused attribute\n+  --> $DIR/lint-attribute-only-with-reason.rs:9:1\n+   |\n+LL | #[forbid(reason = \"Just some reason\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n+   |\n+   = note: attribute `forbid` without any lints has no effect\n+\n+error: aborting due to 5 previous errors\n+"}]}