{"sha": "530c884372cbee0ab81df404c90b0bc3b551a474", "node_id": "C_kwDOAAsO6NoAKDUzMGM4ODQzNzJjYmVlMGFiODFkZjQwNGM5MGIwYmMzYjU1MWE0NzQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T22:37:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T22:37:31Z"}, "message": "Rollup merge of #92860 - CraftSpider:rustdoc-json-impl-ice, r=jsha\n\nFix errors on blanket impls by ignoring the children of generated impls\n\nRelated to #83718\n\nWe can safely skip the children, as they don't contain any new info, and may be subtly different for reasons hard to track down, in ways that are consistently worse than the actual generic impl.", "tree": {"sha": "6dc5550e7ea192975c474456a7852154e735f434", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dc5550e7ea192975c474456a7852154e735f434"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/530c884372cbee0ab81df404c90b0bc3b551a474", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6eQrCRBK7hj4Ov3rIwAAaJ8IAGSYextkKReTH9Krg4qfsBxh\nAr+Ss9jyXTn/eYEGunq+aXlLluj/fg9khFlsaXdQgRAvTe8fCaU0LD8obXCDJOBi\n8qhKsQghxWyZn8amWDMxPq/ciMyu0hjYaaM7dyeQlcPz+lH9xcjUuC2KuMYRK71Q\nr4tt/DRTQI3XjGEcLqUyWUQsAjj93qC+umh9n+UzJDQqYeL5mwcR3bBty1HKK0gg\nlePYb4lHfOSJyzi7pzsTCMFbjAU5EAtwHK/fic3yzyY5Pc3XaR8mz5wG3gndhqSa\nqcB7u26CbUPi9HBjlVp/4KM4cTeEQ6fV6AoYE8dtXBU1kFVZ39eJAWNyRD2y+RM=\n=lsVF\n-----END PGP SIGNATURE-----\n", "payload": "tree 6dc5550e7ea192975c474456a7852154e735f434\nparent 10a7204af93271c248dfbe52dba1e1f668dfc1e0\nparent 474e091160a5704ba6c07dee2d7aa789736ca857\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642718251 +0100\ncommitter GitHub <noreply@github.com> 1642718251 +0100\n\nRollup merge of #92860 - CraftSpider:rustdoc-json-impl-ice, r=jsha\n\nFix errors on blanket impls by ignoring the children of generated impls\n\nRelated to #83718\n\nWe can safely skip the children, as they don't contain any new info, and may be subtly different for reasons hard to track down, in ways that are consistently worse than the actual generic impl.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/530c884372cbee0ab81df404c90b0bc3b551a474", "html_url": "https://github.com/rust-lang/rust/commit/530c884372cbee0ab81df404c90b0bc3b551a474", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/530c884372cbee0ab81df404c90b0bc3b551a474/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10a7204af93271c248dfbe52dba1e1f668dfc1e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/10a7204af93271c248dfbe52dba1e1f668dfc1e0", "html_url": "https://github.com/rust-lang/rust/commit/10a7204af93271c248dfbe52dba1e1f668dfc1e0"}, {"sha": "474e091160a5704ba6c07dee2d7aa789736ca857", "url": "https://api.github.com/repos/rust-lang/rust/commits/474e091160a5704ba6c07dee2d7aa789736ca857", "html_url": "https://github.com/rust-lang/rust/commit/474e091160a5704ba6c07dee2d7aa789736ca857"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "13855bf16920b3dd0c058a68b9125d05c4bb0837", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/530c884372cbee0ab81df404c90b0bc3b551a474/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/530c884372cbee0ab81df404c90b0bc3b551a474/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=530c884372cbee0ab81df404c90b0bc3b551a474", "patch": "@@ -171,8 +171,21 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     /// the hashmap because certain items (traits and types) need to have their mappings for trait\n     /// implementations filled out before they're inserted.\n     fn item(&mut self, item: clean::Item) -> Result<(), Error> {\n+        let local_blanket_impl = match item.def_id {\n+            clean::ItemId::Blanket { impl_id, .. } => impl_id.is_local(),\n+            clean::ItemId::Auto { .. }\n+            | clean::ItemId::DefId(_)\n+            | clean::ItemId::Primitive(_, _) => false,\n+        };\n+\n         // Flatten items that recursively store other items\n-        item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n+        // FIXME(CraftSpider): We skip children of local blanket implementations, as we'll have\n+        //     already seen the actual generic impl, and the generated ones don't need documenting.\n+        //     This is necessary due to the visibility, return type, and self arg of the generated\n+        //     impls not quite matching, and will no longer be necessary when the mismatch is fixed.\n+        if !local_blanket_impl {\n+            item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n+        }\n \n         let id = item.def_id;\n         if let Some(mut new_item) = self.convert_item(item) {"}, {"sha": "963ea2fe5aea87e87ec0714bce7bf8833a1e4acf", "filename": "src/test/rustdoc-json/impls/blanket_with_local.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/530c884372cbee0ab81df404c90b0bc3b551a474/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/530c884372cbee0ab81df404c90b0bc3b551a474/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fimpls%2Fblanket_with_local.rs?ref=530c884372cbee0ab81df404c90b0bc3b551a474", "patch": "@@ -0,0 +1,14 @@\n+// Test for the ICE in rust/83718\n+// A blanket impl plus a local type together shouldn't result in mismatched ID issues\n+\n+// @has blanket_with_local.json \"$.index[*][?(@.name=='Load')]\"\n+pub trait Load {\n+    fn load() {}\n+}\n+\n+impl<P> Load for P {\n+    fn load() {}\n+}\n+\n+// @has - \"$.index[*][?(@.name=='Wrapper')]\"\n+pub struct Wrapper {}"}]}