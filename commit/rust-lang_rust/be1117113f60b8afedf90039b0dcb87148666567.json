{"sha": "be1117113f60b8afedf90039b0dcb87148666567", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMTExNzExM2Y2MGI4YWZlZGY5MDAzOWIwZGNiODcxNDg2NjY1Njc=", "commit": {"author": {"name": "Sean Bowe", "email": "ewillbefull@gmail.com", "date": "2015-04-24T18:34:27Z"}, "committer": {"name": "Sean Bowe", "email": "ewillbefull@gmail.com", "date": "2015-04-24T18:34:27Z"}, "message": "Split up tests, reduce coverage", "tree": {"sha": "249a228d66c3abef79859a94853a7b93e1c8925b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/249a228d66c3abef79859a94853a7b93e1c8925b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be1117113f60b8afedf90039b0dcb87148666567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be1117113f60b8afedf90039b0dcb87148666567", "html_url": "https://github.com/rust-lang/rust/commit/be1117113f60b8afedf90039b0dcb87148666567", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be1117113f60b8afedf90039b0dcb87148666567/comments", "author": {"login": "ebfull", "id": 3794471, "node_id": "MDQ6VXNlcjM3OTQ0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3794471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfull", "html_url": "https://github.com/ebfull", "followers_url": "https://api.github.com/users/ebfull/followers", "following_url": "https://api.github.com/users/ebfull/following{/other_user}", "gists_url": "https://api.github.com/users/ebfull/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfull/subscriptions", "organizations_url": "https://api.github.com/users/ebfull/orgs", "repos_url": "https://api.github.com/users/ebfull/repos", "events_url": "https://api.github.com/users/ebfull/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfull/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebfull", "id": 3794471, "node_id": "MDQ6VXNlcjM3OTQ0NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3794471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebfull", "html_url": "https://github.com/ebfull", "followers_url": "https://api.github.com/users/ebfull/followers", "following_url": "https://api.github.com/users/ebfull/following{/other_user}", "gists_url": "https://api.github.com/users/ebfull/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebfull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebfull/subscriptions", "organizations_url": "https://api.github.com/users/ebfull/orgs", "repos_url": "https://api.github.com/users/ebfull/repos", "events_url": "https://api.github.com/users/ebfull/events{/privacy}", "received_events_url": "https://api.github.com/users/ebfull/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f41b74dba4c440dd55e6871407448a9478d5e24", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f41b74dba4c440dd55e6871407448a9478d5e24", "html_url": "https://github.com/rust-lang/rust/commit/8f41b74dba4c440dd55e6871407448a9478d5e24"}], "stats": {"total": 61, "additions": 49, "deletions": 12}, "files": [{"sha": "c6bbf2d4abcc07645493900bdc369db04290d818", "filename": "src/test/compile-fail/issue-22897.rs", "status": "renamed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-22897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-22897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-22897.rs?ref=be1117113f60b8afedf90039b0dcb87148666567", "patch": "@@ -17,15 +17,3 @@ fn unconstrained_type() {\n     [];\n     //~^ ERROR cannot determine a type for this expression: unconstrained type\n }\n-\n-fn invalid_impl_within_scope() {\n-    {\n-        use std::ops::Deref;\n-        struct Something;\n-\n-        impl Deref for Something {}\n-        //~^ ERROR not all trait items implemented, missing: `Target`, `deref`\n-\n-        *Something\n-    };\n-}", "previous_filename": "src/test/compile-fail/typeck-before-dropck-bug.rs"}, {"sha": "68895759c5c2ad5b0b389fbe21361b529d3108ff", "filename": "src/test/compile-fail/issue-23041.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-23041.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-23041.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23041.rs?ref=be1117113f60b8afedf90039b0dcb87148666567", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::any::Any;\n+fn main()\n+{\n+    fn bar(x:i32) ->i32 { 3*x };\n+    let b:Box<Any> = Box::new(bar as fn(_)->_);\n+    b.downcast_ref::<fn(_)->_>();\n+    //~^ ERROR cannot determine a type for this expression: unconstrained type\n+}"}, {"sha": "18b513686652190620384a11b6924c019c7eb0e1", "filename": "src/test/compile-fail/issue-23966.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-23966.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-23966.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23966.rs?ref=be1117113f60b8afedf90039b0dcb87148666567", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    \"\".chars().fold(|_, _| (), ());\n+    //~^ ERROR cannot determine a type for this expression: unconstrained type\n+}"}, {"sha": "0adad8a88cbc9a9a245617059418d559c58e8a2a", "filename": "src/test/compile-fail/issue-24013.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-24013.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be1117113f60b8afedf90039b0dcb87148666567/src%2Ftest%2Fcompile-fail%2Fissue-24013.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-24013.rs?ref=be1117113f60b8afedf90039b0dcb87148666567", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    use std::mem::{transmute, swap};\n+    let a = 1;\n+    let b = 2;\n+    unsafe {swap::<&mut _>(transmute(&a), transmute(&b))};\n+    //~^ ERROR cannot determine a type for this expression: unconstrained type\n+}"}]}