{"sha": "fb3ac74696d64f02e3e75e563a9e378b8b3886bc", "node_id": "C_kwDOAAsO6NoAKGZiM2FjNzQ2OTZkNjRmMDJlM2U3NWU1NjNhOWUzNzhiOGIzODg2YmM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-19T18:40:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-19T18:40:17Z"}, "message": "on an error, always print the unnormalized stderr", "tree": {"sha": "27eab387e612c46c023b5beb604fcc0e3d34ee4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27eab387e612c46c023b5beb604fcc0e3d34ee4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb3ac74696d64f02e3e75e563a9e378b8b3886bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb3ac74696d64f02e3e75e563a9e378b8b3886bc", "html_url": "https://github.com/rust-lang/rust/commit/fb3ac74696d64f02e3e75e563a9e378b8b3886bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb3ac74696d64f02e3e75e563a9e378b8b3886bc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9edbf3676b056e6cd4b887163703d454d5c3e8c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9edbf3676b056e6cd4b887163703d454d5c3e8c3", "html_url": "https://github.com/rust-lang/rust/commit/9edbf3676b056e6cd4b887163703d454d5c3e8c3"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "568e39f5670f037ab72cf15394d2cb1af3f01677", "filename": "ui_test/src/lib.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fb3ac74696d64f02e3e75e563a9e378b8b3886bc/ui_test%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb3ac74696d64f02e3e75e563a9e378b8b3886bc/ui_test%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Flib.rs?ref=fb3ac74696d64f02e3e75e563a9e378b8b3886bc", "patch": "@@ -172,7 +172,6 @@ pub fn run_tests(config: Config) -> Result<()> {\n             eprintln!();\n             eprintln!(\"command: {:?}\", miri);\n             eprintln!();\n-            let mut dump_stderr = true;\n             for error in errors {\n                 match error {\n                     Error::ExitStatus(mode, exit_status) => eprintln!(\"{mode:?} got {exit_status}\"),\n@@ -194,9 +193,6 @@ pub fn run_tests(config: Config) -> Result<()> {\n                     Error::PatternFoundInPassTest =>\n                         eprintln!(\"{}\", \"error pattern found in success test\".red()),\n                     Error::OutputDiffers { path, actual, expected } => {\n-                        if path.extension().unwrap() == \"stderr\" {\n-                            dump_stderr = false;\n-                        }\n                         eprintln!(\"actual output differed from expected {}\", path.display());\n                         eprintln!(\"{}\", pretty_assertions::StrComparison::new(expected, actual));\n                         eprintln!()\n@@ -223,12 +219,9 @@ pub fn run_tests(config: Config) -> Result<()> {\n                 }\n                 eprintln!();\n             }\n-            // Unless we already dumped the stderr via an OutputDiffers diff, let's dump it here.\n-            if dump_stderr {\n-                eprintln!(\"actual stderr:\");\n-                eprintln!(\"{}\", stderr);\n-                eprintln!();\n-            }\n+            eprintln!(\"full stderr:\");\n+            eprintln!(\"{}\", stderr);\n+            eprintln!();\n         }\n         eprintln!(\"{}\", \"failures:\".red().underline());\n         for (path, _miri, _revision, _errors, _stderr) in &failures {"}]}