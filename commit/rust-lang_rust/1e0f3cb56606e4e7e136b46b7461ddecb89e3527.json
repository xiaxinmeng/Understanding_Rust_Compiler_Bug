{"sha": "1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "node_id": "C_kwDOAAsO6NoAKDFlMGYzY2I1NjYwNmU0ZTdlMTM2YjQ2Yjc0NjFkZGVjYjg5ZTM1Mjc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-07T16:01:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-07T16:01:36Z"}, "message": "make a name less ambiguous", "tree": {"sha": "37f70032bbbbd70c791eed88e166454880d3e474", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37f70032bbbbd70c791eed88e166454880d3e474"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "html_url": "https://github.com/rust-lang/rust/commit/1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a73e2557c7ba25ddbc886ad9085a3025db51ceb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a73e2557c7ba25ddbc886ad9085a3025db51ceb3", "html_url": "https://github.com/rust-lang/rust/commit/a73e2557c7ba25ddbc886ad9085a3025db51ceb3"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "29ab1d187719ceb60a72cdbe2f2bda607ed9899b", "filename": "compiler/rustc_const_eval/src/const_eval/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::mir::AssertMessage;\n use rustc_session::Limit;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_target::abi::{Align, Size};\n-use rustc_target::spec::abi::Abi;\n+use rustc_target::spec::abi::Abi as CallAbi;\n \n use crate::interpret::{\n     self, compile_time_machine, AllocId, ConstAllocation, Frame, ImmTy, InterpCx, InterpResult,\n@@ -263,7 +263,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n     fn find_mir_or_eval_fn(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n-        _abi: Abi,\n+        _abi: CallAbi,\n         args: &[OpTy<'tcx>],\n         _dest: &PlaceTy<'tcx>,\n         _ret: Option<mir::BasicBlock>,"}, {"sha": "720f4379847f804f4ba193d788efc96f1762fc4b", "filename": "compiler/rustc_const_eval/src/interpret/machine.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs?ref=1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::mir;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::def_id::DefId;\n use rustc_target::abi::Size;\n-use rustc_target::spec::abi::Abi as FnAbi;\n+use rustc_target::spec::abi::Abi as CallAbi;\n \n use super::{\n     AllocId, AllocRange, Allocation, ConstAllocation, Frame, ImmTy, InterpCx, InterpResult,\n@@ -139,7 +139,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     /// Whether to enforce integers and floats not having provenance.\n     fn enforce_number_no_provenance(ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n \n-    /// Whether function calls should be [ABI](FnAbi)-checked.\n+    /// Whether function calls should be [ABI](CallAbi)-checked.\n     fn enforce_abi(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool {\n         true\n     }\n@@ -170,7 +170,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     fn find_mir_or_eval_fn(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,\n-        abi: FnAbi,\n+        abi: CallAbi,\n         args: &[OpTy<'tcx, Self::PointerTag>],\n         destination: &PlaceTy<'tcx, Self::PointerTag>,\n         target: Option<mir::BasicBlock>,\n@@ -182,7 +182,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     fn call_extra_fn(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         fn_val: Self::ExtraFnVal,\n-        abi: FnAbi,\n+        abi: CallAbi,\n         args: &[OpTy<'tcx, Self::PointerTag>],\n         destination: &PlaceTy<'tcx, Self::PointerTag>,\n         target: Option<mir::BasicBlock>,\n@@ -480,7 +480,7 @@ pub macro compile_time_machine(<$mir: lifetime, $tcx: lifetime>) {\n     fn call_extra_fn(\n         _ecx: &mut InterpCx<$mir, $tcx, Self>,\n         fn_val: !,\n-        _abi: FnAbi,\n+        _abi: CallAbi,\n         _args: &[OpTy<$tcx>],\n         _destination: &PlaceTy<$tcx, Self::PointerTag>,\n         _target: Option<mir::BasicBlock>,"}, {"sha": "572c44622f1da35c9b9175ce02a06cb752c06611", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "patch": "@@ -23,7 +23,7 @@ use rustc_middle::ty::{\n };\n use rustc_span::{def_id::DefId, Span};\n use rustc_target::abi::{self, HasDataLayout, Size, TargetDataLayout};\n-use rustc_target::spec::abi::Abi as FnAbi;\n+use rustc_target::spec::abi::Abi as CallAbi;\n use rustc_trait_selection::traits;\n \n use crate::MirPass;\n@@ -199,7 +199,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine<'mir, 'tcx>\n     fn find_mir_or_eval_fn(\n         _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         _instance: ty::Instance<'tcx>,\n-        _abi: FnAbi,\n+        _abi: CallAbi,\n         _args: &[OpTy<'tcx>],\n         _destination: &PlaceTy<'tcx>,\n         _target: Option<BasicBlock>,"}, {"sha": "7527bf20c1f1ab3022e15a02e1c758dd152bd6ef", "filename": "compiler/rustc_mir_transform/src/const_prop_lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e0f3cb56606e4e7e136b46b7461ddecb89e3527/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs?ref=1e0f3cb56606e4e7e136b46b7461ddecb89e3527", "patch": "@@ -24,7 +24,7 @@ use rustc_middle::ty::{\n use rustc_session::lint;\n use rustc_span::{def_id::DefId, Span};\n use rustc_target::abi::{HasDataLayout, Size, TargetDataLayout};\n-use rustc_target::spec::abi::Abi;\n+use rustc_target::spec::abi::Abi as CallAbi;\n use rustc_trait_selection::traits;\n \n use crate::MirLint;\n@@ -191,7 +191,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine<'mir, 'tcx>\n     fn find_mir_or_eval_fn(\n         _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         _instance: ty::Instance<'tcx>,\n-        _abi: Abi,\n+        _abi: CallAbi,\n         _args: &[OpTy<'tcx>],\n         _destination: &PlaceTy<'tcx>,\n         _target: Option<BasicBlock>,"}]}