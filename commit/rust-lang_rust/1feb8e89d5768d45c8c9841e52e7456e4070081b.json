{"sha": "1feb8e89d5768d45c8c9841e52e7456e4070081b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZWI4ZTg5ZDU3NjhkNDVjOGM5ODQxZTUyZTc0NTZlNDA3MDA4MWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T21:58:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T21:58:35Z"}, "message": "minor: cleanup const parsing", "tree": {"sha": "19e5df145ecc6722e6d63a14f9a02985befa4821", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19e5df145ecc6722e6d63a14f9a02985befa4821"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1feb8e89d5768d45c8c9841e52e7456e4070081b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1feb8e89d5768d45c8c9841e52e7456e4070081b", "html_url": "https://github.com/rust-lang/rust/commit/1feb8e89d5768d45c8c9841e52e7456e4070081b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1feb8e89d5768d45c8c9841e52e7456e4070081b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46326b8db7a47109242c6671272e942c843305c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/46326b8db7a47109242c6671272e942c843305c5", "html_url": "https://github.com/rust-lang/rust/commit/46326b8db7a47109242c6671272e942c843305c5"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "52379411e41f58f6802498472b674905317ff772", "filename": "crates/parser/src/grammar/items/consts.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1feb8e89d5768d45c8c9841e52e7456e4070081b/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1feb8e89d5768d45c8c9841e52e7456e4070081b/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs?ref=1feb8e89d5768d45c8c9841e52e7456e4070081b", "patch": "@@ -1,20 +1,20 @@\n use super::*;\n \n-pub(super) fn static_(p: &mut Parser, m: Marker) {\n-    const_or_static(p, m, T![static], STATIC)\n+pub(super) fn konst(p: &mut Parser, m: Marker) {\n+    p.bump(T![const]);\n+    const_or_static(p, m, true)\n }\n \n-pub(super) fn konst(p: &mut Parser, m: Marker) {\n-    const_or_static(p, m, T![const], CONST)\n+pub(super) fn static_(p: &mut Parser, m: Marker) {\n+    p.bump(T![static]);\n+    const_or_static(p, m, false)\n }\n \n-fn const_or_static(p: &mut Parser, m: Marker, kw: SyntaxKind, def: SyntaxKind) {\n-    assert!(p.at(kw));\n-    p.bump(kw);\n+fn const_or_static(p: &mut Parser, m: Marker, is_const: bool) {\n     p.eat(T![mut]);\n \n     // Allow `_` in place of an identifier in a `const`.\n-    let is_const_underscore = kw == T![const] && p.eat(T![_]);\n+    let is_const_underscore = is_const && p.eat(T![_]);\n     if !is_const_underscore {\n         name(p);\n     }\n@@ -30,5 +30,5 @@ fn const_or_static(p: &mut Parser, m: Marker, kw: SyntaxKind, def: SyntaxKind) {\n         expressions::expr(p);\n     }\n     p.expect(T![;]);\n-    m.complete(p, def);\n+    m.complete(p, if is_const { CONST } else { STATIC });\n }"}]}