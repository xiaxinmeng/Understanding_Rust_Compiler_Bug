{"sha": "e46c782662f1e9fcaa7978810d19d1cb1d342f01", "node_id": "C_kwDOAAsO6NoAKGU0NmM3ODI2NjJmMWU5ZmNhYTc5Nzg4MTBkMTlkMWNiMWQzNDJmMDE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-14T14:56:37Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-30T11:55:17Z"}, "message": "Bless tests.", "tree": {"sha": "5b56d79570012d25183845f4a35aba3c3f9e1cfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b56d79570012d25183845f4a35aba3c3f9e1cfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e46c782662f1e9fcaa7978810d19d1cb1d342f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e46c782662f1e9fcaa7978810d19d1cb1d342f01", "html_url": "https://github.com/rust-lang/rust/commit/e46c782662f1e9fcaa7978810d19d1cb1d342f01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e46c782662f1e9fcaa7978810d19d1cb1d342f01/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2d923ac3b138bb69511bb1f6212633ca14e61ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2d923ac3b138bb69511bb1f6212633ca14e61ee", "html_url": "https://github.com/rust-lang/rust/commit/e2d923ac3b138bb69511bb1f6212633ca14e61ee"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "9143fb2c208a05604d86a10e3fdb59f569b7b3b6", "filename": "tests/ui/extra_unused_lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e46c782662f1e9fcaa7978810d19d1cb1d342f01/tests%2Fui%2Fextra_unused_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e46c782662f1e9fcaa7978810d19d1cb1d342f01/tests%2Fui%2Fextra_unused_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextra_unused_lifetimes.stderr?ref=e46c782662f1e9fcaa7978810d19d1cb1d342f01", "patch": "@@ -6,12 +6,6 @@ LL | fn unused_lt<'a>(x: u8) {}\n    |\n    = note: `-D clippy::extra-unused-lifetimes` implied by `-D warnings`\n \n-error: this lifetime isn't used in the function definition\n-  --> $DIR/extra_unused_lifetimes.rs:16:25\n-   |\n-LL | fn unused_lt_transitive<'a, 'b: 'a>(x: &'b u8) {\n-   |                         ^^\n-\n error: this lifetime isn't used in the function definition\n   --> $DIR/extra_unused_lifetimes.rs:41:10\n    |\n@@ -24,5 +18,5 @@ error: this lifetime isn't used in the function definition\n LL |         fn unused_lt<'a>(x: u8) {}\n    |                      ^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "a488bc01fffa289257f8cd7032c32eacf32ab3f3", "filename": "tests/ui/needless_lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e46c782662f1e9fcaa7978810d19d1cb1d342f01/tests%2Fui%2Fneedless_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e46c782662f1e9fcaa7978810d19d1cb1d342f01/tests%2Fui%2Fneedless_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_lifetimes.stderr?ref=e46c782662f1e9fcaa7978810d19d1cb1d342f01", "patch": "@@ -108,12 +108,6 @@ error: explicit lifetimes given in parameter types where they could be elided (o\n LL |         fn baz<'a>(&'a self) -> impl Foo + 'a {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/needless_lifetimes.rs:307:5\n-   |\n-LL |     fn impl_trait_elidable_nested_named_lifetimes<'a>(i: &'a i32, f: impl for<'b> Fn(&'b i32) -> &'b i32) -> &'a i32 {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n   --> $DIR/needless_lifetimes.rs:310:5\n    |\n@@ -192,5 +186,5 @@ error: explicit lifetimes given in parameter types where they could be elided (o\n LL |         fn lifetime_elsewhere_provided<'a>(self: Box<Self>, here: &'a ()) -> &'a () {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 32 previous errors\n+error: aborting due to 31 previous errors\n "}]}