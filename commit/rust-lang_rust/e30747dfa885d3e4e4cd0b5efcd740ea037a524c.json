{"sha": "e30747dfa885d3e4e4cd0b5efcd740ea037a524c", "node_id": "C_kwDOAAsO6NoAKGUzMDc0N2RmYTg4NWQzZTRlNGNkMGI1ZWZjZDc0MGVhMDM3YTUyNGM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-25T22:46:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-25T22:46:15Z"}, "message": "Merge #11793\n\n11793: LSIF: consolidate references into a single edge where possible. r=Veykril a=khuey\n\n\n\nCo-authored-by: Kyle Huey <khuey@kylehuey.com>", "tree": {"sha": "3af0cebac4cf86a772302253f3bd4243ea3d7aa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af0cebac4cf86a772302253f3bd4243ea3d7aa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e30747dfa885d3e4e4cd0b5efcd740ea037a524c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiPkY3CRBK7hj4Ov3rIwAA9mMIAHbsFY/qgAZlipQQ/a2htTQJ\nxAqbzy5fLoEHSdZTSSPNJOLbxkQjGYUwjZ2Svc7qFmn3u0dRMm5G/Xcc2V396Zlk\nHhBu9AP+qe3t+Q1Bnmum9o6NVl+PCg4o3fsKAHqYFKduYF3Nx4kn7BAxLLY/fq1T\nzwrVJI08ISpTVffiy+UVMQbb8jjE33hQr3YNxPPB4Gb8/omURp9rkPTePqBruQal\ni1j1KZZ0CFgXzT+7XXJ04IfGjZAj1wu2AX5difeOxMRxHnrtfYMWVPH/+obduKMs\nZCzqCIOplZccaIYOP9/vFgOK/aTp+fdcyHcS7qK7zTg3BbFYYoYc5cPa07iIv6g=\n=DonM\n-----END PGP SIGNATURE-----\n", "payload": "tree 3af0cebac4cf86a772302253f3bd4243ea3d7aa1\nparent 68dfda6e48627868f540ee4ce1426172e55c3f7a\nparent af1aa86ac0df3470b379d21531e67fae0e9c942f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648248375 +0000\ncommitter GitHub <noreply@github.com> 1648248375 +0000\n\nMerge #11793\n\n11793: LSIF: consolidate references into a single edge where possible. r=Veykril a=khuey\n\n\n\nCo-authored-by: Kyle Huey <khuey@kylehuey.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e30747dfa885d3e4e4cd0b5efcd740ea037a524c", "html_url": "https://github.com/rust-lang/rust/commit/e30747dfa885d3e4e4cd0b5efcd740ea037a524c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e30747dfa885d3e4e4cd0b5efcd740ea037a524c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68dfda6e48627868f540ee4ce1426172e55c3f7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/68dfda6e48627868f540ee4ce1426172e55c3f7a", "html_url": "https://github.com/rust-lang/rust/commit/68dfda6e48627868f540ee4ce1426172e55c3f7a"}, {"sha": "af1aa86ac0df3470b379d21531e67fae0e9c942f", "url": "https://api.github.com/repos/rust-lang/rust/commits/af1aa86ac0df3470b379d21531e67fae0e9c942f", "html_url": "https://github.com/rust-lang/rust/commit/af1aa86ac0df3470b379d21531e67fae0e9c942f"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "5e6d2869877e7f6747dd9a5a38b2e671d77aed22", "filename": "crates/rust-analyzer/src/cli/lsif.rs", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e30747dfa885d3e4e4cd0b5efcd740ea037a524c/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e30747dfa885d3e4e4cd0b5efcd740ea037a524c/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs?ref=e30747dfa885d3e4e4cd0b5efcd740ea037a524c", "patch": "@@ -212,20 +212,30 @@ impl LsifManager<'_> {\n                 in_v: result_id.into(),\n                 out_v: result_set_id.into(),\n             }));\n+            let mut edges = token.references.iter().fold(\n+                HashMap::<_, Vec<lsp_types::NumberOrString>>::new(),\n+                |mut edges, x| {\n+                    let entry =\n+                        edges.entry((x.range.file_id, x.is_definition)).or_insert_with(Vec::new);\n+                    entry.push((*self.range_map.get(&x.range).unwrap()).into());\n+                    edges\n+                },\n+            );\n             for x in token.references {\n-                let vertex = *self.range_map.get(&x.range).unwrap();\n-                self.add_edge(lsif::Edge::Item(lsif::Item {\n-                    document: (*self.file_map.get(&x.range.file_id).unwrap()).into(),\n-                    property: Some(if x.is_definition {\n-                        lsif::ItemKind::Definitions\n-                    } else {\n-                        lsif::ItemKind::References\n-                    }),\n-                    edge_data: lsif::EdgeDataMultiIn {\n-                        in_vs: vec![vertex.into()],\n-                        out_v: result_id.into(),\n-                    },\n-                }));\n+                if let Some(vertices) = edges.remove(&(x.range.file_id, x.is_definition)) {\n+                    self.add_edge(lsif::Edge::Item(lsif::Item {\n+                        document: (*self.file_map.get(&x.range.file_id).unwrap()).into(),\n+                        property: Some(if x.is_definition {\n+                            lsif::ItemKind::Definitions\n+                        } else {\n+                            lsif::ItemKind::References\n+                        }),\n+                        edge_data: lsif::EdgeDataMultiIn {\n+                            in_vs: vertices,\n+                            out_v: result_id.into(),\n+                        },\n+                    }));\n+                }\n             }\n         }\n     }"}]}