{"sha": "8a9b951f578a1389507c7251b5c75258ac215bf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhOWI5NTFmNTc4YTEzODk1MDdjNzI1MWI1Yzc1MjU4YWMyMTViZjk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-15T20:34:15Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-15T20:34:15Z"}, "message": "Fix rendering on sidebar and update tests", "tree": {"sha": "15a0c3a377d63faa58dcd0d5b0847a59c86eee8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15a0c3a377d63faa58dcd0d5b0847a59c86eee8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a9b951f578a1389507c7251b5c75258ac215bf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a9b951f578a1389507c7251b5c75258ac215bf9", "html_url": "https://github.com/rust-lang/rust/commit/8a9b951f578a1389507c7251b5c75258ac215bf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a9b951f578a1389507c7251b5c75258ac215bf9/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d755238172ead0c619ac404487615534abc51ef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d755238172ead0c619ac404487615534abc51ef1", "html_url": "https://github.com/rust-lang/rust/commit/d755238172ead0c619ac404487615534abc51ef1"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "9406803825350e82abb50b9987f47f73dfc8dbc2", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a9b951f578a1389507c7251b5c75258ac215bf9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a9b951f578a1389507c7251b5c75258ac215bf9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8a9b951f578a1389507c7251b5c75258ac215bf9", "patch": "@@ -4126,14 +4126,14 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                 .filter(|i| i.inner_impl().trait_.is_some())\n                 .find(|i| i.inner_impl().trait_.def_id() == c.deref_trait_did)\n             {\n-                if let Some(target) = impl_\n+                if let Some((target, real_target)) = impl_\n                     .inner_impl()\n                     .items\n                     .iter()\n                     .filter_map(|item| match item.inner {\n                         clean::TypedefItem(ref t, true) => Some(match *t {\n-                            clean::Typedef { item_type: Some(ref type_), .. } => type_,\n-                            _ => &t.type_,\n+                            clean::Typedef { item_type: Some(ref type_), .. } => (type_, &t.type_),\n+                            _ => (&t.type_, &t.type_),\n                         }),\n                         _ => None,\n                     })\n@@ -4153,7 +4153,7 @@ fn sidebar_assoc_items(it: &clean::Item) -> String {\n                                 \"{:#}\",\n                                 impl_.inner_impl().trait_.as_ref().unwrap().print()\n                             )),\n-                            Escape(&format!(\"{:#}\", target.print()))\n+                            Escape(&format!(\"{:#}\", real_target.print()))\n                         ));\n                         out.push_str(\"</a>\");\n                         let mut ret = impls"}, {"sha": "770f8d7289c3bb2ce26a7c3698f6999a9afc7cc3", "filename": "src/test/rustdoc/deref-typedef.rs", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8a9b951f578a1389507c7251b5c75258ac215bf9/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a9b951f578a1389507c7251b5c75258ac215bf9/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-typedef.rs?ref=8a9b951f578a1389507c7251b5c75258ac215bf9", "patch": "@@ -1,19 +1,33 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/struct.Bar.html'\n-// @has '-' '//*[@id=\"deref-methods\"]' 'Methods from Deref<Target = FooB>'\n-// @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.happy\"]' 'pub fn happy(&self)'\n-// @has '-' '//*[@class=\"sidebar-title\"]' 'Methods from Deref<Target=FooB>'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.happy\"]' 'happy'\n+// @has '-' '//*[@id=\"deref-methods\"]' 'Methods from Deref<Target = FooC>'\n+// @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_a\"]' 'pub fn foo_a(&self)'\n+// @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_b\"]' 'pub fn foo_b(&self)'\n+// @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_c\"]' 'pub fn foo_c(&self)'\n+// @has '-' '//*[@class=\"sidebar-title\"]' 'Methods from Deref<Target=FooC>'\n+// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_a\"]' 'foo_a'\n+// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_b\"]' 'foo_b'\n+// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_c\"]' 'foo_c'\n+\n pub struct FooA;\n pub type FooB = FooA;\n+pub type FooC = FooB;\n \n impl FooA {\n-    pub fn happy(&self) {}\n+    pub fn foo_a(&self) {}\n+}\n+\n+impl FooB {\n+    pub fn foo_b(&self) {}\n+}\n+\n+impl FooC {\n+    pub fn foo_c(&self) {}\n }\n \n pub struct Bar;\n impl std::ops::Deref for Bar {\n-    type Target = FooB;\n-    fn deref(&self) -> &FooB { unimplemented!() }\n+    type Target = FooC;\n+    fn deref(&self) -> &Self::Target { unimplemented!() }\n }"}]}