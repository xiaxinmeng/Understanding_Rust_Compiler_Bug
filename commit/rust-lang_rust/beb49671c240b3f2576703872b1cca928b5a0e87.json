{"sha": "beb49671c240b3f2576703872b1cca928b5a0e87", "node_id": "C_kwDOAAsO6NoAKGJlYjQ5NjcxYzI0MGIzZjI1NzY3MDM4NzJiMWNjYTkyOGI1YTBlODc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-08T16:30:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-08T16:30:22Z"}, "message": "Rollup merge of #111118 - chenyukang:yukang-sugg-struct, r=compiler-errors\n\nSuggest struct when we get colon in fileds in enum\n\nA follow-up fix for https://github.com/rust-lang/rust/pull/109128\n\nFrom: https://github.com/rust-lang/rust/pull/109128#discussion_r1179304932\n\nr? `@estebank`", "tree": {"sha": "8ad57140edbdab5f79214256764fd6021d4b3b97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ad57140edbdab5f79214256764fd6021d4b3b97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb49671c240b3f2576703872b1cca928b5a0e87", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkWSOeCRBK7hj4Ov3rIwAAMeoIAKYatZ7gYhaqn++p9eU0YvbV\nLwwqoLmlZqe5UlP0v9UWgXrPywiBuFBaEQAJN+rEkMQVHQ7s3Q7hTloM7n1g5suq\nOh+L6XDzRhqL76NtcBw8udfN/dS1bx9J0HcbW3P7O4GAtbLZk5iEPRfevojDa2Pd\nlttCXBJOo7l9MljteA1lexjhuQYIvx39EK91v5a+Lnel3sQQ+jhQFZo34tgRrqR2\nS4yikIjVDADiD4+CN8JT9GhbaajMX9VkeEVI67ivY737nzN9NIcOqkPHWkENhSTP\nWT0kOZq9YFCMsw1s3zlqcTikwWjPTWc4u66mANfL29iCrOYfhzD4dnjqE0HpQGE=\n=2MH9\n-----END PGP SIGNATURE-----\n", "payload": "tree 8ad57140edbdab5f79214256764fd6021d4b3b97\nparent 68594142b112305d3a19e425724405802efd7806\nparent 0e8703da3e33a76d12186e36a23c87870bc5d7bb\nauthor Michael Goulet <michael@errs.io> 1683563422 -0700\ncommitter GitHub <noreply@github.com> 1683563422 -0700\n\nRollup merge of #111118 - chenyukang:yukang-sugg-struct, r=compiler-errors\n\nSuggest struct when we get colon in fileds in enum\n\nA follow-up fix for https://github.com/rust-lang/rust/pull/109128\n\nFrom: https://github.com/rust-lang/rust/pull/109128#discussion_r1179304932\n\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb49671c240b3f2576703872b1cca928b5a0e87", "html_url": "https://github.com/rust-lang/rust/commit/beb49671c240b3f2576703872b1cca928b5a0e87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb49671c240b3f2576703872b1cca928b5a0e87/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68594142b112305d3a19e425724405802efd7806", "url": "https://api.github.com/repos/rust-lang/rust/commits/68594142b112305d3a19e425724405802efd7806", "html_url": "https://github.com/rust-lang/rust/commit/68594142b112305d3a19e425724405802efd7806"}, {"sha": "0e8703da3e33a76d12186e36a23c87870bc5d7bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e8703da3e33a76d12186e36a23c87870bc5d7bb", "html_url": "https://github.com/rust-lang/rust/commit/0e8703da3e33a76d12186e36a23c87870bc5d7bb"}], "stats": {"total": 58, "additions": 50, "deletions": 8}, "files": [{"sha": "49e05efd39d5c36edb11ae2862f44d50e46eded4", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/beb49671c240b3f2576703872b1cca928b5a0e87/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49671c240b3f2576703872b1cca928b5a0e87/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=beb49671c240b3f2576703872b1cca928b5a0e87", "patch": "@@ -1262,6 +1262,7 @@ impl<'a> Parser<'a> {\n             }\n         }\n \n+        let prev_span = self.prev_token.span;\n         let id = self.parse_ident()?;\n         let mut generics = self.parse_generics()?;\n         generics.where_clause = self.parse_where_clause()?;\n@@ -1273,10 +1274,28 @@ impl<'a> Parser<'a> {\n             (thin_vec![], false)\n         } else {\n             self.parse_delim_comma_seq(Delimiter::Brace, |p| p.parse_enum_variant()).map_err(\n-                |mut e| {\n-                    e.span_label(id.span, \"while parsing this enum\");\n+                |mut err| {\n+                    err.span_label(id.span, \"while parsing this enum\");\n+                    if self.token == token::Colon {\n+                        let snapshot = self.create_snapshot_for_diagnostic();\n+                        self.bump();\n+                        match self.parse_ty() {\n+                            Ok(_) => {\n+                                err.span_suggestion_verbose(\n+                                    prev_span,\n+                                    \"perhaps you meant to use `struct` here\",\n+                                    \"struct\".to_string(),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            }\n+                            Err(e) => {\n+                                e.cancel();\n+                            }\n+                        }\n+                        self.restore_snapshot(snapshot);\n+                    }\n                     self.recover_stmt();\n-                    e\n+                    err\n                 },\n             )?\n         };"}, {"sha": "49fe32c71091c68c903df86e89f17c790ceff743", "filename": "tests/ui/structs-enums/issue-103869.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/beb49671c240b3f2576703872b1cca928b5a0e87/tests%2Fui%2Fstructs-enums%2Fissue-103869.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/beb49671c240b3f2576703872b1cca928b5a0e87/tests%2Fui%2Fstructs-enums%2Fissue-103869.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fissue-103869.fixed?ref=beb49671c240b3f2576703872b1cca928b5a0e87", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+struct VecOrMap {\n+    //~^ HELP: perhaps you meant to use `struct` here\n+    vec: Vec<usize>,\n+    //~^ ERROR expected one of `(`, `,`, `=`, `{`, or `}`, found `:`\n+    //~| HELP: enum variants can be `Variant`, `Variant = <integer>`, `Variant(Type, ..., TypeN)` or `Variant { fields: Types }`\n+}\n+\n+fn main() {\n+    let o = VecOrMap { vec: vec![1, 2, 3] };\n+    println!(\"{:?}\", o.vec);\n+}"}, {"sha": "729079e050115d504d7a946ab954eee89a9fe2f2", "filename": "tests/ui/structs-enums/issue-103869.rs", "status": "renamed", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/beb49671c240b3f2576703872b1cca928b5a0e87/tests%2Fui%2Fstructs-enums%2Fissue-103869.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb49671c240b3f2576703872b1cca928b5a0e87/tests%2Fui%2Fstructs-enums%2Fissue-103869.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fissue-103869.rs?ref=beb49671c240b3f2576703872b1cca928b5a0e87", "patch": "@@ -1,8 +1,13 @@\n-enum VecOrMap{\n+// run-rustfix\n+\n+enum VecOrMap {\n+    //~^ HELP: perhaps you meant to use `struct` here\n     vec: Vec<usize>,\n     //~^ ERROR expected one of `(`, `,`, `=`, `{`, or `}`, found `:`\n     //~| HELP: enum variants can be `Variant`, `Variant = <integer>`, `Variant(Type, ..., TypeN)` or `Variant { fields: Types }`\n-    map: HashMap<String,usize>\n }\n \n-fn main() {}\n+fn main() {\n+    let o = VecOrMap { vec: vec![1, 2, 3] };\n+    println!(\"{:?}\", o.vec);\n+}", "previous_filename": "tests/ui/parser/issue-103869.rs"}, {"sha": "4665ebf89a3c9356390bcacae0b22e189aef7cdd", "filename": "tests/ui/structs-enums/issue-103869.stderr", "status": "renamed", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/beb49671c240b3f2576703872b1cca928b5a0e87/tests%2Fui%2Fstructs-enums%2Fissue-103869.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beb49671c240b3f2576703872b1cca928b5a0e87/tests%2Fui%2Fstructs-enums%2Fissue-103869.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fissue-103869.stderr?ref=beb49671c240b3f2576703872b1cca928b5a0e87", "patch": "@@ -1,12 +1,17 @@\n error: expected one of `(`, `,`, `=`, `{`, or `}`, found `:`\n-  --> $DIR/issue-103869.rs:2:8\n+  --> $DIR/issue-103869.rs:5:8\n    |\n-LL | enum VecOrMap{\n+LL | enum VecOrMap {\n    |      -------- while parsing this enum\n+LL |\n LL |     vec: Vec<usize>,\n    |        ^ expected one of `(`, `,`, `=`, `{`, or `}`\n    |\n    = help: enum variants can be `Variant`, `Variant = <integer>`, `Variant(Type, ..., TypeN)` or `Variant { fields: Types }`\n+help: perhaps you meant to use `struct` here\n+   |\n+LL | struct VecOrMap {\n+   | ~~~~~~\n \n error: aborting due to previous error\n ", "previous_filename": "tests/ui/parser/issue-103869.stderr"}]}