{"sha": "15096371dc957f2ef1a4d9f2853f576dc374b42e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MDk2MzcxZGM5NTdmMmVmMWE0ZDlmMjg1M2Y1NzZkYzM3NGI0MmU=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-12-30T11:44:13Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-06T19:43:58Z"}, "message": "[MIR] Get rid of that nasty unit_ty temporary lval", "tree": {"sha": "3eb56d2f5668ed34f1e3233400f2559c1a3dcfe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3eb56d2f5668ed34f1e3233400f2559c1a3dcfe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15096371dc957f2ef1a4d9f2853f576dc374b42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15096371dc957f2ef1a4d9f2853f576dc374b42e", "html_url": "https://github.com/rust-lang/rust/commit/15096371dc957f2ef1a4d9f2853f576dc374b42e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15096371dc957f2ef1a4d9f2853f576dc374b42e/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21b025f55fa7f68982f9faf58522da11b3d91815", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b025f55fa7f68982f9faf58522da11b3d91815", "html_url": "https://github.com/rust-lang/rust/commit/21b025f55fa7f68982f9faf58522da11b3d91815"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "53ac4d854ed08917022a370fb7ee03ab5d3e172d", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/15096371dc957f2ef1a4d9f2853f576dc374b42e/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15096371dc957f2ef1a4d9f2853f576dc374b42e/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=15096371dc957f2ef1a4d9f2853f576dc374b42e", "patch": "@@ -157,8 +157,9 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n                     }\n \n                     // execute the body, branching back to the test\n-                    let unit_temp = this.unit_temp.clone();\n-                    let body_block_end = unpack!(this.into(&unit_temp, body_block, body));\n+                    // FIXME(#30636): this should not create or request any sort of destination at\n+                    // all.\n+                    let body_block_end = unpack!(this.into(destination, body_block, body));\n                     this.cfg.terminate(body_block_end, Terminator::Goto { target: loop_block });\n \n                     // final point is exit_block"}, {"sha": "d217eb066479364de370bdc536bb7d96c3d091f0", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/15096371dc957f2ef1a4d9f2853f576dc374b42e/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15096371dc957f2ef1a4d9f2853f576dc374b42e/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=15096371dc957f2ef1a4d9f2853f576dc374b42e", "patch": "@@ -23,7 +23,6 @@ pub struct Builder<'a, 'tcx: 'a> {\n     cfg: CFG<'tcx>,\n     scopes: Vec<scope::Scope<'tcx>>,\n     loop_scopes: Vec<scope::LoopScope>,\n-    unit_temp: Lvalue<'tcx>,\n     var_decls: Vec<VarDecl<'tcx>>,\n     var_indices: FnvHashMap<ast::NodeId, u32>,\n     temp_decls: Vec<TempDecl<'tcx>>,\n@@ -79,7 +78,7 @@ macro_rules! unpack {\n ///////////////////////////////////////////////////////////////////////////\n // construct() -- the main entry point for building MIR for a function\n \n-pub fn construct<'a,'tcx>(mut hir: Cx<'a,'tcx>,\n+pub fn construct<'a,'tcx>(hir: Cx<'a,'tcx>,\n                           _span: Span,\n                           implicit_arguments: Vec<Ty<'tcx>>,\n                           explicit_arguments: Vec<(Ty<'tcx>, &'tcx hir::Pat)>,\n@@ -89,20 +88,14 @@ pub fn construct<'a,'tcx>(mut hir: Cx<'a,'tcx>,\n                           -> Mir<'tcx> {\n     let cfg = CFG { basic_blocks: vec![] };\n \n-    // it's handy to have a temporary of type `()` sometimes, so make\n-    // one from the start and keep it available\n-    let temp_decls = vec![TempDecl::<'tcx> { ty: hir.unit_ty() }];\n-    let unit_temp = Lvalue::Temp(0);\n-\n     let mut builder = Builder {\n         hir: hir,\n         cfg: cfg,\n         scopes: vec![],\n         loop_scopes: vec![],\n-        temp_decls: temp_decls,\n+        temp_decls: vec![],\n         var_decls: vec![],\n         var_indices: FnvHashMap(),\n-        unit_temp: unit_temp,\n     };\n \n     assert_eq!(builder.cfg.start_new_block(), START_BLOCK);"}, {"sha": "b49dc6d89624265d68b6f82c396acbc75065efbc", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15096371dc957f2ef1a4d9f2853f576dc374b42e/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15096371dc957f2ef1a4d9f2853f576dc374b42e/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=15096371dc957f2ef1a4d9f2853f576dc374b42e", "patch": "@@ -46,10 +46,6 @@ impl<'a,'tcx:'a> Cx<'a, 'tcx> {\n         ast.make_mirror(self)\n     }\n \n-    pub fn unit_ty(&mut self) -> Ty<'tcx> {\n-        self.tcx.mk_nil()\n-    }\n-\n     pub fn usize_ty(&mut self) -> Ty<'tcx> {\n         self.tcx.types.usize\n     }"}]}