{"sha": "6d598989f62c15b6093cdaf116f2f6318ed1b95c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNTk4OTg5ZjYyYzE1YjYwOTNjZGFmMTE2ZjJmNjMxOGVkMWI5NWM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-03T11:13:10Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-10-03T11:13:10Z"}, "message": "Merge pull request #9697 from sfackler/issue_9155\n\nClose out #9155", "tree": {"sha": "44a0b553e1f947a25093d6ada633089f5e7b15d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44a0b553e1f947a25093d6ada633089f5e7b15d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d598989f62c15b6093cdaf116f2f6318ed1b95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d598989f62c15b6093cdaf116f2f6318ed1b95c", "html_url": "https://github.com/rust-lang/rust/commit/6d598989f62c15b6093cdaf116f2f6318ed1b95c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d598989f62c15b6093cdaf116f2f6318ed1b95c/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f40641e01fe7f79e21f606733646c600820bbd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f40641e01fe7f79e21f606733646c600820bbd8", "html_url": "https://github.com/rust-lang/rust/commit/8f40641e01fe7f79e21f606733646c600820bbd8"}, {"sha": "435ca16f4fa7bd47c16de693054be5cba5fd4ebb", "url": "https://api.github.com/repos/rust-lang/rust/commits/435ca16f4fa7bd47c16de693054be5cba5fd4ebb", "html_url": "https://github.com/rust-lang/rust/commit/435ca16f4fa7bd47c16de693054be5cba5fd4ebb"}], "stats": {"total": 59, "additions": 46, "deletions": 13}, "files": [{"sha": "a8cf8151499f02b41e31110daaf64e00a910b1ee", "filename": "src/libstd/rt/io/buffered.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6d598989f62c15b6093cdaf116f2f6318ed1b95c/src%2Flibstd%2Frt%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d598989f62c15b6093cdaf116f2f6318ed1b95c/src%2Flibstd%2Frt%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fbuffered.rs?ref=6d598989f62c15b6093cdaf116f2f6318ed1b95c", "patch": "@@ -187,25 +187,21 @@ impl<W: Writer> Decorator<W> for BufferedWriter<W> {\n     }\n }\n \n-// FIXME #9155 this should be a newtype struct\n-struct InternalBufferedWriter<W> {\n-    inner: BufferedWriter<W>\n-}\n+struct InternalBufferedWriter<W>(BufferedWriter<W>);\n \n impl<W: Reader> Reader for InternalBufferedWriter<W> {\n     fn read(&mut self, buf: &mut [u8]) -> Option<uint> {\n-        self.inner.inner.read(buf)\n+        self.inner.read(buf)\n     }\n \n     fn eof(&mut self) -> bool {\n-        self.inner.inner.eof()\n+        self.inner.eof()\n     }\n }\n \n /// Wraps a Stream and buffers input and output to and from it\n ///\n /// Note that `BufferedStream` will NOT flush its output buffer when dropped.\n-// FIXME #9155 this should be a newtype struct\n pub struct BufferedStream<S> {\n     priv inner: BufferedReader<InternalBufferedWriter<S>>\n }\n@@ -214,7 +210,7 @@ impl<S: Stream> BufferedStream<S> {\n     pub fn with_capacities(reader_cap: uint, writer_cap: uint, inner: S)\n                            -> BufferedStream<S> {\n         let writer = BufferedWriter::with_capacity(writer_cap, inner);\n-        let internal_writer = InternalBufferedWriter { inner: writer };\n+        let internal_writer = InternalBufferedWriter(writer);\n         let reader = BufferedReader::with_capacity(reader_cap,\n                                                    internal_writer);\n         BufferedStream { inner: reader }\n@@ -238,25 +234,25 @@ impl<S: Stream> Reader for BufferedStream<S> {\n \n impl<S: Stream> Writer for BufferedStream<S> {\n     fn write(&mut self, buf: &[u8]) {\n-        self.inner.inner.inner.write(buf)\n+        self.inner.inner.write(buf)\n     }\n \n     fn flush(&mut self) {\n-        self.inner.inner.inner.flush()\n+        self.inner.inner.flush()\n     }\n }\n \n impl<S: Stream> Decorator<S> for BufferedStream<S> {\n     fn inner(self) -> S {\n-        self.inner.inner.inner.inner()\n+        self.inner.inner.inner()\n     }\n \n     fn inner_ref<'a>(&'a self) -> &'a S {\n-        self.inner.inner.inner.inner_ref()\n+        self.inner.inner.inner_ref()\n     }\n \n     fn inner_mut_ref<'a>(&'a mut self) -> &'a mut S {\n-        self.inner.inner.inner.inner_mut_ref()\n+        self.inner.inner.inner_mut_ref()\n     }\n }\n "}, {"sha": "486eb8fd6f6b8b1c1178babe3f78f658818b2c86", "filename": "src/test/auxiliary/issue_9155.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6d598989f62c15b6093cdaf116f2f6318ed1b95c/src%2Ftest%2Fauxiliary%2Fissue_9155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d598989f62c15b6093cdaf116f2f6318ed1b95c/src%2Ftest%2Fauxiliary%2Fissue_9155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_9155.rs?ref=6d598989f62c15b6093cdaf116f2f6318ed1b95c", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo<T>(T);\n+\n+impl<T> Foo<T> {\n+    pub fn new(t: T) -> Foo<T> {\n+        Foo(t)\n+    }\n+}"}, {"sha": "ba92a0c7b1ff885c4db1fa781681026c368e239c", "filename": "src/test/run-pass/issue_9155.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6d598989f62c15b6093cdaf116f2f6318ed1b95c/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d598989f62c15b6093cdaf116f2f6318ed1b95c/src%2Ftest%2Frun-pass%2Fissue_9155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue_9155.rs?ref=6d598989f62c15b6093cdaf116f2f6318ed1b95c", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_9155.rs\n+// xfail-fast windows doesn't like the aux-build\n+\n+extern mod issue_9155;\n+\n+struct Baz;\n+\n+fn main() {\n+    issue_9155::Foo::new(Baz);\n+}"}]}