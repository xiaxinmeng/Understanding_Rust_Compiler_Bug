{"sha": "6e4061819fa00c74c704507a72d4ee3ca60d60e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNDA2MTgxOWZhMDBjNzRjNzA0NTA3YTcyZDRlZTNjYTYwZDYwZTU=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-09-04T14:49:02Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-09-04T14:49:02Z"}, "message": "Remove left over comment", "tree": {"sha": "9066e45c71ac349f8ca7fb7351c2fd24e1bc1b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9066e45c71ac349f8ca7fb7351c2fd24e1bc1b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e4061819fa00c74c704507a72d4ee3ca60d60e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4061819fa00c74c704507a72d4ee3ca60d60e5", "html_url": "https://github.com/rust-lang/rust/commit/6e4061819fa00c74c704507a72d4ee3ca60d60e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e4061819fa00c74c704507a72d4ee3ca60d60e5/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22c27385734808a69c5520a8417dd3e45f01b536", "url": "https://api.github.com/repos/rust-lang/rust/commits/22c27385734808a69c5520a8417dd3e45f01b536", "html_url": "https://github.com/rust-lang/rust/commit/22c27385734808a69c5520a8417dd3e45f01b536"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "6c60394116b936548d3f8c20a6cbeb57db875bba", "filename": "compiler/rustc_trait_selection/src/traits/object_safety.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6e4061819fa00c74c704507a72d4ee3ca60d60e5/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4061819fa00c74c704507a72d4ee3ca60d60e5/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs?ref=6e4061819fa00c74c704507a72d4ee3ca60d60e5", "patch": "@@ -840,10 +840,7 @@ fn contains_illegal_self_type_reference<'tcx, T: TypeFoldable<'tcx>>(\n             if let Ok(Some(ct)) = AbstractConst::new(self.tcx, uv.shrink()) {\n                 const_evaluatable::walk_abstract_const(self.tcx, ct, |node| {\n                     match node.root(self.tcx, ct.substs) {\n-                        Node::Leaf(leaf) => {\n-                            // let leaf = leaf.subst(self.tcx, ct.substs);\n-                            self.visit_const(leaf)\n-                        }\n+                        Node::Leaf(leaf) => self.visit_const(leaf),\n                         Node::Cast(_, _, ty) => self.visit_ty(ty),\n                         Node::Binop(..) | Node::UnaryOp(..) | Node::FunctionCall(_, _) => {\n                             ControlFlow::CONTINUE"}]}