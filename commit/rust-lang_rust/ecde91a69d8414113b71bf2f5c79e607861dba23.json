{"sha": "ecde91a69d8414113b71bf2f5c79e607861dba23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZGU5MWE2OWQ4NDE0MTEzYjcxYmYyZjVjNzllNjA3ODYxZGJhMjM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-24T08:09:57Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-24T17:08:51Z"}, "message": "Suggest removal of semicolon (instead of being help)", "tree": {"sha": "922599d94a469c29aeda272d9529867e3b630947", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/922599d94a469c29aeda272d9529867e3b630947"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecde91a69d8414113b71bf2f5c79e607861dba23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecde91a69d8414113b71bf2f5c79e607861dba23", "html_url": "https://github.com/rust-lang/rust/commit/ecde91a69d8414113b71bf2f5c79e607861dba23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecde91a69d8414113b71bf2f5c79e607861dba23/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c023856b38c847731720fa8e26f3e1b9062bc946", "url": "https://api.github.com/repos/rust-lang/rust/commits/c023856b38c847731720fa8e26f3e1b9062bc946", "html_url": "https://github.com/rust-lang/rust/commit/c023856b38c847731720fa8e26f3e1b9062bc946"}], "stats": {"total": 51, "additions": 14, "deletions": 37}, "files": [{"sha": "4b71aa6b85f1c91c24f8dd0ea3a19fed0da9bf70", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=ecde91a69d8414113b71bf2f5c79e607861dba23", "patch": "@@ -47,7 +47,12 @@ impl Emitter for EmitterWriter {\n                // don't display multiline suggestions as labels\n                sugg.substitution_parts[0].substitutions[0].find('\\n').is_none() {\n                 let substitution = &sugg.substitution_parts[0].substitutions[0];\n-                let msg = format!(\"help: {} `{}`\", sugg.msg, substitution);\n+                let msg = if substitution.len() == 0 {\n+                    // This substitution is only removal, don't show it\n+                    format!(\"help: {}\", sugg.msg)\n+                } else {\n+                    format!(\"help: {} `{}`\", sugg.msg, substitution)\n+                };\n                 primary_span.push_span_label(sugg.substitution_spans().next().unwrap(), msg);\n             } else {\n                 // if there are multiple suggestions, print them all in full"}, {"sha": "0467f24948e7591d299f19f4659117bfe7511e41", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ecde91a69d8414113b71bf2f5c79e607861dba23", "patch": "@@ -4391,7 +4391,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             hi: original_span.hi,\n             ctxt: original_span.ctxt,\n         };\n-        err.span_help(span_semi, \"consider removing this semicolon:\");\n+        err.span_suggestion(span_semi, \"consider removing this semicolon\", \"\".to_string());\n     }\n \n     // Instantiates the given path, which must refer to an item with the given"}, {"sha": "282583d32a665dcaa0568e9276a3e7d9c41dedf8", "filename": "src/test/ui/block-result/consider-removing-last-semi.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr?ref=ecde91a69d8414113b71bf2f5c79e607861dba23", "patch": "@@ -5,16 +5,12 @@ error[E0308]: mismatched types\n    |  __________________^\n 12 | |     0u8;\n 13 | |     \"bla\".to_string();  //~ HELP consider removing this semicolon\n+   | |                      - help: consider removing this semicolon\n 14 | | }\n    | |_^ expected struct `std::string::String`, found ()\n    |\n    = note: expected type `std::string::String`\n               found type `()`\n-help: consider removing this semicolon:\n-  --> $DIR/consider-removing-last-semi.rs:13:22\n-   |\n-13 |     \"bla\".to_string();  //~ HELP consider removing this semicolon\n-   |                      ^\n \n error[E0308]: mismatched types\n   --> $DIR/consider-removing-last-semi.rs:16:18\n@@ -23,16 +19,12 @@ error[E0308]: mismatched types\n    |  __________________^\n 17 | |     \"this won't work\".to_string();\n 18 | |     \"removeme\".to_string(); //~ HELP consider removing this semicolon\n+   | |                           - help: consider removing this semicolon\n 19 | | }\n    | |_^ expected struct `std::string::String`, found ()\n    |\n    = note: expected type `std::string::String`\n               found type `()`\n-help: consider removing this semicolon:\n-  --> $DIR/consider-removing-last-semi.rs:18:27\n-   |\n-18 |     \"removeme\".to_string(); //~ HELP consider removing this semicolon\n-   |                           ^\n \n error: aborting due to previous error(s)\n "}, {"sha": "ed61ec6ca291f5062e7ff7fe4673be389ab45ee3", "filename": "src/test/ui/block-result/issue-11714.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr?ref=ecde91a69d8414113b71bf2f5c79e607861dba23", "patch": "@@ -6,16 +6,12 @@ error[E0308]: mismatched types\n 12 | |     1\n 13 | |\n 14 | |     ; //~ HELP consider removing this semicolon:\n+   | |     - help: consider removing this semicolon\n 15 | | }\n    | |_^ expected i32, found ()\n    |\n    = note: expected type `i32`\n               found type `()`\n-help: consider removing this semicolon:\n-  --> $DIR/issue-11714.rs:14:5\n-   |\n-14 |     ; //~ HELP consider removing this semicolon:\n-   |     ^\n \n error: aborting due to previous error(s)\n "}, {"sha": "5e8d92f64e29344d7389d6f932d5a89c5dd64d50", "filename": "src/test/ui/block-result/issue-13428.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr?ref=ecde91a69d8414113b71bf2f5c79e607861dba23", "patch": "@@ -8,16 +8,12 @@ error[E0308]: mismatched types\n 16 | |     // Put the trailing semicolon on its own line to test that the\n 17 | |     // note message gets the offending semicolon exactly\n 18 | |     ;   //~ HELP consider removing this semicolon\n+   | |     - help: consider removing this semicolon\n 19 | | }\n    | |_^ expected struct `std::string::String`, found ()\n    |\n    = note: expected type `std::string::String`\n               found type `()`\n-help: consider removing this semicolon:\n-  --> $DIR/issue-13428.rs:18:5\n-   |\n-18 |     ;   //~ HELP consider removing this semicolon\n-   |     ^\n \n error[E0308]: mismatched types\n   --> $DIR/issue-13428.rs:21:20\n@@ -26,16 +22,12 @@ error[E0308]: mismatched types\n    |  ____________________^\n 22 | |     \"foobar\".to_string()\n 23 | |     ;   //~ HELP consider removing this semicolon\n+   | |     - help: consider removing this semicolon\n 24 | | }\n    | |_^ expected struct `std::string::String`, found ()\n    |\n    = note: expected type `std::string::String`\n               found type `()`\n-help: consider removing this semicolon:\n-  --> $DIR/issue-13428.rs:23:5\n-   |\n-23 |     ;   //~ HELP consider removing this semicolon\n-   |     ^\n \n error: aborting due to previous error(s)\n "}, {"sha": "49e8b9febc2bb6a4e44bc093bffe9e705d2a7b28", "filename": "src/test/ui/coercion-missing-tail-expected-type.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecde91a69d8414113b71bf2f5c79e607861dba23/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr?ref=ecde91a69d8414113b71bf2f5c79e607861dba23", "patch": "@@ -4,33 +4,25 @@ error[E0308]: mismatched types\n 13 |   fn plus_one(x: i32) -> i32 {\n    |  ____________________________^\n 14 | |     x + 1;\n+   | |          - help: consider removing this semicolon\n 15 | | }\n    | |_^ expected i32, found ()\n    |\n    = note: expected type `i32`\n               found type `()`\n-help: consider removing this semicolon:\n-  --> $DIR/coercion-missing-tail-expected-type.rs:14:10\n-   |\n-14 |     x + 1;\n-   |          ^\n \n error[E0308]: mismatched types\n   --> $DIR/coercion-missing-tail-expected-type.rs:17:29\n    |\n 17 |   fn foo() -> Result<u8, u64> {\n    |  _____________________________^\n 18 | |     Ok(1);\n+   | |          - help: consider removing this semicolon\n 19 | | }\n    | |_^ expected enum `std::result::Result`, found ()\n    |\n    = note: expected type `std::result::Result<u8, u64>`\n               found type `()`\n-help: consider removing this semicolon:\n-  --> $DIR/coercion-missing-tail-expected-type.rs:18:10\n-   |\n-18 |     Ok(1);\n-   |          ^\n \n error: aborting due to previous error(s)\n "}]}