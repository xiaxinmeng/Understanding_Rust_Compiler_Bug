{"sha": "f9187adaef2005b903f666bf323ac675cadf8407", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MTg3YWRhZWYyMDA1YjkwM2Y2NjZiZjMyM2FjNjc1Y2FkZjg0MDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-29T01:37:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-29T01:37:49Z"}, "message": "Auto merge of #78430 - Nadrieril:taking-constructors-seriously2, r=varkor\n\nClarify main code paths in exhaustiveness checking\n\nThis PR massively clarifies the main code paths of exhaustiveness checking, by using the `Constructor` enum to a fuller extent. I've been itching to write it for more than a year, but the complexity of matching consts had prevented me. Behold a massive simplification :D.\nThis in particular removes a fair amount of duplication between various parts, localizes code into methods of relevant types when applicable, makes some implicit assumptions explicit, and overall improves legibility a lot (or so I hope). Additionally, after my changes undoing #76918 turned out to be a noticeable perf gain.\n\nAs usual I tried my best to make the commits self-contained and easy to follow. I've also tried to keep the code well-commented, but I tend to forget how complex this file is; I'm happy to clarify things as needed.\nMy measurements show good perf improvements on the two match-heavy benchmarks (-18.0% on `unicode_normalization-check`! :D); I'd like a perf run to check the overall impact.\n\nr? `@varkor`\n`@rustbot` modify labels: +A-exhaustiveness-checking", "tree": {"sha": "e688da00c25304fc6ce9a68a365a98c3eb24155a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e688da00c25304fc6ce9a68a365a98c3eb24155a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9187adaef2005b903f666bf323ac675cadf8407", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9187adaef2005b903f666bf323ac675cadf8407", "html_url": "https://github.com/rust-lang/rust/commit/f9187adaef2005b903f666bf323ac675cadf8407", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9187adaef2005b903f666bf323ac675cadf8407/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ee872db5aae4750e3da1ca4ed1523c4356947f", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ee872db5aae4750e3da1ca4ed1523c4356947f", "html_url": "https://github.com/rust-lang/rust/commit/31ee872db5aae4750e3da1ca4ed1523c4356947f"}, {"sha": "41a74ace4aeba292ac524dccaa594c2c8aeb19c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/41a74ace4aeba292ac524dccaa594c2c8aeb19c0", "html_url": "https://github.com/rust-lang/rust/commit/41a74ace4aeba292ac524dccaa594c2c8aeb19c0"}], "stats": {"total": 1863, "additions": 714, "deletions": 1149}, "files": [{"sha": "0866892265bd907824a725c8f7dd4472fc5d44ed", "filename": "compiler/rustc_mir_build/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f9187adaef2005b903f666bf323ac675cadf8407/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9187adaef2005b903f666bf323ac675cadf8407/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs?ref=f9187adaef2005b903f666bf323ac675cadf8407", "patch": "@@ -9,6 +9,7 @@\n #![feature(control_flow_enum)]\n #![feature(crate_visibility_modifier)]\n #![feature(bool_to_option)]\n+#![feature(once_cell)]\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]\n "}, {"sha": "843a6c0e461f9aef1455ccbb029949a2e9e0191a", "filename": "compiler/rustc_mir_build/src/thir/pattern/_match.rs", "status": "modified", "additions": 707, "deletions": 1143, "changes": 1850, "blob_url": "https://github.com/rust-lang/rust/blob/f9187adaef2005b903f666bf323ac675cadf8407/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9187adaef2005b903f666bf323ac675cadf8407/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs?ref=f9187adaef2005b903f666bf323ac675cadf8407"}, {"sha": "8075532c37d76cd0b07f7f1f38aee210e8c1ed0c", "filename": "src/test/ui/issues/issue-30240.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9187adaef2005b903f666bf323ac675cadf8407/src%2Ftest%2Fui%2Fissues%2Fissue-30240.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9187adaef2005b903f666bf323ac675cadf8407/src%2Ftest%2Fui%2Fissues%2Fissue-30240.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30240.rs?ref=f9187adaef2005b903f666bf323ac675cadf8407", "patch": "@@ -1,9 +1,9 @@\n fn main() {\n-    match \"world\" { //~ ERROR non-exhaustive patterns: `&_`\n+    match \"world\" { //~ ERROR non-exhaustive patterns: `_`\n         \"hello\" => {}\n     }\n \n-    match \"world\" { //~ ERROR non-exhaustive patterns: `&_`\n+    match \"world\" { //~ ERROR non-exhaustive patterns: `_`\n         ref _x if false => {}\n         \"hello\" => {}\n     }"}, {"sha": "71a8bcb50cda433e0c9fd75082e610458d3251e2", "filename": "src/test/ui/issues/issue-30240.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f9187adaef2005b903f666bf323ac675cadf8407/src%2Ftest%2Fui%2Fissues%2Fissue-30240.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9187adaef2005b903f666bf323ac675cadf8407/src%2Ftest%2Fui%2Fissues%2Fissue-30240.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30240.stderr?ref=f9187adaef2005b903f666bf323ac675cadf8407", "patch": "@@ -1,17 +1,17 @@\n-error[E0004]: non-exhaustive patterns: `&_` not covered\n+error[E0004]: non-exhaustive patterns: `_` not covered\n   --> $DIR/issue-30240.rs:2:11\n    |\n LL |     match \"world\" {\n-   |           ^^^^^^^ pattern `&_` not covered\n+   |           ^^^^^^^ pattern `_` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n    = note: the matched value is of type `&str`\n \n-error[E0004]: non-exhaustive patterns: `&_` not covered\n+error[E0004]: non-exhaustive patterns: `_` not covered\n   --> $DIR/issue-30240.rs:6:11\n    |\n LL |     match \"world\" {\n-   |           ^^^^^^^ pattern `&_` not covered\n+   |           ^^^^^^^ pattern `_` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n    = note: the matched value is of type `&str`"}]}