{"sha": "5571dd061dac07644b9d9a3e799deefbd9971496", "node_id": "C_kwDOAAsO6NoAKDU1NzFkZDA2MWRhYzA3NjQ0YjlkOWEzZTc5OWRlZWZiZDk5NzE0OTY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-14T13:04:58Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-14T13:04:58Z"}, "message": "fix broken intradoclinks", "tree": {"sha": "d92a95b293c27422db1a0e4b9a2cf7b6f52ca4e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d92a95b293c27422db1a0e4b9a2cf7b6f52ca4e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5571dd061dac07644b9d9a3e799deefbd9971496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5571dd061dac07644b9d9a3e799deefbd9971496", "html_url": "https://github.com/rust-lang/rust/commit/5571dd061dac07644b9d9a3e799deefbd9971496", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5571dd061dac07644b9d9a3e799deefbd9971496/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "014c6f208e59534cf36b11fdf43f8c90a304073f", "url": "https://api.github.com/repos/rust-lang/rust/commits/014c6f208e59534cf36b11fdf43f8c90a304073f", "html_url": "https://github.com/rust-lang/rust/commit/014c6f208e59534cf36b11fdf43f8c90a304073f"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "0e5ecfd9bff6ea836dacdcc144e7e418abe4f45a", "filename": "compiler/rustc_data_structures/src/aligned.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5571dd061dac07644b9d9a3e799deefbd9971496/compiler%2Frustc_data_structures%2Fsrc%2Faligned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5571dd061dac07644b9d9a3e799deefbd9971496/compiler%2Frustc_data_structures%2Fsrc%2Faligned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Faligned.rs?ref=5571dd061dac07644b9d9a3e799deefbd9971496", "patch": "@@ -4,6 +4,8 @@ use std::ptr::Alignment;\n ///\n /// This is equivalent to [`mem::align_of`], but also works for some unsized\n /// types (e.g. slices or rustc's `List`s).\n+///\n+/// [`mem::align_of`]: std::mem::align_of\n pub const fn align_of<T: ?Sized + Aligned>() -> Alignment {\n     T::ALIGN\n }\n@@ -16,7 +18,7 @@ pub const fn align_of<T: ?Sized + Aligned>() -> Alignment {\n /// is [`mem::align_of<Self>()`], for unsized types it depends on the type, for\n /// example `[T]` has alignment of `T`.\n ///\n-/// [`mem::align_of<Self>()`]: mem::align_of\n+/// [`mem::align_of<Self>()`]: std::mem::align_of\n pub unsafe trait Aligned {\n     /// Alignment of `Self`.\n     const ALIGN: Alignment;"}]}