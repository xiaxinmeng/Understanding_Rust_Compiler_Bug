{"sha": "a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyOWM0OWY1Y2NhODQ5Y2Q1YWM3OWIzY2Q3MGI5MzRiYjMzY2Y0ZTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-12T06:36:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-12T06:36:29Z"}, "message": "Auto merge of #37095 - petrochenkov:metactor, r=alexcrichton\n\nTemporary fix for metadata decoding for struct constructors\n\nSame as https://github.com/rust-lang/rust/pull/37078, but for nightly.\nIdeally, metadata lookup functions should \"just work\" for constructor ids, but this fixes the issue as well.\n\nFixes https://github.com/rust-lang/rust/issues/37026\nr? @alexcrichton", "tree": {"sha": "910bd5509ac081de21fb8977a46949fc5bd16e3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/910bd5509ac081de21fb8977a46949fc5bd16e3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "html_url": "https://github.com/rust-lang/rust/commit/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b2c356420c155373d312f4b7063fd19983dfd20", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b2c356420c155373d312f4b7063fd19983dfd20", "html_url": "https://github.com/rust-lang/rust/commit/0b2c356420c155373d312f4b7063fd19983dfd20"}, {"sha": "f5827d08d9b183a96d1ed12b179a80d3167c9f3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5827d08d9b183a96d1ed12b179a80d3167c9f3e", "html_url": "https://github.com/rust-lang/rust/commit/f5827d08d9b183a96d1ed12b179a80d3167c9f3e"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "6db82b862074de8b9bf9beba0c6513770415c43d", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "patch": "@@ -2323,7 +2323,11 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 let enum_did = self.parent_def_id(did).unwrap();\n                 self.lookup_adt_def(enum_did).variant_with_id(did)\n             }\n-            Def::Struct(did) | Def::StructCtor(did, ..) | Def::Union(did) => {\n+            Def::Struct(did) | Def::Union(did) => {\n+                self.lookup_adt_def(did).struct_variant()\n+            }\n+            Def::StructCtor(ctor_did, ..) => {\n+                let did = self.parent_def_id(ctor_did).expect(\"struct ctor has no parent\");\n                 self.lookup_adt_def(did).struct_variant()\n             }\n             _ => bug!(\"expect_variant_def used with unexpected def {:?}\", def)"}, {"sha": "95fd5d1222e696e1a5d76fb06ea3d20f9b21c6ef", "filename": "src/test/compile-fail/issue-37026.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6/src%2Ftest%2Fcompile-fail%2Fissue-37026.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6/src%2Ftest%2Fcompile-fail%2Fissue-37026.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-37026.rs?ref=a29c49f5cca849cd5ac79b3cd70b934bb33cf4e6", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:empty-struct.rs\n+\n+extern crate empty_struct;\n+\n+fn main() {\n+    let empty_struct::XEmpty2 = (); //~ ERROR mismatched types\n+    let empty_struct::XEmpty6(..) = (); //~ ERROR mismatched types\n+}"}]}