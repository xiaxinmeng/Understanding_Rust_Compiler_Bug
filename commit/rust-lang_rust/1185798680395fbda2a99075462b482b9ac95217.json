{"sha": "1185798680395fbda2a99075462b482b9ac95217", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExODU3OTg2ODAzOTVmYmRhMmE5OTA3NTQ2MmI0ODJiOWFjOTUyMTc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-20T11:12:03Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-20T12:26:40Z"}, "message": "Regression test for issue.", "tree": {"sha": "b63d30f6cec6080893abae703c90d8fba65dbd07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b63d30f6cec6080893abae703c90d8fba65dbd07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1185798680395fbda2a99075462b482b9ac95217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1185798680395fbda2a99075462b482b9ac95217", "html_url": "https://github.com/rust-lang/rust/commit/1185798680395fbda2a99075462b482b9ac95217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1185798680395fbda2a99075462b482b9ac95217/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c83602a70239cf3d8c7d8e07e5041de6838e0cd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c83602a70239cf3d8c7d8e07e5041de6838e0cd9", "html_url": "https://github.com/rust-lang/rust/commit/c83602a70239cf3d8c7d8e07e5041de6838e0cd9"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "dcca491a87bb4aae390a8473d9384e1d8f793425", "filename": "src/test/ui/issue-52126-assign-op-invariance.nll.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1185798680395fbda2a99075462b482b9ac95217/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1185798680395fbda2a99075462b482b9ac95217/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.nll.stderr?ref=1185798680395fbda2a99075462b482b9ac95217", "patch": "@@ -0,0 +1,15 @@\n+error[E0597]: `line` does not live long enough\n+  --> $DIR/issue-52126-assign-op-invariance.rs:44:28\n+   |\n+LL |         let v: Vec<&str> = line.split_whitespace().collect();\n+   |                            ^^^^ borrowed value does not live long enough\n+LL |         //~^ ERROR `line` does not live long enough\n+LL |         println!(\"accumulator before add_assign {:?}\", acc.map);\n+   |                                                        ------- borrow later used here\n+...\n+LL |     }\n+   |     - borrowed value only lives until here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "b26ad9bc37dd15dea784869e38dd967175c24259", "filename": "src/test/ui/issue-52126-assign-op-invariance.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/1185798680395fbda2a99075462b482b9ac95217/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1185798680395fbda2a99075462b482b9ac95217/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.rs?ref=1185798680395fbda2a99075462b482b9ac95217", "patch": "@@ -0,0 +1,59 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue 52126: With respect to variance, the assign-op's like += were\n+// accidentally lumped together with other binary op's. In both cases\n+// we were coercing the LHS of the op to the expected supertype.\n+//\n+// The problem is that since the LHS of += is modified, we need the\n+// parameter to be invariant with respect to the overall type, not\n+// covariant.\n+\n+use std::collections::HashMap;\n+use std::ops::AddAssign;\n+\n+pub fn main() {\n+    panics();\n+}\n+\n+pub struct Counter<'l> {\n+    map: HashMap<&'l str, usize>,\n+}\n+\n+impl<'l> AddAssign for Counter<'l>\n+{\n+    fn add_assign(&mut self, rhs: Counter<'l>) {\n+        rhs.map.into_iter().for_each(|(key, val)| {\n+            let count = self.map.entry(key).or_insert(0);\n+            *count += val;\n+        });\n+    }\n+}\n+\n+/// often times crashes, if not prints invalid strings\n+pub fn panics() {\n+    let mut acc = Counter{map: HashMap::new()};\n+    for line in vec![\"123456789\".to_string(), \"12345678\".to_string()] {\n+        let v: Vec<&str> = line.split_whitespace().collect();\n+        //~^ ERROR `line` does not live long enough\n+        println!(\"accumulator before add_assign {:?}\", acc.map);\n+        let mut map = HashMap::new();\n+        for str_ref in v {\n+            let e = map.entry(str_ref);\n+            println!(\"entry: {:?}\", e);\n+            let count = e.or_insert(0);\n+            *count += 1;\n+        }\n+        let cnt2 = Counter{map};\n+        acc += cnt2;\n+        println!(\"accumulator after add_assign {:?}\", acc.map);\n+        // line gets dropped here but references are kept in acc.map\n+    }\n+}"}, {"sha": "a4ea8085c12afbd964fa28b536e710c36d75fe21", "filename": "src/test/ui/issue-52126-assign-op-invariance.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1185798680395fbda2a99075462b482b9ac95217/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1185798680395fbda2a99075462b482b9ac95217/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-52126-assign-op-invariance.stderr?ref=1185798680395fbda2a99075462b482b9ac95217", "patch": "@@ -0,0 +1,14 @@\n+error[E0597]: `line` does not live long enough\n+  --> $DIR/issue-52126-assign-op-invariance.rs:44:28\n+   |\n+LL |         let v: Vec<&str> = line.split_whitespace().collect();\n+   |                            ^^^^ borrowed value does not live long enough\n+...\n+LL |     }\n+   |     - `line` dropped here while still borrowed\n+LL | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}]}