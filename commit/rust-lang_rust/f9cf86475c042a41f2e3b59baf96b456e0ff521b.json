{"sha": "f9cf86475c042a41f2e3b59baf96b456e0ff521b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5Y2Y4NjQ3NWMwNDJhNDFmMmUzYjU5YmFmOTZiNDU2ZTBmZjUyMWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-27T10:38:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-27T10:38:31Z"}, "message": "Merge #3741\n\n3741: More general ctor for ifs r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "983e95c067bf9d8b81240576924cae0357d07185", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/983e95c067bf9d8b81240576924cae0357d07185"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9cf86475c042a41f2e3b59baf96b456e0ff521b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJefdenCRBK7hj4Ov3rIwAAdHIIAKtIB+VcjrTU7MKQDUH/C+QL\nebeM5NL0BjCryjsG/QXmVknHW8O9YlhfnRiFsyeufPUSf1ufA6qvm7aJ/HCUMxAg\nfppOiaqeJTR+xzx8rZIsUUADHsUNZiphmGt5dhVYACOqHe20hTAk9Yv02P8ERmOU\nU4QNssHsGn/UUex9pMUnLKqFD+IS7XUZL8Zdt1xUkXywPMMv6Jb+1qPmnVx3J4vJ\nioD1NeziBJZ6RQj/bCY1B9aGQdOajVkHy7Z6VbB2cTlIhQumq/9XYPpA0QtRqZgf\n2Uk6hEJTtIfAZ4uAohtaGK/Js1X2IXxgT4iORKpr8Ba8moU3UZCuURTG3VNYoRs=\n=FM55\n-----END PGP SIGNATURE-----\n", "payload": "tree 983e95c067bf9d8b81240576924cae0357d07185\nparent 31528620a8fca9ea79947d53b796460d0928dd95\nparent cbb53cf55ca350bbcada5fc759b0119d932e879d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1585305511 +0000\ncommitter GitHub <noreply@github.com> 1585305511 +0000\n\nMerge #3741\n\n3741: More general ctor for ifs r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9cf86475c042a41f2e3b59baf96b456e0ff521b", "html_url": "https://github.com/rust-lang/rust/commit/f9cf86475c042a41f2e3b59baf96b456e0ff521b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9cf86475c042a41f2e3b59baf96b456e0ff521b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31528620a8fca9ea79947d53b796460d0928dd95", "url": "https://api.github.com/repos/rust-lang/rust/commits/31528620a8fca9ea79947d53b796460d0928dd95", "html_url": "https://github.com/rust-lang/rust/commit/31528620a8fca9ea79947d53b796460d0928dd95"}, {"sha": "cbb53cf55ca350bbcada5fc759b0119d932e879d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbb53cf55ca350bbcada5fc759b0119d932e879d", "html_url": "https://github.com/rust-lang/rust/commit/cbb53cf55ca350bbcada5fc759b0119d932e879d"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "ea6c56f8cffe8df89401efed72cb9505f10283dd", "filename": "crates/ra_assists/src/handlers/early_return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9cf86475c042a41f2e3b59baf96b456e0ff521b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9cf86475c042a41f2e3b59baf96b456e0ff521b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs?ref=f9cf86475c042a41f2e3b59baf96b456e0ff521b", "patch": "@@ -104,7 +104,7 @@ pub(crate) fn convert_to_guarded_return(ctx: AssistCtx) -> Option<Assist> {\n                     let then_branch =\n                         make::block_expr(once(make::expr_stmt(early_expression).into()), None);\n                     let cond = invert_boolean_expression(cond_expr);\n-                    let e = make::expr_if(cond, then_branch);\n+                    let e = make::expr_if(make::condition(cond, None), then_branch);\n                     if_indent_level.increase_indent(e)\n                 };\n                 replace(new_expr.syntax(), &then_block, &parent_block, &if_expr)"}, {"sha": "69bacf224fcd95816c0eef554d5bdb4adb25e70d", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f9cf86475c042a41f2e3b59baf96b456e0ff521b/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9cf86475c042a41f2e3b59baf96b456e0ff521b/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=f9cf86475c042a41f2e3b59baf96b456e0ff521b", "patch": "@@ -108,7 +108,7 @@ pub fn expr_return() -> ast::Expr {\n pub fn expr_match(expr: ast::Expr, match_arm_list: ast::MatchArmList) -> ast::Expr {\n     expr_from_text(&format!(\"match {} {}\", expr, match_arm_list))\n }\n-pub fn expr_if(condition: ast::Expr, then_branch: ast::BlockExpr) -> ast::Expr {\n+pub fn expr_if(condition: ast::Condition, then_branch: ast::BlockExpr) -> ast::Expr {\n     expr_from_text(&format!(\"if {} {}\", condition, then_branch))\n }\n pub fn expr_prefix(op: SyntaxKind, expr: ast::Expr) -> ast::Expr {\n@@ -123,6 +123,15 @@ pub fn try_expr_from_text(text: &str) -> Option<ast::Expr> {\n     try_ast_from_text(&format!(\"const C: () = {};\", text))\n }\n \n+pub fn condition(expr: ast::Expr, pattern: Option<ast::Pat>) -> ast::Condition {\n+    match pattern {\n+        None => ast_from_text(&format!(\"const _: () = while {} {{}};\", expr)),\n+        Some(pattern) => {\n+            ast_from_text(&format!(\"const _: () = while {} = {} {{}};\", pattern, expr))\n+        }\n+    }\n+}\n+\n pub fn bind_pat(name: ast::Name) -> ast::BindPat {\n     return from_text(name.text());\n "}]}