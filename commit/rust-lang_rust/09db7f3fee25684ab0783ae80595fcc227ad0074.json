{"sha": "09db7f3fee25684ab0783ae80595fcc227ad0074", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZGI3ZjNmZWUyNTY4NGFiMDc4M2FlODA1OTVmY2MyMjdhZDAwNzQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T14:41:51Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-08-13T16:15:42Z"}, "message": "fix", "tree": {"sha": "386300328f3edcd4675346be2044a9780dab012f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/386300328f3edcd4675346be2044a9780dab012f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09db7f3fee25684ab0783ae80595fcc227ad0074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09db7f3fee25684ab0783ae80595fcc227ad0074", "html_url": "https://github.com/rust-lang/rust/commit/09db7f3fee25684ab0783ae80595fcc227ad0074", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09db7f3fee25684ab0783ae80595fcc227ad0074/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2bdc8571552ad74af18f71e8d026846947615e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2bdc8571552ad74af18f71e8d026846947615e4", "html_url": "https://github.com/rust-lang/rust/commit/c2bdc8571552ad74af18f71e8d026846947615e4"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "be34458e0dc87b32a693fd8b232b13dda8c8c2a6", "filename": "src/collapsible_if.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/09db7f3fee25684ab0783ae80595fcc227ad0074/src%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db7f3fee25684ab0783ae80595fcc227ad0074/src%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcollapsible_if.rs?ref=09db7f3fee25684ab0783ae80595fcc227ad0074", "patch": "@@ -45,8 +45,12 @@ fn check_expr_expd(cx: &Context, e: &Expr, info: Option<&ExpnInfo>) {\n     if in_macro(cx, info) { return; }\n \n     if let ExprIf(ref check, ref then, None) = e.node {\n-        if let Some(&Expr{ node: ExprIf(ref check_inner, ref content, None), ..}) =\n+        if let Some(&Expr{ node: ExprIf(ref check_inner, ref content, None), span: sp, ..}) =\n             single_stmt_of_block(then) {\n+                if e.span.expn_id != sp.expn_id {\n+                    return;\n+                }\n+                cx.sess().note(&format!(\"{:?} -- {:?}\", e.span, sp));\n                 span_help_and_lint(cx, COLLAPSIBLE_IF, e.span,\n                     \"this if statement can be collapsed\",\n                     &format!(\"try\\nif {} && {} {}\","}, {"sha": "74015bdc6beddf676a7645d293aada3104d93912", "filename": "src/loops.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/09db7f3fee25684ab0783ae80595fcc227ad0074/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db7f3fee25684ab0783ae80595fcc227ad0074/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=09db7f3fee25684ab0783ae80595fcc227ad0074", "patch": "@@ -72,13 +72,12 @@ impl LintPass for LoopsPass {\n \n /// Recover the essential nodes of a desugared for loop:\n /// `for pat in arg { body }` becomes `(pat, arg, body)`.\n-fn recover_for_loop<'a>(expr: &Expr) -> Option<(&Pat, &Expr, &Expr)> {\n+fn recover_for_loop(expr: &Expr) -> Option<(&Pat, &Expr, &Expr)> {\n     if_let_chain! {\n         [\n             let ExprMatch(ref iterexpr, ref arms, _) = expr.node,\n             let ExprCall(_, ref iterargs) = iterexpr.node,\n-            iterargs.len() == 1,\n-            arms.len() == 1 && arms[0].guard.is_none(),\n+            iterargs.len() == 1 && arms.len() == 1 && arms[0].guard.is_none(),\n             let ExprLoop(ref block, _) = arms[0].body.node,\n             block.stmts.is_empty(),\n             let Some(ref loopexpr) = block.expr,"}, {"sha": "7372bfed6c5455f9cca7067d5e4f19fec6a9f644", "filename": "src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09db7f3fee25684ab0783ae80595fcc227ad0074/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09db7f3fee25684ab0783ae80595fcc227ad0074/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=09db7f3fee25684ab0783ae80595fcc227ad0074", "patch": "@@ -73,7 +73,7 @@ impl LintPass for TopLevelRefPass {\n     }\n \n     fn check_fn(&mut self, cx: &Context, _: FnKind, decl: &FnDecl, _: &Block, _: Span, _: NodeId) {\n-        for ref arg in decl.inputs.iter() {\n+        for ref arg in &decl.inputs {\n             if let PatIdent(BindByRef(_), _, _) = arg.pat.node {\n                 span_lint(cx,\n                     TOPLEVEL_REF_ARG,"}]}