{"sha": "d249f67a27965d930e75acbd3db6b90e3940331b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNDlmNjdhMjc5NjVkOTMwZTc1YWNiZDNkYjZiOTBlMzk0MDMzMWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-14T13:35:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-14T13:35:33Z"}, "message": "Rollup merge of #71122 - lcnr:update-docs, r=Mark-Simulacrum\n\nupdate `FnCtxt::lookup_method` docs\n\nLooks like the doc comment was forgotten during a refactor.", "tree": {"sha": "b22a1c74ffa3226a2316c5265c9e5f05b3b248bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b22a1c74ffa3226a2316c5265c9e5f05b3b248bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d249f67a27965d930e75acbd3db6b90e3940331b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJelbwlCRBK7hj4Ov3rIwAAdHIIAHQf90pf9xp2ilJT6bASG98T\n4cEsqcrTBMOSBfeC+l2gytLPE2UeuuROdXh0frm7ynvckErGMwfE0q2gcajktoRA\n+tPWRKe5bADEJDZmrkB80Yj1P3o6k1OV4fHBts0kilvyfHffqsqd3sbCx2NqvmRh\nhov1jSkIdNQ22MyCMSLCCpxDhFp54y4k9Wy857xlUAt2pcpuH2JM9XPUkF0trbn4\n9IgkmCeBfLp+aQKXayVvgjv4e2DN5o2rfpeLR43Vcg+PGgNnNBtef6Yuxfrv7ku+\ncxwuwW0X+lX34Q/nC21Fw7HPKhLiPJ02lzXdyV+UYFzfu6lt5LZ5QnuUx3lNn+c=\n=VThB\n-----END PGP SIGNATURE-----\n", "payload": "tree b22a1c74ffa3226a2316c5265c9e5f05b3b248bf\nparent 340b7314e3c95c1e21ba5dd19f08a532cc780ac9\nparent 723def25c8cc978100ffb62cff522ae3734323c6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586871333 +0200\ncommitter GitHub <noreply@github.com> 1586871333 +0200\n\nRollup merge of #71122 - lcnr:update-docs, r=Mark-Simulacrum\n\nupdate `FnCtxt::lookup_method` docs\n\nLooks like the doc comment was forgotten during a refactor.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d249f67a27965d930e75acbd3db6b90e3940331b", "html_url": "https://github.com/rust-lang/rust/commit/d249f67a27965d930e75acbd3db6b90e3940331b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d249f67a27965d930e75acbd3db6b90e3940331b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "340b7314e3c95c1e21ba5dd19f08a532cc780ac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/340b7314e3c95c1e21ba5dd19f08a532cc780ac9", "html_url": "https://github.com/rust-lang/rust/commit/340b7314e3c95c1e21ba5dd19f08a532cc780ac9"}, {"sha": "723def25c8cc978100ffb62cff522ae3734323c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/723def25c8cc978100ffb62cff522ae3734323c6", "html_url": "https://github.com/rust-lang/rust/commit/723def25c8cc978100ffb62cff522ae3734323c6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c4f53332cb6739011a956ae5dc88ac035a6c8286", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d249f67a27965d930e75acbd3db6b90e3940331b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d249f67a27965d930e75acbd3db6b90e3940331b/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=d249f67a27965d930e75acbd3db6b90e3940331b", "patch": "@@ -171,11 +171,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     ///\n     /// Given a method call like `foo.bar::<T1,...Tn>(...)`:\n     ///\n-    /// * `fcx`:                   the surrounding `FnCtxt` (!)\n-    /// * `span`:                  the span for the method call\n-    /// * `method_name`:           the name of the method being called (`bar`)\n+    /// * `self`:                  the surrounding `FnCtxt` (!)\n     /// * `self_ty`:               the (unadjusted) type of the self expression (`foo`)\n-    /// * `supplied_method_types`: the explicit method type parameters, if any (`T1..Tn`)\n+    /// * `segment`:               the name and generic arguments of the method (`bar::<T1, ...Tn>`)\n+    /// * `span`:                  the span for the method call\n+    /// * `call_expr`:             the complete method call: (`foo.bar::<T1,...Tn>(...)`)\n     /// * `self_expr`:             the self expression (`foo`)\n     pub fn lookup_method(\n         &self,"}]}