{"sha": "b59895847ea7decdd979dc3d67c3d0c7e0bf119d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OTg5NTg0N2VhN2RlY2RkOTc5ZGMzZDY3YzNkMGM3ZTBiZjExOWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-08T04:39:15Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-01T05:43:12Z"}, "message": "Remove the need to count lang items\n\nThis solves horrible diffs where all you do is renumber literally everything.", "tree": {"sha": "46d38ce51f3840156eaf033606a0dc514ae26015", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46d38ce51f3840156eaf033606a0dc514ae26015"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59895847ea7decdd979dc3d67c3d0c7e0bf119d", "comment_count": 3, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59895847ea7decdd979dc3d67c3d0c7e0bf119d", "html_url": "https://github.com/rust-lang/rust/commit/b59895847ea7decdd979dc3d67c3d0c7e0bf119d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59895847ea7decdd979dc3d67c3d0c7e0bf119d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cad4fcd21b0e620830b818037101e523323746ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/cad4fcd21b0e620830b818037101e523323746ea", "html_url": "https://github.com/rust-lang/rust/commit/cad4fcd21b0e620830b818037101e523323746ea"}], "stats": {"total": 175, "additions": 81, "deletions": 94}, "files": [{"sha": "82c927a1c2d58eb5ced2b792330ce6fd0ba7654a", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 76, "deletions": 89, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/b59895847ea7decdd979dc3d67c3d0c7e0bf119d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59895847ea7decdd979dc3d67c3d0c7e0bf119d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=b59895847ea7decdd979dc3d67c3d0c7e0bf119d", "patch": "@@ -33,41 +33,28 @@ use std::hashmap::HashMap;\n use std::iter::Enumerate;\n use std::vec;\n \n-\n-// Get the last \"argument\" (has to be done recursively to avoid phoney local ambiguity error)\n-macro_rules! last {\n-    ( $first:expr, $( $remainder:expr, )+ ) => ( last!( $( $remainder, )+ ) );\n-    ( $first:expr, ) => ( $first )\n-}\n-\n // The actual lang items defined come at the end of this file in one handy table.\n // So you probably just want to nip down to the end.\n macro_rules! lets_do_this {\n-    // secondary rule to allow us to use `$num` as both an expression\n-    // and a pattern.\n     (\n-        $( $num:tt, $variant:ident, $name:expr, $method:ident; )*\n-    ) => {\n-        lets_do_this!(count = 1 + last!($($num,)*),\n-                      $($num, $variant, $name, $method; )*)\n-    };\n-\n-    (\n-        count = $num_lang_items:expr, $( $num:pat, $variant:ident, $name:expr, $method:ident; )*\n+        $( $variant:ident, $name:expr, $method:ident; )*\n     ) => {\n \n+#[deriving(FromPrimitive)]\n pub enum LangItem {\n     $($variant),*\n }\n \n pub struct LanguageItems {\n-    items: [Option<ast::DefId>, ..$num_lang_items]\n+    items: ~[Option<ast::DefId>],\n }\n \n impl LanguageItems {\n     pub fn new() -> LanguageItems {\n+        fn foo(_: LangItem) -> Option<ast::DefId> { None }\n+\n         LanguageItems {\n-            items: [ None, ..$num_lang_items ]\n+            items: ~[$(foo($variant)),*]\n         }\n     }\n \n@@ -76,9 +63,10 @@ impl LanguageItems {\n     }\n \n     pub fn item_name(index: uint) -> &'static str {\n-        match index {\n-            $( $num => $name, )*\n-            _ => \"???\"\n+        let item: Option<LangItem> = FromPrimitive::from_uint(index);\n+        match item {\n+            $( Some($variant) => $name, )*\n+            None => \"???\"\n         }\n     }\n \n@@ -208,82 +196,81 @@ pub fn extract(attrs: &[ast::Attribute]) -> Option<@str> {\n }\n \n pub fn collect_language_items(crate: &ast::Crate,\n-                              session: Session)\n-                           -> LanguageItems {\n+                              session: Session) -> @LanguageItems {\n     let mut collector = LanguageItemCollector::new(session);\n     collector.collect(crate);\n     let LanguageItemCollector { items, .. } = collector;\n     session.abort_if_errors();\n-    items\n+    @items\n }\n \n // End of the macro\n     }\n }\n \n lets_do_this! {\n-//  ID, Variant name,                    Name,                      Method name;\n-    0,  FreezeTraitLangItem,             \"freeze\",                  freeze_trait;\n-    1,  SendTraitLangItem,               \"send\",                    send_trait;\n-    2,  SizedTraitLangItem,              \"sized\",                   sized_trait;\n-    3,  PodTraitLangItem,                \"pod\",                     pod_trait;\n-\n-    4,  DropTraitLangItem,               \"drop\",                    drop_trait;\n-\n-    5,  AddTraitLangItem,                \"add\",                     add_trait;\n-    6,  SubTraitLangItem,                \"sub\",                     sub_trait;\n-    7,  MulTraitLangItem,                \"mul\",                     mul_trait;\n-    8,  DivTraitLangItem,                \"div\",                     div_trait;\n-    9,  RemTraitLangItem,                \"rem\",                     rem_trait;\n-    10, NegTraitLangItem,                \"neg\",                     neg_trait;\n-    11, NotTraitLangItem,                \"not\",                     not_trait;\n-    12, BitXorTraitLangItem,             \"bitxor\",                  bitxor_trait;\n-    13, BitAndTraitLangItem,             \"bitand\",                  bitand_trait;\n-    14, BitOrTraitLangItem,              \"bitor\",                   bitor_trait;\n-    15, ShlTraitLangItem,                \"shl\",                     shl_trait;\n-    16, ShrTraitLangItem,                \"shr\",                     shr_trait;\n-    17, IndexTraitLangItem,              \"index\",                   index_trait;\n-\n-    18, EqTraitLangItem,                 \"eq\",                      eq_trait;\n-    19, OrdTraitLangItem,                \"ord\",                     ord_trait;\n-\n-    20, StrEqFnLangItem,                 \"str_eq\",                  str_eq_fn;\n-    21, UniqStrEqFnLangItem,             \"uniq_str_eq\",             uniq_str_eq_fn;\n-    22, FailFnLangItem,                  \"fail_\",                   fail_fn;\n-    23, FailBoundsCheckFnLangItem,       \"fail_bounds_check\",       fail_bounds_check_fn;\n-    24, ExchangeMallocFnLangItem,        \"exchange_malloc\",         exchange_malloc_fn;\n-    25, ClosureExchangeMallocFnLangItem, \"closure_exchange_malloc\", closure_exchange_malloc_fn;\n-    26, ExchangeFreeFnLangItem,          \"exchange_free\",           exchange_free_fn;\n-    27, MallocFnLangItem,                \"malloc\",                  malloc_fn;\n-    28, FreeFnLangItem,                  \"free\",                    free_fn;\n-    29, StrDupUniqFnLangItem,            \"strdup_uniq\",             strdup_uniq_fn;\n-\n-    30, StartFnLangItem,                 \"start\",                   start_fn;\n-\n-    31, TyDescStructLangItem,            \"ty_desc\",                 ty_desc;\n-    32, TyVisitorTraitLangItem,          \"ty_visitor\",              ty_visitor;\n-    33, OpaqueStructLangItem,            \"opaque\",                  opaque;\n-\n-    34, EventLoopFactoryLangItem,        \"event_loop_factory\",      event_loop_factory;\n-\n-    35, TypeIdLangItem,                  \"type_id\",                 type_id;\n-\n-    36, EhPersonalityLangItem,           \"eh_personality\",          eh_personality_fn;\n-\n-    37, ManagedHeapLangItem,             \"managed_heap\",            managed_heap;\n-    38, ExchangeHeapLangItem,            \"exchange_heap\",           exchange_heap;\n-    39, GcLangItem,                      \"gc\",                      gc;\n-\n-    40, CovariantTypeItem,               \"covariant_type\",          covariant_type;\n-    41, ContravariantTypeItem,           \"contravariant_type\",      contravariant_type;\n-    42, InvariantTypeItem,               \"invariant_type\",          invariant_type;\n-\n-    43, CovariantLifetimeItem,           \"covariant_lifetime\",      covariant_lifetime;\n-    44, ContravariantLifetimeItem,       \"contravariant_lifetime\",  contravariant_lifetime;\n-    45, InvariantLifetimeItem,           \"invariant_lifetime\",      invariant_lifetime;\n-\n-    46, NoFreezeItem,                    \"no_freeze_bound\",         no_freeze_bound;\n-    47, NoSendItem,                      \"no_send_bound\",           no_send_bound;\n-    48, NoPodItem,                       \"no_pod_bound\",            no_pod_bound;\n-    49, ManagedItem,                     \"managed_bound\",           managed_bound;\n+//  Variant name,                    Name,                      Method name;\n+    FreezeTraitLangItem,             \"freeze\",                  freeze_trait;\n+    SendTraitLangItem,               \"send\",                    send_trait;\n+    SizedTraitLangItem,              \"sized\",                   sized_trait;\n+    PodTraitLangItem,                \"pod\",                     pod_trait;\n+\n+    DropTraitLangItem,               \"drop\",                    drop_trait;\n+\n+    AddTraitLangItem,                \"add\",                     add_trait;\n+    SubTraitLangItem,                \"sub\",                     sub_trait;\n+    MulTraitLangItem,                \"mul\",                     mul_trait;\n+    DivTraitLangItem,                \"div\",                     div_trait;\n+    RemTraitLangItem,                \"rem\",                     rem_trait;\n+    NegTraitLangItem,                \"neg\",                     neg_trait;\n+    NotTraitLangItem,                \"not\",                     not_trait;\n+    BitXorTraitLangItem,             \"bitxor\",                  bitxor_trait;\n+    BitAndTraitLangItem,             \"bitand\",                  bitand_trait;\n+    BitOrTraitLangItem,              \"bitor\",                   bitor_trait;\n+    ShlTraitLangItem,                \"shl\",                     shl_trait;\n+    ShrTraitLangItem,                \"shr\",                     shr_trait;\n+    IndexTraitLangItem,              \"index\",                   index_trait;\n+\n+    EqTraitLangItem,                 \"eq\",                      eq_trait;\n+    OrdTraitLangItem,                \"ord\",                     ord_trait;\n+\n+    StrEqFnLangItem,                 \"str_eq\",                  str_eq_fn;\n+    UniqStrEqFnLangItem,             \"uniq_str_eq\",             uniq_str_eq_fn;\n+    FailFnLangItem,                  \"fail_\",                   fail_fn;\n+    FailBoundsCheckFnLangItem,       \"fail_bounds_check\",       fail_bounds_check_fn;\n+    ExchangeMallocFnLangItem,        \"exchange_malloc\",         exchange_malloc_fn;\n+    ClosureExchangeMallocFnLangItem, \"closure_exchange_malloc\", closure_exchange_malloc_fn;\n+    ExchangeFreeFnLangItem,          \"exchange_free\",           exchange_free_fn;\n+    MallocFnLangItem,                \"malloc\",                  malloc_fn;\n+    FreeFnLangItem,                  \"free\",                    free_fn;\n+    StrDupUniqFnLangItem,            \"strdup_uniq\",             strdup_uniq_fn;\n+\n+    StartFnLangItem,                 \"start\",                   start_fn;\n+\n+    TyDescStructLangItem,            \"ty_desc\",                 ty_desc;\n+    TyVisitorTraitLangItem,          \"ty_visitor\",              ty_visitor;\n+    OpaqueStructLangItem,            \"opaque\",                  opaque;\n+\n+    EventLoopFactoryLangItem,        \"event_loop_factory\",      event_loop_factory;\n+\n+    TypeIdLangItem,                  \"type_id\",                 type_id;\n+\n+    EhPersonalityLangItem,           \"eh_personality\",          eh_personality_fn;\n+\n+    ManagedHeapLangItem,             \"managed_heap\",            managed_heap;\n+    ExchangeHeapLangItem,            \"exchange_heap\",           exchange_heap;\n+    GcLangItem,                      \"gc\",                      gc;\n+\n+    CovariantTypeItem,               \"covariant_type\",          covariant_type;\n+    ContravariantTypeItem,           \"contravariant_type\",      contravariant_type;\n+    InvariantTypeItem,               \"invariant_type\",          invariant_type;\n+\n+    CovariantLifetimeItem,           \"covariant_lifetime\",      covariant_lifetime;\n+    ContravariantLifetimeItem,       \"contravariant_lifetime\",  contravariant_lifetime;\n+    InvariantLifetimeItem,           \"invariant_lifetime\",      invariant_lifetime;\n+\n+    NoFreezeItem,                    \"no_freeze_bound\",         no_freeze_bound;\n+    NoSendItem,                      \"no_send_bound\",           no_send_bound;\n+    NoPodItem,                       \"no_pod_bound\",            no_pod_bound;\n+    ManagedItem,                     \"managed_bound\",           managed_bound;\n }"}, {"sha": "c28306a7aaca38031c7e110ca875f7282fccfec1", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b59895847ea7decdd979dc3d67c3d0c7e0bf119d/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59895847ea7decdd979dc3d67c3d0c7e0bf119d/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=b59895847ea7decdd979dc3d67c3d0c7e0bf119d", "patch": "@@ -765,7 +765,7 @@ fn namespace_error_to_str(ns: NamespaceError) -> &'static str {\n }\n \n fn Resolver(session: Session,\n-            lang_items: LanguageItems,\n+            lang_items: @LanguageItems,\n             crate_span: Span) -> Resolver {\n     let graph_root = @NameBindings();\n \n@@ -823,7 +823,7 @@ fn Resolver(session: Session,\n /// The main resolver class.\n struct Resolver {\n     session: @Session,\n-    lang_items: LanguageItems,\n+    lang_items: @LanguageItems,\n \n     intr: @IdentInterner,\n \n@@ -5550,7 +5550,7 @@ pub struct CrateMap {\n \n /// Entry point to crate resolution.\n pub fn resolve_crate(session: Session,\n-                     lang_items: LanguageItems,\n+                     lang_items: @LanguageItems,\n                      crate: &Crate)\n                   -> CrateMap {\n     let mut resolver = Resolver(session, lang_items, crate.span);"}, {"sha": "9062949b000d9f5edff9a00e3d17cabe93e8f243", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b59895847ea7decdd979dc3d67c3d0c7e0bf119d/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59895847ea7decdd979dc3d67c3d0c7e0bf119d/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=b59895847ea7decdd979dc3d67c3d0c7e0bf119d", "patch": "@@ -299,7 +299,7 @@ pub struct ctxt_ {\n     ty_param_defs: RefCell<HashMap<ast::NodeId, TypeParameterDef>>,\n     adjustments: RefCell<HashMap<ast::NodeId, @AutoAdjustment>>,\n     normalized_cache: RefCell<HashMap<t, t>>,\n-    lang_items: middle::lang_items::LanguageItems,\n+    lang_items: @middle::lang_items::LanguageItems,\n     // A mapping of fake provided method def_ids to the default implementation\n     provided_method_sources: RefCell<HashMap<ast::DefId, ast::DefId>>,\n     supertraits: RefCell<HashMap<ast::DefId, @~[@TraitRef]>>,\n@@ -947,7 +947,7 @@ pub fn mk_ctxt(s: session::Session,\n                amap: ast_map::Map,\n                freevars: freevars::freevar_map,\n                region_maps: middle::region::RegionMaps,\n-               lang_items: middle::lang_items::LanguageItems)\n+               lang_items: @middle::lang_items::LanguageItems)\n             -> ctxt {\n     @ctxt_ {\n         named_region_map: named_region_map,"}]}