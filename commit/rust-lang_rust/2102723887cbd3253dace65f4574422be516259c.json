{"sha": "2102723887cbd3253dace65f4574422be516259c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMDI3MjM4ODdjYmQzMjUzZGFjZTY1ZjQ1NzQ0MjJiZTUxNjI1OWM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-17T06:05:31Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-01-20T01:31:34Z"}, "message": "review comments", "tree": {"sha": "4f5cd4d6baa1a7545fd4d83297260231753aedfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f5cd4d6baa1a7545fd4d83297260231753aedfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2102723887cbd3253dace65f4574422be516259c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2102723887cbd3253dace65f4574422be516259c", "html_url": "https://github.com/rust-lang/rust/commit/2102723887cbd3253dace65f4574422be516259c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2102723887cbd3253dace65f4574422be516259c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78d3ea5484c3ebcc49bddba39f5b5be5f99b8c65", "url": "https://api.github.com/repos/rust-lang/rust/commits/78d3ea5484c3ebcc49bddba39f5b5be5f99b8c65", "html_url": "https://github.com/rust-lang/rust/commit/78d3ea5484c3ebcc49bddba39f5b5be5f99b8c65"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "1fb35ca26d6f8d5c6a1ac9a68bbde4ebd83aee5d", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -2952,7 +2952,7 @@ fn add_missing_lifetime_specifiers_label(\n                 if !introduce_suggestion.is_empty() {\n                     introduce_suggestion.push((span, \"&'lifetime \".to_string()));\n                     err.multipart_suggestion(\n-                        \"consider introducing a named lifetime\",\n+                        \"consider introducing a named lifetime parameter\",\n                         introduce_suggestion,\n                         Applicability::MaybeIncorrect,\n                     );\n@@ -2963,7 +2963,7 @@ fn add_missing_lifetime_specifiers_label(\n                 if !introduce_suggestion.is_empty() {\n                     introduce_suggestion.push((span, \"'lifetime\".to_string()));\n                     err.multipart_suggestion(\n-                        \"consider introducing a named lifetime\",\n+                        \"consider introducing a named lifetime parameter\",\n                         introduce_suggestion,\n                         Applicability::MaybeIncorrect,\n                     );\n@@ -2974,7 +2974,7 @@ fn add_missing_lifetime_specifiers_label(\n                 if !introduce_suggestion.is_empty() {\n                     introduce_suggestion.push((span, format!(\"{}<'lifetime>\", snippet)));\n                     err.multipart_suggestion(\n-                        \"consider introducing a named lifetime\",\n+                        \"consider introducing a named lifetime parameter\",\n                         introduce_suggestion,\n                         Applicability::MaybeIncorrect,\n                     );"}, {"sha": "e01e0a6f54b0771fffdccc97fda85eabf650e8db", "filename": "src/test/ui/error-codes/E0106.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Ferror-codes%2FE0106.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Ferror-codes%2FE0106.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0106.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL |     x: &bool,\n    |        ^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | struct Foo<'lifetime> {\n LL |     x: &'lifetime bool,\n@@ -16,7 +16,7 @@ error[E0106]: missing lifetime specifier\n LL |     B(&bool),\n    |       ^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | enum Bar<'lifetime> {\n LL |     A(u8),\n@@ -29,7 +29,7 @@ error[E0106]: missing lifetime specifier\n LL | type MyStr = &str;\n    |              ^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | type MyStr<'lifetime> = &'lifetime str;\n    |           ^^^^^^^^^^^   ^^^^^^^^^^\n@@ -40,7 +40,7 @@ error[E0106]: missing lifetime specifier\n LL |     baz: Baz,\n    |          ^^^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | struct Quux<'lifetime> {\n LL |     baz: Baz<'lifetime>,"}, {"sha": "14c53f906654b5fc0fe9cbf2967ba7c6062fa219", "filename": "src/test/ui/impl-header-lifetime-elision/assoc-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL |     type Output = &i32;\n    |                   ^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL |     type Output<'lifetime> = &'lifetime i32;\n    |                ^^^^^^^^^^^   ^^^^^^^^^^\n@@ -15,7 +15,7 @@ error[E0106]: missing lifetime specifier\n LL |     type Output = &'_ i32;\n    |                    ^^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL |     type Output<'lifetime> = &'lifetime i32;\n    |                ^^^^^^^^^^^    ^^^^^^^^^"}, {"sha": "5f101a24c1d430d85a261af709c1734083e13a0c", "filename": "src/test/ui/in-band-lifetimes/issue-61124-anon-lifetime-in-struct-declaration.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fissue-61124-anon-lifetime-in-struct-declaration.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fissue-61124-anon-lifetime-in-struct-declaration.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fissue-61124-anon-lifetime-in-struct-declaration.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL | struct Heartbreak(Betrayal);\n    |                   ^^^^^^^^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | struct Heartbreak<'lifetime>(Betrayal<'lifetime>);\n    |                  ^^^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^"}, {"sha": "8a627bc0bd4de7042254f82ce1bdba57ac2048e7", "filename": "src/test/ui/issues/issue-19707.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fissues%2Fissue-19707.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fissues%2Fissue-19707.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19707.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -5,7 +5,7 @@ LL | type Foo = fn(&u8, &u8) -> &u8;\n    |                            ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from argument 1 or argument 2\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | type Foo<'lifetime> = fn(&u8, &u8) -> &'lifetime u8;\n    |         ^^^^^^^^^^^                   ^^^^^^^^^^\n@@ -17,7 +17,7 @@ LL | fn bar<F: Fn(&u8, &u8) -> &u8>(f: &F) {}\n    |                           ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from argument 1 or argument 2\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn bar<'lifetime, F: Fn(&u8, &u8) -> &'lifetime u8>(f: &F) {}\n    |        ^^^^^^^^^^                    ^^^^^^^^^^"}, {"sha": "85d5d9cc42e9af0329a14432c477e9d440240251", "filename": "src/test/ui/issues/issue-26638.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fissues%2Fissue-26638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fissues%2Fissue-26638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26638.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -5,7 +5,7 @@ LL | fn parse_type(iter: Box<dyn Iterator<Item=&str>+'static>) -> &str { iter.ne\n    |                                                              ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say which one of `iter`'s 2 lifetimes it is borrowed from\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn parse_type<'lifetime>(iter: Box<dyn Iterator<Item=&str>+'static>) -> &'lifetime str { iter.next() }\n    |              ^^^^^^^^^^^                                                ^^^^^^^^^^"}, {"sha": "c9402277640991f52002586d17345917c8af9b08", "filename": "src/test/ui/issues/issue-30255.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fissues%2Fissue-30255.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fissues%2Fissue-30255.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30255.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -5,7 +5,7 @@ LL | fn f(a: &S, b: i32) -> &i32 {\n    |                        ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say which one of `a`'s 2 lifetimes it is borrowed from\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn f<'lifetime>(a: &S, b: i32) -> &'lifetime i32 {\n    |     ^^^^^^^^^^^                   ^^^^^^^^^^\n@@ -17,7 +17,7 @@ LL | fn g(a: &S, b: bool, c: &i32) -> &i32 {\n    |                                  ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from one of `a`'s 2 lifetimes or `c`\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn g<'lifetime>(a: &S, b: bool, c: &i32) -> &'lifetime i32 {\n    |     ^^^^^^^^^^^                             ^^^^^^^^^^\n@@ -29,7 +29,7 @@ LL | fn h(a: &bool, b: bool, c: &S, d: &i32) -> &i32 {\n    |                                            ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `a`, one of `c`'s 2 lifetimes, or `d`\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn h<'lifetime>(a: &bool, b: bool, c: &S, d: &i32) -> &'lifetime i32 {\n    |     ^^^^^^^^^^^                                       ^^^^^^^^^^"}, {"sha": "1d5eeac23f96ab2a3965a36003c044314219cff3", "filename": "src/test/ui/lifetimes/lifetime-elision-return-type-requires-explicit-lifetime.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-elision-return-type-requires-explicit-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-elision-return-type-requires-explicit-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-elision-return-type-requires-explicit-lifetime.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -13,7 +13,7 @@ LL | fn g(_x: &isize, _y: &isize) -> &isize {\n    |                                 ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `_x` or `_y`\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn g<'lifetime>(_x: &isize, _y: &isize) -> &'lifetime isize {\n    |     ^^^^^^^^^^^                            ^^^^^^^^^^\n@@ -25,7 +25,7 @@ LL | fn h(_x: &Foo) -> &isize {\n    |                   ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say which one of `_x`'s 2 lifetimes it is borrowed from\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn h<'lifetime>(_x: &Foo) -> &'lifetime isize {\n    |     ^^^^^^^^^^^              ^^^^^^^^^^"}, {"sha": "2990ab8682434e17ffa9506a678da50f4f6d3198", "filename": "src/test/ui/lifetimes/lifetime-errors/ex1b-return-no-names-if-else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -5,7 +5,7 @@ LL | fn foo(x: &i32, y: &i32) -> &i32 {\n    |                             ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn foo<'lifetime>(x: &i32, y: &i32) -> &'lifetime i32 {\n    |       ^^^^^^^^^^^                      ^^^^^^^^^^"}, {"sha": "01eadbe252e9f9791bef15e5057275ff78f1b746", "filename": "src/test/ui/proc-macro/item-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fitem-error.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL |     a: &u64\n    |        ^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | struct A<'lifetime> {\n LL |     a: &'lifetime u64"}, {"sha": "41655a210b3c0e4beb55d8b0c73e0d127d9d0d32", "filename": "src/test/ui/regions/regions-in-enums-anon.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums-anon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums-anon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums-anon.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL |     Bar(&isize)\n    |         ^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | enum Foo<'lifetime> {\n LL |     Bar(&'lifetime isize)"}, {"sha": "fbe8036880f48d25bc26e37278516763bd2fb809", "filename": "src/test/ui/regions/regions-in-structs-anon.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs-anon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs-anon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs-anon.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL |     x: &isize\n    |        ^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | struct Foo<'lifetime> {\n LL |     x: &'lifetime isize"}, {"sha": "0a028e44919a6b144aad1d19c66729802d4f00e1", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-lifetime-elision.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-lifetime-elision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-lifetime-elision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-lifetime-elision.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -5,7 +5,7 @@ LL |     let _: dyn Foo(&isize, &usize) -> &usize;\n    |                                       ^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from argument 1 or argument 2\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn main<'lifetime>() {\n LL |     eq::< dyn for<'a> Foo<(&'a isize,), Output=&'a isize>,"}, {"sha": "04df2e45703965ef0c4603ed523998efb178a086", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore-in-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore-in-struct.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL |     x: Box<dyn Debug + '_>,\n    |                        ^^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | struct Foo<'lifetime> {\n LL |     x: Box<dyn Debug + 'lifetime>,"}, {"sha": "cf820249c80af35bc2eb946b77b5f089b5db8ff0", "filename": "src/test/ui/underscore-lifetime/in-fn-return-illegal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-fn-return-illegal.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -5,7 +5,7 @@ LL | fn foo(x: &u32, y: &u32) -> &'_ u32 { loop { } }\n    |                              ^^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn foo<'lifetime>(x: &u32, y: &u32) -> &'lifetime u32 { loop { } }\n    |       ^^^^^^^^^^^                       ^^^^^^^^^"}, {"sha": "e01b39a4b64f40513f7d9603fb559aa4c2ca18bb", "filename": "src/test/ui/underscore-lifetime/in-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fin-struct.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -4,7 +4,7 @@ error[E0106]: missing lifetime specifier\n LL |     x: &'_ u32,\n    |         ^^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | struct Foo<'lifetime> {\n LL |     x: &'lifetime u32,\n@@ -16,7 +16,7 @@ error[E0106]: missing lifetime specifier\n LL |     Variant(&'_ u32),\n    |              ^^ expected named lifetime parameter\n    |\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | enum Bar<'lifetime> {\n LL |     Variant(&'lifetime u32),"}, {"sha": "517904ee62869361dabb3e4296d7431a2e51b797", "filename": "src/test/ui/underscore-lifetime/underscore-lifetime-binders.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Funderscore-lifetime-binders.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2102723887cbd3253dace65f4574422be516259c/src%2Ftest%2Fui%2Funderscore-lifetime%2Funderscore-lifetime-binders.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Funderscore-lifetime-binders.stderr?ref=2102723887cbd3253dace65f4574422be516259c", "patch": "@@ -31,7 +31,7 @@ LL | fn foo2(_: &'_ u8, y: &'_ u8) -> &'_ u8 { y }\n    |                                   ^^ expected named lifetime parameter\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from argument 1 or `y`\n-help: consider introducing a named lifetime\n+help: consider introducing a named lifetime parameter\n    |\n LL | fn foo2<'lifetime>(_: &'_ u8, y: &'_ u8) -> &'lifetime u8 { y }\n    |        ^^^^^^^^^^^                           ^^^^^^^^^"}]}