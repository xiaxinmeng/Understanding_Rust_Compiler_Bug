{"sha": "ccb218616b1f07724ddf46841ac83882e06bc73d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYjIxODYxNmIxZjA3NzI0ZGRmNDY4NDFhYzgzODgyZTA2YmM3M2Q=", "commit": {"author": {"name": "Michael McConville", "email": "mmcco@mykolab.com", "date": "2015-12-17T05:36:31Z"}, "committer": {"name": "Michael McConville", "email": "mmcco@mykolab.com", "date": "2015-12-17T05:36:31Z"}, "message": "Trivial cleanup\n\nRemove a needless variable and simply a cfg().", "tree": {"sha": "c5c0543ddb1ee96138744fab51613700fd0dba1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5c0543ddb1ee96138744fab51613700fd0dba1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccb218616b1f07724ddf46841ac83882e06bc73d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccb218616b1f07724ddf46841ac83882e06bc73d", "html_url": "https://github.com/rust-lang/rust/commit/ccb218616b1f07724ddf46841ac83882e06bc73d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccb218616b1f07724ddf46841ac83882e06bc73d/comments", "author": {"login": "mmcco", "id": 1668979, "node_id": "MDQ6VXNlcjE2Njg5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1668979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmcco", "html_url": "https://github.com/mmcco", "followers_url": "https://api.github.com/users/mmcco/followers", "following_url": "https://api.github.com/users/mmcco/following{/other_user}", "gists_url": "https://api.github.com/users/mmcco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmcco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmcco/subscriptions", "organizations_url": "https://api.github.com/users/mmcco/orgs", "repos_url": "https://api.github.com/users/mmcco/repos", "events_url": "https://api.github.com/users/mmcco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmcco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmcco", "id": 1668979, "node_id": "MDQ6VXNlcjE2Njg5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1668979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmcco", "html_url": "https://github.com/mmcco", "followers_url": "https://api.github.com/users/mmcco/followers", "following_url": "https://api.github.com/users/mmcco/following{/other_user}", "gists_url": "https://api.github.com/users/mmcco/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmcco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmcco/subscriptions", "organizations_url": "https://api.github.com/users/mmcco/orgs", "repos_url": "https://api.github.com/users/mmcco/repos", "events_url": "https://api.github.com/users/mmcco/events{/privacy}", "received_events_url": "https://api.github.com/users/mmcco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af427881405f95b8d87efea844cbd695fb55986", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af427881405f95b8d87efea844cbd695fb55986", "html_url": "https://github.com/rust-lang/rust/commit/4af427881405f95b8d87efea844cbd695fb55986"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "c4f59d51f5dade8aa9c6218b0ecd2ad0e3f08823", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ccb218616b1f07724ddf46841ac83882e06bc73d/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb218616b1f07724ddf46841ac83882e06bc73d/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=ccb218616b1f07724ddf46841ac83882e06bc73d", "patch": "@@ -42,7 +42,7 @@ mod imp {\n         const NR_GETRANDOM: libc::c_long = 355;\n         #[cfg(any(target_arch = \"arm\", target_arch = \"powerpc\"))]\n         const NR_GETRANDOM: libc::c_long = 384;\n-        #[cfg(any(target_arch = \"aarch64\"))]\n+        #[cfg(target_arch = \"aarch64\")]\n         const NR_GETRANDOM: libc::c_long = 278;\n \n         unsafe {\n@@ -60,8 +60,7 @@ mod imp {\n \n     fn getrandom_fill_bytes(v: &mut [u8]) {\n         let mut read = 0;\n-        let len = v.len();\n-        while read < len {\n+        while read < v.len() {\n             let result = getrandom(&mut v[read..]);\n             if result == -1 {\n                 let err = errno() as libc::c_int;"}]}