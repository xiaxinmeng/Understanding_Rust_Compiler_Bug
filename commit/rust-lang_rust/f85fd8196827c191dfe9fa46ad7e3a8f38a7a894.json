{"sha": "f85fd8196827c191dfe9fa46ad7e3a8f38a7a894", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NWZkODE5NjgyN2MxOTFkZmU5ZmE0NmFkN2UzYThmMzhhN2E4OTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-26T19:43:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-26T19:43:12Z"}, "message": "Rollup merge of #80812 - rust-lang:relnotes-1.50.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.50.0\n\n### [Rendered](https://github.com/rust-lang/rust/blob/relnotes-1.50.0/RELEASES.md)\n\nr? `@Mark-Simulacrum`\ncc `@rust-lang/release`", "tree": {"sha": "85a0e629eab907ec4a09a07aecdb789deac5318a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85a0e629eab907ec4a09a07aecdb789deac5318a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f85fd8196827c191dfe9fa46ad7e3a8f38a7a894", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEHDQCRBK7hj4Ov3rIwAAdHIIAAxnx/LfGw+u9X8PmhohPv6X\nwLKG7+JI7EQlRecwj1fzYN6JFWi+VXT/EoENyPoy1qnrPq78XzL0JP1kyU6noBPX\n03+sQcHlPcTOWqpUB5qf0sqc/gM4ONAGHK2PT0z4o98pspQxrbU50ErVH+wIs6pr\nKnomXscBPbe1Ut7bYA5VzVUg1ogejZNSChw9Y/Ho+mgQ3+nYxEi8RnhkESr827ij\nggQpOenSzBNMDYA8PxloYIcm1L8X3NnqgpJjZCDNZm4IjgWpFIPfntGVwBAeajWJ\nxRiig98/nyw3218ewLUwroNuumNbpuR72itkMWc3FIxCcj8rjIQJEZash1AjCaY=\n=B5x6\n-----END PGP SIGNATURE-----\n", "payload": "tree 85a0e629eab907ec4a09a07aecdb789deac5318a\nparent 7907345e58b4f4d2c95e5ea9b8e0b3bff8946523\nparent 39e24f745baeb6136dbc9870e26de60b26a96ce7\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611690192 +0900\ncommitter GitHub <noreply@github.com> 1611690192 +0900\n\nRollup merge of #80812 - rust-lang:relnotes-1.50.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.50.0\n\n### [Rendered](https://github.com/rust-lang/rust/blob/relnotes-1.50.0/RELEASES.md)\n\nr? `@Mark-Simulacrum`\ncc `@rust-lang/release`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f85fd8196827c191dfe9fa46ad7e3a8f38a7a894", "html_url": "https://github.com/rust-lang/rust/commit/f85fd8196827c191dfe9fa46ad7e3a8f38a7a894", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f85fd8196827c191dfe9fa46ad7e3a8f38a7a894/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7907345e58b4f4d2c95e5ea9b8e0b3bff8946523", "url": "https://api.github.com/repos/rust-lang/rust/commits/7907345e58b4f4d2c95e5ea9b8e0b3bff8946523", "html_url": "https://github.com/rust-lang/rust/commit/7907345e58b4f4d2c95e5ea9b8e0b3bff8946523"}, {"sha": "39e24f745baeb6136dbc9870e26de60b26a96ce7", "url": "https://api.github.com/repos/rust-lang/rust/commits/39e24f745baeb6136dbc9870e26de60b26a96ce7", "html_url": "https://github.com/rust-lang/rust/commit/39e24f745baeb6136dbc9870e26de60b26a96ce7"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "18492213a5dd3e99c97371e6df1841d108aa863c", "filename": "RELEASES.md", "status": "modified", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/f85fd8196827c191dfe9fa46ad7e3a8f38a7a894/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/f85fd8196827c191dfe9fa46ad7e3a8f38a7a894/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=f85fd8196827c191dfe9fa46ad7e3a8f38a7a894", "patch": "@@ -1,3 +1,123 @@\n+Version 1.50.0 (2021-02-11)\n+============================\n+\n+Language\n+-----------------------\n+- [You can now use `const` values for `x` in `[x; N]` array expressions.][79270]\n+  This has been technically possible since 1.38.0, as it was unintentionally stabilized.\n+- [Assignments to `ManuallyDrop<T>` union fields are now considered safe.][78068]\n+\n+Compiler\n+-----------------------\n+- [Added tier 3\\* support for the `armv5te-unknown-linux-uclibceabi` target.][78142]\n+- [Added tier 3 support for the `aarch64-apple-ios-macabi` target.][77484]\n+- [The `x86_64-unknown-freebsd` is now built with the full toolset.][79484]\n+\n+\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+information on Rust's tiered platform support.\n+\n+Libraries\n+-----------------------\n+\n+- [`proc_macro::Punct` now implements `PartialEq<char>`.][78636]\n+- [`ops::{Index, IndexMut}` are now implemented for fixed sized arrays of any length.][74989]\n+- [On Unix platforms, the `std::fs::File` type now has a \"niche\" of `-1`.][74699]\n+  This value cannot be a valid file descriptor, and now means `Option<File>` takes\n+  up the same amount of space as `File`.\n+\n+Stabilized APIs\n+---------------\n+\n+- [`bool::then`]\n+- [`btree_map::Entry::or_insert_with_key`]\n+- [`f32::clamp`]\n+- [`f64::clamp`]\n+- [`hash_map::Entry::or_insert_with_key`]\n+- [`Ord::clamp`]\n+- [`RefCell::take`]\n+- [`slice::fill`]\n+- [`UnsafeCell::get_mut`]\n+\n+The following previously stable methods are now `const`.\n+\n+- [`IpAddr::is_ipv4`]\n+- [`IpAddr::is_ipv6`]\n+- [`Layout::size`]\n+- [`Layout::align`]\n+- [`Layout::from_size_align`]\n+- `pow` for all integer types.\n+- `checked_pow` for all integer types.\n+- `saturating_pow` for all integer types.\n+- `wrapping_pow` for all integer types.\n+- `next_power_of_two` for all unsigned integer types.\n+- `checked_power_of_two` for all unsigned integer types.\n+\n+Cargo\n+-----------------------\n+\n+- [Added the `[build.rustc-workspace-wrapper]` option.][cargo/8976]\n+  This option sets a wrapper to execute instead of `rustc`, for workspace members only.\n+- [`cargo:rerun-if-changed` will now, if provided a directory, scan the entire\n+  contents of that directory for changes.][cargo/8973]\n+- [Added the `--workspace` flag to the `cargo update` command.][cargo/8725]\n+\n+Misc\n+----\n+\n+- [The search results tab and the help button are focusable with keyboard in rustdoc.][79896]\n+- [Running tests will now print the total time taken to execute.][75752]\n+\n+Compatibility Notes\n+-------------------\n+\n+- [The `compare_and_swap` method on atomics has been deprecated.][79261] It's\n+  recommended to use the `compare_exchange` and `compare_exchange_weak` methods instead.\n+- [Changes in how `TokenStream`s are checked have fixed some cases where you could write\n+  unhygenic `macro_rules!` macros.][79472]\n+- [`#![test]` as an inner attribute is now considered unstable like other inner macro\n+  attributes, and reports an error by default through the `soft_unstable` lint.][79003]\n+- [Overriding a `forbid` lint at the same level that it was set is now a hard error.][78864]\n+- [Dropped support for all cloudabi targets.][78439]\n+- [You can no longer intercept `panic!` calls by supplying your own macro.][78343] It's\n+  recommended to use the `#[panic_handler]` attribute to provide your own implementation.\n+- [Semi-colons after item statements (e.g. `struct Foo {};`) now produce a warning.][78296]\n+\n+[74989]: https://github.com/rust-lang/rust/pull/74989\n+[79261]: https://github.com/rust-lang/rust/pull/79261\n+[79896]: https://github.com/rust-lang/rust/pull/79896\n+[79484]: https://github.com/rust-lang/rust/pull/79484\n+[79472]: https://github.com/rust-lang/rust/pull/79472\n+[79270]: https://github.com/rust-lang/rust/pull/79270\n+[79003]: https://github.com/rust-lang/rust/pull/79003\n+[78864]: https://github.com/rust-lang/rust/pull/78864\n+[78636]: https://github.com/rust-lang/rust/pull/78636\n+[78439]: https://github.com/rust-lang/rust/pull/78439\n+[78343]: https://github.com/rust-lang/rust/pull/78343\n+[78296]: https://github.com/rust-lang/rust/pull/78296\n+[78068]: https://github.com/rust-lang/rust/pull/78068\n+[75752]: https://github.com/rust-lang/rust/pull/75752\n+[74699]: https://github.com/rust-lang/rust/pull/74699\n+[78142]: https://github.com/rust-lang/rust/pull/78142\n+[77484]: https://github.com/rust-lang/rust/pull/77484\n+[cargo/8976]: https://github.com/rust-lang/cargo/pull/8976\n+[cargo/8973]: https://github.com/rust-lang/cargo/pull/8973\n+[cargo/8725]: https://github.com/rust-lang/cargo/pull/8725\n+[`IpAddr::is_ipv4`]: https://doc.rust-lang.org/stable/std/net/enum.IpAddr.html#method.is_ipv4\n+[`IpAddr::is_ipv6`]: https://doc.rust-lang.org/stable/std/net/enum.IpAddr.html#method.is_ipv6\n+[`Layout::align`]: https://doc.rust-lang.org/stable/std/alloc/struct.Layout.html#method.align\n+[`Layout::from_size_align`]: https://doc.rust-lang.org/stable/std/alloc/struct.Layout.html#method.from_size_align\n+[`Layout::size`]: https://doc.rust-lang.org/stable/std/alloc/struct.Layout.html#method.size\n+[`Ord::clamp`]: https://doc.rust-lang.org/stable/std/cmp/trait.Ord.html#method.clamp\n+[`RefCell::take`]: https://doc.rust-lang.org/stable/std/cell/struct.RefCell.html#method.take\n+[`UnsafeCell::get_mut`]: https://doc.rust-lang.org/stable/std/cell/struct.UnsafeCell.html#method.get_mut\n+[`bool::then`]: https://doc.rust-lang.org/stable/std/primitive.bool.html#method.then\n+[`btree_map::Entry::or_insert_with_key`]: https://doc.rust-lang.org/stable/std/collections/btree_map/enum.Entry.html#method.or_insert_with_key\n+[`f32::clamp`]: https://doc.rust-lang.org/stable/std/primitive.f32.html#method.clamp\n+[`f64::clamp`]: https://doc.rust-lang.org/stable/std/primitive.f64.html#method.clamp\n+[`hash_map::Entry::or_insert_with_key`]: https://doc.rust-lang.org/stable/std/collections/hash_map/enum.Entry.html#method.or_insert_with_key\n+[`slice::fill`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.fill\n+\n+\n Version 1.49.0 (2020-12-31)\n ============================\n "}]}