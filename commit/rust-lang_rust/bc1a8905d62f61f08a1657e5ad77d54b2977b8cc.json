{"sha": "bc1a8905d62f61f08a1657e5ad77d54b2977b8cc", "node_id": "C_kwDOAAsO6NoAKGJjMWE4OTA1ZDYyZjYxZjA4YTE2NTdlNWFkNzdkNTRiMjk3N2I4Y2M", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-03T00:09:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-03T00:09:09Z"}, "message": "Rollup merge of #93354 - sunfishcode:sunfishcode/document-borrowedfd-toowned, r=joshtriplett\n\nAdd documentation about `BorrowedFd::to_owned`.\n\nFollowing up on #88564, this adds documentation explaining why\n`BorrowedFd::to_owned` returns another `BorrowedFd` rather than an\n`OwnedFd`. And similar for `BorrowedHandle` and `BorrowedSocket`.\n\nr? `````@joshtriplett`````", "tree": {"sha": "c0c3a8693853a3738ce22a91c9d796024991fcb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0c3a8693853a3738ce22a91c9d796024991fcb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiIAclCRBK7hj4Ov3rIwAAXWoIAG9zSFSuImWQnHivGXkJ/BDZ\nOcw448N1l/ftBaxCowq8S5zCm3ORWSr4NqjS5PUwLmnenV4wBqrwMi6axGHzQKsB\nfnSR5q3ksgbBVHAT58aFYMEYzInk46xL2sc7pwbTpDxCDXBuDXNgG50ZpY4AmYK4\nwmNIdsM6Q8Va0SyDq6xcw/U3IjR8cpDZPVPAcRRdvC122/x+byHDm46O/Ded3yov\n7kjwtzns+ooCIFz8D76OUHh5WkJhAnHrP9FhR2wpHt42JKsYmuigcMuTFyHMt5et\n0ntjGaWCKnJcK/Drod8j8OgODooQeA0QDgsOwxGqUO7n8KTMkFRt7sEID0yjjLA=\n=Zai3\n-----END PGP SIGNATURE-----\n", "payload": "tree c0c3a8693853a3738ce22a91c9d796024991fcb4\nparent bdad4a7be7d33a94033201fa52125505866aae3d\nparent 47aaf79554744162601f6cdc5fabd6fd05acb2db\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1646266149 +0100\ncommitter GitHub <noreply@github.com> 1646266149 +0100\n\nRollup merge of #93354 - sunfishcode:sunfishcode/document-borrowedfd-toowned, r=joshtriplett\n\nAdd documentation about `BorrowedFd::to_owned`.\n\nFollowing up on #88564, this adds documentation explaining why\n`BorrowedFd::to_owned` returns another `BorrowedFd` rather than an\n`OwnedFd`. And similar for `BorrowedHandle` and `BorrowedSocket`.\n\nr? `````@joshtriplett`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc", "html_url": "https://github.com/rust-lang/rust/commit/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdad4a7be7d33a94033201fa52125505866aae3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdad4a7be7d33a94033201fa52125505866aae3d", "html_url": "https://github.com/rust-lang/rust/commit/bdad4a7be7d33a94033201fa52125505866aae3d"}, {"sha": "47aaf79554744162601f6cdc5fabd6fd05acb2db", "url": "https://api.github.com/repos/rust-lang/rust/commits/47aaf79554744162601f6cdc5fabd6fd05acb2db", "html_url": "https://github.com/rust-lang/rust/commit/47aaf79554744162601f6cdc5fabd6fd05acb2db"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "10e9ec61a78452d81f61d99687b2f822d16b6032", "filename": "library/std/src/os/fd/owned.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs?ref=bc1a8905d62f61f08a1657e5ad77d54b2977b8cc", "patch": "@@ -21,6 +21,10 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// descriptor, so it can be used in FFI in places where a file descriptor is\n /// passed as an argument, it is not captured or consumed, and it never has the\n /// value `-1`.\n+///\n+/// This type's `.to_owned()` implementation returns another `BorrowedFd`\n+/// rather than an `OwnedFd`. It just makes a trivial copy of the raw file\n+/// descriptor, which is then borrowed under the same lifetime.\n #[derive(Copy, Clone)]\n #[repr(transparent)]\n #[rustc_layout_scalar_valid_range_start(0)]"}, {"sha": "9bee391b62895401dd08abd24ed2931fab61bf0d", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=bc1a8905d62f61f08a1657e5ad77d54b2977b8cc", "patch": "@@ -28,6 +28,10 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// And, it *may* have the value `NULL` (0), which can occur when consoles are\n /// detached from processes, or when `windows_subsystem` is used.\n ///\n+/// This type's `.to_owned()` implementation returns another `BorrowedHandle`\n+/// rather than an `OwnedHandle`. It just makes a trivial copy of the raw\n+/// handle, which is then borrowed under the same lifetime.\n+///\n /// [here]: https://devblogs.microsoft.com/oldnewthing/20040302-00/?p=40443\n #[derive(Copy, Clone)]\n #[repr(transparent)]"}, {"sha": "6c5b81f685d3ccaa91746386a6926eb16aac9fa5", "filename": "library/std/src/os/windows/io/socket.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc1a8905d62f61f08a1657e5ad77d54b2977b8cc/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fsocket.rs?ref=bc1a8905d62f61f08a1657e5ad77d54b2977b8cc", "patch": "@@ -21,6 +21,10 @@ use crate::sys::cvt;\n /// so it can be used in FFI in places where a socket is passed as an argument,\n /// it is not captured or consumed, and it never has the value\n /// `INVALID_SOCKET`.\n+///\n+/// This type's `.to_owned()` implementation returns another `BorrowedSocket`\n+/// rather than an `OwnedSocket`. It just makes a trivial copy of the raw\n+/// socket, which is then borrowed under the same lifetime.\n #[derive(Copy, Clone)]\n #[repr(transparent)]\n #[rustc_layout_scalar_valid_range_start(0)]"}]}