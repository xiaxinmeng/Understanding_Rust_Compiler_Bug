{"sha": "2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZDY5YWFhZmM2NGZlOWRjZTc0MDg4YjUzNzFhNmNmYjAzMmUwMWU=", "commit": {"author": {"name": "Janik Rabe", "email": "info@janikrabe.com", "date": "2021-07-01T21:15:13Z"}, "committer": {"name": "Janik Rabe", "email": "info@janikrabe.com", "date": "2021-07-01T21:15:13Z"}, "message": "Document iteration order of `retain` functions\n\nFor `HashSet` and `HashMap`, this simply copies the comment from\n`BinaryHeap::retain`.\n\nFor `BTreeSet` and `BTreeMap`, this adds an additional guarantee that\nwasn't previously documented. I think that because these data structures\nare inherently ordered and other functions guarantee ordered iteration,\nit makes sense to provide this guarantee for `retain` as well.", "tree": {"sha": "90447f6f75aafbd36b09c7b01371788c83bb6fc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90447f6f75aafbd36b09c7b01371788c83bb6fc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "html_url": "https://github.com/rust-lang/rust/commit/2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/comments", "author": {"login": "janikrabe", "id": 35016218, "node_id": "MDQ6VXNlcjM1MDE2MjE4", "avatar_url": "https://avatars.githubusercontent.com/u/35016218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janikrabe", "html_url": "https://github.com/janikrabe", "followers_url": "https://api.github.com/users/janikrabe/followers", "following_url": "https://api.github.com/users/janikrabe/following{/other_user}", "gists_url": "https://api.github.com/users/janikrabe/gists{/gist_id}", "starred_url": "https://api.github.com/users/janikrabe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janikrabe/subscriptions", "organizations_url": "https://api.github.com/users/janikrabe/orgs", "repos_url": "https://api.github.com/users/janikrabe/repos", "events_url": "https://api.github.com/users/janikrabe/events{/privacy}", "received_events_url": "https://api.github.com/users/janikrabe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janikrabe", "id": 35016218, "node_id": "MDQ6VXNlcjM1MDE2MjE4", "avatar_url": "https://avatars.githubusercontent.com/u/35016218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janikrabe", "html_url": "https://github.com/janikrabe", "followers_url": "https://api.github.com/users/janikrabe/followers", "following_url": "https://api.github.com/users/janikrabe/following{/other_user}", "gists_url": "https://api.github.com/users/janikrabe/gists{/gist_id}", "starred_url": "https://api.github.com/users/janikrabe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janikrabe/subscriptions", "organizations_url": "https://api.github.com/users/janikrabe/orgs", "repos_url": "https://api.github.com/users/janikrabe/repos", "events_url": "https://api.github.com/users/janikrabe/events{/privacy}", "received_events_url": "https://api.github.com/users/janikrabe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64de4979e8979836e7c029d69eb96e6f7da66185", "url": "https://api.github.com/repos/rust-lang/rust/commits/64de4979e8979836e7c029d69eb96e6f7da66185", "html_url": "https://github.com/rust-lang/rust/commit/64de4979e8979836e7c029d69eb96e6f7da66185"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "70eae6419281bccc2e362cb10c0e59844c9ce44c", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "patch": "@@ -936,6 +936,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// Retains only the elements specified by the predicate.\n     ///\n     /// In other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.\n+    /// The elements are visited in ascending key order.\n     ///\n     /// # Examples\n     ///"}, {"sha": "9f4296e26b81d3e06c5c3aeb23820c08e85852f2", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "patch": "@@ -847,6 +847,7 @@ impl<T> BTreeSet<T> {\n     /// Retains only the elements specified by the predicate.\n     ///\n     /// In other words, remove all elements `e` such that `f(&e)` returns `false`.\n+    /// The elements are visited in ascending order.\n     ///\n     /// # Examples\n     ///"}, {"sha": "241f33746d625cd854e694f7a9eacb6c516208fe", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "patch": "@@ -936,6 +936,7 @@ where\n     /// Retains only the elements specified by the predicate.\n     ///\n     /// In other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.\n+    /// The elements are visited in unsorted (and unspecified) order.\n     ///\n     /// # Examples\n     ///"}, {"sha": "372feff7fa0260f5dc8890e8502bc8180a0db2f8", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dd69aaafc64fe9dce74088b5371a6cfb032e01e/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=2dd69aaafc64fe9dce74088b5371a6cfb032e01e", "patch": "@@ -914,6 +914,7 @@ where\n     /// Retains only the elements specified by the predicate.\n     ///\n     /// In other words, remove all elements `e` such that `f(&e)` returns `false`.\n+    /// The elements are visited in unsorted (and unspecified) order.\n     ///\n     /// # Examples\n     ///"}]}