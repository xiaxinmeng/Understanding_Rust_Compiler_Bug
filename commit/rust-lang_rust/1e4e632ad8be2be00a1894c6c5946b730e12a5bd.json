{"sha": "1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNGU2MzJhZDhiZTJiZTAwYTE4OTRjNmM1OTQ2YjczMGUxMmE1YmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-02-27T21:14:41Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-03-13T15:22:07Z"}, "message": "add regression tests for various MIR bugs that get fixed\n\nFixes #31567\nFixes #47470\nFixes #48132\nFixes #48179", "tree": {"sha": "c5cd861e6624d0aed2750c8255fa13df0a977835", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5cd861e6624d0aed2750c8255fa13df0a977835"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "html_url": "https://github.com/rust-lang/rust/commit/1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "html_url": "https://github.com/rust-lang/rust/commit/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5"}], "stats": {"total": 199, "additions": 199, "deletions": 0}, "files": [{"sha": "87fee986de76848269302a70ab310789e888c441", "filename": "src/test/ui/issue-48132.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fissue-48132.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fissue-48132.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-48132.rs?ref=1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #48132. This was failing due to problems around\n+// the projection caching and dropck type enumeration.\n+\n+// run-pass\n+\n+#![feature(nll)]\n+#![allow(warnings)]\n+\n+struct Inner<I, V> {\n+    iterator: I,\n+    item: V,\n+}\n+\n+struct Outer<I: Iterator> {\n+    inner: Inner<I, I::Item>,\n+}\n+\n+fn outer<I>(iterator: I) -> Outer<I>\n+where I: Iterator,\n+      I::Item: Default,\n+{\n+    Outer {\n+        inner: Inner {\n+            iterator: iterator,\n+            item: Default::default(),\n+        }\n+    }\n+}\n+\n+fn main() {\n+    outer(std::iter::once(&1).cloned());\n+}"}, {"sha": "745b59e0658f1dc77d6dc88bda141fa279a7a9d0", "filename": "src/test/ui/issue-48179.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fissue-48179.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fissue-48179.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-48179.rs?ref=1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "patch": "@@ -0,0 +1,51 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #48132. This was failing due to problems around\n+// the projection caching and dropck type enumeration.\n+\n+// run-pass\n+\n+#![feature(nll)]\n+#![allow(warnings)]\n+\n+pub struct Container<T: Iterator> {\n+    value: Option<T::Item>,\n+}\n+\n+impl<T: Iterator> Container<T> {\n+    pub fn new(iter: T) -> Self {\n+        panic!()\n+    }\n+}\n+\n+pub struct Wrapper<'a> {\n+    content: &'a Content,\n+}\n+\n+impl<'a, 'de> Wrapper<'a> {\n+    pub fn new(content: &'a Content) -> Self {\n+        Wrapper {\n+            content: content,\n+        }\n+    }\n+}\n+\n+pub struct Content;\n+\n+fn crash_it(content: Content) {\n+    let items = vec![content];\n+    let map = items.iter().map(|ref o| Wrapper::new(o));\n+\n+    let mut map_visitor = Container::new(map);\n+\n+}\n+\n+fn main() {}"}, {"sha": "a0d1faf1f0e84486d934294e07bc0e41db8afdb8", "filename": "src/test/ui/nll/issue-31567.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-31567.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-31567.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-31567.rs?ref=1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #31567: cached results of projections were\n+// causing region relations not to be enforced at all the places where\n+// they have to be enforced.\n+\n+#![feature(nll)]\n+\n+struct VecWrapper<'a>(&'a mut S);\n+\n+struct S(Box<u32>);\n+\n+fn get_dangling<'a>(v: VecWrapper<'a>) -> &'a u32 {\n+    let s_inner: &'a S = &*v.0; //~ ERROR `*v.0` does not live long enough\n+    &s_inner.0\n+}\n+\n+impl<'a> Drop for VecWrapper<'a> {\n+    fn drop(&mut self) {\n+        *self.0 = S(Box::new(0));\n+    }\n+}\n+\n+fn main() {\n+    let mut s = S(Box::new(11));\n+    let vw = VecWrapper(&mut s);\n+    let dangling = get_dangling(vw);\n+    println!(\"{}\", dangling);\n+}"}, {"sha": "e0ff653e2b4d45983b0e6514176116b9725f8596", "filename": "src/test/ui/nll/issue-31567.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-31567.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-31567.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-31567.stderr?ref=1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "patch": "@@ -0,0 +1,18 @@\n+error[E0597]: `*v.0` does not live long enough\n+  --> $DIR/issue-31567.rs:22:26\n+   |\n+LL |     let s_inner: &'a S = &*v.0; //~ ERROR `*v.0` does not live long enough\n+   |                          ^^^^^ borrowed value does not live long enough\n+LL |     &s_inner.0\n+LL | }\n+   | - borrowed value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 21:1...\n+  --> $DIR/issue-31567.rs:21:1\n+   |\n+LL | fn get_dangling<'a>(v: VecWrapper<'a>) -> &'a u32 {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+If you want more information on this error, try using \"rustc --explain E0597\""}, {"sha": "c962f193cd5b09043e55b0253f238db486d754a1", "filename": "src/test/ui/nll/issue-47470.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-47470.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-47470.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-47470.rs?ref=1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #47470: cached results of projections were\n+// causing region relations not to be enforced at all the places where\n+// they have to be enforced.\n+\n+#![feature(nll)]\n+\n+struct Foo<'a>(&'a ());\n+trait Bar {\n+    type Assoc;\n+    fn get(self) -> Self::Assoc;\n+}\n+\n+impl<'a> Bar for Foo<'a> {\n+    type Assoc = &'a u32;\n+    fn get(self) -> Self::Assoc {\n+        let local = 42;\n+        &local //~ ERROR `local` does not live long enough\n+    }\n+}\n+\n+fn main() {\n+    let f = Foo(&()).get();\n+    println!(\"{}\", f);\n+}"}, {"sha": "1356461a6e410c799165026b70d7299fd685d8ba", "filename": "src/test/ui/nll/issue-47470.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-47470.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e4e632ad8be2be00a1894c6c5946b730e12a5bd/src%2Ftest%2Fui%2Fnll%2Fissue-47470.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-47470.stderr?ref=1e4e632ad8be2be00a1894c6c5946b730e12a5bd", "patch": "@@ -0,0 +1,17 @@\n+error[E0597]: `local` does not live long enough\n+  --> $DIR/issue-47470.rs:27:9\n+   |\n+LL |         &local //~ ERROR `local` does not live long enough\n+   |         ^^^^^^ borrowed value does not live long enough\n+LL |     }\n+   |     - borrowed value only lives until here\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the impl at 23:1...\n+  --> $DIR/issue-47470.rs:23:1\n+   |\n+LL | impl<'a> Bar for Foo<'a> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+If you want more information on this error, try using \"rustc --explain E0597\""}]}