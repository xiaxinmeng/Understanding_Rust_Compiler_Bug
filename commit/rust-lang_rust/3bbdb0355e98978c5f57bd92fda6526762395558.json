{"sha": "3bbdb0355e98978c5f57bd92fda6526762395558", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYmRiMDM1NWU5ODk3OGM1ZjU3YmQ5MmZkYTY1MjY3NjIzOTU1NTg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-21T03:43:22Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-02-23T00:15:48Z"}, "message": "remove some chain options", "tree": {"sha": "c3f7b5beed267eabdbef0bcd6a74d0f713bdf50e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3f7b5beed267eabdbef0bcd6a74d0f713bdf50e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bbdb0355e98978c5f57bd92fda6526762395558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bbdb0355e98978c5f57bd92fda6526762395558", "html_url": "https://github.com/rust-lang/rust/commit/3bbdb0355e98978c5f57bd92fda6526762395558", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bbdb0355e98978c5f57bd92fda6526762395558/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "023b578c136df5ff96674feafbe619b72de6916f", "url": "https://api.github.com/repos/rust-lang/rust/commits/023b578c136df5ff96674feafbe619b72de6916f", "html_url": "https://github.com/rust-lang/rust/commit/023b578c136df5ff96674feafbe619b72de6916f"}], "stats": {"total": 29, "additions": 7, "deletions": 22}, "files": [{"sha": "f0a3f56822da6e476e23d563fff5e759fc84ca4d", "filename": "src/chains.rs", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3bbdb0355e98978c5f57bd92fda6526762395558/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bbdb0355e98978c5f57bd92fda6526762395558/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=3bbdb0355e98978c5f57bd92fda6526762395558", "patch": "@@ -19,10 +19,11 @@\n /// we put each subexpression on a separate, much like the (default) function\n /// argument function argument strategy.\n ///\n-/// Depends on config options: `chain_base_indent` is the indent to use for\n-/// blocks in the parent/root/base of the chain.\n+/// Depends on config options: `chain_indent` is the indent to use for\n+/// blocks in the parent/root/base of the chain (and the rest of the chain's\n+/// alignment).\n /// E.g., `let foo = { aaaa; bbb; ccc }.bar.baz();`, we would layout for the\n-/// following values of `chain_base_indent`:\n+/// following values of `chain_indent`:\n /// Visual:\n /// ```\n /// let foo = {\n@@ -54,7 +55,6 @@\n ///     .baz();\n /// ```\n ///\n-/// `chain_indent` dictates how the rest of the chain is aligned.\n /// If the first item in the chain is a block expression, we align the dots with\n /// the braces.\n /// Visual:\n@@ -75,11 +75,6 @@\n ///     .baz()\n ///     .qux\n /// ```\n-/// `chains_overflow_last` applies only to chains where the last item is a\n-/// method call. Usually, any line break in a chain sub-expression causes the\n-/// whole chain to be split with newlines at each `.`. With `chains_overflow_last`\n-/// true, then we allow the last method call to spill over multiple lines without\n-/// forcing the rest of the chain to be split.\n \n use {Indent, Shape};\n use rewrite::{Rewrite, RewriteContext};\n@@ -106,7 +101,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n     // Parent is the first item in the chain, e.g., `foo` in `foo.bar.baz()`.\n     let mut parent_shape = shape;\n     if is_block_expr(&parent, \"\\n\") {\n-        parent_shape = chain_base_indent(context, shape);\n+        parent_shape = chain_indent(context, shape);\n     }\n     let parent_rewrite = try_opt!(parent.rewrite(context, parent_shape));\n \n@@ -164,7 +159,7 @@ pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -\n \n         if fits_single_line {\n             fits_single_line = match expr.node {\n-                ref e @ ast::ExprKind::MethodCall(..) if context.config.chains_overflow_last => {\n+                ref e @ ast::ExprKind::MethodCall(..) => {\n                     rewrite_method_call_with_overflow(e,\n                                                       &mut last[0],\n                                                       almost_total,\n@@ -272,14 +267,6 @@ fn make_subexpr_list(expr: &ast::Expr, context: &RewriteContext) -> (ast::Expr,\n     (parent, subexpr_list)\n }\n \n-fn chain_base_indent(context: &RewriteContext, shape: Shape) -> Shape {\n-    match context.config.chain_base_indent {\n-        BlockIndentStyle::Visual => shape,\n-        BlockIndentStyle::Inherit => shape.block_indent(0),\n-        BlockIndentStyle::Tabbed => shape.block_indent(context.config.tab_spaces),\n-    }\n-}\n-\n fn chain_indent(context: &RewriteContext, shape: Shape) -> Shape {\n     match context.config.chain_indent {\n         BlockIndentStyle::Visual => shape,"}, {"sha": "b34082fca3e07691e3757882cf681a6a582b6e9f", "filename": "src/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bbdb0355e98978c5f57bd92fda6526762395558/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bbdb0355e98978c5f57bd92fda6526762395558/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=3bbdb0355e98978c5f57bd92fda6526762395558", "patch": "@@ -379,9 +379,7 @@ create_config! {\n         \"Report all, none or unnumbered occurrences of TODO in source file comments\";\n     report_fixme: ReportTactic, ReportTactic::Never,\n         \"Report all, none or unnumbered occurrences of FIXME in source file comments\";\n-    chain_base_indent: BlockIndentStyle, BlockIndentStyle::Tabbed, \"Indent on chain base\";\n     chain_indent: BlockIndentStyle, BlockIndentStyle::Tabbed, \"Indentation of chain\";\n-    chains_overflow_last: bool, true, \"Allow last call in method chain to break the line\";\n     reorder_imports: bool, false, \"Reorder import statements alphabetically\";\n     reorder_imported_names: bool, false,\n         \"Reorder lists of names in import statements alphabetically\";"}, {"sha": "f893f9cd12c7afa4d4fc21846f5582bd1ce26794", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bbdb0355e98978c5f57bd92fda6526762395558/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bbdb0355e98978c5f57bd92fda6526762395558/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=3bbdb0355e98978c5f57bd92fda6526762395558", "patch": "@@ -1558,7 +1558,7 @@ fn rewrite_call_inner<R>(context: &RewriteContext,\n         Some(&ast::ExprKind::Closure(..)) |\n         Some(&ast::ExprKind::Block(..)) if arg_count > 1 => true,\n         _ => false,\n-    } && context.config.chains_overflow_last;\n+    };\n \n     let mut orig_last = None;\n     let mut placeholder = None;"}]}