{"sha": "e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZjA0YzA0ZGZmYzE2MTVmZGU5ZGQxZTUxZDI3YmNjNTI3NWNkYjI=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-01-28T22:50:03Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-02-04T01:38:17Z"}, "message": "Disable ThinLTO for dist builds.\n\nDist builds should always be as fast as we can make them, and since\nthose run on CI we don't care quite as much for the build being somewhat\nslower. As such, we don't automatically enable ThinLTO on builds for the\ndist builders.", "tree": {"sha": "ed7e0e4c8805d3ed42a8868270ce583fe739df71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed7e0e4c8805d3ed42a8868270ce583fe739df71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "html_url": "https://github.com/rust-lang/rust/commit/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "616b66dca25a67321b1654e5a65acc6337d63cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/616b66dca25a67321b1654e5a65acc6337d63cf4", "html_url": "https://github.com/rust-lang/rust/commit/616b66dca25a67321b1654e5a65acc6337d63cf4"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "75cab74258b6b4a28d8f7bcda4bfb8ca1f4dbd2e", "filename": "config.toml.example", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "patch": "@@ -235,6 +235,11 @@\n # compiler.\n #codegen-units = 1\n \n+# Whether to enable ThinLTO (and increase the codegen units to either a default\n+# or the configured value). On by default. If we want the fastest possible\n+# compiler, we should disable this.\n+#thinlto = true\n+\n # Whether or not debug assertions are enabled for the compiler and standard\n # library. Also enables compilation of debug! and trace! logging macros.\n #debug-assertions = false"}, {"sha": "bf7b1015a49214a95a381981494842d90141c13c", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "patch": "@@ -509,10 +509,6 @@ impl<'a> Builder<'a> {\n              })\n              .env(\"TEST_MIRI\", self.config.test_miri.to_string())\n              .env(\"RUSTC_ERROR_METADATA_DST\", self.extended_error_dir());\n-        if let Some(n) = self.config.rust_codegen_units {\n-            cargo.env(\"RUSTC_CODEGEN_UNITS\", n.to_string());\n-        }\n-\n \n         if let Some(host_linker) = self.build.linker(compiler.host) {\n             cargo.env(\"RUSTC_HOST_LINKER\", host_linker);\n@@ -679,18 +675,31 @@ impl<'a> Builder<'a> {\n         if self.is_very_verbose() {\n             cargo.arg(\"-v\");\n         }\n+\n+        // This must be kept before the thinlto check, as we set codegen units\n+        // to 1 forcibly there.\n+        if let Some(n) = self.config.rust_codegen_units {\n+            cargo.env(\"RUSTC_CODEGEN_UNITS\", n.to_string());\n+        }\n+\n         if self.config.rust_optimize {\n             // FIXME: cargo bench does not accept `--release`\n             if cmd != \"bench\" {\n                 cargo.arg(\"--release\");\n             }\n \n             if self.config.rust_codegen_units.is_none() &&\n-               self.build.is_rust_llvm(compiler.host)\n-            {\n+               self.build.is_rust_llvm(compiler.host) &&\n+               self.config.rust_thinlto {\n                 cargo.env(\"RUSTC_THINLTO\", \"1\");\n+            } else if self.config.rust_codegen_units.is_none() {\n+                // Generally, if ThinLTO has been disabled for some reason, we\n+                // want to set the codegen units to 1. However, we shouldn't do\n+                // this if the option was specifically set by the user.\n+                cargo.env(\"RUSTC_CODEGEN_UNITS\", \"1\");\n             }\n         }\n+\n         if self.config.locked_deps {\n             cargo.arg(\"--locked\");\n         }"}, {"sha": "be8910120ee19051545e4e1dab81374738d58355", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "patch": "@@ -81,6 +81,7 @@ pub struct Config {\n     // rust codegen options\n     pub rust_optimize: bool,\n     pub rust_codegen_units: Option<u32>,\n+    pub rust_thinlto: bool,\n     pub rust_debug_assertions: bool,\n     pub rust_debuginfo: bool,\n     pub rust_debuginfo_lines: bool,\n@@ -261,6 +262,7 @@ impl Default for StringOrBool {\n struct Rust {\n     optimize: Option<bool>,\n     codegen_units: Option<u32>,\n+    thinlto: Option<bool>,\n     debug_assertions: Option<bool>,\n     debuginfo: Option<bool>,\n     debuginfo_lines: Option<bool>,\n@@ -412,6 +414,7 @@ impl Config {\n \n         // Store off these values as options because if they're not provided\n         // we'll infer default values for them later\n+        let mut thinlto = None;\n         let mut llvm_assertions = None;\n         let mut debuginfo_lines = None;\n         let mut debuginfo_only_std = None;\n@@ -455,6 +458,7 @@ impl Config {\n             optimize = rust.optimize;\n             ignore_git = rust.ignore_git;\n             debug_jemalloc = rust.debug_jemalloc;\n+            thinlto = rust.thinlto;\n             set(&mut config.rust_optimize_tests, rust.optimize_tests);\n             set(&mut config.rust_debuginfo_tests, rust.debuginfo_tests);\n             set(&mut config.codegen_tests, rust.codegen_tests);\n@@ -539,6 +543,7 @@ impl Config {\n             \"stable\" | \"beta\" | \"nightly\" => true,\n             _ => false,\n         };\n+        config.rust_thinlto = thinlto.unwrap_or(true);\n         config.rust_debuginfo_lines = debuginfo_lines.unwrap_or(default);\n         config.rust_debuginfo_only_std = debuginfo_only_std.unwrap_or(default);\n "}, {"sha": "d51752a12d9e56928b8eda1aab606b8cb758d2eb", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "patch": "@@ -70,6 +70,7 @@ def v(*args):\n # Optimization and debugging options. These may be overridden by the release\n # channel, etc.\n o(\"optimize\", \"rust.optimize\", \"build optimized rust code\")\n+o(\"thinlto\", \"rust.thinlto\", \"build Rust with ThinLTO enabled\")\n o(\"optimize-llvm\", \"llvm.optimize\", \"build optimized LLVM\")\n o(\"llvm-assertions\", \"llvm.assertions\", \"build LLVM with assertions\")\n o(\"debug-assertions\", \"rust.debug-assertions\", \"build with debugging assertions\")"}, {"sha": "02480c6937de16f419a8d2c764ef35c4681cc91d", "filename": "src/ci/run.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=e1f04c04dffc1615fde9dd1e51d27bcc5275cdb2", "patch": "@@ -46,6 +46,7 @@ export RUST_RELEASE_CHANNEL=nightly\n if [ \"$DEPLOY$DEPLOY_ALT\" != \"\" ]; then\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --release-channel=$RUST_RELEASE_CHANNEL\"\n   RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-llvm-static-stdcpp\"\n+  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-thinlto\"\n \n   if [ \"$NO_LLVM_ASSERTIONS\" = \"1\" ]; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\""}]}