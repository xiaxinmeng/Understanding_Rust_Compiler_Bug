{"sha": "80849e78a847f7834f71b36a66251ba0ea37a982", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwODQ5ZTc4YTg0N2Y3ODM0ZjcxYjM2YTY2MjUxYmEwZWEzN2E5ODI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-02T03:31:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-07T00:53:13Z"}, "message": "std: Fix stage0 build\n\nConflicts:\n\tsrc/libstd/rt/comm.rs", "tree": {"sha": "19dd5be6f419bf2d534e98a9f64f25d3acbe7d92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19dd5be6f419bf2d534e98a9f64f25d3acbe7d92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80849e78a847f7834f71b36a66251ba0ea37a982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80849e78a847f7834f71b36a66251ba0ea37a982", "html_url": "https://github.com/rust-lang/rust/commit/80849e78a847f7834f71b36a66251ba0ea37a982", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80849e78a847f7834f71b36a66251ba0ea37a982/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece38b3c7e16be1bedb45e552a127fe75bdb726a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece38b3c7e16be1bedb45e552a127fe75bdb726a", "html_url": "https://github.com/rust-lang/rust/commit/ece38b3c7e16be1bedb45e552a127fe75bdb726a"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "449ac9e14a41b31fefa051af97a7731c00a1d39b", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/80849e78a847f7834f71b36a66251ba0ea37a982/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80849e78a847f7834f71b36a66251ba0ea37a982/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=80849e78a847f7834f71b36a66251ba0ea37a982", "patch": "@@ -399,6 +399,12 @@ impl<T: Owned> GenericChan<T> for SharedChan<T> {\n }\n \n impl<T: Owned> GenericSmartChan<T> for SharedChan<T> {\n+    #[cfg(stage0)] // odd type checking errors\n+    fn try_send(&self, _val: T) -> bool {\n+        fail!()\n+    }\n+\n+    #[cfg(not(stage0))]\n     fn try_send(&self, val: T) -> bool {\n         unsafe {\n             let (next_pone, next_cone) = oneshot();\n@@ -442,6 +448,12 @@ impl<T: Owned> GenericPort<T> for SharedPort<T> {\n         }\n     }\n \n+    #[cfg(stage0)] // odd type checking errors\n+    fn try_recv(&self) -> Option<T> {\n+        fail!()\n+    }\n+\n+    #[cfg(not(stage0))]\n     fn try_recv(&self) -> Option<T> {\n         unsafe {\n             let (next_link_port, next_link_chan) = oneshot();"}]}