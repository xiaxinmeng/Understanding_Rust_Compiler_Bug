{"sha": "6065bed37be55427ed0ac888b863a85696b28f9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNjViZWQzN2JlNTU0MjdlZDBhYzg4OGI4NjNhODU2OTZiMjhmOWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-17T16:14:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-17T16:14:30Z"}, "message": "Auto merge of #26062 - eefriedman:cleanup-cached, r=nikomatsakis\n\nUsing the wrong landing pad has obvious bad effects, like dropping a value\r\ntwice.\r\n\r\nTestcase written by Alex Crichton.\r\n\r\nFixes #25089.", "tree": {"sha": "571bb100a702ea351729fb7721fa26e4d01461f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/571bb100a702ea351729fb7721fa26e4d01461f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6065bed37be55427ed0ac888b863a85696b28f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6065bed37be55427ed0ac888b863a85696b28f9b", "html_url": "https://github.com/rust-lang/rust/commit/6065bed37be55427ed0ac888b863a85696b28f9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6065bed37be55427ed0ac888b863a85696b28f9b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7a5a1c33a7794a97eb11a38cc576375a3553a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7a5a1c33a7794a97eb11a38cc576375a3553a64", "html_url": "https://github.com/rust-lang/rust/commit/e7a5a1c33a7794a97eb11a38cc576375a3553a64"}, {"sha": "a1d2eb8b1473cb7e013c0e75f79c484ee5428b60", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d2eb8b1473cb7e013c0e75f79c484ee5428b60", "html_url": "https://github.com/rust-lang/rust/commit/a1d2eb8b1473cb7e013c0e75f79c484ee5428b60"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "9133004dfeff1f0ef78b84e80e268f519be52ee0", "filename": "src/librustc_trans/trans/cleanup.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6065bed37be55427ed0ac888b863a85696b28f9b/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6065bed37be55427ed0ac888b863a85696b28f9b/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs?ref=6065bed37be55427ed0ac888b863a85696b28f9b", "patch": "@@ -954,8 +954,15 @@ impl<'blk, 'tcx> CleanupScope<'blk, 'tcx> {\n         }\n     }\n \n+    /// Manipulate cleanup scope for call arguments. Conceptually, each\n+    /// argument to a call is an lvalue, and performing the call moves each\n+    /// of the arguments into a new rvalue (which gets cleaned up by the\n+    /// callee). As an optimization, instead of actually performing all of\n+    /// those moves, trans just manipulates the cleanup scope to obtain the\n+    /// same effect.\n     pub fn drop_non_lifetime_clean(&mut self) {\n         self.cleanups.retain(|c| c.is_lifetime_end());\n+        self.clear_cached_exits();\n     }\n }\n "}, {"sha": "b619d1dd4488c015e165cf1340a71b400cc76a88", "filename": "src/test/run-pass/issue-25089.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/6065bed37be55427ed0ac888b863a85696b28f9b/src%2Ftest%2Frun-pass%2Fissue-25089.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6065bed37be55427ed0ac888b863a85696b28f9b/src%2Ftest%2Frun-pass%2Fissue-25089.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-25089.rs?ref=6065bed37be55427ed0ac888b863a85696b28f9b", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::thread;\n+\n+struct Foo(i32);\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        static mut DROPPED: bool = false;\n+        unsafe {\n+            assert!(!DROPPED);\n+            DROPPED = true;\n+        }\n+    }\n+}\n+\n+struct Empty;\n+\n+fn empty() -> Empty { Empty }\n+\n+fn should_panic(_: Foo, _: Empty) {\n+    panic!(\"test panic\");\n+}\n+\n+fn test() {\n+    should_panic(Foo(1), empty());\n+}\n+\n+fn main() {\n+    let ret = thread::spawn(test).join();\n+    assert!(ret.is_err());\n+}"}]}