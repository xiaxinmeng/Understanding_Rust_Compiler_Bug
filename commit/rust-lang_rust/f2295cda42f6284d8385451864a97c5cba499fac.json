{"sha": "f2295cda42f6284d8385451864a97c5cba499fac", "node_id": "C_kwDOAAsO6NoAKGYyMjk1Y2RhNDJmNjI4NGQ4Mzg1NDUxODY0YTk3YzVjYmE0OTlmYWM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-22T07:57:48Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-22T07:57:48Z"}, "message": "Report vfs memory usage in status command", "tree": {"sha": "9fe73a99a0a6e21d3303f68eb68482fc5002627b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fe73a99a0a6e21d3303f68eb68482fc5002627b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2295cda42f6284d8385451864a97c5cba499fac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2295cda42f6284d8385451864a97c5cba499fac", "html_url": "https://github.com/rust-lang/rust/commit/f2295cda42f6284d8385451864a97c5cba499fac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2295cda42f6284d8385451864a97c5cba499fac/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f00dcf9a69c269bc871f72f3f30ce02a85e5a4ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/f00dcf9a69c269bc871f72f3f30ce02a85e5a4ac", "html_url": "https://github.com/rust-lang/rust/commit/f00dcf9a69c269bc871f72f3f30ce02a85e5a4ac"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b4f929c2ad1f6a33928ef20530d7f72c9263fb66", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2295cda42f6284d8385451864a97c5cba499fac/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2295cda42f6284d8385451864a97c5cba499fac/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=f2295cda42f6284d8385451864a97c5cba499fac", "patch": "@@ -440,6 +440,10 @@ impl GlobalStateSnapshot {\n             ProjectWorkspace::DetachedFiles { .. } => None,\n         })\n     }\n+\n+    pub(crate) fn vfs_memory_usage(&self) -> usize {\n+        self.vfs.read().0.memory_usage()\n+    }\n }\n \n pub(crate) fn file_id_to_url(vfs: &vfs::Vfs, id: FileId) -> Url {"}, {"sha": "3c39f205e74c9a5b80d0c20994d3e2c9ebe04c0f", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f2295cda42f6284d8385451864a97c5cba499fac/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2295cda42f6284d8385451864a97c5cba499fac/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=f2295cda42f6284d8385451864a97c5cba499fac", "patch": "@@ -103,6 +103,7 @@ pub(crate) fn handle_analyzer_status(\n                 .collect::<Vec<&AbsPath>>()\n         );\n     }\n+    format_to!(buf, \"\\nVfs memory usage: {}\\n\", snap.vfs_memory_usage());\n     buf.push_str(\"\\nAnalysis:\\n\");\n     buf.push_str(\n         &snap"}, {"sha": "b510b9e394274bb16d2796a46962074fe8f0932c", "filename": "crates/vfs/src/lib.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f2295cda42f6284d8385451864a97c5cba499fac/crates%2Fvfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2295cda42f6284d8385451864a97c5cba499fac/crates%2Fvfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Flib.rs?ref=f2295cda42f6284d8385451864a97c5cba499fac", "patch": "@@ -139,6 +139,11 @@ impl Vfs {\n         self.get(file_id).as_deref().unwrap()\n     }\n \n+    /// Returns the overall memory usage for the stored files.\n+    pub fn memory_usage(&self) -> usize {\n+        self.data.iter().flatten().map(|d| d.capacity()).sum()\n+    }\n+\n     /// Returns an iterator over the stored ids and their corresponding paths.\n     ///\n     /// This will skip deleted files.\n@@ -158,7 +163,7 @@ impl Vfs {\n     ///\n     /// If the path does not currently exists in the `Vfs`, allocates a new\n     /// [`FileId`] for it.\n-    pub fn set_file_contents(&mut self, path: VfsPath, contents: Option<Vec<u8>>) -> bool {\n+    pub fn set_file_contents(&mut self, path: VfsPath, mut contents: Option<Vec<u8>>) -> bool {\n         let file_id = self.alloc_file_id(path);\n         let change_kind = match (self.get(file_id), &contents) {\n             (None, None) => return false,\n@@ -167,7 +172,9 @@ impl Vfs {\n             (Some(_), None) => ChangeKind::Delete,\n             (Some(_), Some(_)) => ChangeKind::Modify,\n         };\n-\n+        if let Some(contents) = &mut contents {\n+            contents.shrink_to_fit();\n+        }\n         *self.get_mut(file_id) = contents;\n         self.changes.push(ChangedFile { file_id, change_kind });\n         true"}]}