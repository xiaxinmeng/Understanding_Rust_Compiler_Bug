{"sha": "f90bf50d475eb9240c5bdeef3102c235335180c4", "node_id": "C_kwDOAAsO6NoAKGY5MGJmNTBkNDc1ZWI5MjQwYzViZGVlZjMxMDJjMjM1MzM1MTgwYzQ", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-17T17:58:22Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-20T03:55:30Z"}, "message": "fix span for suggestion", "tree": {"sha": "1a1454cebe58b03db5b56411c6399728b85903b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a1454cebe58b03db5b56411c6399728b85903b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f90bf50d475eb9240c5bdeef3102c235335180c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f90bf50d475eb9240c5bdeef3102c235335180c4", "html_url": "https://github.com/rust-lang/rust/commit/f90bf50d475eb9240c5bdeef3102c235335180c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f90bf50d475eb9240c5bdeef3102c235335180c4/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1225c3f6b8976b96eff4444cd7416a5d14eb3cd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1225c3f6b8976b96eff4444cd7416a5d14eb3cd4", "html_url": "https://github.com/rust-lang/rust/commit/1225c3f6b8976b96eff4444cd7416a5d14eb3cd4"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "9526296f9511530119db79663bd07f0f61099300", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f90bf50d475eb9240c5bdeef3102c235335180c4/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f90bf50d475eb9240c5bdeef3102c235335180c4/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=f90bf50d475eb9240c5bdeef3102c235335180c4", "patch": "@@ -697,21 +697,15 @@ impl<'a> Resolver<'a> {\n                     let mut suggestion = None;\n                     let (span, label) = if let PathResult::Failed { span, label, .. } = path_res {\n                         // try to suggest if it's not a macro, maybe a function\n-                        if let PathResult::NonModule(partial_res) =  self.resolve_path(\n-                            &path,\n-                            Some(ValueNS),\n-                            &parent_scope,\n-                            Some(Finalize::new(ast::CRATE_NODE_ID, path_span)),\n-                            None,\n-                        ) && partial_res.unresolved_segments() == 0 {\n+                        if let PathResult::NonModule(partial_res) = self.maybe_resolve_path(&path, Some(ValueNS), &parent_scope)\n+                            && partial_res.unresolved_segments() == 0 {\n                             let sm = self.session.source_map();\n-                            let span = sm.span_extend_while(span, |c| c == '!').unwrap_or(span);\n-                            let code = sm.span_to_snippet(span).unwrap();\n-                            suggestion = Some(\n-                                    (vec![(span, code.trim_end_matches('!').to_string())],\n+                            let exclamation_span = sm.next_point(span);\n+                            suggestion = Some((\n+                                vec![(exclamation_span, \"\".to_string())],\n                                     format!(\"{} is not a macro, but a {}, try to remove `!`\", Segment::names_to_string(&path), partial_res.base_res().descr()),\n-                                    Applicability::MaybeIncorrect)\n-                                );\n+                                    Applicability::MaybeIncorrect\n+                                ));\n                         }\n                         (span, label)\n                     } else {"}, {"sha": "4ca7fdf9b5a2a585692830efc1b59064268f4f32", "filename": "src/test/ui/suggestions/issue-103112.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f90bf50d475eb9240c5bdeef3102c235335180c4/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f90bf50d475eb9240c5bdeef3102c235335180c4/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.stderr?ref=f90bf50d475eb9240c5bdeef3102c235335180c4", "patch": "@@ -6,8 +6,9 @@ LL |     std::process::abort!();\n    |\n help: std::process::abort is not a macro, but a function, try to remove `!`\n    |\n-LL |     std::process::abort();\n-   |                   ~~~~~\n+LL -     std::process::abort!();\n+LL +     std::process::abort();\n+   |\n \n error: aborting due to previous error\n "}]}