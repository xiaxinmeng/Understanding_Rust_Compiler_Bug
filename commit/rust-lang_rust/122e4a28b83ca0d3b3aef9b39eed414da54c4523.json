{"sha": "122e4a28b83ca0d3b3aef9b39eed414da54c4523", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMmU0YTI4YjgzY2EwZDNiM2FlZjliMzllZWQ0MTRkYTU0YzQ1MjM=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-08T19:29:47Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-10T01:40:59Z"}, "message": "Don't copy const data to do an autoderef+autoref.", "tree": {"sha": "27feab34ed82cab647ae1d9ebfe768f38b0805ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27feab34ed82cab647ae1d9ebfe768f38b0805ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/122e4a28b83ca0d3b3aef9b39eed414da54c4523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/122e4a28b83ca0d3b3aef9b39eed414da54c4523", "html_url": "https://github.com/rust-lang/rust/commit/122e4a28b83ca0d3b3aef9b39eed414da54c4523", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/122e4a28b83ca0d3b3aef9b39eed414da54c4523/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c929ddde1650b4cde91efd435d7807dd313c2e9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c929ddde1650b4cde91efd435d7807dd313c2e9b", "html_url": "https://github.com/rust-lang/rust/commit/c929ddde1650b4cde91efd435d7807dd313c2e9b"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "1d1fb13db0c6f49897ba3596ce3533225a06caae", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/122e4a28b83ca0d3b3aef9b39eed414da54c4523/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122e4a28b83ca0d3b3aef9b39eed414da54c4523/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=122e4a28b83ca0d3b3aef9b39eed414da54c4523", "patch": "@@ -182,8 +182,10 @@ pub fn const_expr(cx: @CrateContext, e: @ast::expr) -> ValueRef {\n         }\n         Some(@ty::AutoDerefRef(ref adj)) => {\n             let mut ty = ety;\n+            let mut maybe_ptr = None;\n             for adj.autoderefs.times {\n                 let (dv, dt) = const_deref(cx, llconst, ty, false);\n+                maybe_ptr = Some(llconst);\n                 llconst = dv;\n                 ty = dt;\n             }\n@@ -193,17 +195,21 @@ pub fn const_expr(cx: @CrateContext, e: @ast::expr) -> ValueRef {\n                 Some(ref autoref) => {\n                     fail_unless!(autoref.region == ty::re_static);\n                     fail_unless!(autoref.mutbl != ast::m_mutbl);\n+                    // Don't copy data to do a deref+ref.\n+                    let llptr = match maybe_ptr {\n+                        Some(ptr) => ptr,\n+                        None => const_addr_of(cx, llconst)\n+                    };\n                     match autoref.kind {\n                         ty::AutoPtr => {\n-                            llconst = const_addr_of(cx, llconst);\n+                            llconst = llptr;\n                         }\n                         ty::AutoBorrowVec => {\n-                            let base = const_addr_of(cx, llconst);\n                             let size = machine::llsize_of(cx,\n                                                           val_ty(llconst));\n                             fail_unless!(abi::slice_elt_base == 0);\n                             fail_unless!(abi::slice_elt_len == 1);\n-                            llconst = C_struct(~[base, size]);\n+                            llconst = C_struct(~[llptr, size]);\n                         }\n                         _ => {\n                             cx.sess.span_bug(e.span,"}, {"sha": "078ae7661cff4ea6ea78d6e178152fb85062788c", "filename": "src/test/run-pass/const-region-ptrs-noncopy.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/122e4a28b83ca0d3b3aef9b39eed414da54c4523/src%2Ftest%2Frun-pass%2Fconst-region-ptrs-noncopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122e4a28b83ca0d3b3aef9b39eed414da54c4523/src%2Ftest%2Frun-pass%2Fconst-region-ptrs-noncopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-region-ptrs-noncopy.rs?ref=122e4a28b83ca0d3b3aef9b39eed414da54c4523", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+type Big = [u64 * 8];\n+struct Pair { a: int, b: &'self Big }\n+const x: &'static Big = &([13, 14, 10, 13, 11, 14, 14, 15]);\n+const y: &'static Pair<'static> = &Pair {a: 15, b: x};\n+\n+pub fn main() {\n+    fail_unless!(ptr::addr_of(x) == ptr::addr_of(y.b));\n+}"}]}