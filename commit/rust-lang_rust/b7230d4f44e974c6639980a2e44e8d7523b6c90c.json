{"sha": "b7230d4f44e974c6639980a2e44e8d7523b6c90c", "node_id": "C_kwDOAAsO6NoAKGI3MjMwZDRmNDRlOTc0YzY2Mzk5ODBhMmU0NGU4ZDc1MjNiNmM5MGM", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-07-06T07:52:53Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-07-06T09:03:56Z"}, "message": "Dogfood fixes to use `bool::then_some`", "tree": {"sha": "bf10a79164fc5ae3b82b4f54b61ceabd09c75fa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf10a79164fc5ae3b82b4f54b61ceabd09c75fa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7230d4f44e974c6639980a2e44e8d7523b6c90c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7230d4f44e974c6639980a2e44e8d7523b6c90c", "html_url": "https://github.com/rust-lang/rust/commit/b7230d4f44e974c6639980a2e44e8d7523b6c90c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7230d4f44e974c6639980a2e44e8d7523b6c90c/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebff7206bcc4c740be9016dc7d2e10cf421463f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebff7206bcc4c740be9016dc7d2e10cf421463f9", "html_url": "https://github.com/rust-lang/rust/commit/ebff7206bcc4c740be9016dc7d2e10cf421463f9"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "c089f4d8ce4bb2c3f9757351b44fdd999f338242", "filename": "clippy_dev/src/update_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_dev%2Fsrc%2Fupdate_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_dev%2Fsrc%2Fupdate_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fupdate_lints.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -553,7 +553,7 @@ fn replace_ident_like(contents: &str, replacements: &[(&str, &str)]) -> Option<S\n         pos = m.end();\n     }\n     result.push_str(&contents[pos..]);\n-    edited.then(|| result)\n+    edited.then_some(result)\n }\n \n fn round_to_fifty(count: usize) -> usize {"}, {"sha": "6a35044d45988504941029b8edfa9c0315a14ad1", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -730,7 +730,9 @@ fn walk_parents<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) -> (Position, &\n                         Position::DerefStable(precedence)\n                     })\n                 },\n-                ExprKind::Call(func, _) if func.hir_id == child_id => (child_id == e.hir_id).then(|| Position::Callee),\n+                ExprKind::Call(func, _) if func.hir_id == child_id => {\n+                    (child_id == e.hir_id).then_some(Position::Callee)\n+                },\n                 ExprKind::Call(func, args) => args\n                     .iter()\n                     .position(|arg| arg.hir_id == child_id)"}, {"sha": "4e3ae4c9614113f3a1132462d8b70600c8a7f8c9", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -650,7 +650,7 @@ fn find_insert_calls<'tcx>(\n     let allow_insert_closure = s.allow_insert_closure;\n     let is_single_insert = s.is_single_insert;\n     let edits = s.edits;\n-    s.can_use_entry.then(|| InsertSearchResults {\n+    s.can_use_entry.then_some(InsertSearchResults {\n         edits,\n         allow_insert_closure,\n         is_single_insert,"}, {"sha": "c5abcc462545c935fb8a6b37e678685ce7bf639b", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -127,7 +127,7 @@ fn get_impl_span(cx: &LateContext<'_>, id: LocalDefId) -> Option<Span> {\n         (!span.from_expansion()\n             && impl_item.generics.params.is_empty()\n             && !is_lint_allowed(cx, MULTIPLE_INHERENT_IMPL, id))\n-        .then(|| span)\n+        .then_some(span)\n     } else {\n         None\n     }"}, {"sha": "2b04475c7a9debd962534a28343034ad1a5af815", "filename": "clippy_lints/src/manual_non_exhaustive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -161,7 +161,7 @@ impl<'tcx> LateLintPass<'tcx> for ManualNonExhaustiveEnum {\n                 (matches!(v.data, hir::VariantData::Unit(_))\n                     && v.ident.as_str().starts_with('_')\n                     && is_doc_hidden(cx.tcx.hir().attrs(v.id)))\n-                .then(|| (id, v.span))\n+                .then_some((id, v.span))\n             });\n             if let Some((id, span)) = iter.next()\n                 && iter.next().is_none()"}, {"sha": "8f98b43b9e5c8d240327b269a2961468d0e28275", "filename": "clippy_lints/src/matches/manual_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmatches%2Fmanual_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmatches%2Fmanual_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmanual_map.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -105,7 +105,7 @@ fn check<'tcx>(\n \n     // Determine which binding mode to use.\n     let explicit_ref = some_pat.contains_explicit_ref_binding();\n-    let binding_ref = explicit_ref.or_else(|| (ty_ref_count != pat_ref_count).then(|| ty_mutability));\n+    let binding_ref = explicit_ref.or_else(|| (ty_ref_count != pat_ref_count).then_some(ty_mutability));\n \n     let as_ref_str = match binding_ref {\n         Some(Mutability::Mut) => \".as_mut()\","}, {"sha": "61d28b15066443a303f2fec7cf3025542bc120fc", "filename": "clippy_lints/src/matches/match_same_arms.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmatches%2Fmatch_same_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmatches%2Fmatch_same_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmatch_same_arms.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -38,7 +38,7 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, arms: &'tcx [Arm<'_>]) {\n             normalized_pats[i + 1..]\n                 .iter()\n                 .enumerate()\n-                .find_map(|(j, other)| pat.has_overlapping_values(other).then(|| i + 1 + j))\n+                .find_map(|(j, other)| pat.has_overlapping_values(other).then_some(i + 1 + j))\n                 .unwrap_or(normalized_pats.len())\n         })\n         .collect();\n@@ -55,7 +55,7 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, arms: &'tcx [Arm<'_>]) {\n                 .zip(forwards_blocking_idxs[..i].iter().copied().rev())\n                 .skip_while(|&(_, forward_block)| forward_block > i)\n                 .find_map(|((j, other), forward_block)| {\n-                    (forward_block == i || pat.has_overlapping_values(other)).then(|| j)\n+                    (forward_block == i || pat.has_overlapping_values(other)).then_some(j)\n                 })\n                 .unwrap_or(0)\n         })"}, {"sha": "5c996bc33f3ebd0dd4a166cf5c98dad5213f9811", "filename": "clippy_lints/src/matches/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fmod.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -1061,7 +1061,7 @@ fn contains_cfg_arm(cx: &LateContext<'_>, e: &Expr<'_>, scrutinee: &Expr<'_>, ar\n     let start = scrutinee_span.hi();\n     let mut arm_spans = arms.iter().map(|arm| {\n         let data = arm.span.data();\n-        (data.ctxt == SyntaxContext::root()).then(|| (data.lo, data.hi))\n+        (data.ctxt == SyntaxContext::root()).then_some((data.lo, data.hi))\n     });\n     let end = e.span.hi();\n \n@@ -1095,7 +1095,7 @@ fn contains_cfg_arm(cx: &LateContext<'_>, e: &Expr<'_>, scrutinee: &Expr<'_>, ar\n             parent: None,\n         }\n         .span();\n-        (!span_contains_cfg(cx, span)).then(|| next_start).ok_or(())\n+        (!span_contains_cfg(cx, span)).then_some(next_start).ok_or(())\n     });\n     match found {\n         Ok(start) => {"}, {"sha": "46d2fc493f81e19a5f6ba149a21ff150a75c0d8e", "filename": "clippy_lints/src/methods/manual_str_repeat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmethods%2Fmanual_str_repeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fmethods%2Fmanual_str_repeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmanual_str_repeat.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -43,7 +43,7 @@ fn parse_repeat_arg(cx: &LateContext<'_>, e: &Expr<'_>) -> Option<RepeatKind> {\n             Some(RepeatKind::String)\n         } else {\n             let ty = ty.peel_refs();\n-            (ty.is_str() || is_type_diagnostic_item(cx, ty, sym::String)).then(|| RepeatKind::String)\n+            (ty.is_str() || is_type_diagnostic_item(cx, ty, sym::String)).then_some(RepeatKind::String)\n         }\n     }\n }"}, {"sha": "44f153cffac511401f43c871690590fd3d29da43", "filename": "clippy_lints/src/option_if_let_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_if_let_else.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -146,7 +146,7 @@ fn detect_option_if_let_else<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'tcx>) ->\n                 });\n                 if let ExprKind::Path(QPath::Resolved(None, Path { res: Res::Local(local_id), .. })) = e.kind {\n                     match some_captures.get(local_id)\n-                        .or_else(|| (method_sugg == \"map_or_else\").then(|| ()).and_then(|_| none_captures.get(local_id)))\n+                        .or_else(|| (method_sugg == \"map_or_else\").then_some(()).and_then(|_| none_captures.get(local_id)))\n                     {\n                         Some(CaptureKind::Value | CaptureKind::Ref(Mutability::Mut)) => return None,\n                         Some(CaptureKind::Ref(Mutability::Not)) if as_mut => return None,"}, {"sha": "8bacc6f6b32311c829f1012639b5f0bf9bee5910", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -501,7 +501,7 @@ fn check_mut_from_ref<'tcx>(cx: &LateContext<'tcx>, sig: &FnSig<'_>, body: Optio\n             .iter()\n             .filter_map(get_rptr_lm)\n             .filter(|&(lt, _, _)| lt.name == out.name)\n-            .map(|(_, mutability, span)| (mutability == Mutability::Not).then(|| span))\n+            .map(|(_, mutability, span)| (mutability == Mutability::Not).then_some(span))\n             .collect();\n         if let Some(args) = args\n             && !args.is_empty()"}, {"sha": "3cbbda80f3a9fc6d11de47e6baea4481aea61c36", "filename": "clippy_lints/src/swap_ptr_to_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fswap_ptr_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fswap_ptr_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap_ptr_to_ref.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -73,7 +73,7 @@ fn is_ptr_to_ref(cx: &LateContext<'_>, e: &Expr<'_>, ctxt: SyntaxContext) -> (bo\n         && let ExprKind::Unary(UnOp::Deref, derefed_expr) = borrowed_expr.kind\n         && cx.typeck_results().expr_ty(derefed_expr).is_unsafe_ptr()\n     {\n-        (true, (borrowed_expr.span.ctxt() == ctxt || derefed_expr.span.ctxt() == ctxt).then(|| derefed_expr.span))\n+        (true, (borrowed_expr.span.ctxt() == ctxt || derefed_expr.span.ctxt() == ctxt).then_some(derefed_expr.span))\n     } else {\n         (false, None)\n     }"}, {"sha": "3010fc0223cebe34b8c5df9daba7776b6ffa3a7c", "filename": "clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -843,7 +843,7 @@ fn get_lint_group(cx: &LateContext<'_>, lint_id: LintId) -> Option<String> {\n fn get_lint_level_from_group(lint_group: &str) -> Option<&'static str> {\n     DEFAULT_LINT_LEVELS\n         .iter()\n-        .find_map(|(group_name, group_level)| (*group_name == lint_group).then(|| *group_level))\n+        .find_map(|(group_name, group_level)| (*group_name == lint_group).then_some(*group_level))\n }\n \n pub(super) fn is_deprecated_lint(cx: &LateContext<'_>, ty: &hir::Ty<'_>) -> bool {"}, {"sha": "08b8894752011c86a51f8ea36aa15eba82a19cd8", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -515,7 +515,7 @@ impl Write {\n             args.push(arg, span);\n         }\n \n-        parser.errors.is_empty().then(move || args)\n+        parser.errors.is_empty().then_some(args)\n     }\n \n     /// Checks the arguments of `print[ln]!` and `write[ln]!` calls. It will return a tuple of two"}, {"sha": "0e7393036833c6ef4f59f6403bbc5e35a928426d", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -1016,7 +1016,7 @@ pub fn can_move_expr_to_closure<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'\n         captures: HirIdMap::default(),\n     };\n     v.visit_expr(expr);\n-    v.allow_closure.then(|| v.captures)\n+    v.allow_closure.then_some(v.captures)\n }\n \n /// Returns the method names and argument list of nested method call expressions that make up"}, {"sha": "1197fe914de46853dd3dcdde12daec9a6097fbcc", "filename": "clippy_utils/src/source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_utils%2Fsrc%2Fsource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7230d4f44e974c6639980a2e44e8d7523b6c90c/clippy_utils%2Fsrc%2Fsource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fsource.rs?ref=b7230d4f44e974c6639980a2e44e8d7523b6c90c", "patch": "@@ -353,7 +353,7 @@ pub fn snippet_with_context<'a>(\n /// span containing `m!(0)`.\n pub fn walk_span_to_context(span: Span, outer: SyntaxContext) -> Option<Span> {\n     let outer_span = hygiene::walk_chain(span, outer);\n-    (outer_span.ctxt() == outer).then(|| outer_span)\n+    (outer_span.ctxt() == outer).then_some(outer_span)\n }\n \n /// Removes block comments from the given `Vec` of lines."}]}