{"sha": "d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "node_id": "C_kwDOAAsO6NoAKGQ3ZjllODE2NTBkY2VlM2UyZDVhZDE5NzNhNzFkYTY0NGEyZWZmOTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-19T08:26:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-19T08:26:47Z"}, "message": "Auto merge of #110407 - Nilstrieb:fluent-macro, r=davidtwco\n\nAdd `rustc_fluent_macro` to decouple fluent from `rustc_macros`\n\nFluent, with all the icu4x it brings in, takes quite some time to compile. `fluent_messages!` is only needed in further downstream rustc crates, but is blocking more upstream crates like `rustc_index`. By splitting it out, we allow `rustc_macros` to be compiled earlier, which speeds up `x check compiler` by about 5 seconds (and even more after the needless dependency on `serde_json` is removed from `rustc_data_structures`).", "tree": {"sha": "d5b2f853837ac9155b469705a02fd4d8875ba208", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5b2f853837ac9155b469705a02fd4d8875ba208"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "html_url": "https://github.com/rust-lang/rust/commit/d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7815840793b980d0aae7d5a2f5d9bb1fd6c0d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7815840793b980d0aae7d5a2f5d9bb1fd6c0d1e", "html_url": "https://github.com/rust-lang/rust/commit/c7815840793b980d0aae7d5a2f5d9bb1fd6c0d1e"}, {"sha": "b5d3d970fa64c25eecfbd8ebbae601a2c6cb2cb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5d3d970fa64c25eecfbd8ebbae601a2c6cb2cb3", "html_url": "https://github.com/rust-lang/rust/commit/b5d3d970fa64c25eecfbd8ebbae601a2c6cb2cb3"}], "stats": {"total": 691, "additions": 398, "deletions": 293}, "files": [{"sha": "ab1e92ccd4b7a9560b967d1659177510db7aab79", "filename": "Cargo.lock", "status": "modified", "additions": 47, "deletions": 4, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -2941,6 +2941,7 @@ dependencies = [\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_macros\",\n@@ -2964,6 +2965,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_macros\",\n  \"rustc_parse\",\n  \"rustc_session\",\n@@ -2991,6 +2993,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_lexer\",\n  \"rustc_macros\",\n  \"rustc_serialize\",\n@@ -3018,6 +3021,7 @@ dependencies = [\n  \"polonius-engine\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_graphviz\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3047,6 +3051,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_lexer\",\n  \"rustc_lint_defs\",\n  \"rustc_macros\",\n@@ -3075,6 +3080,7 @@ dependencies = [\n  \"rustc_codegen_ssa\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3112,6 +3118,7 @@ dependencies = [\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n  \"rustc_incremental\",\n@@ -3144,6 +3151,7 @@ dependencies = [\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n@@ -3217,6 +3225,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_hir_analysis\",\n  \"rustc_hir_pretty\",\n@@ -3265,6 +3274,7 @@ dependencies = [\n  \"intl-memoizer\",\n  \"rustc_baked_icu_data\",\n  \"rustc_data_structures\",\n+ \"rustc_fluent_macro\",\n  \"rustc_macros\",\n  \"rustc_serialize\",\n  \"rustc_span\",\n@@ -3281,6 +3291,7 @@ dependencies = [\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_error_messages\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_lint_defs\",\n  \"rustc_macros\",\n@@ -3309,6 +3320,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_lexer\",\n  \"rustc_lint_defs\",\n  \"rustc_macros\",\n@@ -3329,6 +3341,20 @@ dependencies = [\n  \"rustc_span\",\n ]\n \n+[[package]]\n+name = \"rustc_fluent_macro\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"annotate-snippets\",\n+ \"fluent-bundle\",\n+ \"fluent-syntax\",\n+ \"proc-macro2\",\n+ \"quote\",\n+ \"syn 2.0.8\",\n+ \"synstructure 0.13.0\",\n+ \"unic-langid\",\n+]\n+\n [[package]]\n name = \"rustc_fs_util\"\n version = \"0.0.0\"\n@@ -3365,6 +3391,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n@@ -3399,6 +3426,7 @@ dependencies = [\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_graphviz\",\n  \"rustc_hir\",\n  \"rustc_hir_analysis\",\n@@ -3426,6 +3454,7 @@ dependencies = [\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_fs_util\",\n  \"rustc_graphviz\",\n  \"rustc_hir\",\n@@ -3454,6 +3483,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_macros\",\n@@ -3484,6 +3514,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n+ \"rustc_fluent_macro\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n  \"rustc_hir_analysis\",\n@@ -3533,6 +3564,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n@@ -3586,14 +3618,10 @@ dependencies = [\n name = \"rustc_macros\"\n version = \"0.1.0\"\n dependencies = [\n- \"annotate-snippets\",\n- \"fluent-bundle\",\n- \"fluent-syntax\",\n  \"proc-macro2\",\n  \"quote\",\n  \"syn 2.0.8\",\n  \"synstructure 0.13.0\",\n- \"unic-langid\",\n ]\n \n [[package]]\n@@ -3609,6 +3637,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n  \"rustc_hir_pretty\",\n@@ -3646,6 +3675,7 @@ dependencies = [\n  \"rustc_error_messages\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_graphviz\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3671,6 +3701,7 @@ dependencies = [\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n@@ -3694,6 +3725,7 @@ dependencies = [\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_graphviz\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3737,6 +3769,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_macros\",\n@@ -3760,6 +3793,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_lexer\",\n  \"rustc_macros\",\n  \"rustc_session\",\n@@ -3790,6 +3824,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_lexer\",\n@@ -3810,6 +3845,7 @@ dependencies = [\n  \"libloading\",\n  \"rustc_ast\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_lint\",\n  \"rustc_macros\",\n  \"rustc_metadata\",\n@@ -3825,6 +3861,7 @@ dependencies = [\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_hir_analysis\",\n  \"rustc_macros\",\n@@ -3866,6 +3903,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_macros\",\n@@ -3893,6 +3931,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_macros\",\n@@ -3926,6 +3965,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n+ \"rustc_fluent_macro\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n  \"rustc_index\",\n@@ -3977,6 +4017,7 @@ dependencies = [\n  \"rustc-demangle\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_macros\",\n  \"rustc_middle\",\n@@ -4019,6 +4060,7 @@ dependencies = [\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\",\n@@ -4076,6 +4118,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n+ \"rustc_fluent_macro\",\n  \"rustc_hir\",\n  \"rustc_index\",\n  \"rustc_infer\","}, {"sha": "6b0da256505063a55be90c16f9e7a4738326bcf7", "filename": "compiler/rustc_ast_lowering/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_lowering%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_lowering%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_middle = { path = \"../rustc_middle\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "bfd9956b0043e58bf55483dbb2576852c7011df2", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -55,13 +55,13 @@ use rustc_data_structures::sync::Lrc;\n use rustc_errors::{\n     DiagnosticArgFromDisplay, DiagnosticMessage, Handler, StashKey, SubdiagnosticMessage,\n };\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, LifetimeRes, Namespace, PartialRes, PerNS, Res};\n use rustc_hir::def_id::{LocalDefId, CRATE_DEF_ID};\n use rustc_hir::definitions::DefPathData;\n use rustc_hir::{ConstArg, GenericArg, ItemLocalId, ParamName, TraitCandidate};\n use rustc_index::vec::{Idx, IndexSlice, IndexVec};\n-use rustc_macros::fluent_messages;\n use rustc_middle::{\n     span_bug,\n     ty::{ResolverAstLowering, TyCtxt},"}, {"sha": "eb73612352072607f0acbb5e83bcd05b61d6a602", "filename": "compiler/rustc_ast_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n rustc_macros = { path = \"../rustc_macros\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_parse = { path = \"../rustc_parse\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "7db413c5bbd420ca927d2dbb50b967877c601244", "filename": "compiler/rustc_ast_passes/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -13,7 +13,7 @@\n #![deny(rustc::diagnostic_outside_of_impl)]\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n pub mod ast_validation;\n mod errors;"}, {"sha": "2c4c3a0c2635b5ff1888e32fc60fc22ac3646139", "filename": "compiler/rustc_attr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_attr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_attr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -9,6 +9,7 @@ edition = \"2021\"\n rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_errors = { path = \"../rustc_errors\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_feature = { path = \"../rustc_feature\" }"}, {"sha": "cfed2acfb3a41dec0806f114a8b3d67a5e19706a", "filename": "compiler/rustc_attr/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_attr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_attr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,7 +12,7 @@\n extern crate rustc_macros;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n mod builtin;\n mod session_diagnostics;"}, {"sha": "56a9deb6aab1443d4b52da4f8f6d08cb4d9d2a0b", "filename": "compiler/rustc_borrowck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_borrowck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_borrowck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -15,6 +15,7 @@ rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_graphviz = { path = \"../rustc_graphviz\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_lexer = { path = \"../rustc_lexer\" }"}, {"sha": "c67ad97c4ff0e62c33aec96978b9ad943155b964", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -20,14 +20,14 @@ extern crate tracing;\n use rustc_data_structures::fx::{FxIndexMap, FxIndexSet};\n use rustc_data_structures::graph::dominators::Dominators;\n use rustc_errors::{Diagnostic, DiagnosticBuilder, DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_index::bit_set::ChunkedBitSet;\n use rustc_index::vec::{IndexSlice, IndexVec};\n use rustc_infer::infer::{\n     DefiningAnchor, InferCtxt, NllRegionVariableOrigin, RegionVariableOrigin, TyCtxtInferExt,\n };\n-use rustc_macros::fluent_messages;\n use rustc_middle::mir::{\n     traversal, Body, ClearCrossCrate, Local, Location, Mutability, NonDivergingIntrinsic, Operand,\n     Place, PlaceElem, PlaceRef, VarDebugInfoContents,"}, {"sha": "5f6441660e3bc5f1e129f741f7455292e8b2bb63", "filename": "compiler/rustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -17,6 +17,7 @@ rustc_feature = { path = \"../rustc_feature\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n rustc_lint_defs = { path = \"../rustc_lint_defs\" }\n rustc_macros = { path = \"../rustc_macros\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_parse_format = { path = \"../rustc_parse_format\" }\n rustc_parse = { path = \"../rustc_parse\" }\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "134d64ce9cc897029c0f638f8c920e0366277fde", "filename": "compiler/rustc_builtin_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -24,7 +24,7 @@ use crate::deriving::*;\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n use rustc_expand::base::{MacroExpanderFn, ResolverExpand, SyntaxExtensionKind};\n use rustc_expand::proc_macro::BangProcMacro;\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_span::symbol::sym;\n \n mod alloc_error_handler;"}, {"sha": "1cabb05de975b0fec950fb6ae965ed4de35ade46", "filename": "compiler/rustc_codegen_gcc/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -27,6 +27,7 @@ extern crate rustc_attr;\n extern crate rustc_codegen_ssa;\n extern crate rustc_data_structures;\n extern crate rustc_errors;\n+extern crate rustc_fluent_macro;\n extern crate rustc_hir;\n extern crate rustc_macros;\n extern crate rustc_metadata;\n@@ -76,7 +77,7 @@ use rustc_codegen_ssa::target_features::supported_target_features;\n use rustc_codegen_ssa::traits::{CodegenBackend, ExtraBackendMethods, ModuleBufferMethods, ThinBufferMethods, WriteBackendMethods};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{DiagnosticMessage, ErrorGuaranteed, Handler, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_metadata::EncodedMetadata;\n use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n use rustc_middle::ty::TyCtxt;"}, {"sha": "bdea565a5a6ad3b4f173d022cc6f4ab9b9efd7d2", "filename": "compiler/rustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -22,6 +22,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_codegen_ssa = { path = \"../rustc_codegen_ssa\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_fs_util = { path = \"../rustc_fs_util\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }"}, {"sha": "8305a0a4c286df2c091c91db271c8953c4ca7f5c", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -34,7 +34,7 @@ use rustc_codegen_ssa::ModuleCodegen;\n use rustc_codegen_ssa::{CodegenResults, CompiledModule};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{DiagnosticMessage, ErrorGuaranteed, FatalError, Handler, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_metadata::EncodedMetadata;\n use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n use rustc_middle::ty::query::Providers;"}, {"sha": "272147ae5b009a2cafadb1b2b65b96e930bc7502", "filename": "compiler/rustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -29,6 +29,7 @@ rustc_span = { path = \"../rustc_span\" }\n rustc_middle = { path = \"../rustc_middle\" }\n rustc_type_ir = { path = \"../rustc_type_ir\" }\n rustc_attr = { path = \"../rustc_attr\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_symbol_mangling = { path = \"../rustc_symbol_mangling\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }"}, {"sha": "26d55618b490a3dee1be3cc0c2e794b7ffe1449c", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -25,8 +25,8 @@ use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir::def_id::CrateNum;\n-use rustc_macros::fluent_messages;\n use rustc_middle::dep_graph::WorkProduct;\n use rustc_middle::middle::dependency_format::Dependencies;\n use rustc_middle::middle::exported_symbols::SymbolExportKind;"}, {"sha": "74030a43c5053e6b23e1c16441c1bb634554460a", "filename": "compiler/rustc_const_eval/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_const_eval%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_const_eval%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -14,6 +14,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "1b66eca97a5781cc6c1605969592ab57f6fa13a0", "filename": "compiler/rustc_const_eval/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -34,7 +34,7 @@ pub mod transform;\n pub mod util;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_middle::ty;\n use rustc_middle::ty::query::Providers;\n "}, {"sha": "cc4c5a0cacddf596dffd93b409c3d117985f1d5b", "filename": "compiler/rustc_driver_impl/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_driver_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_driver_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver_impl%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -18,6 +18,7 @@ rustc_const_eval = { path = \"../rustc_const_eval\" }\n rustc_error_messages = { path = \"../rustc_error_messages\" }\n rustc_expand = { path = \"../rustc_expand\" }\n rustc_hir_typeck = { path = \"../rustc_hir_typeck\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_incremental = { path = \"../rustc_incremental\" }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_mir_build = { path = \"../rustc_mir_build\" }"}, {"sha": "1a80b4fc3140d8ce5be4790e81212d86d27438ab", "filename": "compiler/rustc_driver_impl/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -28,10 +28,10 @@ use rustc_errors::{\n     DiagnosticMessage, ErrorGuaranteed, PResult, SubdiagnosticMessage, TerminalUrl,\n };\n use rustc_feature::find_gated_cfg;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_interface::util::{self, collect_crate_types, get_codegen_backend};\n use rustc_interface::{interface, Queries};\n use rustc_lint::LintStore;\n-use rustc_macros::fluent_messages;\n use rustc_metadata::locator;\n use rustc_session::config::{nightly_options, CG_OPTIONS, Z_OPTIONS};\n use rustc_session::config::{ErrorOutputType, Input, OutputType, PrintRequest, TrimmedDefPaths};"}, {"sha": "481c94266f2716abaeab32fcfffe6242fc90ff12", "filename": "compiler/rustc_error_messages/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_error_messages%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_error_messages%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -11,6 +11,7 @@ fluent-syntax = \"0.11\"\n intl-memoizer = \"0.5.1\"\n rustc_baked_icu_data = { path = \"../rustc_baked_icu_data\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "88d94c93bf520bd7d70c92b404886694b5621ed8", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,7 +12,8 @@ use fluent_bundle::FluentResource;\n use fluent_syntax::parser::ParserError;\n use icu_provider_adapters::fallback::{LocaleFallbackProvider, LocaleFallbacker};\n use rustc_data_structures::sync::Lrc;\n-use rustc_macros::{fluent_messages, Decodable, Encodable};\n+use rustc_fluent_macro::fluent_messages;\n+use rustc_macros::{Decodable, Encodable};\n use rustc_span::Span;\n use std::borrow::Cow;\n use std::error::Error;"}, {"sha": "46ace8eb2dd8d2d25dba642d54b54f42d7c1261c", "filename": "compiler/rustc_errors/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_errors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_errors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -10,6 +10,7 @@ tracing = \"0.1\"\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n rustc_error_messages = { path = \"../rustc_error_messages\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "b65a636d7701c0264652208afe1a27d3230caba1", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -38,8 +38,8 @@ pub use rustc_error_messages::{\n     fallback_fluent_bundle, fluent_bundle, DelayDm, DiagnosticMessage, FluentBundle,\n     LanguageIdentifier, LazyFallbackBundle, MultiSpan, SpanLabel, SubdiagnosticMessage,\n };\n+use rustc_fluent_macro::fluent_messages;\n pub use rustc_lint_defs::{pluralize, Applicability};\n-use rustc_macros::fluent_messages;\n use rustc_span::source_map::SourceMap;\n pub use rustc_span::ErrorGuaranteed;\n use rustc_span::{Loc, Span};"}, {"sha": "2dae0e3f53c3c064010139497a294bd691189743", "filename": "compiler/rustc_expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -16,6 +16,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n rustc_lint_defs = { path = \"../rustc_lint_defs\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "83a5043b0aa6f1c49975bf1c9df05c8b07bac72c", "filename": "compiler/rustc_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -21,7 +21,7 @@ extern crate tracing;\n extern crate proc_macro as pm;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n mod placeholders;\n mod proc_macro_server;"}, {"sha": "a45559af71382ec4b4d8dbb665cb5cbde28c5986", "filename": "compiler/rustc_fluent_macro/Cargo.toml", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_fluent_macro%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_fluent_macro%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_fluent_macro%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -0,0 +1,17 @@\n+[package]\n+name = \"rustc_fluent_macro\"\n+version = \"0.1.0\"\n+edition = \"2021\"\n+\n+[lib]\n+proc-macro = true\n+\n+[dependencies]\n+annotate-snippets = \"0.9\"\n+fluent-bundle = \"0.15.2\"\n+fluent-syntax = \"0.11\"\n+synstructure = \"0.13.0\"\n+syn = { version = \"2\", features = [\"full\"] }\n+proc-macro2 = \"1\"\n+quote = \"1\"\n+unic-langid = { version = \"0.9.0\", features = [\"macros\"] }"}, {"sha": "9dffc9a7645483c43916b29d15f1c90acae6b3d0", "filename": "compiler/rustc_fluent_macro/src/fluent.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_fluent_macro%2Fsrc%2Ffluent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_fluent_macro%2Fsrc%2Ffluent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_fluent_macro%2Fsrc%2Ffluent.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -68,7 +68,7 @@ fn failed(crate_name: &Ident) -> proc_macro::TokenStream {\n     .into()\n }\n \n-/// See [rustc_macros::fluent_messages].\n+/// See [rustc_fluent_macro::fluent_messages].\n pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::TokenStream {\n     let crate_name = std::env::var(\"CARGO_PKG_NAME\")\n         // If `CARGO_PKG_NAME` is missing, then we're probably running in a test, so use", "previous_filename": "compiler/rustc_macros/src/diagnostics/fluent.rs"}, {"sha": "a01643cd67d2b4006d28e221762b189b6bf47eb1", "filename": "compiler/rustc_fluent_macro/src/lib.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_fluent_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_fluent_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_fluent_macro%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -0,0 +1,64 @@\n+#![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n+#![feature(proc_macro_diagnostic)]\n+#![feature(proc_macro_span)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n+#![allow(rustc::default_hash_types)]\n+\n+use proc_macro::TokenStream;\n+\n+mod fluent;\n+\n+/// Implements the `fluent_messages` macro, which performs compile-time validation of the\n+/// compiler's Fluent resources (i.e. that the resources parse and don't multiply define the same\n+/// messages) and generates constants that make using those messages in diagnostics more ergonomic.\n+///\n+/// For example, given the following invocation of the macro..\n+///\n+/// ```ignore (rust)\n+/// fluent_messages! { \"./typeck.ftl\" }\n+/// ```\n+/// ..where `typeck.ftl` has the following contents..\n+///\n+/// ```fluent\n+/// typeck_field_multiply_specified_in_initializer =\n+///     field `{$ident}` specified more than once\n+///     .label = used more than once\n+///     .label_previous_use = first use of `{$ident}`\n+/// ```\n+/// ...then the macro parse the Fluent resource, emitting a diagnostic if it fails to do so, and\n+/// will generate the following code:\n+///\n+/// ```ignore (rust)\n+/// pub static DEFAULT_LOCALE_RESOURCE: &'static [&'static str] = include_str!(\"./typeck.ftl\");\n+///\n+/// mod fluent_generated {\n+///     mod typeck {\n+///         pub const field_multiply_specified_in_initializer: DiagnosticMessage =\n+///             DiagnosticMessage::fluent(\"typeck_field_multiply_specified_in_initializer\");\n+///         pub const field_multiply_specified_in_initializer_label_previous_use: DiagnosticMessage =\n+///             DiagnosticMessage::fluent_attr(\n+///                 \"typeck_field_multiply_specified_in_initializer\",\n+///                 \"previous_use_label\"\n+///             );\n+///     }\n+/// }\n+/// ```\n+/// When emitting a diagnostic, the generated constants can be used as follows:\n+///\n+/// ```ignore (rust)\n+/// let mut err = sess.struct_span_err(\n+///     span,\n+///     fluent::typeck::field_multiply_specified_in_initializer\n+/// );\n+/// err.span_default_label(span);\n+/// err.span_label(\n+///     previous_use_span,\n+///     fluent::typeck::field_multiply_specified_in_initializer_label_previous_use\n+/// );\n+/// err.emit();\n+/// ```\n+#[proc_macro]\n+pub fn fluent_messages(input: TokenStream) -> TokenStream {\n+    fluent::fluent_messages(input)\n+}"}, {"sha": "f56cedebfb04e9095d8810e66ba3fbd9d0429055", "filename": "compiler/rustc_hir_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -15,6 +15,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_session = { path = \"../rustc_session\" }\n smallvec = { version = \"1.8.1\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "4c28e28f9646d116558c7681fce57b27304e7a54", "filename": "compiler/rustc_hir_analysis/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -99,10 +99,10 @@ mod variance;\n \n use rustc_errors::ErrorGuaranteed;\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir as hir;\n use rustc_hir::Node;\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_macros::fluent_messages;\n use rustc_middle::middle;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, Ty, TyCtxt};"}, {"sha": "13e1ea31c4d546a33ffb182b69f10c3bdf213ef4", "filename": "compiler/rustc_hir_typeck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_ast = { path = \"../rustc_ast\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_graphviz = { path = \"../rustc_graphviz\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_hir = { path = \"../rustc_hir\" }"}, {"sha": "49da78b18e2a91e59271c8c3e94346ebe9f8f933", "filename": "compiler/rustc_hir_typeck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -59,14 +59,14 @@ use rustc_errors::{\n     struct_span_err, DiagnosticId, DiagnosticMessage, ErrorGuaranteed, MultiSpan,\n     SubdiagnosticMessage,\n };\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::{HirIdMap, Node};\n use rustc_hir_analysis::astconv::AstConv;\n use rustc_hir_analysis::check::check_abi;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n-use rustc_macros::fluent_messages;\n use rustc_middle::traits;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, Ty, TyCtxt};"}, {"sha": "59a0623c1e1bff00e2875a3c3df4b591cccbc912", "filename": "compiler/rustc_incremental/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_incremental%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_incremental%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -11,6 +11,7 @@ rustc_ast = { path = \"../rustc_ast\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_fs_util = { path = \"../rustc_fs_util\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_graphviz = { path = \"../rustc_graphviz\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "11710c368cefea794de1fcdc081ba9fb94be8a1e", "filename": "compiler/rustc_incremental/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_incremental%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_incremental%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -33,6 +33,6 @@ pub use persist::LoadResult;\n pub use persist::{build_dep_graph, load_dep_graph, DepGraphFuture};\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n fluent_messages! { \"../messages.ftl\" }"}, {"sha": "9dd5868adc71f2d9da562e674525e4df69a3f54e", "filename": "compiler/rustc_infer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_infer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_infer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_middle = { path = \"../rustc_middle\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_serialize = { path = \"../rustc_serialize\" }"}, {"sha": "e92ba05aa67392226251f3181de4a0a9374610b0", "filename": "compiler/rustc_infer/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -35,7 +35,7 @@ extern crate tracing;\n extern crate rustc_middle;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n mod errors;\n pub mod infer;"}, {"sha": "4569c35e18275005bd5ee15b596e29e7e8e2564c", "filename": "compiler/rustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -16,6 +16,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_borrowck = { path = \"../rustc_borrowck\" }\n rustc_builtin_macros = { path = \"../rustc_builtin_macros\" }\n rustc_expand = { path = \"../rustc_expand\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_fs_util = { path = \"../rustc_fs_util\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_parse = { path = \"../rustc_parse\" }"}, {"sha": "51bd8381e93d74ae43ba8e635d3528cc8fa4fa77", "filename": "compiler/rustc_interface/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_interface%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -13,7 +13,7 @@\n extern crate tracing;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n mod callbacks;\n mod errors;"}, {"sha": "539eea3d816aec65da4f405c26b5bdf9b73e2124", "filename": "compiler/rustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -11,6 +11,7 @@ rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n rustc_attr = { path = \"../rustc_attr\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "76f072579077719f1557dd2624defef580e058b3", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -82,9 +82,9 @@ pub use array_into_iter::ARRAY_INTO_ITER;\n \n use rustc_ast as ast;\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n-use rustc_macros::fluent_messages;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::builtin::{"}, {"sha": "1f1201b0035a9a4f6f6dca773a33e7a074cd8afc", "filename": "compiler/rustc_macros/Cargo.toml", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -7,11 +7,7 @@ edition = \"2021\"\n proc-macro = true\n \n [dependencies]\n-annotate-snippets = \"0.9\"\n-fluent-bundle = \"0.15.2\"\n-fluent-syntax = \"0.11\"\n synstructure = \"0.13.0\"\n syn = { version = \"2\", features = [\"full\"] }\n proc-macro2 = \"1\"\n quote = \"1\"\n-unic-langid = { version = \"0.9.0\", features = [\"macros\"] }"}, {"sha": "bd84681cbb44b188196a7a2dd24f10e5eaef0159", "filename": "compiler/rustc_macros/src/diagnostics/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -1,12 +1,10 @@\n mod diagnostic;\n mod diagnostic_builder;\n mod error;\n-mod fluent;\n mod subdiagnostic;\n mod utils;\n \n use diagnostic::{DiagnosticDerive, LintDiagnosticDerive};\n-pub(crate) use fluent::fluent_messages;\n use proc_macro2::TokenStream;\n use quote::format_ident;\n use subdiagnostic::SubdiagnosticDeriveBuilder;"}, {"sha": "904f8eb5731ec39717da9d09ffe82ee3e7991982", "filename": "compiler/rustc_macros/src/lib.rs", "status": "modified", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -54,60 +54,6 @@ pub fn newtype_index(input: TokenStream) -> TokenStream {\n     newtype::newtype(input)\n }\n \n-/// Implements the `fluent_messages` macro, which performs compile-time validation of the\n-/// compiler's Fluent resources (i.e. that the resources parse and don't multiply define the same\n-/// messages) and generates constants that make using those messages in diagnostics more ergonomic.\n-///\n-/// For example, given the following invocation of the macro..\n-///\n-/// ```ignore (rust)\n-/// fluent_messages! { \"./typeck.ftl\" }\n-/// ```\n-/// ..where `typeck.ftl` has the following contents..\n-///\n-/// ```fluent\n-/// typeck_field_multiply_specified_in_initializer =\n-///     field `{$ident}` specified more than once\n-///     .label = used more than once\n-///     .label_previous_use = first use of `{$ident}`\n-/// ```\n-/// ...then the macro parse the Fluent resource, emitting a diagnostic if it fails to do so, and\n-/// will generate the following code:\n-///\n-/// ```ignore (rust)\n-/// pub static DEFAULT_LOCALE_RESOURCE: &'static [&'static str] = include_str!(\"./typeck.ftl\");\n-///\n-/// mod fluent_generated {\n-///     mod typeck {\n-///         pub const field_multiply_specified_in_initializer: DiagnosticMessage =\n-///             DiagnosticMessage::fluent(\"typeck_field_multiply_specified_in_initializer\");\n-///         pub const field_multiply_specified_in_initializer_label_previous_use: DiagnosticMessage =\n-///             DiagnosticMessage::fluent_attr(\n-///                 \"typeck_field_multiply_specified_in_initializer\",\n-///                 \"previous_use_label\"\n-///             );\n-///     }\n-/// }\n-/// ```\n-/// When emitting a diagnostic, the generated constants can be used as follows:\n-///\n-/// ```ignore (rust)\n-/// let mut err = sess.struct_span_err(\n-///     span,\n-///     fluent::typeck::field_multiply_specified_in_initializer\n-/// );\n-/// err.span_default_label(span);\n-/// err.span_label(\n-///     previous_use_span,\n-///     fluent::typeck::field_multiply_specified_in_initializer_label_previous_use\n-/// );\n-/// err.emit();\n-/// ```\n-#[proc_macro]\n-pub fn fluent_messages(input: TokenStream) -> TokenStream {\n-    diagnostics::fluent_messages(input)\n-}\n-\n decl_derive!([HashStable, attributes(stable_hasher)] => hash_stable::hash_stable_derive);\n decl_derive!(\n     [HashStable_Generic, attributes(stable_hasher)] =>"}, {"sha": "0e54d6aa94618fdefa06d5170e4f81ddd2d87aff", "filename": "compiler/rustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -18,6 +18,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_fs_util = { path = \"../rustc_fs_util\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_hir_pretty = { path = \"../rustc_hir_pretty\" }"}, {"sha": "9f664d0f0c8e29a8b46c3f5d42ad947d426ba131", "filename": "compiler/rustc_metadata/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_metadata%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -28,7 +28,7 @@ extern crate tracing;\n \n pub use rmeta::{provide, provide_extern};\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n mod dependency_format;\n mod foreign_modules;"}, {"sha": "dfbe8ac0ba3dca1ef1b9f63ad31dbff7c5f1162c", "filename": "compiler/rustc_middle/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -21,6 +21,7 @@ rustc_errors = { path = \"../rustc_errors\" }\n # Used for intra-doc links\n rustc_error_messages = { path = \"../rustc_error_messages\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_graphviz = { path = \"../rustc_graphviz\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }"}, {"sha": "76a8367b2c460a9d8b2cecf417a0f54b8f1d9516", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -75,7 +75,7 @@ extern crate tracing;\n extern crate smallvec;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n #[cfg(test)]\n mod tests;"}, {"sha": "58449ee9eb48da9bbd13b6145b46cd8bb641d7d3", "filename": "compiler/rustc_mir_build/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_build%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_build%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -14,6 +14,7 @@ rustc_apfloat = { path = \"../rustc_apfloat\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_errors = { path = \"../rustc_errors\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "259f2e433920bbb1ece6773bf31e5cdf175793d8", "filename": "compiler/rustc_mir_build/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -25,7 +25,7 @@ pub mod thir;\n use rustc_middle::ty::query::Providers;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n fluent_messages! { \"../messages.ftl\" }\n "}, {"sha": "4a296bb33670f728c79e6ede406799c7df7a02fe", "filename": "compiler/rustc_mir_dataflow/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_dataflow%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_dataflow%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -13,6 +13,7 @@ tracing = \"0.1\"\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_graphviz = { path = \"../rustc_graphviz\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }"}, {"sha": "fc4efb943e6b77bc0a08d10992980550376814fe", "filename": "compiler/rustc_mir_dataflow/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -16,8 +16,8 @@ extern crate rustc_middle;\n \n use rustc_ast::MetaItem;\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir::def_id::DefId;\n-use rustc_macros::fluent_messages;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::symbol::{sym, Symbol};\n "}, {"sha": "5ecd68c79bb0fc2fdc25daeb9c5f791077590dea", "filename": "compiler/rustc_monomorphize/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_monomorphize%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_monomorphize%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -13,6 +13,7 @@ tracing = \"0.1\"\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_middle = { path = \"../rustc_middle\" }"}, {"sha": "aea9f7190278761b07f6be3ac95d5961080a025e", "filename": "compiler/rustc_monomorphize/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -10,8 +10,8 @@ extern crate tracing;\n extern crate rustc_middle;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir::lang_items::LangItem;\n-use rustc_macros::fluent_messages;\n use rustc_middle::traits;\n use rustc_middle::ty::adjustment::CustomCoerceUnsized;\n use rustc_middle::ty::query::{Providers, TyCtxtAt};"}, {"sha": "1bd9f66290db19bbb9974655e8fffc07cc6cd155", "filename": "compiler/rustc_parse/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_ast_pretty = { path = \"../rustc_ast_pretty\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "507f6e4182eec4aa2df57263f55646bc8a747c06", "filename": "compiler/rustc_parse/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -20,7 +20,7 @@ use rustc_ast_pretty::pprust;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Applicability, Diagnostic, FatalError, Level, PResult};\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_session::parse::ParseSess;\n use rustc_span::{FileName, SourceFile, Span};\n "}, {"sha": "0413b5b4fb92d605167f30ff7691fb3122348ca0", "filename": "compiler/rustc_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_expand = { path = \"../rustc_expand\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_target = { path = \"../rustc_target\" }"}, {"sha": "eca3bae9a1cfd4455f58f31c47d744047ce6d1f4", "filename": "compiler/rustc_passes/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -19,7 +19,7 @@ extern crate rustc_middle;\n extern crate tracing;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_middle::ty::query::Providers;\n \n mod check_attr;"}, {"sha": "c930b3365fddaa733be566fa002ee9e26677e4a4", "filename": "compiler/rustc_plugin_impl/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_plugin_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_plugin_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_errors = { path = \"../rustc_errors\" }\n rustc_lint = { path = \"../rustc_lint\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_metadata = { path = \"../rustc_metadata\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "faa7495ef9fd165169035a7ec182d3305986a7bd", "filename": "compiler/rustc_plugin_impl/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,8 +12,8 @@\n #![deny(rustc::diagnostic_outside_of_impl)]\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_lint::LintStore;\n-use rustc_macros::fluent_messages;\n \n mod errors;\n pub mod load;"}, {"sha": "08c4067705cbccd5bbd8280aab00ed06d825d6f4", "filename": "compiler/rustc_privacy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -9,6 +9,7 @@ rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_middle = { path = \"../rustc_middle\" }\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "9567329192d525a9371de9ed3ec1d45c0a689c20", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -17,12 +17,12 @@ use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::intern::Interned;\n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_ID};\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::{AssocItemKind, HirIdSet, ItemId, Node, PatKind};\n-use rustc_macros::fluent_messages;\n use rustc_middle::bug;\n use rustc_middle::hir::nested_filter;\n use rustc_middle::middle::privacy::{EffectiveVisibilities, Level};"}, {"sha": "34e576379762baeb79b9e059864dd0fef1a30ffa", "filename": "compiler/rustc_query_system/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_query_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_query_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,6 +12,7 @@ rustc_ast = { path = \"../rustc_ast\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "8c9e9cfad60242cf13a2ca206ef6e466591ba943", "filename": "compiler/rustc_query_system/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -16,7 +16,7 @@ extern crate rustc_data_structures;\n extern crate rustc_macros;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n pub mod cache;\n pub mod dep_graph;"}, {"sha": "1c16d85f1b9c2ae81463c61acf4e180fe2298746", "filename": "compiler/rustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -16,6 +16,7 @@ rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_expand = { path = \"../rustc_expand\" }\n rustc_feature = { path = \"../rustc_feature\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "282f12bd3c0d9910b262dff06fc8412ea679fd67", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -33,14 +33,14 @@ use rustc_errors::{\n     Applicability, DiagnosticBuilder, DiagnosticMessage, ErrorGuaranteed, SubdiagnosticMessage,\n };\n use rustc_expand::base::{DeriveResolutions, SyntaxExtension, SyntaxExtensionKind};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir::def::Namespace::{self, *};\n use rustc_hir::def::{self, CtorOf, DefKind, DocLinkResMap, LifetimeRes, PartialRes, PerNS};\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, LocalDefIdMap, LocalDefIdSet};\n use rustc_hir::def_id::{CRATE_DEF_ID, LOCAL_CRATE};\n use rustc_hir::definitions::DefPathData;\n use rustc_hir::TraitCandidate;\n use rustc_index::vec::IndexVec;\n-use rustc_macros::fluent_messages;\n use rustc_metadata::creader::{CStore, CrateLoader};\n use rustc_middle::metadata::ModChild;\n use rustc_middle::middle::privacy::EffectiveVisibilities;"}, {"sha": "15dbfbfd3877be44a26472e3fb60a172ab97ca4b", "filename": "compiler/rustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -10,6 +10,7 @@ tracing = \"0.1\"\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }"}, {"sha": "590a68c66006109610feeae4f472e4f93d0c4828", "filename": "compiler/rustc_session/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_session%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_session%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -19,7 +19,7 @@ pub mod errors;\n extern crate tracing;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n pub mod cgu_reuse_tracker;\n pub mod utils;"}, {"sha": "052ef8bb94c3e6803dbd06d14df523f3c896594f", "filename": "compiler/rustc_symbol_mangling/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_symbol_mangling%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_symbol_mangling%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -15,6 +15,7 @@ twox-hash = \"1.6.3\"\n rustc_span = { path = \"../rustc_span\" }\n rustc_middle = { path = \"../rustc_middle\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "c97406868b6a7ba3ee3f0c353a6e94d60e7145d1", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -101,9 +101,9 @@ extern crate rustc_middle;\n extern crate tracing;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n+use rustc_fluent_macro::fluent_messages;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n-use rustc_macros::fluent_messages;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrs;\n use rustc_middle::mir::mono::{InstantiationMode, MonoItem};"}, {"sha": "a81459317be6b3e00f7b9a68e349e91f0b972010", "filename": "compiler/rustc_trait_selection/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_trait_selection%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_trait_selection%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -14,6 +14,7 @@ rustc_ast = { path = \"../rustc_ast\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_macros = { path = \"../rustc_macros\" }"}, {"sha": "ed3994be987963dc176d24abcd97dc5262f4b21a", "filename": "compiler/rustc_trait_selection/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -37,7 +37,7 @@ extern crate rustc_middle;\n extern crate smallvec;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n \n pub mod errors;\n pub mod infer;"}, {"sha": "51885c9b47eb8c3fdeb7216c61b01cecc40aceca", "filename": "compiler/rustc_ty_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ty_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ty_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2FCargo.toml?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -9,6 +9,7 @@ rustc_middle = { path = \"../rustc_middle\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_hir = { path = \"../rustc_hir\" }\n+rustc_fluent_macro = { path = \"../rustc_fluent_macro\" }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "9d5a72a73cd4918b390a4f14a9476516f12c5e5f", "filename": "compiler/rustc_ty_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ty_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/compiler%2Frustc_ty_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Flib.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -19,7 +19,7 @@ extern crate rustc_middle;\n extern crate tracing;\n \n use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::fluent_messages;\n+use rustc_fluent_macro::fluent_messages;\n use rustc_middle::ty::query::Providers;\n \n mod abi;"}, {"sha": "1dd6d211b3f0dbd77ac5a11619d2c630288c592b", "filename": "tests/ui-fulldeps/fluent-messages/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -3,8 +3,8 @@\n #![feature(rustc_private)]\n #![crate_type = \"lib\"]\n \n-extern crate rustc_macros;\n-use rustc_macros::fluent_messages;\n+extern crate rustc_fluent_macro;\n+use rustc_fluent_macro::fluent_messages;\n \n /// Copy of the relevant `DiagnosticMessage` variant constructed by `fluent_messages` as it\n /// expects `crate::DiagnosticMessage` to exist."}, {"sha": "994fc26ba021ef6cf0036ee6a48a471a502a8d9f", "filename": "tests/ui-fulldeps/internal-lints/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -7,15 +7,17 @@\n #![deny(rustc::diagnostic_outside_of_impl)]\n \n extern crate rustc_errors;\n+extern crate rustc_fluent_macro;\n extern crate rustc_macros;\n extern crate rustc_session;\n extern crate rustc_span;\n \n use rustc_errors::{\n-    AddToDiagnostic, IntoDiagnostic, Diagnostic, DiagnosticBuilder,\n-    ErrorGuaranteed, Handler, DiagnosticMessage, SubdiagnosticMessage,\n+    AddToDiagnostic, Diagnostic, DiagnosticBuilder, DiagnosticMessage, ErrorGuaranteed, Handler,\n+    IntoDiagnostic, SubdiagnosticMessage,\n };\n-use rustc_macros::{fluent_messages, Diagnostic, Subdiagnostic};\n+use rustc_fluent_macro::fluent_messages;\n+use rustc_macros::{Diagnostic, Subdiagnostic};\n use rustc_span::Span;\n \n fluent_messages! { \"./diagnostics.ftl\" }"}, {"sha": "6e670c018520b0163aed057ee2adc4c2519c4f2a", "filename": "tests/ui-fulldeps/internal-lints/diagnostics.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -1,5 +1,5 @@\n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:41:17\n+  --> $DIR/diagnostics.rs:43:17\n    |\n LL |         handler.struct_err(\"untranslatable diagnostic\")\n    |                 ^^^^^^^^^^\n@@ -11,13 +11,13 @@ LL | #![deny(rustc::untranslatable_diagnostic)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:61:14\n+  --> $DIR/diagnostics.rs:63:14\n    |\n LL |         diag.note(\"untranslatable diagnostic\");\n    |              ^^^^\n \n error: diagnostics should only be created in `IntoDiagnostic`/`AddToDiagnostic` impls\n-  --> $DIR/diagnostics.rs:78:25\n+  --> $DIR/diagnostics.rs:80:25\n    |\n LL |     let _diag = handler.struct_err(crate::fluent_generated::no_crate_example);\n    |                         ^^^^^^^^^^\n@@ -29,13 +29,13 @@ LL | #![deny(rustc::diagnostic_outside_of_impl)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostics should only be created in `IntoDiagnostic`/`AddToDiagnostic` impls\n-  --> $DIR/diagnostics.rs:81:25\n+  --> $DIR/diagnostics.rs:83:25\n    |\n LL |     let _diag = handler.struct_err(\"untranslatable diagnostic\");\n    |                         ^^^^^^^^^^\n \n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:81:25\n+  --> $DIR/diagnostics.rs:83:25\n    |\n LL |     let _diag = handler.struct_err(\"untranslatable diagnostic\");\n    |                         ^^^^^^^^^^"}, {"sha": "80ab03ab24c86b76a318dd333ee9da74e36b0021", "filename": "tests/ui-fulldeps/session-diagnostic/diagnostic-derive.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -17,8 +17,10 @@ extern crate rustc_span;\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n \n+extern crate rustc_fluent_macro;\n extern crate rustc_macros;\n-use rustc_macros::{fluent_messages, Diagnostic, LintDiagnostic, Subdiagnostic};\n+use rustc_fluent_macro::fluent_messages;\n+use rustc_macros::{Diagnostic, LintDiagnostic, Subdiagnostic};\n \n extern crate rustc_middle;\n use rustc_middle::ty::Ty;"}, {"sha": "5e1bea4e38cc3a7ef27cb3ef57a6390464e4d386", "filename": "tests/ui-fulldeps/session-diagnostic/diagnostic-derive.stderr", "status": "modified", "additions": 91, "deletions": 91, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -1,39 +1,39 @@\n error: unsupported type attribute for diagnostic derive enum\n-  --> $DIR/diagnostic-derive.rs:42:1\n+  --> $DIR/diagnostic-derive.rs:44:1\n    |\n LL | #[diag(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:45:5\n+  --> $DIR/diagnostic-derive.rs:47:5\n    |\n LL |     Foo,\n    |     ^^^\n    |\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:47:5\n+  --> $DIR/diagnostic-derive.rs:49:5\n    |\n LL |     Bar,\n    |     ^^^\n    |\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: expected parentheses: #[diag(...)]\n-  --> $DIR/diagnostic-derive.rs:53:8\n+  --> $DIR/diagnostic-derive.rs:55:8\n    |\n LL | #[diag = \"E0123\"]\n    |        ^\n \n error: `#[nonsense(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:58:1\n+  --> $DIR/diagnostic-derive.rs:60:1\n    |\n LL | #[nonsense(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:58:1\n+  --> $DIR/diagnostic-derive.rs:60:1\n    |\n LL | / #[nonsense(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -45,7 +45,7 @@ LL | | struct InvalidStructAttr {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:65:1\n+  --> $DIR/diagnostic-derive.rs:67:1\n    |\n LL | / #[diag(\"E0123\")]\n LL | |\n@@ -55,13 +55,13 @@ LL | | struct InvalidLitNestedAttr {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug must be the first argument\n-  --> $DIR/diagnostic-derive.rs:75:16\n+  --> $DIR/diagnostic-derive.rs:77:16\n    |\n LL | #[diag(nonsense(\"foo\"), code = \"E0123\", slug = \"foo\")]\n    |                ^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:75:1\n+  --> $DIR/diagnostic-derive.rs:77:1\n    |\n LL | / #[diag(nonsense(\"foo\"), code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -72,15 +72,15 @@ LL | | struct InvalidNestedStructAttr1 {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: unknown argument\n-  --> $DIR/diagnostic-derive.rs:81:8\n+  --> $DIR/diagnostic-derive.rs:83:8\n    |\n LL | #[diag(nonsense = \"...\", code = \"E0123\", slug = \"foo\")]\n    |        ^^^^^^^^\n    |\n    = note: only the `code` parameter is valid after the slug\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:81:1\n+  --> $DIR/diagnostic-derive.rs:83:1\n    |\n LL | / #[diag(nonsense = \"...\", code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -91,15 +91,15 @@ LL | | struct InvalidNestedStructAttr2 {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: unknown argument\n-  --> $DIR/diagnostic-derive.rs:87:8\n+  --> $DIR/diagnostic-derive.rs:89:8\n    |\n LL | #[diag(nonsense = 4, code = \"E0123\", slug = \"foo\")]\n    |        ^^^^^^^^\n    |\n    = note: only the `code` parameter is valid after the slug\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:87:1\n+  --> $DIR/diagnostic-derive.rs:89:1\n    |\n LL | / #[diag(nonsense = 4, code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -110,71 +110,71 @@ LL | | struct InvalidNestedStructAttr3 {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: unknown argument\n-  --> $DIR/diagnostic-derive.rs:93:42\n+  --> $DIR/diagnostic-derive.rs:95:42\n    |\n LL | #[diag(no_crate_example, code = \"E0123\", slug = \"foo\")]\n    |                                          ^^^^\n    |\n    = note: only the `code` parameter is valid after the slug\n \n error: `#[suggestion = ...]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:100:5\n+  --> $DIR/diagnostic-derive.rs:102:5\n    |\n LL |     #[suggestion = \"bar\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:107:8\n+  --> $DIR/diagnostic-derive.rs:109:8\n    |\n LL | #[diag(no_crate_example, code = \"E0456\")]\n    |        ^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:106:8\n+  --> $DIR/diagnostic-derive.rs:108:8\n    |\n LL | #[diag(no_crate_example, code = \"E0123\")]\n    |        ^^^^^^^^^^^^^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:107:26\n+  --> $DIR/diagnostic-derive.rs:109:26\n    |\n LL | #[diag(no_crate_example, code = \"E0456\")]\n    |                          ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:106:26\n+  --> $DIR/diagnostic-derive.rs:108:26\n    |\n LL | #[diag(no_crate_example, code = \"E0123\")]\n    |                          ^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:113:42\n+  --> $DIR/diagnostic-derive.rs:115:42\n    |\n LL | #[diag(no_crate_example, code = \"E0456\", code = \"E0457\")]\n    |                                          ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:113:26\n+  --> $DIR/diagnostic-derive.rs:115:26\n    |\n LL | #[diag(no_crate_example, code = \"E0456\", code = \"E0457\")]\n    |                          ^^^^\n \n error: diagnostic slug must be the first argument\n-  --> $DIR/diagnostic-derive.rs:118:43\n+  --> $DIR/diagnostic-derive.rs:120:43\n    |\n LL | #[diag(no_crate_example, no_crate::example, code = \"E0456\")]\n    |                                           ^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:123:1\n+  --> $DIR/diagnostic-derive.rs:125:1\n    |\n LL | struct KindNotProvided {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:126:1\n+  --> $DIR/diagnostic-derive.rs:128:1\n    |\n LL | / #[diag(code = \"E0456\")]\n LL | |\n@@ -184,31 +184,31 @@ LL | | struct SlugNotProvided {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/diagnostic-derive.rs:137:5\n+  --> $DIR/diagnostic-derive.rs:139:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: `#[nonsense]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:145:5\n+  --> $DIR/diagnostic-derive.rs:147:5\n    |\n LL |     #[nonsense]\n    |     ^^^^^^^^^^^\n \n error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/diagnostic-derive.rs:162:5\n+  --> $DIR/diagnostic-derive.rs:164:5\n    |\n LL |     #[label(no_crate_label)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `name` doesn't refer to a field on this type\n-  --> $DIR/diagnostic-derive.rs:170:46\n+  --> $DIR/diagnostic-derive.rs:172:46\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"{name}\")]\n    |                                              ^^^^^^^^\n \n error: invalid format string: expected `'}'` but string was terminated\n-  --> $DIR/diagnostic-derive.rs:175:10\n+  --> $DIR/diagnostic-derive.rs:177:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ expected `'}'` in format string\n@@ -217,7 +217,7 @@ LL | #[derive(Diagnostic)]\n    = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: invalid format string: unmatched `}` found\n-  --> $DIR/diagnostic-derive.rs:185:10\n+  --> $DIR/diagnostic-derive.rs:187:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ unmatched `}` in format string\n@@ -226,47 +226,47 @@ LL | #[derive(Diagnostic)]\n    = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/diagnostic-derive.rs:205:5\n+  --> $DIR/diagnostic-derive.rs:207:5\n    |\n LL |     #[label(no_crate_label)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:224:5\n+  --> $DIR/diagnostic-derive.rs:226:5\n    |\n LL |     #[suggestion(no_crate_suggestion)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:232:18\n+  --> $DIR/diagnostic-derive.rs:234:18\n    |\n LL |     #[suggestion(nonsense = \"bar\")]\n    |                  ^^^^^^^^\n    |\n    = help: only `style`, `code` and `applicability` are valid nested attributes\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:232:5\n+  --> $DIR/diagnostic-derive.rs:234:5\n    |\n LL |     #[suggestion(nonsense = \"bar\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:241:18\n+  --> $DIR/diagnostic-derive.rs:243:18\n    |\n LL |     #[suggestion(msg = \"bar\")]\n    |                  ^^^\n    |\n    = help: only `style`, `code` and `applicability` are valid nested attributes\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:241:5\n+  --> $DIR/diagnostic-derive.rs:243:5\n    |\n LL |     #[suggestion(msg = \"bar\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: wrong field type for suggestion\n-  --> $DIR/diagnostic-derive.rs:264:5\n+  --> $DIR/diagnostic-derive.rs:266:5\n    |\n LL | /     #[suggestion(no_crate_suggestion, code = \"This is suggested code\")]\n LL | |\n@@ -276,93 +276,93 @@ LL | |     suggestion: Applicability,\n    = help: `#[suggestion(...)]` should be applied to fields of type `Span` or `(Span, Applicability)`\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:280:24\n+  --> $DIR/diagnostic-derive.rs:282:24\n    |\n LL |     suggestion: (Span, Span, Applicability),\n    |                        ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:280:18\n+  --> $DIR/diagnostic-derive.rs:282:18\n    |\n LL |     suggestion: (Span, Span, Applicability),\n    |                  ^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:288:33\n+  --> $DIR/diagnostic-derive.rs:290:33\n    |\n LL |     suggestion: (Applicability, Applicability, Span),\n    |                                 ^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:288:18\n+  --> $DIR/diagnostic-derive.rs:290:18\n    |\n LL |     suggestion: (Applicability, Applicability, Span),\n    |                  ^^^^^^^^^^^^^\n \n error: `#[label = ...]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:295:5\n+  --> $DIR/diagnostic-derive.rs:297:5\n    |\n LL |     #[label = \"bar\"]\n    |     ^^^^^^^^^^^^^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:446:5\n+  --> $DIR/diagnostic-derive.rs:448:5\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", applicability = \"maybe-incorrect\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:448:24\n+  --> $DIR/diagnostic-derive.rs:450:24\n    |\n LL |     suggestion: (Span, Applicability),\n    |                        ^^^^^^^^^^^^^\n \n error: invalid applicability\n-  --> $DIR/diagnostic-derive.rs:454:69\n+  --> $DIR/diagnostic-derive.rs:456:69\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", applicability = \"batman\")]\n    |                                                                     ^^^^^^^^\n \n error: the `#[help(...)]` attribute can only be applied to fields of type `Span`, `MultiSpan`, `bool` or `()`\n-  --> $DIR/diagnostic-derive.rs:521:5\n+  --> $DIR/diagnostic-derive.rs:523:5\n    |\n LL |     #[help(no_crate_help)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/diagnostic-derive.rs:530:32\n+  --> $DIR/diagnostic-derive.rs:532:32\n    |\n LL |     #[label(no_crate_label, foo)]\n    |                                ^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:538:29\n+  --> $DIR/diagnostic-derive.rs:540:29\n    |\n LL |     #[label(no_crate_label, foo = \"...\")]\n    |                             ^^^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:546:29\n+  --> $DIR/diagnostic-derive.rs:548:29\n    |\n LL |     #[label(no_crate_label, foo(\"...\"))]\n    |                             ^^^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:558:5\n+  --> $DIR/diagnostic-derive.rs:560:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: the `primary_span` field attribute is not valid for lint diagnostics\n \n error: `#[error(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:578:1\n+  --> $DIR/diagnostic-derive.rs:580:1\n    |\n LL | #[error(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:578:1\n+  --> $DIR/diagnostic-derive.rs:580:1\n    |\n LL | / #[error(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -374,13 +374,13 @@ LL | | struct ErrorAttribute {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: `#[warn_(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:585:1\n+  --> $DIR/diagnostic-derive.rs:587:1\n    |\n LL | #[warn_(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:585:1\n+  --> $DIR/diagnostic-derive.rs:587:1\n    |\n LL | / #[warn_(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -392,13 +392,13 @@ LL | | struct WarnAttribute {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: `#[lint(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:592:1\n+  --> $DIR/diagnostic-derive.rs:594:1\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:592:1\n+  --> $DIR/diagnostic-derive.rs:594:1\n    |\n LL | / #[lint(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -410,19 +410,19 @@ LL | | struct LintAttributeOnSessionDiag {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: `#[lint(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:599:1\n+  --> $DIR/diagnostic-derive.rs:601:1\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `#[lint(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:599:1\n+  --> $DIR/diagnostic-derive.rs:601:1\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:599:1\n+  --> $DIR/diagnostic-derive.rs:601:1\n    |\n LL | / #[lint(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -435,135 +435,135 @@ LL | | struct LintAttributeOnLintDiag {}\n    = help: specify the slug as the first argument to the attribute, such as `#[diag(compiletest_example)]`\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:609:53\n+  --> $DIR/diagnostic-derive.rs:611:53\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", code = \",,,\")]\n    |                                                     ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:609:39\n+  --> $DIR/diagnostic-derive.rs:611:39\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", code = \",,,\")]\n    |                                       ^^^^\n \n error: wrong types for suggestion\n-  --> $DIR/diagnostic-derive.rs:618:24\n+  --> $DIR/diagnostic-derive.rs:620:24\n    |\n LL |     suggestion: (Span, usize),\n    |                        ^^^^^\n    |\n    = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`\n \n error: wrong types for suggestion\n-  --> $DIR/diagnostic-derive.rs:626:17\n+  --> $DIR/diagnostic-derive.rs:628:17\n    |\n LL |     suggestion: (Span,),\n    |                 ^^^^^^^\n    |\n    = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:633:5\n+  --> $DIR/diagnostic-derive.rs:635:5\n    |\n LL |     #[suggestion(no_crate_suggestion)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `#[multipart_suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:640:1\n+  --> $DIR/diagnostic-derive.rs:642:1\n    |\n LL | #[multipart_suggestion(no_crate_suggestion)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider creating a `Subdiagnostic` instead\n \n error: `#[multipart_suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:647:5\n+  --> $DIR/diagnostic-derive.rs:649:5\n    |\n LL |     #[multipart_suggestion(no_crate_suggestion)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider creating a `Subdiagnostic` instead\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/diagnostic-derive.rs:643:24\n+  --> $DIR/diagnostic-derive.rs:645:24\n    |\n LL | #[multipart_suggestion()]\n    |                        ^\n \n error: `#[suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:655:1\n+  --> $DIR/diagnostic-derive.rs:657:1\n    |\n LL | #[suggestion(no_crate_suggestion, code = \"...\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[label]` and `#[suggestion]` can only be applied to fields\n \n error: `#[label]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:664:1\n+  --> $DIR/diagnostic-derive.rs:666:1\n    |\n LL | #[label]\n    | ^^^^^^^^\n    |\n    = help: `#[label]` and `#[suggestion]` can only be applied to fields\n \n error: `eager` is the only supported nested attribute for `subdiagnostic`\n-  --> $DIR/diagnostic-derive.rs:698:7\n+  --> $DIR/diagnostic-derive.rs:700:7\n    |\n LL |     #[subdiagnostic(bad)]\n    |       ^^^^^^^^^^^^^^^^^^\n \n error: `#[subdiagnostic = ...]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:706:5\n+  --> $DIR/diagnostic-derive.rs:708:5\n    |\n LL |     #[subdiagnostic = \"bad\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `eager` is the only supported nested attribute for `subdiagnostic`\n-  --> $DIR/diagnostic-derive.rs:714:7\n+  --> $DIR/diagnostic-derive.rs:716:7\n    |\n LL |     #[subdiagnostic(bad, bad)]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `eager` is the only supported nested attribute for `subdiagnostic`\n-  --> $DIR/diagnostic-derive.rs:722:7\n+  --> $DIR/diagnostic-derive.rs:724:7\n    |\n LL |     #[subdiagnostic(\"bad\")]\n    |       ^^^^^^^^^^^^^^^^^^^^\n \n error: `#[subdiagnostic(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:730:5\n+  --> $DIR/diagnostic-derive.rs:732:5\n    |\n LL |     #[subdiagnostic(eager)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: eager subdiagnostics are not supported on lints\n \n error: expected at least one string literal for `code(...)`\n-  --> $DIR/diagnostic-derive.rs:788:23\n+  --> $DIR/diagnostic-derive.rs:790:23\n    |\n LL |     #[suggestion(code())]\n    |                       ^\n \n error: `code(...)` must contain only string literals\n-  --> $DIR/diagnostic-derive.rs:796:23\n+  --> $DIR/diagnostic-derive.rs:798:23\n    |\n LL |     #[suggestion(code(foo))]\n    |                       ^^^\n \n error: unexpected token\n-  --> $DIR/diagnostic-derive.rs:796:23\n+  --> $DIR/diagnostic-derive.rs:798:23\n    |\n LL |     #[suggestion(code(foo))]\n    |                       ^^^\n \n error: expected string literal\n-  --> $DIR/diagnostic-derive.rs:805:25\n+  --> $DIR/diagnostic-derive.rs:807:25\n    |\n LL |     #[suggestion(code = 3)]\n    |                         ^\n \n error: `#[suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:820:5\n+  --> $DIR/diagnostic-derive.rs:822:5\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -573,75 +573,75 @@ LL |     #[suggestion(no_crate_suggestion, code = \"\")]\n    = help: to show a variable set of suggestions, use a `Vec` of `Subdiagnostic`s annotated with `#[suggestion(...)]`\n \n error: cannot find attribute `nonsense` in this scope\n-  --> $DIR/diagnostic-derive.rs:58:3\n+  --> $DIR/diagnostic-derive.rs:60:3\n    |\n LL | #[nonsense(no_crate_example, code = \"E0123\")]\n    |   ^^^^^^^^\n \n error: cannot find attribute `nonsense` in this scope\n-  --> $DIR/diagnostic-derive.rs:145:7\n+  --> $DIR/diagnostic-derive.rs:147:7\n    |\n LL |     #[nonsense]\n    |       ^^^^^^^^\n \n error: cannot find attribute `error` in this scope\n-  --> $DIR/diagnostic-derive.rs:578:3\n+  --> $DIR/diagnostic-derive.rs:580:3\n    |\n LL | #[error(no_crate_example, code = \"E0123\")]\n    |   ^^^^^\n \n error: cannot find attribute `warn_` in this scope\n-  --> $DIR/diagnostic-derive.rs:585:3\n+  --> $DIR/diagnostic-derive.rs:587:3\n    |\n LL | #[warn_(no_crate_example, code = \"E0123\")]\n    |   ^^^^^ help: a built-in attribute with a similar name exists: `warn`\n \n error: cannot find attribute `lint` in this scope\n-  --> $DIR/diagnostic-derive.rs:592:3\n+  --> $DIR/diagnostic-derive.rs:594:3\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    |   ^^^^ help: a built-in attribute with a similar name exists: `link`\n \n error: cannot find attribute `lint` in this scope\n-  --> $DIR/diagnostic-derive.rs:599:3\n+  --> $DIR/diagnostic-derive.rs:601:3\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    |   ^^^^ help: a built-in attribute with a similar name exists: `link`\n \n error: cannot find attribute `multipart_suggestion` in this scope\n-  --> $DIR/diagnostic-derive.rs:640:3\n+  --> $DIR/diagnostic-derive.rs:642:3\n    |\n LL | #[multipart_suggestion(no_crate_suggestion)]\n    |   ^^^^^^^^^^^^^^^^^^^^\n \n error: cannot find attribute `multipart_suggestion` in this scope\n-  --> $DIR/diagnostic-derive.rs:643:3\n+  --> $DIR/diagnostic-derive.rs:645:3\n    |\n LL | #[multipart_suggestion()]\n    |   ^^^^^^^^^^^^^^^^^^^^\n \n error: cannot find attribute `multipart_suggestion` in this scope\n-  --> $DIR/diagnostic-derive.rs:647:7\n+  --> $DIR/diagnostic-derive.rs:649:7\n    |\n LL |     #[multipart_suggestion(no_crate_suggestion)]\n    |       ^^^^^^^^^^^^^^^^^^^^\n \n error[E0425]: cannot find value `nonsense` in module `crate::fluent_generated`\n-  --> $DIR/diagnostic-derive.rs:70:8\n+  --> $DIR/diagnostic-derive.rs:72:8\n    |\n LL | #[diag(nonsense, code = \"E0123\")]\n    |        ^^^^^^^^ not found in `crate::fluent_generated`\n \n error[E0425]: cannot find value `__code_34` in this scope\n-  --> $DIR/diagnostic-derive.rs:802:10\n+  --> $DIR/diagnostic-derive.rs:804:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ not found in this scope\n    |\n    = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the trait bound `Hello: IntoDiagnosticArg` is not satisfied\n-  --> $DIR/diagnostic-derive.rs:339:10\n+  --> $DIR/diagnostic-derive.rs:341:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ the trait `IntoDiagnosticArg` is not implemented for `Hello`"}, {"sha": "1bfbb60015d59d6d99b0a9394122f4565ceef172", "filename": "tests/ui-fulldeps/session-diagnostic/subdiagnostic-derive.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -12,12 +12,14 @@\n #![crate_type = \"lib\"]\n \n extern crate rustc_errors;\n+extern crate rustc_fluent_macro;\n extern crate rustc_macros;\n extern crate rustc_session;\n extern crate rustc_span;\n \n use rustc_errors::{Applicability, DiagnosticMessage, SubdiagnosticMessage};\n-use rustc_macros::{fluent_messages, Subdiagnostic};\n+use rustc_fluent_macro::fluent_messages;\n+use rustc_macros::Subdiagnostic;\n use rustc_span::Span;\n \n fluent_messages! { \"./example.ftl\" }"}, {"sha": "fca4f506890bc68eb0ddb5bab6e7112298b70ecd", "filename": "tests/ui-fulldeps/session-diagnostic/subdiagnostic-derive.stderr", "status": "modified", "additions": 91, "deletions": 91, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7f9e81650dcee3e2d5ad1973a71da644a2eff93/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr?ref=d7f9e81650dcee3e2d5ad1973a71da644a2eff93", "patch": "@@ -1,5 +1,5 @@\n error: label without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:50:1\n+  --> $DIR/subdiagnostic-derive.rs:52:1\n    |\n LL | / #[label(no_crate_example)]\n LL | |\n@@ -9,133 +9,133 @@ LL | | }\n    | |_^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:57:1\n+  --> $DIR/subdiagnostic-derive.rs:59:1\n    |\n LL | #[label]\n    | ^^^^^^^^\n \n error: `#[foo]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:66:1\n+  --> $DIR/subdiagnostic-derive.rs:68:1\n    |\n LL | #[foo]\n    | ^^^^^^\n \n error: `#[label = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:76:1\n+  --> $DIR/subdiagnostic-derive.rs:78:1\n    |\n LL | #[label = \"...\"]\n    | ^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:85:9\n+  --> $DIR/subdiagnostic-derive.rs:87:9\n    |\n LL | #[label(bug = \"...\")]\n    |         ^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:85:1\n+  --> $DIR/subdiagnostic-derive.rs:87:1\n    |\n LL | #[label(bug = \"...\")]\n    | ^^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected literal in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:95:9\n+  --> $DIR/subdiagnostic-derive.rs:97:9\n    |\n LL | #[label(\"...\")]\n    |         ^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:104:9\n+  --> $DIR/subdiagnostic-derive.rs:106:9\n    |\n LL | #[label(slug = 4)]\n    |         ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:104:1\n+  --> $DIR/subdiagnostic-derive.rs:106:1\n    |\n LL | #[label(slug = 4)]\n    | ^^^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:114:9\n+  --> $DIR/subdiagnostic-derive.rs:116:9\n    |\n LL | #[label(slug(\"...\"))]\n    |         ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:114:1\n+  --> $DIR/subdiagnostic-derive.rs:116:1\n    |\n LL | #[label(slug(\"...\"))]\n    | ^^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:134:9\n+  --> $DIR/subdiagnostic-derive.rs:136:9\n    |\n LL | #[label()]\n    |         ^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:143:27\n+  --> $DIR/subdiagnostic-derive.rs:145:27\n    |\n LL | #[label(no_crate_example, code = \"...\")]\n    |                           ^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:152:27\n+  --> $DIR/subdiagnostic-derive.rs:154:27\n    |\n LL | #[label(no_crate_example, applicability = \"machine-applicable\")]\n    |                           ^^^^^^^^^^^^^\n \n error: unsupported type attribute for subdiagnostic enum\n-  --> $DIR/subdiagnostic-derive.rs:161:1\n+  --> $DIR/subdiagnostic-derive.rs:163:1\n    |\n LL | #[foo]\n    | ^^^^^^\n \n error: `#[bar]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:175:5\n+  --> $DIR/subdiagnostic-derive.rs:177:5\n    |\n LL |     #[bar]\n    |     ^^^^^^\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:187:5\n+  --> $DIR/subdiagnostic-derive.rs:189:5\n    |\n LL |     #[bar = \"...\"]\n    |     ^^^^^^^^^^^^^^\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:199:5\n+  --> $DIR/subdiagnostic-derive.rs:201:5\n    |\n LL |     #[bar = 4]\n    |     ^^^^^^^^^^\n \n error: `#[bar(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:211:5\n+  --> $DIR/subdiagnostic-derive.rs:213:5\n    |\n LL |     #[bar(\"...\")]\n    |     ^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:223:13\n+  --> $DIR/subdiagnostic-derive.rs:225:13\n    |\n LL |     #[label(code = \"...\")]\n    |             ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:223:5\n+  --> $DIR/subdiagnostic-derive.rs:225:5\n    |\n LL |     #[label(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/subdiagnostic-derive.rs:252:5\n+  --> $DIR/subdiagnostic-derive.rs:254:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: label without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:249:1\n+  --> $DIR/subdiagnostic-derive.rs:251:1\n    |\n LL | / #[label(no_crate_example)]\n LL | |\n@@ -147,35 +147,35 @@ LL | | }\n    | |_^\n \n error: `#[applicability]` is only valid on suggestions\n-  --> $DIR/subdiagnostic-derive.rs:262:5\n+  --> $DIR/subdiagnostic-derive.rs:264:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: `#[bar]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:272:5\n+  --> $DIR/subdiagnostic-derive.rs:274:5\n    |\n LL |     #[bar]\n    |     ^^^^^^\n    |\n    = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:283:5\n+  --> $DIR/subdiagnostic-derive.rs:285:5\n    |\n LL |     #[bar = \"...\"]\n    |     ^^^^^^^^^^^^^^\n \n error: `#[bar(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:294:5\n+  --> $DIR/subdiagnostic-derive.rs:296:5\n    |\n LL |     #[bar(\"...\")]\n    |     ^^^^^^^^^^^^^\n    |\n    = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes\n \n error: unexpected unsupported untagged union\n-  --> $DIR/subdiagnostic-derive.rs:310:1\n+  --> $DIR/subdiagnostic-derive.rs:312:1\n    |\n LL | / union AC {\n LL | |\n@@ -185,73 +185,73 @@ LL | | }\n    | |_^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/subdiagnostic-derive.rs:325:44\n+  --> $DIR/subdiagnostic-derive.rs:327:44\n    |\n LL | #[label(no_crate_example, no_crate::example)]\n    |                                            ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:338:5\n+  --> $DIR/subdiagnostic-derive.rs:340:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:335:5\n+  --> $DIR/subdiagnostic-derive.rs:337:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: subdiagnostic kind not specified\n-  --> $DIR/subdiagnostic-derive.rs:344:8\n+  --> $DIR/subdiagnostic-derive.rs:346:8\n    |\n LL | struct AG {\n    |        ^^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:381:46\n+  --> $DIR/subdiagnostic-derive.rs:383:46\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", code = \"...\")]\n    |                                              ^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:381:32\n+  --> $DIR/subdiagnostic-derive.rs:383:32\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", code = \"...\")]\n    |                                ^^^^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:399:5\n+  --> $DIR/subdiagnostic-derive.rs:401:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:396:5\n+  --> $DIR/subdiagnostic-derive.rs:398:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: the `#[applicability]` attribute can only be applied to fields of type `Applicability`\n-  --> $DIR/subdiagnostic-derive.rs:409:5\n+  --> $DIR/subdiagnostic-derive.rs:411:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:422:1\n+  --> $DIR/subdiagnostic-derive.rs:424:1\n    |\n LL | #[suggestion(no_crate_example)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: invalid applicability\n-  --> $DIR/subdiagnostic-derive.rs:432:62\n+  --> $DIR/subdiagnostic-derive.rs:434:62\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", applicability = \"foo\")]\n    |                                                              ^^^^^\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:450:1\n+  --> $DIR/subdiagnostic-derive.rs:452:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"...\")]\n LL | |\n@@ -261,41 +261,41 @@ LL | | }\n    | |_^\n \n error: unsupported type attribute for subdiagnostic enum\n-  --> $DIR/subdiagnostic-derive.rs:464:1\n+  --> $DIR/subdiagnostic-derive.rs:466:1\n    |\n LL | #[label]\n    | ^^^^^^^^\n \n error: `var` doesn't refer to a field on this type\n-  --> $DIR/subdiagnostic-derive.rs:484:39\n+  --> $DIR/subdiagnostic-derive.rs:486:39\n    |\n LL | #[suggestion(no_crate_example, code = \"{var}\", applicability = \"machine-applicable\")]\n    |                                       ^^^^^^^\n \n error: `var` doesn't refer to a field on this type\n-  --> $DIR/subdiagnostic-derive.rs:503:43\n+  --> $DIR/subdiagnostic-derive.rs:505:43\n    |\n LL |     #[suggestion(no_crate_example, code = \"{var}\", applicability = \"machine-applicable\")]\n    |                                           ^^^^^^^\n \n error: `#[suggestion_part]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:526:5\n+  --> $DIR/subdiagnostic-derive.rs:528:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[suggestion_part(...)]` is only valid in multipart suggestions, use `#[primary_span]` instead\n \n error: `#[suggestion_part(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:529:5\n+  --> $DIR/subdiagnostic-derive.rs:531:5\n    |\n LL |     #[suggestion_part(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[suggestion_part(...)]` is only valid in multipart suggestions\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:523:1\n+  --> $DIR/subdiagnostic-derive.rs:525:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"...\")]\n LL | |\n@@ -307,15 +307,15 @@ LL | | }\n    | |_^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:538:42\n+  --> $DIR/subdiagnostic-derive.rs:540:42\n    |\n LL | #[multipart_suggestion(no_crate_example, code = \"...\", applicability = \"machine-applicable\")]\n    |                                          ^^^^\n    |\n    = help: only `style` and `applicability` are valid nested attributes\n \n error: multipart suggestion without any `#[suggestion_part(...)]` fields\n-  --> $DIR/subdiagnostic-derive.rs:538:1\n+  --> $DIR/subdiagnostic-derive.rs:540:1\n    |\n LL | / #[multipart_suggestion(no_crate_example, code = \"...\", applicability = \"machine-applicable\")]\n LL | |\n@@ -326,27 +326,27 @@ LL | | }\n    | |_^\n \n error: `#[suggestion_part(...)]` attribute without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:548:5\n+  --> $DIR/subdiagnostic-derive.rs:550:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:556:23\n+  --> $DIR/subdiagnostic-derive.rs:558:23\n    |\n LL |     #[suggestion_part()]\n    |                       ^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:565:5\n+  --> $DIR/subdiagnostic-derive.rs:567:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: multipart suggestions use one or more `#[suggestion_part]`s rather than one `#[primary_span]`\n \n error: multipart suggestion without any `#[suggestion_part(...)]` fields\n-  --> $DIR/subdiagnostic-derive.rs:562:1\n+  --> $DIR/subdiagnostic-derive.rs:564:1\n    |\n LL | / #[multipart_suggestion(no_crate_example)]\n LL | |\n@@ -358,169 +358,169 @@ LL | | }\n    | |_^\n \n error: `#[suggestion_part(...)]` attribute without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:573:5\n+  --> $DIR/subdiagnostic-derive.rs:575:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: `code` is the only valid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:579:23\n+  --> $DIR/subdiagnostic-derive.rs:581:23\n    |\n LL |     #[suggestion_part(foo = \"bar\")]\n    |                       ^^^\n \n error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/subdiagnostic-derive.rs:583:5\n+  --> $DIR/subdiagnostic-derive.rs:585:5\n    |\n LL |     #[suggestion_part(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/subdiagnostic-derive.rs:586:5\n+  --> $DIR/subdiagnostic-derive.rs:588:5\n    |\n LL |     #[suggestion_part()]\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:576:23\n+  --> $DIR/subdiagnostic-derive.rs:578:23\n    |\n LL |     #[suggestion_part()]\n    |                       ^\n \n error: expected `,`\n-  --> $DIR/subdiagnostic-derive.rs:579:27\n+  --> $DIR/subdiagnostic-derive.rs:581:27\n    |\n LL |     #[suggestion_part(foo = \"bar\")]\n    |                           ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:594:37\n+  --> $DIR/subdiagnostic-derive.rs:596:37\n    |\n LL |     #[suggestion_part(code = \"...\", code = \",,,\")]\n    |                                     ^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:594:23\n+  --> $DIR/subdiagnostic-derive.rs:596:23\n    |\n LL |     #[suggestion_part(code = \"...\", code = \",,,\")]\n    |                       ^^^^\n \n error: `#[applicability]` has no effect if all `#[suggestion]`/`#[multipart_suggestion]` attributes have a static `applicability = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:623:5\n+  --> $DIR/subdiagnostic-derive.rs:625:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:671:34\n+  --> $DIR/subdiagnostic-derive.rs:673:34\n    |\n LL |     #[suggestion_part(code(\"foo\"))]\n    |                                  ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:671:28\n+  --> $DIR/subdiagnostic-derive.rs:673:28\n    |\n LL |     #[suggestion_part(code(\"foo\"))]\n    |                            ^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:681:41\n+  --> $DIR/subdiagnostic-derive.rs:683:41\n    |\n LL |     #[suggestion_part(code(\"foo\", \"bar\"))]\n    |                                         ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:681:28\n+  --> $DIR/subdiagnostic-derive.rs:683:28\n    |\n LL |     #[suggestion_part(code(\"foo\", \"bar\"))]\n    |                            ^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:691:30\n+  --> $DIR/subdiagnostic-derive.rs:693:30\n    |\n LL |     #[suggestion_part(code(3))]\n    |                              ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:691:28\n+  --> $DIR/subdiagnostic-derive.rs:693:28\n    |\n LL |     #[suggestion_part(code(3))]\n    |                            ^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:701:29\n+  --> $DIR/subdiagnostic-derive.rs:703:29\n    |\n LL |     #[suggestion_part(code())]\n    |                             ^\n \n error: expected string literal\n-  --> $DIR/subdiagnostic-derive.rs:713:30\n+  --> $DIR/subdiagnostic-derive.rs:715:30\n    |\n LL |     #[suggestion_part(code = 3)]\n    |                              ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:755:1\n+  --> $DIR/subdiagnostic-derive.rs:757:1\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"hidden\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:755:1\n+  --> $DIR/subdiagnostic-derive.rs:757:1\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"hidden\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `#[suggestion_hidden(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:764:1\n+  --> $DIR/subdiagnostic-derive.rs:766:1\n    |\n LL | #[suggestion_hidden(no_crate_example, code = \"\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Use `#[suggestion(..., style = \"hidden\")]` instead\n \n error: `#[suggestion_hidden(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:772:1\n+  --> $DIR/subdiagnostic-derive.rs:774:1\n    |\n LL | #[suggestion_hidden(no_crate_example, code = \"\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Use `#[suggestion(..., style = \"hidden\")]` instead\n \n error: invalid suggestion style\n-  --> $DIR/subdiagnostic-derive.rs:780:51\n+  --> $DIR/subdiagnostic-derive.rs:782:51\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"foo\")]\n    |                                                   ^^^^^\n    |\n    = help: valid styles are `normal`, `short`, `hidden`, `verbose` and `tool-only`\n \n error: expected `= \"xxx\"`\n-  --> $DIR/subdiagnostic-derive.rs:788:49\n+  --> $DIR/subdiagnostic-derive.rs:790:49\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = 42)]\n    |                                                 ^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/subdiagnostic-derive.rs:796:48\n+  --> $DIR/subdiagnostic-derive.rs:798:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style)]\n    |                                                ^\n \n error: expected `= \"xxx\"`\n-  --> $DIR/subdiagnostic-derive.rs:804:48\n+  --> $DIR/subdiagnostic-derive.rs:806:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style(\"foo\"))]\n    |                                                ^\n \n error: expected `,`\n-  --> $DIR/subdiagnostic-derive.rs:804:48\n+  --> $DIR/subdiagnostic-derive.rs:806:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style(\"foo\"))]\n    |                                                ^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:816:5\n+  --> $DIR/subdiagnostic-derive.rs:818:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n@@ -529,7 +529,7 @@ LL |     #[primary_span]\n    = help: to create a suggestion with multiple spans, use `#[multipart_suggestion]` instead\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:813:1\n+  --> $DIR/subdiagnostic-derive.rs:815:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"\")]\n LL | |\n@@ -541,67 +541,67 @@ LL | | }\n    | |_^\n \n error: cannot find attribute `foo` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:66:3\n+  --> $DIR/subdiagnostic-derive.rs:68:3\n    |\n LL | #[foo]\n    |   ^^^\n \n error: cannot find attribute `foo` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:161:3\n+  --> $DIR/subdiagnostic-derive.rs:163:3\n    |\n LL | #[foo]\n    |   ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:175:7\n+  --> $DIR/subdiagnostic-derive.rs:177:7\n    |\n LL |     #[bar]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:187:7\n+  --> $DIR/subdiagnostic-derive.rs:189:7\n    |\n LL |     #[bar = \"...\"]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:199:7\n+  --> $DIR/subdiagnostic-derive.rs:201:7\n    |\n LL |     #[bar = 4]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:211:7\n+  --> $DIR/subdiagnostic-derive.rs:213:7\n    |\n LL |     #[bar(\"...\")]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:272:7\n+  --> $DIR/subdiagnostic-derive.rs:274:7\n    |\n LL |     #[bar]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:283:7\n+  --> $DIR/subdiagnostic-derive.rs:285:7\n    |\n LL |     #[bar = \"...\"]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:294:7\n+  --> $DIR/subdiagnostic-derive.rs:296:7\n    |\n LL |     #[bar(\"...\")]\n    |       ^^^\n \n error[E0425]: cannot find value `slug` in module `crate::fluent_generated`\n-  --> $DIR/subdiagnostic-derive.rs:124:9\n+  --> $DIR/subdiagnostic-derive.rs:126:9\n    |\n LL | #[label(slug)]\n    |         ^^^^ not found in `crate::fluent_generated`\n \n error[E0425]: cannot find value `__code_29` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:707:10\n+  --> $DIR/subdiagnostic-derive.rs:709:10\n    |\n LL | #[derive(Subdiagnostic)]\n    |          ^^^^^^^^^^^^^ not found in this scope"}]}