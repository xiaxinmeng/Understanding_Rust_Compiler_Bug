{"sha": "70e3277bf960be55c529fcfaf4beb713620dd19d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZTMyNzdiZjk2MGJlNTVjNTI5ZmNmYWY0YmViNzEzNjIwZGQxOWQ=", "commit": {"author": {"name": "Kevin Yap", "email": "me@kevinyap.ca", "date": "2015-10-24T04:30:57Z"}, "committer": {"name": "Kevin Yap", "email": "me@kevinyap.ca", "date": "2015-10-24T23:00:22Z"}, "message": "Compare float literals to stringified constants\n\n- Convert constants to strings and compare directly with float literal.\n- Return immediately after positive match for constant.\n- Fix value of `my_log10_e` in `approx_const` tests.", "tree": {"sha": "abce81e15e173ebef083ee2a7fb2226726339566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abce81e15e173ebef083ee2a7fb2226726339566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70e3277bf960be55c529fcfaf4beb713620dd19d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70e3277bf960be55c529fcfaf4beb713620dd19d", "html_url": "https://github.com/rust-lang/rust/commit/70e3277bf960be55c529fcfaf4beb713620dd19d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70e3277bf960be55c529fcfaf4beb713620dd19d/comments", "author": {"login": "iKevinY", "id": 2434728, "node_id": "MDQ6VXNlcjI0MzQ3Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2434728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iKevinY", "html_url": "https://github.com/iKevinY", "followers_url": "https://api.github.com/users/iKevinY/followers", "following_url": "https://api.github.com/users/iKevinY/following{/other_user}", "gists_url": "https://api.github.com/users/iKevinY/gists{/gist_id}", "starred_url": "https://api.github.com/users/iKevinY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iKevinY/subscriptions", "organizations_url": "https://api.github.com/users/iKevinY/orgs", "repos_url": "https://api.github.com/users/iKevinY/repos", "events_url": "https://api.github.com/users/iKevinY/events{/privacy}", "received_events_url": "https://api.github.com/users/iKevinY/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iKevinY", "id": 2434728, "node_id": "MDQ6VXNlcjI0MzQ3Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2434728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iKevinY", "html_url": "https://github.com/iKevinY", "followers_url": "https://api.github.com/users/iKevinY/followers", "following_url": "https://api.github.com/users/iKevinY/following{/other_user}", "gists_url": "https://api.github.com/users/iKevinY/gists{/gist_id}", "starred_url": "https://api.github.com/users/iKevinY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iKevinY/subscriptions", "organizations_url": "https://api.github.com/users/iKevinY/orgs", "repos_url": "https://api.github.com/users/iKevinY/repos", "events_url": "https://api.github.com/users/iKevinY/events{/privacy}", "received_events_url": "https://api.github.com/users/iKevinY/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c3a947b5e9a6d79db380ed5cda075b62f0f875a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c3a947b5e9a6d79db380ed5cda075b62f0f875a", "html_url": "https://github.com/rust-lang/rust/commit/8c3a947b5e9a6d79db380ed5cda075b62f0f875a"}], "stats": {"total": 73, "additions": 46, "deletions": 27}, "files": [{"sha": "89cb5204a8c3cf6cc4522bf21afc8399bfa9a380", "filename": "src/approx_const.rs", "status": "modified", "additions": 45, "deletions": 26, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/70e3277bf960be55c529fcfaf4beb713620dd19d/src%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70e3277bf960be55c529fcfaf4beb713620dd19d/src%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fapprox_const.rs?ref=70e3277bf960be55c529fcfaf4beb713620dd19d", "patch": "@@ -1,5 +1,6 @@\n use rustc::lint::*;\n use rustc_front::hir::*;\n+use std::f64::consts as f64;\n use utils::span_lint;\n use syntax::ast::Lit_::*;\n use syntax::ast::Lit;\n@@ -12,25 +13,24 @@ declare_lint! {\n      is found; suggests to use the constant\"\n }\n \n-// Tuples are of the form (name, lower_bound, upper_bound)\n-#[allow(approx_constant)]\n-const KNOWN_CONSTS : &'static [(&'static str, f64, f64)] = &[\n-    (\"E\", 2.7101, 2.7200),\n-    (\"FRAC_1_PI\", 0.31829, 0.31840),\n-    (\"FRAC_1_SQRT_2\", 0.7071, 0.7072),\n-    (\"FRAC_2_PI\", 0.6366, 0.6370),\n-    (\"FRAC_2_SQRT_PI\", 1.1283, 1.1284),\n-    (\"FRAC_PI_2\", 1.5707, 1.5708),\n-    (\"FRAC_PI_3\", 1.0471, 1.0472),\n-    (\"FRAC_PI_4\", 0.7853, 0.7854),\n-    (\"FRAC_PI_6\", 0.5235, 0.5236),\n-    (\"FRAC_PI_8\", 0.3926, 0.3927),\n-    (\"LN_10\", 2.302, 2.303),\n-    (\"LN_2\", 0.6931, 0.6932),\n-    (\"LOG10_E\", 0.4342, 0.4343),\n-    (\"LOG2_E\", 1.4426, 1.4427),\n-    (\"PI\", 3.140, 3.142),\n-    (\"SQRT_2\", 1.4142, 1.4143),\n+// Tuples are of the form (constant, name, min_digits)\n+const KNOWN_CONSTS : &'static [(f64, &'static str, usize)] = &[\n+    (f64::E, \"E\", 4),\n+    (f64::FRAC_1_PI, \"FRAC_1_PI\", 4),\n+    (f64::FRAC_1_SQRT_2, \"FRAC_1_SQRT_2\", 5),\n+    (f64::FRAC_2_PI, \"FRAC_2_PI\", 5),\n+    (f64::FRAC_2_SQRT_PI, \"FRAC_2_SQRT_PI\", 5),\n+    (f64::FRAC_PI_2, \"FRAC_PI_2\", 5),\n+    (f64::FRAC_PI_3, \"FRAC_PI_3\", 5),\n+    (f64::FRAC_PI_4, \"FRAC_PI_4\", 5),\n+    (f64::FRAC_PI_6, \"FRAC_PI_6\", 5),\n+    (f64::FRAC_PI_8, \"FRAC_PI_8\", 5),\n+    (f64::LN_10, \"LN_10\", 5),\n+    (f64::LN_2, \"LN_2\", 5),\n+    (f64::LOG10_E, \"LOG10_E\", 5),\n+    (f64::LOG2_E, \"LOG2_E\", 5),\n+    (f64::PI, \"PI\", 3),\n+    (f64::SQRT_2, \"SQRT_2\", 5),\n ];\n \n #[derive(Copy,Clone)]\n@@ -52,22 +52,41 @@ impl LateLintPass for ApproxConstant {\n \n fn check_lit(cx: &LateContext, lit: &Lit, e: &Expr) {\n     match lit.node {\n-        LitFloat(ref str, TyF32) => check_known_consts(cx, e, str, \"f32\"),\n-        LitFloat(ref str, TyF64) => check_known_consts(cx, e, str, \"f64\"),\n-        LitFloatUnsuffixed(ref str) =>\n-            check_known_consts(cx, e, str, \"f{32, 64}\"),\n+        LitFloat(ref s, TyF32) => check_known_consts(cx, e, s, \"f32\"),\n+        LitFloat(ref s, TyF64) => check_known_consts(cx, e, s, \"f64\"),\n+        LitFloatUnsuffixed(ref s) =>\n+            check_known_consts(cx, e, s, \"f{32, 64}\"),\n         _ => ()\n     }\n }\n \n fn check_known_consts(cx: &LateContext, e: &Expr, s: &str, module: &str) {\n-    if let Ok(value) = s.parse::<f64>() {\n-        for &(name, lower_bound, upper_bound) in KNOWN_CONSTS {\n-            if (value >= lower_bound) && (value < upper_bound) {\n+    if let Ok(_) = s.parse::<f64>() {\n+        for &(constant, name, min_digits) in KNOWN_CONSTS {\n+            if is_approx_const(constant, s, min_digits) {\n                 span_lint(cx, APPROX_CONSTANT, e.span, &format!(\n                     \"approximate value of `{}::{}` found. \\\n                     Consider using it directly\", module, &name));\n+                return;\n             }\n         }\n     }\n }\n+\n+/// Returns false if the number of significant figures in `value` are\n+/// less than `min_digits`; otherwise, returns true if `value` is equal\n+/// to `constant`, rounded to the number of digits present in `value`.\n+fn is_approx_const(constant: f64, value: &str, min_digits: usize) -> bool {\n+    if value.len() <= min_digits {\n+        false\n+    } else {\n+        let round_const = format!(\"{:.*}\", value.len() - 2, constant);\n+\n+        let mut trunc_const = constant.to_string();\n+        if trunc_const.len() > value.len() {\n+            trunc_const.truncate(value.len());\n+        }\n+\n+        (value == round_const) || (value == trunc_const)\n+    }\n+}"}, {"sha": "148746bfa94b0fbb12afbda7fbeef93194ab2867", "filename": "tests/compile-fail/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70e3277bf960be55c529fcfaf4beb713620dd19d/tests%2Fcompile-fail%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70e3277bf960be55c529fcfaf4beb713620dd19d/tests%2Fcompile-fail%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fapprox_const.rs?ref=70e3277bf960be55c529fcfaf4beb713620dd19d", "patch": "@@ -42,7 +42,7 @@ fn main() {\n     let my_ln_2 = 0.6931471805599453; //~ERROR approximate value of `f{32, 64}::LN_2` found\n     let no_ln_2 = 0.693;\n \n-    let my_log10_e = 0.43429448190325176; //~ERROR approximate value of `f{32, 64}::LOG10_E` found\n+    let my_log10_e = 0.43429448190325182; //~ERROR approximate value of `f{32, 64}::LOG10_E` found\n     let no_log10_e = 0.434;\n \n     let my_log2_e = 1.4426950408889634; //~ERROR approximate value of `f{32, 64}::LOG2_E` found"}]}