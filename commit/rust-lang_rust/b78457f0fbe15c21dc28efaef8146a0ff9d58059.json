{"sha": "b78457f0fbe15c21dc28efaef8146a0ff9d58059", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ODQ1N2YwZmJlMTVjMjFkYzI4ZWZhZWY4MTQ2YTBmZjlkNTgwNTk=", "commit": {"author": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2018-06-02T11:57:37Z"}, "committer": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2018-06-02T11:57:37Z"}, "message": "Stabilize unit tests with non-`()` return type", "tree": {"sha": "17894e31c955fd76742a5a6c54aca7580da1b49a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17894e31c955fd76742a5a6c54aca7580da1b49a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b78457f0fbe15c21dc28efaef8146a0ff9d58059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b78457f0fbe15c21dc28efaef8146a0ff9d58059", "html_url": "https://github.com/rust-lang/rust/commit/b78457f0fbe15c21dc28efaef8146a0ff9d58059", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b78457f0fbe15c21dc28efaef8146a0ff9d58059/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2954cb511922173b714aa930f6bd1721d40fa02d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2954cb511922173b714aa930f6bd1721d40fa02d", "html_url": "https://github.com/rust-lang/rust/commit/2954cb511922173b714aa930f6bd1721d40fa02d"}], "stats": {"total": 70, "additions": 10, "deletions": 60}, "files": [{"sha": "ecda2b077e1f9e50879e26fbfbcb08d9f25cb65e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=b78457f0fbe15c21dc28efaef8146a0ff9d58059", "patch": "@@ -398,9 +398,6 @@ declare_features! (\n     // `foo.rs` as an alternative to `foo/mod.rs`\n     (active, non_modrs_mods, \"1.24.0\", Some(44660), Some(Edition::Edition2018)),\n \n-    // Termination trait in tests (RFC 1937)\n-    (active, termination_trait_test, \"1.24.0\", Some(48854), Some(Edition::Edition2018)),\n-\n     // `extern` in paths\n     (active, extern_in_paths, \"1.23.0\", Some(44660), None),\n \n@@ -475,6 +472,9 @@ declare_features! (\n \n     // 'a: { break 'a; }\n     (active, label_break_value, \"1.28.0\", Some(48594), None),\n+\n+    // Termination trait in tests (RFC 1937)\n+    (accepted, termination_trait_test, \"1.28.0\", Some(48854), Some(Edition::Edition2018)),\n );\n \n declare_features! ("}, {"sha": "5506f408cd269b4be82899ae958be7189c318bd8", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 7, "deletions": 31, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=b78457f0fbe15c21dc28efaef8146a0ff9d58059", "patch": "@@ -351,15 +351,15 @@ fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n                     return No(BadTestSignature::NoArgumentsAllowed);\n                 }\n \n-                match (has_output, cx.features.termination_trait_test, has_should_panic_attr) {\n-                    (true, true, true) => No(BadTestSignature::ShouldPanicOnlyWithNoArgs),\n-                    (true, true, false) => if generics.is_parameterized() {\n+                match (has_output, has_should_panic_attr) {\n+                    (true, true) => No(BadTestSignature::ShouldPanicOnlyWithNoArgs),\n+                    (true, false) => if generics.is_parameterized() {\n                         No(BadTestSignature::WrongTypeSignature)\n                     } else {\n                         Yes\n                     },\n-                    (true, false, _) => No(BadTestSignature::WrongTypeSignature),\n-                    (false, _, _) => Yes\n+                    (true, _) => No(BadTestSignature::WrongTypeSignature),\n+                    (false, _) => Yes\n                 }\n             }\n             _ => No(BadTestSignature::NotEvenAFunction),\n@@ -398,28 +398,9 @@ fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     fn has_bench_signature(cx: &TestCtxt, i: &ast::Item) -> bool {\n         match i.node {\n             ast::ItemKind::Fn(ref decl, _, _, _, ref generics, _) => {\n-                let input_cnt = decl.inputs.len();\n-\n-                // If the termination trait is active, the compiler will check that the output\n-                // type implements the `Termination` trait as `libtest` enforces that.\n-                let output_matches = if cx.features.termination_trait_test {\n-                    true\n-                } else {\n-                    let no_output = match decl.output {\n-                        ast::FunctionRetTy::Default(..) => true,\n-                        ast::FunctionRetTy::Ty(ref t) if t.node == ast::TyKind::Tup(vec![]) => true,\n-                        _ => false\n-                    };\n-                    let tparm_cnt = generics.params.iter()\n-                        .filter(|param| param.is_type_param())\n-                        .count();\n-\n-                    no_output && tparm_cnt == 0\n-                };\n-\n                 // NB: inadequate check, but we're running\n                 // well before resolve, can't get too deep.\n-                input_cnt == 1 && output_matches\n+                decl.inputs.len() == 1\n             }\n             _ => false\n         }\n@@ -430,13 +411,8 @@ fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     if has_bench_attr && !has_bench_signature {\n         let diag = cx.span_diagnostic;\n \n-        if cx.features.termination_trait_test {\n-            diag.span_err(i.span, \"functions used as benches must have signature \\\n+        diag.span_err(i.span, \"functions used as benches must have signature \\\n                                    `fn(&mut Bencher) -> impl Termination`\");\n-        } else {\n-            diag.span_err(i.span, \"functions used as benches must have signature \\\n-                                   `fn(&mut Bencher) -> ()`\");\n-        }\n     }\n \n     has_bench_attr && has_bench_signature"}, {"sha": "4af7e94671627c67e216ebff9e5c1620ad31fded", "filename": "src/test/compile-fail/feature-gate-termination_trait_test.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2954cb511922173b714aa930f6bd1721d40fa02d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2954cb511922173b714aa930f6bd1721d40fa02d/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-termination_trait_test.rs?ref=2954cb511922173b714aa930f6bd1721d40fa02d", "patch": "@@ -1,22 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags: --test\n-\n-fn main() {}\n-\n-#[cfg(test)]\n-mod tests {\n-    #[test]\n-    fn it_works() -> Result<(), ()> {\n-    //~^ ERROR functions used as tests must have signature fn() -> ()\n-        Ok(())\n-    }\n-}"}, {"sha": "a0b2784214ae95e0fcbb12523f62fdd53eadf78d", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-in-test-should-panic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test-should-panic.rs?ref=b78457f0fbe15c21dc28efaef8146a0ff9d58059", "patch": "@@ -10,7 +10,6 @@\n \n // compile-flags: --test\n \n-#![feature(termination_trait_test)]\n #![feature(test)]\n \n extern crate test;"}, {"sha": "0561b12221d1a535149f260261224948b99e64c9", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-in-test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs?ref=b78457f0fbe15c21dc28efaef8146a0ff9d58059", "patch": "@@ -11,7 +11,6 @@\n // compile-flags: --test\n // run-pass\n \n-#![feature(termination_trait_test)]\n #![feature(test)]\n \n extern crate test;"}, {"sha": "6153d840c8a7dc633c4125233cbb5a358c40a602", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78457f0fbe15c21dc28efaef8146a0ff9d58059/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs?ref=b78457f0fbe15c21dc28efaef8146a0ff9d58059", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags: --test\n \n-#![feature(termination_trait_test)]\n-\n use std::num::ParseIntError;\n \n #[test]"}]}