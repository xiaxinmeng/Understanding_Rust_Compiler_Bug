{"sha": "97503e1c1e3febedcd8f528a86d1da85cf9584c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NTAzZTFjMWUzZmViZWRjZDhmNTI4YTg2ZDFkYTg1Y2Y5NTg0Yzg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-15T13:06:35Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-15T13:12:48Z"}, "message": "Rollup merge of #22256 - brson:installer-next, r=alexcrichton\n\n Highlights:\n\n* Adds an 'uninstall.sh' script to `/usr/local/lib/rustlib/uninstall.sh`, the path to which is printed during installation.\n* Components can be deselected during install, like `install.sh --without=rust-docs`.\n* Components can be listed with `install.sh --list-components`.\n* Vastly reduces spew during install (but supporting a `--verbose` option).\n\nTypicall install run looks like:\n\n```\nbrian@brianX1:~/dev/multirust\u27eb sudo ./install.sh\n[sudo] password for brian:\ninstall: creating uninstall script at /usr/local/lib/rustlib/uninstall.sh\ninstall: installing component 'rustc'\ninstall: installing component 'cargo'\ninstall: installing component 'rust-docs'\n\n    Rust is ready to roll.\n```\n\nNeeds to be merged right before corresponding PRs to cargo and rust-packaging.\n\nFixes https://github.com/rust-lang/rust/issues/21117\nFixes https://github.com/rust-lang/rust/issues/20283", "tree": {"sha": "3b221bbfe2058594b212b3a19f91ee876f98204f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b221bbfe2058594b212b3a19f91ee876f98204f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97503e1c1e3febedcd8f528a86d1da85cf9584c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97503e1c1e3febedcd8f528a86d1da85cf9584c8", "html_url": "https://github.com/rust-lang/rust/commit/97503e1c1e3febedcd8f528a86d1da85cf9584c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97503e1c1e3febedcd8f528a86d1da85cf9584c8/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16b24f15bd042c4f97e1d4826d82c992c0228684", "url": "https://api.github.com/repos/rust-lang/rust/commits/16b24f15bd042c4f97e1d4826d82c992c0228684", "html_url": "https://github.com/rust-lang/rust/commit/16b24f15bd042c4f97e1d4826d82c992c0228684"}, {"sha": "9df38bf6583ff27e5184513b397955d3b169bbdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9df38bf6583ff27e5184513b397955d3b169bbdf", "html_url": "https://github.com/rust-lang/rust/commit/9df38bf6583ff27e5184513b397955d3b169bbdf"}], "stats": {"total": 42, "additions": 17, "deletions": 25}, "files": [{"sha": "9d7c939ff9de8a28aa48a28b4516c21da80b5dc5", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/97503e1c1e3febedcd8f528a86d1da85cf9584c8/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/97503e1c1e3febedcd8f528a86d1da85cf9584c8/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=97503e1c1e3febedcd8f528a86d1da85cf9584c8", "patch": "@@ -5,16 +5,10 @@ documentation.\n \n ## Quick Start\n \n-1. Download a [binary installer][installer] for your platform.\n-2. Read [The Rust Programming Language][trpl].\n-3. Enjoy!\n+Read [\"Installing Rust\"][install] from [The Book][trpl].\n \n-> ***Note:*** Windows users can read the detailed\n-> [using Rust on Windows][win-wiki] notes on the wiki.\n-\n-[installer]: http://www.rust-lang.org/install.html\n+[install]: http://doc.rust-lang.org/book/installing-rust.html\n [trpl]: http://doc.rust-lang.org/book/index.html\n-[win-wiki]: https://github.com/rust-lang/rust/wiki/Using-Rust-on-Windows\n \n ## Building from Source\n \n@@ -52,8 +46,6 @@ documentation.\n     When complete, `make install` will place several programs into\n     `/usr/local/bin`: `rustc`, the Rust compiler, and `rustdoc`, the\n     API-documentation tool.\n-3. Read [The Rust Programming Language][trpl].\n-4. Enjoy!\n \n ### Building on Windows\n \n@@ -81,7 +73,6 @@ $ pacman -S base-devel\n \n [repo]: https://github.com/rust-lang/rust\n [tarball]: https://static.rust-lang.org/dist/rustc-nightly-src.tar.gz\n-[trpl]: http://doc.rust-lang.org/book/index.html\n \n ## Notes\n "}, {"sha": "831225556f3fc8d4beade567fe09f69afff9e6a7", "filename": "mk/dist.mk", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/97503e1c1e3febedcd8f528a86d1da85cf9584c8/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/97503e1c1e3febedcd8f528a86d1da85cf9584c8/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=97503e1c1e3febedcd8f528a86d1da85cf9584c8", "patch": "@@ -109,8 +109,6 @@ distcheck-tar-src: dist-tar-src\n # Unix binary installer tarballs\n ######################################################################\n \n-NON_INSTALLED_PREFIXES=COPYRIGHT,LICENSE-APACHE,LICENSE-MIT,README.md,version\n-\n define DEF_INSTALLER\n \n $$(eval $$(call DEF_PREPARE,dir-$(1)))\n@@ -124,19 +122,23 @@ dist-install-dir-$(1): PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n dist-install-dir-$(1): PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n dist-install-dir-$(1): PREPARE_CLEAN=true\n dist-install-dir-$(1): prepare-base-dir-$(1) docs compiler-docs\n-\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)COPYRIGHT $$(PREPARE_DEST_DIR)\n-\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)LICENSE-APACHE $$(PREPARE_DEST_DIR)\n-\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)LICENSE-MIT $$(PREPARE_DEST_DIR)\n-\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)README.md $$(PREPARE_DEST_DIR)\n \t$$(Q)mkdir -p $$(PREPARE_DEST_DIR)/share/doc/rust\n \t$$(Q)$$(PREPARE_MAN_CMD) $$(S)COPYRIGHT $$(PREPARE_DEST_DIR)/share/doc/rust\n \t$$(Q)$$(PREPARE_MAN_CMD) $$(S)LICENSE-APACHE $$(PREPARE_DEST_DIR)/share/doc/rust\n \t$$(Q)$$(PREPARE_MAN_CMD) $$(S)LICENSE-MIT $$(PREPARE_DEST_DIR)/share/doc/rust\n \t$$(Q)$$(PREPARE_MAN_CMD) $$(S)README.md $$(PREPARE_DEST_DIR)/share/doc/rust\n+\n+prepare-overlay-$(1):\n+\t$$(Q)rm -Rf tmp/dist/$$(PKG_NAME)-$(1)-overlay\n+\t$$(Q)mkdir -p tmp/dist/$$(PKG_NAME)-$(1)-overlay\n+\t$$(Q)cp $$(S)COPYRIGHT tmp/dist/$$(PKG_NAME)-$(1)-overlay/\n+\t$$(Q)cp $$(S)LICENSE-APACHE tmp/dist/$$(PKG_NAME)-$(1)-overlay/\n+\t$$(Q)cp $$(S)LICENSE-MIT tmp/dist/$$(PKG_NAME)-$(1)-overlay/\n+\t$$(Q)cp $$(S)README.md tmp/dist/$$(PKG_NAME)-$(1)-overlay/\n # This tiny morsel of metadata is used by rust-packaging\n-\t$$(Q)echo \"$(CFG_VERSION)\" > $$(PREPARE_DEST_DIR)/version\n+\t$$(Q)echo \"$(CFG_VERSION)\" > tmp/dist/$$(PKG_NAME)-$(1)-overlay/version\n \n-dist/$$(PKG_NAME)-$(1).tar.gz: dist-install-dir-$(1)\n+dist/$$(PKG_NAME)-$(1).tar.gz: dist-install-dir-$(1) prepare-overlay-$(1)\n \t@$(call E, build: $$@)\n # Copy essential gcc components into installer\n ifdef CFG_WINDOWSY_$(1)\n@@ -146,13 +148,12 @@ ifdef CFG_WINDOWSY_$(1)\n endif\n \t$$(Q)$$(S)src/rust-installer/gen-installer.sh \\\n \t\t--product-name=Rust \\\n-\t\t--verify-bin=rustc \\\n \t\t--rel-manifest-dir=rustlib \\\n \t\t--success-message=Rust-is-ready-to-roll. \\\n \t\t--image-dir=tmp/dist/$$(PKG_NAME)-$(1)-image \\\n \t\t--work-dir=tmp/dist \\\n \t\t--output-dir=dist \\\n-\t\t--non-installed-prefixes=$$(NON_INSTALLED_PREFIXES) \\\n+\t\t--non-installed-overlay=tmp/dist/$$(PKG_NAME)-$(1)-overlay \\\n \t\t--package-name=$$(PKG_NAME)-$(1) \\\n \t\t--component-name=rustc \\\n \t\t--legacy-manifest-dirs=rustlib,cargo"}, {"sha": "5bc33d0a232eab1d41ecee093f5ce6cb4d75a834", "filename": "src/doc/trpl/installing-rust.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97503e1c1e3febedcd8f528a86d1da85cf9584c8/src%2Fdoc%2Ftrpl%2Finstalling-rust.md", "raw_url": "https://github.com/rust-lang/rust/raw/97503e1c1e3febedcd8f528a86d1da85cf9584c8/src%2Fdoc%2Ftrpl%2Finstalling-rust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Finstalling-rust.md?ref=97503e1c1e3febedcd8f528a86d1da85cf9584c8", "patch": "@@ -24,11 +24,11 @@ installer](https://static.rust-lang.org/dist/rust-nightly-x86_64-pc-windows-gnu.\n and run it.\n \n If you decide you don't want Rust anymore, we'll be a bit sad, but that's okay.\n-Not every programming language is great for everyone. Just pass an argument to\n-the script:\n+Not every programming language is great for everyone. Just run the uninstall\n+script:\n \n ```bash\n-$ curl -s https://static.rust-lang.org/rustup.sh | sudo sh -s -- --uninstall\n+$ sudo /usr/local/lib/rustlib/uninstall.sh\n ```\n \n If you used the Windows installer, just re-run the `.exe` and it will give you"}, {"sha": "60fd8abfcae50629a3fc664bd809238fed039617", "filename": "src/rust-installer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frust-installer?ref=97503e1c1e3febedcd8f528a86d1da85cf9584c8", "patch": "@@ -1 +1 @@\n-Subproject commit e577c97b494be2815b215e3042207d6d4b7c5516\n+Subproject commit 60fd8abfcae50629a3fc664bd809238fed039617"}]}