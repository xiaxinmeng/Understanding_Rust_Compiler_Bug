{"sha": "b209ff27f32425e0d3a6ae704669a617f2f2235a", "node_id": "C_kwDOAAsO6NoAKGIyMDlmZjI3ZjMyNDI1ZTBkM2E2YWU3MDQ2NjlhNjE3ZjJmMjIzNWE", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-11-19T12:31:51Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-11-29T16:33:51Z"}, "message": "Update trait check", "tree": {"sha": "3cf84baa52759f3491153fe7a2391a51f4fb0128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cf84baa52759f3491153fe7a2391a51f4fb0128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b209ff27f32425e0d3a6ae704669a617f2f2235a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b209ff27f32425e0d3a6ae704669a617f2f2235a", "html_url": "https://github.com/rust-lang/rust/commit/b209ff27f32425e0d3a6ae704669a617f2f2235a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b209ff27f32425e0d3a6ae704669a617f2f2235a/comments", "author": {}, "committer": {}, "parents": [{"sha": "4ced370f7c03dad99c74ceb4b86a0538b970690a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ced370f7c03dad99c74ceb4b86a0538b970690a", "html_url": "https://github.com/rust-lang/rust/commit/4ced370f7c03dad99c74ceb4b86a0538b970690a"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "4a0da9927c62df0291c0d4e5b595d9b67b0ece05", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b209ff27f32425e0d3a6ae704669a617f2f2235a/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b209ff27f32425e0d3a6ae704669a617f2f2235a/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=b209ff27f32425e0d3a6ae704669a617f2f2235a", "patch": "@@ -769,10 +769,13 @@ impl<'tcx> LateLintPass<'tcx> for MissingCopyImplementations {\n         // We shouldn't recommend implementing `Copy` on stateful things,\n         // such as iterators.\n         if let Some(iter_trait) = cx.tcx.get_diagnostic_item(sym::Iterator) {\n-            if cx.tcx.infer_ctxt().enter(|infer_ctxt| {\n-                infer_ctxt.type_implements_trait(iter_trait, ty, List::empty(), param_env)\n-                    == EvaluationResult::EvaluatedToOk\n-            }) {\n+            if cx.tcx.infer_ctxt().build().type_implements_trait(\n+                iter_trait,\n+                ty,\n+                List::empty(),\n+                param_env,\n+            ) == EvaluationResult::EvaluatedToOk\n+            {\n                 return;\n             }\n         }"}]}