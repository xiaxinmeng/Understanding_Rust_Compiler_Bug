{"sha": "996e18846dab8e5c4a2846641289f85fe99eb480", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NmUxODg0NmRhYjhlNWM0YTI4NDY2NDEyODlmODVmZTk5ZWI0ODA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-27T18:00:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-28T09:39:31Z"}, "message": "add more tags", "tree": {"sha": "3244e881a99bfa4a1e688fef16acfa53e407f590", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3244e881a99bfa4a1e688fef16acfa53e407f590"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/996e18846dab8e5c4a2846641289f85fe99eb480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/996e18846dab8e5c4a2846641289f85fe99eb480", "html_url": "https://github.com/rust-lang/rust/commit/996e18846dab8e5c4a2846641289f85fe99eb480", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/996e18846dab8e5c4a2846641289f85fe99eb480/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4741ae785257bc894cd9a61c1d5e6479074c69b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4741ae785257bc894cd9a61c1d5e6479074c69b6", "html_url": "https://github.com/rust-lang/rust/commit/4741ae785257bc894cd9a61c1d5e6479074c69b6"}], "stats": {"total": 62, "additions": 32, "deletions": 30}, "files": [{"sha": "ae2163f9f7dc19fd48497ad54e6271af369407a4", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=996e18846dab8e5c4a2846641289f85fe99eb480", "patch": "@@ -255,15 +255,15 @@ fn highlight_name(db: &RootDatabase, def: NameDefinition) -> Highlight {\n         NameDefinition::ModuleDef(def) => match def {\n             hir::ModuleDef::Module(_) => HighlightTag::Module,\n             hir::ModuleDef::Function(_) => HighlightTag::Function,\n-            hir::ModuleDef::Adt(_) => HighlightTag::Type,\n+            hir::ModuleDef::Adt(hir::Adt::Struct(_)) => HighlightTag::Struct,\n+            hir::ModuleDef::Adt(hir::Adt::Enum(_)) => HighlightTag::Enum,\n+            hir::ModuleDef::Adt(hir::Adt::Union(_)) => HighlightTag::Union,\n             hir::ModuleDef::EnumVariant(_) => HighlightTag::Constant,\n             hir::ModuleDef::Const(_) => HighlightTag::Constant,\n             hir::ModuleDef::Static(_) => HighlightTag::Constant,\n-            hir::ModuleDef::Trait(_) => HighlightTag::Type,\n-            hir::ModuleDef::TypeAlias(_) => HighlightTag::Type,\n-            hir::ModuleDef::BuiltinType(_) => {\n-                return HighlightTag::Type | HighlightModifier::Builtin\n-            }\n+            hir::ModuleDef::Trait(_) => HighlightTag::Trait,\n+            hir::ModuleDef::TypeAlias(_) => HighlightTag::TypeAlias,\n+            hir::ModuleDef::BuiltinType(_) => HighlightTag::BuiltinType,\n         },\n         NameDefinition::SelfType(_) => HighlightTag::TypeSelf,\n         NameDefinition::TypeParam(_) => HighlightTag::TypeParam,\n@@ -287,7 +287,10 @@ fn highlight_name_by_syntax(name: ast::Name) -> Highlight {\n     };\n \n     match parent.kind() {\n-        STRUCT_DEF | ENUM_DEF | TRAIT_DEF | TYPE_ALIAS_DEF => HighlightTag::Type.into(),\n+        STRUCT_DEF => HighlightTag::Struct.into(),\n+        ENUM_DEF => HighlightTag::Enum.into(),\n+        TRAIT_DEF => HighlightTag::Trait.into(),\n+        TYPE_ALIAS_DEF => HighlightTag::TypeAlias.into(),\n         TYPE_PARAM => HighlightTag::TypeParam.into(),\n         RECORD_FIELD_DEF => HighlightTag::Field.into(),\n         _ => default,"}, {"sha": "df2fc3c48f8dde5b0f6bb782225c5fd4e3feb72e", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=996e18846dab8e5c4a2846641289f85fe99eb480", "patch": "@@ -14,14 +14,20 @@ pub struct HighlightModifiers(u32);\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub enum HighlightTag {\n+    Struct,\n+    Enum,\n+    Union,\n+    Trait,\n+    TypeAlias,\n+    BuiltinType,\n+\n     Field,\n     Function,\n     Module,\n     Constant,\n     Macro,\n     Variable,\n \n-    Type,\n     TypeSelf,\n     TypeParam,\n     TypeLifetime,\n@@ -44,19 +50,24 @@ pub enum HighlightModifier {\n     Unsafe,\n     /// Used with keywords like `if` and `break`.\n     Control,\n-    Builtin,\n }\n \n impl HighlightTag {\n     fn as_str(self) -> &'static str {\n         match self {\n+            HighlightTag::Struct => \"struct\",\n+            HighlightTag::Enum => \"enum\",\n+            HighlightTag::Union => \"union\",\n+            HighlightTag::Trait => \"trait\",\n+            HighlightTag::TypeAlias => \"type_alias\",\n+            HighlightTag::BuiltinType => \"builtin_type\",\n+\n             HighlightTag::Field => \"field\",\n             HighlightTag::Function => \"function\",\n             HighlightTag::Module => \"module\",\n             HighlightTag::Constant => \"constant\",\n             HighlightTag::Macro => \"macro\",\n             HighlightTag::Variable => \"variable\",\n-            HighlightTag::Type => \"type\",\n             HighlightTag::TypeSelf => \"type.self\",\n             HighlightTag::TypeParam => \"type.param\",\n             HighlightTag::TypeLifetime => \"type.lifetime\",\n@@ -78,19 +89,14 @@ impl fmt::Display for HighlightTag {\n }\n \n impl HighlightModifier {\n-    const ALL: &'static [HighlightModifier] = &[\n-        HighlightModifier::Mutable,\n-        HighlightModifier::Unsafe,\n-        HighlightModifier::Control,\n-        HighlightModifier::Builtin,\n-    ];\n+    const ALL: &'static [HighlightModifier] =\n+        &[HighlightModifier::Mutable, HighlightModifier::Unsafe, HighlightModifier::Control];\n \n     fn as_str(self) -> &'static str {\n         match self {\n             HighlightModifier::Mutable => \"mutable\",\n             HighlightModifier::Unsafe => \"unsafe\",\n             HighlightModifier::Control => \"control\",\n-            HighlightModifier::Builtin => \"builtin\",\n         }\n     }\n "}, {"sha": "e4255e24ad83929f9a869ee086aa6912dbc72e33", "filename": "crates/rust-analyzer/src/conv.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconv.rs?ref=996e18846dab8e5c4a2846641289f85fe99eb480", "patch": "@@ -316,6 +316,12 @@ impl Conv for Highlight {\n     fn conv(self) -> Self::Output {\n         let mut mods = ModifierSet::default();\n         let type_ = match self.tag {\n+            HighlightTag::Struct\n+            | HighlightTag::Enum\n+            | HighlightTag::Union\n+            | HighlightTag::TypeAlias\n+            | HighlightTag::Trait\n+            | HighlightTag::BuiltinType => SemanticTokenType::TYPE,\n             HighlightTag::Field => SemanticTokenType::MEMBER,\n             HighlightTag::Function => SemanticTokenType::FUNCTION,\n             HighlightTag::Module => SemanticTokenType::NAMESPACE,\n@@ -326,7 +332,6 @@ impl Conv for Highlight {\n             }\n             HighlightTag::Macro => SemanticTokenType::MACRO,\n             HighlightTag::Variable => SemanticTokenType::VARIABLE,\n-            HighlightTag::Type => SemanticTokenType::TYPE,\n             HighlightTag::TypeSelf => {\n                 mods |= SemanticTokenModifier::REFERENCE;\n                 SemanticTokenType::TYPE\n@@ -350,7 +355,6 @@ impl Conv for Highlight {\n                 HighlightModifier::Mutable => MUTABLE,\n                 HighlightModifier::Unsafe => UNSAFE,\n                 HighlightModifier::Control => CONTROL,\n-                HighlightModifier::Builtin => BUILTIN,\n             };\n             mods |= modifier;\n         }"}, {"sha": "3069f305472d38969b80dc2f86024ada92223772", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/996e18846dab8e5c4a2846641289f85fe99eb480/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=996e18846dab8e5c4a2846641289f85fe99eb480", "patch": "@@ -10,7 +10,6 @@ pub(crate) const CONSTANT: SemanticTokenType = SemanticTokenType::new(\"constant\"\n pub(crate) const MUTABLE: SemanticTokenModifier = SemanticTokenModifier::new(\"mutable\");\n pub(crate) const UNSAFE: SemanticTokenModifier = SemanticTokenModifier::new(\"unsafe\");\n pub(crate) const CONTROL: SemanticTokenModifier = SemanticTokenModifier::new(\"control\");\n-pub(crate) const BUILTIN: SemanticTokenModifier = SemanticTokenModifier::new(\"builtin\");\n \n pub(crate) const SUPPORTED_TYPES: &[SemanticTokenType] = &[\n     SemanticTokenType::COMMENT,\n@@ -51,7 +50,6 @@ pub(crate) const SUPPORTED_MODIFIERS: &[SemanticTokenModifier] = &[\n     MUTABLE,\n     UNSAFE,\n     CONTROL,\n-    BUILTIN,\n ];\n \n #[derive(Default)]"}, {"sha": "fd29710ba0b34774a436d355e33cd199c6c95401", "filename": "editors/code/package.json", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/996e18846dab8e5c4a2846641289f85fe99eb480/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/996e18846dab8e5c4a2846641289f85fe99eb480/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=996e18846dab8e5c4a2846641289f85fe99eb480", "patch": "@@ -398,9 +398,6 @@\n             },\n             {\n                 \"id\": \"control\"\n-            },\n-            {\n-                \"id\": \"builtin\"\n             }\n         ],\n         \"semanticTokenStyleDefaults\": [\n@@ -433,12 +430,6 @@\n                 \"scope\": [\n                     \"keyword.other.unsafe\"\n                 ]\n-            },\n-            {\n-                \"selector\": \"type.builtin\",\n-                \"scope\": [\n-                    \"support.type.builtin\"\n-                ]\n             }\n         ]\n     }"}]}