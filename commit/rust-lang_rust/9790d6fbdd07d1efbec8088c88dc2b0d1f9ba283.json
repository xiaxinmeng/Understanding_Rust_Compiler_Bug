{"sha": "9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283", "node_id": "C_kwDOAAsO6NoAKDk3OTBkNmZiZGQwN2QxZWZiZWM4MDg4Yzg4ZGMyYjBkMWY5YmEyODM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-09T18:57:02Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-10T18:14:09Z"}, "message": "Add a couple random projection tests", "tree": {"sha": "c6c80a9ae7f59e6c855094c5f5648ca2eccb9bb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6c80a9ae7f59e6c855094c5f5648ca2eccb9bb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283", "html_url": "https://github.com/rust-lang/rust/commit/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1ac43a9b9a8250d858705b0796dfed6186e18db", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1ac43a9b9a8250d858705b0796dfed6186e18db", "html_url": "https://github.com/rust-lang/rust/commit/d1ac43a9b9a8250d858705b0796dfed6186e18db"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "bdf999ec5dd00c17c10330209ec01f599fc49b87", "filename": "tests/ui/traits/new-solver/param-candidate-doesnt-shadow-project.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283/tests%2Fui%2Ftraits%2Fnew-solver%2Fparam-candidate-doesnt-shadow-project.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283/tests%2Fui%2Ftraits%2Fnew-solver%2Fparam-candidate-doesnt-shadow-project.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fparam-candidate-doesnt-shadow-project.rs?ref=9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283", "patch": "@@ -0,0 +1,25 @@\n+// compile-flags: -Ztrait-solver=next\n+// check-pass\n+\n+trait Foo {\n+    type Assoc;\n+}\n+\n+trait Bar {}\n+\n+impl<T> Foo for T {\n+    type Assoc = i32;\n+}\n+\n+impl<T> Bar for T where T: Foo<Assoc = i32> {}\n+\n+fn require_bar<T: Bar>() {}\n+\n+fn foo<T: Foo>() {\n+    // Unlike the classic solver, `<T as Foo>::Assoc = _` will still project\n+    // down to `i32` even though there's a param-env candidate here, since we\n+    // don't assemble any param-env projection candidates for `T: Foo` alone.\n+    require_bar::<T>();\n+}\n+\n+fn main() {}"}, {"sha": "cde2059ca9b912cbf7dc49dfad20fa78293cd635", "filename": "tests/ui/traits/new-solver/two-projection-param-candidates-are-ambiguous.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283/tests%2Fui%2Ftraits%2Fnew-solver%2Ftwo-projection-param-candidates-are-ambiguous.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283/tests%2Fui%2Ftraits%2Fnew-solver%2Ftwo-projection-param-candidates-are-ambiguous.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Ftwo-projection-param-candidates-are-ambiguous.rs?ref=9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283", "patch": "@@ -0,0 +1,30 @@\n+// compile-flags: -Ztrait-solver=next\n+\n+// When we're solving `<T as Foo>::Assoc = i32`, we actually first solve\n+// `<T as Foo>::Assoc = _#1t`, then unify `_#1t` with `i32`. That goal\n+// with the inference variable is ambiguous when there are >1 param-env\n+// candidates.\n+\n+// We don't unify the RHS of a projection goal eagerly when solving, both\n+// for caching reasons and partly to make sure that we don't make the new\n+// trait solver smarter than it should be.\n+\n+// This is (as far as I can tell) a forwards-compatible decision, but if you\n+// make this test go from fail to pass, be sure you understand the implications!\n+\n+trait Foo {\n+    type Assoc;\n+}\n+\n+trait Bar {}\n+\n+impl<T> Bar for T where T: Foo<Assoc = i32> {}\n+\n+fn needs_bar<T: Bar>() {}\n+\n+fn foo<T: Foo<Assoc = i32> + Foo<Assoc = u32>>() {\n+    needs_bar::<T>();\n+    //~^ ERROR type annotations needed: cannot satisfy `T: Bar`\n+}\n+\n+fn main() {}"}, {"sha": "fa5e780ee5e8bb59fc6aad7315bd73968adcce9c", "filename": "tests/ui/traits/new-solver/two-projection-param-candidates-are-ambiguous.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283/tests%2Fui%2Ftraits%2Fnew-solver%2Ftwo-projection-param-candidates-are-ambiguous.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283/tests%2Fui%2Ftraits%2Fnew-solver%2Ftwo-projection-param-candidates-are-ambiguous.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Ftwo-projection-param-candidates-are-ambiguous.stderr?ref=9790d6fbdd07d1efbec8088c88dc2b0d1f9ba283", "patch": "@@ -0,0 +1,16 @@\n+error[E0283]: type annotations needed: cannot satisfy `T: Bar`\n+  --> $DIR/two-projection-param-candidates-are-ambiguous.rs:26:5\n+   |\n+LL |     needs_bar::<T>();\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = note: cannot satisfy `T: Bar`\n+note: required by a bound in `needs_bar`\n+  --> $DIR/two-projection-param-candidates-are-ambiguous.rs:23:17\n+   |\n+LL | fn needs_bar<T: Bar>() {}\n+   |                 ^^^ required by this bound in `needs_bar`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0283`."}]}