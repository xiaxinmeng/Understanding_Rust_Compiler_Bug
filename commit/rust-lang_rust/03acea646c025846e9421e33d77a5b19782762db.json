{"sha": "03acea646c025846e9421e33d77a5b19782762db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYWNlYTY0NmMwMjU4NDZlOTQyMWUzM2Q3N2E1YjE5NzgyNzYyZGI=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2017-07-31T17:14:16Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2017-07-31T21:19:09Z"}, "message": "Implement `RefCell::replace` and `RefCell::swap`", "tree": {"sha": "e5d3ec40c7609e0d7b927402f6083aabf24bbc15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5d3ec40c7609e0d7b927402f6083aabf24bbc15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03acea646c025846e9421e33d77a5b19782762db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03acea646c025846e9421e33d77a5b19782762db", "html_url": "https://github.com/rust-lang/rust/commit/03acea646c025846e9421e33d77a5b19782762db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03acea646c025846e9421e33d77a5b19782762db/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a6828e7f1ed3163a2797f0a111570ef130f7b6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a6828e7f1ed3163a2797f0a111570ef130f7b6b", "html_url": "https://github.com/rust-lang/rust/commit/2a6828e7f1ed3163a2797f0a111570ef130f7b6b"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "b250bf49e0c08cf0c3f90376fd2300d2674fd882", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/03acea646c025846e9421e33d77a5b19782762db/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03acea646c025846e9421e33d77a5b19782762db/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=03acea646c025846e9421e33d77a5b19782762db", "patch": "@@ -543,6 +543,59 @@ impl<T> RefCell<T> {\n         debug_assert!(self.borrow.get() == UNUSED);\n         unsafe { self.value.into_inner() }\n     }\n+\n+    /// Replaces the wrapped value with a new one, returning the old value,\n+    /// without deinitializing either one.\n+    ///\n+    /// This function corresponds to [`std::mem::replace`](../mem/fn.replace.html).\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// #![feature(refcell_replace_swap)]\n+    /// use std::cell::RefCell;\n+    /// let c = RefCell::new(5);\n+    /// let u = c.replace(6);\n+    /// assert_eq!(u, 5);\n+    /// assert_eq!(c, RefCell::new(6));\n+    /// ```\n+    ///\n+    /// # Panics\n+    ///\n+    /// This function will panic if the `RefCell` has any outstanding borrows,\n+    /// whether or not they are full mutable borrows.\n+    #[inline]\n+    #[unstable(feature = \"refcell_replace_swap\", issue=\"43570\")]\n+    pub fn replace(&self, t: T) -> T {\n+        mem::replace(&mut *self.borrow_mut(), t)\n+    }\n+\n+    /// Swaps the wrapped value of `self` with the wrapped value of `other`,\n+    /// without deinitializing either one.\n+    ///\n+    /// This function corresponds to [`std::mem::swap`](../mem/fn.swap.html).\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// #![feature(refcell_replace_swap)]\n+    /// use std::cell::RefCell;\n+    /// let c = RefCell::new(5);\n+    /// let d = RefCell::new(6);\n+    /// c.swap(&d);\n+    /// assert_eq!(c, RefCell::new(6));\n+    /// assert_eq!(d, RefCell::new(5));\n+    /// ```\n+    ///\n+    /// # Panics\n+    ///\n+    /// This function will panic if the `RefCell` has any outstanding borrows,\n+    /// whether or not they are full mutable borrows.\n+    #[inline]\n+    #[unstable(feature = \"refcell_replace_swap\", issue=\"43570\")]\n+    pub fn swap(&self, other: &Self) {\n+        mem::swap(&mut *self.borrow_mut(), &mut *other.borrow_mut())\n+    }\n }\n \n impl<T: ?Sized> RefCell<T> {"}, {"sha": "cc0ef6a6f17e04b5e7358040d0ef689cb73ea871", "filename": "src/libcore/tests/cell.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/03acea646c025846e9421e33d77a5b19782762db/src%2Flibcore%2Ftests%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03acea646c025846e9421e33d77a5b19782762db/src%2Flibcore%2Ftests%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fcell.rs?ref=03acea646c025846e9421e33d77a5b19782762db", "patch": "@@ -287,3 +287,20 @@ fn refcell_ref_coercion() {\n         assert_eq!(&*coerced, comp);\n     }\n }\n+\n+#[test]\n+#[should_panic]\n+fn refcell_swap_borrows() {\n+    let x = RefCell::new(0);\n+    let _b = x.borrow();\n+    let y = RefCell::new(1);\n+    x.swap(&y);\n+}\n+\n+#[test]\n+#[should_panic]\n+fn refcell_replace_borrows() {\n+    let x = RefCell::new(0);\n+    let _b = x.borrow();\n+    x.replace(1);\n+}"}, {"sha": "84a3be99c275f5ca2a01956c55172edddcb2579f", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03acea646c025846e9421e33d77a5b19782762db/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03acea646c025846e9421e33d77a5b19782762db/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=03acea646c025846e9421e33d77a5b19782762db", "patch": "@@ -31,6 +31,7 @@\n #![feature(ord_max_min)]\n #![feature(rand)]\n #![feature(raw)]\n+#![feature(refcell_replace_swap)]\n #![feature(sip_hash_13)]\n #![feature(slice_patterns)]\n #![feature(slice_rotate)]"}]}