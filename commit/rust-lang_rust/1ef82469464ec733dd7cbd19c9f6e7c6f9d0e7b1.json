{"sha": "1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZjgyNDY5NDY0ZWM3MzNkZDdjYmQxOWM5ZjZlN2M2ZjlkMGU3YjE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-05-14T01:01:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-05-15T01:29:14Z"}, "message": "libcollections: Remove most uses of `~str` from `libcollections`", "tree": {"sha": "83b9dd1a99bb50142eb0230e6951c29f35b9ea0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83b9dd1a99bb50142eb0230e6951c29f35b9ea0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1", "html_url": "https://github.com/rust-lang/rust/commit/1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfe021625adc0526385d776d3a7f495c437e2c7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfe021625adc0526385d776d3a7f495c437e2c7e", "html_url": "https://github.com/rust-lang/rust/commit/dfe021625adc0526385d776d3a7f495c437e2c7e"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "72eefe4f44d66d1a28ca72dd9f2e086c728debc7", "filename": "src/libcollections/lru_cache.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1/src%2Flibcollections%2Flru_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1/src%2Flibcollections%2Flru_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flru_cache.rs?ref=1ef82469464ec733dd7cbd19c9f6e7c6f9d0e7b1", "patch": "@@ -270,23 +270,23 @@ mod tests {\n \n     #[test]\n     fn test_put_update() {\n-        let mut cache: LruCache<~str, Vec<u8>> = LruCache::new(1);\n-        cache.put(\"1\".to_owned(), vec![10, 10]);\n-        cache.put(\"1\".to_owned(), vec![10, 19]);\n-        assert_opt_eq(cache.get(&\"1\".to_owned()), vec![10, 19]);\n+        let mut cache: LruCache<StrBuf, Vec<u8>> = LruCache::new(1);\n+        cache.put(\"1\".to_strbuf(), vec![10, 10]);\n+        cache.put(\"1\".to_strbuf(), vec![10, 19]);\n+        assert_opt_eq(cache.get(&\"1\".to_strbuf()), vec![10, 19]);\n         assert_eq!(cache.len(), 1);\n     }\n \n     #[test]\n     fn test_expire_lru() {\n-        let mut cache: LruCache<~str, ~str> = LruCache::new(2);\n-        cache.put(\"foo1\".to_owned(), \"bar1\".to_owned());\n-        cache.put(\"foo2\".to_owned(), \"bar2\".to_owned());\n-        cache.put(\"foo3\".to_owned(), \"bar3\".to_owned());\n-        assert!(cache.get(&\"foo1\".to_owned()).is_none());\n-        cache.put(\"foo2\".to_owned(), \"bar2update\".to_owned());\n-        cache.put(\"foo4\".to_owned(), \"bar4\".to_owned());\n-        assert!(cache.get(&\"foo3\".to_owned()).is_none());\n+        let mut cache: LruCache<StrBuf, StrBuf> = LruCache::new(2);\n+        cache.put(\"foo1\".to_strbuf(), \"bar1\".to_strbuf());\n+        cache.put(\"foo2\".to_strbuf(), \"bar2\".to_strbuf());\n+        cache.put(\"foo3\".to_strbuf(), \"bar3\".to_strbuf());\n+        assert!(cache.get(&\"foo1\".to_strbuf()).is_none());\n+        cache.put(\"foo2\".to_strbuf(), \"bar2update\".to_strbuf());\n+        cache.put(\"foo4\".to_strbuf(), \"bar4\".to_strbuf());\n+        assert!(cache.get(&\"foo3\".to_strbuf()).is_none());\n     }\n \n     #[test]"}]}