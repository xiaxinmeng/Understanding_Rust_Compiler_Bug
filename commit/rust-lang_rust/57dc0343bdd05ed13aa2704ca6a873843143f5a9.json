{"sha": "57dc0343bdd05ed13aa2704ca6a873843143f5a9", "node_id": "C_kwDOAAsO6NoAKDU3ZGMwMzQzYmRkMDVlZDEzYWEyNzA0Y2E2YTg3Mzg0MzE0M2Y1YTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-13T12:04:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-13T12:04:57Z"}, "message": "Auto merge of #7788 - flip1995:eq_if_let_sugg, r=giraffate\n\nDo not expand macros in equatable_if_let suggestion\n\nFixes #7781\n\nLet's use Hacktoberfest as a motivation to start contributing PRs myself again :)\n\nchangelog: [`equatable_if_let`]: No longer expands macros in the suggestion", "tree": {"sha": "bf0626683d57c28e7aac88f65bf1cb37356e89c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf0626683d57c28e7aac88f65bf1cb37356e89c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57dc0343bdd05ed13aa2704ca6a873843143f5a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57dc0343bdd05ed13aa2704ca6a873843143f5a9", "html_url": "https://github.com/rust-lang/rust/commit/57dc0343bdd05ed13aa2704ca6a873843143f5a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57dc0343bdd05ed13aa2704ca6a873843143f5a9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9c4a655b04e9616ded8374dc61cb9108f4ae06", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9c4a655b04e9616ded8374dc61cb9108f4ae06", "html_url": "https://github.com/rust-lang/rust/commit/3d9c4a655b04e9616ded8374dc61cb9108f4ae06"}, {"sha": "28fb591b6e681493b6ba3917146fbfe410dd45d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/28fb591b6e681493b6ba3917146fbfe410dd45d0", "html_url": "https://github.com/rust-lang/rust/commit/28fb591b6e681493b6ba3917146fbfe410dd45d0"}], "stats": {"total": 34, "additions": 29, "deletions": 5}, "files": [{"sha": "e8b1d6f6edaaaeb27b1a41daf89a9cd1e0580248", "filename": "clippy_lints/src/equatable_if_let.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57dc0343bdd05ed13aa2704ca6a873843143f5a9/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57dc0343bdd05ed13aa2704ca6a873843143f5a9/clippy_lints%2Fsrc%2Fequatable_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fequatable_if_let.rs?ref=57dc0343bdd05ed13aa2704ca6a873843143f5a9", "patch": "@@ -1,5 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::source::snippet_with_context;\n use clippy_utils::ty::implements_trait;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -77,9 +77,9 @@ impl<'tcx> LateLintPass<'tcx> for PatternEquality {\n                 let pat_str = match pat.kind {\n                     PatKind::Struct(..) => format!(\n                         \"({})\",\n-                        snippet_with_applicability(cx, pat.span, \"..\", &mut applicability),\n+                        snippet_with_context(cx, pat.span, expr.span.ctxt(), \"..\", &mut applicability).0,\n                     ),\n-                    _ => snippet_with_applicability(cx, pat.span, \"..\", &mut applicability).to_string(),\n+                    _ => snippet_with_context(cx, pat.span, expr.span.ctxt(), \"..\", &mut applicability).0.to_string(),\n                 };\n                 span_lint_and_sugg(\n                     cx,\n@@ -89,7 +89,7 @@ impl<'tcx> LateLintPass<'tcx> for PatternEquality {\n                     \"try\",\n                     format!(\n                         \"{} == {}\",\n-                        snippet_with_applicability(cx, exp.span, \"..\", &mut applicability),\n+                        snippet_with_context(cx, exp.span, expr.span.ctxt(), \"..\", &mut applicability).0,\n                         pat_str,\n                     ),\n                     applicability,"}, {"sha": "88918d9671e42f6d90037eae22fc8985ab5de651", "filename": "tests/ui/equatable_if_let.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/57dc0343bdd05ed13aa2704ca6a873843143f5a9/tests%2Fui%2Fequatable_if_let.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/57dc0343bdd05ed13aa2704ca6a873843143f5a9/tests%2Fui%2Fequatable_if_let.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fequatable_if_let.fixed?ref=57dc0343bdd05ed13aa2704ca6a873843143f5a9", "patch": "@@ -66,4 +66,13 @@ fn main() {\n     if g == NotStructuralEq::A {}\n     if let Some(NotPartialEq::A) = Some(f) {}\n     if Some(g) == Some(NotStructuralEq::A) {}\n+\n+    macro_rules! m1 {\n+        (x) => {\n+            \"abc\"\n+        };\n+    }\n+    if \"abc\" == m1!(x) {\n+        println!(\"OK\");\n+    }\n }"}, {"sha": "9a7ab75ef450f528f5ff1543f3bdd361c1881f67", "filename": "tests/ui/equatable_if_let.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/57dc0343bdd05ed13aa2704ca6a873843143f5a9/tests%2Fui%2Fequatable_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57dc0343bdd05ed13aa2704ca6a873843143f5a9/tests%2Fui%2Fequatable_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fequatable_if_let.rs?ref=57dc0343bdd05ed13aa2704ca6a873843143f5a9", "patch": "@@ -66,4 +66,13 @@ fn main() {\n     if let NotStructuralEq::A = g {}\n     if let Some(NotPartialEq::A) = Some(f) {}\n     if let Some(NotStructuralEq::A) = Some(g) {}\n+\n+    macro_rules! m1 {\n+        (x) => {\n+            \"abc\"\n+        };\n+    }\n+    if let m1!(x) = \"abc\" {\n+        println!(\"OK\");\n+    }\n }"}, {"sha": "760ff88f448f094561f008b0e29be43824306260", "filename": "tests/ui/equatable_if_let.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57dc0343bdd05ed13aa2704ca6a873843143f5a9/tests%2Fui%2Fequatable_if_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/57dc0343bdd05ed13aa2704ca6a873843143f5a9/tests%2Fui%2Fequatable_if_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fequatable_if_let.stderr?ref=57dc0343bdd05ed13aa2704ca6a873843143f5a9", "patch": "@@ -60,5 +60,11 @@ error: this pattern matching can be expressed using equality\n LL |     if let Some(NotStructuralEq::A) = Some(g) {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Some(g) == Some(NotStructuralEq::A)`\n \n-error: aborting due to 10 previous errors\n+error: this pattern matching can be expressed using equality\n+  --> $DIR/equatable_if_let.rs:75:8\n+   |\n+LL |     if let m1!(x) = \"abc\" {\n+   |        ^^^^^^^^^^^^^^^^^^ help: try: `\"abc\" == m1!(x)`\n+\n+error: aborting due to 11 previous errors\n "}]}