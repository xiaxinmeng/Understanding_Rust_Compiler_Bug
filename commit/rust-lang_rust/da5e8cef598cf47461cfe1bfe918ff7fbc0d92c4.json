{"sha": "da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNWU4Y2VmNTk4Y2Y0NzQ2MWNmZTFiZmU5MThmZjdmYmMwZDkyYzQ=", "commit": {"author": {"name": "Vinzent Steinberg", "email": "Vinzent.Steinberg@gmail.com", "date": "2014-08-21T14:02:55Z"}, "committer": {"name": "Vinzent Steinberg", "email": "Vinzent.Steinberg@gmail.com", "date": "2014-08-21T14:09:36Z"}, "message": "bitv: make sure benchmarks run long enough\n\nPreviously they were too short (less than 10 ns), so the benchmarker\ncould not resolve them meaningfully. Now they should run in the order of\n100 ns.", "tree": {"sha": "888597e9452ba068b8cd6985ae7f2ddc51f0bff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/888597e9452ba068b8cd6985ae7f2ddc51f0bff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4", "comment_count": 10, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4", "html_url": "https://github.com/rust-lang/rust/commit/da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4/comments", "author": {"login": "vks", "id": 33460, "node_id": "MDQ6VXNlcjMzNDYw", "avatar_url": "https://avatars.githubusercontent.com/u/33460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vks", "html_url": "https://github.com/vks", "followers_url": "https://api.github.com/users/vks/followers", "following_url": "https://api.github.com/users/vks/following{/other_user}", "gists_url": "https://api.github.com/users/vks/gists{/gist_id}", "starred_url": "https://api.github.com/users/vks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vks/subscriptions", "organizations_url": "https://api.github.com/users/vks/orgs", "repos_url": "https://api.github.com/users/vks/repos", "events_url": "https://api.github.com/users/vks/events{/privacy}", "received_events_url": "https://api.github.com/users/vks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vks", "id": 33460, "node_id": "MDQ6VXNlcjMzNDYw", "avatar_url": "https://avatars.githubusercontent.com/u/33460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vks", "html_url": "https://github.com/vks", "followers_url": "https://api.github.com/users/vks/followers", "following_url": "https://api.github.com/users/vks/following{/other_user}", "gists_url": "https://api.github.com/users/vks/gists{/gist_id}", "starred_url": "https://api.github.com/users/vks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vks/subscriptions", "organizations_url": "https://api.github.com/users/vks/orgs", "repos_url": "https://api.github.com/users/vks/repos", "events_url": "https://api.github.com/users/vks/events{/privacy}", "received_events_url": "https://api.github.com/users/vks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d41a4227c82178db4b29d2bcde1dab8b5fd5285", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d41a4227c82178db4b29d2bcde1dab8b5fd5285", "html_url": "https://github.com/rust-lang/rust/commit/4d41a4227c82178db4b29d2bcde1dab8b5fd5285"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "10ebcbcab36b8bdbec23dc6bb7a33708eb366bfe", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=da5e8cef598cf47461cfe1bfe918ff7fbc0d92c4", "patch": "@@ -2566,7 +2566,9 @@ mod tests {\n         let mut r = rng();\n         let mut bitv = 0 as uint;\n         b.iter(|| {\n-            bitv |= 1 << ((r.next_u32() as uint) % uint::BITS);\n+            for _ in range(0u, 100) {\n+                bitv |= 1 << ((r.next_u32() as uint) % uint::BITS);\n+            }\n             &bitv\n         })\n     }\n@@ -2576,7 +2578,9 @@ mod tests {\n         let mut r = rng();\n         let mut bitv = Bitv::with_capacity(BENCH_BITS, false);\n         b.iter(|| {\n-            bitv.set((r.next_u32() as uint) % BENCH_BITS, true);\n+            for _ in range(0u, 100) {\n+                bitv.set((r.next_u32() as uint) % BENCH_BITS, true);\n+            }\n             &bitv\n         })\n     }\n@@ -2586,7 +2590,9 @@ mod tests {\n         let mut r = rng();\n         let mut bitv = Bitv::with_capacity(uint::BITS, false);\n         b.iter(|| {\n-            bitv.set((r.next_u32() as uint) % uint::BITS, true);\n+            for _ in range(0u, 100) {\n+                bitv.set((r.next_u32() as uint) % uint::BITS, true);\n+            }\n             &bitv\n         })\n     }\n@@ -2596,7 +2602,9 @@ mod tests {\n         let mut r = rng();\n         let mut bitv = BitvSet::new();\n         b.iter(|| {\n-            bitv.insert((r.next_u32() as uint) % uint::BITS);\n+            for _ in range(0u, 100) {\n+                bitv.insert((r.next_u32() as uint) % uint::BITS);\n+            }\n             &bitv\n         })\n     }\n@@ -2606,7 +2614,9 @@ mod tests {\n         let mut r = rng();\n         let mut bitv = BitvSet::new();\n         b.iter(|| {\n-            bitv.insert((r.next_u32() as uint) % BENCH_BITS);\n+            for _ in range(0u, 100) {\n+                bitv.insert((r.next_u32() as uint) % BENCH_BITS);\n+            }\n             &bitv\n         })\n     }\n@@ -2625,8 +2635,10 @@ mod tests {\n         let bitv = Bitv::with_capacity(uint::BITS, false);\n         b.iter(|| {\n             let mut sum = 0;\n-            for pres in bitv.iter() {\n-                sum += pres as uint;\n+            for _ in range(0u, 10) {\n+                for pres in bitv.iter() {\n+                    sum += pres as uint;\n+                }\n             }\n             sum\n         })"}]}