{"sha": "b07360eb2852953fcb07da738da0e2266058b2c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNzM2MGViMjg1Mjk1M2ZjYjA3ZGE3MzhkYTBlMjI2NjA1OGIyYzA=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@cs.washington.edu", "date": "2016-03-24T23:38:16Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@cs.washington.edu", "date": "2016-03-24T23:38:16Z"}, "message": "Cleanup and added transmute to ugly path list", "tree": {"sha": "c595afd91f8a34f256c68e7d8c64b90fc7b4abea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c595afd91f8a34f256c68e7d8c64b90fc7b4abea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b07360eb2852953fcb07da738da0e2266058b2c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b07360eb2852953fcb07da738da0e2266058b2c0", "html_url": "https://github.com/rust-lang/rust/commit/b07360eb2852953fcb07da738da0e2266058b2c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b07360eb2852953fcb07da738da0e2266058b2c0/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6adb9cb53f5d3ee899398603c6de628ec55f99fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/6adb9cb53f5d3ee899398603c6de628ec55f99fe", "html_url": "https://github.com/rust-lang/rust/commit/6adb9cb53f5d3ee899398603c6de628ec55f99fe"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "488d214b21f0f13e47b16537da7301b5bc61da29", "filename": "src/transmute.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b07360eb2852953fcb07da738da0e2266058b2c0/src%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07360eb2852953fcb07da738da0e2266058b2c0/src%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftransmute.rs?ref=b07360eb2852953fcb07da738da0e2266058b2c0", "patch": "@@ -3,6 +3,7 @@ use rustc_front::hir::*;\n use rustc::middle::ty::TyS;\n use rustc::middle::ty::TypeVariants::TyRawPtr;\n use utils;\n+use utils::TRANSMUTE_PATH;\n \n /// **What it does:** This lint checks for transmutes to the original type of the object.\n ///\n@@ -17,7 +18,7 @@ declare_lint! {\n     \"transmutes that have the same to and from types\"\n }\n \n-/// **What it does:*** This lint checks for transmutes between a type T and *T.\n+/// **What it does:*** This lint checks for transmutes between a type `T` and `*T`.\n ///\n /// **Why is this bad?** It's easy to mistakenly transmute between a type and a pointer to that type.\n ///\n@@ -44,7 +45,7 @@ impl LateLintPass for UselessTransmute {\n             if let ExprPath(None, _) = path_expr.node {\n                 let def_id = cx.tcx.def_map.borrow()[&path_expr.id].def_id();\n \n-                if utils::match_def_path(cx, def_id, &[\"core\", \"intrinsics\", \"transmute\"]) {\n+                if utils::match_def_path(cx, def_id, &TRANSMUTE_PATH) {\n                     let from_ty = cx.tcx.expr_ty(&args[0]);\n                     let to_ty = cx.tcx.expr_ty(e);\n \n@@ -81,17 +82,15 @@ impl LateLintPass for CrosspointerTransmute {\n             if let ExprPath(None, _) = path_expr.node {\n                 let def_id = cx.tcx.def_map.borrow()[&path_expr.id].def_id();\n \n-                if utils::match_def_path(cx, def_id, &[\"core\", \"intrinsics\", \"transmute\"]) {\n+                if utils::match_def_path(cx, def_id, &TRANSMUTE_PATH) {\n                     let from_ty = cx.tcx.expr_ty(&args[0]);\n                     let to_ty = cx.tcx.expr_ty(e);\n \n                     if is_ptr_to(to_ty, from_ty) {\n                         cx.span_lint(CROSSPOINTER_TRANSMUTE,\n                                      e.span,\n                                      &format!(\"transmute from a type (`{}`) to a pointer to that type (`{}`)\", from_ty, to_ty));\n-                    }\n-\n-                    if is_ptr_to(from_ty, to_ty) {\n+                    } else if is_ptr_to(from_ty, to_ty) {\n                         cx.span_lint(CROSSPOINTER_TRANSMUTE,\n                                      e.span,\n                                      &format!(\"transmute from a type (`{}`) to the type that it points to (`{}`)\", from_ty, to_ty));"}, {"sha": "e7b2a9d5210f01d1727bd138f608425a5718a3be", "filename": "src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b07360eb2852953fcb07da738da0e2266058b2c0/src%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07360eb2852953fcb07da738da0e2266058b2c0/src%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fmod.rs?ref=b07360eb2852953fcb07da738da0e2266058b2c0", "patch": "@@ -51,6 +51,7 @@ pub const RANGE_TO_PATH: [&'static str; 3] = [\"std\", \"ops\", \"RangeTo\"];\n pub const REGEX_NEW_PATH: [&'static str; 3] = [\"regex\", \"Regex\", \"new\"];\n pub const RESULT_PATH: [&'static str; 3] = [\"core\", \"result\", \"Result\"];\n pub const STRING_PATH: [&'static str; 3] = [\"collections\", \"string\", \"String\"];\n+pub const TRANSMUTE_PATH: [&'static str; 3] = [\"core\", \"intrinsics\", \"transmute\"];\n pub const VEC_FROM_ELEM_PATH: [&'static str; 3] = [\"std\", \"vec\", \"from_elem\"];\n pub const VEC_PATH: [&'static str; 3] = [\"collections\", \"vec\", \"Vec\"];\n "}]}