{"sha": "0f43800d10efd4e6255d375dad00be6b8ab6b5d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNDM4MDBkMTBlZmQ0ZTYyNTVkMzc1ZGFkMDBiZTZiOGFiNmI1ZDc=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-05-31T03:41:20Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-08-02T22:57:24Z"}, "message": "Switch to markdown output", "tree": {"sha": "36aa20400dd88549e810c66a179966894c06eb52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36aa20400dd88549e810c66a179966894c06eb52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f43800d10efd4e6255d375dad00be6b8ab6b5d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f43800d10efd4e6255d375dad00be6b8ab6b5d7", "html_url": "https://github.com/rust-lang/rust/commit/0f43800d10efd4e6255d375dad00be6b8ab6b5d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f43800d10efd4e6255d375dad00be6b8ab6b5d7/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aceee88c1add37cf02c1b67ebdd987696d4e6a43", "url": "https://api.github.com/repos/rust-lang/rust/commits/aceee88c1add37cf02c1b67ebdd987696d4e6a43", "html_url": "https://github.com/rust-lang/rust/commit/aceee88c1add37cf02c1b67ebdd987696d4e6a43"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "5bb1ddd669bb0510a1e178b7aee1a76a3410b7b5", "filename": "src/librustc/util/profiling.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0f43800d10efd4e6255d375dad00be6b8ab6b5d7/src%2Flibrustc%2Futil%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f43800d10efd4e6255d375dad00be6b8ab6b5d7/src%2Flibrustc%2Futil%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fprofiling.rs?ref=0f43800d10efd4e6255d375dad00be6b8ab6b5d7", "patch": "@@ -90,25 +90,27 @@ impl CategoryData {\n     fn print(&self, lock: &mut StdoutLock) {\n         macro_rules! p {\n             ($name:tt, $rustic_name:ident) => {\n+                let (hits, total) = self.query_counts.$rustic_name;\n+                let (hits, total) = if total > 0 {\n+                    (format!(\"{:.2}%\", (((hits as f32) / (total as f32)) * 100.0)), total.to_string())\n+                } else {\n+                    (\"\".into(), \"\".into())\n+                };\n+\n                 writeln!(\n                    lock,\n-                   \"{0: <15} \\t\\t {1: <15}ms\",\n+                   \"| {0: <16} | {1: <14} | {2: <14} | {3: <8} |\",\n                    $name,\n-                   self.times.$rustic_name / 1_000_000\n+                   self.times.$rustic_name / 1_000_000,\n+                   total,\n+                   hits\n                 ).unwrap();\n-                \n-                let (hits, total) = self.query_counts.$rustic_name;\n-                if total > 0 {\n-                    writeln!(\n-                        lock,\n-                        \"\\t{} hits {} queries\",\n-                        hits,\n-                        total\n-                    ).unwrap();\n-                }\n             };\n         }\n \n+        writeln!(lock, \"| Phase            | Time (ms)      | Queries        | Hits (%) |\").unwrap();\n+        writeln!(lock, \"| ---------------- | -------------- | -------------- | -------- |\").unwrap();\n+\n         p!(\"Parsing\", parsing);\n         p!(\"Expansion\", expansion);\n         p!(\"TypeChecking\", type_checking);\n@@ -222,6 +224,7 @@ impl SelfProfiler {\n         let crate_name = opts.crate_name.as_ref().map(|n| format!(\" for {}\", n)).unwrap_or_default();\n \n         writeln!(lock, \"Self profiling results{}:\", crate_name).unwrap();\n+        writeln!(lock).unwrap();\n \n         self.data.print(&mut lock);\n "}]}