{"sha": "a6fd6eccda42f86e40b73d788e8099adeb66e37b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZmQ2ZWNjZGE0MmY4NmU0MGI3M2Q3ODhlODA5OWFkZWI2NmUzN2I=", "commit": {"author": {"name": "Niklas Fiekas", "email": "niklas.fiekas@backscattering.de", "date": "2019-02-01T23:52:38Z"}, "committer": {"name": "Niklas Fiekas", "email": "niklas.fiekas@backscattering.de", "date": "2019-02-01T23:52:38Z"}, "message": "Test alloca with #[repr(align(x))] on enum", "tree": {"sha": "8043167ff3dff7674b7e37d1522d157a44089571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8043167ff3dff7674b7e37d1522d157a44089571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6fd6eccda42f86e40b73d788e8099adeb66e37b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6fd6eccda42f86e40b73d788e8099adeb66e37b", "html_url": "https://github.com/rust-lang/rust/commit/a6fd6eccda42f86e40b73d788e8099adeb66e37b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6fd6eccda42f86e40b73d788e8099adeb66e37b/comments", "author": {"login": "niklasf", "id": 402777, "node_id": "MDQ6VXNlcjQwMjc3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/402777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niklasf", "html_url": "https://github.com/niklasf", "followers_url": "https://api.github.com/users/niklasf/followers", "following_url": "https://api.github.com/users/niklasf/following{/other_user}", "gists_url": "https://api.github.com/users/niklasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/niklasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niklasf/subscriptions", "organizations_url": "https://api.github.com/users/niklasf/orgs", "repos_url": "https://api.github.com/users/niklasf/repos", "events_url": "https://api.github.com/users/niklasf/events{/privacy}", "received_events_url": "https://api.github.com/users/niklasf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "niklasf", "id": 402777, "node_id": "MDQ6VXNlcjQwMjc3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/402777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niklasf", "html_url": "https://github.com/niklasf", "followers_url": "https://api.github.com/users/niklasf/followers", "following_url": "https://api.github.com/users/niklasf/following{/other_user}", "gists_url": "https://api.github.com/users/niklasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/niklasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niklasf/subscriptions", "organizations_url": "https://api.github.com/users/niklasf/orgs", "repos_url": "https://api.github.com/users/niklasf/repos", "events_url": "https://api.github.com/users/niklasf/events{/privacy}", "received_events_url": "https://api.github.com/users/niklasf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20b55b7e2cb345e92ed024f9fef46ca4a83cd0a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/20b55b7e2cb345e92ed024f9fef46ca4a83cd0a0", "html_url": "https://github.com/rust-lang/rust/commit/20b55b7e2cb345e92ed024f9fef46ca4a83cd0a0"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "2251c54229ee0227e615dfc7c1010da041698466", "filename": "src/test/codegen/align-enum.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a6fd6eccda42f86e40b73d788e8099adeb66e37b/src%2Ftest%2Fcodegen%2Falign-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6fd6eccda42f86e40b73d788e8099adeb66e37b/src%2Ftest%2Fcodegen%2Falign-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Falign-enum.rs?ref=a6fd6eccda42f86e40b73d788e8099adeb66e37b", "patch": "@@ -0,0 +1,36 @@\n+// compile-flags: -C no-prepopulate-passes\n+// ignore-tidy-linelength\n+// min-llvm-version 7.0\n+\n+#![crate_type = \"lib\"]\n+#![feature(repr_align_enum)]\n+\n+#[repr(align(64))]\n+pub enum Align64 {\n+    A(u32),\n+    B(u32),\n+}\n+// CHECK: %Align64 = type { [0 x i32], i32, [15 x i32] }\n+\n+pub struct Nested64 {\n+    a: u8,\n+    b: Align64,\n+    c: u16,\n+}\n+\n+// CHECK-LABEL: @align64\n+#[no_mangle]\n+pub fn align64(a: u32) -> Align64 {\n+// CHECK: %a64 = alloca %Align64, align 64\n+// CHECK: call void @llvm.memcpy.{{.*}}(i8* align 64 %{{.*}}, i8* align 64 %{{.*}}, i{{[0-9]+}} 64, i1 false)\n+    let a64 = Align64::A(a);\n+    a64\n+}\n+\n+// CHECK-LABEL: @nested64\n+#[no_mangle]\n+pub fn nested64(a: u8, b: u32, c: u16) -> Nested64 {\n+// CHECK: %n64 = alloca %Nested64, align 64\n+    let n64 = Nested64 { a, b: Align64::B(b), c };\n+    n64\n+}"}]}