{"sha": "73b7b34f89091530ef492a8dd5ba683ae543d241", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYjdiMzRmODkwOTE1MzBlZjQ5MmE4ZGQ1YmE2ODNhZTU0M2QyNDE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-11T16:05:39Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-11T16:12:44Z"}, "message": "Fill out expected type for functional update syntax completion", "tree": {"sha": "a37007b05e143d2053b04868b74a13cf72561bd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a37007b05e143d2053b04868b74a13cf72561bd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73b7b34f89091530ef492a8dd5ba683ae543d241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73b7b34f89091530ef492a8dd5ba683ae543d241", "html_url": "https://github.com/rust-lang/rust/commit/73b7b34f89091530ef492a8dd5ba683ae543d241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73b7b34f89091530ef492a8dd5ba683ae543d241/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6045059916beaab2860d22dba96b7061f66535e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6045059916beaab2860d22dba96b7061f66535e3", "html_url": "https://github.com/rust-lang/rust/commit/6045059916beaab2860d22dba96b7061f66535e3"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "e38234a8a5a91c14076be5a942efecee173efed8", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 39, "deletions": 10, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/73b7b34f89091530ef492a8dd5ba683ae543d241/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b7b34f89091530ef492a8dd5ba683ae543d241/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=73b7b34f89091530ef492a8dd5ba683ae543d241", "patch": "@@ -480,18 +480,30 @@ impl<'a> CompletionContext<'a> {\n                         })\n                         .unwrap_or((None, None))\n                     },\n-                    ast::RecordExprFieldList(_it) => {\n-                        cov_mark::hit!(expected_type_struct_field_without_leading_char);\n+                    ast::RecordExprFieldList(it) => {\n                         // wouldn't try {} be nice...\n                         (|| {\n-                            let expr_field = self.token.prev_sibling_or_token()?\n-                                      .into_node()\n-                                      .and_then(ast::RecordExprField::cast)?;\n-                            let (_, _, ty) = self.sema.resolve_record_field(&expr_field)?;\n-                            Some((\n-                                Some(ty),\n-                                expr_field.field_name().map(NameOrNameRef::NameRef),\n-                            ))\n+                            if self.token.kind() == T![..]\n+                                || self.token.prev_token().map(|t| t.kind()) == Some(T![..])\n+                            {\n+                                cov_mark::hit!(expected_type_struct_func_update);\n+                                let record_expr = it.syntax().parent().and_then(ast::RecordExpr::cast)?;\n+                                let ty = self.sema.type_of_expr(&record_expr.into())?;\n+                                Some((\n+                                    Some(ty.original),\n+                                    None\n+                                ))\n+                            } else {\n+                                cov_mark::hit!(expected_type_struct_field_without_leading_char);\n+                                let expr_field = self.token.prev_sibling_or_token()?\n+                                    .into_node()\n+                                    .and_then(ast::RecordExprField::cast)?;\n+                                let (_, _, ty) = self.sema.resolve_record_field(&expr_field)?;\n+                                Some((\n+                                    Some(ty),\n+                                    expr_field.field_name().map(NameOrNameRef::NameRef),\n+                                ))\n+                            }\n                         })().unwrap_or((None, None))\n                     },\n                     ast::RecordExprField(it) => {\n@@ -533,6 +545,7 @@ impl<'a> CompletionContext<'a> {\n                             .unwrap_or((None, None))\n                     },\n                     ast::Stmt(_it) => (None, None),\n+                    ast::Item(__) => (None, None),\n                     _ => {\n                         match node.parent() {\n                             Some(n) => {\n@@ -1091,4 +1104,20 @@ impl<T> S<T> {\n             expect![[r#\"ty: u32, name: t\"#]],\n         );\n     }\n+\n+    #[test]\n+    fn expected_type_functional_update() {\n+        cov_mark::check!(expected_type_struct_func_update);\n+        check_expected_type_and_name(\n+            r#\"\n+struct Foo { field: u32 }\n+fn foo() {\n+    Foo {\n+        ..$0\n+    }\n+}\n+\"#,\n+            expect![[r#\"ty: Foo, name: ?\"#]],\n+        );\n+    }\n }"}, {"sha": "3769977b628ef2639f8b28931842c9cfaf8b64d7", "filename": "crates/ide_completion/src/tests/record.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73b7b34f89091530ef492a8dd5ba683ae543d241/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73b7b34f89091530ef492a8dd5ba683ae543d241/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Frecord.rs?ref=73b7b34f89091530ef492a8dd5ba683ae543d241", "patch": "@@ -179,6 +179,7 @@ fn main() {\n             fd ..Default::default()\n             fd foo1                 u32\n             fd foo2                 u32\n+            sn Foo {\u2026}              Foo { foo1: ${1:()}, foo2: ${2:()} }$0\n         \"#]],\n     );\n }"}]}