{"sha": "dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "node_id": "C_kwDOAAsO6NoAKGRjMjNiNWQ2NjFmODI4ZGRhY2UzY2NjNjVjNWE1M2IwZjQzYzFkZDQ", "commit": {"author": {"name": "yonip23", "email": "yoni@tabnine.com", "date": "2022-05-12T07:06:15Z"}, "committer": {"name": "yonip23", "email": "yoni@tabnine.com", "date": "2022-05-12T07:06:15Z"}, "message": "fix indentation + test", "tree": {"sha": "32b8ee03fa90213647da0e3c744a53d5f7735969", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32b8ee03fa90213647da0e3c744a53d5f7735969"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "html_url": "https://github.com/rust-lang/rust/commit/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/comments", "author": {"login": "yonip23", "id": 67855609, "node_id": "MDQ6VXNlcjY3ODU1NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/67855609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yonip23", "html_url": "https://github.com/yonip23", "followers_url": "https://api.github.com/users/yonip23/followers", "following_url": "https://api.github.com/users/yonip23/following{/other_user}", "gists_url": "https://api.github.com/users/yonip23/gists{/gist_id}", "starred_url": "https://api.github.com/users/yonip23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yonip23/subscriptions", "organizations_url": "https://api.github.com/users/yonip23/orgs", "repos_url": "https://api.github.com/users/yonip23/repos", "events_url": "https://api.github.com/users/yonip23/events{/privacy}", "received_events_url": "https://api.github.com/users/yonip23/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yonip23", "id": 67855609, "node_id": "MDQ6VXNlcjY3ODU1NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/67855609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yonip23", "html_url": "https://github.com/yonip23", "followers_url": "https://api.github.com/users/yonip23/followers", "following_url": "https://api.github.com/users/yonip23/following{/other_user}", "gists_url": "https://api.github.com/users/yonip23/gists{/gist_id}", "starred_url": "https://api.github.com/users/yonip23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yonip23/subscriptions", "organizations_url": "https://api.github.com/users/yonip23/orgs", "repos_url": "https://api.github.com/users/yonip23/repos", "events_url": "https://api.github.com/users/yonip23/events{/privacy}", "received_events_url": "https://api.github.com/users/yonip23/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a791205e76fe9619f90d4869ab54e4213847b8fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/a791205e76fe9619f90d4869ab54e4213847b8fe", "html_url": "https://github.com/rust-lang/rust/commit/a791205e76fe9619f90d4869ab54e4213847b8fe"}], "stats": {"total": 88, "additions": 77, "deletions": 11}, "files": [{"sha": "ca12509bdc7f907bf0599b1750fcc03fcaad490c", "filename": "clippy_lints/src/rc_clone_in_vec_init.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/clippy_lints%2Fsrc%2Frc_clone_in_vec_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/clippy_lints%2Fsrc%2Frc_clone_in_vec_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frc_clone_in_vec_init.rs?ref=dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "patch": "@@ -106,18 +106,18 @@ fn elem_snippet(cx: &LateContext<'_>, elem: &Expr<'_>, symbol_name: &str) -> Str\n fn loop_init_suggestion(elem: &str, len: &str, indent: &str) -> String {\n     format!(\n         r#\"{{\n-{indent}{indent}let mut v = Vec::with_capacity({len});\n-{indent}{indent}(0..{len}).for_each(|_| v.push({elem}));\n-{indent}{indent}v\n+{indent}    let mut v = Vec::with_capacity({len});\n+{indent}    (0..{len}).for_each(|_| v.push({elem}));\n+{indent}    v\n {indent}}}\"#\n     )\n }\n \n fn extract_suggestion(elem: &str, len: &str, indent: &str) -> String {\n     format!(\n         \"{{\n-{indent}{indent}let data = {elem};\n-{indent}{indent}vec![data; {len}]\n+{indent}    let data = {elem};\n+{indent}    vec![data; {len}]\n {indent}}}\"\n     )\n }"}, {"sha": "384060e6eae5033ef82d1998734e5aa1da557d57", "filename": "tests/ui/rc_clone_in_vec_init/arc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frc_clone_in_vec_init%2Farc.rs?ref=dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "patch": "@@ -7,6 +7,16 @@ fn should_warn_simple_case() {\n     let v = vec![Arc::new(\"x\".to_string()); 2];\n }\n \n+fn should_warn_simple_case_with_big_indentation() {\n+    if true {\n+        let k = 1;\n+        dbg!(k);\n+        if true {\n+            let v = vec![Arc::new(\"x\".to_string()); 2];\n+        }\n+    }\n+}\n+\n fn should_warn_complex_case() {\n     let v = vec![\n         std::sync::Arc::new(Mutex::new({"}, {"sha": "ce84186c8e300e15c988d76870740f40e13673db", "filename": "tests/ui/rc_clone_in_vec_init/arc.stderr", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Farc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Farc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frc_clone_in_vec_init%2Farc.stderr?ref=dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "patch": "@@ -23,7 +23,30 @@ LL ~     };\n    |\n \n error: calling `Arc::new` in `vec![elem; len]`\n-  --> $DIR/arc.rs:11:13\n+  --> $DIR/arc.rs:15:21\n+   |\n+LL |             let v = vec![Arc::new(\"x\".to_string()); 2];\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: each element will point to the same `Arc` instance\n+help: consider initializing each `Arc` element individually\n+   |\n+LL ~             let v = {\n+LL +                 let mut v = Vec::with_capacity(2);\n+LL +                 (0..2).for_each(|_| v.push(Arc::new(\"x\".to_string())));\n+LL +                 v\n+LL ~             };\n+   |\n+help: or if this is intentional, consider extracting the `Arc` initialization to a variable\n+   |\n+LL ~             let v = {\n+LL +                 let data = Arc::new(\"x\".to_string());\n+LL +                 vec![data; 2]\n+LL ~             };\n+   |\n+\n+error: calling `Arc::new` in `vec![elem; len]`\n+  --> $DIR/arc.rs:21:13\n    |\n LL |       let v = vec![\n    |  _____________^\n@@ -53,7 +76,7 @@ LL ~     };\n    |\n \n error: calling `Arc::new` in `vec![elem; len]`\n-  --> $DIR/arc.rs:20:14\n+  --> $DIR/arc.rs:30:14\n    |\n LL |       let v1 = vec![\n    |  ______________^\n@@ -82,5 +105,5 @@ LL +         vec![data; 2]\n LL ~     };\n    |\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "0394457fe1708274e2e4e7987b2615dcff68f298", "filename": "tests/ui/rc_clone_in_vec_init/rc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frc_clone_in_vec_init%2Frc.rs?ref=dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "patch": "@@ -8,6 +8,16 @@ fn should_warn_simple_case() {\n     let v = vec![Rc::new(\"x\".to_string()); 2];\n }\n \n+fn should_warn_simple_case_with_big_indentation() {\n+    if true {\n+        let k = 1;\n+        dbg!(k);\n+        if true {\n+            let v = vec![Rc::new(\"x\".to_string()); 2];\n+        }\n+    }\n+}\n+\n fn should_warn_complex_case() {\n     let v = vec![\n         std::rc::Rc::new(Mutex::new({"}, {"sha": "0f5cc0cf98feaa415efc44841647f1847b7d9bfc", "filename": "tests/ui/rc_clone_in_vec_init/rc.stderr", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Frc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4/tests%2Fui%2Frc_clone_in_vec_init%2Frc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frc_clone_in_vec_init%2Frc.stderr?ref=dc23b5d661f828ddace3ccc65c5a53b0f43c1dd4", "patch": "@@ -23,7 +23,30 @@ LL ~     };\n    |\n \n error: calling `Rc::new` in `vec![elem; len]`\n-  --> $DIR/rc.rs:12:13\n+  --> $DIR/rc.rs:16:21\n+   |\n+LL |             let v = vec![Rc::new(\"x\".to_string()); 2];\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: each element will point to the same `Rc` instance\n+help: consider initializing each `Rc` element individually\n+   |\n+LL ~             let v = {\n+LL +                 let mut v = Vec::with_capacity(2);\n+LL +                 (0..2).for_each(|_| v.push(Rc::new(\"x\".to_string())));\n+LL +                 v\n+LL ~             };\n+   |\n+help: or if this is intentional, consider extracting the `Rc` initialization to a variable\n+   |\n+LL ~             let v = {\n+LL +                 let data = Rc::new(\"x\".to_string());\n+LL +                 vec![data; 2]\n+LL ~             };\n+   |\n+\n+error: calling `Rc::new` in `vec![elem; len]`\n+  --> $DIR/rc.rs:22:13\n    |\n LL |       let v = vec![\n    |  _____________^\n@@ -53,7 +76,7 @@ LL ~     };\n    |\n \n error: calling `Rc::new` in `vec![elem; len]`\n-  --> $DIR/rc.rs:21:14\n+  --> $DIR/rc.rs:31:14\n    |\n LL |       let v1 = vec![\n    |  ______________^\n@@ -82,5 +105,5 @@ LL +         vec![data; 2]\n LL ~     };\n    |\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n "}]}