{"sha": "4319e7a6556b26cb1db6e933197bef5e97782c2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMTllN2E2NTU2YjI2Y2IxZGI2ZTkzMzE5N2JlZjVlOTc3ODJjMmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T19:55:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T21:07:41Z"}, "message": "Recursively load dependencies of external crates. Issue #632", "tree": {"sha": "61f8bafb0b022a7f4ca4e2b91de94d3903012b11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61f8bafb0b022a7f4ca4e2b91de94d3903012b11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4319e7a6556b26cb1db6e933197bef5e97782c2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4319e7a6556b26cb1db6e933197bef5e97782c2e", "html_url": "https://github.com/rust-lang/rust/commit/4319e7a6556b26cb1db6e933197bef5e97782c2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4319e7a6556b26cb1db6e933197bef5e97782c2e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "412e203b3c82f654af07fb85cea0c3d4ae89c62e", "url": "https://api.github.com/repos/rust-lang/rust/commits/412e203b3c82f654af07fb85cea0c3d4ae89c62e", "html_url": "https://github.com/rust-lang/rust/commit/412e203b3c82f654af07fb85cea0c3d4ae89c62e"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "2b498a5213f76d22be741d3b680c9aa50898b534", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4319e7a6556b26cb1db6e933197bef5e97782c2e/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4319e7a6556b26cb1db6e933197bef5e97782c2e/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=4319e7a6556b26cb1db6e933197bef5e97782c2e", "patch": "@@ -244,23 +244,53 @@ fn resolve_crate(env e, ast::ident ident, (@ast::meta_item)[] metas,\n         auto cfilename = cinfo._0;\n         auto cdata = cinfo._1;\n \n-        auto cmeta = rec(name=ident,\n-                         data=cdata,\n-                         cnum_map = new_int_hash[ast::crate_num]());\n-\n+        // Claim this crate number and cache it\n         auto cnum = e.next_crate_num;\n         e.crate_cache.insert(ident, cnum);\n         e.next_crate_num += 1;\n \n+        // Now resolve the crates referenced by this crate\n+        auto cnum_map = resolve_crate_deps(e, cdata);\n+\n+        auto cmeta = rec(name=ident,\n+                         data=cdata,\n+                         cnum_map=cnum_map);\n+\n         auto cstore = e.sess.get_cstore();\n         cstore::set_crate_data(cstore, cnum, cmeta);\n         cstore::add_used_crate_file(cstore, cfilename);\n         ret cnum;\n     } else {\n         ret e.crate_cache.get(ident);\n     }\n- }\n+}\n \n+// Go through the crate metadata and load any crates that it references\n+fn resolve_crate_deps(env e, &vec[u8] cdata) -> cstore::cnum_map {\n+    log \"resolving deps of external crate\";\n+    // The map from crate numbers in the crate we're resolving to local crate\n+    // numbers\n+    auto cnum_map = new_int_hash[ast::crate_num]();\n+    for (decoder::crate_dep dep in decoder::get_crate_deps(cdata)) {\n+        auto extrn_cnum = dep._0;\n+        auto cname = dep._1;\n+        log #fmt(\"resolving dep %s\", cname);\n+        if (e.crate_cache.contains_key(cname)) {\n+            log \"already have it\";\n+            // We've already seen this crate\n+            auto local_cnum = e.crate_cache.get(cname);\n+            cnum_map.insert(extrn_cnum, local_cnum);\n+        } else {\n+            log \"need to load it\";\n+            // This is a new one so we've got to load it\n+            // FIXME: Need better error reporting than just a bogus span\n+            auto fake_span = rec(lo=0u,hi=0u);\n+            auto local_cnum = resolve_crate(e, cname, ~[], fake_span);\n+            cnum_map.insert(extrn_cnum, local_cnum);\n+        }\n+    }\n+    ret cnum_map;\n+}\n \n // Local Variables:\n // mode: rust"}, {"sha": "415d5c8d144c834b1092842d8cabedcbd284ee92", "filename": "src/comp/metadata/decoder.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4319e7a6556b26cb1db6e933197bef5e97782c2e/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4319e7a6556b26cb1db6e933197bef5e97782c2e/src%2Fcomp%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fdecoder.rs?ref=4319e7a6556b26cb1db6e933197bef5e97782c2e", "patch": "@@ -24,6 +24,8 @@ export get_type_param_count;\n export lookup_defs;\n export get_crate_attributes;\n export list_crate_metadata;\n+export crate_dep;\n+export get_crate_deps;\n \n fn lookup_hash(&ebml::doc d, fn(vec[u8]) -> bool  eq_fn, uint hash) ->\n    vec[ebml::doc] {"}]}