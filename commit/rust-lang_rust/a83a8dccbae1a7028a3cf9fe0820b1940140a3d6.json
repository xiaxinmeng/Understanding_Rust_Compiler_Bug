{"sha": "a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4M2E4ZGNjYmFlMWE3MDI4YTNjZjlmZTA4MjBiMTk0MDE0MGEzZDY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T16:30:27Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "redundant_closure_call: split tests into fixable", "tree": {"sha": "9f9676f07205b69ad1e50aaae83a1f97bbc77173", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f9676f07205b69ad1e50aaae83a1f97bbc77173"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "html_url": "https://github.com/rust-lang/rust/commit/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4ff86dcd469b35831bb580afd40baed3e3918c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ff86dcd469b35831bb580afd40baed3e3918c9", "html_url": "https://github.com/rust-lang/rust/commit/e4ff86dcd469b35831bb580afd40baed3e3918c9"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "588f5f75c1e7c6dbbd3301fbd4bb360b033cf988", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "patch": "@@ -1,5 +1,6 @@\n use crate::utils::{\n-    constants, snippet, snippet_opt, span_help_and_lint, span_lint, span_lint_and_sugg, span_lint_and_then,\n+    constants, snippet_opt, snippet_with_applicability, span_help_and_lint, span_lint, span_lint_and_sugg,\n+    span_lint_and_then,\n };\n use if_chain::if_chain;\n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n@@ -414,13 +415,10 @@ impl EarlyLintPass for MiscEarlyLints {\n                                 \"Try not to call a closure in the expression where it is declared.\",\n                                 |db| {\n                                     if decl.inputs.is_empty() {\n-                                        let hint = snippet(cx, block.span, \"..\").into_owned();\n-                                        db.span_suggestion(\n-                                            expr.span,\n-                                            \"Try doing something like: \",\n-                                            hint,\n-                                            Applicability::MachineApplicable, // snippet\n-                                        );\n+                                        let mut app = Applicability::MachineApplicable;\n+                                        let hint =\n+                                            snippet_with_applicability(cx, block.span, \"..\", &mut app).into_owned();\n+                                        db.span_suggestion(expr.span, \"Try doing something like: \", hint, app);\n                                     }\n                                 },\n                             );"}, {"sha": "bacd67db7c30571e1e12708e7ae4d911df272efe", "filename": "tests/ui/redundant_closure_call.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.rs?ref=a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "patch": "@@ -1,8 +1,8 @@\n+// non rustfixable, see redundant_closure_call_fixable.rs\n+\n #![warn(clippy::redundant_closure_call)]\n \n fn main() {\n-    let a = (|| 42)();\n-\n     let mut i = 1;\n     let mut k = (|m| m + 1)(i);\n "}, {"sha": "68c1416bb6b1a33ff731f9fa9895116248011966", "filename": "tests/ui/redundant_closure_call.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.stderr?ref=a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "patch": "@@ -12,12 +12,6 @@ error: Closure called just once immediately after it was declared\n LL |     i = closure(3);\n    |     ^^^^^^^^^^^^^^\n \n-error: Try not to call a closure in the expression where it is declared.\n-  --> $DIR/redundant_closure_call.rs:4:13\n-   |\n-LL |     let a = (|| 42)();\n-   |             ^^^^^^^^^ help: Try doing something like: : `42`\n-\n error: Try not to call a closure in the expression where it is declared.\n   --> $DIR/redundant_closure_call.rs:7:17\n    |\n@@ -30,5 +24,5 @@ error: Try not to call a closure in the expression where it is declared.\n LL |     k = (|a, b| a * b)(1, 5);\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "0abca6fca0613b4469c74af12206f25c7a0a1b41", "filename": "tests/ui/redundant_closure_call_fixable.fixed", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_fixable.fixed?ref=a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+\n+#![warn(clippy::redundant_closure_call)]\n+#![allow(unused)]\n+\n+fn main() {\n+    let a = 42;\n+}"}, {"sha": "f8b9d37a5cc4e757efe2960f1a1a804a62e839cd", "filename": "tests/ui/redundant_closure_call_fixable.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_fixable.rs?ref=a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "patch": "@@ -0,0 +1,8 @@\n+// run-rustfix\n+\n+#![warn(clippy::redundant_closure_call)]\n+#![allow(unused)]\n+\n+fn main() {\n+    let a = (|| 42)();\n+}"}, {"sha": "e7737f9dd856fe6719da3275e182d4df6f865e8c", "filename": "tests/ui/redundant_closure_call_fixable.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a83a8dccbae1a7028a3cf9fe0820b1940140a3d6/tests%2Fui%2Fredundant_closure_call_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call_fixable.stderr?ref=a83a8dccbae1a7028a3cf9fe0820b1940140a3d6", "patch": "@@ -0,0 +1,10 @@\n+error: Try not to call a closure in the expression where it is declared.\n+  --> $DIR/redundant_closure_call_fixable.rs:7:13\n+   |\n+LL |     let a = (|| 42)();\n+   |             ^^^^^^^^^ help: Try doing something like: : `42`\n+   |\n+   = note: `-D clippy::redundant-closure-call` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}