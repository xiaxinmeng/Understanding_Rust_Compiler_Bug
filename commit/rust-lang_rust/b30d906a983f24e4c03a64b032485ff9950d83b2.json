{"sha": "b30d906a983f24e4c03a64b032485ff9950d83b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMGQ5MDZhOTgzZjI0ZTRjMDNhNjRiMDMyNDg1ZmY5OTUwZDgzYjI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-06T23:10:49Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-04-06T23:10:49Z"}, "message": "Add some more comments", "tree": {"sha": "d8a57b3a7e5eda905e07e794a508d85e1c388fb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8a57b3a7e5eda905e07e794a508d85e1c388fb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b30d906a983f24e4c03a64b032485ff9950d83b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b30d906a983f24e4c03a64b032485ff9950d83b2", "html_url": "https://github.com/rust-lang/rust/commit/b30d906a983f24e4c03a64b032485ff9950d83b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b30d906a983f24e4c03a64b032485ff9950d83b2/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dec90784ac143aba2eed9363e212a9197482f0ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/dec90784ac143aba2eed9363e212a9197482f0ed", "html_url": "https://github.com/rust-lang/rust/commit/dec90784ac143aba2eed9363e212a9197482f0ed"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "74ab60254159619f7f78ac242c77bd99ccdfb363", "filename": "src/librustc_mir_build/lints.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b30d906a983f24e4c03a64b032485ff9950d83b2/src%2Flibrustc_mir_build%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b30d906a983f24e4c03a64b032485ff9950d83b2/src%2Flibrustc_mir_build%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Flints.rs?ref=b30d906a983f24e4c03a64b032485ff9950d83b2", "patch": "@@ -28,7 +28,12 @@ fn check_fn_for_unconditional_recursion<'tcx>(\n     def_id: DefId,\n ) {\n     let self_calls = find_blocks_calling_self(tcx, &body, def_id);\n+\n+    // Stores a list of `Span`s for every basic block. Those are the spans of `Call` terminators\n+    // where we know that one of them will definitely be reached.\n     let mut results = IndexVec::from_elem_n(vec![], body.basic_blocks().len());\n+\n+    // We start the analysis at the self calls and work backwards.\n     let mut queue: VecDeque<_> = self_calls.iter().collect();\n \n     while let Some(bb) = queue.pop_front() {\n@@ -39,6 +44,8 @@ fn check_fn_for_unconditional_recursion<'tcx>(\n \n         let locations = if self_calls.contains(bb) {\n             // `bb` *is* a self-call.\n+            // We don't look at successors here because they are irrelevant here and we don't want\n+            // to lint them (eg. `f(); f()` should only lint the first call).\n             vec![bb]\n         } else {\n             // If *all* successors of `bb` lead to a self-call, emit notes at all of their\n@@ -69,12 +76,16 @@ fn check_fn_for_unconditional_recursion<'tcx>(\n                 }\n             };\n \n+            // If all our successors are known to lead to self-calls, then we do too.\n             let all_are_self_calls =\n                 relevant_successors.clone().all(|&succ| !results[succ].is_empty());\n \n             if all_are_self_calls {\n+                // We'll definitely lead to a self-call. Merge all call locations of the successors\n+                // for linting them later.\n                 relevant_successors.flat_map(|&succ| results[succ].iter().copied()).collect()\n             } else {\n+                // At least 1 successor does not always lead to a self-call, so we also don't.\n                 vec![]\n             }\n         };"}]}