{"sha": "c364d329ddda2ae2b7a553bf684a3e247977c003", "node_id": "C_kwDOAAsO6NoAKGMzNjRkMzI5ZGRkYTJhZTJiN2E1NTNiZjY4NGEzZTI0Nzk3N2MwMDM", "commit": {"author": {"name": "Fabian Hintringer", "email": "fabianhintringer01@gmail.com", "date": "2023-01-09T12:19:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-09T12:19:41Z"}, "message": "Relocate changes", "tree": {"sha": "eef69a7a68822da19c5de295bc8366f55199bea2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef69a7a68822da19c5de295bc8366f55199bea2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c364d329ddda2ae2b7a553bf684a3e247977c003", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvAZdCRBK7hj4Ov3rIwAA0RUIAKUPv5u3A7BBUMoektKRIJIQ\nnj9rX+c49EjQ4STBJ8ZydP8MVX/fW4kGhB3sCXo/ark/qh0kIF2Fg39i0ibDCg/6\nm6uXf20IsgxQSkqZmIeGQCwvY9z4nMGOH3mC+yfuOTjyVHtE672/ZCxoaJecpMQR\nndHrsFXzpuh2DWh0II6PP8uFsxkPMlGy0I0NrYbDs+6Z4oGOner0Es1CbA1yGIKd\nhKcoeK0G0tGtMI4+yU5RDENi8kuvqyN886RSMnJox3bWf5ud9SFnQ+7ps5qQpv9H\nQVZnmqqFxi5n5aTT2OGi6TCn0iMmtDQbrULQBcdfqrBkyA/tgSKr2yJruagCU/Q=\n=H0v3\n-----END PGP SIGNATURE-----\n", "payload": "tree eef69a7a68822da19c5de295bc8366f55199bea2\nparent 083560b7d84fd3660a6ba99acb7f2570296063bd\nauthor Fabian Hintringer <fabianhintringer01@gmail.com> 1673266781 +0100\ncommitter GitHub <noreply@github.com> 1673266781 +0100\n\nRelocate changes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c364d329ddda2ae2b7a553bf684a3e247977c003", "html_url": "https://github.com/rust-lang/rust/commit/c364d329ddda2ae2b7a553bf684a3e247977c003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c364d329ddda2ae2b7a553bf684a3e247977c003/comments", "author": {"login": "HintringerFabian", "id": 79401071, "node_id": "MDQ6VXNlcjc5NDAxMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/79401071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HintringerFabian", "html_url": "https://github.com/HintringerFabian", "followers_url": "https://api.github.com/users/HintringerFabian/followers", "following_url": "https://api.github.com/users/HintringerFabian/following{/other_user}", "gists_url": "https://api.github.com/users/HintringerFabian/gists{/gist_id}", "starred_url": "https://api.github.com/users/HintringerFabian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HintringerFabian/subscriptions", "organizations_url": "https://api.github.com/users/HintringerFabian/orgs", "repos_url": "https://api.github.com/users/HintringerFabian/repos", "events_url": "https://api.github.com/users/HintringerFabian/events{/privacy}", "received_events_url": "https://api.github.com/users/HintringerFabian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "083560b7d84fd3660a6ba99acb7f2570296063bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/083560b7d84fd3660a6ba99acb7f2570296063bd", "html_url": "https://github.com/rust-lang/rust/commit/083560b7d84fd3660a6ba99acb7f2570296063bd"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "353cb147f108f1affb6dfb1777fbf0b38578db79", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c364d329ddda2ae2b7a553bf684a3e247977c003/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c364d329ddda2ae2b7a553bf684a3e247977c003/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=c364d329ddda2ae2b7a553bf684a3e247977c003", "patch": "@@ -1495,18 +1495,6 @@ pub trait Iterator {\n     /// assert_eq!(merged, \"alphabetagamma\");\n     /// ```\n     ///\n-    /// Flattening works on any `IntoIterator` type, including `Option` and `Result`:\n-    ///\n-    /// ```\n-    /// let options = vec![Some(123), Some(321), None, Some(231)];\n-    /// let flattened_options: Vec<_> = options.into_iter().flatten().collect();\n-    /// assert_eq!(flattened_options, vec![123, 321, 231]);\n-    ///\n-    /// let results = vec![Ok(123), Ok(321), Err(456), Ok(231)];\n-    /// let flattened_results: Vec<_> = results.into_iter().flatten().collect();\n-    /// assert_eq!(flattened_results, vec![123, 321, 231]);\n-    /// ```\n-    ///\n     /// You can also rewrite this in terms of [`flat_map()`], which is preferable\n     /// in this case since it conveys intent more clearly:\n     ///\n@@ -1520,6 +1508,18 @@ pub trait Iterator {\n     /// assert_eq!(merged, \"alphabetagamma\");\n     /// ```\n     ///\n+    /// Flattening works on any `IntoIterator` type, including `Option` and `Result`:\n+    ///\n+    /// ```\n+    /// let options = vec![Some(123), Some(321), None, Some(231)];\n+    /// let flattened_options: Vec<_> = options.into_iter().flatten().collect();\n+    /// assert_eq!(flattened_options, vec![123, 321, 231]);\n+    ///\n+    /// let results = vec![Ok(123), Ok(321), Err(456), Ok(231)];\n+    /// let flattened_results: Vec<_> = results.into_iter().flatten().collect();\n+    /// assert_eq!(flattened_results, vec![123, 321, 231]);\n+    /// ```\n+    ///\n     /// Flattening only removes one level of nesting at a time:\n     ///\n     /// ```"}]}