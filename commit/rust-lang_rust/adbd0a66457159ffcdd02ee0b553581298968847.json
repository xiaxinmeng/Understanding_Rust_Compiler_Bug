{"sha": "adbd0a66457159ffcdd02ee0b553581298968847", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYmQwYTY2NDU3MTU5ZmZjZGQwMmVlMGI1NTM1ODEyOTg5Njg4NDc=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-03-12T23:09:20Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-03-13T00:51:39Z"}, "message": "Make std time tests more robust for platform differences", "tree": {"sha": "1bab4bb65bd555e3e382e0e7ba675894105ab86d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bab4bb65bd555e3e382e0e7ba675894105ab86d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adbd0a66457159ffcdd02ee0b553581298968847", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adbd0a66457159ffcdd02ee0b553581298968847", "html_url": "https://github.com/rust-lang/rust/commit/adbd0a66457159ffcdd02ee0b553581298968847", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adbd0a66457159ffcdd02ee0b553581298968847/comments", "author": null, "committer": null, "parents": [{"sha": "d06a020e2b100d8a22252d8877783d8869e5a9ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d06a020e2b100d8a22252d8877783d8869e5a9ad", "html_url": "https://github.com/rust-lang/rust/commit/d06a020e2b100d8a22252d8877783d8869e5a9ad"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "4c86f70ad871d6df5617bc4828ab5f7513081a56", "filename": "src/libstd/time.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/adbd0a66457159ffcdd02ee0b553581298968847/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adbd0a66457159ffcdd02ee0b553581298968847/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=adbd0a66457159ffcdd02ee0b553581298968847", "patch": "@@ -712,13 +712,6 @@ mod tests {\n         assert_almost_eq!(a - second + second, a);\n         assert_almost_eq!(a.checked_sub(second).unwrap().checked_add(second).unwrap(), a);\n \n-        // A difference of 80 and 800 years cannot fit inside a 32-bit time_t\n-        if !(cfg!(unix) && crate::mem::size_of::<libc::time_t>() <= 4) {\n-            let eighty_years = second * 60 * 60 * 24 * 365 * 80;\n-            assert_almost_eq!(a - eighty_years + eighty_years, a);\n-            assert_almost_eq!(a - (eighty_years * 10) + (eighty_years * 10), a);\n-        }\n-\n         let one_second_from_epoch = UNIX_EPOCH + Duration::new(1, 0);\n         let one_second_from_epoch2 = UNIX_EPOCH + Duration::new(0, 500_000_000)\n             + Duration::new(0, 500_000_000);\n@@ -747,8 +740,8 @@ mod tests {\n     #[test]\n     fn since_epoch() {\n         let ts = SystemTime::now();\n-        let a = ts.duration_since(UNIX_EPOCH).unwrap();\n-        let b = ts.duration_since(UNIX_EPOCH - Duration::new(1, 0)).unwrap();\n+        let a = ts.duration_since(UNIX_EPOCH + Duration::new(1, 0)).unwrap();\n+        let b = ts.duration_since(UNIX_EPOCH).unwrap();\n         assert!(b > a);\n         assert_eq!(b - a, Duration::new(1, 0));\n "}]}