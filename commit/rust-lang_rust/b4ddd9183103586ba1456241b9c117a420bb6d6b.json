{"sha": "b4ddd9183103586ba1456241b9c117a420bb6d6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0ZGRkOTE4MzEwMzU4NmJhMTQ1NjI0MWI5YzExN2E0MjBiYjZkNmI=", "commit": {"author": {"name": "Nathan Corbyn", "email": "me@nathancorbyn.com", "date": "2020-06-05T11:44:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-05T11:44:56Z"}, "message": "Add FIXME to comment regarding local patterns\n\nCo-authored-by: Bastian Kauschke <bastian_kauschke@hotmail.de>", "tree": {"sha": "bc1c3384568ecdd2cd44821fa15849617a2aea59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc1c3384568ecdd2cd44821fa15849617a2aea59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4ddd9183103586ba1456241b9c117a420bb6d6b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe2jA5CRBK7hj4Ov3rIwAAdHIIABHxmmlIEDuVJOpDGAYH+4WV\nW8v4lk+Zf9PgrbqKVLKoRaZX05SVms6rggOnj8T2Po03QVymLYIRDJhOQCRP+jJs\nWpv3luvEu3IvSHJAjdx2VCasA9eOKMGEeK1fFrOYunRsHfSrjamvnCMZpSSpmR1y\n/Isbk0E/258fKMqDmpjKVVXHO3Y1gsiWsj3bY5Mz10wCeXmjkAPdoAYYASzrUamV\n676z0h68Po+3QJFWN4nVOF8PXGiJwKPepFasod4MHIlRpyXDzJs/BfjB1z5FTMAR\nF48Kq4gu0oqo2qIzc70wbxOJ/MswDmmBQSDLYV22KuJtngDicd3NI/VFNRf8Bfk=\n=yzrB\n-----END PGP SIGNATURE-----\n", "payload": "tree bc1c3384568ecdd2cd44821fa15849617a2aea59\nparent df996e8e12b094e3aedfe0e35c2a8ded57f56890\nauthor Nathan Corbyn <me@nathancorbyn.com> 1591357496 +0100\ncommitter GitHub <noreply@github.com> 1591357496 +0100\n\nAdd FIXME to comment regarding local patterns\n\nCo-authored-by: Bastian Kauschke <bastian_kauschke@hotmail.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4ddd9183103586ba1456241b9c117a420bb6d6b", "html_url": "https://github.com/rust-lang/rust/commit/b4ddd9183103586ba1456241b9c117a420bb6d6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4ddd9183103586ba1456241b9c117a420bb6d6b/comments", "author": {"login": "doctorn", "id": 6421560, "node_id": "MDQ6VXNlcjY0MjE1NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6421560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doctorn", "html_url": "https://github.com/doctorn", "followers_url": "https://api.github.com/users/doctorn/followers", "following_url": "https://api.github.com/users/doctorn/following{/other_user}", "gists_url": "https://api.github.com/users/doctorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/doctorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doctorn/subscriptions", "organizations_url": "https://api.github.com/users/doctorn/orgs", "repos_url": "https://api.github.com/users/doctorn/repos", "events_url": "https://api.github.com/users/doctorn/events{/privacy}", "received_events_url": "https://api.github.com/users/doctorn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df996e8e12b094e3aedfe0e35c2a8ded57f56890", "url": "https://api.github.com/repos/rust-lang/rust/commits/df996e8e12b094e3aedfe0e35c2a8ded57f56890", "html_url": "https://github.com/rust-lang/rust/commit/df996e8e12b094e3aedfe0e35c2a8ded57f56890"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e097deca33b46a95c80dc5063facd2515bf3e136", "filename": "src/librustc_infer/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4ddd9183103586ba1456241b9c117a420bb6d6b/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ddd9183103586ba1456241b9c117a420bb6d6b/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=b4ddd9183103586ba1456241b9c117a420bb6d6b", "patch": "@@ -88,7 +88,7 @@ impl<'a, 'tcx> Visitor<'tcx> for FindHirNodeVisitor<'a, 'tcx> {\n         if let (None, Some(ty)) =\n             (self.found_local_pattern, self.node_ty_contains_target(local.hir_id))\n         {\n-            // There's a trade-off here - we can either check that our target span\n+            // FIXME: There's a trade-off here - we can either check that our target span\n             // is contained in `local.span` or not. If we choose to check containment\n             // we can avoid some spurious suggestions (see #72690), but we lose\n             // the ability to report on things like:"}]}