{"sha": "dfd2b6493a4a9e44194faa11e4ae30f62d8a403b", "node_id": "C_kwDOAAsO6NoAKGRmZDJiNjQ5M2E0YTllNDQxOTRmYWExMWU0YWUzMGY2MmQ4YTQwM2I", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-17T23:05:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-17T23:05:53Z"}, "message": "Rollup merge of #109222 - chenyukang:yukang/fix-109143, r=petrochenkov\n\nDo not ICE for unexpected lifetime with ConstGeneric rib\n\nFixes #109143\nr? ````@petrochenkov````\n\nCombining this test with the previous test will affect the previous diagnostics, so I added a separate test case.", "tree": {"sha": "48c5236097dfc33dea7079a3dcf65d6b1b681aa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48c5236097dfc33dea7079a3dcf65d6b1b681aa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFPJRCRBK7hj4Ov3rIwAAkPkIALHDpDL3quQUTlJplURVzevR\n53b4X1ZBKTC9zSnacPjJBIfUbTg0uv/h68iZZ/ccxHNwnuPbCrLl0fbND+TEWiu5\n92g21MWCdZWsMJp5N1iYFI2Lo147dfsyjUxcQDJZ/UIqFky434ta+kk4gnfckSla\nDWvhgZidewM5l0l63EfG2ieBhTtDAR7QPFvVAaKPYk+Urj3gmjxZ0d+Y8Pg3nu1/\nY3xp7l8snyu70X7pWboQr5NKF7ahUHkYmfoVp4B0bthUQOqsXIhZ1ZNxI3RPZ5Hq\nvoOLu74IfZt+ATxanu7Edl0dMxtxRlh26D8FA9xoGeW7dX2dLXpsLWtQw8Ho9e8=\n=YN6G\n-----END PGP SIGNATURE-----\n", "payload": "tree 48c5236097dfc33dea7079a3dcf65d6b1b681aa5\nparent e7d6369ed436e75c65aec961095807e884b04cc0\nparent 827a990255b49a5a6eee67844fbbeaeb323236b4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679094353 +0100\ncommitter GitHub <noreply@github.com> 1679094353 +0100\n\nRollup merge of #109222 - chenyukang:yukang/fix-109143, r=petrochenkov\n\nDo not ICE for unexpected lifetime with ConstGeneric rib\n\nFixes #109143\nr? ````@petrochenkov````\n\nCombining this test with the previous test will affect the previous diagnostics, so I added a separate test case.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b", "html_url": "https://github.com/rust-lang/rust/commit/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7d6369ed436e75c65aec961095807e884b04cc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7d6369ed436e75c65aec961095807e884b04cc0", "html_url": "https://github.com/rust-lang/rust/commit/e7d6369ed436e75c65aec961095807e884b04cc0"}, {"sha": "827a990255b49a5a6eee67844fbbeaeb323236b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/827a990255b49a5a6eee67844fbbeaeb323236b4", "html_url": "https://github.com/rust-lang/rust/commit/827a990255b49a5a6eee67844fbbeaeb323236b4"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "1afd8851ce067b468e0d840955820853545947fe", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=dfd2b6493a4a9e44194faa11e4ae30f62d8a403b", "patch": "@@ -1478,8 +1478,9 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n                                     } else {\n                                         LifetimeUseSet::Many\n                                     }),\n-                                    LifetimeRibKind::Generics { .. } => None,\n-                                    LifetimeRibKind::ConstGeneric | LifetimeRibKind::AnonConst => {\n+                                    LifetimeRibKind::Generics { .. }\n+                                    | LifetimeRibKind::ConstGeneric => None,\n+                                    LifetimeRibKind::AnonConst => {\n                                         span_bug!(ident.span, \"unexpected rib kind: {:?}\", rib.kind)\n                                     }\n                                 })"}, {"sha": "0ae68ad04f755af80b936d5a29639fda9102983a", "filename": "tests/ui/lifetimes/unusual-rib-combinations.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b/tests%2Fui%2Flifetimes%2Funusual-rib-combinations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b/tests%2Fui%2Flifetimes%2Funusual-rib-combinations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Funusual-rib-combinations.rs?ref=dfd2b6493a4a9e44194faa11e4ae30f62d8a403b", "patch": "@@ -25,4 +25,9 @@ fn d<const C: S>() {}\n //~^ ERROR missing lifetime specifier\n //~| ERROR `S<'_>` is forbidden as the type of a const generic parameter\n \n+trait Foo<'a> {}\n+struct Bar<const N: &'a (dyn for<'a> Foo<'a>)>;\n+//~^ ERROR use of non-static lifetime `'a` in const generic\n+//~| ERROR `&dyn for<'a> Foo<'a>` is forbidden as the type of a const generic parameter\n+\n fn main() {}"}, {"sha": "20163d289b1381155df60d430954ca143291ae90", "filename": "tests/ui/lifetimes/unusual-rib-combinations.stderr", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b/tests%2Fui%2Flifetimes%2Funusual-rib-combinations.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfd2b6493a4a9e44194faa11e4ae30f62d8a403b/tests%2Fui%2Flifetimes%2Funusual-rib-combinations.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Funusual-rib-combinations.stderr?ref=dfd2b6493a4a9e44194faa11e4ae30f62d8a403b", "patch": "@@ -9,6 +9,14 @@ help: consider introducing a named lifetime parameter\n LL | fn d<'a, const C: S<'a>>() {}\n    |      +++           ++++\n \n+error[E0771]: use of non-static lifetime `'a` in const generic\n+  --> $DIR/unusual-rib-combinations.rs:29:22\n+   |\n+LL | struct Bar<const N: &'a (dyn for<'a> Foo<'a>)>;\n+   |                      ^^\n+   |\n+   = note: for more information, see issue #74052 <https://github.com/rust-lang/rust/issues/74052>\n+\n error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n   --> $DIR/unusual-rib-combinations.rs:7:16\n    |\n@@ -55,7 +63,16 @@ LL | fn d<const C: S>() {}\n    = note: the only supported types are integers, `bool` and `char`\n    = help: more complex types are supported with `#![feature(adt_const_params)]`\n \n-error: aborting due to 7 previous errors\n+error: `&dyn for<'a> Foo<'a>` is forbidden as the type of a const generic parameter\n+  --> $DIR/unusual-rib-combinations.rs:29:21\n+   |\n+LL | struct Bar<const N: &'a (dyn for<'a> Foo<'a>)>;\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the only supported types are integers, `bool` and `char`\n+   = help: more complex types are supported with `#![feature(adt_const_params)]`\n+\n+error: aborting due to 9 previous errors\n \n-Some errors have detailed explanations: E0106, E0214, E0308.\n+Some errors have detailed explanations: E0106, E0214, E0308, E0771.\n For more information about an error, try `rustc --explain E0106`."}]}