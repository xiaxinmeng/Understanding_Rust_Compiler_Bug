{"sha": "54d42c4d74bb88d7e411d5c9abf8a402fedf0049", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZDQyYzRkNzRiYjg4ZDdlNDExZDVjOWFiZjhhNDAyZmVkZjAwNDk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-22T21:48:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-31T04:23:34Z"}, "message": "rustc: Make trans handle self-describing strings", "tree": {"sha": "cf4db20eb0f3fdfb7f31ac5f92bf399c79c3dc29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4db20eb0f3fdfb7f31ac5f92bf399c79c3dc29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54d42c4d74bb88d7e411d5c9abf8a402fedf0049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54d42c4d74bb88d7e411d5c9abf8a402fedf0049", "html_url": "https://github.com/rust-lang/rust/commit/54d42c4d74bb88d7e411d5c9abf8a402fedf0049", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54d42c4d74bb88d7e411d5c9abf8a402fedf0049/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ba088ef839de00cf97a905083be19c212c8a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ba088ef839de00cf97a905083be19c212c8a9c", "html_url": "https://github.com/rust-lang/rust/commit/a4ba088ef839de00cf97a905083be19c212c8a9c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "8423aebd9796d29b66ffb059e228538bf524737d", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54d42c4d74bb88d7e411d5c9abf8a402fedf0049/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54d42c4d74bb88d7e411d5c9abf8a402fedf0049/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=54d42c4d74bb88d7e411d5c9abf8a402fedf0049", "patch": "@@ -3890,9 +3890,11 @@ fn trans_fail_expr(bcx: block, sp_opt: option<span>,\n         bcx = expr_res.bcx;\n \n         if ty::type_is_str(e_ty) {\n-            let data = tvec::get_dataptr(\n-                bcx, expr_res.val, type_of(\n-                    ccx, ty::mk_mach_uint(tcx, ast::ty_u8)));\n+            let unit_ty = ty::mk_mach_uint(tcx, ast::ty_u8);\n+            let vec_ty = ty::mk_vec(tcx, {ty: unit_ty, mutbl: ast::m_imm});\n+            let unit_llty = type_of(ccx, unit_ty);\n+            let body = tvec::get_bodyptr(bcx, expr_res.val, vec_ty);\n+            let data = tvec::get_dataptr(bcx, body, unit_llty);\n             ret trans_fail_value(bcx, sp_opt, data);\n         } else if bcx.unreachable || ty::type_is_bot(e_ty) {\n             ret bcx;"}]}