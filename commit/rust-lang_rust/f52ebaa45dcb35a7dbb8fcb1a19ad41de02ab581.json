{"sha": "f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581", "node_id": "C_kwDOAAsO6NoAKGY1MmViYWE0NWRjYjM1YTdkYmI4ZmNiMWExOWFkNDFkZTAyYWI1ODE", "commit": {"author": {"name": "Roland Kuhn", "email": "rk@rkuhn.info", "date": "2022-02-13T16:08:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-13T16:08:30Z"}, "message": "document expectations for Waker::wake\n\nfixes #93961", "tree": {"sha": "b0b2ffcdb8fec83526586d210afeaaf8da7c4f7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0b2ffcdb8fec83526586d210afeaaf8da7c4f7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiCSz+CRBK7hj4Ov3rIwAAmiwIADgeqW+UX3UNTOm/LMKosMUO\npjdePc6qFvbJoTJToDmZRQtouwBc1KRWoW0IDHq2vH/lprWehY+1VqKajnSVr66M\nm1R6mW06QvJPBE/bK7ggHthhJ8TlgMT9Lr6GVn4GygfGEk8c9tb75fQo4sk07Xvy\nlQq6I0twlM5e3KxKFVOuS8qb9FZaEw0AnPi1s3RSOTXuaH+f7K2wi1yv7JXQw7eu\n/VUZNiiru9eTDiJy9yM1qt7KxE5txvpBpD1r584+C9W2+gxNVB5NFy5ZI5PW4UCI\nhA0tHU/q43tT/DXoKebzUoIkf/NwoDkH2JOZ/235yn1kVy2IHnwfUOf6mQlRqQc=\n=woLt\n-----END PGP SIGNATURE-----\n", "payload": "tree b0b2ffcdb8fec83526586d210afeaaf8da7c4f7f\nparent 1f4681ad7a132755452c32a987ad0f0d075aa6aa\nauthor Roland Kuhn <rk@rkuhn.info> 1644768510 +0100\ncommitter GitHub <noreply@github.com> 1644768510 +0100\n\ndocument expectations for Waker::wake\n\nfixes #93961"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581", "html_url": "https://github.com/rust-lang/rust/commit/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581/comments", "author": {"login": "rkuhn", "id": 470469, "node_id": "MDQ6VXNlcjQ3MDQ2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/470469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkuhn", "html_url": "https://github.com/rkuhn", "followers_url": "https://api.github.com/users/rkuhn/followers", "following_url": "https://api.github.com/users/rkuhn/following{/other_user}", "gists_url": "https://api.github.com/users/rkuhn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkuhn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkuhn/subscriptions", "organizations_url": "https://api.github.com/users/rkuhn/orgs", "repos_url": "https://api.github.com/users/rkuhn/repos", "events_url": "https://api.github.com/users/rkuhn/events{/privacy}", "received_events_url": "https://api.github.com/users/rkuhn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f4681ad7a132755452c32a987ad0f0d075aa6aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4681ad7a132755452c32a987ad0f0d075aa6aa", "html_url": "https://github.com/rust-lang/rust/commit/1f4681ad7a132755452c32a987ad0f0d075aa6aa"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "c3e6c1f84ade9778a17c68fe86b8753e8eef47bf", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581", "patch": "@@ -219,6 +219,13 @@ unsafe impl Sync for Waker {}\n \n impl Waker {\n     /// Wake up the task associated with this `Waker`.\n+    ///\n+    /// Multiple wake-ups (through clones of this `Waker` or `wake_by_ref`) may be\n+    /// coalesced into a single `poll` invocation by the runtime, and as long as\n+    /// the runtime keeps running and the task is not finished it is expected that\n+    /// each wake-up is followed by an invocation of `poll`, even in the absence of\n+    /// other events. This makes it possible to yield to other tasks when running\n+    /// potentially unbounded processing loops in order to maintain fairness.\n     #[inline]\n     #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n     pub fn wake(self) {"}]}