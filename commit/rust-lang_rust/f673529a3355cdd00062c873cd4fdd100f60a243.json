{"sha": "f673529a3355cdd00062c873cd4fdd100f60a243", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NzM1MjlhMzM1NWNkZDAwMDYyYzg3M2NkNGZkZDEwMGY2MGEyNDM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-03T09:23:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-03T09:23:15Z"}, "message": "explain that completion shouldn't do filtering", "tree": {"sha": "a8a7a2bcd87699021d2b488a264b9d53ce3c0922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8a7a2bcd87699021d2b488a264b9d53ce3c0922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f673529a3355cdd00062c873cd4fdd100f60a243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f673529a3355cdd00062c873cd4fdd100f60a243", "html_url": "https://github.com/rust-lang/rust/commit/f673529a3355cdd00062c873cd4fdd100f60a243", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f673529a3355cdd00062c873cd4fdd100f60a243/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4c30d750411f09a999b201631000a08e88907fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4c30d750411f09a999b201631000a08e88907fd", "html_url": "https://github.com/rust-lang/rust/commit/a4c30d750411f09a999b201631000a08e88907fd"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "ce777a771e2e1a1c968b4a432311cca1b712d095", "filename": "crates/ra_analysis/src/completion.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f673529a3355cdd00062c873cd4fdd100f60a243/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f673529a3355cdd00062c873cd4fdd100f60a243/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs?ref=f673529a3355cdd00062c873cd4fdd100f60a243", "patch": "@@ -28,7 +28,21 @@ pub use crate::completion::completion_item::{CompletionItem, InsertText, Complet\n /// incomplete and can look really weird.\n ///\n /// Once the context is collected, we run a series of completion routines which\n-/// look at the context and produce completion items.\n+/// look at the context and produce completion items. One subtelty about this\n+/// phase is that completion engine should not filter by the substring which is\n+/// already present, it should give all possible variants for the identifier at\n+/// the caret. In other words, for\n+///\n+/// ```no-run\n+/// fn f() {\n+///     let foo = 92;\n+///     let _ = bar<|>\n+/// }\n+/// ```\n+///\n+/// `foo` *should* be present among the completion variants. Filtering by\n+/// identifier prefix/fuzzy match should be done higher in the stack, together\n+/// with ordering of completions (currently this is done by the client).\n pub(crate) fn completions(\n     db: &db::RootDatabase,\n     position: FilePosition,"}]}