{"sha": "62392966a3937362146d7228444c8d843d972857", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMzkyOTY2YTM5MzczNjIxNDZkNzIyODQ0NGM4ZDg0M2Q5NzI4NTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-26T14:09:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-07-26T14:09:36Z"}, "message": "Auto merge of #74772 - JohnTitor:add-tests, r=lcnr\n\nAdd some regression tests\n\ncc #56445\nFixes #72911", "tree": {"sha": "f62c684f05017230721d6006387189afb1d8707c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f62c684f05017230721d6006387189afb1d8707c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62392966a3937362146d7228444c8d843d972857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62392966a3937362146d7228444c8d843d972857", "html_url": "https://github.com/rust-lang/rust/commit/62392966a3937362146d7228444c8d843d972857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62392966a3937362146d7228444c8d843d972857/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13f9aa190957b993a268fd4a046fce76ca8814ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/13f9aa190957b993a268fd4a046fce76ca8814ee", "html_url": "https://github.com/rust-lang/rust/commit/13f9aa190957b993a268fd4a046fce76ca8814ee"}, {"sha": "8dcf86887cecd84d0775bdf45580435bc8e8bc2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dcf86887cecd84d0775bdf45580435bc8e8bc2d", "html_url": "https://github.com/rust-lang/rust/commit/8dcf86887cecd84d0775bdf45580435bc8e8bc2d"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "26441512e3fbd0390d65575dea833428bd372082", "filename": "src/test/ui/const-generics/issues/issue-56445.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.rs?ref=62392966a3937362146d7228444c8d843d972857", "patch": "@@ -0,0 +1,12 @@\n+// Regression test for https://github.com/rust-lang/rust/issues/56445#issuecomment-518402995.\n+\n+#![feature(const_generics)]\n+//~^ WARN: the feature `const_generics` is incomplete\n+#![crate_type = \"lib\"]\n+\n+use std::marker::PhantomData;\n+\n+struct Bug<'a, const S: &'a str>(PhantomData<&'a ()>);\n+//~^ ERROR: use of non-static lifetime `'a` in const generic\n+\n+impl Bug<'_, \"\"> {}"}, {"sha": "fba638b0b2b97cdafabfe60f3bab594675b33e4a", "filename": "src/test/ui/const-generics/issues/issue-56445.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.stderr?ref=62392966a3937362146d7228444c8d843d972857", "patch": "@@ -0,0 +1,20 @@\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-56445.rs:3:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n+\n+error[E0771]: use of non-static lifetime `'a` in const generic\n+  --> $DIR/issue-56445.rs:9:26\n+   |\n+LL | struct Bug<'a, const S: &'a str>(PhantomData<&'a ()>);\n+   |                          ^^\n+   |\n+   = note: for more information, see issue #74052 <https://github.com/rust-lang/rust/issues/74052>\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0771`."}, {"sha": "dee5a41f6de375d30f06611cc23677ea8770498f", "filename": "src/test/ui/impl-trait/issue-72911.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.rs?ref=62392966a3937362146d7228444c8d843d972857", "patch": "@@ -0,0 +1,22 @@\n+// Regression test for #72911.\n+\n+pub struct Lint {}\n+\n+impl Lint {}\n+\n+pub fn gather_all() -> impl Iterator<Item = Lint> {\n+    //~^ ERROR: cannot resolve opaque type\n+    lint_files().flat_map(|f| gather_from_file(&f))\n+}\n+\n+fn gather_from_file(dir_entry: &foo::MissingItem) -> impl Iterator<Item = Lint> {\n+    //~^ ERROR: failed to resolve\n+    unimplemented!()\n+}\n+\n+fn lint_files() -> impl Iterator<Item = foo::MissingItem> {\n+    //~^ ERROR: failed to resolve\n+    unimplemented!()\n+}\n+\n+fn main() {}"}, {"sha": "b28142b916c77ae91fd1fa371a7ee7a589229f82", "filename": "src/test/ui/impl-trait/issue-72911.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62392966a3937362146d7228444c8d843d972857/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-72911.stderr?ref=62392966a3937362146d7228444c8d843d972857", "patch": "@@ -0,0 +1,34 @@\n+error[E0433]: failed to resolve: use of undeclared type or module `foo`\n+  --> $DIR/issue-72911.rs:12:33\n+   |\n+LL | fn gather_from_file(dir_entry: &foo::MissingItem) -> impl Iterator<Item = Lint> {\n+   |                                 ^^^ use of undeclared type or module `foo`\n+\n+error[E0433]: failed to resolve: use of undeclared type or module `foo`\n+  --> $DIR/issue-72911.rs:17:41\n+   |\n+LL | fn lint_files() -> impl Iterator<Item = foo::MissingItem> {\n+   |                                         ^^^ use of undeclared type or module `foo`\n+\n+error[E0720]: cannot resolve opaque type\n+  --> $DIR/issue-72911.rs:7:24\n+   |\n+LL | pub fn gather_all() -> impl Iterator<Item = Lint> {\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ recursive opaque type\n+LL |\n+LL |     lint_files().flat_map(|f| gather_from_file(&f))\n+   |     -----------------------------------------------\n+   |     |\n+   |     returning here with type `std::iter::FlatMap<impl std::iter::Iterator, [type error], [closure@$DIR/issue-72911.rs:9:27: 9:51]>`\n+   |     returning here with type `std::iter::FlatMap<impl std::iter::Iterator, [type error], [closure@$DIR/issue-72911.rs:9:27: 9:51]>`\n+...\n+LL | fn gather_from_file(dir_entry: &foo::MissingItem) -> impl Iterator<Item = Lint> {\n+   |                                                      -------------------------- returning this opaque type `std::iter::FlatMap<impl std::iter::Iterator, [type error], [closure@$DIR/issue-72911.rs:9:27: 9:51]>`\n+...\n+LL | fn lint_files() -> impl Iterator<Item = foo::MissingItem> {\n+   |                    -------------------------------------- returning this opaque type `std::iter::FlatMap<impl std::iter::Iterator, [type error], [closure@$DIR/issue-72911.rs:9:27: 9:51]>`\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0433, E0720.\n+For more information about an error, try `rustc --explain E0433`."}]}