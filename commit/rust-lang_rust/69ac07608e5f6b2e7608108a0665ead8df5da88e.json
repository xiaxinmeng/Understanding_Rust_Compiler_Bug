{"sha": "69ac07608e5f6b2e7608108a0665ead8df5da88e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YWMwNzYwOGU1ZjZiMmU3NjA4MTA4YTA2NjVlYWQ4ZGY1ZGE4OGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-15T23:30:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-15T23:30:42Z"}, "message": "Rollup merge of #76198 - CDirkx:const-ordering, r=dtolnay\n\nMake some Ordering methods const\n\nResubmission of [PR#75463](https://github.com/rust-lang/rust/pull/75463) as per [PR#76172](https://github.com/rust-lang/rust/pull/76172).\n\nConstify the following methods of `core::cmp::Ordering`:\n - `reverse`\n - `then`\n\nInsta-stabilizes these methods as const under the `const_ordering` feature, as their implementation is a trivial match and the recent stabilization of #49146 (Allow `if` and `match` in constants).\nNote: the `const_ordering` feature has never actually been used as these methods have not been `#[rustc_const_unstable]`.\n\nTracking issue:  #76113", "tree": {"sha": "9cd30c93e5424bf64e20d9f2f001c89cec4c56b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd30c93e5424bf64e20d9f2f001c89cec4c56b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69ac07608e5f6b2e7608108a0665ead8df5da88e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfYU6iCRBK7hj4Ov3rIwAAdHIIAKO8R8DvCuwCu9xnecYGyi0S\nwzFHqUuuHbj9s6/z5CuNLFA5M2k883zhzId5NfcKReg+UYOBHagzX5WzKcGWNBGL\nFM1YZzUOiZQzGYWRYGYeRaiw5UxR9httXsYAxZe7eOrZPi4rfy9VyvKdCmjmOkaw\nvNXitovXUtClLK1irdNosvJsnbZcr0EhN4tZRwiZlUNQRChQt6uMBqSA3PBY9bFU\n6C5p7OGSEDc+G135s9ImP8my1NyFGhb7rqwJoAtSbHkE+A4SnadwlXwMYafVTEJJ\n401Ljk+G2e9ovlC4WVnG7r2a8kWNiEg+WWfo5GFrccDtAPyedOQlJcAY+lLOru4=\n=xvyj\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cd30c93e5424bf64e20d9f2f001c89cec4c56b6\nparent db228987ac3ff97cf243bca20213179a4127e649\nparent 79d563c819483eaf6e67b6aaaef9d0ca6030337d\nauthor Dylan DPC <dylan.dpc@gmail.com> 1600212642 +0200\ncommitter GitHub <noreply@github.com> 1600212642 +0200\n\nRollup merge of #76198 - CDirkx:const-ordering, r=dtolnay\n\nMake some Ordering methods const\n\nResubmission of [PR#75463](https://github.com/rust-lang/rust/pull/75463) as per [PR#76172](https://github.com/rust-lang/rust/pull/76172).\n\nConstify the following methods of `core::cmp::Ordering`:\n - `reverse`\n - `then`\n\nInsta-stabilizes these methods as const under the `const_ordering` feature, as their implementation is a trivial match and the recent stabilization of #49146 (Allow `if` and `match` in constants).\nNote: the `const_ordering` feature has never actually been used as these methods have not been `#[rustc_const_unstable]`.\n\nTracking issue:  #76113\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69ac07608e5f6b2e7608108a0665ead8df5da88e", "html_url": "https://github.com/rust-lang/rust/commit/69ac07608e5f6b2e7608108a0665ead8df5da88e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69ac07608e5f6b2e7608108a0665ead8df5da88e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db228987ac3ff97cf243bca20213179a4127e649", "url": "https://api.github.com/repos/rust-lang/rust/commits/db228987ac3ff97cf243bca20213179a4127e649", "html_url": "https://github.com/rust-lang/rust/commit/db228987ac3ff97cf243bca20213179a4127e649"}, {"sha": "79d563c819483eaf6e67b6aaaef9d0ca6030337d", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d563c819483eaf6e67b6aaaef9d0ca6030337d", "html_url": "https://github.com/rust-lang/rust/commit/79d563c819483eaf6e67b6aaaef9d0ca6030337d"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "dde442aa7b52de84c2a3810c6627c70fb99f6295", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/69ac07608e5f6b2e7608108a0665ead8df5da88e/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ac07608e5f6b2e7608108a0665ead8df5da88e/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=69ac07608e5f6b2e7608108a0665ead8df5da88e", "patch": "@@ -356,8 +356,9 @@ impl Ordering {\n     /// ```\n     #[inline]\n     #[must_use]\n+    #[rustc_const_stable(feature = \"const_ordering\", since = \"1.48.0\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn reverse(self) -> Ordering {\n+    pub const fn reverse(self) -> Ordering {\n         match self {\n             Less => Greater,\n             Equal => Equal,\n@@ -394,8 +395,9 @@ impl Ordering {\n     /// ```\n     #[inline]\n     #[must_use]\n+    #[rustc_const_stable(feature = \"const_ordering\", since = \"1.48.0\")]\n     #[stable(feature = \"ordering_chaining\", since = \"1.17.0\")]\n-    pub fn then(self, other: Ordering) -> Ordering {\n+    pub const fn then(self, other: Ordering) -> Ordering {\n         match self {\n             Equal => other,\n             _ => self,"}, {"sha": "835289daf715adf936723f10b62f145248491640", "filename": "library/core/tests/cmp.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/69ac07608e5f6b2e7608108a0665ead8df5da88e/library%2Fcore%2Ftests%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ac07608e5f6b2e7608108a0665ead8df5da88e/library%2Fcore%2Ftests%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fcmp.rs?ref=69ac07608e5f6b2e7608108a0665ead8df5da88e", "patch": "@@ -1,4 +1,7 @@\n-use core::cmp::{self, Ordering::*};\n+use core::cmp::{\n+    self,\n+    Ordering::{self, *},\n+};\n \n #[test]\n fn test_int_totalord() {\n@@ -116,3 +119,16 @@ fn test_user_defined_eq() {\n     assert!(SketchyNum { num: 37 } == SketchyNum { num: 34 });\n     assert!(SketchyNum { num: 25 } != SketchyNum { num: 57 });\n }\n+\n+#[test]\n+fn ordering_const() {\n+    // test that the methods of `Ordering` are usable in a const context\n+\n+    const ORDERING: Ordering = Greater;\n+\n+    const REVERSE: Ordering = ORDERING.reverse();\n+    assert_eq!(REVERSE, Less);\n+\n+    const THEN: Ordering = Equal.then(ORDERING);\n+    assert_eq!(THEN, Greater);\n+}"}]}