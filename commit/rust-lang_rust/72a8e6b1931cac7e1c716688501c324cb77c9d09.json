{"sha": "72a8e6b1931cac7e1c716688501c324cb77c9d09", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYThlNmIxOTMxY2FjN2UxYzcxNjY4ODUwMWMzMjRjYjc3YzlkMDk=", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-03-27T14:48:10Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2020-09-25T13:09:16Z"}, "message": "Adding checks for module level assembly", "tree": {"sha": "378fdb504feaae5bd3e56b3b8e094c4180d94d4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/378fdb504feaae5bd3e56b3b8e094c4180d94d4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72a8e6b1931cac7e1c716688501c324cb77c9d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72a8e6b1931cac7e1c716688501c324cb77c9d09", "html_url": "https://github.com/rust-lang/rust/commit/72a8e6b1931cac7e1c716688501c324cb77c9d09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72a8e6b1931cac7e1c716688501c324cb77c9d09/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8a7904e06e77baf137b6713f9bf79f74ae6edfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a7904e06e77baf137b6713f9bf79f74ae6edfe", "html_url": "https://github.com/rust-lang/rust/commit/d8a7904e06e77baf137b6713f9bf79f74ae6edfe"}], "stats": {"total": 124, "additions": 115, "deletions": 9}, "files": [{"sha": "e839c200bbb96a5feb5399cfba92b5ff3f5293c6", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/cc_plus_one_asm.checks", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_asm.checks", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_asm.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcc_plus_one_asm.checks?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -0,0 +1,8 @@\n+CHECK: cc_plus_one_asm\n+CHECK-NEXT: movl\n+CHECK-NEXT: lfence\n+CHECK-NEXT: inc\n+CHECK-NEXT: notq (%rsp)\n+CHECK-NEXT: notq (%rsp)\n+CHECK-NEXT: lfence\n+CHECK-NEXT: retq"}, {"sha": "78b18ccbfcb31f0e742b64ffc8bedf661f17356c", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/cmake_plus_one_asm.checks", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_asm.checks", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_asm.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_asm.checks?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -0,0 +1,7 @@\n+CHECK: cmake_plus_one_asm\n+CHECK-NEXT: movl\n+CHECK-NEXT: lfence\n+CHECK-NEXT: incl\n+CHECK-NEXT: shlq    $0, (%rsp)\n+CHECK-NEXT: lfence\n+CHECK-NEXT: retq"}, {"sha": "4b66cc5bc83b5136d7db5856dac5e75248e9617b", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/cmake_plus_one_c_global_asm.checks", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_c_global_asm.checks", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_c_global_asm.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_c_global_asm.checks?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -0,0 +1,2 @@\n+CHECK: cmake_plus_one_c_global_asm\n+CHECK: lfence"}, {"sha": "d4a3d4479014cf7269fc92576be2dbd312793b1c", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/cmake_plus_one_cxx_global_asm.checks", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_cxx_global_asm.checks", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_cxx_global_asm.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fcmake_plus_one_cxx_global_asm.checks?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -0,0 +1,2 @@\n+CHECK: cmake_plus_one_cxx_global_asm\n+CHECK: lfence"}, {"sha": "3a7aa1be868c9e919e5acad0337addce73ca4011", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/build.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fbuild.rs?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -3,6 +3,10 @@ fn main() {\n         .file(\"foo.c\")\n         .compile(\"foo_c\");\n \n+    cc::Build::new()\n+        .file(\"foo_asm.s\")\n+        .compile(\"foo_asm\");\n+\n     cc::Build::new()\n         .cpp(true)\n         .cpp_set_stdlib(None)"}, {"sha": "6d56214e87ed9dc79adf20edddf6f2ee4fb993c5", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/foo_asm.s", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Ffoo_asm.s", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Ffoo_asm.s", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Ffoo_asm.s?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -0,0 +1,7 @@\n+    .text\n+    .global cc_plus_one_asm\n+    .type cc_plus_one_asm, @function\n+cc_plus_one_asm:\n+    movl (%rdi), %eax\n+    inc %eax\n+    retq"}, {"sha": "27cdf2ecf826d08400494c5d4663ce84968cca8b", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/libcmake_foo/CMakeLists.txt", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2FCMakeLists.txt", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2FCMakeLists.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2FCMakeLists.txt?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -1,4 +1,33 @@\n-add_library(cmake_foo STATIC\n+enable_language(C CXX ASM)\n+\n+set(C_SOURCES\n     src/foo.c\n+    )\n+\n+set_source_files_properties(${C_SOURCES}\n+                            PROPERTIES\n+                            LANGUAGE C)\n+\n+set(CXX_SOURCES\n     src/foo_cxx.cpp\n-)\n+    )\n+\n+set_source_files_properties(${CXX_SOURCES}\n+                            PROPERTIES\n+                            LANGUAGE CXX)\n+\n+set(ASM_SOURCES\n+    src/foo_asm.s\n+    )\n+\n+set_source_files_properties(${ASM_SOURCES}\n+                            PROPERTIES\n+                            LANGUAGE ASM)\n+\n+set(SOURCES\n+    ${C_SOURCES}\n+    ${CXX_SOURCES}\n+    ${ASM_SOURCES})\n+        \n+add_library(cmake_foo STATIC\n+    ${SOURCES})"}, {"sha": "e3a8fcdf414acb1dd66229d1583a1cdb3c693689", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/libcmake_foo/src/foo.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo.c?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -15,3 +15,11 @@ int cmake_plus_one_c_asm(int *arg) {\n \n     return value;\n }\n+\n+asm(\".text\\n\"\n+\"    .global cmake_plus_one_c_global_asm\\n\"\n+\"    .type cmake_plus_one_c_global_asm, @function\\n\"\n+\"cmake_plus_one_c_global_asm:\\n\"\n+\"    movl (%rdi), %eax\\n\"\n+\"    inc %eax\\n\"\n+\"    retq\\n\" );"}, {"sha": "64b6b430eeaa1cdb0972ce8704d12c40ab9c39eb", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/libcmake_foo/src/foo_asm.s", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo_asm.s", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo_asm.s", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo_asm.s?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -0,0 +1,7 @@\n+    .text\n+    .global cmake_plus_one_asm\n+    .type cmake_plus_one_asm, @function\n+cmake_plus_one_asm:\n+    movl (%rdi), %eax\n+    inc %eax\n+    retq"}, {"sha": "a1a7b29d8c17b245bc886ad751d37f5b7f05e643", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/libcmake_foo/src/foo_cxx.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo_cxx.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo_cxx.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Flibcmake_foo%2Fsrc%2Ffoo_cxx.cpp?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -18,3 +18,11 @@ int cmake_plus_one_cxx_asm(int *arg) {\n \n     return value;\n }\n+\n+asm(\".text\\n\"\n+\"    .global cmake_plus_one_cxx_global_asm\\n\"\n+\"    .type cmake_plus_one_cxx_global_asm, @function\\n\"\n+\"cmake_plus_one_cxx_global_asm:\\n\"\n+\"    movl (%rdi), %eax\\n\"\n+\"    inc %eax\\n\"\n+\"    retq\\n\" );"}, {"sha": "697ab29a59c9a3515ad92ef4a3a24cc7bdb9e40d", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/enclave/src/main.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fenclave%2Fsrc%2Fmain.rs?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -1,26 +1,47 @@\n+#![feature(global_asm)]\n+\n+global_asm!( r#\"\n+    .text\n+    .global rust_plus_one_global_asm\n+    .type rust_plus_one_global_asm, @function\n+rust_plus_one_global_asm:\n+    movl (%rdi), %eax\n+    inc %eax\n+    retq\n+\"# );\n+\n extern {\n     fn cc_plus_one_c(arg : &u32) -> u32;\n     fn cc_plus_one_c_asm(arg : &u32) -> u32;\n     fn cc_plus_one_cxx(arg : &u32) -> u32;\n     fn cc_plus_one_cxx_asm(arg : &u32) -> u32;\n+    fn cc_plus_one_asm(arg : &u32) -> u32;\n     fn cmake_plus_one_c(arg : &u32) -> u32;\n     fn cmake_plus_one_c_asm(arg : &u32) -> u32;\n     fn cmake_plus_one_cxx(arg : &u32) -> u32;\n     fn cmake_plus_one_cxx_asm(arg : &u32) -> u32;\n+    fn cmake_plus_one_c_global_asm(arg : &u32) -> u32;\n+    fn cmake_plus_one_cxx_global_asm(arg : &u32) -> u32;\n+    fn cmake_plus_one_asm(arg : &u32) -> u32;\n+    fn rust_plus_one_global_asm(arg : &u32) -> u32;\n }\n \n fn main() {\n     let value : u32 = 41;\n     \n     unsafe{\n+        println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", rust_plus_one_global_asm(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_c(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_c_asm(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_cxx(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_cxx_asm(&value));\n-        \n+        println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cc_plus_one_asm(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cmake_plus_one_c(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cmake_plus_one_c_asm(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cmake_plus_one_cxx(&value));\n         println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cmake_plus_one_cxx_asm(&value));\n+        println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cmake_plus_one_c_global_asm(&value));\n+        println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cmake_plus_one_cxx_global_asm(&value));\n+        println!(\"Answer to the Ultimate Question of Life, the Universe, and Everything: {}!\", cmake_plus_one_asm(&value));\n     }\n }"}, {"sha": "fe6777537fb80375666f51e8542626dbb408317f", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/rust_plus_one_global_asm.checks", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Frust_plus_one_global_asm.checks", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Frust_plus_one_global_asm.checks", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Frust_plus_one_global_asm.checks?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -0,0 +1,2 @@\n+CHECK: rust_plus_one_global_asm\n+CHECK: lfence"}, {"sha": "9f151b34c91784f9453db692468509b2a75c0f85", "filename": "src/test/run-make/x86_64-fortanix-unknown-sgx-lvi/script.sh", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "raw_url": "https://github.com/rust-lang/rust/raw/72a8e6b1931cac7e1c716688501c324cb77c9d09/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fx86_64-fortanix-unknown-sgx-lvi%2Fscript.sh?ref=72a8e6b1931cac7e1c716688501c324cb77c9d09", "patch": "@@ -9,7 +9,6 @@ function build {\n         cp -a $TEST_DIR/enclave .\n         pushd $CRATE\n             echo ${WORK_DIR}\n-            hardening_flags=\"-mlvi-hardening -mllvm -x86-lvi-load-inline-asm\"\n             # HACK(eddyb) sets `RUSTC_BOOTSTRAP=1` so Cargo can accept nightly features.\n             # These come from the top-level Rust workspace, that this crate is not a\n             # member of, but Cargo tries to load the workspace `Cargo.toml` anyway.\n@@ -39,17 +38,19 @@ build\n #check \"libunwind::Registers_x86_64::jumpto()\" jumpto.checks\n \n check \"std::io::stdio::_print::h87f0c238421c45bc\" print.checks\n-#TODO: the current passes cannot handle module level assembly!\n-#  No checks are implemented\n+check rust_plus_one_global_asm rust_plus_one_global_asm.checks || echo \"warning: module level assembly currently not hardened\"\n+\n check cc_plus_one_c cc_plus_one_c.checks\n check cc_plus_one_c_asm cc_plus_one_c_asm.checks\n check cc_plus_one_cxx cc_plus_one_cxx.checks\n check cc_plus_one_cxx_asm cc_plus_one_cxx_asm.checks\n+check cc_plus_one_asm cc_plus_one_asm.checks || echo \"warning: the cc crate forwards assembly files to the CC compiler.\\\n+ Clang uses its own intergrated assembler, which does not include the LVI passes.\"\n \n check cmake_plus_one_c cmake_plus_one_c.checks\n check cmake_plus_one_c_asm cmake_plus_one_c_asm.checks\n+check cmake_plus_one_c_global_asm cmake_plus_one_c_global_asm.checks || echo \"warning: module level assembly currently not hardened\"\n check cmake_plus_one_cxx cmake_plus_one_cxx.checks\n check cmake_plus_one_cxx_asm cmake_plus_one_cxx_asm.checks\n-\n-#WARNING clang/clang++ use an integrated assembler when given an assembly file.\n-#  LVI patches are *not* applied\n+check cmake_plus_one_cxx_global_asm cmake_plus_one_cxx_global_asm.checks || echo \"warning: module level assembly currently not hardened\"\n+check cmake_plus_one_asm cmake_plus_one_asm.checks"}]}