{"sha": "d61d30d9a272f8c2cce374a6f8aca5ae5d3de124", "node_id": "C_kwDOAAsO6NoAKGQ2MWQzMGQ5YTI3MmY4YzJjY2UzNzRhNmY4YWNhNWFlNWQzZGUxMjQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-24T21:14:41Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-24T22:22:13Z"}, "message": "Minor improvement on else-no-if diagnostic", "tree": {"sha": "0cc1974c7a036becda06814f32a6206d079140f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cc1974c7a036becda06814f32a6206d079140f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124", "html_url": "https://github.com/rust-lang/rust/commit/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa70b89d19a52be0dea03022d807a3e615763727", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa70b89d19a52be0dea03022d807a3e615763727", "html_url": "https://github.com/rust-lang/rust/commit/fa70b89d19a52be0dea03022d807a3e615763727"}], "stats": {"total": 21, "additions": 3, "deletions": 18}, "files": [{"sha": "bb6d892138a3848f39b405fb84c61a70f3765d96", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=d61d30d9a272f8c2cce374a6f8aca5ae5d3de124", "patch": "@@ -2291,16 +2291,9 @@ impl<'a> Parser<'a> {\n                         .span_label(else_span, \"expected an `if` or a block after this `else`\")\n                         .span_suggestion(\n                             cond.span.shrink_to_lo(),\n-                            \"add an `if` if this is the condition to an chained `if` statement after the `else`\",\n+                            \"add an `if` if this is the condition of a chained `else if` statement\",\n                             \"if \".to_string(),\n                             Applicability::MaybeIncorrect,\n-                        ).multipart_suggestion(\n-                            \"... otherwise, place this expression inside of a block if it is not an `if` condition\",\n-                            vec![\n-                                (cond.span.shrink_to_lo(), \"{ \".to_string()),\n-                                (cond.span.shrink_to_hi(), \" }\".to_string()),\n-                            ],\n-                            Applicability::MaybeIncorrect,\n                         )\n                         .emit();\n                     self.parse_if_after_cond(AttrVec::new(), cond.span.shrink_to_lo(), cond)?"}, {"sha": "b9c1a75276c1fcbeb3e6e68ce06589d0e67194d9", "filename": "src/test/ui/parser/else-no-if.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124/src%2Ftest%2Fui%2Fparser%2Felse-no-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d61d30d9a272f8c2cce374a6f8aca5ae5d3de124/src%2Ftest%2Fui%2Fparser%2Felse-no-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Felse-no-if.stderr?ref=d61d30d9a272f8c2cce374a6f8aca5ae5d3de124", "patch": "@@ -6,14 +6,10 @@ LL |     } else false {\n    |       |\n    |       expected an `if` or a block after this `else`\n    |\n-help: add an `if` if this is the condition to an chained `if` statement after the `else`\n+help: add an `if` if this is the condition of a chained `else if` statement\n    |\n LL |     } else if false {\n    |            ++\n-help: ... otherwise, place this expression inside of a block if it is not an `if` condition\n-   |\n-LL |     } else { false } {\n-   |            +       +\n \n error: expected `{`, found `falsy`\n   --> $DIR/else-no-if.rs:10:12\n@@ -23,14 +19,10 @@ LL |     } else falsy() {\n    |       |\n    |       expected an `if` or a block after this `else`\n    |\n-help: add an `if` if this is the condition to an chained `if` statement after the `else`\n+help: add an `if` if this is the condition of a chained `else if` statement\n    |\n LL |     } else if falsy() {\n    |            ++\n-help: ... otherwise, place this expression inside of a block if it is not an `if` condition\n-   |\n-LL |     } else { falsy() } {\n-   |            +         +\n \n error: expected `{`, found `falsy`\n   --> $DIR/else-no-if.rs:17:12"}]}