{"sha": "2e3eaca0fab10bc7495dd04652462071a82dfd31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlM2VhY2EwZmFiMTBiYzc0OTVkZDA0NjUyNDYyMDcxYTgyZGZkMzE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-11T07:25:44Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-11T07:25:44Z"}, "message": "Please tidy", "tree": {"sha": "117a74a9f4df7135add01afd6d05ae68d39fc6ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/117a74a9f4df7135add01afd6d05ae68d39fc6ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e3eaca0fab10bc7495dd04652462071a82dfd31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e3eaca0fab10bc7495dd04652462071a82dfd31", "html_url": "https://github.com/rust-lang/rust/commit/2e3eaca0fab10bc7495dd04652462071a82dfd31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e3eaca0fab10bc7495dd04652462071a82dfd31/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54db165f8e7a8cd37414039e8ed76ae115f5563e", "url": "https://api.github.com/repos/rust-lang/rust/commits/54db165f8e7a8cd37414039e8ed76ae115f5563e", "html_url": "https://github.com/rust-lang/rust/commit/54db165f8e7a8cd37414039e8ed76ae115f5563e"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "9d28e2f496dfc0b4a8be06779ff5a4a45e0a33fa", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e3eaca0fab10bc7495dd04652462071a82dfd31/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e3eaca0fab10bc7495dd04652462071a82dfd31/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=2e3eaca0fab10bc7495dd04652462071a82dfd31", "patch": "@@ -1213,7 +1213,9 @@ impl<'a, 'tcx> Visitor<'tcx> for YieldFinder<'a> {\n impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     /// Checks whether the given code extent contains a `yield`. If so,\n     /// returns `Some(span)` with the span of a yield we found.\n-    pub fn yield_in_extent(self, extent: CodeExtent, cache: &mut FxHashMap<NodeId, Option<Span>>) -> Option<Span> {\n+    pub fn yield_in_extent(self,\n+                          extent: CodeExtent,\n+                          cache: &mut FxHashMap<NodeId, Option<Span>>) -> Option<Span> {\n         let mut finder = YieldFinder {\n             cache,\n             result: None,"}, {"sha": "6484572d2243c0fd85ce8c002a30d8d629b42d45", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2e3eaca0fab10bc7495dd04652462071a82dfd31/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e3eaca0fab10bc7495dd04652462071a82dfd31/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=2e3eaca0fab10bc7495dd04652462071a82dfd31", "patch": "@@ -1893,7 +1893,9 @@ impl<'tcx> TypeFoldable<'tcx> for Rvalue<'tcx> {\n                     AggregateKind::Closure(id, substs) =>\n                         AggregateKind::Closure(id, substs.fold_with(folder)),\n                     AggregateKind::Generator(id, substs, interior) =>\n-                        AggregateKind::Generator(id, substs.fold_with(folder), interior.fold_with(folder)),\n+                        AggregateKind::Generator(id,\n+                                                 substs.fold_with(folder),\n+                                                 interior.fold_with(folder)),\n                 };\n                 Aggregate(kind, fields.fold_with(folder))\n             }"}, {"sha": "5bfcf77cda89fcbc632e916ff984b0b5d9cc0b63", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e3eaca0fab10bc7495dd04652462071a82dfd31/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e3eaca0fab10bc7495dd04652462071a82dfd31/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=2e3eaca0fab10bc7495dd04652462071a82dfd31", "patch": "@@ -32,7 +32,11 @@ impl<'a, 'gcx, 'tcx> InteriorVisitor<'a, 'gcx, 'tcx> {\n     fn record(&mut self, ty: Ty<'tcx>, scope: Option<CodeExtent>, expr: Option<&'tcx Expr>) {\n         use syntax_pos::DUMMY_SP;\n \n-        if scope.map(|s| self.fcx.tcx.yield_in_extent(s, &mut self.cache).is_some()).unwrap_or(true) {\n+        let live_across_yield = scope.map(|s| {\n+            self.fcx.tcx.yield_in_extent(s, &mut self.cache).is_some()\n+        }).unwrap_or(true);\n+\n+        if live_across_yield {\n             if log_enabled!(log::LogLevel::Debug) {\n                 if let Some(s) = scope {\n                     let span = s.span(&self.fcx.tcx.hir).unwrap_or(DUMMY_SP);"}]}