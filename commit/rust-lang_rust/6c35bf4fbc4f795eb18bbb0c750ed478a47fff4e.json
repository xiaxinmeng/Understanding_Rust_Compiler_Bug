{"sha": "6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMzViZjRmYmM0Zjc5NWViMThiYmIwYzc1MGVkNDc4YTQ3ZmZmNGU=", "commit": {"author": {"name": "defuz", "email": "defuz.net@gmail.com", "date": "2015-02-28T09:01:28Z"}, "committer": {"name": "defuz", "email": "defuz.net@gmail.com", "date": "2015-02-28T09:01:28Z"}, "message": "FIX #21475: Expr_::ExprPath with two fields", "tree": {"sha": "2e7efd70e196030fa08c3340723bbff4a40f23a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e7efd70e196030fa08c3340723bbff4a40f23a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e", "html_url": "https://github.com/rust-lang/rust/commit/6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e/comments", "author": {"login": "defuz", "id": 276041, "node_id": "MDQ6VXNlcjI3NjA0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/276041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defuz", "html_url": "https://github.com/defuz", "followers_url": "https://api.github.com/users/defuz/followers", "following_url": "https://api.github.com/users/defuz/following{/other_user}", "gists_url": "https://api.github.com/users/defuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/defuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defuz/subscriptions", "organizations_url": "https://api.github.com/users/defuz/orgs", "repos_url": "https://api.github.com/users/defuz/repos", "events_url": "https://api.github.com/users/defuz/events{/privacy}", "received_events_url": "https://api.github.com/users/defuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "defuz", "id": 276041, "node_id": "MDQ6VXNlcjI3NjA0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/276041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defuz", "html_url": "https://github.com/defuz", "followers_url": "https://api.github.com/users/defuz/followers", "following_url": "https://api.github.com/users/defuz/following{/other_user}", "gists_url": "https://api.github.com/users/defuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/defuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defuz/subscriptions", "organizations_url": "https://api.github.com/users/defuz/orgs", "repos_url": "https://api.github.com/users/defuz/repos", "events_url": "https://api.github.com/users/defuz/events{/privacy}", "received_events_url": "https://api.github.com/users/defuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84c25721e097e52fa77903881f73fe55890da0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84c25721e097e52fa77903881f73fe55890da0d", "html_url": "https://github.com/rust-lang/rust/commit/f84c25721e097e52fa77903881f73fe55890da0d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9a265cb592d9c5401e27ec41125ce3dba2b35ba1", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6c35bf4fbc4f795eb18bbb0c750ed478a47fff4e", "patch": "@@ -3541,12 +3541,12 @@ impl<'a> Parser<'a> {\n                     }\n                     token::DotDotDot => {\n                         let hi = self.last_span.hi;\n-                        let start = self.mk_expr(lo, hi, ExprPath(enum_path));\n+                        let start = self.mk_expr(lo, hi, ExprPath(None, enum_path));\n                         self.eat(&token::DotDotDot);\n                         let end = if self.token.is_ident() || self.token.is_path() {\n                             let path = self.parse_path(LifetimeAndTypesWithColons);\n                             let hi = self.span.hi;\n-                            self.mk_expr(lo, hi, ExprPath(path))\n+                            self.mk_expr(lo, hi, ExprPath(None, path))\n                         } else {\n                             self.parse_literal_maybe_minus()\n                         };"}]}