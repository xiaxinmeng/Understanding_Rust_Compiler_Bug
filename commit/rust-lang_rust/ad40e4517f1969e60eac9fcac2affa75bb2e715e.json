{"sha": "ad40e4517f1969e60eac9fcac2affa75bb2e715e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNDBlNDUxN2YxOTY5ZTYwZWFjOWZjYWMyYWZmYTc1YmIyZTcxNWU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-21T22:30:02Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-31T17:37:21Z"}, "message": "Provide warnings for invalid code blocks in markdown files\n\nPreviously we would only warn on Rust code but we can also do so when\ntesting markdown (the diag::Handler is available).", "tree": {"sha": "15da583e6275a8b4297d366a3468286c63dfd079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15da583e6275a8b4297d366a3468286c63dfd079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad40e4517f1969e60eac9fcac2affa75bb2e715e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad40e4517f1969e60eac9fcac2affa75bb2e715e", "html_url": "https://github.com/rust-lang/rust/commit/ad40e4517f1969e60eac9fcac2affa75bb2e715e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad40e4517f1969e60eac9fcac2affa75bb2e715e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0af5a6be0531a1ad038bd150239847cb4acc5026", "url": "https://api.github.com/repos/rust-lang/rust/commits/0af5a6be0531a1ad038bd150239847cb4acc5026", "html_url": "https://github.com/rust-lang/rust/commit/0af5a6be0531a1ad038bd150239847cb4acc5026"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "0774ce34718fba7e4f78da7fc5da6bad051f98f9", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad40e4517f1969e60eac9fcac2affa75bb2e715e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad40e4517f1969e60eac9fcac2affa75bb2e715e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=ad40e4517f1969e60eac9fcac2affa75bb2e715e", "patch": "@@ -27,7 +27,6 @@\n \n #![allow(non_camel_case_types)]\n \n-use rustc::session;\n use std::cell::RefCell;\n use std::collections::{HashMap, VecDeque};\n use std::default::Default;\n@@ -37,6 +36,7 @@ use std::ops::Range;\n use std::str;\n use syntax::feature_gate::UnstableFeatures;\n use syntax::codemap::Span;\n+use errors;\n \n use html::render::derive_id;\n use html::toc::TocBuilder;\n@@ -470,7 +470,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for Footnotes<'a, I> {\n }\n \n pub fn find_testable_code(doc: &str, tests: &mut ::test::Collector, position: Span,\n-                          sess: Option<&session::Session>) {\n+                          handler: &errors::Handler) {\n     tests.set_position(position);\n \n     let is_nightly = UnstableFeatures::from_environment().is_nightly_build();\n@@ -521,9 +521,7 @@ pub fn find_testable_code(doc: &str, tests: &mut ::test::Collector, position: Sp\n                                    line, filename, block_info.allow_fail);\n                     prev_offset = offset;\n                 } else {\n-                    if let Some(ref sess) = sess {\n-                        sess.span_warn(position, \"invalid start of a new code block\");\n-                    }\n+                    handler.span_warn(position, \"invalid start of a new code block\");\n                     break;\n                 }\n             }"}, {"sha": "82489e9fbdbf47e15da0044575f0a3a2d1629bf5", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad40e4517f1969e60eac9fcac2affa75bb2e715e/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad40e4517f1969e60eac9fcac2affa75bb2e715e/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=ad40e4517f1969e60eac9fcac2affa75bb2e715e", "patch": "@@ -156,7 +156,7 @@ pub fn test(input: &str, cfgs: Vec<String>, libs: SearchPaths, externs: Externs,\n                                        true, opts, maybe_sysroot, None,\n                                        Some(PathBuf::from(input)),\n                                        linker, edition);\n-    find_testable_code(&input_str, &mut collector, DUMMY_SP, None);\n+    find_testable_code(&input_str, &mut collector, DUMMY_SP, diag);\n     test_args.insert(0, \"rustdoctest\".to_string());\n     testing::test_main(&test_args, collector.tests,\n                        testing::Options::new().display_output(display_warnings));"}, {"sha": "a6667e177285890cb8ad1c317278031525cf0897", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad40e4517f1969e60eac9fcac2affa75bb2e715e/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad40e4517f1969e60eac9fcac2affa75bb2e715e/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=ad40e4517f1969e60eac9fcac2affa75bb2e715e", "patch": "@@ -692,7 +692,7 @@ impl<'a, 'hir> HirCollector<'a, 'hir> {\n             markdown::find_testable_code(&doc,\n                                          self.collector,\n                                          attrs.span.unwrap_or(DUMMY_SP),\n-                                         Some(self.sess));\n+                                         self.sess.diagnostic());\n         }\n \n         nested(self);"}]}