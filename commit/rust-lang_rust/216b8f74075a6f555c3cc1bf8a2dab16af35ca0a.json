{"sha": "216b8f74075a6f555c3cc1bf8a2dab16af35ca0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNmI4Zjc0MDc1YTZmNTU1YzNjYzFiZjhhMmRhYjE2YWYzNWNhMGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-15T21:47:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-16T08:27:19Z"}, "message": "shim some Windows functions", "tree": {"sha": "1b0d69c39d650a4e360b5f5f6dbf614b53d8caa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b0d69c39d650a4e360b5f5f6dbf614b53d8caa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/216b8f74075a6f555c3cc1bf8a2dab16af35ca0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/216b8f74075a6f555c3cc1bf8a2dab16af35ca0a", "html_url": "https://github.com/rust-lang/rust/commit/216b8f74075a6f555c3cc1bf8a2dab16af35ca0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/216b8f74075a6f555c3cc1bf8a2dab16af35ca0a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9396310317481963aeb0aa44d8f54911e94f8a1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9396310317481963aeb0aa44d8f54911e94f8a1d", "html_url": "https://github.com/rust-lang/rust/commit/9396310317481963aeb0aa44d8f54911e94f8a1d"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "de40ef943a559b76fa3c5182f32a6605d7ccc5e0", "filename": "src/fn_call.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/216b8f74075a6f555c3cc1bf8a2dab16af35ca0a/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216b8f74075a6f555c3cc1bf8a2dab16af35ca0a/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=216b8f74075a6f555c3cc1bf8a2dab16af35ca0a", "patch": "@@ -623,11 +623,24 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n             }\n \n             // Windows API subs\n-            \"AddVectoredExceptionHandler\" |\n-            \"SetThreadStackGuarantee\" => {\n-                let usize = self.tcx.types.usize;\n+            \"AddVectoredExceptionHandler\" => {\n                 // any non zero value works for the stdlib. This is just used for stackoverflows anyway\n-                self.write_scalar(dest, Scalar::from_u128(1), usize)?;\n+                self.write_scalar(dest, Scalar::from_u128(1), dest_ty)?;\n+            },\n+            \"GetModuleHandleW\" |\n+            \"GetProcAddress\" |\n+            \"InitializeCriticalSection\" |\n+            \"EnterCriticalSection\" |\n+            \"TryEnterCriticalSection\" |\n+            \"LeaveCriticalSection\" |\n+            \"DeleteCriticalSection\" |\n+            \"SetLastError\" => {\n+                // pretend these do not exist/nothing happened, by returning zero\n+                self.write_scalar(dest, Scalar::from_u128(0), dest_ty)?;\n+            },\n+            \"GetLastError\" => {\n+                // this is c::ERROR_CALL_NOT_IMPLEMENTED\n+                self.write_scalar(dest, Scalar::from_u128(120), dest_ty)?;\n             },\n \n             // We can't execute anything else"}]}