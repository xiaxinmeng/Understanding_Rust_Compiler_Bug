{"sha": "81f2e449d7b31652e08722f85d44dcc1b31694c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZjJlNDQ5ZDdiMzE2NTJlMDg3MjJmODVkNDRkY2MxYjMxNjk0YzY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-08-16T04:43:59Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-08-19T20:11:14Z"}, "message": "Handle span error with `continue`\n\nThis should be properly addressed by #184, but requires a change to the rustc parser, so this patch just works around the issue.", "tree": {"sha": "6871f391662b36daafc5e298a88f2d6efd7369f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6871f391662b36daafc5e298a88f2d6efd7369f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81f2e449d7b31652e08722f85d44dcc1b31694c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81f2e449d7b31652e08722f85d44dcc1b31694c6", "html_url": "https://github.com/rust-lang/rust/commit/81f2e449d7b31652e08722f85d44dcc1b31694c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81f2e449d7b31652e08722f85d44dcc1b31694c6/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae1eec81af19fae54b7417148f841675d2ccf770", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1eec81af19fae54b7417148f841675d2ccf770", "html_url": "https://github.com/rust-lang/rust/commit/ae1eec81af19fae54b7417148f841675d2ccf770"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "2e526895e25329c2192abd92143be510c1179fa5", "filename": "src/expr.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/81f2e449d7b31652e08722f85d44dcc1b31694c6/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f2e449d7b31652e08722f85d44dcc1b31694c6/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=81f2e449d7b31652e08722f85d44dcc1b31694c6", "patch": "@@ -105,6 +105,16 @@ impl Rewrite for ast::Expr {\n             ast::Expr_::ExprPath(ref qself, ref path) => {\n                 rewrite_path(context, qself.as_ref(), path, width, offset)\n             }\n+            // FIXME #184 Note that this formatting is broken due to a bad span\n+            // from the parser.\n+            // `continue`\n+            ast::Expr_::ExprAgain(ref opt_ident) => {\n+                let id_str = match *opt_ident {\n+                    Some(ident) => format!(\" {}\", ident),\n+                    None => String::new(),\n+                };\n+                Some(format!(\"continue{}\", id_str))\n+            }\n             _ => context.codemap.span_to_snippet(self.span).ok(),\n         }\n     }"}, {"sha": "11d9e76bac83026583305f1e7d7919623ee1796f", "filename": "src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/81f2e449d7b31652e08722f85d44dcc1b31694c6/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f2e449d7b31652e08722f85d44dcc1b31694c6/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=81f2e449d7b31652e08722f85d44dcc1b31694c6", "patch": "@@ -11,7 +11,8 @@\n #![feature(rustc_private)]\n #![feature(str_escape)]\n #![feature(str_char)]\n-\n+#![feature(custom_attribute)]\n+#![allow(unused_attributes)]\n \n // TODO we're going to allocate a whole bunch of temp Strings, is it worth\n // keeping some scratch mem for this and running our own StrPool?\n@@ -227,6 +228,8 @@ fn fmt_ast(krate: &ast::Crate, codemap: &CodeMap, config: &Config) -> FileMap {\n // Formatting done on a char by char or line by line basis.\n // TODO warn on bad license\n // TODO other stuff for parity with make tidy\n+// FIXME skipping due to `continue`, #184.\n+#[rustfmt_skip]\n fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n     let mut truncate_todo = Vec::new();\n     let mut report = FormatReport { file_error_map: HashMap::new() };"}, {"sha": "c7f7da71831be088d022f2297afb3d81ff8300dc", "filename": "tests/source/loop.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81f2e449d7b31652e08722f85d44dcc1b31694c6/tests%2Fsource%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f2e449d7b31652e08722f85d44dcc1b31694c6/tests%2Fsource%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Floop.rs?ref=81f2e449d7b31652e08722f85d44dcc1b31694c6", "patch": "@@ -21,5 +21,8 @@ let x = loop { do_forever(); };\n     while let  Some(i) =     x.find('s')\n     {\n         x.update();\n+        // FIXME #184\n+        // continue;\n+        // continue 'foo;\n     }\n }"}, {"sha": "648fe826e8f4aa7567a87e71da13703308f9c1be", "filename": "tests/target/loop.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81f2e449d7b31652e08722f85d44dcc1b31694c6/tests%2Ftarget%2Floop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81f2e449d7b31652e08722f85d44dcc1b31694c6/tests%2Ftarget%2Floop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Floop.rs?ref=81f2e449d7b31652e08722f85d44dcc1b31694c6", "patch": "@@ -25,5 +25,8 @@ fn main() {\n \n     while let Some(i) = x.find('s') {\n         x.update();\n+        // FIXME #184\n+        // continue;\n+        // continue 'foo;\n     }\n }"}]}