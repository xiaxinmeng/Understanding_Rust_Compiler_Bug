{"sha": "0a1b87c9ce295030a373cc4e37cac7e89294903f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMWI4N2M5Y2UyOTUwMzBhMzczY2M0ZTM3Y2FjN2U4OTI5NDkwM2Y=", "commit": {"author": {"name": "Erin Power", "email": "erin.power@embark-studios.com", "date": "2021-04-30T16:46:59Z"}, "committer": {"name": "Erin Power", "email": "erin.power@embark-studios.com", "date": "2021-04-30T16:46:59Z"}, "message": "Merge commit '15c8d31392b9fbab3b3368b67acc4bbe5983115a' into cranelift-rebase", "tree": {"sha": "5dc25acd20dfa877b6274781dd10a79cfb8fd408", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dc25acd20dfa877b6274781dd10a79cfb8fd408"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a1b87c9ce295030a373cc4e37cac7e89294903f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a1b87c9ce295030a373cc4e37cac7e89294903f", "html_url": "https://github.com/rust-lang/rust/commit/0a1b87c9ce295030a373cc4e37cac7e89294903f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a1b87c9ce295030a373cc4e37cac7e89294903f/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df68e5ac73f23e1006b811bdc50b8c2ede0e0bbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/df68e5ac73f23e1006b811bdc50b8c2ede0e0bbf", "html_url": "https://github.com/rust-lang/rust/commit/df68e5ac73f23e1006b811bdc50b8c2ede0e0bbf"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "d1251e749f31fe90687312a9ff7837d7a0149d9b", "filename": "src/debuginfo/unwind.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0a1b87c9ce295030a373cc4e37cac7e89294903f/src%2Fdebuginfo%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a1b87c9ce295030a373cc4e37cac7e89294903f/src%2Fdebuginfo%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Funwind.rs?ref=0a1b87c9ce295030a373cc4e37cac7e89294903f", "patch": "@@ -71,7 +71,10 @@ impl UnwindContext {\n         }\n     }\n \n-    #[cfg(feature = \"jit\")]\n+    #[cfg(all(feature = \"jit\", windows))]\n+    pub(crate) unsafe fn register_jit(self, _jit_module: &cranelift_jit::JITModule) {}\n+\n+    #[cfg(all(feature = \"jit\", not(windows)))]\n     pub(crate) unsafe fn register_jit(self, jit_module: &cranelift_jit::JITModule) {\n         let mut eh_frame = EhFrame::from(super::emit::WriterRelocate::new(self.endian));\n         self.frame_table.write_eh_frame(&mut eh_frame).unwrap();"}]}