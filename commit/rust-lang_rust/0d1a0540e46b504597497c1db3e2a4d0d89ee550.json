{"sha": "0d1a0540e46b504597497c1db3e2a4d0d89ee550", "node_id": "C_kwDOAAsO6NoAKDBkMWEwNTQwZTQ2YjUwNDU5NzQ5N2MxZGIzZTJhNGQwZDg5ZWU1NTA", "commit": {"author": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2023-03-22T12:04:55Z"}, "committer": {"name": "Raoul Strackx", "email": "raoul.strackx@fortanix.com", "date": "2023-03-22T13:01:30Z"}, "message": "Bugfix: avoid panic on invalid json output from libtest", "tree": {"sha": "37fc55fd536f2b11051a318049c2c1c410e64f2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37fc55fd536f2b11051a318049c2c1c410e64f2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d1a0540e46b504597497c1db3e2a4d0d89ee550", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1a0540e46b504597497c1db3e2a4d0d89ee550", "html_url": "https://github.com/rust-lang/rust/commit/0d1a0540e46b504597497c1db3e2a4d0d89ee550", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d1a0540e46b504597497c1db3e2a4d0d89ee550/comments", "author": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raoulstrackx", "id": 56830709, "node_id": "MDQ6VXNlcjU2ODMwNzA5", "avatar_url": "https://avatars.githubusercontent.com/u/56830709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raoulstrackx", "html_url": "https://github.com/raoulstrackx", "followers_url": "https://api.github.com/users/raoulstrackx/followers", "following_url": "https://api.github.com/users/raoulstrackx/following{/other_user}", "gists_url": "https://api.github.com/users/raoulstrackx/gists{/gist_id}", "starred_url": "https://api.github.com/users/raoulstrackx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raoulstrackx/subscriptions", "organizations_url": "https://api.github.com/users/raoulstrackx/orgs", "repos_url": "https://api.github.com/users/raoulstrackx/repos", "events_url": "https://api.github.com/users/raoulstrackx/events{/privacy}", "received_events_url": "https://api.github.com/users/raoulstrackx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bdb4881c7e6061fa8acdbb3ddfcd2dd7e11cc89", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bdb4881c7e6061fa8acdbb3ddfcd2dd7e11cc89", "html_url": "https://github.com/rust-lang/rust/commit/9bdb4881c7e6061fa8acdbb3ddfcd2dd7e11cc89"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "19019ad2c089dc0f73bbd65f320857f83aa674fe", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0d1a0540e46b504597497c1db3e2a4d0d89ee550/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1a0540e46b504597497c1db3e2a4d0d89ee550/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=0d1a0540e46b504597497c1db3e2a4d0d89ee550", "patch": "@@ -100,18 +100,13 @@ impl<'a> Renderer<'a> {\n                 break;\n             }\n \n-            let trimmed = line.trim();\n-            if trimmed.starts_with(\"{\") && trimmed.ends_with(\"}\") {\n-                self.render_message(match serde_json::from_str(&trimmed) {\n-                    Ok(parsed) => parsed,\n-                    Err(err) => {\n-                        panic!(\"failed to parse libtest json output; error: {err}, line: {line:?}\");\n-                    }\n-                });\n-            } else {\n-                // Handle non-JSON output, for example when --nocapture is passed.\n-                print!(\"{line}\");\n-                let _ = std::io::stdout().flush();\n+            match serde_json::from_str(&line) {\n+                Ok(parsed) => self.render_message(parsed),\n+                Err(_err) => {\n+                    // Handle non-JSON output, for example when --nocapture is passed.\n+                    print!(\"{line}\");\n+                    let _ = std::io::stdout().flush();\n+                }\n             }\n         }\n     }"}]}