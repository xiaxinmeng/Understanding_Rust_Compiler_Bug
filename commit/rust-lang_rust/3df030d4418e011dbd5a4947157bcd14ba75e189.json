{"sha": "3df030d4418e011dbd5a4947157bcd14ba75e189", "node_id": "C_kwDOAAsO6NoAKDNkZjAzMGQ0NDE4ZTAxMWRiZDVhNDk0NzE1N2JjZDE0YmE3NWUxODk", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-23T21:48:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-23T21:48:15Z"}, "message": "Rollup merge of #103140 - chenyukang:yukang/fix-103112, r=estebank\n\nAdd diagnostic for calling a function with the same name with unresolved Macro\n\nFixes #103112", "tree": {"sha": "8838b06be404c650b933e8e0d3524efe6c13980b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8838b06be404c650b933e8e0d3524efe6c13980b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df030d4418e011dbd5a4947157bcd14ba75e189", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjVbafCRBK7hj4Ov3rIwAA4wMIADcqWDtC5tB8mvWVv6dqseUO\nwAkGC/4Dl0//jGIhoYOSPvDb0vzoOlx4Pec2qXY3UELJjVYZsVlRA3a3dy3WzbIY\nPzrKiDPpjoLm8NWvK/5APCeaYmYVoHvkCdHJFpZAq1YeI4aCMuhMz+h5d/0OXry9\nGQfBnNPo4xwhAqtOfKkZUtI35bdtJmaPruIhNvneiMvfGV/rA2pHoG3DGBCTOCC9\ngvkqKXY98lx1aZafwS5XBomsE0n7P9xZPZ3Oq0Dum9D6ImJus6RAKwEdQHfjZgXM\n3N9QaUPLKYpd5DtCXIzba3Lc/tcta6jUuX/GKlfL59BB2mvjAw6x93MSFId4rOY=\n=5ybD\n-----END PGP SIGNATURE-----\n", "payload": "tree 8838b06be404c650b933e8e0d3524efe6c13980b\nparent 23d1b057260c9a3c3520d97922589f5013988de0\nparent f90bf50d475eb9240c5bdeef3102c235335180c4\nauthor Michael Howell <michael@notriddle.com> 1666561695 -0700\ncommitter GitHub <noreply@github.com> 1666561695 -0700\n\nRollup merge of #103140 - chenyukang:yukang/fix-103112, r=estebank\n\nAdd diagnostic for calling a function with the same name with unresolved Macro\n\nFixes #103112\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df030d4418e011dbd5a4947157bcd14ba75e189", "html_url": "https://github.com/rust-lang/rust/commit/3df030d4418e011dbd5a4947157bcd14ba75e189", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df030d4418e011dbd5a4947157bcd14ba75e189/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23d1b057260c9a3c3520d97922589f5013988de0", "url": "https://api.github.com/repos/rust-lang/rust/commits/23d1b057260c9a3c3520d97922589f5013988de0", "html_url": "https://github.com/rust-lang/rust/commit/23d1b057260c9a3c3520d97922589f5013988de0"}, {"sha": "f90bf50d475eb9240c5bdeef3102c235335180c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f90bf50d475eb9240c5bdeef3102c235335180c4", "html_url": "https://github.com/rust-lang/rust/commit/f90bf50d475eb9240c5bdeef3102c235335180c4"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "9526296f9511530119db79663bd07f0f61099300", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3df030d4418e011dbd5a4947157bcd14ba75e189/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df030d4418e011dbd5a4947157bcd14ba75e189/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=3df030d4418e011dbd5a4947157bcd14ba75e189", "patch": "@@ -12,7 +12,7 @@ use rustc_attr::StabilityLevel;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::intern::Interned;\n use rustc_data_structures::sync::Lrc;\n-use rustc_errors::struct_span_err;\n+use rustc_errors::{struct_span_err, Applicability};\n use rustc_expand::base::{Annotatable, DeriveResolutions, Indeterminate, ResolverExpand};\n use rustc_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::compile_declarative_macro;\n@@ -694,7 +694,19 @@ impl<'a> Resolver<'a> {\n                     check_consistency(self, &path, path_span, kind, initial_res, res)\n                 }\n                 path_res @ PathResult::NonModule(..) | path_res @ PathResult::Failed { .. } => {\n+                    let mut suggestion = None;\n                     let (span, label) = if let PathResult::Failed { span, label, .. } = path_res {\n+                        // try to suggest if it's not a macro, maybe a function\n+                        if let PathResult::NonModule(partial_res) = self.maybe_resolve_path(&path, Some(ValueNS), &parent_scope)\n+                            && partial_res.unresolved_segments() == 0 {\n+                            let sm = self.session.source_map();\n+                            let exclamation_span = sm.next_point(span);\n+                            suggestion = Some((\n+                                vec![(exclamation_span, \"\".to_string())],\n+                                    format!(\"{} is not a macro, but a {}, try to remove `!`\", Segment::names_to_string(&path), partial_res.base_res().descr()),\n+                                    Applicability::MaybeIncorrect\n+                                ));\n+                        }\n                         (span, label)\n                     } else {\n                         (\n@@ -708,7 +720,7 @@ impl<'a> Resolver<'a> {\n                     };\n                     self.report_error(\n                         span,\n-                        ResolutionError::FailedToResolve { label, suggestion: None },\n+                        ResolutionError::FailedToResolve { label, suggestion },\n                     );\n                 }\n                 PathResult::Module(..) | PathResult::Indeterminate => unreachable!(),"}, {"sha": "111ae7c73080d3eab5df9bdfa5b6f98f58510117", "filename": "src/test/ui/suggestions/issue-103112.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3df030d4418e011dbd5a4947157bcd14ba75e189/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df030d4418e011dbd5a4947157bcd14ba75e189/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.rs?ref=3df030d4418e011dbd5a4947157bcd14ba75e189", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    std::process::abort!();\n+    //~^ ERROR: failed to resolve\n+}"}, {"sha": "4ca7fdf9b5a2a585692830efc1b59064268f4f32", "filename": "src/test/ui/suggestions/issue-103112.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3df030d4418e011dbd5a4947157bcd14ba75e189/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3df030d4418e011dbd5a4947157bcd14ba75e189/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-103112.stderr?ref=3df030d4418e011dbd5a4947157bcd14ba75e189", "patch": "@@ -0,0 +1,15 @@\n+error[E0433]: failed to resolve: could not find `abort` in `process`\n+  --> $DIR/issue-103112.rs:2:19\n+   |\n+LL |     std::process::abort!();\n+   |                   ^^^^^ could not find `abort` in `process`\n+   |\n+help: std::process::abort is not a macro, but a function, try to remove `!`\n+   |\n+LL -     std::process::abort!();\n+LL +     std::process::abort();\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}]}