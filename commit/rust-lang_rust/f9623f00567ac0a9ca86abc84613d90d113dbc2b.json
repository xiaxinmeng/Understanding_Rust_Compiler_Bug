{"sha": "f9623f00567ac0a9ca86abc84613d90d113dbc2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NjIzZjAwNTY3YWMwYTljYTg2YWJjODQ2MTNkOTBkMTEzZGJjMmI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T06:54:26Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T19:14:07Z"}, "message": "Remove vecs from std::sha1", "tree": {"sha": "391a0c071c9f1dc4071ffdceb41abfe77e480fa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391a0c071c9f1dc4071ffdceb41abfe77e480fa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9623f00567ac0a9ca86abc84613d90d113dbc2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9623f00567ac0a9ca86abc84613d90d113dbc2b", "html_url": "https://github.com/rust-lang/rust/commit/f9623f00567ac0a9ca86abc84613d90d113dbc2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9623f00567ac0a9ca86abc84613d90d113dbc2b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "235109f8d21727748dd70fa2e2763eb050161ab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/235109f8d21727748dd70fa2e2763eb050161ab0", "html_url": "https://github.com/rust-lang/rust/commit/235109f8d21727748dd70fa2e2763eb050161ab0"}], "stats": {"total": 25, "additions": 6, "deletions": 19}, "files": [{"sha": "97076f8b5d0bdaba689eba07ebee3b065f2d96d6", "filename": "src/lib/sha1.rs", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f9623f00567ac0a9ca86abc84613d90d113dbc2b/src%2Flib%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9623f00567ac0a9ca86abc84613d90d113dbc2b/src%2Flib%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fsha1.rs?ref=f9623f00567ac0a9ca86abc84613d90d113dbc2b", "patch": "@@ -25,11 +25,9 @@ type sha1 =\n     // Reset the sha1 state for reuse. This is called\n     // automatically during construction\n     obj {\n-        fn input(&vec[u8]) ;\n-        fn input_ivec(&[u8]) ;\n+        fn input(&[u8]) ;\n         fn input_str(&str) ;\n-        fn result() -> vec[u8] ;\n-        fn result_ivec() -> [u8] ;\n+        fn result() -> [u8] ;\n         fn result_str() -> str ;\n         fn reset() ;\n     };\n@@ -239,20 +237,9 @@ fn mk_sha1() -> sha1 {\n             st.h.(4) = 0xC3D2E1F0u32;\n             st.computed = false;\n         }\n-        fn input(msg: &vec[u8]) {\n-            let m = ~[];\n-            for b: u8  in msg { m += ~[b]; }\n-            add_input(st, m);\n-        }\n-        fn input_ivec(msg: &[u8]) { add_input(st, msg); }\n+        fn input(msg: &[u8]) { add_input(st, msg); }\n         fn input_str(msg: &str) { add_input(st, str::bytes(msg)); }\n-        fn result() -> vec[u8] {\n-            let rivec = mk_result(st);\n-            let rvec = [];\n-            for b: u8  in rivec { rvec += [b]; }\n-            ret rvec;\n-        }\n-        fn result_ivec() -> [u8] { ret mk_result(st); }\n+        fn result() -> [u8] { ret mk_result(st); }\n         fn result_str() -> str {\n             let r = mk_result(st);\n             let s = \"\";"}, {"sha": "7afd5e5bfab4d00b281834b745ec28753eee793e", "filename": "src/test/stdtest/sha1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9623f00567ac0a9ca86abc84613d90d113dbc2b/src%2Ftest%2Fstdtest%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9623f00567ac0a9ca86abc84613d90d113dbc2b/src%2Ftest%2Fstdtest%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fsha1.rs?ref=f9623f00567ac0a9ca86abc84613d90d113dbc2b", "patch": "@@ -76,7 +76,7 @@ fn test() {\n     let sh = sha1::mk_sha1();\n     for t: test  in tests {\n         sh.input_str(t.input);\n-        let out = sh.result_ivec();\n+        let out = sh.result();\n         check_vec_eq(t.output, out);\n         sh.reset();\n     }\n@@ -91,7 +91,7 @@ fn test() {\n             sh.input_str(str::substr(t.input, len - left, take));\n             left = left - take;\n         }\n-        let out = sh.result_ivec();\n+        let out = sh.result();\n         check_vec_eq(t.output, out);\n         sh.reset();\n     }"}]}