{"sha": "ec131b6c7bd27d9034ed5e600b80420d35c00a21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMTMxYjZjN2JkMjdkOTAzNGVkNWU2MDBiODA0MjBkMzVjMDBhMjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-06T18:19:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-06T18:19:32Z"}, "message": "grammar: fix where clause parsing\n\ncloses #205", "tree": {"sha": "b0007b25088335b70d1f7109824fdaeaec08a6eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0007b25088335b70d1f7109824fdaeaec08a6eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec131b6c7bd27d9034ed5e600b80420d35c00a21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec131b6c7bd27d9034ed5e600b80420d35c00a21", "html_url": "https://github.com/rust-lang/rust/commit/ec131b6c7bd27d9034ed5e600b80420d35c00a21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec131b6c7bd27d9034ed5e600b80420d35c00a21/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dafe747dcc069084fc8bc771c5dcf72e7cb9ec23", "url": "https://api.github.com/repos/rust-lang/rust/commits/dafe747dcc069084fc8bc771c5dcf72e7cb9ec23", "html_url": "https://github.com/rust-lang/rust/commit/dafe747dcc069084fc8bc771c5dcf72e7cb9ec23"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "f4c98675c6c74c3d480ce00465a8907cb3af0060", "filename": "crates/ra_syntax/src/grammar/type_params.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec131b6c7bd27d9034ed5e600b80420d35c00a21/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec131b6c7bd27d9034ed5e600b80420d35c00a21/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=ec131b6c7bd27d9034ed5e600b80420d35c00a21", "patch": "@@ -135,7 +135,11 @@ fn where_predicate(p: &mut Parser) {\n             if p.at(FOR_KW) {\n                 types::for_binder(p);\n             }\n-            types::path_type(p);\n+            if paths::is_path_start(p) || p.at(L_ANGLE) {\n+                types::path_type_(p, false);\n+            } else {\n+                p.error(\"expected a type\");\n+            }\n             if p.at(COLON) {\n                 bounds(p);\n             } else {"}, {"sha": "2792c20843a832c051b0206c2a30b15cf5de264d", "filename": "crates/ra_syntax/tests/data/parser/err/0027_incomplere_where_for.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec131b6c7bd27d9034ed5e600b80420d35c00a21/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0027_incomplere_where_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec131b6c7bd27d9034ed5e600b80420d35c00a21/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0027_incomplere_where_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0027_incomplere_where_for.rs?ref=ec131b6c7bd27d9034ed5e600b80420d35c00a21", "patch": "@@ -0,0 +1,3 @@\n+fn foo()\n+    where for<'a>\n+{}"}, {"sha": "94b75a6568011c781bb600c8ccdacb8248d7925f", "filename": "crates/ra_syntax/tests/data/parser/err/0027_incomplere_where_for.txt", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ec131b6c7bd27d9034ed5e600b80420d35c00a21/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0027_incomplere_where_for.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ec131b6c7bd27d9034ed5e600b80420d35c00a21/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0027_incomplere_where_for.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0027_incomplere_where_for.txt?ref=ec131b6c7bd27d9034ed5e600b80420d35c00a21", "patch": "@@ -0,0 +1,27 @@\n+ROOT@[0; 30)\n+  FN_DEF@[0; 29)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 13)\n+    WHERE_CLAUSE@[13; 26)\n+      WHERE_KW@[13; 18)\n+      WHITESPACE@[18; 19)\n+      WHERE_PRED@[19; 26)\n+        FOR_KW@[19; 22)\n+        TYPE_PARAM_LIST@[22; 26)\n+          L_ANGLE@[22; 23)\n+          LIFETIME_PARAM@[23; 25)\n+            LIFETIME@[23; 25) \"'a\"\n+          R_ANGLE@[25; 26)\n+          err: `expected a type`\n+          err: `expected colon`\n+    WHITESPACE@[26; 27)\n+    BLOCK@[27; 29)\n+      L_CURLY@[27; 28)\n+      R_CURLY@[28; 29)\n+  WHITESPACE@[29; 30)"}]}