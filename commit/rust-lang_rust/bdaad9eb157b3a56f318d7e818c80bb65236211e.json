{"sha": "bdaad9eb157b3a56f318d7e818c80bb65236211e", "node_id": "C_kwDOAAsO6NoAKGJkYWFkOWViMTU3YjNhNTZmMzE4ZDdlODE4YzgwYmI2NTIzNjIxMWU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-09T14:26:48Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-01-09T14:26:48Z"}, "message": "Make `qualify_method_call` `RefactorRewrite`", "tree": {"sha": "1306efe58722bb71d5c7237d78723b337ca82170", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1306efe58722bb71d5c7237d78723b337ca82170"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdaad9eb157b3a56f318d7e818c80bb65236211e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdaad9eb157b3a56f318d7e818c80bb65236211e", "html_url": "https://github.com/rust-lang/rust/commit/bdaad9eb157b3a56f318d7e818c80bb65236211e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdaad9eb157b3a56f318d7e818c80bb65236211e/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae659125a509967f09665b96d06f6ce6bf1ddd1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae659125a509967f09665b96d06f6ce6bf1ddd1b", "html_url": "https://github.com/rust-lang/rust/commit/ae659125a509967f09665b96d06f6ce6bf1ddd1b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e7014597a1d8b0daaae8cd4f7ed3a76c15e08ee5", "filename": "crates/ide-assists/src/handlers/qualify_method_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdaad9eb157b3a56f318d7e818c80bb65236211e/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fqualify_method_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdaad9eb157b3a56f318d7e818c80bb65236211e/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fqualify_method_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fqualify_method_call.rs?ref=bdaad9eb157b3a56f318d7e818c80bb65236211e", "patch": "@@ -53,7 +53,7 @@ pub(crate) fn qualify_method_call(acc: &mut Assists, ctx: &AssistContext<'_>) ->\n     let qualify_candidate = QualifyCandidate::ImplMethod(ctx.sema.db, call, resolved_call);\n \n     acc.add(\n-        AssistId(\"qualify_method_call\", AssistKind::RefactorInline),\n+        AssistId(\"qualify_method_call\", AssistKind::RefactorRewrite),\n         format!(\"Qualify `{ident}` method call\"),\n         range,\n         |builder| {"}]}