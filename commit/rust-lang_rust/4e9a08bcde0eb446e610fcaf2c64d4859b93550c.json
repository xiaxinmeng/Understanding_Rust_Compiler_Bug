{"sha": "4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlOWEwOGJjZGUwZWI0NDZlNjEwZmNhZjJjNjRkNDg1OWI5MzU1MGM=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-05-31T09:53:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-31T09:53:48Z"}, "message": "Merge pull request #2825 from Nemo157/test-toml\n\nGet compile-test tests for configuration working", "tree": {"sha": "70f3d349261b98621698ea8e210e28860ecda9ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70f3d349261b98621698ea8e210e28860ecda9ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbD8YsCRBK7hj4Ov3rIwAAdHIIAJ8jhVBnQkl/QmYjdgy+jquJ\nJjB6+ossi8bvUy3KTwU/57SdxerB6QpwurQ+Xfal2JwPzBouKz+Lqy4/cicUDKoB\n+1TtauDsZH1ZRYfXzFGfv5PwzT4bkKQRujCDLhnt/w5dthem1rdVFzbuZfTEo3r3\nxCmnPoHIedZj7SvSSp3pLjbCeu76F65mmyF5ZNVMq0msrgG+aGq1f/FD1Tzv0r/H\nEkKC1p7pB0iomOsi09UQRyDvwq5H45h8E+y8IeRcAxq0b9/U3fgkDKpY+5HYefud\ns17qT7WNaeOT+gBNA+g41whhIfq1tFPpt3TUgTBkytrSkMUC3M4I9UHbhi2Kseo=\n=RqGl\n-----END PGP SIGNATURE-----\n", "payload": "tree 70f3d349261b98621698ea8e210e28860ecda9ed\nparent bb2f6a5011f938023d0ead64a746e0fa82f91ee6\nparent edcb8f6976457b4a42a1788a908ff19bc93c6632\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1527760428 +0200\ncommitter GitHub <noreply@github.com> 1527760428 +0200\n\nMerge pull request #2825 from Nemo157/test-toml\n\nGet compile-test tests for configuration working"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "html_url": "https://github.com/rust-lang/rust/commit/4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb2f6a5011f938023d0ead64a746e0fa82f91ee6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb2f6a5011f938023d0ead64a746e0fa82f91ee6", "html_url": "https://github.com/rust-lang/rust/commit/bb2f6a5011f938023d0ead64a746e0fa82f91ee6"}, {"sha": "edcb8f6976457b4a42a1788a908ff19bc93c6632", "url": "https://api.github.com/repos/rust-lang/rust/commits/edcb8f6976457b4a42a1788a908ff19bc93c6632", "html_url": "https://github.com/rust-lang/rust/commit/edcb8f6976457b4a42a1788a908ff19bc93c6632"}], "stats": {"total": 203, "additions": 197, "deletions": 6}, "files": [{"sha": "236cce0dbb7ccca1fe9dda389a3bb73429436c75", "filename": "tests/compile-test.rs", "status": "modified", "additions": 61, "deletions": 6, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "patch": "@@ -3,6 +3,9 @@\n extern crate compiletest_rs as compiletest;\n extern crate test;\n \n+use std::io;\n+use std::ffi::OsStr;\n+use std::fs;\n use std::env::{set_var, var};\n use std::path::{Path, PathBuf};\n \n@@ -30,7 +33,7 @@ fn rustc_lib_path() -> PathBuf {\n     option_env!(\"RUSTC_LIB_PATH\").unwrap().into()\n }\n \n-fn config(dir: &'static str, mode: &'static str) -> compiletest::Config {\n+fn config(mode: &str, dir: PathBuf) -> compiletest::Config {\n     let mut config = compiletest::Config::default();\n \n     let cfg_mode = mode.parse().expect(\"Invalid mode\");\n@@ -56,13 +59,64 @@ fn config(dir: &'static str, mode: &'static str) -> compiletest::Config {\n         path.push(\"target/debug/test_build_base\");\n         path\n     };\n-    config.src_base = PathBuf::from(format!(\"tests/{}\", dir));\n+    config.src_base = dir;\n     config.rustc_path = clippy_driver_path();\n     config\n }\n \n-fn run_mode(dir: &'static str, mode: &'static str) {\n-    compiletest::run_tests(&config(dir, mode));\n+fn run_mode(mode: &str, dir: PathBuf) {\n+    compiletest::run_tests(&config(mode, dir));\n+}\n+\n+fn run_ui_toml_tests(config: &compiletest::Config, mut tests: Vec<test::TestDescAndFn>) -> Result<bool, io::Error> {\n+    let mut result = true;\n+    let opts = compiletest::test_opts(config);\n+    for dir in fs::read_dir(&config.src_base)? {\n+        let dir = dir?;\n+        if !dir.file_type()?.is_dir() {\n+            continue;\n+        }\n+        let dir_path = dir.path();\n+        set_var(\"CARGO_MANIFEST_DIR\", &dir_path);\n+        for file in fs::read_dir(&dir_path)? {\n+            let file = file?;\n+            let file_path = file.path();\n+            if !file.file_type()?.is_file() {\n+                continue;\n+            }\n+            if file_path.extension() != Some(OsStr::new(\"rs\")) {\n+                continue;\n+            }\n+            let paths = compiletest::common::TestPaths {\n+                file: file_path,\n+                base: config.src_base.clone(),\n+                relative_dir: dir_path.file_name().unwrap().into(),\n+            };\n+            let test_name = compiletest::make_test_name(&config, &paths);\n+            let index = tests.iter()\n+                .position(|test| test.desc.name == test_name)\n+                .expect(\"The test should be in there\");\n+            result &= test::run_tests_console(\n+                &opts,\n+                vec![tests.swap_remove(index)])?;\n+        }\n+    }\n+    Ok(result)\n+}\n+\n+fn run_ui_toml() {\n+    let path = PathBuf::from(\"tests/ui-toml\").canonicalize().unwrap();\n+    let config = config(\"ui\", path);\n+    let tests = compiletest::make_tests(&config);\n+\n+    let res = run_ui_toml_tests(&config, tests);\n+    match res {\n+        Ok(true) => {}\n+        Ok(false) => panic!(\"Some tests failed\"),\n+        Err(e) => {\n+            println!(\"I/O failure during tests: {:?}\", e);\n+        }\n+    }\n }\n \n fn prepare_env() {\n@@ -74,6 +128,7 @@ fn prepare_env() {\n #[test]\n fn compile_test() {\n     prepare_env();\n-    run_mode(\"run-pass\", \"run-pass\");\n-    run_mode(\"ui\", \"ui\");\n+    run_mode(\"run-pass\", \"tests/run-pass\".into());\n+    run_mode(\"ui\", \"tests/ui\".into());\n+    run_ui_toml();\n }"}, {"sha": "823e01a33b96172e13855c6c023599f2852e71f9", "filename": "tests/ui-toml/bad_toml/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml%2Fclippy.toml?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/bad_toml/clippy.toml"}, {"sha": "325688ac7daa9a041077bb7172c4a2f949d5da12", "filename": "tests/ui-toml/bad_toml/conf_bad_toml.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/bad_toml/conf_bad_toml.rs"}, {"sha": "85b3ef8612edd4fdd9a95561e523a15119c4eb88", "filename": "tests/ui-toml/bad_toml/conf_bad_toml.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.stderr?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "patch": "@@ -0,0 +1,4 @@\n+error: error reading Clippy's configuration file `$DIR/clippy.toml`: expected an equals, found an identifier at line 1\n+\n+error: aborting due to previous error\n+"}, {"sha": "168675394d7f45124940fcfa3433aab378c1fbd8", "filename": "tests/ui-toml/bad_toml_type/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml_type%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml_type%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml_type%2Fclippy.toml?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/bad_toml_type/clippy.toml"}, {"sha": "f97f5802b1330cd94fcdf8eea5d761ddbf1caa45", "filename": "tests/ui-toml/bad_toml_type/conf_bad_type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/bad_toml_type/conf_bad_type.rs"}, {"sha": "efd02bcbb6e28968bdb1e227e74a4190289c1110", "filename": "tests/ui-toml/bad_toml_type/conf_bad_type.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.stderr?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "patch": "@@ -0,0 +1,4 @@\n+error: error reading Clippy's configuration file `$DIR/clippy.toml`: invalid type: integer `42`, expected a sequence\n+\n+error: aborting due to previous error\n+"}, {"sha": "6abe5a3bbc2737feba84d51919176142eb8c7fd4", "filename": "tests/ui-toml/toml_blacklist/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_blacklist%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_blacklist%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fclippy.toml?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/toml_blacklist/clippy.toml"}, {"sha": "1f1a8ee91a1827b7f8a8fdaeaa10a27446e51e03", "filename": "tests/ui-toml/toml_blacklist/conf_french_blacklisted_name.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/toml_blacklist/conf_french_blacklisted_name.rs"}, {"sha": "b2b0f26b1405a2205977bfd1fdc190e058e103d4", "filename": "tests/ui-toml/toml_blacklist/conf_french_blacklisted_name.stderr", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "patch": "@@ -0,0 +1,46 @@\n+error: use of a blacklisted/placeholder name `toto`\n+ --> $DIR/conf_french_blacklisted_name.rs:9:9\n+  |\n+9 | fn test(toto: ()) {}\n+  |         ^^^^\n+  |\n+  = note: `-D blacklisted-name` implied by `-D warnings`\n+\n+error: use of a blacklisted/placeholder name `toto`\n+  --> $DIR/conf_french_blacklisted_name.rs:12:9\n+   |\n+12 |     let toto = 42;\n+   |         ^^^^\n+\n+error: use of a blacklisted/placeholder name `tata`\n+  --> $DIR/conf_french_blacklisted_name.rs:13:9\n+   |\n+13 |     let tata = 42;\n+   |         ^^^^\n+\n+error: use of a blacklisted/placeholder name `titi`\n+  --> $DIR/conf_french_blacklisted_name.rs:14:9\n+   |\n+14 |     let titi = 42;\n+   |         ^^^^\n+\n+error: use of a blacklisted/placeholder name `toto`\n+  --> $DIR/conf_french_blacklisted_name.rs:20:10\n+   |\n+20 |         (toto, Some(tata), titi @ Some(_)) => (),\n+   |          ^^^^\n+\n+error: use of a blacklisted/placeholder name `tata`\n+  --> $DIR/conf_french_blacklisted_name.rs:20:21\n+   |\n+20 |         (toto, Some(tata), titi @ Some(_)) => (),\n+   |                     ^^^^\n+\n+error: use of a blacklisted/placeholder name `titi`\n+  --> $DIR/conf_french_blacklisted_name.rs:20:28\n+   |\n+20 |         (toto, Some(tata), titi @ Some(_)) => (),\n+   |                            ^^^^\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "554b87cc50be176bd8cb1920fbc26b11d0e557a0", "filename": "tests/ui-toml/toml_unknown_key/clippy.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_unknown_key%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_unknown_key%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fclippy.toml?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/toml_unknown_key/clippy.toml"}, {"sha": "bfa804558bbd07e911cf25d2b3446dee9c879552", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "previous_filename": "tests/ui/toml_unknown_key/conf_unknown_key.rs"}, {"sha": "61e03774e321b560fbf381811cdc81d9e66f3f1c", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "patch": "@@ -0,0 +1,4 @@\n+error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of `blacklisted-names`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `literal-representation-threshold`, `third-party`\n+\n+error: aborting due to previous error\n+"}, {"sha": "acc38f15fbdc51779a20832bd599c376614c2f79", "filename": "tests/ui-toml/update-all-references.sh", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupdate-all-references.sh?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "patch": "@@ -0,0 +1,28 @@\n+#!/bin/bash\n+#\n+# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# A script to update the references for all tests. The idea is that\n+# you do a run, which will generate files in the build directory\n+# containing the (normalized) actual output of the compiler. You then\n+# run this script, which will copy those files over. If you find\n+# yourself manually editing a foo.stderr file, you're doing it wrong.\n+#\n+# See all `update-references.sh`, if you just want to update a single test.\n+\n+if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" ]]; then\n+    echo \"usage: $0\"\n+fi\n+\n+BUILD_DIR=$PWD/target/debug/test_build_base\n+MY_DIR=$(dirname $0)\n+cd $MY_DIR\n+find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "aa99d35f7aa779924dd17c96675ee50449f3343f", "filename": "tests/ui-toml/update-references.sh", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4e9a08bcde0eb446e610fcaf2c64d4859b93550c/tests%2Fui-toml%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupdate-references.sh?ref=4e9a08bcde0eb446e610fcaf2c64d4859b93550c", "patch": "@@ -0,0 +1,50 @@\n+#!/bin/bash\n+#\n+# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# A script to update the references for particular tests. The idea is\n+# that you do a run, which will generate files in the build directory\n+# containing the (normalized) actual output of the compiler. This\n+# script will then copy that output and replace the \"expected output\"\n+# files. You can then commit the changes.\n+#\n+# If you find yourself manually editing a foo.stderr file, you're\n+# doing it wrong.\n+\n+if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n+    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n+    echo \"\"\n+    echo \"For example:\"\n+    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n+fi\n+\n+MYDIR=$(dirname $0)\n+\n+BUILD_DIR=\"$1\"\n+shift\n+\n+while [[ \"$1\" != \"\" ]]; do\n+    STDERR_NAME=\"${1/%.rs/.stderr}\"\n+    STDOUT_NAME=\"${1/%.rs/.stdout}\"\n+    shift\n+    if [ -f $BUILD_DIR/$STDOUT_NAME ] && \\\n+           ! (diff $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME >& /dev/null); then\n+        echo updating $MYDIR/$STDOUT_NAME\n+        cp $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME\n+    fi\n+    if [ -f $BUILD_DIR/$STDERR_NAME ] && \\\n+           ! (diff $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME >& /dev/null); then\n+        echo updating $MYDIR/$STDERR_NAME\n+        cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n+    fi\n+done\n+\n+"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/bad_toml/conf_bad_toml.stderr", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml%2Fconf_bad_toml.stderr?ref=bb2f6a5011f938023d0ead64a746e0fa82f91ee6"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/bad_toml_type/conf_bad_type.stderr", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbad_toml_type%2Fconf_bad_type.stderr?ref=bb2f6a5011f938023d0ead64a746e0fa82f91ee6"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/toml_blacklist/conf_french_blacklisted_name.stderr", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr?ref=bb2f6a5011f938023d0ead64a746e0fa82f91ee6"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/toml_unknown_key/conf_unknown_key.stderr", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb2f6a5011f938023d0ead64a746e0fa82f91ee6/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=bb2f6a5011f938023d0ead64a746e0fa82f91ee6"}]}