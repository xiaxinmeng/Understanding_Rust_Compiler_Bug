{"sha": "072028e67996162f5a9da14cfd59ed64de5e8729", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MjAyOGU2Nzk5NjE2MmY1YTlkYTE0Y2ZkNTllZDY0ZGU1ZTg3Mjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-28T10:27:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-28T10:27:30Z"}, "message": "add macro-call node", "tree": {"sha": "6883b7d82c15653f6ad76f66bdbec8cdb5c5e8d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6883b7d82c15653f6ad76f66bdbec8cdb5c5e8d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/072028e67996162f5a9da14cfd59ed64de5e8729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/072028e67996162f5a9da14cfd59ed64de5e8729", "html_url": "https://github.com/rust-lang/rust/commit/072028e67996162f5a9da14cfd59ed64de5e8729", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/072028e67996162f5a9da14cfd59ed64de5e8729/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc496d05160f9693a4e48977b7f7a3fe2689ac51", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc496d05160f9693a4e48977b7f7a3fe2689ac51", "html_url": "https://github.com/rust-lang/rust/commit/dc496d05160f9693a4e48977b7f7a3fe2689ac51"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "0bf19eea08869d031474872acc04cbd9af542f6e", "filename": "crates/ra_analysis/src/syntax_highlighting.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/072028e67996162f5a9da14cfd59ed64de5e8729/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072028e67996162f5a9da14cfd59ed64de5e8729/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs?ref=072028e67996162f5a9da14cfd59ed64de5e8729", "patch": "@@ -7,6 +7,8 @@ use crate::{\n };\n \n pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Cancelable<Vec<HighlightedRange>> {\n-    let file = db.source_file(file_id);\n-    Ok(ra_editor::highlight(&file))\n+    let source_file = db.source_file(file_id);\n+    let mut res = ra_editor::highlight(&source_file);\n+    for node in source_file.syntax().descendants() {}\n+    Ok(res)\n }"}, {"sha": "b0d2c3e2094a45a155aa718fa17de1e3c614f657", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/072028e67996162f5a9da14cfd59ed64de5e8729/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072028e67996162f5a9da14cfd59ed64de5e8729/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=072028e67996162f5a9da14cfd59ed64de5e8729", "patch": "@@ -1838,6 +1838,47 @@ impl<R: TreeRoot<RaTypes>> LoopExprNode<R> {\n impl<'a> ast::LoopBodyOwner<'a> for LoopExpr<'a> {}\n impl<'a> LoopExpr<'a> {}\n \n+// MacroCall\n+#[derive(Debug, Clone, Copy,)]\n+pub struct MacroCallNode<R: TreeRoot<RaTypes> = OwnedRoot> {\n+    pub(crate) syntax: SyntaxNode<R>,\n+}\n+pub type MacroCall<'a> = MacroCallNode<RefRoot<'a>>;\n+\n+impl<R1: TreeRoot<RaTypes>, R2: TreeRoot<RaTypes>> PartialEq<MacroCallNode<R1>> for MacroCallNode<R2> {\n+    fn eq(&self, other: &MacroCallNode<R1>) -> bool { self.syntax == other.syntax }\n+}\n+impl<R: TreeRoot<RaTypes>> Eq for MacroCallNode<R> {}\n+impl<R: TreeRoot<RaTypes>> Hash for MacroCallNode<R> {\n+    fn hash<H: Hasher>(&self, state: &mut H) { self.syntax.hash(state) }\n+}\n+\n+impl<'a> AstNode<'a> for MacroCall<'a> {\n+    fn cast(syntax: SyntaxNodeRef<'a>) -> Option<Self> {\n+        match syntax.kind() {\n+            MACRO_CALL => Some(MacroCall { syntax }),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n+}\n+\n+impl<R: TreeRoot<RaTypes>> MacroCallNode<R> {\n+    pub fn borrowed(&self) -> MacroCall {\n+        MacroCallNode { syntax: self.syntax.borrowed() }\n+    }\n+    pub fn owned(&self) -> MacroCallNode {\n+        MacroCallNode { syntax: self.syntax.owned() }\n+    }\n+}\n+\n+\n+impl<'a> MacroCall<'a> {\n+    pub fn token_tree(self) -> Option<TokenTree<'a>> {\n+        super::child_opt(self)\n+    }\n+}\n+\n // MatchArm\n #[derive(Debug, Clone, Copy,)]\n pub struct MatchArmNode<R: TreeRoot<RaTypes> = OwnedRoot> {"}, {"sha": "07b8433b28234d857151dbb3b5c137df0cb8ca16", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/072028e67996162f5a9da14cfd59ed64de5e8729/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/072028e67996162f5a9da14cfd59ed64de5e8729/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=072028e67996162f5a9da14cfd59ed64de5e8729", "patch": "@@ -484,6 +484,7 @@ Grammar(\n \n         \"Name\": (),\n         \"NameRef\": (),\n+        \"MacroCall\": ( options: [ \"TokenTree\" ] ),\n         \"Attr\": ( options: [ [\"value\", \"TokenTree\"] ] ),\n         \"TokenTree\": (),\n         \"TypeParamList\": ("}]}