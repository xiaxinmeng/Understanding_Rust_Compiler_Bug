{"sha": "b8932c6304599bddec6ac6d916db72a5c4034ada", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4OTMyYzYzMDQ1OTliZGRlYzZhYzZkOTE2ZGI3MmE1YzQwMzRhZGE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-22T11:49:51Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-23T00:50:45Z"}, "message": "std::rand: use \"nothing up your sleeve numbers\" for ISAAC tests.\n\nThere's no value in using the \"random\" numbers, when nothing up your\nsleeve numbers are perfectly serviceable.\n\nhttp://en.wikipedia.org/wiki/Nothing_up_my_sleeve_number", "tree": {"sha": "53c6a962e1e7260f894bd0dae5defd07c987562a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53c6a962e1e7260f894bd0dae5defd07c987562a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8932c6304599bddec6ac6d916db72a5c4034ada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8932c6304599bddec6ac6d916db72a5c4034ada", "html_url": "https://github.com/rust-lang/rust/commit/b8932c6304599bddec6ac6d916db72a5c4034ada", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8932c6304599bddec6ac6d916db72a5c4034ada/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14a6a62a742e6aa79519dbc4300266df46f858f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/14a6a62a742e6aa79519dbc4300266df46f858f9", "html_url": "https://github.com/rust-lang/rust/commit/14a6a62a742e6aa79519dbc4300266df46f858f9"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "22117eebd29fa499539d6a8b438ca780702ec355", "filename": "src/libstd/rand/isaac.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b8932c6304599bddec6ac6d916db72a5c4034ada/src%2Flibstd%2Frand%2Fisaac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8932c6304599bddec6ac6d916db72a5c4034ada/src%2Flibstd%2Frand%2Fisaac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fisaac.rs?ref=b8932c6304599bddec6ac6d916db72a5c4034ada", "patch": "@@ -434,14 +434,14 @@ mod test {\n \n     #[test]\n     fn test_rng_32_seeded() {\n-        let seed = &[2, 32, 4, 32, 51];\n+        let seed = &[1, 23, 456, 7890, 12345];\n         let mut ra: IsaacRng = SeedableRng::from_seed(seed);\n         let mut rb: IsaacRng = SeedableRng::from_seed(seed);\n         assert_eq!(ra.gen_ascii_str(100u), rb.gen_ascii_str(100u));\n     }\n     #[test]\n     fn test_rng_64_seeded() {\n-        let seed = &[2, 32, 4, 32, 51];\n+        let seed = &[1, 23, 456, 7890, 12345];\n         let mut ra: Isaac64Rng = SeedableRng::from_seed(seed);\n         let mut rb: Isaac64Rng = SeedableRng::from_seed(seed);\n         assert_eq!(ra.gen_ascii_str(100u), rb.gen_ascii_str(100u));\n@@ -472,46 +472,46 @@ mod test {\n \n     #[test]\n     fn test_rng_32_true_values() {\n-        let seed = &[2, 32, 4, 32, 51];\n+        let seed = &[1, 23, 456, 7890, 12345];\n         let mut ra: IsaacRng = SeedableRng::from_seed(seed);\n         // Regression test that isaac is actually using the above vector\n         let v = vec::from_fn(10, |_| ra.next_u32());\n         assert_eq!(v,\n-                   ~[447462228, 2081944040, 3163797308, 2379916134, 2377489184,\n-                     1132373754, 536342443, 2995223415, 1265094839, 345325140]);\n+                   ~[2558573138, 873787463, 263499565, 2103644246, 3595684709,\n+                     4203127393, 264982119, 2765226902, 2737944514, 3900253796]);\n \n-        let seed = &[500, -4000, 123456, 9876543, 1, 1, 1, 1, 1];\n+        let seed = &[12345, 67890, 54321, 9876];\n         let mut rb: IsaacRng = SeedableRng::from_seed(seed);\n         // skip forward to the 10000th number\n         for _ in range(0, 10000) { rb.next_u32(); }\n \n         let v = vec::from_fn(10, |_| rb.next_u32());\n         assert_eq!(v,\n-                   ~[612373032, 292987903, 1819311337, 3141271980, 422447569,\n-                     310096395, 1083172510, 867909094, 2478664230, 2073577855]);\n+                   ~[3676831399, 3183332890, 2834741178, 3854698763, 2717568474,\n+                     1576568959, 3507990155, 179069555, 141456972, 2478885421]);\n     }\n     #[test]\n     fn test_rng_64_true_values() {\n-        let seed = &[2, 32, 4, 32, 51];\n+        let seed = &[1, 23, 456, 7890, 12345];\n         let mut ra: Isaac64Rng = SeedableRng::from_seed(seed);\n         // Regression test that isaac is actually using the above vector\n         let v = vec::from_fn(10, |_| ra.next_u64());\n         assert_eq!(v,\n-                   ~[15015576812873463115, 12461067598045625862, 14818626436142668771,\n-                     5562406406765984441, 11813289907965514161, 13443797187798420053,\n-                     6935026941854944442, 7750800609318664042, 14428747036317928637,\n-                     14028894460301215947]);\n+                   ~[547121783600835980, 14377643087320773276, 17351601304698403469,\n+                     1238879483818134882, 11952566807690396487, 13970131091560099343,\n+                     4469761996653280935, 15552757044682284409, 6860251611068737823,\n+                     13722198873481261842]);\n \n-        let seed = &[500, -4000, 123456, 9876543, 1, 1, 1, 1, 1];\n+        let seed = &[12345, 67890, 54321, 9876];\n         let mut rb: Isaac64Rng = SeedableRng::from_seed(seed);\n         // skip forward to the 10000th number\n         for _ in range(0, 10000) { rb.next_u64(); }\n \n         let v = vec::from_fn(10, |_| rb.next_u64());\n         assert_eq!(v,\n-                   ~[13557216323596688637, 17060829581390442094, 4927582063811333743,\n-                     2699639759356482270, 4819341314392384881, 6047100822963614452,\n-                     11086255989965979163, 11901890363215659856, 5370800226050011580,\n-                     16496463556025356451]);\n+                   ~[18143823860592706164, 8491801882678285927, 2699425367717515619,\n+                     17196852593171130876, 2606123525235546165, 15790932315217671084,\n+                     596345674630742204, 9947027391921273664, 11788097613744130851,\n+                     10391409374914919106]);\n     }\n }"}]}