{"sha": "aa8de179283b4c9aac6039ad2b04529ed6055680", "node_id": "C_kwDOAAsO6NoAKGFhOGRlMTc5MjgzYjRjOWFhYzYwMzlhZDJiMDQ1MjllZDYwNTU2ODA", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-17T14:12:59Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-17T14:13:10Z"}, "message": "fix let else unformatting", "tree": {"sha": "bda623ec5a4b9bf980fd83c0a2a7108a6d623a8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bda623ec5a4b9bf980fd83c0a2a7108a6d623a8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa8de179283b4c9aac6039ad2b04529ed6055680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa8de179283b4c9aac6039ad2b04529ed6055680", "html_url": "https://github.com/rust-lang/rust/commit/aa8de179283b4c9aac6039ad2b04529ed6055680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa8de179283b4c9aac6039ad2b04529ed6055680/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06c62cd5bd84e109f8fe409102c446f53b7f4c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06c62cd5bd84e109f8fe409102c446f53b7f4c9", "html_url": "https://github.com/rust-lang/rust/commit/e06c62cd5bd84e109f8fe409102c446f53b7f4c9"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "9951c87f4fc33fdfdd3ac462523bd84c454b61c8", "filename": "compiler/rustc_trait_selection/src/solve/trait_goals.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aa8de179283b4c9aac6039ad2b04529ed6055680/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa8de179283b4c9aac6039ad2b04529ed6055680/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs?ref=aa8de179283b4c9aac6039ad2b04529ed6055680", "patch": "@@ -218,14 +218,18 @@ impl<'tcx> assembly::GoalKind<'tcx> for TraitPredicate<'tcx> {\n         goal_kind: ty::ClosureKind,\n     ) -> QueryResult<'tcx> {\n         let tcx = ecx.tcx();\n-        let Some(tupled_inputs_and_output) =\n-            structural_traits::extract_tupled_inputs_and_output_from_callable(\n+        let tupled_inputs_and_output =\n+            match structural_traits::extract_tupled_inputs_and_output_from_callable(\n                 tcx,\n                 goal.predicate.self_ty(),\n                 goal_kind,\n-            )? else {\n-            return ecx.evaluate_added_goals_and_make_canonical_response(Certainty::AMBIGUOUS);\n-        };\n+            )? {\n+                Some(a) => a,\n+                None => {\n+                    return ecx\n+                        .evaluate_added_goals_and_make_canonical_response(Certainty::AMBIGUOUS);\n+                }\n+            };\n         let output_is_sized_pred = tupled_inputs_and_output\n             .map_bound(|(_, output)| tcx.at(DUMMY_SP).mk_trait_ref(LangItem::Sized, [output]));\n "}]}