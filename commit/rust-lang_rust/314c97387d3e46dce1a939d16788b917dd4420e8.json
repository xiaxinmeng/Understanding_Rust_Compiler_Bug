{"sha": "314c97387d3e46dce1a939d16788b917dd4420e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNGM5NzM4N2QzZTQ2ZGNlMWE5MzlkMTY3ODhiOTE3ZGQ0NDIwZTg=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-10-26T07:53:30Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-06T04:52:25Z"}, "message": "Squash redundant match arms", "tree": {"sha": "2205b1ad3bba1be23030a34f1c1c03f0790958ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2205b1ad3bba1be23030a34f1c1c03f0790958ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/314c97387d3e46dce1a939d16788b917dd4420e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/314c97387d3e46dce1a939d16788b917dd4420e8", "html_url": "https://github.com/rust-lang/rust/commit/314c97387d3e46dce1a939d16788b917dd4420e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/314c97387d3e46dce1a939d16788b917dd4420e8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f412c875ea25d5f68bafe0837ccf46998596588e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f412c875ea25d5f68bafe0837ccf46998596588e", "html_url": "https://github.com/rust-lang/rust/commit/f412c875ea25d5f68bafe0837ccf46998596588e"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "699029e7151cfa6f35022cba9f26529c5bc807af", "filename": "src/imports.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/314c97387d3e46dce1a939d16788b917dd4420e8/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/314c97387d3e46dce1a939d16788b917dd4420e8/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=314c97387d3e46dce1a939d16788b917dd4420e8", "patch": "@@ -94,15 +94,14 @@ fn compare_path_list_item_lists(\n fn compare_view_path_types(a: &ast::ViewPath_, b: &ast::ViewPath_) -> Ordering {\n     use syntax::ast::ViewPath_::*;\n     match (a, b) {\n-        (&ViewPathSimple(..), &ViewPathSimple(..)) => Ordering::Equal,\n-        (&ViewPathSimple(..), _) => Ordering::Less,\n-        (&ViewPathGlob(_), &ViewPathSimple(..)) => Ordering::Greater,\n-        (&ViewPathGlob(_), &ViewPathGlob(_)) => Ordering::Equal,\n-        (&ViewPathGlob(_), &ViewPathList(..)) => Ordering::Less,\n+        (&ViewPathSimple(..), &ViewPathSimple(..)) | (&ViewPathGlob(_), &ViewPathGlob(_)) => {\n+            Ordering::Equal\n+        }\n+        (&ViewPathSimple(..), _) | (&ViewPathGlob(_), &ViewPathList(..)) => Ordering::Less,\n         (&ViewPathList(_, ref a_items), &ViewPathList(_, ref b_items)) => {\n             compare_path_list_item_lists(a_items, b_items)\n         }\n-        (&ViewPathList(..), _) => Ordering::Greater,\n+        (&ViewPathGlob(_), &ViewPathSimple(..)) | (&ViewPathList(..), _) => Ordering::Greater,\n     }\n }\n "}, {"sha": "ee6e6be63f48180f742d3142c1d540a95a83c0d0", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/314c97387d3e46dce1a939d16788b917dd4420e8/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/314c97387d3e46dce1a939d16788b917dd4420e8/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=314c97387d3e46dce1a939d16788b917dd4420e8", "patch": "@@ -250,17 +250,7 @@ impl<'a> FmtVisitor<'a> {\n         let indent = self.block_indent;\n         let block;\n         let rewrite = match fk {\n-            visit::FnKind::ItemFn(ident, _, _, _, _, b) => {\n-                block = b;\n-                self.rewrite_fn(\n-                    indent,\n-                    ident,\n-                    &FnSig::from_fn_kind(&fk, generics, fd, defaultness),\n-                    mk_sp(s.lo(), b.span.lo()),\n-                    b,\n-                )\n-            }\n-            visit::FnKind::Method(ident, _, _, b) => {\n+            visit::FnKind::ItemFn(ident, _, _, _, _, b) | visit::FnKind::Method(ident, _, _, b) => {\n                 block = b;\n                 self.rewrite_fn(\n                     indent,"}]}