{"sha": "bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYTk5ZjIwZmZlYWYyZWY2ZjI2NDdmMmZjOGM3YjcwOGM3ZDc1ZDM=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-02-09T23:16:00Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-02-09T23:16:00Z"}, "message": "Add #[track_caller] to assist tests", "tree": {"sha": "1291cdae663a1b2b86029f56630371b141e6dee7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1291cdae663a1b2b86029f56630371b141e6dee7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3", "html_url": "https://github.com/rust-lang/rust/commit/bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36465b34b3b7f991ebf85680924acdb809b0494e", "url": "https://api.github.com/repos/rust-lang/rust/commits/36465b34b3b7f991ebf85680924acdb809b0494e", "html_url": "https://github.com/rust-lang/rust/commit/36465b34b3b7f991ebf85680924acdb809b0494e"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "b27f6bf75307dc813dbc15c9fc7bac31e0855262", "filename": "crates/assists/src/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3/crates%2Fassists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3/crates%2Fassists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Ftests.rs?ref=bfa99f20ffeaf2ef6f2647f2fc8c7b708c7d75d3", "patch": "@@ -49,14 +49,17 @@ pub(crate) fn check_assist_by_label(\n // FIXME: instead of having a separate function here, maybe use\n // `extract_ranges` and mark the target as `<target> </target>` in the\n // fixture?\n+#[track_caller]\n pub(crate) fn check_assist_target(assist: Handler, ra_fixture: &str, target: &str) {\n     check(assist, ra_fixture, ExpectedResult::Target(target), None);\n }\n \n+#[track_caller]\n pub(crate) fn check_assist_not_applicable(assist: Handler, ra_fixture: &str) {\n     check(assist, ra_fixture, ExpectedResult::NotApplicable, None);\n }\n \n+#[track_caller]\n fn check_doc_test(assist_id: &str, before: &str, after: &str) {\n     let after = trim_indent(after);\n     let (db, file_id, selection) = RootDatabase::with_range_or_offset(&before);\n@@ -95,6 +98,7 @@ enum ExpectedResult<'a> {\n     Target(&'a str),\n }\n \n+#[track_caller]\n fn check(handler: Handler, before: &str, expected: ExpectedResult, assist_label: Option<&str>) {\n     let (db, file_with_caret_id, range_or_offset) = RootDatabase::with_range_or_offset(before);\n     let text_without_caret = db.file_text(file_with_caret_id).to_string();"}]}