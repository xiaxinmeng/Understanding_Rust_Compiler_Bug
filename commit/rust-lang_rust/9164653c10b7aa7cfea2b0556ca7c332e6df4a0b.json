{"sha": "9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNjQ2NTNjMTBiN2FhN2NmZWEyYjA1NTZjYTdjMzMyZTZkZjRhMGI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-31T12:08:07Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-31T13:15:08Z"}, "message": "Split config.sh and add support for copying the mingw runtime objects", "tree": {"sha": "363ccde0506305ebad59c52f069091ab03363512", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/363ccde0506305ebad59c52f069091ab03363512"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "html_url": "https://github.com/rust-lang/rust/commit/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9384af41986da8c1697acde643b3f899d7becaf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9384af41986da8c1697acde643b3f899d7becaf2", "html_url": "https://github.com/rust-lang/rust/commit/9384af41986da8c1697acde643b3f899d7becaf2"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "d688d365f16d63cf717e973fc7357691f9600a82", "filename": "build.sh", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/build.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/build.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.sh?ref=9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "patch": "@@ -48,13 +48,20 @@ else\n     cargo build $oldbe\n fi\n \n+source scripts/ext_config.sh\n+\n rm -rf \"$target_dir\"\n mkdir \"$target_dir\"\n mkdir \"$target_dir\"/bin \"$target_dir\"/lib\n ln target/$CHANNEL/cg_clif{,_build_sysroot} \"$target_dir\"/bin\n ln target/$CHANNEL/*rustc_codegen_cranelift* \"$target_dir\"/lib\n ln rust-toolchain scripts/config.sh scripts/cargo.sh \"$target_dir\"\n \n+mkdir -p \"$target_dir/lib/rustlib/$TARGET_TRIPLE/lib/\"\n+if [[ \"$TARGET_TRIPLE\" == \"x86_64-pc-windows-gnu\" ]]; then\n+    cp $(rustc --print sysroot)/lib/rustlib/$TARGET_TRIPLE/lib/*.o \"$target_dir/lib/rustlib/$TARGET_TRIPLE/lib/\"\n+fi\n+\n if [[ \"$build_sysroot\" == \"1\" ]]; then\n     echo \"[BUILD] sysroot\"\n     export CG_CLIF_INCR_CACHE_DISABLED=1"}, {"sha": "2785a289d950ace120c0ff2d907fa497fb6c2e18", "filename": "build_sysroot/build_sysroot.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/build_sysroot%2Fbuild_sysroot.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/build_sysroot%2Fbuild_sysroot.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fbuild_sysroot.sh?ref=9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "patch": "@@ -36,6 +36,5 @@ else\n fi\n \n # Copy files to sysroot\n-mkdir -p \"$dir/lib/rustlib/$TARGET_TRIPLE/lib/\"\n ln \"target/$TARGET_TRIPLE/$sysroot_channel/deps/\"* \"$dir/lib/rustlib/$TARGET_TRIPLE/lib/\"\n rm \"$dir/lib/rustlib/$TARGET_TRIPLE/lib/\"*.{rmeta,d}"}, {"sha": "834708aa9a6fbb3c697a2b407d4aa9caaa5ea5c0", "filename": "scripts/config.sh", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/scripts%2Fconfig.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/scripts%2Fconfig.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fconfig.sh?ref=9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "patch": "@@ -12,28 +12,6 @@ else\n    exit 1\n fi\n \n-HOST_TRIPLE=$(rustc -vV | grep host | cut -d: -f2 | tr -d \" \")\n-TARGET_TRIPLE=$HOST_TRIPLE\n-#TARGET_TRIPLE=\"x86_64-pc-windows-gnu\"\n-#TARGET_TRIPLE=\"aarch64-unknown-linux-gnu\"\n-\n-linker=''\n-RUN_WRAPPER=''\n-export JIT_SUPPORTED=1\n-if [[ \"$HOST_TRIPLE\" != \"$TARGET_TRIPLE\" ]]; then\n-   export JIT_SUPPORTED=0\n-   if [[ \"$TARGET_TRIPLE\" == \"aarch64-unknown-linux-gnu\" ]]; then\n-      # We are cross-compiling for aarch64. Use the correct linker and run tests in qemu.\n-      linker='-Clinker=aarch64-linux-gnu-gcc'\n-      RUN_WRAPPER='qemu-aarch64 -L /usr/aarch64-linux-gnu'\n-   elif [[ \"$TARGET_TRIPLE\" == \"x86_64-pc-windows-gnu\" ]]; then\n-      # We are cross-compiling for Windows. Run tests in wine.\n-      RUN_WRAPPER='wine'\n-   else\n-      echo \"Unknown non-native platform\"\n-   fi\n-fi\n-\n if echo \"$RUSTC_WRAPPER\" | grep sccache; then\n echo\n echo -e \"\\x1b[1;93m=== Warning: Unset RUSTC_WRAPPER to prevent interference with sccache ===\\x1b[0m\"\n@@ -45,18 +23,13 @@ dir=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\"; pwd)\n \n export RUSTC=$dir\"/bin/cg_clif\"\n \n-if [ ! -z $linker ]; then\n-\texport RUSTFLAGS=$linker\" \"$RUSTFLAGS\n-fi\n-\n export RUSTDOCFLAGS=$linker' -Cpanic=abort -Zpanic-abort-tests '\\\n '-Zcodegen-backend='$dir'/lib/librustc_codegen_cranelift.'$dylib_ext' --sysroot '$dir\n \n # FIXME remove once the atomic shim is gone\n-if [[ $(uname) == 'Darwin' ]]; then\n+if [[ \"$unamestr\" == 'Darwin' ]]; then\n    export RUSTFLAGS=\"$RUSTFLAGS -Clink-arg=-undefined -Clink-arg=dynamic_lookup\"\n fi\n \n export LD_LIBRARY_PATH=\"$(rustc --print sysroot)/lib:\"$dir\"/lib\"\n export DYLD_LIBRARY_PATH=$LD_LIBRARY_PATH\n-"}, {"sha": "eab41631e2bda12bca1382a8af1581f307b52316", "filename": "scripts/ext_config.sh", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/scripts%2Fext_config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/scripts%2Fext_config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fext_config.sh?ref=9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "patch": "@@ -0,0 +1,26 @@\n+# Note to people running shellcheck: this file should only be sourced, not executed directly.\n+\n+# Various env vars that should only be set for the build system but not for cargo.sh\n+\n+set -e\n+\n+export CG_CLIF_DISPLAY_CG_TIME=1\n+\n+export HOST_TRIPLE=$(rustc -vV | grep host | cut -d: -f2 | tr -d \" \")\n+export TARGET_TRIPLE=${TARGET_TRIPLE:-$HOST_TRIPLE}\n+\n+export RUN_WRAPPER=''\n+export JIT_SUPPORTED=1\n+if [[ \"$HOST_TRIPLE\" != \"$TARGET_TRIPLE\" ]]; then\n+   export JIT_SUPPORTED=0\n+   if [[ \"$TARGET_TRIPLE\" == \"aarch64-unknown-linux-gnu\" ]]; then\n+      # We are cross-compiling for aarch64. Use the correct linker and run tests in qemu.\n+      export RUSTFLAGS='-Clinker=aarch64-linux-gnu-gcc '$RUSTFLAGS\n+      export RUN_WRAPPER='qemu-aarch64 -L /usr/aarch64-linux-gnu'\n+   elif [[ \"$TARGET_TRIPLE\" == \"x86_64-pc-windows-gnu\" ]]; then\n+      # We are cross-compiling for Windows. Run tests in wine.\n+      export RUN_WRAPPER='wine'\n+   else\n+      echo \"Unknown non-native platform\"\n+   fi\n+fi"}, {"sha": "4f3be0765281b87d4aa64b6f1f9745f11cab42f9", "filename": "test.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "patch": "@@ -1,7 +1,7 @@\n #!/bin/bash\n set -e\n \n-export CG_CLIF_DISPLAY_CG_TIME=1\n+source scripts/ext_config.sh\n \n ./build.sh --without-sysroot \"$@\"\n "}]}