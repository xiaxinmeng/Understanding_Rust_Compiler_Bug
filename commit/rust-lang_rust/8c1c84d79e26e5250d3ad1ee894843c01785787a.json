{"sha": "8c1c84d79e26e5250d3ad1ee894843c01785787a", "node_id": "C_kwDOAAsO6NoAKDhjMWM4NGQ3OWUyNmU1MjUwZDNhZDFlZTg5NDg0M2MwMTc4NTc4N2E", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-05T13:59:08Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-06-13T16:39:59Z"}, "message": "Copy Cargo.lock over in ./y.sh prepare\n\nThis makes it easier for ./x.py to vendor all dependencies", "tree": {"sha": "3689ce4f3f92730163d5471afc83f7021d604f23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3689ce4f3f92730163d5471afc83f7021d604f23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c1c84d79e26e5250d3ad1ee894843c01785787a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c1c84d79e26e5250d3ad1ee894843c01785787a", "html_url": "https://github.com/rust-lang/rust/commit/8c1c84d79e26e5250d3ad1ee894843c01785787a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c1c84d79e26e5250d3ad1ee894843c01785787a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcac2220134a0b6ca858b674c00ad809c2ed446a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcac2220134a0b6ca858b674c00ad809c2ed446a", "html_url": "https://github.com/rust-lang/rust/commit/bcac2220134a0b6ca858b674c00ad809c2ed446a"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "e31e39a483fe302c9de85485625bec0e38b0f8fc", "filename": "build_system/prepare.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8c1c84d79e26e5250d3ad1ee894843c01785787a/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c1c84d79e26e5250d3ad1ee894843c01785787a/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=8c1c84d79e26e5250d3ad1ee894843c01785787a", "patch": "@@ -47,6 +47,10 @@ codegen-units = 10000\n \"#,\n     )\n     .unwrap();\n+\n+    let source_lockfile = RelPath::PATCHES.to_path(dirs).join(\"stdlib-lock.toml\");\n+    let target_lockfile = STDLIB_SRC.to_path(dirs).join(\"Cargo.lock\");\n+    fs::copy(source_lockfile, target_lockfile).unwrap();\n }\n \n pub(crate) struct GitRepo {\n@@ -134,6 +138,15 @@ impl GitRepo {\n             }\n         }\n \n+        let source_lockfile =\n+            RelPath::PATCHES.to_path(dirs).join(format!(\"{}-lock.toml\", self.patch_name));\n+        let target_lockfile = download_dir.join(\"Cargo.lock\");\n+        if source_lockfile.exists() {\n+            fs::copy(source_lockfile, target_lockfile).unwrap();\n+        } else {\n+            assert!(target_lockfile.exists());\n+        }\n+\n         let actual_hash = format!(\"{:016x}\", hash_dir(&download_dir));\n         if actual_hash != self.content_hash {\n             println!(\n@@ -285,12 +298,4 @@ pub(crate) fn apply_patches(dirs: &Dirs, crate_name: &str, source_dir: &Path, ta\n         apply_patch_cmd.arg(patch).arg(\"-q\");\n         spawn_and_wait(apply_patch_cmd);\n     }\n-\n-    let source_lockfile = RelPath::PATCHES.to_path(dirs).join(format!(\"{crate_name}-lock.toml\"));\n-    let target_lockfile = target_dir.join(\"Cargo.lock\");\n-    if source_lockfile.exists() {\n-        fs::copy(source_lockfile, target_lockfile).unwrap();\n-    } else {\n-        assert!(target_lockfile.exists());\n-    }\n }"}, {"sha": "733a572400bac7de864af7d1659da58639900ba3", "filename": "build_system/tests.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8c1c84d79e26e5250d3ad1ee894843c01785787a/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c1c84d79e26e5250d3ad1ee894843c01785787a/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=8c1c84d79e26e5250d3ad1ee894843c01785787a", "patch": "@@ -100,7 +100,7 @@ pub(crate) static RAND_REPO: GitRepo = GitRepo::github(\n     \"rust-random\",\n     \"rand\",\n     \"50b9a447410860af8d6db9a208c3576886955874\",\n-    \"98b2276210b30e43\",\n+    \"446203b96054891e\",\n     \"rand\",\n );\n \n@@ -110,7 +110,7 @@ pub(crate) static REGEX_REPO: GitRepo = GitRepo::github(\n     \"rust-lang\",\n     \"regex\",\n     \"32fed9429eafba0ae92a64b01796a0c5a75b88c8\",\n-    \"d6af6507d565aa66\",\n+    \"fcc4df7c5b902633\",\n     \"regex\",\n );\n \n@@ -120,7 +120,7 @@ pub(crate) static PORTABLE_SIMD_REPO: GitRepo = GitRepo::github(\n     \"rust-lang\",\n     \"portable-simd\",\n     \"ad8afa8c81273b3b49acbea38cd3bcf17a34cf2b\",\n-    \"1ba291009510070b\",\n+    \"800548f8000e31bd\",\n     \"portable-simd\",\n );\n \n@@ -156,6 +156,10 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n             &LIBCORE_TESTS_SRC.to_path(&runner.dirs),\n         );\n \n+        let source_lockfile = RelPath::PATCHES.to_path(&runner.dirs).join(\"coretests-lock.toml\");\n+        let target_lockfile = LIBCORE_TESTS_SRC.to_path(&runner.dirs).join(\"Cargo.lock\");\n+        fs::copy(source_lockfile, target_lockfile).unwrap();\n+\n         LIBCORE_TESTS.clean(&runner.dirs);\n \n         if runner.is_native {"}]}