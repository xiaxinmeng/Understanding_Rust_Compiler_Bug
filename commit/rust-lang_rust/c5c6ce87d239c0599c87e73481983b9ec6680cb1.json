{"sha": "c5c6ce87d239c0599c87e73481983b9ec6680cb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YzZjZTg3ZDIzOWMwNTk5Yzg3ZTczNDgxOTgzYjllYzY2ODBjYjE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-11-12T20:10:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-16T11:04:34Z"}, "message": "Small change", "tree": {"sha": "f6fa009a78f3921317d4f475f5cab0c9c63eca0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6fa009a78f3921317d4f475f5cab0c9c63eca0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5c6ce87d239c0599c87e73481983b9ec6680cb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c6ce87d239c0599c87e73481983b9ec6680cb1", "html_url": "https://github.com/rust-lang/rust/commit/c5c6ce87d239c0599c87e73481983b9ec6680cb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5c6ce87d239c0599c87e73481983b9ec6680cb1/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "beda7870fb0f813e69e7803c612f865079625235", "url": "https://api.github.com/repos/rust-lang/rust/commits/beda7870fb0f813e69e7803c612f865079625235", "html_url": "https://github.com/rust-lang/rust/commit/beda7870fb0f813e69e7803c612f865079625235"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "8eef761465b125c53ecc818c8544f781a7bb6d63", "filename": "src/debuginfo/line_info.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c5c6ce87d239c0599c87e73481983b9ec6680cb1/src%2Fdebuginfo%2Fline_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c6ce87d239c0599c87e73481983b9ec6680cb1/src%2Fdebuginfo%2Fline_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fline_info.rs?ref=c5c6ce87d239c0599c87e73481983b9ec6680cb1", "patch": "@@ -2,6 +2,8 @@ use crate::prelude::*;\n \n use syntax::source_map::FileName;\n \n+use cranelift::codegen::binemit::CodeOffset;\n+\n use gimli::write::{\n     Address, AttributeValue, FileId, LineProgram, LineString,\n     LineStringTable, Range, UnitEntryId,\n@@ -75,7 +77,7 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n         context: &Context,\n         isa: &dyn cranelift::codegen::isa::TargetIsa,\n         source_info_set: &indexmap::IndexSet<(Span, mir::SourceScope)>,\n-    ) {\n+    ) -> CodeOffset {\n         let tcx = self.debug_context.tcx;\n \n         let line_program = &mut self.debug_context.dwarf.unit.line_program;\n@@ -135,15 +137,6 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n \n         self.debug_context.emit_location(self.entry_id, self.mir.span);\n \n-        self.debug_context\n-            .unit_range_list\n-            .0\n-            .push(Range::StartLength {\n-                begin: Address::Symbol {\n-                    symbol: self.symbol,\n-                    addend: 0,\n-                },\n-                length: end as u64,\n-            });\n+        end\n     }\n }"}, {"sha": "c62dad9c357df8be0316c711f57eeae0cb344a64", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c5c6ce87d239c0599c87e73481983b9ec6680cb1/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5c6ce87d239c0599c87e73481983b9ec6680cb1/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=c5c6ce87d239c0599c87e73481983b9ec6680cb1", "patch": "@@ -8,7 +8,7 @@ use cranelift::codegen::isa::RegUnit;\n \n use gimli::write::{\n     self, Address, AttributeValue, DwarfUnit, Expression, LineProgram, LineString,\n-    Location, LocationList, RangeList, UnitEntryId, Writer,\n+    Location, LocationList, Range, RangeList, UnitEntryId, Writer,\n };\n use gimli::{Encoding, Format, LineEncoding, Register, RunTimeEndian, X86_64};\n \n@@ -237,7 +237,18 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n         isa: &dyn cranelift::codegen::isa::TargetIsa,\n         source_info_set: &indexmap::IndexSet<(Span, mir::SourceScope)>,\n     ) {\n-        self.create_debug_lines(context, isa, source_info_set);\n+        let end = self.create_debug_lines(context, isa, source_info_set);\n+\n+        self.debug_context\n+            .unit_range_list\n+            .0\n+            .push(Range::StartLength {\n+                begin: Address::Symbol {\n+                    symbol: self.symbol,\n+                    addend: 0,\n+                },\n+                length: end as u64,\n+            });\n \n         {\n             let value_labels_ranges = context.build_value_labels_ranges(isa).unwrap();"}]}