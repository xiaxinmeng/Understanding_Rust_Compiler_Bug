{"sha": "0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "node_id": "C_kwDOAAsO6NoAKDBjMTczMjRjOTJiNjlkOTA1MmU4NDZiNGE4OWJjODljNWY1ZGE1ZmY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-10T08:13:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-10T08:13:40Z"}, "message": "Rollup merge of #102055 - c410-f3r:moar-errors, r=petrochenkov\n\nMove some tests to more reasonable directories\n\nr? ``@petrochenkov``", "tree": {"sha": "ac9a2e194847aec9ae9546597159fed5243c53f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac9a2e194847aec9ae9546597159fed5243c53f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjQ9Q0CRBK7hj4Ov3rIwAA784IAKaZYSvTnuX7THMzYzAsDsas\nCVuRtm03wt9KKfjeNTuucCazOQC+Pbik/96CkTHNxLxhJWVyE5pbI6ROrBTmnxqf\nfo4ZGWG5O7gwxYnkdiSkxVJPWeR0p+v1czTgWSiccz4ayzMM86GhKdPVlft/vqgB\naznDJG+i08EwXFn/zYQihitoloZhjhjCQOmSRXDc9MvtVjrKwi8wWrrtN0hvfM42\n/NO0bIwnlq6Cm9lIx0UUlFhBrlyEpCMFt31kQvf/fOUwTNhJ+4Ei7Yb2sGkIlwbz\nH/hbSseITwK006N3BEYNGudRIMwBULjKqQbM1Pa+vN6YpvbmgrUNj9kGZRxu4bk=\n=A1g7\n-----END PGP SIGNATURE-----\n", "payload": "tree ac9a2e194847aec9ae9546597159fed5243c53f4\nparent 7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91\nparent d45f6db5ee7dca4f1c5efa153b4fbe4e5d27a74c\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1665389620 +0530\ncommitter GitHub <noreply@github.com> 1665389620 +0530\n\nRollup merge of #102055 - c410-f3r:moar-errors, r=petrochenkov\n\nMove some tests to more reasonable directories\n\nr? ``@petrochenkov``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "html_url": "https://github.com/rust-lang/rust/commit/0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91", "html_url": "https://github.com/rust-lang/rust/commit/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91"}, {"sha": "d45f6db5ee7dca4f1c5efa153b4fbe4e5d27a74c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d45f6db5ee7dca4f1c5efa153b4fbe4e5d27a74c", "html_url": "https://github.com/rust-lang/rust/commit/d45f6db5ee7dca4f1c5efa153b4fbe4e5d27a74c"}], "stats": {"total": 175, "additions": 2, "deletions": 173}, "files": [{"sha": "02ca02da8ed61b1f9276dd24e1ab615dcc01d123", "filename": "src/test/ui/async-await/issue-73541-3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-3.rs?ref=0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "previous_filename": "src/test/ui/issues/issue-73541-3.rs"}, {"sha": "53487aaca998c4b4511369de5f35fc2b5ac3d2df", "filename": "src/test/ui/async-await/issue-73541-3.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-3.stderr?ref=0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "previous_filename": "src/test/ui/issues/issue-73541-3.stderr"}, {"sha": "399a07cd3fcc893041158c34e703894ac1709d02", "filename": "src/test/ui/async-await/issue-73541.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541.rs?ref=0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "previous_filename": "src/test/ui/issues/issue-73541.rs"}, {"sha": "4bb466ff16c58c653ba37d2469bd64c2040d6d5d", "filename": "src/test/ui/async-await/issue-73541.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541.stderr?ref=0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "previous_filename": "src/test/ui/issues/issue-73541.stderr"}, {"sha": "88a449b85b86a5a37abfa348e958f01c09e9be95", "filename": "src/test/ui/issues/issue-3563-2.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91/src%2Ftest%2Fui%2Fissues%2Fissue-3563-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91/src%2Ftest%2Fui%2Fissues%2Fissue-3563-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3563-2.rs?ref=7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91", "patch": "@@ -1,14 +0,0 @@\n-// check-pass\n-// pretty-expanded FIXME #23616\n-\n-trait Canvas {\n-    fn add_point(&self, point: &isize);\n-    fn add_points(&self, shapes: &[isize]) {\n-        for pt in shapes {\n-            self.add_point(pt)\n-        }\n-    }\n-\n-}\n-\n-pub fn main() {}"}, {"sha": "eddd158aef0817d800679f6443fd4e11d14f7544", "filename": "src/test/ui/span/issue-7575.rs", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91/src%2Ftest%2Fui%2Fspan%2Fissue-7575.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91/src%2Ftest%2Fui%2Fspan%2Fissue-7575.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.rs?ref=7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91", "patch": "@@ -1,75 +0,0 @@\n-// Test the mechanism for warning about possible missing `self` declarations.\n-trait CtxtFn {\n-    fn f8(self, _: usize) -> usize;\n-    fn f9(_: usize) -> usize;\n-}\n-\n-trait OtherTrait {\n-    fn f9(_: usize) -> usize;\n-}\n-\n-// Note: this trait is not implemented, but we can't really tell\n-// whether or not an impl would match anyhow without a self\n-// declaration to match against, so we wind up prisizeing it as a\n-// candidate. This seems not unreasonable -- perhaps the user meant to\n-// implement it, after all.\n-trait UnusedTrait {\n-    fn f9(_: usize) -> usize;\n-}\n-\n-impl CtxtFn for usize {\n-    fn f8(self, i: usize) -> usize {\n-        i * 4\n-    }\n-\n-    fn f9(i: usize) -> usize {\n-        i * 4\n-    }\n-}\n-\n-impl OtherTrait for usize {\n-    fn f9(i: usize) -> usize {\n-        i * 8\n-    }\n-}\n-\n-struct Myisize(isize);\n-\n-impl Myisize {\n-    fn fff(i: isize) -> isize {\n-        i\n-    }\n-}\n-\n-trait ManyImplTrait {\n-    fn is_str() -> bool {\n-        false\n-    }\n-}\n-\n-impl ManyImplTrait for String {\n-    fn is_str() -> bool {\n-        true\n-    }\n-}\n-\n-impl ManyImplTrait for usize {}\n-impl ManyImplTrait for isize {}\n-impl ManyImplTrait for char {}\n-impl ManyImplTrait for Myisize {}\n-\n-fn no_param_bound(u: usize, m: Myisize) -> usize {\n-    u.f8(42) + u.f9(342) + m.fff(42)\n-            //~^ ERROR no method named `f9` found\n-            //~| ERROR no method named `fff` found\n-\n-\n-}\n-\n-fn param_bound<T: ManyImplTrait>(t: T) -> bool {\n-    t.is_str()\n-    //~^ ERROR no method named `is_str` found\n-}\n-\n-fn main() {\n-}"}, {"sha": "4f30edb3f89d3d5e663d0a24b7373f3b5ed8979e", "filename": "src/test/ui/span/issue-7575.stderr", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=7e16f9f1eaea28e7fe2fc93319fdfcd4e1968c91", "patch": "@@ -1,82 +0,0 @@\n-error[E0599]: no method named `f9` found for type `usize` in the current scope\n-  --> $DIR/issue-7575.rs:62:18\n-   |\n-LL |     u.f8(42) + u.f9(342) + m.fff(42)\n-   |                  ^^ this is an associated function, not a method\n-   |\n-   = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n-note: candidate #1 is defined in the trait `CtxtFn`\n-  --> $DIR/issue-7575.rs:4:5\n-   |\n-LL |     fn f9(_: usize) -> usize;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: candidate #2 is defined in the trait `OtherTrait`\n-  --> $DIR/issue-7575.rs:8:5\n-   |\n-LL |     fn f9(_: usize) -> usize;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: candidate #3 is defined in the trait `UnusedTrait`\n-  --> $DIR/issue-7575.rs:17:5\n-   |\n-LL |     fn f9(_: usize) -> usize;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following traits define an item `f9`, perhaps you need to implement one of them:\n-           candidate #1: `CtxtFn`\n-           candidate #2: `OtherTrait`\n-           candidate #3: `UnusedTrait`\n-help: disambiguate the associated function for candidate #1\n-   |\n-LL |     u.f8(42) + <usize as CtxtFn>::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n-help: disambiguate the associated function for candidate #2\n-   |\n-LL |     u.f8(42) + <usize as OtherTrait>::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n-help: disambiguate the associated function for candidate #3\n-   |\n-LL |     u.f8(42) + <usize as UnusedTrait>::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n-\n-error[E0599]: no method named `fff` found for struct `Myisize` in the current scope\n-  --> $DIR/issue-7575.rs:62:30\n-   |\n-LL | struct Myisize(isize);\n-   | -------------- method `fff` not found for this struct\n-...\n-LL |     u.f8(42) + u.f9(342) + m.fff(42)\n-   |                            --^^^\n-   |                            | |\n-   |                            | this is an associated function, not a method\n-   |                            help: use associated function syntax instead: `Myisize::fff`\n-   |\n-   = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n-note: the candidate is defined in an impl for the type `Myisize`\n-  --> $DIR/issue-7575.rs:39:5\n-   |\n-LL |     fn fff(i: isize) -> isize {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0599]: no method named `is_str` found for type parameter `T` in the current scope\n-  --> $DIR/issue-7575.rs:70:7\n-   |\n-LL | fn param_bound<T: ManyImplTrait>(t: T) -> bool {\n-   |                - method `is_str` not found for this type parameter\n-LL |     t.is_str()\n-   |       ^^^^^^ this is an associated function, not a method\n-   |\n-   = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n-note: the candidate is defined in the trait `ManyImplTrait`\n-  --> $DIR/issue-7575.rs:45:5\n-   |\n-LL |     fn is_str() -> bool {\n-   |     ^^^^^^^^^^^^^^^^^^^\n-   = help: items from traits can only be used if the type parameter is bounded by the trait\n-help: disambiguate the associated function for the candidate\n-   |\n-LL |     <T as ManyImplTrait>::is_str(t)\n-   |\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0599`."}, {"sha": "55c26ccd2da4ac2263ed414ed457981ea5ac5225", "filename": "src/test/ui/traits/issue-43784-supertrait.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Ftraits%2Fissue-43784-supertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Ftraits%2Fissue-43784-supertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-43784-supertrait.rs?ref=0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "previous_filename": "src/test/ui/issues/issue-43784-supertrait.rs"}, {"sha": "bb890cb99ee37a54f6a0c4ee2150443ac497bda9", "filename": "src/test/ui/traits/issue-43784-supertrait.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Ftraits%2Fissue-43784-supertrait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftest%2Fui%2Ftraits%2Fissue-43784-supertrait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-43784-supertrait.stderr?ref=0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "previous_filename": "src/test/ui/issues/issue-43784-supertrait.stderr"}, {"sha": "052abfdab5dd36c37a17626721da3f7acd02080e", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c17324c92b69d9052e846b4a89bc89c5f5da5ff/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=0c17324c92b69d9052e846b4a89bc89c5f5da5ff", "patch": "@@ -7,8 +7,8 @@ use std::path::Path;\n \n const ENTRY_LIMIT: usize = 1000;\n // FIXME: The following limits should be reduced eventually.\n-const ROOT_ENTRY_LIMIT: usize = 968;\n-const ISSUES_ENTRY_LIMIT: usize = 2147;\n+const ROOT_ENTRY_LIMIT: usize = 950;\n+const ISSUES_ENTRY_LIMIT: usize = 2141;\n \n fn check_entries(path: &Path, bad: &mut bool) {\n     let dirs = walkdir::WalkDir::new(&path.join(\"test/ui\"))"}]}