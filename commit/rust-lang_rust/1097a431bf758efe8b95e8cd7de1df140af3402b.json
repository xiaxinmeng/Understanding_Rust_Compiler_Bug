{"sha": "1097a431bf758efe8b95e8cd7de1df140af3402b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwOTdhNDMxYmY3NThlZmU4Yjk1ZThjZDdkZTFkZjE0MGFmMzQwMmI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-07T13:21:53Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-07T13:45:33Z"}, "message": "Change return type of Indent::to_string() to Cow<'static, str>", "tree": {"sha": "1eda00cf59fae0e53018575763f9de5af0beeb1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eda00cf59fae0e53018575763f9de5af0beeb1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1097a431bf758efe8b95e8cd7de1df140af3402b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1097a431bf758efe8b95e8cd7de1df140af3402b", "html_url": "https://github.com/rust-lang/rust/commit/1097a431bf758efe8b95e8cd7de1df140af3402b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1097a431bf758efe8b95e8cd7de1df140af3402b/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed7ceebfe07c674933b002beda88391ad5cd6066", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed7ceebfe07c674933b002beda88391ad5cd6066", "html_url": "https://github.com/rust-lang/rust/commit/ed7ceebfe07c674933b002beda88391ad5cd6066"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "fffbe2b9913ea5a392c81813e1e2eff0b21557ed", "filename": "src/shape.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1097a431bf758efe8b95e8cd7de1df140af3402b/src%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1097a431bf758efe8b95e8cd7de1df140af3402b/src%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshape.rs?ref=1097a431bf758efe8b95e8cd7de1df140af3402b", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::borrow::Cow;\n use std::ops::{Add, Sub};\n \n use Config;\n@@ -21,6 +22,10 @@ pub struct Indent {\n     pub alignment: usize,\n }\n \n+// INDENT_BUFFER.len() = 80\n+const INDENT_BUFFER_LEN: usize = 80;\n+const INDENT_BUFFER: &str =\n+    \"                                                                                \";\n impl Indent {\n     pub fn new(block_indent: usize, alignment: usize) -> Indent {\n         Indent {\n@@ -68,21 +73,25 @@ impl Indent {\n         self.block_indent + self.alignment\n     }\n \n-    pub fn to_string(&self, config: &Config) -> String {\n+    pub fn to_string(&self, config: &Config) -> Cow<'static, str> {\n         let (num_tabs, num_spaces) = if config.hard_tabs() {\n             (self.block_indent / config.tab_spaces(), self.alignment)\n         } else {\n             (0, self.width())\n         };\n         let num_chars = num_tabs + num_spaces;\n-        let mut indent = String::with_capacity(num_chars);\n-        for _ in 0..num_tabs {\n-            indent.push('\\t')\n-        }\n-        for _ in 0..num_spaces {\n-            indent.push(' ')\n+        if num_tabs == 0 && num_chars <= INDENT_BUFFER_LEN {\n+            Cow::from(&INDENT_BUFFER[0..num_chars])\n+        } else {\n+            let mut indent = String::with_capacity(num_chars);\n+            for _ in 0..num_tabs {\n+                indent.push('\\t')\n+            }\n+            for _ in 0..num_spaces {\n+                indent.push(' ')\n+            }\n+            Cow::from(indent)\n         }\n-        indent\n     }\n }\n "}]}