{"sha": "a4112dc7b5c8240f4e9163c1f696426e3899a26d", "node_id": "C_kwDOAAsO6NoAKGE0MTEyZGM3YjVjODI0MGY0ZTkxNjNjMWY2OTY0MjZlMzg5OWEyNmQ", "commit": {"author": {"name": "Yerkebulan Tulibergenov", "email": "yerkebulan@gmail.com", "date": "2022-02-06T03:57:02Z"}, "committer": {"name": "Yerkebulan Tulibergenov", "email": "yerkebulan@gmail.com", "date": "2022-02-06T03:57:02Z"}, "message": "fix linking stage1 toolchain in setup", "tree": {"sha": "18d858da6da18a383a1f086613e8c3da21adc2f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18d858da6da18a383a1f086613e8c3da21adc2f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4112dc7b5c8240f4e9163c1f696426e3899a26d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4112dc7b5c8240f4e9163c1f696426e3899a26d", "html_url": "https://github.com/rust-lang/rust/commit/a4112dc7b5c8240f4e9163c1f696426e3899a26d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4112dc7b5c8240f4e9163c1f696426e3899a26d/comments", "author": {"login": "yerke", "id": 5137691, "node_id": "MDQ6VXNlcjUxMzc2OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5137691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yerke", "html_url": "https://github.com/yerke", "followers_url": "https://api.github.com/users/yerke/followers", "following_url": "https://api.github.com/users/yerke/following{/other_user}", "gists_url": "https://api.github.com/users/yerke/gists{/gist_id}", "starred_url": "https://api.github.com/users/yerke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yerke/subscriptions", "organizations_url": "https://api.github.com/users/yerke/orgs", "repos_url": "https://api.github.com/users/yerke/repos", "events_url": "https://api.github.com/users/yerke/events{/privacy}", "received_events_url": "https://api.github.com/users/yerke/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yerke", "id": 5137691, "node_id": "MDQ6VXNlcjUxMzc2OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/5137691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yerke", "html_url": "https://github.com/yerke", "followers_url": "https://api.github.com/users/yerke/followers", "following_url": "https://api.github.com/users/yerke/following{/other_user}", "gists_url": "https://api.github.com/users/yerke/gists{/gist_id}", "starred_url": "https://api.github.com/users/yerke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yerke/subscriptions", "organizations_url": "https://api.github.com/users/yerke/orgs", "repos_url": "https://api.github.com/users/yerke/repos", "events_url": "https://api.github.com/users/yerke/events{/privacy}", "received_events_url": "https://api.github.com/users/yerke/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cc28c128be0363d83accf318b87b40ba6168384", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cc28c128be0363d83accf318b87b40ba6168384", "html_url": "https://github.com/rust-lang/rust/commit/7cc28c128be0363d83accf318b87b40ba6168384"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "a28815d09761b3b30f079ed9a0f4830cbceb3dac", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a4112dc7b5c8240f4e9163c1f696426e3899a26d/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4112dc7b5c8240f4e9163c1f696426e3899a26d/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=a4112dc7b5c8240f4e9163c1f696426e3899a26d", "patch": "@@ -1,7 +1,9 @@\n use crate::TargetSelection;\n use crate::{t, VERSION};\n+use std::env::consts::EXE_SUFFIX;\n use std::fmt::Write as _;\n-use std::path::{Path, PathBuf};\n+use std::fs::File;\n+use std::path::{Path, PathBuf, MAIN_SEPARATOR};\n use std::process::Command;\n use std::str::FromStr;\n use std::{\n@@ -109,7 +111,8 @@ pub fn setup(src_path: &Path, profile: Profile) {\n     println!(\"`x.py` will now use the configuration at {}\", include_path.display());\n \n     let build = TargetSelection::from_user(&env!(\"BUILD_TRIPLE\"));\n-    let stage_path = [\"build\", build.rustc_target_arg(), \"stage1\"].join(\"/\");\n+    let stage_path =\n+        [\"build\", build.rustc_target_arg(), \"stage1\"].join(&MAIN_SEPARATOR.to_string());\n \n     println!();\n \n@@ -171,6 +174,13 @@ fn attempt_toolchain_link(stage_path: &str) {\n         return;\n     }\n \n+    if !ensure_stage1_toolchain_placeholder_exists(stage_path) {\n+        println!(\n+            \"Failed to create a template for stage 1 toolchain or confirm that it already exists\"\n+        );\n+        return;\n+    }\n+\n     if try_link_toolchain(&stage_path[..]) {\n         println!(\n             \"Added `stage1` rustup toolchain; try `cargo +stage1 build` on a separate rust project to run a newly-built toolchain\"\n@@ -219,6 +229,33 @@ fn try_link_toolchain(stage_path: &str) -> bool {\n         .map_or(false, |output| output.status.success())\n }\n \n+fn ensure_stage1_toolchain_placeholder_exists(stage_path: &str) -> bool {\n+    let pathbuf = PathBuf::from(stage_path);\n+\n+    if fs::create_dir_all(pathbuf.join(\"lib\")).is_err() {\n+        return false;\n+    };\n+\n+    let pathbuf = pathbuf.join(\"bin\");\n+    if fs::create_dir_all(&pathbuf).is_err() {\n+        return false;\n+    };\n+\n+    let pathbuf = pathbuf.join(format!(\"rustc{}\", EXE_SUFFIX));\n+\n+    if pathbuf.exists() {\n+        return true;\n+    }\n+\n+    // Take care not to overwrite the file\n+    let result = File::options().append(true).create(true).open(&pathbuf);\n+    if result.is_err() {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n // Used to get the path for `Subcommand::Setup`\n pub fn interactive_path() -> io::Result<Profile> {\n     fn abbrev_all() -> impl Iterator<Item = ((String, String), Profile)> {"}]}