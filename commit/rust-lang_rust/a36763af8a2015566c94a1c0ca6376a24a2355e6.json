{"sha": "a36763af8a2015566c94a1c0ca6376a24a2355e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNjc2M2FmOGEyMDE1NTY2Yzk0YTFjMGNhNjM3NmEyNGEyMzU1ZTY=", "commit": {"author": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-15T19:54:58Z"}, "committer": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-15T21:11:29Z"}, "message": "normalize use of backticks in compiler messages for libsyntax_ext\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "f3395d3b5846fdd7624307fad21924525940f65c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3395d3b5846fdd7624307fad21924525940f65c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a36763af8a2015566c94a1c0ca6376a24a2355e6", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEExrhwoK6DmrCETV5+4ilOki9MVuUFAl0s7AEACgkQ4ilOki9M\nVuVcNgwAzguoMrGm7F9tB2DYMm9GQh9CwWL7RhrPjW8dmFGtuX6fYZSU4k/p1MEF\nynXYQFysIBmJMenwlKajkFpNfjTIhBFOJHYlYjmArCIEuKDv7uQ5zU1hygz+Ybgz\nnmDuohkWyuliVxN1fh5lMNd9uxlZcarLS92GILJQ0gNbw3T6GgIB+8t7f1YxjofE\nHlr8ccPfs7m4sW+Bd+Qeb+CNDmiovWt2gyO1X8C3oKcp+VHtk1ySm1Z5plc82EwA\nOA1nRqW7d0g/Bq4SSjqJDiT+layPQ5Q0ZcnISP47L2kC141fXp/d6lpv3vbaudKc\nDU1sng6rTKt4GNEGZGLyxoCqu7xgC1MPzJpSW7lDLPeIZG3+y/JmVKyC/kuMxdcX\nn3pCNk2s0/vdXgud7N6cZOY3NT5fAP73+FGaewh+Re7RE/K3lialHRpb7ft+MhS+\ncy6Kgls2kk01XyIyEsNT99HbcNlacjFhdXwUamSdJT59htD9cVwYs19eH1ja+FPZ\n+p2ZmzZr\n=JI57\n-----END PGP SIGNATURE-----", "payload": "tree f3395d3b5846fdd7624307fad21924525940f65c\nparent 4b65a86ebace8600c8e269e8bfe3365cdc460e68\nauthor Samy Kacimi <samy.kacimi@protonmail.ch> 1563220498 +0200\ncommitter Samy Kacimi <samy.kacimi@protonmail.ch> 1563225089 +0200\n\nnormalize use of backticks in compiler messages for libsyntax_ext\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a36763af8a2015566c94a1c0ca6376a24a2355e6", "html_url": "https://github.com/rust-lang/rust/commit/a36763af8a2015566c94a1c0ca6376a24a2355e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a36763af8a2015566c94a1c0ca6376a24a2355e6/comments", "author": null, "committer": null, "parents": [{"sha": "4b65a86ebace8600c8e269e8bfe3365cdc460e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b65a86ebace8600c8e269e8bfe3365cdc460e68", "html_url": "https://github.com/rust-lang/rust/commit/4b65a86ebace8600c8e269e8bfe3365cdc460e68"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9a890a06e0396ba24c495198b44ba9e4d742e204", "filename": "src/libsyntax_ext/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fclone.rs?ref=a36763af8a2015566c94a1c0ca6376a24a2355e6", "patch": "@@ -73,7 +73,7 @@ pub fn expand_deriving_clone(cx: &mut ExtCtxt<'_>,\n             }\n         }\n \n-        _ => cx.span_bug(span, \"#[derive(Clone)] on trait item or impl item\"),\n+        _ => cx.span_bug(span, \"`#[derive(Clone)]` on trait item or impl item\"),\n     }\n \n     let inline = cx.meta_word(span, sym::inline);"}, {"sha": "4386fe8cfa2d699d91223e59e200b41f97c03348", "filename": "src/libsyntax_ext/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Flibsyntax_ext%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Flibsyntax_ext%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Ftest.rs?ref=a36763af8a2015566c94a1c0ca6376a24a2355e6", "patch": "@@ -42,12 +42,12 @@ pub fn expand_test_or_bench(\n         if let Annotatable::Item(i) = item { i }\n         else {\n             cx.parse_sess.span_diagnostic.span_fatal(item.span(),\n-                \"#[test] attribute is only allowed on non associated functions\").raise();\n+                \"`#[test]` attribute is only allowed on non associated functions\").raise();\n         };\n \n     if let ast::ItemKind::Mac(_) = item.node {\n         cx.parse_sess.span_diagnostic.span_warn(item.span,\n-            \"#[test] attribute should not be used on macros. Use #[cfg(test)] instead.\");\n+            \"`#[test]` attribute should not be used on macros. Use `#[cfg(test)]` instead.\");\n         return vec![Annotatable::Item(item)];\n     }\n \n@@ -167,7 +167,7 @@ pub fn expand_test_or_bench(\n         ast::ItemKind::ExternCrate(Some(sym::test))\n     );\n \n-    log::debug!(\"Synthetic test item:\\n{}\\n\", pprust::item_to_string(&test_const));\n+    log::debug!(\"synthetic test item:\\n{}\\n\", pprust::item_to_string(&test_const));\n \n     vec![\n         // Access to libtest under a gensymed name"}, {"sha": "e475f5b4a75a515f7d97b02a1583ce120617bc94", "filename": "src/test/ui/test-attr-non-associated-functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.rs?ref=a36763af8a2015566c94a1c0ca6376a24a2355e6", "patch": "@@ -6,7 +6,7 @@ struct A {}\n \n impl A {\n     #[test]\n-    fn new() -> A { //~ ERROR #[test] attribute is only allowed on non associated functions\n+    fn new() -> A { //~ ERROR `#[test]` attribute is only allowed on non associated functions\n         A {}\n     }\n }"}, {"sha": "cb3ae51823e45bd993f6500b2f54613be44306ee", "filename": "src/test/ui/test-attr-non-associated-functions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attr-non-associated-functions.stderr?ref=a36763af8a2015566c94a1c0ca6376a24a2355e6", "patch": "@@ -1,4 +1,4 @@\n-error: #[test] attribute is only allowed on non associated functions\n+error: `#[test]` attribute is only allowed on non associated functions\n   --> $DIR/test-attr-non-associated-functions.rs:9:5\n    |\n LL | /     fn new() -> A {"}, {"sha": "256a41722fa956534e09d2b713d65b83a44c3f37", "filename": "src/test/ui/test-on-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Ftest%2Fui%2Ftest-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a36763af8a2015566c94a1c0ca6376a24a2355e6/src%2Ftest%2Fui%2Ftest-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-on-macro.stderr?ref=a36763af8a2015566c94a1c0ca6376a24a2355e6", "patch": "@@ -1,4 +1,4 @@\n-warning: #[test] attribute should not be used on macros. Use #[cfg(test)] instead.\n+warning: `#[test]` attribute should not be used on macros. Use `#[cfg(test)]` instead.\n   --> $DIR/test-on-macro.rs:11:1\n    |\n LL | foo!();"}]}