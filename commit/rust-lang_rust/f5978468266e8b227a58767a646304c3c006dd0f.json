{"sha": "f5978468266e8b227a58767a646304c3c006dd0f", "node_id": "C_kwDOAAsO6NoAKGY1OTc4NDY4MjY2ZThiMjI3YTU4NzY3YTY0NjMwNGMzYzAwNmRkMGY", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-17T22:40:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-17T22:40:58Z"}, "message": "Rollup merge of #97096 - tmiasko:reachable-constructor, r=petrochenkov\n\nTypes with reachable constructors are reachable\n\nFixes #96934.\n\nr? `@petrochenkov`", "tree": {"sha": "b7f4f6556ca96db69e5a82cd327665513520d4a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7f4f6556ca96db69e5a82cd327665513520d4a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5978468266e8b227a58767a646304c3c006dd0f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJihCR6CRBK7hj4Ov3rIwAAuh0IAGb6TbCo5El0t5Oxodmoq8yd\n0NWqQyjKLRYOzZKse8ur4TJlW9BMCiVrUzVFIfg20wPyF6gu37NFl1+RmlOhSxnF\nkD1KvDrBSsTmNZFukkkM7YjVx99tpNlh/Glu3Fp2EFlUPiksa0W7QLetyp++TWVm\nwiWD6fevAdlaZEvxo3jwws3FFPFStb4z+HH1YbvmBbIoRSpu2NUjHBtl/Un03lkY\nCFX3UVHlOHT+eIYwmK7IJHfXkugq7JeKho9wLbKrkL7cxJhPMWV2KMTLbEBrxyUq\nYz6eg3c/LwFOOchIfYlKGcSarnSpRzdVkA2OW4XJdKuhRmn/RJhpNFkWtZBxqz8=\n=PQ3U\n-----END PGP SIGNATURE-----\n", "payload": "tree b7f4f6556ca96db69e5a82cd327665513520d4a7\nparent e9f3733b0379aefce684d3f4bf617ed2e5c02076\nparent 17f289345516662166a93a388b6225b862d1f238\nauthor Yuki Okushi <jtitor@2k36.org> 1652827258 +0900\ncommitter GitHub <noreply@github.com> 1652827258 +0900\n\nRollup merge of #97096 - tmiasko:reachable-constructor, r=petrochenkov\n\nTypes with reachable constructors are reachable\n\nFixes #96934.\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5978468266e8b227a58767a646304c3c006dd0f", "html_url": "https://github.com/rust-lang/rust/commit/f5978468266e8b227a58767a646304c3c006dd0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5978468266e8b227a58767a646304c3c006dd0f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9f3733b0379aefce684d3f4bf617ed2e5c02076", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f3733b0379aefce684d3f4bf617ed2e5c02076", "html_url": "https://github.com/rust-lang/rust/commit/e9f3733b0379aefce684d3f4bf617ed2e5c02076"}, {"sha": "17f289345516662166a93a388b6225b862d1f238", "url": "https://api.github.com/repos/rust-lang/rust/commits/17f289345516662166a93a388b6225b862d1f238", "html_url": "https://github.com/rust-lang/rust/commit/17f289345516662166a93a388b6225b862d1f238"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "e6c7b4064fb09dc490409225506f6ec0c0e4de9c", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f5978468266e8b227a58767a646304c3c006dd0f/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5978468266e8b227a58767a646304c3c006dd0f/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=f5978468266e8b227a58767a646304c3c006dd0f", "patch": "@@ -775,7 +775,14 @@ impl<'tcx> Visitor<'tcx> for EmbargoVisitor<'tcx> {\n                         }\n                         // Corner case: if the variant is reachable, but its\n                         // enum is not, make the enum reachable as well.\n-                        self.update(item.def_id, variant_level);\n+                        self.reach(item.def_id, variant_level).ty();\n+                    }\n+                    if let Some(hir_id) = variant.data.ctor_hir_id() {\n+                        let ctor_def_id = self.tcx.hir().local_def_id(hir_id);\n+                        let ctor_level = self.get(ctor_def_id);\n+                        if ctor_level.is_some() {\n+                            self.reach(item.def_id, ctor_level).ty();\n+                        }\n                     }\n                 }\n             }\n@@ -803,6 +810,13 @@ impl<'tcx> Visitor<'tcx> for EmbargoVisitor<'tcx> {\n                         }\n                     }\n                 }\n+                if let Some(hir_id) = struct_def.ctor_hir_id() {\n+                    let ctor_def_id = self.tcx.hir().local_def_id(hir_id);\n+                    let ctor_level = self.get(ctor_def_id);\n+                    if ctor_level.is_some() {\n+                        self.reach(item.def_id, ctor_level).ty();\n+                    }\n+                }\n             }\n         }\n "}, {"sha": "9c99cca9ae6edc1c49cb637635ab99a52aa7aa37", "filename": "src/test/ui/privacy/auxiliary/ctor_aux.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f5978468266e8b227a58767a646304c3c006dd0f/src%2Ftest%2Fui%2Fprivacy%2Fauxiliary%2Fctor_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5978468266e8b227a58767a646304c3c006dd0f/src%2Ftest%2Fui%2Fprivacy%2Fauxiliary%2Fctor_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fauxiliary%2Fctor_aux.rs?ref=f5978468266e8b227a58767a646304c3c006dd0f", "patch": "@@ -0,0 +1,25 @@\n+// edition:2021\n+//! Missing docs lint warns about undocumented exported items.\n+//! Use the lint to additionally verify that items are reachable\n+//! but not exported.\n+#![allow(non_camel_case_types)]\n+#![deny(missing_docs)]\n+\n+mod hidden {\n+    pub struct s;\n+    pub enum e { x, y, z }\n+    pub use e::*;\n+    impl s {\n+        pub fn f(&self) {}\n+    }\n+    impl e {\n+        pub fn g(&self) {}\n+    }\n+}\n+// Hide all type definitions while reexporting their constructors:\n+mod e {}\n+mod x {}\n+mod y {}\n+mod z {}\n+mod s {}\n+pub use hidden::*;"}, {"sha": "0ec15d68ed39ee30f55cfbe34d8b3d38db05ac73", "filename": "src/test/ui/privacy/ctor.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f5978468266e8b227a58767a646304c3c006dd0f/src%2Ftest%2Fui%2Fprivacy%2Fctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5978468266e8b227a58767a646304c3c006dd0f/src%2Ftest%2Fui%2Fprivacy%2Fctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fctor.rs?ref=f5978468266e8b227a58767a646304c3c006dd0f", "patch": "@@ -0,0 +1,16 @@\n+// Verify that a type is considered reachable when its constructor is\n+// reachable. The auxiliary library is constructed so that all types are\n+// shadowed and cannot be named directly, while their constructors are\n+// reexported. Regression test for issue #96934.\n+//\n+// aux-build:ctor_aux.rs\n+// edition:2021\n+// build-pass\n+\n+extern crate ctor_aux;\n+\n+fn main() {\n+    ctor_aux::s.f();\n+    ctor_aux::x.g();\n+    ctor_aux::y.g();\n+}"}]}