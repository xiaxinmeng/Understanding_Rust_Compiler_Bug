{"sha": "acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZDZhYjhmMGYwMDM2NWI0MjRhYzljZDgzZDlkMDg4NTJhZGQwYmM=", "commit": {"author": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-16T00:36:43Z"}, "committer": {"name": "Kyle Stachowicz", "email": "kylestach99@gmail.com", "date": "2018-05-18T23:57:15Z"}, "message": "Rename `unused_loop_label` to `unused_label` and fix/clean up lint logic", "tree": {"sha": "2f294a1498776591282543049ba0672a569a17ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f294a1498776591282543049ba0672a569a17ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "html_url": "https://github.com/rust-lang/rust/commit/acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/comments", "author": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylestach", "id": 9097872, "node_id": "MDQ6VXNlcjkwOTc4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9097872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylestach", "html_url": "https://github.com/kylestach", "followers_url": "https://api.github.com/users/kylestach/followers", "following_url": "https://api.github.com/users/kylestach/following{/other_user}", "gists_url": "https://api.github.com/users/kylestach/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylestach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylestach/subscriptions", "organizations_url": "https://api.github.com/users/kylestach/orgs", "repos_url": "https://api.github.com/users/kylestach/repos", "events_url": "https://api.github.com/users/kylestach/events{/privacy}", "received_events_url": "https://api.github.com/users/kylestach/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb867d3512b009c660f8a9c3154d19e119f7ff5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb867d3512b009c660f8a9c3154d19e119f7ff5d", "html_url": "https://github.com/rust-lang/rust/commit/bb867d3512b009c660f8a9c3154d19e119f7ff5d"}], "stats": {"total": 79, "additions": 37, "deletions": 42}, "files": [{"sha": "b0a766ec058749a6f101162a11c74f1e0038531a", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "patch": "@@ -110,7 +110,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n \n     add_early_builtin_with_new!(sess,\n                                 DeprecatedAttr,\n-                                UnusedLoopLabel,\n+                                UnusedLabel,\n                                 );\n \n     add_builtin!(sess,\n@@ -178,8 +178,8 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n                     UNUSED_DOC_COMMENT,\n                     UNUSED_EXTERN_CRATES,\n                     UNUSED_FEATURES,\n-                    UNUSED_PARENS,\n-                    UNUSED_LOOP_LABEL);\n+                    UNUSED_LABEL,\n+                    UNUSED_PARENS);\n \n     add_lint_group!(sess,\n                     \"rust_2018_idioms\","}, {"sha": "61c0485f88615ef5f8c37266f35920d9110218d6", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 25, "deletions": 30, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "patch": "@@ -25,8 +25,6 @@ use syntax_pos::Span;\n \n use rustc::hir;\n \n-use std::vec;\n-\n declare_lint! {\n     pub UNUSED_MUST_USE,\n     Warn,\n@@ -468,41 +466,38 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedAllocation {\n }\n \n declare_lint! {\n-    pub(super) UNUSED_LOOP_LABEL,\n+    pub(super) UNUSED_LABEL,\n     Warn,\n-    \"warns on unused labels for loops\"\n+    \"warns on unused labels\"\n }\n \n #[derive(Clone)]\n-pub struct UnusedLoopLabel(pub vec::Vec<ast::Label>);\n+pub struct UnusedLabel(pub Vec<ast::Label>);\n \n-impl UnusedLoopLabel {\n+impl UnusedLabel {\n     pub fn new() -> Self {\n-        UnusedLoopLabel(vec![])\n+        UnusedLabel(vec![])\n     }\n }\n \n-impl LintPass for UnusedLoopLabel {\n+impl LintPass for UnusedLabel {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(UNUSED_LOOP_LABEL)\n+        lint_array!(UNUSED_LABEL)\n     }\n }\n \n-impl EarlyLintPass for UnusedLoopLabel {\n+impl EarlyLintPass for UnusedLabel {\n     fn check_expr(&mut self, _: &EarlyContext, expr: &ast::Expr) {\n         match expr.node {\n-            ast::ExprKind::While(_, _, Some(ref label))\n-            | ast::ExprKind::WhileLet(_, _, _, Some(ref label))\n-            | ast::ExprKind::ForLoop(_, _, _, Some(ref label))\n-            | ast::ExprKind::Loop(_, Some(ref label)) => {\n-                self.0.push(*label);\n+            ast::ExprKind::While(_, _, Some(label))\n+            | ast::ExprKind::WhileLet(_, _, _, Some(label))\n+            | ast::ExprKind::ForLoop(_, _, _, Some(label))\n+            | ast::ExprKind::Loop(_, Some(label)) => {\n+                self.0.push(label);\n             }\n-            ast::ExprKind::Break(Some(ref label), _) | ast::ExprKind::Continue(Some(ref label)) => {\n-                'remove_used_label: for i in (0..self.0.len()).rev() {\n-                    if self.0.get(i).unwrap().ident.name == label.ident.name {\n-                        self.0.remove(i);\n-                        break 'remove_used_label;\n-                    }\n+            ast::ExprKind::Break(Some(label), _) | ast::ExprKind::Continue(Some(label)) => {\n+                if let Some(index) = self.0.iter().rposition(|&l| l.ident == label.ident) {\n+                    self.0.remove(index);\n                 }\n             }\n             _ => {}\n@@ -511,17 +506,17 @@ impl EarlyLintPass for UnusedLoopLabel {\n \n     fn check_expr_post(&mut self, ctxt: &EarlyContext, expr: &ast::Expr) {\n         match expr.node {\n-            ast::ExprKind::While(_, _, Some(ref label))\n-            | ast::ExprKind::WhileLet(_, _, _, Some(ref label))\n-            | ast::ExprKind::ForLoop(_, _, _, Some(ref label))\n-            | ast::ExprKind::Loop(_, Some(ref label)) => if !self.0.is_empty() {\n-                {\n-                    let unused_label = self.0.last().unwrap();\n-                    if label.ident.name == unused_label.ident.name {\n-                        ctxt.span_lint(UNUSED_LOOP_LABEL, label.ident.span, \"unused loop label\");\n+            ast::ExprKind::While(_, _, Some(label))\n+            | ast::ExprKind::WhileLet(_, _, _, Some(label))\n+            | ast::ExprKind::ForLoop(_, _, _, Some(label))\n+            | ast::ExprKind::Loop(_, Some(label)) => {\n+                if let Some(unused_label) = self.0.pop() {\n+                    if label.ident == unused_label.ident {\n+                        ctxt.span_lint(UNUSED_LABEL, label.ident.span, \"unused label\");\n+                    } else {\n+                        self.0.push(unused_label);\n                     }\n                 }\n-                self.0.pop();\n             },\n             _ => {}\n         }"}, {"sha": "ceb70fc542dc0dad2be87eaff25fe64ae4f095c7", "filename": "src/test/ui/lint/unused_label.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Ftest%2Fui%2Flint%2Funused_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Ftest%2Fui%2Flint%2Funused_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_label.rs?ref=acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "patch": "@@ -13,20 +13,20 @@\n // within nested loops\n \n // compile-pass\n-// compile-flags: -W unused_loop_label\n+// compile-flags: -W unused-label\n \n fn main() {\n     'unused_while_label: while 0 == 0 {\n-        //~^ WARN unused loop label\n+        //~^ WARN unused label\n     }\n \n     let opt = Some(0);\n     'unused_while_let_label: while let Some(_) = opt {\n-        //~^ WARN unused loop label\n+        //~^ WARN unused label\n     }\n \n     'unused_for_label: for _ in 0..10 {\n-        //~^ WARN unused loop label\n+        //~^ WARN unused label\n     }\n \n     'used_loop_label: loop {\n@@ -42,21 +42,21 @@ fn main() {\n \n     'used_loop_label_outer_2: loop {\n         'unused_loop_label_inner_2: loop {\n-            //~^ WARN unused loop label\n+            //~^ WARN unused label\n             break 'used_loop_label_outer_2;\n         }\n     }\n \n     'unused_loop_label_outer_3: loop {\n+        //~^ WARN unused label\n         'used_loop_label_inner_3: loop {\n-            //~^ WARN unused loop label\n             break 'used_loop_label_inner_3;\n         }\n     }\n \n     // This is diverging, so put it at the end so we don't get\n     // unreachable_code errors everywhere else\n     'unused_loop_label: loop {\n-        //~^ WARN unused loop label\n+        //~^ WARN unused label\n     }\n }"}, {"sha": "31f78b28ef5e96bf00b9b45cebe22482ccab0e81", "filename": "src/test/ui/lint/unused_label.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Ftest%2Fui%2Flint%2Funused_label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acd6ab8f0f00365b424ac9cd83d9d08852add0bc/src%2Ftest%2Fui%2Flint%2Funused_label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_label.stderr?ref=acd6ab8f0f00365b424ac9cd83d9d08852add0bc", "patch": "@@ -25,13 +25,13 @@ LL |         'unused_loop_label_inner_2: loop {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused label\n-  --> $DIR/unused_label.rs:50:9\n+  --> $DIR/unused_label.rs:50:5\n    |\n LL |     'unused_loop_label_outer_3: loop {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused label\n-  --> $DIR/unused_label.rs:52:5\n+  --> $DIR/unused_label.rs:59:5\n    |\n LL |     'unused_loop_label: loop {\n    |     ^^^^^^^^^^^^^^^^^^"}]}