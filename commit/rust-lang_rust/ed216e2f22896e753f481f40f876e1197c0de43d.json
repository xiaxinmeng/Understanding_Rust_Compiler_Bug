{"sha": "ed216e2f22896e753f481f40f876e1197c0de43d", "node_id": "C_kwDOAAsO6NoAKGVkMjE2ZTJmMjI4OTZlNzUzZjQ4MWY0MGY4NzZlMTE5N2MwZGU0M2Q", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-05-25T04:29:55Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-05-25T04:29:55Z"}, "message": "Streamline `modify_size_estimate`.", "tree": {"sha": "ffa73e72ce64bbd5c662f7011003d972f26558e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffa73e72ce64bbd5c662f7011003d972f26558e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed216e2f22896e753f481f40f876e1197c0de43d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed216e2f22896e753f481f40f876e1197c0de43d", "html_url": "https://github.com/rust-lang/rust/commit/ed216e2f22896e753f481f40f876e1197c0de43d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed216e2f22896e753f481f40f876e1197c0de43d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86754cd8f280657d75b7dbae1845fa2c45ad28a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/86754cd8f280657d75b7dbae1845fa2c45ad28a9", "html_url": "https://github.com/rust-lang/rust/commit/86754cd8f280657d75b7dbae1845fa2c45ad28a9"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "f31b343c94704bc2ba3bbf22483d1209eb67c29c", "filename": "compiler/rustc_middle/src/mir/mono.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ed216e2f22896e753f481f40f876e1197c0de43d/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed216e2f22896e753f481f40f876e1197c0de43d/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmono.rs?ref=ed216e2f22896e753f481f40f876e1197c0de43d", "patch": "@@ -334,10 +334,7 @@ impl<'tcx> CodegenUnit<'tcx> {\n     }\n \n     pub fn modify_size_estimate(&mut self, delta: usize) {\n-        assert!(self.size_estimate.is_some());\n-        if let Some(size_estimate) = self.size_estimate {\n-            self.size_estimate = Some(size_estimate + delta);\n-        }\n+        *self.size_estimate.as_mut().unwrap() += delta;\n     }\n \n     pub fn contains_item(&self, item: &MonoItem<'tcx>) -> bool {"}]}