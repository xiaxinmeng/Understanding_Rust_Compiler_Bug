{"sha": "4b2a5da8c9626010e4d065e0e5722084fab70ae1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMmE1ZGE4Yzk2MjYwMTBlNGQwNjVlMGU1NzIyMDg0ZmFiNzBhZTE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-07T07:52:12Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-07T14:40:16Z"}, "message": "Rollup merge of #45764 - QuietMisdreavus:rustdoc-doctest-lints, r=GuillaumeGomez\n\nrustdoc: add #[allow(unused)] to every doctest\n\nMore information in #45750 - this is behavior that was documented but not actually implemented.\n\nI also reordered how outer attributes are applied to doctests. Previously, attributes from `#![doc(test(attr(...)))]` would be applied *after* attributes from within the test itself, meaning if a doctest tried to override lints that would be set crate-wide, it wouldn't work at all. This gives a better scope of how lints can be applied.\n\nCloses #45750", "tree": {"sha": "21719860de55c5fb23e60d5ae70f7fd555c32509", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21719860de55c5fb23e60d5ae70f7fd555c32509"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b2a5da8c9626010e4d065e0e5722084fab70ae1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAloBxdAACgkQ/vbIBR0O\nATxc8Q//RNP402kQfdaHCcAoKoHUB5Gyb0YnLgXBIRtJPcJUlN0aE3UEoKE4H+Z4\nizjNJe2Gj/zPNIsROBQgmK89QRUlTb3BJILEFqpk710Z6IXX8vIioHlNxtG20RoU\nGQ1+fNBRSe6dT/OjAU0uk3y3CMBGRfbbF9JmJo2KSae6rS6heY+TWw5z8Owhvoz8\nzoIhyvVReiLfHUOxHLX54i8bpXJEd2VPBTiU67soHX2Chgv+7NdtkgRb6vK33MSU\nP1iuqu8/U4fdorrI/xSfwbdCaBBAte+oHVKEOpwK2Vqf5xThy5kzHYAwUx5zz+aG\nHGCz6HoscBODgVcxLpzcekwBwXzTHZGcuqpQOmUAwy3yL9jcScqTo0wuakL014GU\nuPe66J/L1NNZGO0J1+rB2sOINxLkT7yEDXJGiR+XgxerD0tNUowHwe/Y/Whi9eM/\nitETufHbWjP8MUBIu0ST6Kb4VAuYPvCfU2HDFLpf2Sev89axbfxRcy3+4CBCqBL+\nmSXWTjxdnOuyIGsIiTJkmbmr4t1F1qa5NX6EsMBJ9ibM83LNp1FfxqKd2H4O/f0P\n9H1uBC/gIFbZObYAx1qbP7ESS5ki6NFvlkLwxo1tpcs9R01ovsI6T+IoOQEqhGrG\nDDpiHhGxAf88/AFjgCusEA+m7DBzDF3f1l4aMAN0NOdtNCVuq/A=\n=LNUn\n-----END PGP SIGNATURE-----", "payload": "tree 21719860de55c5fb23e60d5ae70f7fd555c32509\nparent d8238e431445a3b2075496a0e73753209df83f92\nparent ce2768ab95cbac4c4b918c9f382cd5316e286a7a\nauthor kennytm <kennytm@gmail.com> 1510041132 +0800\ncommitter kennytm <kennytm@gmail.com> 1510065616 +0800\n\nRollup merge of #45764 - QuietMisdreavus:rustdoc-doctest-lints, r=GuillaumeGomez\n\nrustdoc: add #[allow(unused)] to every doctest\n\nMore information in #45750 - this is behavior that was documented but not actually implemented.\n\nI also reordered how outer attributes are applied to doctests. Previously, attributes from `#![doc(test(attr(...)))]` would be applied *after* attributes from within the test itself, meaning if a doctest tried to override lints that would be set crate-wide, it wouldn't work at all. This gives a better scope of how lints can be applied.\n\nCloses #45750\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b2a5da8c9626010e4d065e0e5722084fab70ae1", "html_url": "https://github.com/rust-lang/rust/commit/4b2a5da8c9626010e4d065e0e5722084fab70ae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b2a5da8c9626010e4d065e0e5722084fab70ae1/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8238e431445a3b2075496a0e73753209df83f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8238e431445a3b2075496a0e73753209df83f92", "html_url": "https://github.com/rust-lang/rust/commit/d8238e431445a3b2075496a0e73753209df83f92"}, {"sha": "ce2768ab95cbac4c4b918c9f382cd5316e286a7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce2768ab95cbac4c4b918c9f382cd5316e286a7a", "html_url": "https://github.com/rust-lang/rust/commit/ce2768ab95cbac4c4b918c9f382cd5316e286a7a"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "9bbd16355be387a6afa8b3db40ab4213861ef369", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4b2a5da8c9626010e4d065e0e5722084fab70ae1/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b2a5da8c9626010e4d065e0e5722084fab70ae1/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=4b2a5da8c9626010e4d065e0e5722084fab70ae1", "patch": "@@ -337,15 +337,23 @@ pub fn make_test(s: &str,\n \n     let mut prog = String::new();\n \n-    // First push any outer attributes from the example, assuming they\n-    // are intended to be crate attributes.\n-    prog.push_str(&crate_attrs);\n+    if opts.attrs.is_empty() {\n+        // If there aren't any attributes supplied by #![doc(test(attr(...)))], then allow some\n+        // lints that are commonly triggered in doctests. The crate-level test attributes are\n+        // commonly used to make tests fail in case they trigger warnings, so having this there in\n+        // that case may cause some tests to pass when they shouldn't have.\n+        prog.push_str(\"#![allow(unused)]\\n\");\n+    }\n \n-    // Next, any attributes for other aspects such as lints.\n+    // Next, any attributes that came from the crate root via #![doc(test(attr(...)))].\n     for attr in &opts.attrs {\n         prog.push_str(&format!(\"#![{}]\\n\", attr));\n     }\n \n+    // Now push any outer attributes from the example, assuming they\n+    // are intended to be crate attributes.\n+    prog.push_str(&crate_attrs);\n+\n     // Don't inject `extern crate std` because it's already injected by the\n     // compiler.\n     if !s.contains(\"extern crate\") && !opts.no_crate_inject && cratename != Some(\"std\") {"}, {"sha": "478477dea61ed9b3fa54a36436cd764b77b93d15", "filename": "src/test/rustdoc/playground-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b2a5da8c9626010e4d065e0e5722084fab70ae1/src%2Ftest%2Frustdoc%2Fplayground-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b2a5da8c9626010e4d065e0e5722084fab70ae1/src%2Ftest%2Frustdoc%2Fplayground-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fplayground-arg.rs?ref=4b2a5da8c9626010e4d065e0e5722084fab70ae1", "patch": "@@ -21,4 +21,4 @@\n pub fn dummy() {}\n \n // ensure that `extern crate foo;` was inserted into code snips automatically:\n-// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://example.com/?code=extern%20crate%20foo%3B%0Afn%20main()%20%7B%0Ause%20foo%3A%3Adummy%3B%0Adummy()%3B%0A%7D\"]' \"Run\"\n+// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://example.com/?code=%23!%5Ballow(unused)%5D%0Aextern%20crate%20foo%3B%0Afn%20main()%20%7B%0Ause%20foo%3A%3Adummy%3B%0Adummy()%3B%0A%7D\"]' \"Run\""}, {"sha": "8e193efaf85047f95779e5df6629333add9f66fd", "filename": "src/test/rustdoc/playground.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b2a5da8c9626010e4d065e0e5722084fab70ae1/src%2Ftest%2Frustdoc%2Fplayground.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b2a5da8c9626010e4d065e0e5722084fab70ae1/src%2Ftest%2Frustdoc%2Fplayground.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fplayground.rs?ref=4b2a5da8c9626010e4d065e0e5722084fab70ae1", "patch": "@@ -34,6 +34,6 @@\n //! }\n //! ```\n \n-// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://www.example.com/?code=fn%20main()%20%7B%0A%20%20%20%20println!(%22Hello%2C%20world!%22)%3B%0A%7D%0A\"]' \"Run\"\n-// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://www.example.com/?code=fn%20main()%20%7B%0Aprintln!(%22Hello%2C%20world!%22)%3B%0A%7D\"]' \"Run\"\n-// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://www.example.com/?code=%23!%5Bfeature(something)%5D%0A%0Afn%20main()%20%7B%0A%20%20%20%20println!(%22Hello%2C%20world!%22)%3B%0A%7D%0A&version=nightly\"]' \"Run\"\n+// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://www.example.com/?code=%23!%5Ballow(unused)%5D%0Afn%20main()%20%7B%0A%20%20%20%20println!(%22Hello%2C%20world!%22)%3B%0A%7D%0A\"]' \"Run\"\n+// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://www.example.com/?code=%23!%5Ballow(unused)%5D%0Afn%20main()%20%7B%0Aprintln!(%22Hello%2C%20world!%22)%3B%0A%7D\"]' \"Run\"\n+// @matches foo/index.html '//a[@class=\"test-arrow\"][@href=\"https://www.example.com/?code=%23!%5Ballow(unused)%5D%0A%23!%5Bfeature(something)%5D%0A%0Afn%20main()%20%7B%0A%20%20%20%20println!(%22Hello%2C%20world!%22)%3B%0A%7D%0A&version=nightly\"]' \"Run\""}]}