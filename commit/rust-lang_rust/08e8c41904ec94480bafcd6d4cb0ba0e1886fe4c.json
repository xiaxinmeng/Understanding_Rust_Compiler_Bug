{"sha": "08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ZThjNDE5MDRlYzk0NDgwYmFmY2Q2ZDRjYjBiYTBlMTg4NmZlNGM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-03T13:59:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-03T13:59:30Z"}, "message": "Rollup merge of #62319 - ia0:fix_kleene, r=petrochenkov\n\nFix mismatching Kleene operators", "tree": {"sha": "36fada720e232ccbbac8bc763d300dbd50095135", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36fada720e232ccbbac8bc763d300dbd50095135"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdHLTCCRBK7hj4Ov3rIwAAdHIIAE1DbMwLImLVt1+HBHWt0uez\nLArNIt42X82oVWUdhI0rnXGybJXFkg177WqQo+MB9HMSnHPJmEhria1bekEbLZhO\nIjBO/bTJcI2xAzAGxxTBTyog9z3ifh3XKUC4ZktzSLAYi4ctkHWPyUZ3hcktXpWO\n5tItH34QoFXhfFxBLUZjB+u9/IflHVTROJP9TvnNiEOhYq9wvcHO2LCz7b72tK/L\nIAksQAFRvj1ofODY6YFixEmJH/91TnwUzK8fAiM+WNvSCCbuQxNuv5TfRC/QpHUD\noFSzXCGPbIVc5QNyruWyA82An6SjZjv9Tly9+EObNBEqS9WdXaDoEX4FaMA9JS8=\n=Iba6\n-----END PGP SIGNATURE-----\n", "payload": "tree 36fada720e232ccbbac8bc763d300dbd50095135\nparent a0fcf5e6aa80f7231a1eb8e26a9a7afe70bd3033\nparent dd702cc65330281f7cfed746fa02ead92ae8c646\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1562162370 -0400\ncommitter GitHub <noreply@github.com> 1562162370 -0400\n\nRollup merge of #62319 - ia0:fix_kleene, r=petrochenkov\n\nFix mismatching Kleene operators\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c", "html_url": "https://github.com/rust-lang/rust/commit/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0fcf5e6aa80f7231a1eb8e26a9a7afe70bd3033", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0fcf5e6aa80f7231a1eb8e26a9a7afe70bd3033", "html_url": "https://github.com/rust-lang/rust/commit/a0fcf5e6aa80f7231a1eb8e26a9a7afe70bd3033"}, {"sha": "dd702cc65330281f7cfed746fa02ead92ae8c646", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd702cc65330281f7cfed746fa02ead92ae8c646", "html_url": "https://github.com/rust-lang/rust/commit/dd702cc65330281f7cfed746fa02ead92ae8c646"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "439ed0c81c8b66e5fdda531c4c9c089b2041185b", "filename": "src/libcore/tests/ascii.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c/src%2Flibcore%2Ftests%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c/src%2Flibcore%2Ftests%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fascii.rs?ref=08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c", "patch": "@@ -151,7 +151,7 @@ macro_rules! assert_none {\n                            stringify!($what), b);\n                 }\n             }\n-        )*\n+        )+\n     }};\n     ($what:ident, $($str:tt),+,) => (assert_none!($what,$($str),+))\n }"}, {"sha": "06c3a78c1698ac831d548abc54fb3a1057ea4e52", "filename": "src/libcore/tests/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c/src%2Flibcore%2Ftests%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c/src%2Flibcore%2Ftests%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fpattern.rs?ref=08e8c41904ec94480bafcd6d4cb0ba0e1886fe4c", "patch": "@@ -5,7 +5,7 @@ use std::str::pattern::*;\n macro_rules! search_asserts {\n     ($haystack:expr, $needle:expr, $testname:expr, [$($func:ident),*], $result:expr) => {\n         let mut searcher = $needle.into_searcher($haystack);\n-        let arr = [$( Step::from(searcher.$func()) ),+];\n+        let arr = [$( Step::from(searcher.$func()) ),*];\n         assert_eq!(&arr[..], &$result, $testname);\n     }\n }"}]}