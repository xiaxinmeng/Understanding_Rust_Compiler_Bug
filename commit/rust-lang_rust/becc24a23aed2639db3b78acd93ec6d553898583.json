{"sha": "becc24a23aed2639db3b78acd93ec6d553898583", "node_id": "C_kwDOAAsO6NoAKGJlY2MyNGEyM2FlZDI2MzlkYjNiNzhhY2Q5M2VjNmQ1NTM4OTg1ODM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-19T02:28:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-19T02:28:47Z"}, "message": "Auto merge of #97870 - eggyal:inplace_fold_spec, r=wesleywiser\n\nUse liballoc's specialised in-place vec collection\n\nliballoc already specialises in-place vector collection, so manually\nreimplementing it in `IdFunctor::try_map_id` was superfluous.", "tree": {"sha": "5838e2fc43864e13aa948a42a08cee237a67f5a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5838e2fc43864e13aa948a42a08cee237a67f5a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/becc24a23aed2639db3b78acd93ec6d553898583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/becc24a23aed2639db3b78acd93ec6d553898583", "html_url": "https://github.com/rust-lang/rust/commit/becc24a23aed2639db3b78acd93ec6d553898583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/becc24a23aed2639db3b78acd93ec6d553898583/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0ffda6b3c3ea392c6cf88c676133666f491e5c", "html_url": "https://github.com/rust-lang/rust/commit/ff0ffda6b3c3ea392c6cf88c676133666f491e5c"}, {"sha": "9208c08a771199e49aa1bff0e80354124eddbe5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9208c08a771199e49aa1bff0e80354124eddbe5f", "html_url": "https://github.com/rust-lang/rust/commit/9208c08a771199e49aa1bff0e80354124eddbe5f"}], "stats": {"total": 36, "additions": 2, "deletions": 34}, "files": [{"sha": "84cb417dd89363c64946c1cef65cca0d15d6fd38", "filename": "compiler/rustc_data_structures/src/functor.rs", "status": "modified", "additions": 2, "deletions": 34, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/becc24a23aed2639db3b78acd93ec6d553898583/compiler%2Frustc_data_structures%2Fsrc%2Ffunctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/becc24a23aed2639db3b78acd93ec6d553898583/compiler%2Frustc_data_structures%2Fsrc%2Ffunctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ffunctor.rs?ref=becc24a23aed2639db3b78acd93ec6d553898583", "patch": "@@ -34,43 +34,11 @@ impl<T> IdFunctor for Vec<T> {\n     type Inner = T;\n \n     #[inline]\n-    fn try_map_id<F, E>(self, mut f: F) -> Result<Self, E>\n+    fn try_map_id<F, E>(self, f: F) -> Result<Self, E>\n     where\n         F: FnMut(Self::Inner) -> Result<Self::Inner, E>,\n     {\n-        struct HoleVec<T> {\n-            vec: Vec<mem::ManuallyDrop<T>>,\n-            hole: Option<usize>,\n-        }\n-\n-        impl<T> Drop for HoleVec<T> {\n-            fn drop(&mut self) {\n-                unsafe {\n-                    for (index, slot) in self.vec.iter_mut().enumerate() {\n-                        if self.hole != Some(index) {\n-                            mem::ManuallyDrop::drop(slot);\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-\n-        unsafe {\n-            let (ptr, length, capacity) = self.into_raw_parts();\n-            let vec = Vec::from_raw_parts(ptr.cast(), length, capacity);\n-            let mut hole_vec = HoleVec { vec, hole: None };\n-\n-            for (index, slot) in hole_vec.vec.iter_mut().enumerate() {\n-                hole_vec.hole = Some(index);\n-                let original = mem::ManuallyDrop::take(slot);\n-                let mapped = f(original)?;\n-                *slot = mem::ManuallyDrop::new(mapped);\n-                hole_vec.hole = None;\n-            }\n-\n-            mem::forget(hole_vec);\n-            Ok(Vec::from_raw_parts(ptr, length, capacity))\n-        }\n+        self.into_iter().map(f).collect()\n     }\n }\n "}]}