{"sha": "043d873b322ff2b5acfe221e756ad090f71879b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0M2Q4NzNiMzIyZmYyYjVhY2ZlMjIxZTc1NmFkMDkwZjcxODc5Yjk=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-21T15:53:37Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-25T13:50:37Z"}, "message": "fix tidy errors", "tree": {"sha": "3d9007ed5d664a7f867c6bd399a190759013f4df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d9007ed5d664a7f867c6bd399a190759013f4df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/043d873b322ff2b5acfe221e756ad090f71879b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/043d873b322ff2b5acfe221e756ad090f71879b9", "html_url": "https://github.com/rust-lang/rust/commit/043d873b322ff2b5acfe221e756ad090f71879b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/043d873b322ff2b5acfe221e756ad090f71879b9/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "119882eaa59cfabe2ab62f74ec7c76f7e9b95cb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/119882eaa59cfabe2ab62f74ec7c76f7e9b95cb1", "html_url": "https://github.com/rust-lang/rust/commit/119882eaa59cfabe2ab62f74ec7c76f7e9b95cb1"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "62ccd55b483caf314a40636ff37dc6505e34e3a2", "filename": "src/librustc_trans/monomorphize.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/043d873b322ff2b5acfe221e756ad090f71879b9/src%2Flibrustc_trans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/043d873b322ff2b5acfe221e756ad090f71879b9/src%2Flibrustc_trans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmonomorphize.rs?ref=043d873b322ff2b5acfe221e756ad090f71879b9", "patch": "@@ -112,7 +112,8 @@ fn resolve_associated_item<'a, 'tcx>(\n            def_id, trait_id, rcvr_substs);\n \n     let trait_ref = ty::TraitRef::from_method(tcx, trait_id, rcvr_substs);\n-    let vtbl = tcx.trans_fulfill_obligation(DUMMY_SP, ty::ParamEnv::empty(traits::Reveal::All), ty::Binder(trait_ref));\n+    let vtbl = tcx.trans_fulfill_obligation(\n+        DUMMY_SP, ty::ParamEnv::empty(traits::Reveal::All), ty::Binder(trait_ref));\n \n     // Now that we know which impl is being used, we can dispatch to\n     // the actual function:\n@@ -226,7 +227,8 @@ pub fn custom_coerce_unsize_info<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         substs: tcx.mk_substs_trait(source_ty, &[target_ty])\n     });\n \n-    match tcx.trans_fulfill_obligation(DUMMY_SP, ty::ParamEnv::empty(traits::Reveal::All), trait_ref) {\n+    match tcx.trans_fulfill_obligation(\n+        DUMMY_SP, ty::ParamEnv::empty(traits::Reveal::All), trait_ref) {\n         traits::VtableImpl(traits::VtableImplData { impl_def_id, .. }) => {\n             tcx.coerce_unsized_info(impl_def_id).custom_kind.unwrap()\n         }"}]}