{"sha": "6c7526d308a8a9c04318c19c5df626723f69ec23", "node_id": "C_kwDOAAsO6NoAKDZjNzUyNmQzMDhhOGE5YzA0MzE4YzE5YzVkZjYyNjcyM2Y2OWVjMjM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-10-15T17:29:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-15T17:29:03Z"}, "message": "Merge #10552\n\n10552: fix: Fix missing_fields diagnostic fix replacing wrong text ranges r=Veykril a=Veykril\n\nFixes #5393 by replacing the problematic behaviour there with a new \"problem\"\r\n\r\nIt replaces the correct range now, but it potentially discards the whitespace in the macro input. This is the best we can do currently until we get a formatter.\r\n\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "5362ff48fcbb222f44efa1dec304a25293c6dbc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5362ff48fcbb222f44efa1dec304a25293c6dbc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c7526d308a8a9c04318c19c5df626723f69ec23", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhabpfCRBK7hj4Ov3rIwAAXMMIADV/hlaKe1moKA+RjYKf1oMy\nYA16eydYRSLn6BDOUF5M4L2TMkLf6fRCVWQTrzXqfTClRsdZoqxvLkdq0n+QHxIe\ne8oRnQVjeDPJlN52Lw8bDPnwVcVlKZni0a9WhDdlzhWVbVIYzZs5esKw39e0Kb42\nmg0C1tsKgO6VlwZ5ve8rfD7T60WvegTqrRs1w6M+zT0qyJWZ7s5Jq281RWPBI+fi\n9cG062FTJgzN9Zl1XLsvNO74m5b/XfUrekWh2DQcHpPmunEPGj1ZRdJT1gXulw/J\na6gcdHi5C+BQ2cIisaXRiibKiCz/gRcYkdQeoJqMjvPRNABAKTcPQlbdoQIWGss=\n=ezK8\n-----END PGP SIGNATURE-----\n", "payload": "tree 5362ff48fcbb222f44efa1dec304a25293c6dbc0\nparent c67db1b952d476ec11decb9fbb5f69bd697cd0f8\nparent ac505b21a8f3f1f03bfeed9209cfcf920c223852\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1634318943 +0000\ncommitter GitHub <noreply@github.com> 1634318943 +0000\n\nMerge #10552\n\n10552: fix: Fix missing_fields diagnostic fix replacing wrong text ranges r=Veykril a=Veykril\n\nFixes #5393 by replacing the problematic behaviour there with a new \"problem\"\r\n\r\nIt replaces the correct range now, but it potentially discards the whitespace in the macro input. This is the best we can do currently until we get a formatter.\r\n\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c7526d308a8a9c04318c19c5df626723f69ec23", "html_url": "https://github.com/rust-lang/rust/commit/6c7526d308a8a9c04318c19c5df626723f69ec23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c7526d308a8a9c04318c19c5df626723f69ec23/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67db1b952d476ec11decb9fbb5f69bd697cd0f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c67db1b952d476ec11decb9fbb5f69bd697cd0f8", "html_url": "https://github.com/rust-lang/rust/commit/c67db1b952d476ec11decb9fbb5f69bd697cd0f8"}, {"sha": "ac505b21a8f3f1f03bfeed9209cfcf920c223852", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac505b21a8f3f1f03bfeed9209cfcf920c223852", "html_url": "https://github.com/rust-lang/rust/commit/ac505b21a8f3f1f03bfeed9209cfcf920c223852"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "3d416591fe62f9504f949b45669285610b2b0622", "filename": "crates/ide_diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6c7526d308a8a9c04318c19c5df626723f69ec23/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7526d308a8a9c04318c19c5df626723f69ec23/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=6c7526d308a8a9c04318c19c5df626723f69ec23", "patch": "@@ -54,6 +54,7 @@ fn fixes(ctx: &DiagnosticsContext<'_>, d: &hir::MissingFields) -> Option<Vec<Ass\n         Either::Right(_) => return None,\n     };\n     let old_field_list = field_list_parent.record_expr_field_list()?;\n+\n     let new_field_list = old_field_list.clone_for_update();\n     let mut locals = FxHashMap::default();\n     ctx.sema.scope(field_list_parent.syntax()).process_all_names(&mut |name, def| {\n@@ -80,11 +81,19 @@ fn fixes(ctx: &DiagnosticsContext<'_>, d: &hir::MissingFields) -> Option<Vec<Ass\n         new_field_list.add_field(field);\n     }\n \n-    let edit = {\n-        let mut builder = TextEdit::builder();\n+    let mut builder = TextEdit::builder();\n+    if d.file.is_macro() {\n+        // we can't map the diff up into the macro input unfortunately, as the macro loses all\n+        // whitespace information so the diff wouldn't be applicable no matter what\n+        // This has the downside that the cursor will be moved in macros by doing it without a diff\n+        // but that is a trade off we can make.\n+        // FIXE: this also currently discards a lot of whitespace in the input... we really need a formatter here\n+        let range = ctx.sema.original_range_opt(old_field_list.syntax())?;\n+        builder.replace(range.range, new_field_list.to_string());\n+    } else {\n         algo::diff(old_field_list.syntax(), new_field_list.syntax()).into_text_edit(&mut builder);\n-        builder.finish()\n-    };\n+    }\n+    let edit = builder.finish();\n     Some(vec![fix(\n         \"fill_missing_fields\",\n         \"Fill struct fields\",\n@@ -151,7 +160,6 @@ fn x(a: S) {\n \n     #[test]\n     fn range_mapping_out_of_macros() {\n-        // FIXME: this is very wrong, but somewhat tricky to fix.\n         check_fix(\n             r#\"\n fn some() {}\n@@ -167,14 +175,14 @@ fn main() {\n pub struct Foo { pub a: i32, pub b: i32 }\n \"#,\n             r#\"\n-fn some(, b: todo!() ) {}\n+fn some() {}\n fn items() {}\n fn here() {}\n \n macro_rules! id { ($($tt:tt)*) => { $($tt)*}; }\n \n fn main() {\n-    let _x = id![Foo { a: 42 }];\n+    let _x = id![Foo {a:42, b: todo!() }];\n }\n \n pub struct Foo { pub a: i32, pub b: i32 }"}]}