{"sha": "d8f3b0d01d961fc95caea7b680f397753b243ff9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZjNiMGQwMWQ5NjFmYzk1Y2FlYTdiNjgwZjM5Nzc1M2IyNDNmZjk=", "commit": {"author": {"name": "funkill2", "email": "funkill2@gmail.com", "date": "2019-03-18T17:27:11Z"}, "committer": {"name": "funkill2", "email": "funkill2@gmail.com", "date": "2019-03-18T17:27:11Z"}, "message": "added helper module for appending vscode path", "tree": {"sha": "64becf3682c07090f3b0e9e52bb05268ff79f6b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64becf3682c07090f3b0e9e52bb05268ff79f6b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8f3b0d01d961fc95caea7b680f397753b243ff9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEncutfLmVortz0Rb+kgKyQy+G5IcFAlyP1O8ACgkQkgKyQy+G\n5Ic1pRAAg5uHXGYCIg0bSyxWimVyfEmspeXoKcAeKTZTvrCG99wlIH2/96o75VP8\nr7muZBA58EuP0MfnkqafWn8cQM3VLvD+DmKLVhr7F7d9Ghb3Kwb7BqZijOi6BqTc\nS0qaBd8cy9RP4NWgIsQNG5iaPZfFo9INtF7Q+pSpY6pCoL9Yw1R+7nqopNZQHGvU\nK7+aWU0oWN5jN2GDN+vzW6qGB37fGx55JFl5tybt1rkBaazzCvc7xl4biQKkj/9l\nd78wrbrcAKG8M7refOOEIGP341gKtsDOZXeBL+5RYOJ/fFP6tOXJ+kmqsQYG74bh\n1JHL8vbr972BkiwSQZ6bAZjlHPS4F5lhvduyEYwAIGKcAWFFJSAi/K56piX7uqGo\njDDEFZk5OjpAasLfge2CQ4G7cHL6LK7UFndJCeFYQ3KFdiOEFhpHjRhPf+lsvuz2\nWTtr3YwVA7pTOTaliyM9m2PqHdPBsIs8kAFEgW/jcKSrTAPGqcazvSSF6YBY42MQ\nX+70bu+52T/WOhPLiejfH/aBdW7GrXimEeE6kURO+MwM6NK/WrWs91YdQ743YKmx\nB/ppIrDVQsHL0j+mcZOx+REvHiK3POCJwonUWpZeU4Z7xpyNOBllRQJuEUYTp6AR\nn340A63rsVQYmXlz2yqiwWy3O1pYbFGjlpsuoev+zBLFmnAwwCE=\n=fqZt\n-----END PGP SIGNATURE-----", "payload": "tree 64becf3682c07090f3b0e9e52bb05268ff79f6b3\nparent 1cd18f9237b6ac48ca8461307f2a4eaf273ee394\nauthor funkill2 <funkill2@gmail.com> 1552930031 +0300\ncommitter funkill2 <funkill2@gmail.com> 1552930031 +0300\n\nadded helper module for appending vscode path\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8f3b0d01d961fc95caea7b680f397753b243ff9", "html_url": "https://github.com/rust-lang/rust/commit/d8f3b0d01d961fc95caea7b680f397753b243ff9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8f3b0d01d961fc95caea7b680f397753b243ff9/comments", "author": {"login": "funkill", "id": 4323287, "node_id": "MDQ6VXNlcjQzMjMyODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4323287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/funkill", "html_url": "https://github.com/funkill", "followers_url": "https://api.github.com/users/funkill/followers", "following_url": "https://api.github.com/users/funkill/following{/other_user}", "gists_url": "https://api.github.com/users/funkill/gists{/gist_id}", "starred_url": "https://api.github.com/users/funkill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/funkill/subscriptions", "organizations_url": "https://api.github.com/users/funkill/orgs", "repos_url": "https://api.github.com/users/funkill/repos", "events_url": "https://api.github.com/users/funkill/events{/privacy}", "received_events_url": "https://api.github.com/users/funkill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "funkill", "id": 4323287, "node_id": "MDQ6VXNlcjQzMjMyODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4323287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/funkill", "html_url": "https://github.com/funkill", "followers_url": "https://api.github.com/users/funkill/followers", "following_url": "https://api.github.com/users/funkill/following{/other_user}", "gists_url": "https://api.github.com/users/funkill/gists{/gist_id}", "starred_url": "https://api.github.com/users/funkill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/funkill/subscriptions", "organizations_url": "https://api.github.com/users/funkill/orgs", "repos_url": "https://api.github.com/users/funkill/repos", "events_url": "https://api.github.com/users/funkill/events{/privacy}", "received_events_url": "https://api.github.com/users/funkill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cd18f9237b6ac48ca8461307f2a4eaf273ee394", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd18f9237b6ac48ca8461307f2a4eaf273ee394", "html_url": "https://github.com/rust-lang/rust/commit/1cd18f9237b6ac48ca8461307f2a4eaf273ee394"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "484858a1e2f9f293e1a093a878fb8ed8862016e6", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/d8f3b0d01d961fc95caea7b680f397753b243ff9/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f3b0d01d961fc95caea7b680f397753b243ff9/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=d8f3b0d01d961fc95caea7b680f397753b243ff9", "patch": "@@ -63,3 +63,57 @@ fn verify_installed_extensions() -> Result<()> {\n     }\n     Ok(())\n }\n+\n+#[cfg(target_os = \"macos\")]\n+mod vscode_path_helpers {\n+    use super::Result;\n+    use std::{path::{PathBuf}, env};\n+    use failure::bail;\n+\n+    pub(crate) fn append_vscode_path() -> Result<()> {\n+        let vars = match env::var_os(\"PATH\") {\n+            Some(path) => path,\n+            None => bail!(\"Could not get PATH variable from env.\"),\n+        };\n+\n+        let vscode_path = get_vscode_path()?;\n+        let mut paths = env::split_paths(&vars).collect::<Vec<_>>();\n+        paths.push(vscode_path);\n+        let new_paths = env::join_paths(paths)?;\n+        env::set_var(\"PATH\", &new_paths);\n+\n+        Ok(())\n+    }\n+\n+    fn get_vscode_path() -> Result<PathBuf> {\n+        const COMMON_APP_PATH: &str =\n+            r\"/Applications/Visual Studio Code.app/Contents/Resources/app/bin\";\n+        const ROOT_DIR: &str = \"\";\n+        let home_dir = match env::var(\"HOME\") {\n+            Ok(home) => home,\n+            Err(e) => bail!(\"Failed getting HOME from environment with error: {}.\", e),\n+        };\n+\n+        for dir in [ROOT_DIR, &home_dir].iter() {\n+            let path = String::from(dir.clone()) + COMMON_APP_PATH;\n+            let path = PathBuf::from(path);\n+            if path.exists() {\n+                return Ok(path);\n+            }\n+        }\n+\n+        bail!(\n+            \"Could not find Visual Studio Code application. Please make sure you \\\n+             have Visual Studio Code installed and try again or install extension \\\n+             manually.\"\n+        )\n+    }\n+}\n+\n+#[cfg(not(target_os = \"macos\"))]\n+mod vscode_path_helpers {\n+    use super::Result;\n+    pub(crate) fn append_vscode_path() -> Result<()> {\n+        Ok(())\n+    }\n+}"}]}