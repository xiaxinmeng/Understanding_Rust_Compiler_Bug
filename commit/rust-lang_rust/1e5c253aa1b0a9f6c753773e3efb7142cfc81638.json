{"sha": "1e5c253aa1b0a9f6c753773e3efb7142cfc81638", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNWMyNTNhYTFiMGE5ZjZjNzUzNzczZTNlZmI3MTQyY2ZjODE2Mzg=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-09-26T21:14:31Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-09-26T21:14:31Z"}, "message": "incr.comp.: Add test case for cache artifact file headers.", "tree": {"sha": "7f4e22137fd1aa27de1c64827392c099e9778233", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f4e22137fd1aa27de1c64827392c099e9778233"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e5c253aa1b0a9f6c753773e3efb7142cfc81638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e5c253aa1b0a9f6c753773e3efb7142cfc81638", "html_url": "https://github.com/rust-lang/rust/commit/1e5c253aa1b0a9f6c753773e3efb7142cfc81638", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e5c253aa1b0a9f6c753773e3efb7142cfc81638/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76f76ae1d82fda88e5cf3e5900885496425722f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/76f76ae1d82fda88e5cf3e5900885496425722f8", "html_url": "https://github.com/rust-lang/rust/commit/76f76ae1d82fda88e5cf3e5900885496425722f8"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "274e05255b9483e7bef17d9811c9f1213fab0e91", "filename": "src/librustc_incremental/persist/file_format.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c253aa1b0a9f6c753773e3efb7142cfc81638/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c253aa1b0a9f6c753773e3efb7142cfc81638/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffile_format.rs?ref=1e5c253aa1b0a9f6c753773e3efb7142cfc81638", "patch": "@@ -22,6 +22,9 @@\n use std::io::{self, Read};\n use std::path::Path;\n use std::fs::File;\n+use std::env;\n+\n+use rustc::session::config::nightly_options;\n \n /// The first few bytes of files generated by incremental compilation\n const FILE_MAGIC: &'static [u8] = b\"RSIC\";\n@@ -38,9 +41,11 @@ pub fn write_file_header<W: io::Write>(stream: &mut W) -> io::Result<()> {\n     stream.write_all(FILE_MAGIC)?;\n     stream.write_all(&[(HEADER_FORMAT_VERSION >> 0) as u8,\n                        (HEADER_FORMAT_VERSION >> 8) as u8])?;\n-    assert_eq!(RUSTC_VERSION.len(), (RUSTC_VERSION.len() as u8) as usize);\n-    stream.write_all(&[RUSTC_VERSION.len() as u8])?;\n-    stream.write_all(RUSTC_VERSION.as_bytes())?;\n+\n+    let rustc_version = rustc_version();\n+    assert_eq!(rustc_version.len(), (rustc_version.len() as u8) as usize);\n+    stream.write_all(&[rustc_version.len() as u8])?;\n+    stream.write_all(rustc_version.as_bytes())?;\n \n     Ok(())\n }\n@@ -103,3 +108,13 @@ pub fn read_file(path: &Path) -> io::Result<Option<Vec<u8>>> {\n \n     Ok(Some(data))\n }\n+\n+fn rustc_version() -> String {\n+    if nightly_options::is_nightly_build() {\n+        if let Some(val) = env::var_os(\"RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER\") {\n+            return val.to_string_lossy().into_owned()\n+        }\n+    }\n+\n+    RUSTC_VERSION.to_string()\n+}"}, {"sha": "274a3920be8d4ad54d02499fa713cb37690a0641", "filename": "src/test/incremental/cache_file_headers.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c253aa1b0a9f6c753773e3efb7142cfc81638/src%2Ftest%2Fincremental%2Fcache_file_headers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c253aa1b0a9f6c753773e3efb7142cfc81638/src%2Ftest%2Fincremental%2Fcache_file_headers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fcache_file_headers.rs?ref=1e5c253aa1b0a9f6c753773e3efb7142cfc81638", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This test case makes sure that the compiler does not try to re-use anything\n+// from the incremental compilation cache if the cache was produced by a\n+// different compiler version. This is tested by artificially forcing the\n+// emission of a different compiler version in the header of rpass1 artifacts,\n+// and then making sure that the only object file of the test program gets\n+// re-translated although the program stays unchanged.\n+\n+// The `l33t haxx0r` Rust compiler is known to produce incr. comp. artifacts\n+// that are outrageously incompatible with just about anything, even itself:\n+//[rpass1] rustc-env:RUSTC_FORCE_INCR_COMP_ARTIFACT_HEADER=\"l33t haxx0r rustc 2.1 LTS\"\n+\n+// revisions:rpass1 rpass2\n+\n+#![feature(rustc_attrs)]\n+#![rustc_partition_translated(module=\"cache_file_headers\", cfg=\"rpass2\")]\n+\n+fn main() {\n+    // empty\n+}"}]}