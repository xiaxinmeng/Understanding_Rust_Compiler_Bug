{"sha": "4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61", "node_id": "C_kwDOAAsO6NoAKDRiZjc1YzVkNmUzMzExYzllMDllMDI1NTZhNTA4MGFjNGU0YTZiNjE", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-25T15:34:32Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-25T15:34:40Z"}, "message": "fix: Prioritize tuple fields in highlight_related", "tree": {"sha": "33fec6e6f4a584353d367b0383e9cedc30a38944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33fec6e6f4a584353d367b0383e9cedc30a38944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61", "html_url": "https://github.com/rust-lang/rust/commit/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ca6233bd2723c33152dcabd32f184d769d8339c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca6233bd2723c33152dcabd32f184d769d8339c", "html_url": "https://github.com/rust-lang/rust/commit/4ca6233bd2723c33152dcabd32f184d769d8339c"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "aac23be777ffc83d0806f8d7dc0b2427074b2895", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=4bf75c5d6e3311c9e09e02556a5080ac4e4a6b61", "patch": "@@ -10,7 +10,7 @@ use rustc_hash::FxHashSet;\n use syntax::{\n     ast::{self, HasLoopBody},\n     match_ast, AstNode,\n-    SyntaxKind::IDENT,\n+    SyntaxKind::{IDENT, INT_NUMBER},\n     SyntaxNode, SyntaxToken, TextRange, T,\n };\n \n@@ -54,10 +54,9 @@ pub(crate) fn highlight_related(\n         T![?] => 4, // prefer `?` when the cursor is sandwiched like in `await$0?`\n         T![->] => 3,\n         kind if kind.is_keyword() => 2,\n-        IDENT => 1,\n+        IDENT | INT_NUMBER => 1,\n         _ => 0,\n     })?;\n-\n     match token.kind() {\n         T![?] if config.exit_points && token.parent().and_then(ast::TryExpr::cast).is_some() => {\n             highlight_exit_points(sema, token)\n@@ -346,6 +345,22 @@ mod tests {\n         assert_eq!(expected, actual);\n     }\n \n+    #[test]\n+    fn test_hl_tuple_fields() {\n+        check(\n+            r#\"\n+struct Tuple(u32, u32);\n+\n+fn foo(t: Tuple) {\n+    t.0$0;\n+   // ^ read\n+    t.0;\n+   // ^ read\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_hl_module() {\n         check("}]}