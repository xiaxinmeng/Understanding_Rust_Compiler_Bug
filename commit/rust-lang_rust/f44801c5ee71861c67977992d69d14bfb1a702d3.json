{"sha": "f44801c5ee71861c67977992d69d14bfb1a702d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NDgwMWM1ZWU3MTg2MWM2Nzk3Nzk5MmQ2OWQxNGJmYjFhNzAyZDM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-09T03:46:44Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-09T19:54:24Z"}, "message": "travis: Split the linux-tested-targets builder\n\nTravis only gives us 30GB disk space and we don't currently have an option to\nincrease that. Each musl target generates \"hello world\" binaries of about 3.5MB\nin size, and we're testing two targets in the same image. We have around 3k\nrun-pass tests and 2 musl targets which works out to around 20GB. That's\ndangerously close to the limit and is causing PRs to bounce.\n\nThis PR splits up the builder in two, one for x86_64 musl and the other for\ni686. Hopefully that'll keep us under the disk limit.\n\nCloses #40359", "tree": {"sha": "83def9b791defd156f02d1fd79e0d2c0bff57b2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83def9b791defd156f02d1fd79e0d2c0bff57b2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f44801c5ee71861c67977992d69d14bfb1a702d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f44801c5ee71861c67977992d69d14bfb1a702d3", "html_url": "https://github.com/rust-lang/rust/commit/f44801c5ee71861c67977992d69d14bfb1a702d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f44801c5ee71861c67977992d69d14bfb1a702d3/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3087a1f39eaeac9d76c8b159dcc64de515bb2b83", "url": "https://api.github.com/repos/rust-lang/rust/commits/3087a1f39eaeac9d76c8b159dcc64de515bb2b83", "html_url": "https://github.com/rust-lang/rust/commit/3087a1f39eaeac9d76c8b159dcc64de515bb2b83"}], "stats": {"total": 109, "additions": 87, "deletions": 22}, "files": [{"sha": "fa6c9cf0748647c5d2a48593f1c2f6e127ebda8d", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f44801c5ee71861c67977992d69d14bfb1a702d3/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/f44801c5ee71861c67977992d69d14bfb1a702d3/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=f44801c5ee71861c67977992d69d14bfb1a702d3", "patch": "@@ -15,17 +15,18 @@ matrix:\n     - env: IMAGE=arm-android\n     - env: IMAGE=armhf-gnu\n     - env: IMAGE=cross DEPLOY=1\n-    - env: IMAGE=linux-tested-targets DEPLOY=1\n     - env: IMAGE=dist-android DEPLOY=1\n     - env: IMAGE=dist-arm-linux DEPLOY=1\n     - env: IMAGE=dist-armv7-aarch64-linux DEPLOY=1\n     - env: IMAGE=dist-freebsd DEPLOY=1\n+    - env: IMAGE=dist-i586-gnu-i686-musl DEPLOY=1\n     - env: IMAGE=dist-mips-linux DEPLOY=1\n     - env: IMAGE=dist-mips64-linux DEPLOY=1\n     - env: IMAGE=dist-powerpc-linux DEPLOY=1\n     - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n     - env: IMAGE=dist-s390x-linux-netbsd DEPLOY=1\n     - env: IMAGE=dist-x86-linux DEPLOY=1\n+    - env: IMAGE=dist-x86_64-musl DEPLOY=1\n     - env: IMAGE=emscripten\n     - env: IMAGE=i686-gnu\n     - env: IMAGE=i686-gnu-nopt"}, {"sha": "0897be80cc22cbc51e24b73cd1a0915d65d689ea", "filename": "src/ci/docker/dist-i586-gnu-i686-musl/Dockerfile", "status": "renamed", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile?ref=f44801c5ee71861c67977992d69d14bfb1a702d3", "patch": "@@ -30,25 +30,21 @@ RUN curl -o /usr/local/bin/sccache \\\n       chmod +x /usr/local/bin/sccache\n \n ENV RUST_CONFIGURE_ARGS \\\n-      --target=x86_64-unknown-linux-musl,i686-unknown-linux-musl,i586-unknown-linux-gnu \\\n-      --musl-root-x86_64=/musl-x86_64 \\\n+      --target=i686-unknown-linux-musl,i586-unknown-linux-gnu \\\n       --musl-root-i686=/musl-i686\n \n # Newer binutils broke things on some vms/distros (i.e., linking against\n # unknown relocs disabled by the following flag), so we need to go out of our\n # way to produce \"super compatible\" binaries.\n #\n # See: https://github.com/rust-lang/rust/issues/34978\n-ENV CFLAGS_i686_unknown_linux_musl=-Wa,-mrelax-relocations=no \\\n-    CFLAGS_x86_64_unknown_linux_musl=-Wa,-mrelax-relocations=no\n+ENV CFLAGS_i686_unknown_linux_musl=-Wa,-mrelax-relocations=no\n \n ENV SCRIPT \\\n       python2.7 ../x.py test \\\n-          --target x86_64-unknown-linux-musl \\\n           --target i686-unknown-linux-musl \\\n           --target i586-unknown-linux-gnu \\\n           && \\\n       python2.7 ../x.py dist \\\n-          --target x86_64-unknown-linux-musl \\\n           --target i686-unknown-linux-musl \\\n           --target i586-unknown-linux-gnu", "previous_filename": "src/ci/docker/linux-tested-targets/Dockerfile"}, {"sha": "a50a25c7913481cabe1bd288988c3f80f24a993c", "filename": "src/ci/docker/dist-i586-gnu-i686-musl/build-musl.sh", "status": "renamed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fbuild-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fbuild-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fbuild-musl.sh?ref=f44801c5ee71861c67977992d69d14bfb1a702d3", "patch": "@@ -18,11 +18,6 @@ export CXXFLAGS=\"-Wa,-mrelax-relocations=no\"\n MUSL=musl-1.1.14\n curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n cd $MUSL\n-./configure --prefix=/musl-x86_64 --disable-shared\n-make -j10\n-make install\n-make clean\n-# for i686\n CFLAGS=\"$CFLAGS -m32\" ./configure --prefix=/musl-i686 --disable-shared --target=i686\n make -j10\n make install\n@@ -50,16 +45,6 @@ cd ..\n \n mkdir libunwind-build\n cd libunwind-build\n-cmake ../libunwind-release_37 -DLLVM_PATH=/build/llvm-release_37 \\\n-          -DLIBUNWIND_ENABLE_SHARED=0\n-make -j10\n-cp lib/libunwind.a /musl-x86_64/lib\n-\n-# (Note: the next cmake call doesn't fully override the previous cached one, so remove the cached\n-# configuration manually. IOW, if don't do this or call make clean we'll end up building libunwind\n-# for x86_64 again)\n-rm -rf *\n-# for i686\n CFLAGS=\"$CFLAGS -m32\" CXXFLAGS=\"$CXXFLAGS -m32\" cmake ../libunwind-release_37 \\\n           -DLLVM_PATH=/build/llvm-release_37 \\\n           -DLIBUNWIND_ENABLE_SHARED=0", "previous_filename": "src/ci/docker/linux-tested-targets/build-musl.sh"}, {"sha": "99cd685b72d1718aaf6933da48fec15b21c91591", "filename": "src/ci/docker/dist-i586-gnu-i686-musl/musl-libunwind-patch.patch", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fmusl-libunwind-patch.patch", "raw_url": "https://github.com/rust-lang/rust/raw/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fmusl-libunwind-patch.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2Fmusl-libunwind-patch.patch?ref=f44801c5ee71861c67977992d69d14bfb1a702d3", "previous_filename": "src/ci/docker/linux-tested-targets/musl-libunwind-patch.patch"}, {"sha": "5877404ece14948266e004990410e7cffb84814b", "filename": "src/ci/docker/dist-x86_64-musl/Dockerfile", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile?ref=f44801c5ee71861c67977992d69d14bfb1a702d3", "patch": "@@ -0,0 +1,45 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  xz-utils \\\n+  sudo \\\n+  gdb \\\n+  patch \\\n+  libssl-dev \\\n+  pkg-config\n+\n+WORKDIR /build/\n+COPY build-musl.sh /build/\n+RUN sh /build/build-musl.sh && rm -rf /build\n+\n+RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n+    dpkg -i dumb-init_*.deb && \\\n+    rm dumb-init_*.deb\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+\n+RUN curl -o /usr/local/bin/sccache \\\n+      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-25-sccache-x86_64-unknown-linux-musl && \\\n+      chmod +x /usr/local/bin/sccache\n+\n+ENV RUST_CONFIGURE_ARGS \\\n+      --target=x86_64-unknown-linux-musl \\\n+      --musl-root-x86_64=/musl-x86_64\n+\n+# Newer binutils broke things on some vms/distros (i.e., linking against\n+# unknown relocs disabled by the following flag), so we need to go out of our\n+# way to produce \"super compatible\" binaries.\n+#\n+# See: https://github.com/rust-lang/rust/issues/34978\n+ENV CFLAGS_x86_64_unknown_linux_musl=-Wa,-mrelax-relocations=no\n+\n+ENV SCRIPT \\\n+      python2.7 ../x.py test --target x86_64-unknown-linux-musl && \\\n+      python2.7 ../x.py dist --target x86_64-unknown-linux-musl"}, {"sha": "86bb259c8549a6b46bd8941f670aa3da384259e1", "filename": "src/ci/docker/dist-x86_64-musl/build-musl.sh", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2Fbuild-musl.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f44801c5ee71861c67977992d69d14bfb1a702d3/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2Fbuild-musl.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2Fbuild-musl.sh?ref=f44801c5ee71861c67977992d69d14bfb1a702d3", "patch": "@@ -0,0 +1,38 @@\n+#!/bin/sh\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+# We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\n+export CFLAGS=\"-fPIC -Wa,-mrelax-relocations=no\"\n+export CXXFLAGS=\"-Wa,-mrelax-relocations=no\"\n+\n+MUSL=musl-1.1.14\n+curl https://www.musl-libc.org/releases/$MUSL.tar.gz | tar xzf -\n+cd $MUSL\n+./configure --prefix=/musl-x86_64 --disable-shared\n+make -j10\n+make install\n+\n+cd ..\n+rm -rf $MUSL\n+\n+# To build MUSL we're going to need a libunwind lying around, so acquire that\n+# here and build it.\n+curl -L https://github.com/llvm-mirror/llvm/archive/release_37.tar.gz | tar xzf -\n+curl -L https://github.com/llvm-mirror/libunwind/archive/release_37.tar.gz | tar xzf -\n+\n+mkdir libunwind-build\n+cd libunwind-build\n+cmake ../libunwind-release_37 -DLLVM_PATH=/build/llvm-release_37 \\\n+          -DLIBUNWIND_ENABLE_SHARED=0\n+make -j10\n+cp lib/libunwind.a /musl-x86_64/lib"}]}