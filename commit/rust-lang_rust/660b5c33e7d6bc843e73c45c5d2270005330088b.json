{"sha": "660b5c33e7d6bc843e73c45c5d2270005330088b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MGI1YzMzZTdkNmJjODQzZTczYzQ1YzVkMjI3MDAwNTMzMDA4OGI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-14T14:10:22Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-14T14:10:22Z"}, "message": "Use byte offsets instead of char offsets in debuginfo\n\ncc #807", "tree": {"sha": "a4e03823d04e2fa308453729849a8f41a9d6006a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4e03823d04e2fa308453729849a8f41a9d6006a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/660b5c33e7d6bc843e73c45c5d2270005330088b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/660b5c33e7d6bc843e73c45c5d2270005330088b", "html_url": "https://github.com/rust-lang/rust/commit/660b5c33e7d6bc843e73c45c5d2270005330088b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/660b5c33e7d6bc843e73c45c5d2270005330088b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "092cae12f9f5bb077f189a62ef03ef634a91edf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/092cae12f9f5bb077f189a62ef03ef634a91edf4", "html_url": "https://github.com/rust-lang/rust/commit/092cae12f9f5bb077f189a62ef03ef634a91edf4"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "47e1d54c3815dd9600f3ef324d1553596ca1c1fd", "filename": "src/debuginfo/line_info.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/660b5c33e7d6bc843e73c45c5d2270005330088b/src%2Fdebuginfo%2Fline_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/660b5c33e7d6bc843e73c45c5d2270005330088b/src%2Fdebuginfo%2Fline_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fline_info.rs?ref=660b5c33e7d6bc843e73c45c5d2270005330088b", "patch": "@@ -3,7 +3,7 @@ use std::path::{Component, Path};\n \n use crate::prelude::*;\n \n-use rustc_span::FileName;\n+use rustc_span::{FileName, SourceFileAndLine};\n \n use cranelift_codegen::binemit::CodeOffset;\n \n@@ -139,25 +139,32 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n                 rustc_span::hygiene::walk_chain(span, function_span.ctxt())\n             };\n \n-            let loc = tcx.sess.source_map().lookup_char_pos(span.lo());\n+            let (file, line, col) = match tcx.sess.source_map().lookup_line(span.lo()) {\n+                Ok(SourceFileAndLine { sf: file, line }) => {\n+                    let line_pos = file.line_begin_pos(span.lo());\n+\n+                    (file, u64::try_from(line).unwrap() + 1, u64::from((span.lo() - line_pos).to_u32()) + 1)\n+                }\n+                Err(file) => (file, 0, 0)\n+            };\n \n             // line_program_add_file is very slow.\n             // Optimize for the common case of the current file not being changed.\n             let current_file_changed = if let Some(last_file) = &mut last_file {\n                 // If the allocations are not equal, then the files may still be equal, but that\n                 // is not a problem, as this is just an optimization.\n-                !Lrc::ptr_eq(last_file, &loc.file)\n+                !Lrc::ptr_eq(last_file, &file)\n             } else {\n                 true\n             };\n             if current_file_changed {\n-                let file_id = line_program_add_file(line_program, line_strings, &loc.file.name);\n+                let file_id = line_program_add_file(line_program, line_strings, &file.name);\n                 line_program.row().file = file_id;\n-                last_file = Some(loc.file.clone());\n+                last_file = Some(file.clone());\n             }\n \n-            line_program.row().line = loc.line as u64;\n-            line_program.row().column = loc.col.to_u32() as u64 + 1;\n+            line_program.row().line = line;\n+            line_program.row().column = col;\n             line_program.generate_row();\n         };\n "}]}