{"sha": "ebc85077df1ebc603e24495151ba5db1159a42d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYzg1MDc3ZGYxZWJjNjAzZTI0NDk1MTUxYmE1ZGIxMTU5YTQyZDE=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2018-01-05T14:22:35Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2018-01-07T03:39:58Z"}, "message": "Remove dead function rustc_llvm::debug_loc_to_string()\n\nRefs #46437 as it also removes LLVMRustWriteDebugLocToString()", "tree": {"sha": "3bf3f9844030885e700c23c0aa50123b55299c37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bf3f9844030885e700c23c0aa50123b55299c37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebc85077df1ebc603e24495151ba5db1159a42d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc85077df1ebc603e24495151ba5db1159a42d1", "html_url": "https://github.com/rust-lang/rust/commit/ebc85077df1ebc603e24495151ba5db1159a42d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebc85077df1ebc603e24495151ba5db1159a42d1/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be1d5c37be04b8a84aa34081238746a0967016f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be1d5c37be04b8a84aa34081238746a0967016f", "html_url": "https://github.com/rust-lang/rust/commit/4be1d5c37be04b8a84aa34081238746a0967016f"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "2cfb151ae85da6bc41bde3192d8fd50cd453cfae", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=ebc85077df1ebc603e24495151ba5db1159a42d1", "patch": "@@ -1642,8 +1642,6 @@ extern \"C\" {\n     pub fn LLVMRustWriteDiagnosticInfoToString(DI: DiagnosticInfoRef, s: RustStringRef);\n     pub fn LLVMRustGetDiagInfoKind(DI: DiagnosticInfoRef) -> DiagnosticKind;\n \n-    pub fn LLVMRustWriteDebugLocToString(C: ContextRef, DL: DebugLocRef, s: RustStringRef);\n-\n     pub fn LLVMRustSetInlineAsmDiagnosticHandler(C: ContextRef,\n                                                  H: InlineAsmDiagHandler,\n                                                  CX: *mut c_void);"}, {"sha": "c75a026a0f8b9465740cda6f78dbcf7aecb5a1fd", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=ebc85077df1ebc603e24495151ba5db1159a42d1", "patch": "@@ -296,11 +296,6 @@ pub unsafe fn twine_to_string(tr: TwineRef) -> String {\n     build_string(|s| LLVMRustWriteTwineToString(tr, s)).expect(\"got a non-UTF8 Twine from LLVM\")\n }\n \n-pub unsafe fn debug_loc_to_string(c: ContextRef, tr: DebugLocRef) -> String {\n-    build_string(|s| LLVMRustWriteDebugLocToString(c, tr, s))\n-        .expect(\"got a non-UTF8 DebugLoc from LLVM\")\n-}\n-\n pub fn initialize_available_targets() {\n     macro_rules! init_target(\n         ($cfg:meta, $($method:ident),*) => { {"}, {"sha": "95130d596e165b05498143c96feb0805d7dc78ba", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=ebc85077df1ebc603e24495151ba5db1159a42d1", "patch": "@@ -958,7 +958,6 @@ extern \"C\" LLVMTypeRef LLVMRustArrayType(LLVMTypeRef ElementTy,\n }\n \n DEFINE_SIMPLE_CONVERSION_FUNCTIONS(Twine, LLVMTwineRef)\n-DEFINE_SIMPLE_CONVERSION_FUNCTIONS(DebugLoc, LLVMDebugLocRef)\n \n extern \"C\" void LLVMRustWriteTwineToString(LLVMTwineRef T, RustStringRef Str) {\n   RawRustStringOstream OS(Str);\n@@ -1107,13 +1106,6 @@ extern \"C\" LLVMTypeKind LLVMRustGetTypeKind(LLVMTypeRef Ty) {\n   report_fatal_error(\"Unhandled TypeID.\");\n }\n \n-extern \"C\" void LLVMRustWriteDebugLocToString(LLVMContextRef C,\n-                                              LLVMDebugLocRef DL,\n-                                              RustStringRef Str) {\n-  RawRustStringOstream OS(Str);\n-  unwrap(DL)->print(OS);\n-}\n-\n DEFINE_SIMPLE_CONVERSION_FUNCTIONS(SMDiagnostic, LLVMSMDiagnosticRef)\n \n extern \"C\" void LLVMRustSetInlineAsmDiagnosticHandler("}, {"sha": "b92834bc94001138aaf41cae7d459f561aaa7265", "filename": "src/rustllvm/rustllvm.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Frustllvm%2Frustllvm.h", "raw_url": "https://github.com/rust-lang/rust/raw/ebc85077df1ebc603e24495151ba5db1159a42d1/src%2Frustllvm%2Frustllvm.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.h?ref=ebc85077df1ebc603e24495151ba5db1159a42d1", "patch": "@@ -103,7 +103,6 @@ enum LLVMRustAttribute {\n \n typedef struct OpaqueRustString *RustStringRef;\n typedef struct LLVMOpaqueTwine *LLVMTwineRef;\n-typedef struct LLVMOpaqueDebugLoc *LLVMDebugLocRef;\n typedef struct LLVMOpaqueSMDiagnostic *LLVMSMDiagnosticRef;\n typedef struct LLVMOpaqueRustJITMemoryManager *LLVMRustJITMemoryManagerRef;\n "}]}