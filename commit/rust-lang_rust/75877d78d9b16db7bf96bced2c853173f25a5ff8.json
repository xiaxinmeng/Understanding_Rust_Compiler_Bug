{"sha": "75877d78d9b16db7bf96bced2c853173f25a5ff8", "node_id": "C_kwDOAAsO6NoAKDc1ODc3ZDc4ZDliMTZkYjdiZjk2YmNlZDJjODUzMTczZjI1YTVmZjg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-10T22:44:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-10T22:44:29Z"}, "message": "Auto merge of #13897 - bvanjoi:nearest-block-search, r=Veykril\n\nfix(ty): should query impls in nearest block\n\nfix https://github.com/rust-lang/rust-analyzer/issues/13895", "tree": {"sha": "2b9d600fba233b24133afc77c7c20bfee4c16c2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b9d600fba233b24133afc77c7c20bfee4c16c2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75877d78d9b16db7bf96bced2c853173f25a5ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75877d78d9b16db7bf96bced2c853173f25a5ff8", "html_url": "https://github.com/rust-lang/rust/commit/75877d78d9b16db7bf96bced2c853173f25a5ff8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75877d78d9b16db7bf96bced2c853173f25a5ff8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dabdefa2ee4b58e3229dc1801822aae4a0cd6a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dabdefa2ee4b58e3229dc1801822aae4a0cd6a0", "html_url": "https://github.com/rust-lang/rust/commit/6dabdefa2ee4b58e3229dc1801822aae4a0cd6a0"}, {"sha": "9a15cc81b4ba96cfc8164ba4848cbf648d40f86a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a15cc81b4ba96cfc8164ba4848cbf648d40f86a", "html_url": "https://github.com/rust-lang/rust/commit/9a15cc81b4ba96cfc8164ba4848cbf648d40f86a"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "ae25704f2047a18ab18e2ae0d984a6b6f0141252", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/75877d78d9b16db7bf96bced2c853173f25a5ff8/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75877d78d9b16db7bf96bced2c853173f25a5ff8/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=75877d78d9b16db7bf96bced2c853173f25a5ff8", "patch": "@@ -1094,13 +1094,13 @@ fn iterate_inherent_methods(\n         None => return ControlFlow::Continue(()),\n     };\n \n-    let (module, block) = match visible_from_module {\n+    let (module, mut block) = match visible_from_module {\n         VisibleFromModule::Filter(module) => (Some(module), module.containing_block()),\n         VisibleFromModule::IncludeBlock(block) => (None, Some(block)),\n         VisibleFromModule::None => (None, None),\n     };\n \n-    if let Some(block_id) = block {\n+    while let Some(block_id) = block {\n         if let Some(impls) = db.inherent_impls_in_block(block_id) {\n             impls_for_self_ty(\n                 &impls,\n@@ -1113,6 +1113,11 @@ fn iterate_inherent_methods(\n                 callback,\n             )?;\n         }\n+\n+        block = db\n+            .block_def_map(block_id)\n+            .and_then(|map| map.parent())\n+            .and_then(|module| module.containing_block());\n     }\n \n     for krate in def_crates {"}, {"sha": "93019527f44da40a1a7136755e1d74b61d023a1a", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/75877d78d9b16db7bf96bced2c853173f25a5ff8/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75877d78d9b16db7bf96bced2c853173f25a5ff8/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=75877d78d9b16db7bf96bced2c853173f25a5ff8", "patch": "@@ -1916,4 +1916,68 @@ fn main() {\n \"#,\n         )\n     }\n+\n+    #[test]\n+    fn query_impls_in_nearest_block() {\n+        check(\n+            r#\"\n+struct S1;\n+impl S1 {\n+    fn e() -> () {}\n+}\n+fn f1() {\n+    struct S1;\n+    impl S1 {\n+        fn e() -> () {}\n+         //^\n+    }\n+    fn f2() {\n+        fn f3() {\n+            S1::e$0();\n+        }\n+    }\n+}\n+\"#,\n+        );\n+\n+        check(\n+            r#\"\n+struct S1;\n+impl S1 {\n+    fn e() -> () {}\n+}\n+fn f1() {\n+    struct S1;\n+    impl S1 {\n+        fn e() -> () {}\n+         //^\n+    }\n+    fn f2() {\n+        struct S2;\n+        S1::e$0();\n+    }\n+}\n+fn f12() {\n+    struct S1;\n+    impl S1 {\n+        fn e() -> () {}\n+    }\n+}\n+\"#,\n+        );\n+\n+        check(\n+            r#\"\n+struct S1;\n+impl S1 {\n+    fn e() -> () {}\n+     //^\n+}\n+fn f2() {\n+    struct S2;\n+    S1::e$0();\n+}\n+\"#,\n+        );\n+    }\n }"}]}