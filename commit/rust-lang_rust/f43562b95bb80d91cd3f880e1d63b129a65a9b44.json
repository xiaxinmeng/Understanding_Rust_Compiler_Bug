{"sha": "f43562b95bb80d91cd3f880e1d63b129a65a9b44", "node_id": "C_kwDOAAsO6NoAKGY0MzU2MmI5NWJiODBkOTFjZDNmODgwZTFkNjNiMTI5YTY1YTliNDQ", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-09-15T14:39:16Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-09-15T14:39:16Z"}, "message": "more tweak on diagnostic messages", "tree": {"sha": "57b907b3a83ededa97a3601ec4d144b985ba2152", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57b907b3a83ededa97a3601ec4d144b985ba2152"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f43562b95bb80d91cd3f880e1d63b129a65a9b44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f43562b95bb80d91cd3f880e1d63b129a65a9b44", "html_url": "https://github.com/rust-lang/rust/commit/f43562b95bb80d91cd3f880e1d63b129a65a9b44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f43562b95bb80d91cd3f880e1d63b129a65a9b44/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2194fc957a2a7daaf35703603553649dfc23e34d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2194fc957a2a7daaf35703603553649dfc23e34d", "html_url": "https://github.com/rust-lang/rust/commit/2194fc957a2a7daaf35703603553649dfc23e34d"}], "stats": {"total": 88, "additions": 65, "deletions": 23}, "files": [{"sha": "7d56da70ff5af59880007e9fff9fdd77cdb75e81", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -47,15 +47,15 @@ parser_invalid_comparison_operator = invalid comparison operator `{$invalid}`\n     .spaceship_operator_invalid = `<=>` is not a valid comparison operator, use `std::cmp::Ordering`\n \n parser_invalid_logical_operator = `{$incorrect}` is not a logical operator\n-    .note = unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+    .note = unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n     .use_amp_amp_for_conjunction = use `&&` to perform logical conjunction\n     .use_pipe_pipe_for_disjunction = use `||` to perform logical disjunction\n \n parser_tilde_is_not_unary_operator = `~` cannot be used as a unary operator\n     .suggestion = use `!` to perform bitwise not\n \n parser_unexpected_token_after_not = unexpected {$negated_desc} after identifier\n-    .suggestion = use `!` to perform bitwise not\n+    .suggestion = use `!` to perform {$negated_msg}\n \n parser_malformed_loop_label = malformed loop label\n     .suggestion = use the correct loop label format"}, {"sha": "d2a8daa150cd2143556cbeb3dd88b757a9daca10", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -430,6 +430,7 @@ pub(crate) struct NotAsNegationOperator {\n     #[primary_span]\n     pub negated: Span,\n     pub negated_desc: String,\n+    pub negated_msg: String,\n     #[suggestion_short(applicability = \"machine-applicable\", code = \"!\")]\n     pub not: Span,\n }"}, {"sha": "1fdd312572aa1907417e67a64217a0b67372c740", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -660,9 +660,18 @@ impl<'a> Parser<'a> {\n     fn recover_not_expr(&mut self, lo: Span) -> PResult<'a, (Span, ExprKind)> {\n         // Emit the error...\n         let negated_token = self.look_ahead(1, |t| t.clone());\n+        let negtated_msg = if negated_token.is_numeric_lit() {\n+            \"bitwise not\"\n+        } else if negated_token.is_bool_lit() {\n+            \"logical negation\"\n+        } else {\n+            \"logical negation or bitwise not\"\n+        };\n+\n         self.sess.emit_err(NotAsNegationOperator {\n             negated: negated_token.span,\n             negated_desc: super::token_descr(&negated_token),\n+            negated_msg: negtated_msg.to_string(),\n             // Span the `not` plus trailing whitespace to avoid\n             // trailing whitespace after the `!` in our suggestion\n             not: self.sess.source_map().span_until_non_whitespace(lo.to(negated_token.span)),"}, {"sha": "e566ed488c957b2d3ecdf74807dd7ff4ffd054e1", "filename": "src/test/ui/did_you_mean/issue-41679-tilde-bitwise-negation-attempt.fixed", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.fixed?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -3,4 +3,8 @@\n fn main() {\n     let _x = !1; //~ ERROR cannot be used as a unary operator\n     let _y = !1; //~ ERROR unexpected `1` after identifier\n+    let _z = !false; //~ ERROR unexpected keyword `false` after identifier\n+    let _a = !true; //~ ERROR unexpected keyword `true` after identifier\n+    let v = 1 + 2;\n+    let _v = !v; //~ ERROR unexpected `v` after identifier\n }"}, {"sha": "1708a80505dbd7095c7082fe07e0dc6dfd3285e4", "filename": "src/test/ui/did_you_mean/issue-41679-tilde-bitwise-negation-attempt.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.rs?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -3,4 +3,8 @@\n fn main() {\n     let _x = ~1; //~ ERROR cannot be used as a unary operator\n     let _y = not 1; //~ ERROR unexpected `1` after identifier\n+    let _z = not false; //~ ERROR unexpected keyword `false` after identifier\n+    let _a = not true; //~ ERROR unexpected keyword `true` after identifier\n+    let v = 1 + 2;\n+    let _v = not v; //~ ERROR unexpected `v` after identifier\n }"}, {"sha": "2a3242abea49cdb27f5cc76c442a105e76721766", "filename": "src/test/ui/did_you_mean/issue-41679-tilde-bitwise-negation-attempt.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679-tilde-bitwise-negation-attempt.stderr?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -12,5 +12,29 @@ LL |     let _y = not 1;\n    |              |\n    |              help: use `!` to perform bitwise not\n \n-error: aborting due to 2 previous errors\n+error: unexpected keyword `false` after identifier\n+  --> $DIR/issue-41679-tilde-bitwise-negation-attempt.rs:6:18\n+   |\n+LL |     let _z = not false;\n+   |              ----^^^^^\n+   |              |\n+   |              help: use `!` to perform logical negation\n+\n+error: unexpected keyword `true` after identifier\n+  --> $DIR/issue-41679-tilde-bitwise-negation-attempt.rs:7:18\n+   |\n+LL |     let _a = not true;\n+   |              ----^^^^\n+   |              |\n+   |              help: use `!` to perform logical negation\n+\n+error: unexpected `v` after identifier\n+  --> $DIR/issue-41679-tilde-bitwise-negation-attempt.rs:9:18\n+   |\n+LL |     let _v = not v;\n+   |              ----^\n+   |              |\n+   |              help: use `!` to perform logical negation or bitwise not\n+\n+error: aborting due to 5 previous errors\n "}, {"sha": "14918ba895325b2f3fc9f52de52cad5508924e9f", "filename": "src/test/ui/did_you_mean/issue-46836-identifier-not-instead-of-negation.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-46836-identifier-not-instead-of-negation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-46836-identifier-not-instead-of-negation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-46836-identifier-not-instead-of-negation.stderr?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -4,21 +4,21 @@ error: unexpected `for_you` after identifier\n LL |     if not for_you {\n    |        ----^^^^^^^\n    |        |\n-   |        help: use `!` to perform bitwise not\n+   |        help: use `!` to perform logical negation or bitwise not\n \n error: unexpected `the_worst` after identifier\n   --> $DIR/issue-46836-identifier-not-instead-of-negation.rs:11:15\n    |\n LL |     while not the_worst {\n    |           ----^^^^^^^^^\n    |           |\n-   |           help: use `!` to perform bitwise not\n+   |           help: use `!` to perform logical negation or bitwise not\n \n error: unexpected `println` after identifier\n   --> $DIR/issue-46836-identifier-not-instead-of-negation.rs:20:9\n    |\n LL |     if not  // lack of braces is [sic]\n-   |        ----- help: use `!` to perform bitwise not\n+   |        ----- help: use `!` to perform logical negation or bitwise not\n LL |         println!(\"Then when?\");\n    |         ^^^^^^^\n \n@@ -50,7 +50,7 @@ error: unexpected `be_smothered_out_before` after identifier\n LL |     let young_souls = not be_smothered_out_before;\n    |                       ----^^^^^^^^^^^^^^^^^^^^^^^\n    |                       |\n-   |                       help: use `!` to perform bitwise not\n+   |                       help: use `!` to perform logical negation or bitwise not\n \n error: aborting due to 6 previous errors\n "}, {"sha": "cbe59e8e0af7e29edb2a980c1fc43c30b3b26303", "filename": "src/test/ui/did_you_mean/issue-54109-and_instead_of_ampersands.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-and_instead_of_ampersands.stderr?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -4,63 +4,63 @@ error: `and` is not a logical operator\n LL |     let _ = a and b;\n    |               ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:9:10\n    |\n LL |     if a and b {\n    |          ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:20:15\n    |\n LL |     let _ = a or b;\n    |               ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:22:10\n    |\n LL |     if a or b {\n    |          ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:30:11\n    |\n LL |     if (a and b) {\n    |           ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:38:11\n    |\n LL |     if (a or b) {\n    |           ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:46:13\n    |\n LL |     while a and b {\n    |             ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:54:13\n    |\n LL |     while a or b {\n    |             ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error[E0308]: mismatched types\n   --> $DIR/issue-54109-and_instead_of_ampersands.rs:13:33"}, {"sha": "6455b0863f8f5733a3d17b58878594e55fe177ac", "filename": "src/test/ui/did_you_mean/issue-54109-without-witness.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f43562b95bb80d91cd3f880e1d63b129a65a9b44/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-54109-without-witness.stderr?ref=f43562b95bb80d91cd3f880e1d63b129a65a9b44", "patch": "@@ -4,63 +4,63 @@ error: `and` is not a logical operator\n LL |     let _ = a and b;\n    |               ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n   --> $DIR/issue-54109-without-witness.rs:15:10\n    |\n LL |     if a and b {\n    |          ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-without-witness.rs:24:15\n    |\n LL |     let _ = a or b;\n    |               ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-without-witness.rs:26:10\n    |\n LL |     if a or b {\n    |          ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n   --> $DIR/issue-54109-without-witness.rs:34:11\n    |\n LL |     if (a and b) {\n    |           ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-without-witness.rs:42:11\n    |\n LL |     if (a or b) {\n    |           ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `and` is not a logical operator\n   --> $DIR/issue-54109-without-witness.rs:50:13\n    |\n LL |     while a and b {\n    |             ^^^ help: use `&&` to perform logical conjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: `or` is not a logical operator\n   --> $DIR/issue-54109-without-witness.rs:58:13\n    |\n LL |     while a or b {\n    |             ^^ help: use `||` to perform logical disjunction\n    |\n-   = note: unlike in e.g., python and PHP, `&&` and `||` are used for logical operators\n+   = note: unlike in e.g., Python and PHP, `&&` and `||` are used for logical operators\n \n error: aborting due to 8 previous errors\n "}]}