{"sha": "79c22d5fb1f3212714f509bac2f07042e301b19a", "node_id": "C_kwDOAAsO6NoAKDc5YzIyZDVmYjFmMzIxMjcxNGY1MDliYWMyZjA3MDQyZTMwMWIxOWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-08T15:03:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-08T15:03:39Z"}, "message": "Auto merge of #12962 - lowr:patch/parse-last-range-pattern, r=Veykril\n\nParse range patterns in struct and slice without trailing comma\n\nResolves #12935\n\nThis patch includes the support for range patterns in slices, which is unstable (tracked in https://github.com/rust-lang/rust/issues/67264). If it's not desired I can remove it.", "tree": {"sha": "d2a86d734d7ecec7004db607cea91148037efb1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a86d734d7ecec7004db607cea91148037efb1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79c22d5fb1f3212714f509bac2f07042e301b19a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79c22d5fb1f3212714f509bac2f07042e301b19a", "html_url": "https://github.com/rust-lang/rust/commit/79c22d5fb1f3212714f509bac2f07042e301b19a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79c22d5fb1f3212714f509bac2f07042e301b19a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49700e46366bfe7958204877b4edcf74987ec508", "url": "https://api.github.com/repos/rust-lang/rust/commits/49700e46366bfe7958204877b4edcf74987ec508", "html_url": "https://github.com/rust-lang/rust/commit/49700e46366bfe7958204877b4edcf74987ec508"}, {"sha": "b14062aaecfe11978a5525824567e8011526aeb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b14062aaecfe11978a5525824567e8011526aeb2", "html_url": "https://github.com/rust-lang/rust/commit/b14062aaecfe11978a5525824567e8011526aeb2"}], "stats": {"total": 188, "additions": 181, "deletions": 7}, "files": [{"sha": "7e21a808da0a481af06c98aa2829ccdc7f27a17d", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=79c22d5fb1f3212714f509bac2f07042e301b19a", "patch": "@@ -75,6 +75,16 @@ fn pattern_single_r(p: &mut Parser<'_>, recovery_set: TokenSet) {\n         //         Some(1..) => ()\n         //     }\n         //\n+        //     match () {\n+        //         S { a: 0 } => (),\n+        //         S { a: 1.. } => (),\n+        //     }\n+        //\n+        //     match () {\n+        //         [0] => (),\n+        //         [1..] => (),\n+        //     }\n+        //\n         //     match (10 as u8, 5 as u8) {\n         //         (0, _) => (),\n         //         (1.., _) => ()\n@@ -88,11 +98,27 @@ fn pattern_single_r(p: &mut Parser<'_>, recovery_set: TokenSet) {\n                 let m = lhs.precede(p);\n                 p.bump(range_op);\n \n-                // `0 .. =>` or `let 0 .. =` or `Some(0 .. )`\n-                //       ^                ^                ^\n-                if p.at(T![=]) | p.at(T![')']) | p.at(T![,]) {\n+                // testing if we're at one of the following positions:\n+                // `0 .. =>`\n+                //       ^\n+                // `let 0 .. =`\n+                //           ^\n+                // `let 0..: _ =`\n+                //         ^\n+                // (1.., _)\n+                //     ^\n+                // `Some(0 .. )`\n+                //            ^\n+                // `S { t: 0.. }`\n+                //             ^\n+                // `[0..]`\n+                //      ^\n+                if matches!(p.current(), T![=] | T![,] | T![:] | T![')'] | T!['}'] | T![']']) {\n                     // test half_open_range_pat\n-                    // fn f() { let 0 .. = 1u32; }\n+                    // fn f() {\n+                    //     let 0 .. = 1u32;\n+                    //     let 0..: _ = 1u32;\n+                    // }\n                 } else {\n                     atom_pat(p, recovery_set);\n                 }"}, {"sha": "cfef5d3f95387dc58562d7aa14c9a6c8102d3e2f", "filename": "crates/parser/test_data/parser/inline/ok/0058_range_pat.rast", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast?ref=79c22d5fb1f3212714f509bac2f07042e301b19a", "patch": "@@ -172,6 +172,122 @@ SOURCE_FILE\n               WHITESPACE \"\\n    \"\n               R_CURLY \"}\"\n         WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                RECORD_PAT\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"S\"\n+                  WHITESPACE \" \"\n+                  RECORD_PAT_FIELD_LIST\n+                    L_CURLY \"{\"\n+                    WHITESPACE \" \"\n+                    RECORD_PAT_FIELD\n+                      NAME_REF\n+                        IDENT \"a\"\n+                      COLON \":\"\n+                      WHITESPACE \" \"\n+                      LITERAL_PAT\n+                        LITERAL\n+                          INT_NUMBER \"0\"\n+                    WHITESPACE \" \"\n+                    R_CURLY \"}\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                RECORD_PAT\n+                  PATH\n+                    PATH_SEGMENT\n+                      NAME_REF\n+                        IDENT \"S\"\n+                  WHITESPACE \" \"\n+                  RECORD_PAT_FIELD_LIST\n+                    L_CURLY \"{\"\n+                    WHITESPACE \" \"\n+                    RECORD_PAT_FIELD\n+                      NAME_REF\n+                        IDENT \"a\"\n+                      COLON \":\"\n+                      WHITESPACE \" \"\n+                      RANGE_PAT\n+                        LITERAL_PAT\n+                          LITERAL\n+                            INT_NUMBER \"1\"\n+                        DOT2 \"..\"\n+                    WHITESPACE \" \"\n+                    R_CURLY \"}\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n+        EXPR_STMT\n+          MATCH_EXPR\n+            MATCH_KW \"match\"\n+            WHITESPACE \" \"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+            WHITESPACE \" \"\n+            MATCH_ARM_LIST\n+              L_CURLY \"{\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                SLICE_PAT\n+                  L_BRACK \"[\"\n+                  LITERAL_PAT\n+                    LITERAL\n+                      INT_NUMBER \"0\"\n+                  R_BRACK \"]\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n        \"\n+              MATCH_ARM\n+                SLICE_PAT\n+                  L_BRACK \"[\"\n+                  RANGE_PAT\n+                    LITERAL_PAT\n+                      LITERAL\n+                        INT_NUMBER \"1\"\n+                    DOT2 \"..\"\n+                  R_BRACK \"]\"\n+                WHITESPACE \" \"\n+                FAT_ARROW \"=>\"\n+                WHITESPACE \" \"\n+                TUPLE_EXPR\n+                  L_PAREN \"(\"\n+                  R_PAREN \")\"\n+                COMMA \",\"\n+              WHITESPACE \"\\n    \"\n+              R_CURLY \"}\"\n+        WHITESPACE \"\\n\\n    \"\n         MATCH_EXPR\n           MATCH_KW \"match\"\n           WHITESPACE \" \""}, {"sha": "2411d51096b3b0a1c65f884b8d103d9ba1f5fc54", "filename": "crates/parser/test_data/parser/inline/ok/0058_range_pat.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rs?ref=79c22d5fb1f3212714f509bac2f07042e301b19a", "patch": "@@ -11,6 +11,16 @@ fn main() {\n         Some(1..) => ()\n     }\n \n+    match () {\n+        S { a: 0 } => (),\n+        S { a: 1.. } => (),\n+    }\n+\n+    match () {\n+        [0] => (),\n+        [1..] => (),\n+    }\n+\n     match (10 as u8, 5 as u8) {\n         (0, _) => (),\n         (1.., _) => ()"}, {"sha": "4b401b60df0cec3058cfc02ce3df34412122ade7", "filename": "crates/parser/test_data/parser/inline/ok/0166_half_open_range_pat.rast", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0166_half_open_range_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0166_half_open_range_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0166_half_open_range_pat.rast?ref=79c22d5fb1f3212714f509bac2f07042e301b19a", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE\n     BLOCK_EXPR\n       STMT_LIST\n         L_CURLY \"{\"\n-        WHITESPACE \" \"\n+        WHITESPACE \"\\n    \"\n         LET_STMT\n           LET_KW \"let\"\n           WHITESPACE \" \"\n@@ -27,6 +27,25 @@ SOURCE_FILE\n           LITERAL\n             INT_NUMBER \"1u32\"\n           SEMICOLON \";\"\n-        WHITESPACE \" \"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          RANGE_PAT\n+            LITERAL_PAT\n+              LITERAL\n+                INT_NUMBER \"0\"\n+            DOT2 \"..\"\n+          COLON \":\"\n+          WHITESPACE \" \"\n+          INFER_TYPE\n+            UNDERSCORE \"_\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          LITERAL\n+            INT_NUMBER \"1u32\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\""}, {"sha": "c9386a221a9556d18f00ff241c48b4a7e9b08575", "filename": "crates/parser/test_data/parser/inline/ok/0166_half_open_range_pat.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0166_half_open_range_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79c22d5fb1f3212714f509bac2f07042e301b19a/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0166_half_open_range_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0166_half_open_range_pat.rs?ref=79c22d5fb1f3212714f509bac2f07042e301b19a", "patch": "@@ -1 +1,4 @@\n-fn f() { let 0 .. = 1u32; }\n+fn f() {\n+    let 0 .. = 1u32;\n+    let 0..: _ = 1u32;\n+}"}]}