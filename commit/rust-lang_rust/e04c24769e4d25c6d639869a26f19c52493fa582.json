{"sha": "e04c24769e4d25c6d639869a26f19c52493fa582", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNGMyNDc2OWU0ZDI1YzZkNjM5ODY5YTI2ZjE5YzUyNDkzZmE1ODI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-10T01:11:52Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-10T01:11:52Z"}, "message": "Add 'unexpected' fn to parser.", "tree": {"sha": "085b4a0d6c6e385c2a4e38ba92b23018f159d59b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/085b4a0d6c6e385c2a4e38ba92b23018f159d59b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e04c24769e4d25c6d639869a26f19c52493fa582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e04c24769e4d25c6d639869a26f19c52493fa582", "html_url": "https://github.com/rust-lang/rust/commit/e04c24769e4d25c6d639869a26f19c52493fa582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e04c24769e4d25c6d639869a26f19c52493fa582/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8383b1c4353df6690b55a70b198ea7e0511e9b3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8383b1c4353df6690b55a70b198ea7e0511e9b3b", "html_url": "https://github.com/rust-lang/rust/commit/8383b1c4353df6690b55a70b198ea7e0511e9b3b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "ee797e29315daf1f05d50c69e4732069e9e9772c", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e04c24769e4d25c6d639869a26f19c52493fa582/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e04c24769e4d25c6d639869a26f19c52493fa582/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=e04c24769e4d25c6d639869a26f19c52493fa582", "patch": "@@ -68,6 +68,12 @@ impure fn new_parser(session.session sess,\n                      npos, npos, 0, crate, rdr);\n }\n \n+impure fn unexpected(parser p, token.token t) {\n+    let str s = \"unexpected token: \";\n+    s += token.to_str(t);\n+    p.err(s);\n+}\n+\n impure fn expect(parser p, token.token t) {\n     if (p.peek() == t) {\n         p.bump();"}]}