{"sha": "71f9e2e4d2dfe781237fd1a5754e82055a11594c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZjllMmU0ZDJkZmU3ODEyMzdmZDFhNTc1NGU4MjA1NWExMTU5NGM=", "commit": {"author": {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com", "date": "2016-10-03T16:28:46Z"}, "committer": {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com", "date": "2016-10-03T16:28:46Z"}, "message": "Continue to use struct_span_err! macro", "tree": {"sha": "4e5ef4c2ebbfc171a2d673a7f5dc9787174ca288", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e5ef4c2ebbfc171a2d673a7f5dc9787174ca288"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71f9e2e4d2dfe781237fd1a5754e82055a11594c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71f9e2e4d2dfe781237fd1a5754e82055a11594c", "html_url": "https://github.com/rust-lang/rust/commit/71f9e2e4d2dfe781237fd1a5754e82055a11594c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71f9e2e4d2dfe781237fd1a5754e82055a11594c/comments", "author": {"login": "jfirebaugh", "id": 98601, "node_id": "MDQ6VXNlcjk4NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/98601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfirebaugh", "html_url": "https://github.com/jfirebaugh", "followers_url": "https://api.github.com/users/jfirebaugh/followers", "following_url": "https://api.github.com/users/jfirebaugh/following{/other_user}", "gists_url": "https://api.github.com/users/jfirebaugh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfirebaugh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfirebaugh/subscriptions", "organizations_url": "https://api.github.com/users/jfirebaugh/orgs", "repos_url": "https://api.github.com/users/jfirebaugh/repos", "events_url": "https://api.github.com/users/jfirebaugh/events{/privacy}", "received_events_url": "https://api.github.com/users/jfirebaugh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jfirebaugh", "id": 98601, "node_id": "MDQ6VXNlcjk4NjAx", "avatar_url": "https://avatars.githubusercontent.com/u/98601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfirebaugh", "html_url": "https://github.com/jfirebaugh", "followers_url": "https://api.github.com/users/jfirebaugh/followers", "following_url": "https://api.github.com/users/jfirebaugh/following{/other_user}", "gists_url": "https://api.github.com/users/jfirebaugh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfirebaugh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfirebaugh/subscriptions", "organizations_url": "https://api.github.com/users/jfirebaugh/orgs", "repos_url": "https://api.github.com/users/jfirebaugh/repos", "events_url": "https://api.github.com/users/jfirebaugh/events{/privacy}", "received_events_url": "https://api.github.com/users/jfirebaugh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f7cc5faa0e9c9b865a95aa1fb0725528b95595e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f7cc5faa0e9c9b865a95aa1fb0725528b95595e", "html_url": "https://github.com/rust-lang/rust/commit/9f7cc5faa0e9c9b865a95aa1fb0725528b95595e"}], "stats": {"total": 35, "additions": 11, "deletions": 24}, "files": [{"sha": "7a969af3d6a9269664aee9ab56168608d92810ba", "filename": "src/librustc/infer/error_reporting.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/71f9e2e4d2dfe781237fd1a5754e82055a11594c/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f9e2e4d2dfe781237fd1a5754e82055a11594c/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting.rs?ref=71f9e2e4d2dfe781237fd1a5754e82055a11594c", "patch": "@@ -577,11 +577,17 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                                          terr: &TypeError<'tcx>)\n                                          -> DiagnosticBuilder<'tcx>\n     {\n-        let mut diag = self.tcx.sess.struct_span_err_with_code(\n-            trace.origin.span(),\n-            trace.origin.as_failure_str(),\n-            trace.origin.as_error_code()\n-        );\n+        let span = trace.origin.span();\n+        let failure_str = trace.origin.as_failure_str();\n+        let mut diag = match trace.origin {\n+            // FIXME: use distinct codes for each case\n+            TypeOrigin::IfExpressionWithNoElse(_) => {\n+                struct_span_err!(self.tcx.sess, span, E0317, \"{}\", failure_str)\n+            },\n+            _ => {\n+                struct_span_err!(self.tcx.sess, span, E0308, \"{}\", failure_str)\n+            },\n+        };\n         self.note_type_err(&mut diag, trace.origin, None, Some(trace.values), terr);\n         diag\n     }"}, {"sha": "39fc50666a8ce73f1a7403131c61397b45317208", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/71f9e2e4d2dfe781237fd1a5754e82055a11594c/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f9e2e4d2dfe781237fd1a5754e82055a11594c/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=71f9e2e4d2dfe781237fd1a5754e82055a11594c", "patch": "@@ -219,25 +219,6 @@ pub enum TypeOrigin {\n }\n \n impl TypeOrigin {\n-    fn as_error_code(&self) -> &'static str {\n-        match self {\n-            // FIXME: use distinct codes for each case\n-            &TypeOrigin::Misc(_) => \"E0308\",\n-            &TypeOrigin::RelateOutputImplTypes(_) => \"E0308\",\n-            &TypeOrigin::ExprAssignable(_) => \"E0308\",\n-            &TypeOrigin::MethodCompatCheck(_) => \"E0308\",\n-            &TypeOrigin::MatchExpressionArm(..) => \"E0308\",\n-            &TypeOrigin::IfExpression(_) => \"E0308\",\n-            &TypeOrigin::IfExpressionWithNoElse(_) => \"E0317\",\n-            &TypeOrigin::RangeExpression(_) => \"E0308\",\n-            &TypeOrigin::EquatePredicate(_) => \"E0308\",\n-            &TypeOrigin::MainFunctionType(_) => \"E0308\",\n-            &TypeOrigin::StartFunctionType(_) => \"E0308\",\n-            &TypeOrigin::IntrinsicType(_) => \"E0308\",\n-            &TypeOrigin::MethodReceiver(_) => \"E0308\",\n-        }\n-    }\n-\n     fn as_failure_str(&self) -> &'static str {\n         match self {\n             &TypeOrigin::Misc(_) |"}]}