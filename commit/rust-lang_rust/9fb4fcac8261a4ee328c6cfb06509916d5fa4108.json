{"sha": "9fb4fcac8261a4ee328c6cfb06509916d5fa4108", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYjRmY2FjODI2MWE0ZWUzMjhjNmNmYjA2NTA5OTE2ZDVmYTQxMDg=", "commit": {"author": {"name": "Gleb Kozyrev", "email": "gleb@gkoz.com", "date": "2016-02-18T14:03:42Z"}, "committer": {"name": "Gleb Kozyrev", "email": "gleb@gkoz.com", "date": "2016-02-18T14:03:42Z"}, "message": "Add mutual PartialEq and PartialCmp impls for OsStr, OsString", "tree": {"sha": "46615913e2fe74bca91b4749d5cf19565a1c2146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46615913e2fe74bca91b4749d5cf19565a1c2146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fb4fcac8261a4ee328c6cfb06509916d5fa4108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb4fcac8261a4ee328c6cfb06509916d5fa4108", "html_url": "https://github.com/rust-lang/rust/commit/9fb4fcac8261a4ee328c6cfb06509916d5fa4108", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fb4fcac8261a4ee328c6cfb06509916d5fa4108/comments", "author": {"login": "gkoz", "id": 4260361, "node_id": "MDQ6VXNlcjQyNjAzNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4260361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkoz", "html_url": "https://github.com/gkoz", "followers_url": "https://api.github.com/users/gkoz/followers", "following_url": "https://api.github.com/users/gkoz/following{/other_user}", "gists_url": "https://api.github.com/users/gkoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkoz/subscriptions", "organizations_url": "https://api.github.com/users/gkoz/orgs", "repos_url": "https://api.github.com/users/gkoz/repos", "events_url": "https://api.github.com/users/gkoz/events{/privacy}", "received_events_url": "https://api.github.com/users/gkoz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gkoz", "id": 4260361, "node_id": "MDQ6VXNlcjQyNjAzNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4260361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkoz", "html_url": "https://github.com/gkoz", "followers_url": "https://api.github.com/users/gkoz/followers", "following_url": "https://api.github.com/users/gkoz/following{/other_user}", "gists_url": "https://api.github.com/users/gkoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkoz/subscriptions", "organizations_url": "https://api.github.com/users/gkoz/orgs", "repos_url": "https://api.github.com/users/gkoz/repos", "events_url": "https://api.github.com/users/gkoz/events{/privacy}", "received_events_url": "https://api.github.com/users/gkoz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b54770c24578311ad6cc782fcf1d0dc8cb41e997", "url": "https://api.github.com/repos/rust-lang/rust/commits/b54770c24578311ad6cc782fcf1d0dc8cb41e997", "html_url": "https://github.com/rust-lang/rust/commit/b54770c24578311ad6cc782fcf1d0dc8cb41e997"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "717d8527fe0096f745d32443c3041302a45d9b92", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/9fb4fcac8261a4ee328c6cfb06509916d5fa4108/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb4fcac8261a4ee328c6cfb06509916d5fa4108/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=9fb4fcac8261a4ee328c6cfb06509916d5fa4108", "patch": "@@ -343,6 +343,44 @@ impl Ord for OsStr {\n     fn cmp(&self, other: &OsStr) -> cmp::Ordering { self.bytes().cmp(other.bytes()) }\n }\n \n+macro_rules! impl_cmp {\n+    ($lhs:ty, $rhs: ty) => {\n+        #[stable(feature = \"cmp_os_str\", since = \"1.8.0\")]\n+        impl<'a, 'b> PartialEq<$rhs> for $lhs {\n+            #[inline]\n+            fn eq(&self, other: &$rhs) -> bool { <OsStr as PartialEq>::eq(self, other) }\n+        }\n+\n+        #[stable(feature = \"cmp_os_str\", since = \"1.8.0\")]\n+        impl<'a, 'b> PartialEq<$lhs> for $rhs {\n+            #[inline]\n+            fn eq(&self, other: &$lhs) -> bool { <OsStr as PartialEq>::eq(self, other) }\n+        }\n+\n+        #[stable(feature = \"cmp_os_str\", since = \"1.8.0\")]\n+        impl<'a, 'b> PartialOrd<$rhs> for $lhs {\n+            #[inline]\n+            fn partial_cmp(&self, other: &$rhs) -> Option<cmp::Ordering> {\n+                <OsStr as PartialOrd>::partial_cmp(self, other)\n+            }\n+        }\n+\n+        #[stable(feature = \"cmp_os_str\", since = \"1.8.0\")]\n+        impl<'a, 'b> PartialOrd<$lhs> for $rhs {\n+            #[inline]\n+            fn partial_cmp(&self, other: &$lhs) -> Option<cmp::Ordering> {\n+                <OsStr as PartialOrd>::partial_cmp(self, other)\n+            }\n+        }\n+    }\n+}\n+\n+impl_cmp!(OsString, OsStr);\n+impl_cmp!(OsString, &'a OsStr);\n+impl_cmp!(Cow<'a, OsStr>, OsStr);\n+impl_cmp!(Cow<'a, OsStr>, &'b OsStr);\n+impl_cmp!(Cow<'a, OsStr>, OsString);\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Hash for OsStr {\n     #[inline]"}]}