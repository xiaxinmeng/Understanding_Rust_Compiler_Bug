{"sha": "e136e02fd97ac5207f1a0d1edd276ef22a1d24c1", "node_id": "C_kwDOAAsO6NoAKGUxMzZlMDJmZDk3YWM1MjA3ZjFhMGQxZWRkMjc2ZWYyMmExZDI0YzE", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@google.com", "date": "2022-08-27T02:24:41Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@google.com", "date": "2022-08-29T23:23:19Z"}, "message": "bootstrap: Add llvm-has-rust-patches target option\n\nThis is so you can check out an upstream commit in src/llvm-project and\nhave everything just work.", "tree": {"sha": "1f42d75d16f4838deb8ba3e7d0e1cf35e7f74c3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f42d75d16f4838deb8ba3e7d0e1cf35e7f74c3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1", "html_url": "https://github.com/rust-lang/rust/commit/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03d488b48af9f66b91e9400387f781b82411fa82", "url": "https://api.github.com/repos/rust-lang/rust/commits/03d488b48af9f66b91e9400387f781b82411fa82", "html_url": "https://github.com/rust-lang/rust/commit/03d488b48af9f66b91e9400387f781b82411fa82"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "28ccc2c8f14d1554288ef358be0e3c855e191dc9", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=e136e02fd97ac5207f1a0d1edd276ef22a1d24c1", "patch": "@@ -666,6 +666,10 @@ changelog-seen = 2\n # target.\n #llvm-config = <none> (path)\n \n+# Override detection of whether this is a Rust-patched LLVM. This would be used\n+# in conjunction with either an llvm-config or build.submodules = false.\n+#llvm-has-rust-patches = if llvm-config { false } else { true }\n+\n # Normally the build system can find LLVM's FileCheck utility, but if\n # not, you can specify an explicit file name for it.\n #llvm-filecheck = \"/path/to/llvm-version/bin/FileCheck\""}, {"sha": "f98f07b8eba2c8f35d895c1689f8bd7f9cd988cd", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=e136e02fd97ac5207f1a0d1edd276ef22a1d24c1", "patch": "@@ -388,6 +388,7 @@ impl PartialEq<&str> for TargetSelection {\n pub struct Target {\n     /// Some(path to llvm-config) if using an external LLVM.\n     pub llvm_config: Option<PathBuf>,\n+    pub llvm_has_rust_patches: Option<bool>,\n     /// Some(path to FileCheck) if one was specified.\n     pub llvm_filecheck: Option<PathBuf>,\n     pub llvm_libunwind: Option<LlvmLibunwind>,\n@@ -729,6 +730,7 @@ define_config! {\n         default_linker: Option<PathBuf> = \"default-linker\",\n         linker: Option<String> = \"linker\",\n         llvm_config: Option<String> = \"llvm-config\",\n+        llvm_has_rust_patches: Option<bool> = \"llvm-has-rust-patches\",\n         llvm_filecheck: Option<String> = \"llvm-filecheck\",\n         llvm_libunwind: Option<String> = \"llvm-libunwind\",\n         android_ndk: Option<String> = \"android-ndk\",\n@@ -1140,6 +1142,7 @@ impl Config {\n                 if let Some(ref s) = cfg.llvm_config {\n                     target.llvm_config = Some(config.src.join(s));\n                 }\n+                target.llvm_has_rust_patches = cfg.llvm_has_rust_patches;\n                 if let Some(ref s) = cfg.llvm_filecheck {\n                     target.llvm_filecheck = Some(config.src.join(s));\n                 }"}, {"sha": "751692b46f3918cbbdd8dd73a9cbc4566225cfa2", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e136e02fd97ac5207f1a0d1edd276ef22a1d24c1/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=e136e02fd97ac5207f1a0d1edd276ef22a1d24c1", "patch": "@@ -112,6 +112,7 @@ use std::path::{Path, PathBuf};\n use std::process::Command;\n use std::str;\n \n+use config::Target;\n use filetime::FileTime;\n use once_cell::sync::OnceCell;\n \n@@ -854,12 +855,13 @@ impl Build {\n     ///\n     /// If no custom `llvm-config` was specified then Rust's llvm will be used.\n     fn is_rust_llvm(&self, target: TargetSelection) -> bool {\n-        if self.config.llvm_from_ci && target == self.config.build {\n-            return true;\n-        }\n-\n         match self.config.target_config.get(&target) {\n-            Some(ref c) => c.llvm_config.is_none(),\n+            Some(Target { llvm_has_rust_patches: Some(patched), .. }) => *patched,\n+            Some(Target { llvm_config, .. }) => {\n+                // If the user set llvm-config we assume Rust is not patched,\n+                // but first check to see if it was configured by llvm-from-ci.\n+                (self.config.llvm_from_ci && target == self.config.build) || llvm_config.is_none()\n+            }\n             None => true,\n         }\n     }"}]}