{"sha": "99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5Y2E2M2ZiZDg4YTM0Y2U4ZTJiOTMyMTVkOTE1NWY1NTFhOGFhYWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-02T10:51:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-02T10:51:50Z"}, "message": "Auto merge of #26712 - GuillaumeGomez:patch-2, r=Manishearth\n\nPart of #24407.\r\ncc @michaelsproul\r\nr? @Manishearth", "tree": {"sha": "31218a248fa0716156b509ccc58afae726477b75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31218a248fa0716156b509ccc58afae726477b75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "html_url": "https://github.com/rust-lang/rust/commit/99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99ca63fbd88a34ce8e2b93215d9155f551a8aaad/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4b4f0759297927248f2db0bed0a417e7f08ed1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b4f0759297927248f2db0bed0a417e7f08ed1d", "html_url": "https://github.com/rust-lang/rust/commit/c4b4f0759297927248f2db0bed0a417e7f08ed1d"}, {"sha": "28d2b39f45298b16240455039358d2a4d304fd61", "url": "https://api.github.com/repos/rust-lang/rust/commits/28d2b39f45298b16240455039358d2a4d304fd61", "html_url": "https://github.com/rust-lang/rust/commit/28d2b39f45298b16240455039358d2a4d304fd61"}], "stats": {"total": 71, "additions": 69, "deletions": 2}, "files": [{"sha": "2eb26e760f9f81b1859c5978605e20adeb19a58f", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/99ca63fbd88a34ce8e2b93215d9155f551a8aaad/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ca63fbd88a34ce8e2b93215d9155f551a8aaad/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "patch": "@@ -749,6 +749,54 @@ for v in &vs {\n ```\n \"##,\n \n+E0277: r##\"\n+You tried to use a type which doesn't implement some trait in a place which\n+expected that trait. Erroneous code example:\n+\n+```\n+// here we declare the Foo trait with a bar method\n+trait Foo {\n+    fn bar(&self);\n+}\n+\n+// we now declare a function which takes an object with Foo trait implemented\n+// as parameter\n+fn some_func<T: Foo>(foo: T) {\n+    foo.bar();\n+}\n+\n+fn main() {\n+    // we now call the method with the i32 type, which doesn't implement\n+    // the Foo trait\n+    some_func(5i32); // error: the trait `Foo` is not implemented for the\n+                     //     type `i32`\n+}\n+```\n+\n+In order to fix this error, verify that the type you're using does implement\n+the trait. Example:\n+\n+```\n+trait Foo {\n+    fn bar(&self);\n+}\n+\n+fn some_func<T: Foo>(foo: T) {\n+    foo.bar(); // we can now use this method since i32 implements the\n+               // Foo trait\n+}\n+\n+// we implement the trait on the i32 type\n+impl Foo for i32 {\n+    fn bar(&self) {}\n+}\n+\n+fn main() {\n+    some_func(5i32); // ok!\n+}\n+```\n+\"##,\n+\n E0282: r##\"\n This error indicates that type inference did not result in one unique possible\n type, and extra information is required. In most cases this can be provided\n@@ -1103,7 +1151,6 @@ register_diagnostics! {\n     E0274, // rustc_on_unimplemented must have a value\n     E0275, // overflow evaluating requirement\n     E0276, // requirement appears on impl method but not on corresponding trait method\n-    E0277, // trait is not implemented for type\n     E0278, // requirement is not satisfied\n     E0279, // requirement is not satisfied\n     E0280, // requirement is not satisfied"}, {"sha": "2c948a45f8c8034883e64dbbbd6ac79f2e475248", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/99ca63fbd88a34ce8e2b93215d9155f551a8aaad/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99ca63fbd88a34ce8e2b93215d9155f551a8aaad/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "patch": "@@ -1347,6 +1347,27 @@ static BAR: _ = \"test\"; // error, explicitly write out the type instead\n ```\n \"##,\n \n+E0124: r##\"\n+You declared two fields of a struct with the same name. Erroneous code\n+example:\n+\n+```\n+struct Foo {\n+    field1: i32,\n+    field1: i32 // error: field is already declared\n+}\n+```\n+\n+Please verify that the field names have been correctly spelled. Example:\n+\n+```\n+struct Foo {\n+    field1: i32,\n+    field2: i32 // ok!\n+}\n+```\n+\"##,\n+\n E0131: r##\"\n It is not possible to define `main` with type parameters, or even with function\n parameters. When `main` is present, it must take no arguments and return `()`.\n@@ -1956,7 +1977,6 @@ register_diagnostics! {\n     E0120,\n     E0122,\n     E0123,\n-    E0124,\n     E0127,\n     E0128,\n     E0129,"}]}