{"sha": "d2bcd1462fa515ead889ecc49c70b00513798f43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYmNkMTQ2MmZhNTE1ZWFkODg5ZWNjNDljNzBiMDA1MTM3OThmNDM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-20T00:04:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:26Z"}, "message": "librustc: Remove unused `TypeNames::type_names` table", "tree": {"sha": "fbcc17d661fad7de5607018608f9053e022185a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbcc17d661fad7de5607018608f9053e022185a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2bcd1462fa515ead889ecc49c70b00513798f43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2bcd1462fa515ead889ecc49c70b00513798f43", "html_url": "https://github.com/rust-lang/rust/commit/d2bcd1462fa515ead889ecc49c70b00513798f43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2bcd1462fa515ead889ecc49c70b00513798f43/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddf3c6de74e2ec991fa10ed627343bb1e865ed9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf3c6de74e2ec991fa10ed627343bb1e865ed9c", "html_url": "https://github.com/rust-lang/rust/commit/ddf3c6de74e2ec991fa10ed627343bb1e865ed9c"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "9553f50bfcec0482773d1d74ddeda040ef656c97", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d2bcd1462fa515ead889ecc49c70b00513798f43/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2bcd1462fa515ead889ecc49c70b00513798f43/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=d2bcd1462fa515ead889ecc49c70b00513798f43", "patch": "@@ -1804,20 +1804,17 @@ pub fn SetFunctionAttribute(Fn: ValueRef, attr: Attribute) {\n /* Memory-managed object interface to type handles. */\n \n pub struct TypeNames {\n-    type_names: HashMap<TypeRef, ~str>,\n     named_types: HashMap<~str, TypeRef>\n }\n \n impl TypeNames {\n     pub fn new() -> TypeNames {\n         TypeNames {\n-            type_names: HashMap::new(),\n             named_types: HashMap::new()\n         }\n     }\n \n     pub fn associate_type(&mut self, s: &str, t: &Type) {\n-        assert!(self.type_names.insert(t.to_ref(), s.to_owned()));\n         assert!(self.named_types.insert(s.to_owned(), t.to_ref()));\n     }\n "}]}