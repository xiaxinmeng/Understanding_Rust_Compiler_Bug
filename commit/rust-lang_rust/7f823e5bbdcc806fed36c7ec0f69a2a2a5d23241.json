{"sha": "7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmODIzZTViYmRjYzgwNmZlZDM2YzdlYzBmNjlhMmEyYTVkMjMyNDE=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-04-06T19:39:44Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-04-06T19:39:44Z"}, "message": "Add reborrow suggestion when mutable reference is moved in a for loop", "tree": {"sha": "afd3f48d8f04dc70d6c63d1c5aff6571607b554d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afd3f48d8f04dc70d6c63d1c5aff6571607b554d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241", "html_url": "https://github.com/rust-lang/rust/commit/7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "354cc751b74e813f180755fa67bebcb669825755", "url": "https://api.github.com/repos/rust-lang/rust/commits/354cc751b74e813f180755fa67bebcb669825755", "html_url": "https://github.com/rust-lang/rust/commit/354cc751b74e813f180755fa67bebcb669825755"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "5fdf8a8d1ee195d322f79af77cb250f5b6888707", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=7f823e5bbdcc806fed36c7ec0f69a2a2a5d23241", "patch": "@@ -264,7 +264,24 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n                 if let Some(DesugaringKind::ForLoop(_)) = move_span.desugaring_kind() {\n                     let sess = self.infcx.tcx.sess;\n-                    if let Ok(snippet) = sess.source_map().span_to_snippet(move_span) {\n+                    let ty = used_place.ty(self.body, self.infcx.tcx).ty;\n+                    // If we have a `&mut` ref, we need to reborrow.\n+                    if let ty::Ref(_, _, hir::Mutability::Mut) = ty.kind() {\n+                        // If we are in a loop this will be suggested later.\n+                        if !is_loop_move {\n+                            err.span_suggestion_verbose(\n+                                move_span.shrink_to_lo(),\n+                                &format!(\n+                                    \"consider creating a fresh reborrow of {} here\",\n+                                    self.describe_place(moved_place.as_ref())\n+                                        .map(|n| format!(\"`{}`\", n))\n+                                        .unwrap_or_else(|| \"the mutable reference\".to_string()),\n+                                ),\n+                                format!(\"&mut *\"),\n+                                Applicability::MachineApplicable,\n+                            );\n+                        }\n+                    } else if let Ok(snippet) = sess.source_map().span_to_snippet(move_span) {\n                         err.span_suggestion(\n                             move_span,\n                             \"consider borrowing to avoid moving into the for loop\","}]}