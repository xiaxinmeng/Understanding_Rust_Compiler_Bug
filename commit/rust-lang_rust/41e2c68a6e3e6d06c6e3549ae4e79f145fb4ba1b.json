{"sha": "41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b", "node_id": "C_kwDOAAsO6NoAKDQxZTJjNjhhNmUzZTZkMDZjNmUzNTQ5YWU0ZTc5ZjE0NWZiNGJhMWI", "commit": {"author": {"name": "surechen", "email": "chenshuo17@huawei.com", "date": "2021-10-01T05:13:09Z"}, "committer": {"name": "surechen", "email": "chenshuo17@huawei.com", "date": "2021-10-01T05:13:09Z"}, "message": "use sugg::Sugg::maybe_par", "tree": {"sha": "4eb685101fbe0f0b66bb731cad955b9f12ec23fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eb685101fbe0f0b66bb731cad955b9f12ec23fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b", "html_url": "https://github.com/rust-lang/rust/commit/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b/comments", "author": {"login": "surechen", "id": 7249331, "node_id": "MDQ6VXNlcjcyNDkzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7249331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surechen", "html_url": "https://github.com/surechen", "followers_url": "https://api.github.com/users/surechen/followers", "following_url": "https://api.github.com/users/surechen/following{/other_user}", "gists_url": "https://api.github.com/users/surechen/gists{/gist_id}", "starred_url": "https://api.github.com/users/surechen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surechen/subscriptions", "organizations_url": "https://api.github.com/users/surechen/orgs", "repos_url": "https://api.github.com/users/surechen/repos", "events_url": "https://api.github.com/users/surechen/events{/privacy}", "received_events_url": "https://api.github.com/users/surechen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "surechen", "id": 7249331, "node_id": "MDQ6VXNlcjcyNDkzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7249331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surechen", "html_url": "https://github.com/surechen", "followers_url": "https://api.github.com/users/surechen/followers", "following_url": "https://api.github.com/users/surechen/following{/other_user}", "gists_url": "https://api.github.com/users/surechen/gists{/gist_id}", "starred_url": "https://api.github.com/users/surechen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surechen/subscriptions", "organizations_url": "https://api.github.com/users/surechen/orgs", "repos_url": "https://api.github.com/users/surechen/repos", "events_url": "https://api.github.com/users/surechen/events{/privacy}", "received_events_url": "https://api.github.com/users/surechen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4babfae9cba0409d2eed2c5caa623fae0445a50e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4babfae9cba0409d2eed2c5caa623fae0445a50e", "html_url": "https://github.com/rust-lang/rust/commit/4babfae9cba0409d2eed2c5caa623fae0445a50e"}], "stats": {"total": 52, "additions": 13, "deletions": 39}, "files": [{"sha": "10bca59e6d06ab5da76ebe19bbba10020f50f9a8", "filename": "clippy_lints/src/if_then_panic.rs", "status": "modified", "additions": 5, "deletions": 31, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b/clippy_lints%2Fsrc%2Fif_then_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b/clippy_lints%2Fsrc%2Fif_then_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_then_panic.rs?ref=41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b", "patch": "@@ -1,9 +1,9 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::higher::PanicExpn;\n-use clippy_utils::is_expn_of;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{is_expn_of, sugg};\n use rustc_errors::Applicability;\n-use rustc_hir::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};\n+use rustc_hir::{Block, Expr, ExprKind, StmtKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n@@ -74,40 +74,14 @@ impl LateLintPass<'_> for IfThenPanic {\n                 };\n                 let mut applicability = Applicability::MachineApplicable;\n                 let sugg = snippet_with_applicability(cx, span, \"..\", &mut applicability);\n-                //let mut cond_sugg = format!(\"!{}\", snippet_with_applicability(cx, cond.span, \"..\", &mut applicability));\n                 let cond_sugg = if let ExprKind::DropTemps(e, ..) = cond.kind {\n                     if let Expr{kind: ExprKind::Unary(UnOp::Not, not_expr), ..} = e {\n-                        snippet_with_applicability(cx, not_expr.span, \"..\", &mut applicability).to_string()\n-                    } else if let Expr{kind: ExprKind::Binary(op, left, right), ..} = e {//BinOp{BinOpKind::And, ..}\n-                        match op.node {\n-                            BinOpKind::And | BinOpKind::Or => {\n-                                let left_span =  {\n-                                    if let Expr{kind: ExprKind::Unary(UnOp::Not, not_expr), ..} = left {\n-                                        snippet_with_applicability(cx, not_expr.span, \"..\", &mut applicability).to_string()\n-                                    } else {\n-                                        format!(\"!{}\", snippet_with_applicability(cx, left.span, \"..\", &mut applicability))\n-                                    }\n-                                };\n-                                let right_span = {\n-                                    if let Expr{kind: ExprKind::Unary(UnOp::Not, not_expr), ..} = right {\n-                                        snippet_with_applicability(cx, not_expr.span, \"..\", &mut applicability).to_string()\n-                                    } else {\n-                                        format!(\"!{}\", snippet_with_applicability(cx, right.span, \"..\", &mut applicability))\n-                                    }\n-                                };\n-                                if op.node == BinOpKind::And {\n-                                  format!(\"{} || {}\", left_span, right_span)\n-                                } else  {\n-                                  format!(\"{} && {}\", left_span, right_span)\n-                                }\n-                            }\n-                            _ => format!(\"!({})\", snippet_with_applicability(cx, cond.span, \"..\", &mut applicability))\n-                        }\n+                         sugg::Sugg::hir_with_applicability(cx, not_expr, \"..\", &mut applicability).maybe_par().to_string()\n                     } else {\n-                        format!(\"!{}\", snippet_with_applicability(cx, cond.span, \"..\", &mut applicability))\n+                       format!(\"!{}\", sugg::Sugg::hir_with_applicability(cx, e, \"..\", &mut applicability).maybe_par().to_string())\n                     }\n                 } else {\n-                    format!(\"!{}\", snippet_with_applicability(cx, cond.span, \"..\", &mut applicability))\n+                   format!(\"!{}\", sugg::Sugg::hir_with_applicability(cx, cond, \"..\", &mut applicability).maybe_par().to_string())\n                 };\n \n                 span_lint_and_sugg("}, {"sha": "0998f8ffa9de4ecf8fe15e4c8e74ed6bdbb3176c", "filename": "tests/ui/if_then_panic.fixed", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b/tests%2Fui%2Fif_then_panic.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b/tests%2Fui%2Fif_then_panic.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_panic.fixed?ref=41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b", "patch": "@@ -33,8 +33,8 @@ fn main() {\n     }\n     let b = vec![1, 2, 3];\n     assert!(!b.is_empty(), \"panic1\");\n-    assert!(!b.is_empty() || !a.is_empty(), \"panic2\");\n-    assert!(!a.is_empty() || b.is_empty(), \"panic3\");\n-    assert!(!b.is_empty() && !a.is_empty(), \"panic4\");\n-    assert!(!a.is_empty() && b.is_empty(), \"panic5\");\n+    assert!(!(b.is_empty() && a.is_empty()), \"panic2\");\n+    assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");\n+    assert!(!(b.is_empty() || a.is_empty()), \"panic4\");\n+    assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");\n }"}, {"sha": "5bb62f8756606ec42f899d2fec87c4a966d9b48f", "filename": "tests/ui/if_then_panic.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b/tests%2Fui%2Fif_then_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b/tests%2Fui%2Fif_then_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_panic.stderr?ref=41e2c68a6e3e6d06c6e3549ae4e79f145fb4ba1b", "patch": "@@ -30,31 +30,31 @@ error: only a `panic!` in `if`-then statement\n LL | /     if b.is_empty() && a.is_empty() {\n LL | |         panic!(\"panic2\");\n LL | |     }\n-   | |_____^ help: try: `assert!(!b.is_empty() || !a.is_empty(), \"panic2\");`\n+   | |_____^ help: try: `assert!(!(b.is_empty() && a.is_empty()), \"panic2\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/if_then_panic.rs:45:5\n    |\n LL | /     if a.is_empty() && !b.is_empty() {\n LL | |         panic!(\"panic3\");\n LL | |     }\n-   | |_____^ help: try: `assert!(!a.is_empty() || b.is_empty(), \"panic3\");`\n+   | |_____^ help: try: `assert!(!(a.is_empty() && !b.is_empty()), \"panic3\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/if_then_panic.rs:48:5\n    |\n LL | /     if b.is_empty() || a.is_empty() {\n LL | |         panic!(\"panic4\");\n LL | |     }\n-   | |_____^ help: try: `assert!(!b.is_empty() && !a.is_empty(), \"panic4\");`\n+   | |_____^ help: try: `assert!(!(b.is_empty() || a.is_empty()), \"panic4\");`\n \n error: only a `panic!` in `if`-then statement\n   --> $DIR/if_then_panic.rs:51:5\n    |\n LL | /     if a.is_empty() || !b.is_empty() {\n LL | |         panic!(\"panic5\");\n LL | |     }\n-   | |_____^ help: try: `assert!(!a.is_empty() && b.is_empty(), \"panic5\");`\n+   | |_____^ help: try: `assert!(!(a.is_empty() || !b.is_empty()), \"panic5\");`\n \n error: aborting due to 7 previous errors\n "}]}