{"sha": "6f9d45351031eedff0336baa20d26d789870c988", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmOWQ0NTM1MTAzMWVlZGZmMDMzNmJhYTIwZDI2ZDc4OTg3MGM5ODg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-12T10:28:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-12T10:28:27Z"}, "message": "Rollup merge of #73225 - tmandry:issue-73050, r=oli-obk\n\nAllow inference regions when relating consts\n\nAs first noticed by @eddyb, `super_relate_consts` doesn't need to check for inference vars since `eval` does it already (and handles lifetimes correctly by erasing them).\n\nFixes #73050\n\nr? @oli-obk", "tree": {"sha": "98431c0cc5419020fe2f05b6de425cd84ffce06b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98431c0cc5419020fe2f05b6de425cd84ffce06b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f9d45351031eedff0336baa20d26d789870c988", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe41jMCRBK7hj4Ov3rIwAAdHIIAFyCefayjeCGlFchTUqfPyBq\n3B1PZ9rtcS0ZYCX+F8YB+NwJjsyjPkgM0tW2J0yc//uv1d+5etYkoof4u5SQwy3i\nrLnDi2TN+Scgi8AD8811rSSx2kkF8DH9+z+JikOwEV02IyUe6oTniQeBY+165/rT\nHu4HDWGQ2eJTQAYFVWPKW74LVyjJcJLs7aAQCOppBpm74yWpE0ItB3ivIPwdvcok\nQnbX8b2Z1gtWqnfjCeTsbDLbo4hbz85u5Ji7NR3VTLANXRZ8mnDIuQ00e0o61gBG\ndKWBlNMOTCDYS+rwHOcF/IPxfKsiR/zPTwsAV7yoODVaUOXxsB8dRTJlBJ1nE40=\n=ehxP\n-----END PGP SIGNATURE-----\n", "payload": "tree 98431c0cc5419020fe2f05b6de425cd84ffce06b\nparent 657a41fe73942006a01d67598bcbe80b8b03e69e\nparent d794313c41609e01c661cf29122a620ad583af9d\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591957707 +0200\ncommitter GitHub <noreply@github.com> 1591957707 +0200\n\nRollup merge of #73225 - tmandry:issue-73050, r=oli-obk\n\nAllow inference regions when relating consts\n\nAs first noticed by @eddyb, `super_relate_consts` doesn't need to check for inference vars since `eval` does it already (and handles lifetimes correctly by erasing them).\n\nFixes #73050\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f9d45351031eedff0336baa20d26d789870c988", "html_url": "https://github.com/rust-lang/rust/commit/6f9d45351031eedff0336baa20d26d789870c988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f9d45351031eedff0336baa20d26d789870c988/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "657a41fe73942006a01d67598bcbe80b8b03e69e", "url": "https://api.github.com/repos/rust-lang/rust/commits/657a41fe73942006a01d67598bcbe80b8b03e69e", "html_url": "https://github.com/rust-lang/rust/commit/657a41fe73942006a01d67598bcbe80b8b03e69e"}, {"sha": "d794313c41609e01c661cf29122a620ad583af9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d794313c41609e01c661cf29122a620ad583af9d", "html_url": "https://github.com/rust-lang/rust/commit/d794313c41609e01c661cf29122a620ad583af9d"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "cddd7081ca375fc05f020d42717cf5075dc1d063", "filename": "src/librustc_middle/ty/relate.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6f9d45351031eedff0336baa20d26d789870c988/src%2Flibrustc_middle%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9d45351031eedff0336baa20d26d789870c988/src%2Flibrustc_middle%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Frelate.rs?ref=6f9d45351031eedff0336baa20d26d789870c988", "patch": "@@ -508,16 +508,7 @@ pub fn super_relate_consts<R: TypeRelation<'tcx>>(\n     debug!(\"{}.super_relate_consts(a = {:?}, b = {:?})\", relation.tag(), a, b);\n     let tcx = relation.tcx();\n \n-    let eagerly_eval = |x: &'tcx ty::Const<'tcx>| {\n-        // FIXME(eddyb) this doesn't account for lifetime inference variables\n-        // being erased by `eval`, *nor* for the polymorphic aspect of `eval`.\n-        // That is, we could always use `eval` and it will just return the\n-        // old value back if it doesn't succeed.\n-        if !x.val.needs_infer() {\n-            return x.eval(tcx, relation.param_env()).val;\n-        }\n-        x.val\n-    };\n+    let eagerly_eval = |x: &'tcx ty::Const<'tcx>| x.eval(tcx, relation.param_env()).val;\n \n     // FIXME(eddyb) doesn't look like everything below checks that `a.ty == b.ty`.\n     // We could probably always assert it early, as `const` generic parameters"}, {"sha": "790f24a230b7e1a1a9b17b56ffadfa55a395d0b5", "filename": "src/test/ui/async-await/issue-73050.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6f9d45351031eedff0336baa20d26d789870c988/src%2Ftest%2Fui%2Fasync-await%2Fissue-73050.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9d45351031eedff0336baa20d26d789870c988/src%2Ftest%2Fui%2Fasync-await%2Fissue-73050.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-73050.rs?ref=6f9d45351031eedff0336baa20d26d789870c988", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+// edition:2018\n+\n+#[allow(unused)]\n+async fn foo<'a>() {\n+    let _data = &mut [0u8; { 1 + 4 }];\n+    bar().await\n+}\n+\n+async fn bar() {}\n+\n+fn main() {}"}]}