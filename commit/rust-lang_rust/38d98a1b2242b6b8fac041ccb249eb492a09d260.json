{"sha": "38d98a1b2242b6b8fac041ccb249eb492a09d260", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZDk4YTFiMjI0MmI2YjhmYWMwNDFjY2IyNDllYjQ5MmEwOWQyNjA=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-13T23:40:10Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-18T19:44:51Z"}, "message": "Implement const generics in `generics_to_path_params`\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "c6976b351eacd919c542f36625163155d51880eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6976b351eacd919c542f36625163155d51880eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38d98a1b2242b6b8fac041ccb249eb492a09d260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38d98a1b2242b6b8fac041ccb249eb492a09d260", "html_url": "https://github.com/rust-lang/rust/commit/38d98a1b2242b6b8fac041ccb249eb492a09d260", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38d98a1b2242b6b8fac041ccb249eb492a09d260/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9a2c0b54ee50135fbeb4d83c00f713114f7f67", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9a2c0b54ee50135fbeb4d83c00f713114f7f67", "html_url": "https://github.com/rust-lang/rust/commit/cd9a2c0b54ee50135fbeb4d83c00f713114f7f67"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "1982a16f3b81dd84c95bef0fdc4a0d2a9a409fc1", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/38d98a1b2242b6b8fac041ccb249eb492a09d260/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38d98a1b2242b6b8fac041ccb249eb492a09d260/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=38d98a1b2242b6b8fac041ccb249eb492a09d260", "patch": "@@ -236,8 +236,16 @@ impl<'tcx> DocContext<'tcx> {\n                 ty::GenericParamDefKind::Type { .. } => {\n                     args.push(hir::GenericArg::Type(self.ty_param_to_ty(param.clone())));\n                 }\n-                ty::GenericParamDefKind::Const { .. } => {\n-                    unimplemented!() // FIXME(const_generics)\n+                ty::GenericParamDefKind::Const => {\n+                    args.push(hir::GenericArg::Const(hir::ConstArg {\n+                        value: hir::AnonConst {\n+                            hir_id: hir::DUMMY_HIR_ID,\n+                            body: hir::BodyId {\n+                                hir_id: hir::DUMMY_HIR_ID,\n+                            }\n+                        },\n+                        span: DUMMY_SP,\n+                    }))\n                 }\n             }\n         }"}]}