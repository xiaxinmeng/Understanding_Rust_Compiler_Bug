{"sha": "bc36aabf5f4080521037d7ebe2be86302b6f7d81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMzZhYWJmNWY0MDgwNTIxMDM3ZDdlYmUyYmU4NjMwMmI2ZjdkODE=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-06-13T16:19:50Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-06-13T22:34:38Z"}, "message": "typeck: Fix ICE for blocks in repeat expr count.\n\nThis commit extends the work in #61698 to get the `DefId` of const\nparameters from block that resolve to a const parameter (as well as\nconst parameters directly, as it was previously).", "tree": {"sha": "a4e02de3a3e03206695cc8e2902d753cc6a5c659", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4e02de3a3e03206695cc8e2902d753cc6a5c659"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc36aabf5f4080521037d7ebe2be86302b6f7d81", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl0Cz34ACgkQJZLnbIc4\nH9laTA//dWCykC9PzknhVHKlkjmcssqjL8ufM7R0DmTR7xCaRBUle9pppsCkeNrv\nNUt1szUFPsE/jU5kxI68074k7FZcnLsALSMqQJJLIsAQT/1GCXkADUaFyhFfzVhH\ni4RILUdBcpY7MYEh0oqJ9cA0JD3bHnDT2BgDSbmOWrz5xf6+209AgP33i0uD7iB4\nyomes0zfozat7FkGhimu9B/N925DuW9iFHf8BCaRfX2AoAs9Txe1EtjqC/nsa63E\nqyBVkpk6pPLJaVy4RO7xa7uGAfCnfsqnydF6Xcwf/Xy2DFD2pmmJMFWMth80Ip/O\ncvtBXS3P4fCtk+StT5l3MC7JLL6s60RuoECbNrKnRmpka63O8FSRXHDRVB1bSQAj\nhkNoKj9oLufVltgMD7ayYKYsbd+zAy8TokXPUV27M5bOSRCyvUIommAd85ijkECx\ndgUeoQnafVm4sODXKOWIwD56kVKuklYHjPQQ73y+kjHhXXULdcL0n3Bd3fCbgDzp\nY35/7ll947piHlXoQ7WjhWgU55x5PNYv/dRedvnlO66b/dnOdMEzAYT9/XiKB3le\ni6FmiFbl8r8Y49MI2p1hJP4MQOtYbsQqt959G+TzFRJ1pdysF65NsGuCSeCyapRg\nJKa/iLnJK7KYjDVk+LSjS9Zjy6cKPMFjGP060cEROHmq03plFGY=\n=/tVE\n-----END PGP SIGNATURE-----", "payload": "tree a4e02de3a3e03206695cc8e2902d753cc6a5c659\nparent 2887008e0ce0824be4e0e9562c22ea397b165c97\nauthor David Wood <david@davidtw.co> 1560442790 +0100\ncommitter David Wood <david@davidtw.co> 1560465278 +0100\n\ntypeck: Fix ICE for blocks in repeat expr count.\n\nThis commit extends the work in #61698 to get the `DefId` of const\nparameters from block that resolve to a const parameter (as well as\nconst parameters directly, as it was previously).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc36aabf5f4080521037d7ebe2be86302b6f7d81", "html_url": "https://github.com/rust-lang/rust/commit/bc36aabf5f4080521037d7ebe2be86302b6f7d81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc36aabf5f4080521037d7ebe2be86302b6f7d81/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2887008e0ce0824be4e0e9562c22ea397b165c97", "url": "https://api.github.com/repos/rust-lang/rust/commits/2887008e0ce0824be4e0e9562c22ea397b165c97", "html_url": "https://github.com/rust-lang/rust/commit/2887008e0ce0824be4e0e9562c22ea397b165c97"}], "stats": {"total": 55, "additions": 43, "deletions": 12}, "files": [{"sha": "2f8b45bbcad3d60d0398b11286d58af66f1704ff", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bc36aabf5f4080521037d7ebe2be86302b6f7d81/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc36aabf5f4080521037d7ebe2be86302b6f7d81/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=bc36aabf5f4080521037d7ebe2be86302b6f7d81", "patch": "@@ -2157,6 +2157,14 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n \n     /// Returns the `DefId` of the constant parameter that the provided expression is a path to.\n     pub fn const_param_def_id(&self, expr: &hir::Expr) -> Option<DefId> {\n+        // Unwrap a block, so that e.g. `{ P }` is recognised as a parameter. Const arguments\n+        // currently have to be wrapped in curly brackets, so it's necessary to special-case.\n+        let expr = match &expr.node {\n+            ExprKind::Block(block, _) if block.stmts.is_empty() && block.expr.is_some() =>\n+                block.expr.as_ref().unwrap(),\n+            _ => expr,\n+        };\n+\n         match &expr.node {\n             ExprKind::Path(hir::QPath::Resolved(_, path)) => match path.res {\n                 Res::Def(DefKind::ConstParam, did) => Some(did),\n@@ -2184,18 +2192,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx> + 'o {\n             ty,\n         };\n \n-        let mut expr = &tcx.hir().body(ast_const.body).value;\n-\n-        // Unwrap a block, so that e.g. `{ P }` is recognised as a parameter. Const arguments\n-        // currently have to be wrapped in curly brackets, so it's necessary to special-case.\n-        if let ExprKind::Block(block, _) = &expr.node {\n-            if block.stmts.is_empty() {\n-                if let Some(trailing) = &block.expr {\n-                    expr = &trailing;\n-                }\n-            }\n-        }\n-\n+        let expr = &tcx.hir().body(ast_const.body).value;\n         if let Some(def_id) = self.const_param_def_id(expr) {\n             // Find the name and index of the const parameter by indexing the generics of the\n             // parent item and construct a `ParamConst`."}, {"sha": "604c14ee120a8eb7dd008b1a86eed9f7aed81fc7", "filename": "src/test/ui/const-generics/issue-61336-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc36aabf5f4080521037d7ebe2be86302b6f7d81/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc36aabf5f4080521037d7ebe2be86302b6f7d81/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.rs?ref=bc36aabf5f4080521037d7ebe2be86302b6f7d81", "patch": "@@ -0,0 +1,16 @@\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\n+    [x; {N}]\n+}\n+\n+fn g<T, const N: usize>(x: T) -> [T; N] {\n+    [x; {N}]\n+    //~^ ERROR the trait bound `T: std::marker::Copy` is not satisfied [E0277]\n+}\n+\n+fn main() {\n+    let x: [u32; 5] = f::<u32, 5>(3);\n+    assert_eq!(x, [3u32; 5]);\n+}"}, {"sha": "a7135b62f8cffbdcae4cf1a313c813dddb77676d", "filename": "src/test/ui/const-generics/issue-61336-2.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bc36aabf5f4080521037d7ebe2be86302b6f7d81/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc36aabf5f4080521037d7ebe2be86302b6f7d81/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61336-2.stderr?ref=bc36aabf5f4080521037d7ebe2be86302b6f7d81", "patch": "@@ -0,0 +1,18 @@\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/issue-61336-2.rs:1:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+\n+error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n+  --> $DIR/issue-61336-2.rs:9:5\n+   |\n+LL |     [x; {N}]\n+   |     ^^^^^^^^ the trait `std::marker::Copy` is not implemented for `T`\n+   |\n+   = help: consider adding a `where T: std::marker::Copy` bound\n+   = note: the `Copy` trait is required because the repeated element will be copied\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}