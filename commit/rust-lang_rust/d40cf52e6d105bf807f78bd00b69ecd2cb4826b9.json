{"sha": "d40cf52e6d105bf807f78bd00b69ecd2cb4826b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MGNmNTJlNmQxMDViZjgwN2Y3OGJkMDBiNjllY2QyY2I0ODI2Yjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-12T17:02:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-12T17:02:56Z"}, "message": "internal: perpare to remove ModuleData::default", "tree": {"sha": "e0a5b7e527ee3a0b3099a1b1d9d8c35b9528042d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0a5b7e527ee3a0b3099a1b1d9d8c35b9528042d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9", "html_url": "https://github.com/rust-lang/rust/commit/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "107e07458c5db92612ddff3a6a196075161694a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/107e07458c5db92612ddff3a6a196075161694a0", "html_url": "https://github.com/rust-lang/rust/commit/107e07458c5db92612ddff3a6a196075161694a0"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "c829b6a64ca1a60f7f81d3ed1d508fee2ab19209", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d40cf52e6d105bf807f78bd00b69ecd2cb4826b9/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=d40cf52e6d105bf807f78bd00b69ecd2cb4826b9", "patch": "@@ -202,12 +202,7 @@ pub struct ModuleData {\n \n impl Default for ModuleData {\n     fn default() -> Self {\n-        ModuleData {\n-            parent: None,\n-            children: FxHashMap::default(),\n-            scope: ItemScope::default(),\n-            origin: ModuleOrigin::CrateRoot { definition: FileId(!0) },\n-        }\n+        ModuleData::new(ModuleOrigin::CrateRoot { definition: FileId(!0) })\n     }\n }\n \n@@ -450,6 +445,15 @@ impl DefMap {\n }\n \n impl ModuleData {\n+    pub(crate) fn new(origin: ModuleOrigin) -> Self {\n+        ModuleData {\n+            parent: None,\n+            children: FxHashMap::default(),\n+            scope: ItemScope::default(),\n+            origin,\n+        }\n+    }\n+\n     /// Returns a node which defines this module. That is, a file or a `mod foo {}` with items.\n     pub fn definition_source(&self, db: &dyn DefDatabase) -> InFile<ModuleSource> {\n         self.origin.definition_source(db)"}]}