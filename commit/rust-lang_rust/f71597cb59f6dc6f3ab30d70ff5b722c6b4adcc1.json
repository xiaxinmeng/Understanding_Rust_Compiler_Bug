{"sha": "f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1", "node_id": "C_kwDOAAsO6NoAKGY3MTU5N2NiNTlmNmRjNmYzYWIzMGQ3MGZmNWI3MjJjNmI0YWRjYzE", "commit": {"author": {"name": "Emil Gardstr\u00f6m", "email": "emil.gardstrom@gmail.com", "date": "2022-04-24T17:03:59Z"}, "committer": {"name": "Emil Gardstr\u00f6m", "email": "emil.gardstrom@gmail.com", "date": "2022-04-25T09:29:39Z"}, "message": "avoid fully qualifying error output of issue-43733 test", "tree": {"sha": "3c41103f8dec224fee0cb2d605013b0abd466dd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c41103f8dec224fee0cb2d605013b0abd466dd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQRVsF4dMy9m92mNijsIqrtPgMP6xgUCYmZqAwAKCRAIqrtPgMP6\nxp+BAP0VVWcBVREvFcKScTVOx+yTulxBWu9dEIfv+1zWmMZ2GwD7BO2HI28pJhzU\n4KTGMhm06mIXw0SCyVm5B75VcjlVGwA=\n=lX0m\n-----END PGP SIGNATURE-----", "payload": "tree 3c41103f8dec224fee0cb2d605013b0abd466dd6\nparent 2e47271cb8db0d19c5930ca724ecdbb3be3463aa\nauthor Emil Gardstr\u00f6m <emil.gardstrom@gmail.com> 1650819839 +0200\ncommitter Emil Gardstr\u00f6m <emil.gardstrom@gmail.com> 1650878979 +0200\n\navoid fully qualifying error output of issue-43733 test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1", "html_url": "https://github.com/rust-lang/rust/commit/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1/comments", "author": {"login": "Emilgardis", "id": 1502855, "node_id": "MDQ6VXNlcjE1MDI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1502855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emilgardis", "html_url": "https://github.com/Emilgardis", "followers_url": "https://api.github.com/users/Emilgardis/followers", "following_url": "https://api.github.com/users/Emilgardis/following{/other_user}", "gists_url": "https://api.github.com/users/Emilgardis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emilgardis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emilgardis/subscriptions", "organizations_url": "https://api.github.com/users/Emilgardis/orgs", "repos_url": "https://api.github.com/users/Emilgardis/repos", "events_url": "https://api.github.com/users/Emilgardis/events{/privacy}", "received_events_url": "https://api.github.com/users/Emilgardis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Emilgardis", "id": 1502855, "node_id": "MDQ6VXNlcjE1MDI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1502855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emilgardis", "html_url": "https://github.com/Emilgardis", "followers_url": "https://api.github.com/users/Emilgardis/followers", "following_url": "https://api.github.com/users/Emilgardis/following{/other_user}", "gists_url": "https://api.github.com/users/Emilgardis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emilgardis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emilgardis/subscriptions", "organizations_url": "https://api.github.com/users/Emilgardis/orgs", "repos_url": "https://api.github.com/users/Emilgardis/repos", "events_url": "https://api.github.com/users/Emilgardis/events{/privacy}", "received_events_url": "https://api.github.com/users/Emilgardis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e47271cb8db0d19c5930ca724ecdbb3be3463aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e47271cb8db0d19c5930ca724ecdbb3be3463aa", "html_url": "https://github.com/rust-lang/rust/commit/2e47271cb8db0d19c5930ca724ecdbb3be3463aa"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "219c6cb23d049fcb0416bb5289ae610f130a7bcc", "filename": "src/test/ui/threads-sendsync/issue-43733.mir.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.mir.stderr?ref=f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1", "patch": "@@ -1,13 +1,13 @@\n-error[E0133]: call to unsafe function `std::thread::__FastLocalKeyInner::<T>::get` is unsafe and requires unsafe function or block\n-  --> $DIR/issue-43733.rs:19:5\n+error[E0133]: call to unsafe function `std::thread::$LOCALKEYINNER::<T>::get` is unsafe and requires unsafe function or block\n+  --> $DIR/issue-43733.rs:21:5\n    |\n LL |     __KEY.get(Default::default)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n    |\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error[E0133]: call to unsafe function `std::thread::LocalKey::<T>::new` is unsafe and requires unsafe function or block\n-  --> $DIR/issue-43733.rs:24:42\n+  --> $DIR/issue-43733.rs:26:42\n    |\n LL | static FOO: std::thread::LocalKey<Foo> = std::thread::LocalKey::new(__getit);\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function"}, {"sha": "e613c2b03e63b21163a0af45103e1db5a9851668", "filename": "src/test/ui/threads-sendsync/issue-43733.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.rs?ref=f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1", "patch": "@@ -1,5 +1,7 @@\n // revisions: mir thir\n // [thir]compile-flags: -Z thir-unsafeck\n+// normalize-stderr-test: \"__FastLocalKeyInner::<T>::get\" -> \"$$LOCALKEYINNER::<T>::get\"\n+// normalize-stderr-test: \"__OsLocalKeyInner::<T>::get\" -> \"$$LOCALKEYINNER::<T>::get\"\n \n #![feature(thread_local)]\n #![feature(cfg_target_thread_local, thread_local_internals)]\n@@ -17,8 +19,8 @@ static __KEY: std::thread::__OsLocalKeyInner<Foo> = std::thread::__OsLocalKeyInn\n \n fn __getit(_: Option<&mut Option<RefCell<String>>>) -> std::option::Option<&'static Foo> {\n     __KEY.get(Default::default)\n-    //[mir]~^ ERROR call to unsafe function `std::thread::__FastLocalKeyInner::<T>::get` is unsafe\n-    //[thir]~^^ ERROR call to unsafe function `__FastLocalKeyInner::<T>::get` is unsafe\n+    //[mir]~^ ERROR call to unsafe function `std::thread::\n+    //[thir]~^^ ERROR call to unsafe function `__\n }\n \n static FOO: std::thread::LocalKey<Foo> = std::thread::LocalKey::new(__getit);"}, {"sha": "ea7ff4080486dce986548b72c56054486c6b10f3", "filename": "src/test/ui/threads-sendsync/issue-43733.thir.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fthreads-sendsync%2Fissue-43733.thir.stderr?ref=f71597cb59f6dc6f3ab30d70ff5b722c6b4adcc1", "patch": "@@ -1,13 +1,13 @@\n-error[E0133]: call to unsafe function `__FastLocalKeyInner::<T>::get` is unsafe and requires unsafe function or block\n-  --> $DIR/issue-43733.rs:19:5\n+error[E0133]: call to unsafe function `$LOCALKEYINNER::<T>::get` is unsafe and requires unsafe function or block\n+  --> $DIR/issue-43733.rs:21:5\n    |\n LL |     __KEY.get(Default::default)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n    |\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error[E0133]: call to unsafe function `LocalKey::<T>::new` is unsafe and requires unsafe function or block\n-  --> $DIR/issue-43733.rs:24:42\n+  --> $DIR/issue-43733.rs:26:42\n    |\n LL | static FOO: std::thread::LocalKey<Foo> = std::thread::LocalKey::new(__getit);\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function"}]}