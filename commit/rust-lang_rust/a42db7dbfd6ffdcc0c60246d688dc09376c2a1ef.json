{"sha": "a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MmRiN2RiZmQ2ZmZkY2MwYzYwMjQ2ZDY4OGRjMDkzNzZjMmExZWY=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-04-20T18:37:41Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-04-24T23:16:49Z"}, "message": "Add a stopgap for #49889", "tree": {"sha": "c7c95445406cb9861da9ce7860a211653074c548", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7c95445406cb9861da9ce7860a211653074c548"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef", "html_url": "https://github.com/rust-lang/rust/commit/a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc48ae5a64a4e648211a2e7c9f37df0c5d6c32a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc48ae5a64a4e648211a2e7c9f37df0c5d6c32a6", "html_url": "https://github.com/rust-lang/rust/commit/cc48ae5a64a4e648211a2e7c9f37df0c5d6c32a6"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "320191167bebfa1f057981f2cc46254d68b5bbd1", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=a42db7dbfd6ffdcc0c60246d688dc09376c2a1ef", "patch": "@@ -885,8 +885,10 @@ impl<'a, 'gcx, 'tcx> ParamTy {\n     }\n \n     pub fn is_self(&self) -> bool {\n-        if self.name == keywords::SelfType.name().as_str() {\n-            assert_eq!(self.idx, 0);\n+        // FIXME(#50125): Ignoring `Self` with `idx != 0` might lead to weird behavior elsewhere,\n+        // but this should only be possible when using `-Z continue-parse-after-error` like\n+        // `compile-fail/issue-36638.rs`.\n+        if self.name == keywords::SelfType.name().as_str() && self.idx == 0 {\n             true\n         } else {\n             false"}]}