{"sha": "b8dca6c82714d04a26071a48cd671ad707249950", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZGNhNmM4MjcxNGQwNGEyNjA3MWE0OGNkNjcxYWQ3MDcyNDk5NTA=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-11-14T15:26:22Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-11-15T13:52:06Z"}, "message": "Add --force-run-in-process unstable libtest option", "tree": {"sha": "2b5c0c789bb492e0491ff4f5a0b83cf82b4efd07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b5c0c789bb492e0491ff4f5a0b83cf82b4efd07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8dca6c82714d04a26071a48cd671ad707249950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8dca6c82714d04a26071a48cd671ad707249950", "html_url": "https://github.com/rust-lang/rust/commit/b8dca6c82714d04a26071a48cd671ad707249950", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8dca6c82714d04a26071a48cd671ad707249950/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d63b24ffcc48f44ef09e0369e6516d6f2dec3520", "url": "https://api.github.com/repos/rust-lang/rust/commits/d63b24ffcc48f44ef09e0369e6516d6f2dec3520", "html_url": "https://github.com/rust-lang/rust/commit/d63b24ffcc48f44ef09e0369e6516d6f2dec3520"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c97cb0e0605a220ba4afb255356de3f45493fb21", "filename": "src/libtest/cli.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b8dca6c82714d04a26071a48cd671ad707249950/src%2Flibtest%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8dca6c82714d04a26071a48cd671ad707249950/src%2Flibtest%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fcli.rs?ref=b8dca6c82714d04a26071a48cd671ad707249950", "patch": "@@ -13,6 +13,7 @@ pub struct TestOpts {\n     pub list: bool,\n     pub filter: Option<String>,\n     pub filter_exact: bool,\n+    pub force_run_in_process: bool,\n     pub exclude_should_panic: bool,\n     pub run_ignored: RunIgnored,\n     pub run_tests: bool,\n@@ -46,6 +47,7 @@ fn optgroups() -> getopts::Options {\n     let mut opts = getopts::Options::new();\n     opts.optflag(\"\", \"include-ignored\", \"Run ignored and not ignored tests\")\n         .optflag(\"\", \"ignored\", \"Run only ignored tests\")\n+        .optflag(\"\", \"force-run-in-process\", \"Forces tests to run in-process when panic=abort\")\n         .optflag(\"\", \"exclude-should-panic\", \"Excludes tests marked as should_panic\")\n         .optflag(\"\", \"test\", \"Run tests and not benchmarks\")\n         .optflag(\"\", \"bench\", \"Run benchmarks instead of tests\")\n@@ -233,6 +235,7 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n     let allow_unstable = get_allow_unstable(&matches)?;\n \n     // Unstable flags\n+    let force_run_in_process = unstable_optflag!(matches, allow_unstable, \"force-run-in-process\");\n     let exclude_should_panic = unstable_optflag!(matches, allow_unstable, \"exclude-should-panic\");\n     let include_ignored = unstable_optflag!(matches, allow_unstable, \"include-ignored\");\n     let time_options = get_time_options(&matches, allow_unstable)?;\n@@ -259,6 +262,7 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n         list,\n         filter,\n         filter_exact: exact,\n+        force_run_in_process,\n         exclude_should_panic,\n         run_ignored,\n         run_tests,"}, {"sha": "7647978b3d975dfd0f69667ecf4a95bc6953caf9", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8dca6c82714d04a26071a48cd671ad707249950/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8dca6c82714d04a26071a48cd671ad707249950/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=b8dca6c82714d04a26071a48cd671ad707249950", "patch": "@@ -254,7 +254,7 @@ where\n     let mut pending = 0;\n \n     let (tx, rx) = channel::<CompletedTest>();\n-    let run_strategy = if opts.options.panic_abort {\n+    let run_strategy = if opts.options.panic_abort && !opts.force_run_in_process {\n         RunStrategy::SpawnPrimary\n     } else {\n         RunStrategy::InProcess"}, {"sha": "5f55b647f5e78f6470ce34621df048bfbfd217eb", "filename": "src/libtest/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8dca6c82714d04a26071a48cd671ad707249950/src%2Flibtest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8dca6c82714d04a26071a48cd671ad707249950/src%2Flibtest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Ftests.rs?ref=b8dca6c82714d04a26071a48cd671ad707249950", "patch": "@@ -24,6 +24,7 @@ impl TestOpts {\n             list: false,\n             filter: None,\n             filter_exact: false,\n+            force_run_in_process: false,\n             exclude_should_panic: false,\n             run_ignored: RunIgnored::No,\n             run_tests: false,"}]}