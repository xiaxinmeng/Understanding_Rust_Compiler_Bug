{"sha": "40a63cb06ff21d7cd38f35c92a29162e43f9aadf", "node_id": "C_kwDOAAsO6NoAKDQwYTYzY2IwNmZmMjFkN2NkMzhmMzVjOTJhMjkxNjJlNDNmOWFhZGY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-25T06:02:49Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-02T22:36:24Z"}, "message": "Make tools happy", "tree": {"sha": "b233de574c13214643bd65abf928bc8e198da601", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b233de574c13214643bd65abf928bc8e198da601"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40a63cb06ff21d7cd38f35c92a29162e43f9aadf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40a63cb06ff21d7cd38f35c92a29162e43f9aadf", "html_url": "https://github.com/rust-lang/rust/commit/40a63cb06ff21d7cd38f35c92a29162e43f9aadf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40a63cb06ff21d7cd38f35c92a29162e43f9aadf/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86f50b9f5c56982f4f50404539c56395ce811f18", "url": "https://api.github.com/repos/rust-lang/rust/commits/86f50b9f5c56982f4f50404539c56395ce811f18", "html_url": "https://github.com/rust-lang/rust/commit/86f50b9f5c56982f4f50404539c56395ce811f18"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "1c6810bdaf9be1b4077ba11ee7b092a8ed0518c0", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/40a63cb06ff21d7cd38f35c92a29162e43f9aadf/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40a63cb06ff21d7cd38f35c92a29162e43f9aadf/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=40a63cb06ff21d7cd38f35c92a29162e43f9aadf", "patch": "@@ -439,6 +439,7 @@ impl clean::GenericBound {\n                 let modifier_str = match modifier {\n                     hir::TraitBoundModifier::None => \"\",\n                     hir::TraitBoundModifier::Maybe => \"?\",\n+                    hir::TraitBoundModifier::Negative => \"!\",\n                     // ~const is experimental; do not display those bounds in rustdoc\n                     hir::TraitBoundModifier::MaybeConst => \"\",\n                 };"}, {"sha": "b5bebb7059380cf453cf15e719411c9c1187cb5b", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40a63cb06ff21d7cd38f35c92a29162e43f9aadf/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40a63cb06ff21d7cd38f35c92a29162e43f9aadf/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=40a63cb06ff21d7cd38f35c92a29162e43f9aadf", "patch": "@@ -533,6 +533,10 @@ pub(crate) fn from_trait_bound_modifier(\n         None => TraitBoundModifier::None,\n         Maybe => TraitBoundModifier::Maybe,\n         MaybeConst => TraitBoundModifier::MaybeConst,\n+        // FIXME(negative-bounds): This bound should be rendered negative, but\n+        // since that's experimental, maybe let's not add it to the rustdoc json\n+        // API just now...\n+        Negative => TraitBoundModifier::None,\n     }\n }\n "}, {"sha": "9ebe38cc25f7f5f976df98763345c78209df9b61", "filename": "src/tools/rustfmt/src/types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/40a63cb06ff21d7cd38f35c92a29162e43f9aadf/src%2Ftools%2Frustfmt%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40a63cb06ff21d7cd38f35c92a29162e43f9aadf/src%2Ftools%2Frustfmt%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Ftypes.rs?ref=40a63cb06ff21d7cd38f35c92a29162e43f9aadf", "patch": "@@ -552,6 +552,8 @@ impl Rewrite for ast::GenericBound {\n                     ast::TraitBoundModifier::MaybeConstMaybe => poly_trait_ref\n                         .rewrite(context, shape.offset_left(8)?)\n                         .map(|s| format!(\"~const ?{}\", s)),\n+                    rustc_ast::TraitBoundModifier::Negative\n+                    | rustc_ast::TraitBoundModifier::MaybeConstNegative => None,\n                 };\n                 rewrite.map(|s| if has_paren { format!(\"({})\", s) } else { s })\n             }"}]}