{"sha": "f8deed3a3a1431bc40e7f9165c30de11ca9d2532", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZGVlZDNhM2ExNDMxYmM0MGU3ZjkxNjVjMzBkZTExY2E5ZDI1MzI=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-07-07T14:31:09Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-01-28T00:50:03Z"}, "message": "Include const generic type bounds in their spans\n\nCloses #4310", "tree": {"sha": "9cf36ef2e6dd3f8d725e8ea5439d4974c1e4f851", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cf36ef2e6dd3f8d725e8ea5439d4974c1e4f851"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8deed3a3a1431bc40e7f9165c30de11ca9d2532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8deed3a3a1431bc40e7f9165c30de11ca9d2532", "html_url": "https://github.com/rust-lang/rust/commit/f8deed3a3a1431bc40e7f9165c30de11ca9d2532", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8deed3a3a1431bc40e7f9165c30de11ca9d2532/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "152ccb505958ec0e7f60204d786cc126bc571121", "url": "https://api.github.com/repos/rust-lang/rust/commits/152ccb505958ec0e7f60204d786cc126bc571121", "html_url": "https://github.com/rust-lang/rust/commit/152ccb505958ec0e7f60204d786cc126bc571121"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "f1d191783c91fbe016ee4433244c4aca968d20a5", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f8deed3a3a1431bc40e7f9165c30de11ca9d2532/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8deed3a3a1431bc40e7f9165c30de11ca9d2532/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=f8deed3a3a1431bc40e7f9165c30de11ca9d2532", "patch": "@@ -2217,11 +2217,10 @@ fn rewrite_fn_base(\n \n     // Skip `pub(crate)`.\n     let lo_after_visibility = get_bytepos_after_visibility(&fn_sig.visibility, span);\n-    // A conservative estimation, to goal is to be over all parens in generics\n+    // A conservative estimation, the goal is to be over all parens in generics\n     let params_start = fn_sig\n         .generics\n         .params\n-        .iter()\n         .last()\n         .map_or(lo_after_visibility, |param| param.span().hi());\n     let params_end = if fd.inputs.is_empty() {"}, {"sha": "1f6d0023e68814eacc85c159ecb8d2989096cd03", "filename": "src/spanned.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f8deed3a3a1431bc40e7f9165c30de11ca9d2532/src%2Fspanned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8deed3a3a1431bc40e7f9165c30de11ca9d2532/src%2Fspanned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fspanned.rs?ref=f8deed3a3a1431bc40e7f9165c30de11ca9d2532", "patch": "@@ -132,7 +132,8 @@ impl Spanned for ast::GenericParam {\n         };\n         let ty_hi = if let ast::GenericParamKind::Type {\n             default: Some(ref ty),\n-        } = self.kind\n+        }\n+        | ast::GenericParamKind::Const { ref ty, .. } = self.kind\n         {\n             ty.span().hi()\n         } else {"}, {"sha": "6cf494fc5b83f5abd0475528029c60fe24f54799", "filename": "tests/target/issue-4310.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f8deed3a3a1431bc40e7f9165c30de11ca9d2532/tests%2Ftarget%2Fissue-4310.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8deed3a3a1431bc40e7f9165c30de11ca9d2532/tests%2Ftarget%2Fissue-4310.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4310.rs?ref=f8deed3a3a1431bc40e7f9165c30de11ca9d2532", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_generics)]\n+\n+fn foo<\n+    const N: [u8; {\n+        struct Inner<'a>(&'a ());\n+        3\n+    }],\n+>() {\n+}"}]}