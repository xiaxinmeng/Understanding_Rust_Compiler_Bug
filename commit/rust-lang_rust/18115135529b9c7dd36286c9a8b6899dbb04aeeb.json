{"sha": "18115135529b9c7dd36286c9a8b6899dbb04aeeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MTE1MTM1NTI5YjljN2RkMzYyODZjOWE4YjY4OTlkYmIwNGFlZWI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-31T16:54:18Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-31T18:00:47Z"}, "message": "Fix long lines", "tree": {"sha": "7ea6389b5fe4de7bd1cb987f1b47d88d52eef51c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ea6389b5fe4de7bd1cb987f1b47d88d52eef51c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18115135529b9c7dd36286c9a8b6899dbb04aeeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18115135529b9c7dd36286c9a8b6899dbb04aeeb", "html_url": "https://github.com/rust-lang/rust/commit/18115135529b9c7dd36286c9a8b6899dbb04aeeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18115135529b9c7dd36286c9a8b6899dbb04aeeb/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "371c25683c60fd674368a7a82dfb64e6170b6805", "url": "https://api.github.com/repos/rust-lang/rust/commits/371c25683c60fd674368a7a82dfb64e6170b6805", "html_url": "https://github.com/rust-lang/rust/commit/371c25683c60fd674368a7a82dfb64e6170b6805"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "1933688c912ec52e5092e027d3af779c196cd562", "filename": "src/comp/pretty/pp.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/18115135529b9c7dd36286c9a8b6899dbb04aeeb/src%2Fcomp%2Fpretty%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18115135529b9c7dd36286c9a8b6899dbb04aeeb/src%2Fcomp%2Fpretty%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpp.rs?ref=18115135529b9c7dd36286c9a8b6899dbb04aeeb", "patch": "@@ -443,13 +443,15 @@ obj printer(io::writer out,\n     }\n \n     fn print(token x, int L) {\n-        log #fmt(\"print %s %d (remaining line space=%d)\", tok_str(x), L, space);\n+        log #fmt(\"print %s %d (remaining line space=%d)\",\n+                 tok_str(x), L, space);\n         log buf_str(token, size, left, right, 6u);\n         alt (x) {\n             case (BEGIN(?b)) {\n                 if (L > space) {\n                     auto col = (margin - space) + b.offset;\n-                    log #fmt(\"print BEGIN -> push broken block at col %d\", col);\n+                    log #fmt(\"print BEGIN -> push broken block at col %d\",\n+                             col);\n                     vec::push(print_stack,\n                               rec(offset = col,\n                                   pbreak = broken(b.breaks)));\n@@ -491,11 +493,11 @@ obj printer(io::writer out,\n \n                     case (broken(inconsistent)) {\n                         if (L > space) {\n-                            log \"print BREAK w/ newline in inconsistent block\";\n+                            log \"print BREAK w/ newline in inconsistent\";\n                             self.print_newline(top.offset + b.offset);\n                             space = margin - (top.offset + b.offset);\n                         } else {\n-                            log \"print BREAK w/o newline in inconsistent block\";\n+                            log \"print BREAK w/o newline in inconsistent\";\n                             self.indent(b.blank_space);\n                             space -= b.blank_space;\n                         }"}, {"sha": "10940c296617e758dc51b332369a35cb067e3e45", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/18115135529b9c7dd36286c9a8b6899dbb04aeeb/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18115135529b9c7dd36286c9a8b6899dbb04aeeb/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=18115135529b9c7dd36286c9a8b6899dbb04aeeb", "patch": "@@ -72,8 +72,11 @@ fn block_to_str(&ast::block blk) -> str {\n                   comments=option::none[vec[lexer::cmnt]],\n                   mutable cur_cmnt=0u,\n                   mode=mo_untyped);\n-    cbox(s.s, indent_unit); // containing cbox, will be closed by print-block at }\n-    ibox(s.s, 0u); // head-ibox, will be closed by print-block after {\n+    // containing cbox, will be closed by print-block at }\n+    cbox(s.s, indent_unit);\n+\n+    // head-ibox, will be closed by print-block after {\n+    ibox(s.s, 0u);\n     print_block(s, blk);\n     eof(s.s);\n     ret writer.get_str();\n@@ -657,8 +660,11 @@ fn print_expr(ps s, &@ast::expr expr) {\n             bclose(s, expr.span);\n         }\n         case (ast::expr_block(?block,_)) {\n-            cbox(s.s, indent_unit); // containing cbox, will be closed by print-block at }\n-            ibox(s.s, 0u); // head-box, will be closed by print-block after {\n+            // containing cbox, will be closed by print-block at }\n+            cbox(s.s, indent_unit);\n+\n+            // head-box, will be closed by print-block after {\n+            ibox(s.s, 0u);\n             print_block(s, block);\n         }\n         case (ast::expr_assign(?lhs,?rhs,_)) {"}]}