{"sha": "00b976a1381b301a74b4f97f041de9a6cc58dba1", "node_id": "C_kwDOAAsO6NoAKDAwYjk3NmExMzgxYjMwMWE3NGI0Zjk3ZjA0MWRlOWE2Y2M1OGRiYTE", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-02-19T17:28:44Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-02-19T21:54:08Z"}, "message": "Collect fulfillment errors across impls", "tree": {"sha": "dfa30e503be7a61c08f13ec80e605938076f7a4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfa30e503be7a61c08f13ec80e605938076f7a4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00b976a1381b301a74b4f97f041de9a6cc58dba1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXSQFaHGAjVoD5I3F0XoHIV9o5xMFAmPymoIACgkQ0XoHIV9o\n5xMJFQ//ekiP9kMcwCEox2qXHXbcUKdxn3Ax1EONramm2j1k7TptOKj1OiH9x/zU\n3p8hLB/H2Rqo6YKzKtAgRelik/CWWsBKniTBOB/BaYjJfziLVfHdgf5I66AWVDnQ\n9z040U4FVsYOOt/qoMtollrMaNYW+tuEAhlL0VjZrMZCoQ9FCX234WY5iQFxzjQG\nhC/zpEkos1CVh3uAhHkZK8txxLefr9y/VJLs/yMrmzfDLB7XRXpCumSkxZwNQIyv\nsdJj3EwOpYYal1hupfuLWu7MDClqY/YGSdmyv5yw228SOKEctbbsfY6BO4m5F4Rz\n1qiHcPEQJAhHBxKZrilKP5PXB2SO+PAlkloKJ/u3A2DvPnphEJvt3E4vunB3KfTy\nanYOD+Rf3Pa8iLSJBuYQHrjUSiDX3GQyhk5OTfQYrxj3qGH7RCSyi/HaNL8fkzwH\ngFViKWDSiET6mU7RQLB0IBRtT+kQ8ewoTMnl63S43ULjt9LX6aumYI77TTNR8T5E\niQ/7Lby5oDZEhS0U/X+x3OLhs5fEyNnPSXBlHgpGxwvxxnLWzYVYDnAR1725OCDH\nu3LrevjN9aQdnCMubl1N1uc6foNRhXfim3eL5AlinLXXGLHqspxk8yw+cxM5b94X\njk9qN2aW6qLVh3DMUJ3SGLbFAhYSGLAZUhEMJIK5NVsmKYsB5DI=\n=zKgU\n-----END PGP SIGNATURE-----", "payload": "tree dfa30e503be7a61c08f13ec80e605938076f7a4a\nparent 569ca2bad04dec9c6b7bc4864bd0216e3bea9c5e\nauthor Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1676827724 +0100\ncommitter Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1676843648 +0100\n\nCollect fulfillment errors across impls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00b976a1381b301a74b4f97f041de9a6cc58dba1", "html_url": "https://github.com/rust-lang/rust/commit/00b976a1381b301a74b4f97f041de9a6cc58dba1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00b976a1381b301a74b4f97f041de9a6cc58dba1/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "569ca2bad04dec9c6b7bc4864bd0216e3bea9c5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/569ca2bad04dec9c6b7bc4864bd0216e3bea9c5e", "html_url": "https://github.com/rust-lang/rust/commit/569ca2bad04dec9c6b7bc4864bd0216e3bea9c5e"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "03b1af76f33b9a4458f98754951fe09103ac4d39", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00b976a1381b301a74b4f97f041de9a6cc58dba1/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b976a1381b301a74b4f97f041de9a6cc58dba1/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=00b976a1381b301a74b4f97f041de9a6cc58dba1", "patch": "@@ -2261,9 +2261,9 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n                     ocx.register_obligations(impl_obligations);\n \n-                    let errors = ocx.select_where_possible();\n+                    let mut errors = ocx.select_where_possible();\n                     if !errors.is_empty() {\n-                        fulfillment_errors = errors;\n+                        fulfillment_errors.append(&mut errors);\n                         return None;\n                     }\n "}, {"sha": "5b0e8de9c580baf4478c7241899bf4cabff5ba42", "filename": "tests/ui/associated-inherent-types/not-found-unsatisfied-bounds-in-multiple-impls.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/00b976a1381b301a74b4f97f041de9a6cc58dba1/tests%2Fui%2Fassociated-inherent-types%2Fnot-found-unsatisfied-bounds-in-multiple-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b976a1381b301a74b4f97f041de9a6cc58dba1/tests%2Fui%2Fassociated-inherent-types%2Fnot-found-unsatisfied-bounds-in-multiple-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fnot-found-unsatisfied-bounds-in-multiple-impls.rs?ref=00b976a1381b301a74b4f97f041de9a6cc58dba1", "patch": "@@ -0,0 +1,20 @@\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+struct S<A, B>(A, B);\n+struct Featureless;\n+\n+trait One {}\n+trait Two {}\n+\n+impl<T: One> S<Featureless, T> {\n+    type X = ();\n+}\n+\n+impl<T: Two> S<T, Featureless> {\n+    type X = String;\n+}\n+\n+fn main() {\n+    let _: S::<Featureless, Featureless>::X; //~ ERROR the associated type `X` exists for `S<Featureless, Featureless>`, but its trait bounds were not satisfied\n+}"}, {"sha": "3ddab25deb54c00b7e48dae515154ce0feff0ede", "filename": "tests/ui/associated-inherent-types/not-found-unsatisfied-bounds-in-multiple-impls.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/00b976a1381b301a74b4f97f041de9a6cc58dba1/tests%2Fui%2Fassociated-inherent-types%2Fnot-found-unsatisfied-bounds-in-multiple-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00b976a1381b301a74b4f97f041de9a6cc58dba1/tests%2Fui%2Fassociated-inherent-types%2Fnot-found-unsatisfied-bounds-in-multiple-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fnot-found-unsatisfied-bounds-in-multiple-impls.stderr?ref=00b976a1381b301a74b4f97f041de9a6cc58dba1", "patch": "@@ -0,0 +1,20 @@\n+error: the associated type `X` exists for `S<Featureless, Featureless>`, but its trait bounds were not satisfied\n+  --> $DIR/not-found-unsatisfied-bounds-in-multiple-impls.rs:19:43\n+   |\n+LL | struct S<A, B>(A, B);\n+   | -------------- associated item `X` not found for this struct\n+LL | struct Featureless;\n+   | ------------------\n+   | |\n+   | doesn't satisfy `Featureless: One`\n+   | doesn't satisfy `Featureless: Two`\n+...\n+LL |     let _: S::<Featureless, Featureless>::X;\n+   |                                           ^ associated type cannot be referenced on `S<Featureless, Featureless>` due to unsatisfied trait bounds\n+   |\n+   = note: the following trait bounds were not satisfied:\n+           `Featureless: One`\n+           `Featureless: Two`\n+\n+error: aborting due to previous error\n+"}]}