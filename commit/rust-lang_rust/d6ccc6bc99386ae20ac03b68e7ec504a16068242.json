{"sha": "d6ccc6bc99386ae20ac03b68e7ec504a16068242", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2Y2NjNmJjOTkzODZhZTIwYWMwM2I2OGU3ZWM1MDRhMTYwNjgyNDI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-06T07:01:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-07T00:53:13Z"}, "message": "std::rt: Fix stream test to be parallel", "tree": {"sha": "e31404094e91da3325e6b9ea5ab61206b66e593b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e31404094e91da3325e6b9ea5ab61206b66e593b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6ccc6bc99386ae20ac03b68e7ec504a16068242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6ccc6bc99386ae20ac03b68e7ec504a16068242", "html_url": "https://github.com/rust-lang/rust/commit/d6ccc6bc99386ae20ac03b68e7ec504a16068242", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6ccc6bc99386ae20ac03b68e7ec504a16068242/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8afec77cb07394c5f2d54dcc0ebe075fc304efb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8afec77cb07394c5f2d54dcc0ebe075fc304efb7", "html_url": "https://github.com/rust-lang/rust/commit/8afec77cb07394c5f2d54dcc0ebe075fc304efb7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b00df78f433d7924afe674900f2f2a331d893073", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6ccc6bc99386ae20ac03b68e7ec504a16068242/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6ccc6bc99386ae20ac03b68e7ec504a16068242/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=d6ccc6bc99386ae20ac03b68e7ec504a16068242", "patch": "@@ -748,7 +748,7 @@ mod test {\n     #[test]\n     fn stream_send_recv_stress() {\n         for stress_factor().times {\n-            do run_in_newsched_task {\n+            do run_in_mt_newsched_task {\n                 let (port, chan) = stream::<~int>();\n \n                 send(chan, 0);\n@@ -758,18 +758,18 @@ mod test {\n                     if i == 10 { return }\n \n                     let chan_cell = Cell(chan);\n-                    let _thread = do spawntask_thread {\n+                    do spawntask_random {\n                         let chan = chan_cell.take();\n                         chan.send(~i);\n                         send(chan, i + 1);\n-                    };\n+                    }\n                 }\n \n                 fn recv(port: Port<~int>, i: int) {\n                     if i == 10 { return }\n \n                     let port_cell = Cell(port);\n-                    let _thread = do spawntask_thread {\n+                    do spawntask_random {\n                         let port = port_cell.take();\n                         assert!(port.recv() == ~i);\n                         recv(port, i + 1);"}]}