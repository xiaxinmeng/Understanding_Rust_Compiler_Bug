{"sha": "bd66cbb806ee2a4d288d2e22626dff39ee9cc336", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNjZjYmI4MDZlZTJhNGQyODhkMmUyMjYyNmRmZjM5ZWU5Y2MzMzY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-07-23T13:12:35Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-05T14:54:49Z"}, "message": "Remove obsolete tests in tidy\n\nThese have been replaced by more reliable checks in the compiler itself.", "tree": {"sha": "ce4631cb54adb3c38bdc185a9fa2ca2b1537c542", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce4631cb54adb3c38bdc185a9fa2ca2b1537c542"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd66cbb806ee2a4d288d2e22626dff39ee9cc336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd66cbb806ee2a4d288d2e22626dff39ee9cc336", "html_url": "https://github.com/rust-lang/rust/commit/bd66cbb806ee2a4d288d2e22626dff39ee9cc336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd66cbb806ee2a4d288d2e22626dff39ee9cc336/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af77c42e3800d033f501b6e179fb4189c02deb8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/af77c42e3800d033f501b6e179fb4189c02deb8a", "html_url": "https://github.com/rust-lang/rust/commit/af77c42e3800d033f501b6e179fb4189c02deb8a"}], "stats": {"total": 35, "additions": 3, "deletions": 32}, "files": [{"sha": "1dc36221bd2898d4cbe3aea991e6464c7a1c9778", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 3, "deletions": 32, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/bd66cbb806ee2a4d288d2e22626dff39ee9cc336/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd66cbb806ee2a4d288d2e22626dff39ee9cc336/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=bd66cbb806ee2a4d288d2e22626dff39ee9cc336", "patch": "@@ -50,34 +50,6 @@ pub struct Feature {\n     pub tracking_issue: Option<u32>,\n }\n \n-impl Feature {\n-    fn check_match(&self, other: &Feature)-> Result<(), Vec<&'static str>> {\n-        let mut mismatches = Vec::new();\n-        if self.level != other.level {\n-            mismatches.push(\"stability level\");\n-        }\n-        if self.level == Status::Stable || other.level == Status::Stable {\n-            // As long as a feature is unstable, the since field tracks\n-            // when the given part of the feature has been implemented.\n-            // Mismatches are tolerable as features evolve and functionality\n-            // gets added.\n-            // Once a feature is stable, the since field tracks the first version\n-            // it was part of the stable distribution, and mismatches are disallowed.\n-            if self.since != other.since {\n-                mismatches.push(\"since\");\n-            }\n-        }\n-        if self.tracking_issue != other.tracking_issue {\n-            mismatches.push(\"tracking issue\");\n-        }\n-        if mismatches.is_empty() {\n-            Ok(())\n-        } else {\n-            Err(mismatches)\n-        }\n-    }\n-}\n-\n pub type Features = HashMap<String, Feature>;\n \n pub fn check(path: &Path, bad: &mut bool, quiet: bool) {\n@@ -310,13 +282,12 @@ fn get_and_check_lib_features(base_src_path: &Path,\n                 Ok((name, f)) => {\n                     let mut check_features = |f: &Feature, list: &Features, display: &str| {\n                         if let Some(ref s) = list.get(name) {\n-                            if let Err(m) = (&f).check_match(s) {\n+                            if f.tracking_issue != s.tracking_issue {\n                                 tidy_error!(bad,\n-                                            \"{}:{}: mismatches to {} in: {:?}\",\n+                                            \"{}:{}: mismatches the `issue` in {}\",\n                                             file.display(),\n                                             line,\n-                                            display,\n-                                            &m);\n+                                            display);\n                             }\n                         }\n                     };"}]}