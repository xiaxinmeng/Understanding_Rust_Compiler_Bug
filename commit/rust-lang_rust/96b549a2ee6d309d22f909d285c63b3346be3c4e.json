{"sha": "96b549a2ee6d309d22f909d285c63b3346be3c4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YjU0OWEyZWU2ZDMwOWQyMmY5MDlkMjg1YzYzYjMzNDZiZTNjNGU=", "commit": {"author": {"name": "Yossi Konstantinovsky", "email": "yossi@nuvo-group.com", "date": "2016-09-02T00:31:40Z"}, "committer": {"name": "Omer Sheikh", "email": "ojsheikh@gmail.com", "date": "2016-11-14T20:21:36Z"}, "message": "Update E0088 to new format, remove E0090", "tree": {"sha": "2063d419f5e7a93dd42ccf3d8500fe22d294393c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2063d419f5e7a93dd42ccf3d8500fe22d294393c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96b549a2ee6d309d22f909d285c63b3346be3c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96b549a2ee6d309d22f909d285c63b3346be3c4e", "html_url": "https://github.com/rust-lang/rust/commit/96b549a2ee6d309d22f909d285c63b3346be3c4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96b549a2ee6d309d22f909d285c63b3346be3c4e/comments", "author": {"login": "yossi-k", "id": 12996641, "node_id": "MDQ6VXNlcjEyOTk2NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/12996641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yossi-k", "html_url": "https://github.com/yossi-k", "followers_url": "https://api.github.com/users/yossi-k/followers", "following_url": "https://api.github.com/users/yossi-k/following{/other_user}", "gists_url": "https://api.github.com/users/yossi-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/yossi-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yossi-k/subscriptions", "organizations_url": "https://api.github.com/users/yossi-k/orgs", "repos_url": "https://api.github.com/users/yossi-k/repos", "events_url": "https://api.github.com/users/yossi-k/events{/privacy}", "received_events_url": "https://api.github.com/users/yossi-k/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ojsheikh", "id": 13085633, "node_id": "MDQ6VXNlcjEzMDg1NjMz", "avatar_url": "https://avatars.githubusercontent.com/u/13085633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojsheikh", "html_url": "https://github.com/ojsheikh", "followers_url": "https://api.github.com/users/ojsheikh/followers", "following_url": "https://api.github.com/users/ojsheikh/following{/other_user}", "gists_url": "https://api.github.com/users/ojsheikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojsheikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojsheikh/subscriptions", "organizations_url": "https://api.github.com/users/ojsheikh/orgs", "repos_url": "https://api.github.com/users/ojsheikh/repos", "events_url": "https://api.github.com/users/ojsheikh/events{/privacy}", "received_events_url": "https://api.github.com/users/ojsheikh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87b76a521d4cc281880271e4e90e8139dd5a5372", "url": "https://api.github.com/repos/rust-lang/rust/commits/87b76a521d4cc281880271e4e90e8139dd5a5372", "html_url": "https://github.com/rust-lang/rust/commit/87b76a521d4cc281880271e4e90e8139dd5a5372"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "f76d356e045d5f3c0cca64a10ddabeae7eb5aab8", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/96b549a2ee6d309d22f909d285c63b3346be3c4e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96b549a2ee6d309d22f909d285c63b3346be3c4e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=96b549a2ee6d309d22f909d285c63b3346be3c4e", "patch": "@@ -4412,20 +4412,27 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         // Check provided lifetime parameters.\n         let lifetime_defs = segment.map_or(&[][..], |(_, generics)| &generics.regions);\n         if lifetimes.len() > lifetime_defs.len() {\n-            let span = lifetimes[lifetime_defs.len()].span;\n-            span_err!(self.tcx.sess, span, E0088,\n-                      \"too many lifetime parameters provided: \\\n-                       expected {}, found {}\",\n-                      count(lifetime_defs.len()),\n-                      count(lifetimes.len()));\n-        } else if lifetimes.len() > 0 && lifetimes.len() < lifetime_defs.len() {\n-            span_err!(self.tcx.sess, span, E0090,\n-                      \"too few lifetime parameters provided: \\\n-                       expected {}, found {}\",\n-                      count(lifetime_defs.len()),\n-                      count(lifetimes.len()));\n+            let span = lifetimes[..].into_iter().skip(1).map(|lft| lft.span)\n+                .fold(lifetimes[0].span, |acc, n| Span {\n+                    expn_id: acc.expn_id,\n+                    lo: acc.lo,\n+                    hi: n.hi,\n+                });\n+\n+            struct_span_err!(self.tcx.sess, span, E0088,\n+                             \"too many lifetime parameters provided: \\\n+                              expected {}, found {}\",\n+                              count(lifetime_defs.len()),\n+                              count(lifetimes.len()))\n+                .span_label(span, &format!(\"unexpected lifetime parameter{}\",\n+                                           match lifetimes.len() { 1 => \"\", _ => \"s\" }))\n+                .emit();\n         }\n \n+        // The case where there is not enough lifetime parameters is not checked,\n+        // because this is not possible - a function never takes lifetime parameters. \n+        // See discussion for Pull Request 36208.\n+\n         // Check provided type parameters.\n         let type_defs = segment.map_or(&[][..], |(_, generics)| {\n             if generics.parent.is_none() {"}, {"sha": "724398ada521693ef005b82fea047e962832ebf8", "filename": "src/test/compile-fail/E0088.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/96b549a2ee6d309d22f909d285c63b3346be3c4e/src%2Ftest%2Fcompile-fail%2FE0088.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96b549a2ee6d309d22f909d285c63b3346be3c4e/src%2Ftest%2Fcompile-fail%2FE0088.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0088.rs?ref=96b549a2ee6d309d22f909d285c63b3346be3c4e", "patch": "@@ -9,7 +9,12 @@\n // except according to those terms.\n \n fn f() {}\n+fn g<'a>() {}\n \n fn main() {\n     f::<'static>(); //~ ERROR E0088\n+    //~^ unexpected lifetime parameter\n+    \n+    g::<'static, 'static>(); //~ ERROR E0088\n+    //~^ unexpected lifetime parameters\n }"}]}