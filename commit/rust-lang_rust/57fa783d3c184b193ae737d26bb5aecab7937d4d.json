{"sha": "57fa783d3c184b193ae737d26bb5aecab7937d4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZmE3ODNkM2MxODRiMTkzYWU3MzdkMjZiYjVhZWNhYjc5MzdkNGQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-09T19:50:21Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-09T21:59:33Z"}, "message": "Rollup merge of #33383 - cramertj:E0509, r=Manishearth\n\nAdd detailed error explanation for E0509\n\nPart of #32777", "tree": {"sha": "0271af4c2e45e9980b214b412f5e28f3771c8c7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0271af4c2e45e9980b214b412f5e28f3771c8c7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57fa783d3c184b193ae737d26bb5aecab7937d4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXMQhFAAoJEDu/TT4u95+YvJEP/A9gqObcqER+SkGDB60a8ov+\nXxabk8XZkxNJo2ezVSvBOS1rdBr0nma0RPJqf/yCd211+/doCggv2aRd+k/zqrvg\nbzWIEhvulcxQUIX4Jm1nxwLrgxUUzD9/vrli8SdTfzAj0frbX18QEdlaaVyimJ2U\nT66EKCWA2yPMlzaNJE/2SM5ggSdtHQwvgjUHN6JhO7nQu5oK16CowrNA8hyDwMxV\nnRS6oWFq3osc29EmU7PI/6IjSBakMSPlmgJFIXfWydswSr4FW0UIeTGb2HYSZT+/\n8xLLspSc2hLWevEtvfmYls42QsbPRPrmlYdWRtPvA4tFCzndpmCCzO6ZmaPOtny4\nS/etdijr2fLm6okbfNcTQCq2/J03E2nEbDYloql78fwcUQcLK7mHPoNGYW0QyX75\n+n1zt67eD+LQeMCAebrjK35VZCBPJDE35msJT4fj8stdzNJniNtF3atSTElkaGxk\nW+hcg40pDXfl6oifTYoCFmhKfZo2MIwpyutQ7GeeFl5sDkCGnuhYWhw5432Xy3lg\nS8Vb9dnankGwOndXn8EqhPD3EuXWpoykg6bNf5Akkay6S0auv3IhoZdsOcdMEKv+\ncnE3uLvuHg0AAMvqmy1NeOtelz3mCJzj14r9KJ/qQ4OLbN2lIFD4JqdSiMQgTuCq\nefnPc5brx7708GPI5YUO\n=JsIR\n-----END PGP SIGNATURE-----", "payload": "tree 0271af4c2e45e9980b214b412f5e28f3771c8c7f\nparent 9f5f997c13c015c2bfcbbd6a4b4439df568554b1\nparent 50717281af218ccc3316d9a208e8fb7ddf85b763\nauthor Manish Goregaokar <manishsmail@gmail.com> 1462823421 -0700\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1462831173 -0700\n\nRollup merge of #33383 - cramertj:E0509, r=Manishearth\n\nAdd detailed error explanation for E0509\n\nPart of #32777\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57fa783d3c184b193ae737d26bb5aecab7937d4d", "html_url": "https://github.com/rust-lang/rust/commit/57fa783d3c184b193ae737d26bb5aecab7937d4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57fa783d3c184b193ae737d26bb5aecab7937d4d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f5f997c13c015c2bfcbbd6a4b4439df568554b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f5f997c13c015c2bfcbbd6a4b4439df568554b1", "html_url": "https://github.com/rust-lang/rust/commit/9f5f997c13c015c2bfcbbd6a4b4439df568554b1"}, {"sha": "50717281af218ccc3316d9a208e8fb7ddf85b763", "url": "https://api.github.com/repos/rust-lang/rust/commits/50717281af218ccc3316d9a208e8fb7ddf85b763", "html_url": "https://github.com/rust-lang/rust/commit/50717281af218ccc3316d9a208e8fb7ddf85b763"}], "stats": {"total": 96, "additions": 95, "deletions": 1}, "files": [{"sha": "8d9b88e899be26974252f228d82dc0eac5be83d2", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 95, "deletions": 1, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/57fa783d3c184b193ae737d26bb5aecab7937d4d/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57fa783d3c184b193ae737d26bb5aecab7937d4d/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=57fa783d3c184b193ae737d26bb5aecab7937d4d", "patch": "@@ -653,6 +653,101 @@ You can find more information about borrowing in the rust-book:\n http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n \"##,\n \n+E0509: r##\"\n+This error occurs when an attempt is made to move out of a value whose type\n+implements the `Drop` trait.\n+\n+Example of erroneous code:\n+\n+```compile_fail\n+struct FancyNum {\n+    num: usize\n+}\n+\n+struct DropStruct {\n+    fancy: FancyNum\n+}\n+\n+impl Drop for DropStruct {\n+    fn drop(&mut self) {\n+        // Destruct DropStruct, possibly using FancyNum\n+    }\n+}\n+\n+fn main() {\n+    let drop_struct = DropStruct{fancy: FancyNum{num: 5}};\n+    let fancy_field = drop_struct.fancy; // Error E0509\n+    println!(\"Fancy: {}\", fancy_field.num);\n+    // implicit call to `drop_struct.drop()` as drop_struct goes out of scope\n+}\n+```\n+\n+Here, we tried to move a field out of a struct of type `DropStruct` which\n+implements the `Drop` trait. However, a struct cannot be dropped if one or\n+more of its fields have been moved.\n+\n+Structs implementing the `Drop` trait have an implicit destructor that gets\n+called when they go out of scope. This destructor may use the fields of the\n+struct, so moving out of the struct could make it impossible to run the\n+destructor. Therefore, we must think of all values whose type implements the\n+`Drop` trait as single units whose fields cannot be moved.\n+\n+This error can be fixed by creating a reference to the fields of a struct,\n+enum, or tuple using the `ref` keyword:\n+\n+```\n+struct FancyNum {\n+    num: usize\n+}\n+\n+struct DropStruct {\n+    fancy: FancyNum\n+}\n+\n+impl Drop for DropStruct {\n+    fn drop(&mut self) {\n+        // Destruct DropStruct, possibly using FancyNum\n+    }\n+}\n+\n+fn main() {\n+    let drop_struct = DropStruct{fancy: FancyNum{num: 5}};\n+    let ref fancy_field = drop_struct.fancy; // No more errors!\n+    println!(\"Fancy: {}\", fancy_field.num);\n+    // implicit call to `drop_struct.drop()` as drop_struct goes out of scope\n+}\n+```\n+\n+Note that this technique can also be used in the arms of a match expression:\n+\n+```\n+struct FancyNum {\n+    num: usize\n+}\n+\n+enum DropEnum {\n+    Fancy(FancyNum)\n+}\n+\n+impl Drop for DropEnum {\n+    fn drop(&mut self) {\n+        // Destruct DropEnum, possibly using FancyNum\n+    }\n+}\n+\n+fn main() {\n+    // Creates and enum of type `DropEnum`, which implements `Drop`\n+    let drop_enum = DropEnum::Fancy(FancyNum{num: 10});\n+    match drop_enum {\n+        // Creates a reference to the inside of `DropEnum::Fancy`\n+        DropEnum::Fancy(ref fancy_field) => // No error!\n+            println!(\"It was fancy-- {}!\", fancy_field.num),\n+    }\n+    // implicit call to `drop_enum.drop()` as drop_enum goes out of scope\n+}\n+```\n+\"##,\n+\n }\n \n register_diagnostics! {\n@@ -664,6 +759,5 @@ register_diagnostics! {\n     E0504, // cannot move `..` into closure because it is borrowed\n     E0505, // cannot move out of `..` because it is borrowed\n     E0508, // cannot move out of type `..`, a non-copy fixed-size array\n-    E0509, // cannot move out of type `..`, which defines the `Drop` trait\n     E0524, // two closures require unique access to `..` at the same time\n }"}]}