{"sha": "311ff5b441c25c545c3b7928bb9f947b8e47be6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMWZmNWI0NDFjMjVjNTQ1YzNiNzkyOGJiOWY5NDdiOGU0N2JlNmY=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-04-10T07:45:57Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-04-11T03:03:40Z"}, "message": "Tweak span for ok-wrapping in no-tail block", "tree": {"sha": "f20b791e43523f9b30c1909350c8690edcf273bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f20b791e43523f9b30c1909350c8690edcf273bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/311ff5b441c25c545c3b7928bb9f947b8e47be6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/311ff5b441c25c545c3b7928bb9f947b8e47be6f", "html_url": "https://github.com/rust-lang/rust/commit/311ff5b441c25c545c3b7928bb9f947b8e47be6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/311ff5b441c25c545c3b7928bb9f947b8e47be6f/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c88efe46b85c0b1b1f9adfcd3366edf7456ad59a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c88efe46b85c0b1b1f9adfcd3366edf7456ad59a", "html_url": "https://github.com/rust-lang/rust/commit/c88efe46b85c0b1b1f9adfcd3366edf7456ad59a"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "fdeb41a8770f1eef5a2e41543f75c9fb32346173", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/311ff5b441c25c545c3b7928bb9f947b8e47be6f/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/311ff5b441c25c545c3b7928bb9f947b8e47be6f/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=311ff5b441c25c545c3b7928bb9f947b8e47be6f", "patch": "@@ -3017,9 +3017,10 @@ impl<'a> LoweringContext<'a> {\n                     let tail = block.expr.take().map_or_else(\n                         || {\n                             let LoweredNodeId { node_id, hir_id } = this.next_id();\n+                            let span = this.sess.codemap().end_point(unstable_span);\n                             hir::Expr {\n                                 id: node_id,\n-                                span: unstable_span,\n+                                span,\n                                 node: hir::ExprTup(hir_vec![]),\n                                 attrs: ThinVec::new(),\n                                 hir_id,"}, {"sha": "10130ef1e5d1afd1ef2096890ec18362cf4ee64a", "filename": "src/test/ui/catch-block-type-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/311ff5b441c25c545c3b7928bb9f947b8e47be6f/src%2Ftest%2Fui%2Fcatch-block-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/311ff5b441c25c545c3b7928bb9f947b8e47be6f/src%2Ftest%2Fui%2Fcatch-block-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcatch-block-type-error.rs?ref=311ff5b441c25c545c3b7928bb9f947b8e47be6f", "patch": "@@ -20,7 +20,7 @@ fn main() {\n     };\n \n     let _: Option<i32> = do catch {\n-        //~^ ERROR type mismatch\n         foo()?;\n     };\n+    //~^ ERROR type mismatch\n }"}, {"sha": "0ae8d4862f7c8828f2077e583a070305297bdaa0", "filename": "src/test/ui/catch-block-type-error.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/311ff5b441c25c545c3b7928bb9f947b8e47be6f/src%2Ftest%2Fui%2Fcatch-block-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/311ff5b441c25c545c3b7928bb9f947b8e47be6f/src%2Ftest%2Fui%2Fcatch-block-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcatch-block-type-error.stderr?ref=311ff5b441c25c545c3b7928bb9f947b8e47be6f", "patch": "@@ -8,14 +8,10 @@ LL |         42\n               found type `{integer}`\n \n error[E0271]: type mismatch resolving `<std::option::Option<i32> as std::ops::Try>::Ok == ()`\n-  --> $DIR/catch-block-type-error.rs:22:35\n+  --> $DIR/catch-block-type-error.rs:24:5\n    |\n-LL |       let _: Option<i32> = do catch {\n-   |  ___________________________________^\n-LL | |         //~^ ERROR type mismatch\n-LL | |         foo()?;\n-LL | |     };\n-   | |_____^ expected i32, found ()\n+LL |     };\n+   |     ^ expected i32, found ()\n    |\n    = note: expected type `i32`\n               found type `()`"}]}