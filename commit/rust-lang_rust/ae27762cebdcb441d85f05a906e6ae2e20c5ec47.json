{"sha": "ae27762cebdcb441d85f05a906e6ae2e20c5ec47", "node_id": "C_kwDOAAsO6NoAKGFlMjc3NjJjZWJkY2I0NDFkODVmMDVhOTA2ZTZhZTJlMjBjNWVjNDc", "commit": {"author": {"name": "Stefan Lankes", "email": "slankes@eonerc.rwth-aachen.de", "date": "2023-02-26T22:21:19Z"}, "committer": {"name": "Stefan Lankes", "email": "slankes@eonerc.rwth-aachen.de", "date": "2023-02-27T08:59:57Z"}, "message": "use `as_ptr` to determine the address of atomics", "tree": {"sha": "646b9f52986b4de4ebec6a37a6a9c61dc572a77b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/646b9f52986b4de4ebec6a37a6a9c61dc572a77b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae27762cebdcb441d85f05a906e6ae2e20c5ec47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae27762cebdcb441d85f05a906e6ae2e20c5ec47", "html_url": "https://github.com/rust-lang/rust/commit/ae27762cebdcb441d85f05a906e6ae2e20c5ec47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae27762cebdcb441d85f05a906e6ae2e20c5ec47/comments", "author": {"login": "stlankes", "id": 5888473, "node_id": "MDQ6VXNlcjU4ODg0NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5888473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stlankes", "html_url": "https://github.com/stlankes", "followers_url": "https://api.github.com/users/stlankes/followers", "following_url": "https://api.github.com/users/stlankes/following{/other_user}", "gists_url": "https://api.github.com/users/stlankes/gists{/gist_id}", "starred_url": "https://api.github.com/users/stlankes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stlankes/subscriptions", "organizations_url": "https://api.github.com/users/stlankes/orgs", "repos_url": "https://api.github.com/users/stlankes/repos", "events_url": "https://api.github.com/users/stlankes/events{/privacy}", "received_events_url": "https://api.github.com/users/stlankes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stlankes", "id": 5888473, "node_id": "MDQ6VXNlcjU4ODg0NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5888473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stlankes", "html_url": "https://github.com/stlankes", "followers_url": "https://api.github.com/users/stlankes/followers", "following_url": "https://api.github.com/users/stlankes/following{/other_user}", "gists_url": "https://api.github.com/users/stlankes/gists{/gist_id}", "starred_url": "https://api.github.com/users/stlankes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stlankes/subscriptions", "organizations_url": "https://api.github.com/users/stlankes/orgs", "repos_url": "https://api.github.com/users/stlankes/repos", "events_url": "https://api.github.com/users/stlankes/events{/privacy}", "received_events_url": "https://api.github.com/users/stlankes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daf31a113cd24b85e1c8731b0531063477a1f92b", "url": "https://api.github.com/repos/rust-lang/rust/commits/daf31a113cd24b85e1c8731b0531063477a1f92b", "html_url": "https://github.com/rust-lang/rust/commit/daf31a113cd24b85e1c8731b0531063477a1f92b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "427d8ff6f2e4de429c3d86e1a2f10ca19d9753f7", "filename": "library/std/src/sys/hermit/futex.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae27762cebdcb441d85f05a906e6ae2e20c5ec47/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae27762cebdcb441d85f05a906e6ae2e20c5ec47/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Ffutex.rs?ref=ae27762cebdcb441d85f05a906e6ae2e20c5ec47", "patch": "@@ -16,7 +16,7 @@ pub fn futex_wait(futex: &AtomicU32, expected: u32, timeout: Option<Duration>) -\n \n     let r = unsafe {\n         abi::futex_wait(\n-            futex.as_mut_ptr(),\n+            futex.as_ptr(),\n             expected,\n             timespec.as_ref().map_or(null(), |t| t as *const abi::timespec),\n             abi::FUTEX_RELATIVE_TIMEOUT,\n@@ -28,12 +28,12 @@ pub fn futex_wait(futex: &AtomicU32, expected: u32, timeout: Option<Duration>) -\n \n #[inline]\n pub fn futex_wake(futex: &AtomicU32) -> bool {\n-    unsafe { abi::futex_wake(futex.as_mut_ptr(), 1) > 0 }\n+    unsafe { abi::futex_wake(futex.as_ptr(), 1) > 0 }\n }\n \n #[inline]\n pub fn futex_wake_all(futex: &AtomicU32) {\n     unsafe {\n-        abi::futex_wake(futex.as_mut_ptr(), i32::MAX);\n+        abi::futex_wake(futex.as_ptr(), i32::MAX);\n     }\n }"}]}