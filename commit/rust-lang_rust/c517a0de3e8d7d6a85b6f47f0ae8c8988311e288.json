{"sha": "c517a0de3e8d7d6a85b6f47f0ae8c8988311e288", "node_id": "C_kwDOAAsO6NoAKGM1MTdhMGRlM2U4ZDdkNmE4NWI2ZjQ3ZjBhZThjODk4ODMxMWUyODg", "commit": {"author": {"name": "Ibraheem Ahmed", "email": "ibrah1440@gmail.com", "date": "2021-10-11T20:13:17Z"}, "committer": {"name": "Ibraheem Ahmed", "email": "ibrah1440@gmail.com", "date": "2021-10-11T20:16:20Z"}, "message": "add slice::swap tests", "tree": {"sha": "844cfcd5d96b4c8b992c74b7ecbe98c842e1f734", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/844cfcd5d96b4c8b992c74b7ecbe98c842e1f734"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c517a0de3e8d7d6a85b6f47f0ae8c8988311e288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c517a0de3e8d7d6a85b6f47f0ae8c8988311e288", "html_url": "https://github.com/rust-lang/rust/commit/c517a0de3e8d7d6a85b6f47f0ae8c8988311e288", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c517a0de3e8d7d6a85b6f47f0ae8c8988311e288/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a8ff8df54d5effdfd0154009eea2d50bdd5e598", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8ff8df54d5effdfd0154009eea2d50bdd5e598", "html_url": "https://github.com/rust-lang/rust/commit/2a8ff8df54d5effdfd0154009eea2d50bdd5e598"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "b6a326f3d7368007b3453ccf56fee296d6476e5e", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c517a0de3e8d7d6a85b6f47f0ae8c8988311e288/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c517a0de3e8d7d6a85b6f47f0ae8c8988311e288/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=c517a0de3e8d7d6a85b6f47f0ae8c8988311e288", "patch": "@@ -2152,3 +2152,42 @@ fn test_slice_fill_with_uninit() {\n     let mut a = [MaybeUninit::<u8>::uninit(); 10];\n     a.fill(MaybeUninit::uninit());\n }\n+\n+#[test]\n+fn test_swap() {\n+    let mut x = [\"a\", \"b\", \"c\", \"d\"];\n+    x.swap(1, 3);\n+    assert_eq!(x, [\"a\", \"d\", \"c\", \"b\"]);\n+    x.swap(0, 3);\n+    assert_eq!(x, [\"b\", \"d\", \"c\", \"a\"]);\n+}\n+\n+mod swap_panics {\n+    #[test]\n+    #[should_panic(expected = \"index out of bounds: the len is 4 but the index is 4\")]\n+    fn index_a_equals_len() {\n+        let mut x = [\"a\", \"b\", \"c\", \"d\"];\n+        x.swap(4, 2);\n+    }\n+\n+    #[test]\n+    #[should_panic(expected = \"index out of bounds: the len is 4 but the index is 4\")]\n+    fn index_b_equals_len() {\n+        let mut x = [\"a\", \"b\", \"c\", \"d\"];\n+        x.swap(2, 4);\n+    }\n+\n+    #[test]\n+    #[should_panic(expected = \"index out of bounds: the len is 4 but the index is 5\")]\n+    fn index_a_greater_than_len() {\n+        let mut x = [\"a\", \"b\", \"c\", \"d\"];\n+        x.swap(5, 2);\n+    }\n+\n+    #[test]\n+    #[should_panic(expected = \"index out of bounds: the len is 4 but the index is 5\")]\n+    fn index_b_greater_than_len() {\n+        let mut x = [\"a\", \"b\", \"c\", \"d\"];\n+        x.swap(2, 5);\n+    }\n+}"}]}