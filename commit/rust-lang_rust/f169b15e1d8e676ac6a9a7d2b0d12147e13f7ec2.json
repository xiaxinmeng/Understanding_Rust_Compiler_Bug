{"sha": "f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNjliMTVlMWQ4ZTY3NmFjNmE5YTdkMmIwZDEyMTQ3ZTEzZjdlYzI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-12T20:46:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-12T20:46:41Z"}, "message": "Rollup merge of #62431 - czipperz:add-messages-to-must-use-is_-methods, r=scottmcm\n\nAdd messages to `Option`'s and `Result`'s `must_use` annotation for `is_*`\n\nr? @RalfJung", "tree": {"sha": "1a1dec2a072b9cee3d618fafb6fa2234a87d7476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a1dec2a072b9cee3d618fafb6fa2234a87d7476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdKPGxCRBK7hj4Ov3rIwAAdHIIAF2gZ5mHvl7tbo1gG++mePnX\n1wPPs36QVU6Cjfhum/PApjTZH5u3A4aZGXSf9fNKr7k7yVkNnAq3g4sS5V3Hdvzv\n68x1qymlO+tI3brmgtP9uL2R3GM9uyBK6dL/m4A8/RM+3F4GPS9LuO5DC0VCgOtb\nRQeTL2nl3MDfFvFxVCLG6BQ9DnZ8OZjpxd1GrDUAjtdT07iIKTjcrQj1jBKBh9MS\nBSCYF3IsTqhU1/9uC1uL89XH9jGPDdhbnR8QQxdAOD0p4aHBQkY3e8aYazH++ZVU\na95kQ1IwggI7OwQYTA1vKabBHG9GaFTOmIZxpNjuXUhLo4ZaWHZWKUFkH7Smhy0=\n=SUHG\n-----END PGP SIGNATURE-----\n", "payload": "tree 1a1dec2a072b9cee3d618fafb6fa2234a87d7476\nparent 9ffeb26e0b0491fe165911550c63795b76503aa5\nparent 9b0623d51f5c9754e63107b50373ff1294c28c61\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562964401 +0200\ncommitter GitHub <noreply@github.com> 1562964401 +0200\n\nRollup merge of #62431 - czipperz:add-messages-to-must-use-is_-methods, r=scottmcm\n\nAdd messages to `Option`'s and `Result`'s `must_use` annotation for `is_*`\n\nr? @RalfJung\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2", "html_url": "https://github.com/rust-lang/rust/commit/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ffeb26e0b0491fe165911550c63795b76503aa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ffeb26e0b0491fe165911550c63795b76503aa5", "html_url": "https://github.com/rust-lang/rust/commit/9ffeb26e0b0491fe165911550c63795b76503aa5"}, {"sha": "9b0623d51f5c9754e63107b50373ff1294c28c61", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b0623d51f5c9754e63107b50373ff1294c28c61", "html_url": "https://github.com/rust-lang/rust/commit/9b0623d51f5c9754e63107b50373ff1294c28c61"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "193cdb15b548d944aea58ea35e89c684d17934a5", "filename": "src/libcore/option.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2", "patch": "@@ -178,7 +178,7 @@ impl<T> Option<T> {\n     /// ```\n     ///\n     /// [`Some`]: #variant.Some\n-    #[must_use]\n+    #[must_use = \"if you intended to assert that this has a value, consider `.unwrap()` instead\"]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn is_some(&self) -> bool {\n@@ -201,7 +201,8 @@ impl<T> Option<T> {\n     /// ```\n     ///\n     /// [`None`]: #variant.None\n-    #[must_use]\n+    #[must_use = \"if you intended to assert that this doesn't have a value, consider \\\n+                  `.and_then(|| panic!(\\\"`Option` had a value when expected `None`\\\"))` instead\"]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn is_none(&self) -> bool {"}, {"sha": "ba72e1e75f8e1f64dd3defac20aeffed8bd3dbc0", "filename": "src/libcore/result.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=f169b15e1d8e676ac6a9a7d2b0d12147e13f7ec2", "patch": "@@ -277,7 +277,7 @@ impl<T, E> Result<T, E> {\n     /// let x: Result<i32, &str> = Err(\"Some error message\");\n     /// assert_eq!(x.is_ok(), false);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"if you intended to assert that this is ok, consider `.unwrap()` instead\"]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn is_ok(&self) -> bool {\n@@ -302,7 +302,7 @@ impl<T, E> Result<T, E> {\n     /// let x: Result<i32, &str> = Err(\"Some error message\");\n     /// assert_eq!(x.is_err(), true);\n     /// ```\n-    #[must_use]\n+    #[must_use = \"if you intended to assert that this is err, consider `.unwrap_err()` instead\"]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn is_err(&self) -> bool {"}]}