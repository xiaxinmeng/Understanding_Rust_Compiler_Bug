{"sha": "668ef72f4429059240ee361a2f0f748558a5326f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2OGVmNzJmNDQyOTA1OTI0MGVlMzYxYTJmMGY3NDg1NThhNTMyNmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-17T23:16:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-17T23:16:08Z"}, "message": "Auto merge of #75120 - JulianKnodt:rm_reps, r=oli-obk\n\nrust_ast::ast => rustc_ast\n\nRework of #71199 which is a rework #70621\n\nStill working on this but just made the PR to track progress\n\nr? @Dylan-DPC", "tree": {"sha": "5a3c09cc5fb0343fc7a0cd948b02ae1c392099b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a3c09cc5fb0343fc7a0cd948b02ae1c392099b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/668ef72f4429059240ee361a2f0f748558a5326f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/668ef72f4429059240ee361a2f0f748558a5326f", "html_url": "https://github.com/rust-lang/rust/commit/668ef72f4429059240ee361a2f0f748558a5326f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/668ef72f4429059240ee361a2f0f748558a5326f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "792c645ca7d11a8d254df307d019c5bf01445c37", "url": "https://api.github.com/repos/rust-lang/rust/commits/792c645ca7d11a8d254df307d019c5bf01445c37", "html_url": "https://github.com/rust-lang/rust/commit/792c645ca7d11a8d254df307d019c5bf01445c37"}, {"sha": "a888b02884883de41d0ce08aa62a6cd6d4790951", "url": "https://api.github.com/repos/rust-lang/rust/commits/a888b02884883de41d0ce08aa62a6cd6d4790951", "html_url": "https://github.com/rust-lang/rust/commit/a888b02884883de41d0ce08aa62a6cd6d4790951"}], "stats": {"total": 607, "additions": 303, "deletions": 304}, "files": [{"sha": "b556c1a446b7b3c85416b333ee82aeb21750ed52", "filename": "src/librustc_ast/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -51,6 +51,8 @@ pub mod token;\n pub mod tokenstream;\n pub mod visit;\n \n+pub use self::ast::*;\n+\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n \n /// Requirements for a `StableHashingContext` to be used in this crate."}, {"sha": "df452825bba5589a07224120ef76d4ccdebeb1ed", "filename": "src/librustc_ast_lowering/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fexpr.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n use super::{ImplTraitContext, LoweringContext, ParamMode, ParenthesizedGenericArgs};\n \n-use rustc_ast::ast::*;\n use rustc_ast::attr;\n use rustc_ast::ptr::P as AstP;\n+use rustc_ast::*;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_data_structures::thin_vec::ThinVec;\n@@ -845,7 +845,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         e2: Option<&Expr>,\n         lims: RangeLimits,\n     ) -> hir::ExprKind<'hir> {\n-        use rustc_ast::ast::RangeLimits::*;\n+        use rustc_ast::RangeLimits::*;\n \n         let lang_item = match (e1, e2, lims) {\n             (None, None, HalfOpen) => hir::LangItem::RangeFull,"}, {"sha": "473fb7ccc70c4dda877255fc2599582037b5fd1b", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,10 +2,10 @@ use super::{AnonymousLifetimeMode, LoweringContext, ParamMode};\n use super::{ImplTraitContext, ImplTraitPosition};\n use crate::Arena;\n \n-use rustc_ast::ast::*;\n use rustc_ast::node_id::NodeMap;\n use rustc_ast::ptr::P;\n use rustc_ast::visit::{self, AssocCtxt, FnCtxt, FnKind, Visitor};\n+use rustc_ast::*;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;"}, {"sha": "31eedeaed0a684ac33e46bade44b4217314cdb4b", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -35,13 +35,12 @@\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]\n \n-use rustc_ast::ast;\n-use rustc_ast::ast::*;\n use rustc_ast::node_id::NodeMap;\n use rustc_ast::token::{self, DelimToken, Nonterminal, Token};\n use rustc_ast::tokenstream::{DelimSpan, TokenStream, TokenTree};\n use rustc_ast::visit::{self, AssocCtxt, Visitor};\n use rustc_ast::walk_list;\n+use rustc_ast::{self as ast, *};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::FxHashSet;"}, {"sha": "cb7b7c0eb6116fa9a157c021fc450b534686e463", "filename": "src/librustc_ast_lowering/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpat.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use super::{ImplTraitContext, LoweringContext, ParamMode};\n \n-use rustc_ast::ast::*;\n use rustc_ast::ptr::P;\n+use rustc_ast::*;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "cf68dfb9ae1a143f07b288806236696fceede8cc", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use super::{AnonymousLifetimeMode, ImplTraitContext, LoweringContext, ParamMode};\n use super::{GenericArgsCtor, ParenthesizedGenericArgs};\n \n-use rustc_ast::ast::{self, *};\n+use rustc_ast::{self as ast, *};\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, PartialRes, Res};"}, {"sha": "a01dd8c939cf6a7460f59510c2877686fc568161", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,10 +7,10 @@\n // or type checking or some other kind of complex analysis.\n \n use itertools::{Either, Itertools};\n-use rustc_ast::ast::*;\n use rustc_ast::ptr::P;\n use rustc_ast::visit::{self, AssocCtxt, FnCtxt, FnKind, Visitor};\n use rustc_ast::walk_list;\n+use rustc_ast::*;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{error_code, pluralize, struct_span_err, Applicability};"}, {"sha": "b15792dfd4c45ad7c1932ef3faf11d7a5c149164", "filename": "src/librustc_ast_passes/feature_gate.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Ffeature_gate.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,7 @@\n-use rustc_ast::ast::{self, AssocTyConstraint, AssocTyConstraintKind, NodeId};\n-use rustc_ast::ast::{GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData};\n+use rustc_ast as ast;\n use rustc_ast::visit::{self, AssocCtxt, FnCtxt, FnKind, Visitor};\n+use rustc_ast::{AssocTyConstraint, AssocTyConstraintKind, NodeId};\n+use rustc_ast::{GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData};\n use rustc_errors::struct_span_err;\n use rustc_feature::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n use rustc_feature::{Features, GateIssue};"}, {"sha": "706dca2b7f45558c9eb5261c87ee358a8203e886", "filename": "src/librustc_ast_passes/node_count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Fnode_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Fnode_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fnode_count.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n // Simply gives a rough count of the number of nodes in an AST.\n \n-use rustc_ast::ast::*;\n use rustc_ast::visit::*;\n+use rustc_ast::*;\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n "}, {"sha": "053aba862227188ae24e172135da505ef630fe28", "filename": "src/librustc_ast_passes/show_span.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Fshow_span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_passes%2Fshow_span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fshow_span.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@\n \n use std::str::FromStr;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::visit;\n use rustc_ast::visit::Visitor;\n "}, {"sha": "cb48deb58863e4cc459c937dab1479ed814862df", "filename": "src/librustc_ast_pretty/pprust.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_pretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_pretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fpprust.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,18 +1,18 @@\n use crate::pp::Breaks::{Consistent, Inconsistent};\n use crate::pp::{self, Breaks};\n \n-use rustc_ast::ast::{self, BlockCheckMode, PatKind, RangeEnd, RangeSyntax};\n-use rustc_ast::ast::{Attribute, GenericArg, MacArgs};\n-use rustc_ast::ast::{GenericBound, SelfKind, TraitBoundModifier};\n-use rustc_ast::ast::{InlineAsmOperand, InlineAsmRegOrRegClass};\n-use rustc_ast::ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_ast::attr;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, BinOpToken, CommentKind, DelimToken, Nonterminal, Token, TokenKind};\n use rustc_ast::tokenstream::{TokenStream, TokenTree};\n use rustc_ast::util::classify;\n use rustc_ast::util::comments::{gather_comments, Comment, CommentStyle};\n use rustc_ast::util::parser::{self, AssocOp, Fixity};\n+use rustc_ast::{self as ast, BlockCheckMode, PatKind, RangeEnd, RangeSyntax};\n+use rustc_ast::{GenericArg, MacArgs};\n+use rustc_ast::{GenericBound, SelfKind, TraitBoundModifier};\n+use rustc_ast::{InlineAsmOperand, InlineAsmRegOrRegClass};\n+use rustc_ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_span::edition::Edition;\n use rustc_span::source_map::{SourceMap, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, IdentPrinter, Symbol};\n@@ -902,7 +902,7 @@ impl<'a> State<'a> {\n         }\n     }\n \n-    crate fn print_foreign_mod(&mut self, nmod: &ast::ForeignMod, attrs: &[Attribute]) {\n+    crate fn print_foreign_mod(&mut self, nmod: &ast::ForeignMod, attrs: &[ast::Attribute]) {\n         self.print_inner_attributes(attrs);\n         for item in &nmod.items {\n             self.print_foreign_item(item);\n@@ -1666,7 +1666,7 @@ impl<'a> State<'a> {\n         }\n     }\n \n-    fn print_expr_vec(&mut self, exprs: &[P<ast::Expr>], attrs: &[Attribute]) {\n+    fn print_expr_vec(&mut self, exprs: &[P<ast::Expr>], attrs: &[ast::Attribute]) {\n         self.ibox(INDENT_UNIT);\n         self.s.word(\"[\");\n         self.print_inner_attributes_inline(attrs);\n@@ -1679,7 +1679,7 @@ impl<'a> State<'a> {\n         &mut self,\n         element: &ast::Expr,\n         count: &ast::AnonConst,\n-        attrs: &[Attribute],\n+        attrs: &[ast::Attribute],\n     ) {\n         self.ibox(INDENT_UNIT);\n         self.s.word(\"[\");\n@@ -1696,7 +1696,7 @@ impl<'a> State<'a> {\n         path: &ast::Path,\n         fields: &[ast::Field],\n         wth: &Option<P<ast::Expr>>,\n-        attrs: &[Attribute],\n+        attrs: &[ast::Attribute],\n     ) {\n         self.print_path(path, true, 0);\n         self.s.word(\"{\");\n@@ -1736,7 +1736,7 @@ impl<'a> State<'a> {\n         self.s.word(\"}\");\n     }\n \n-    fn print_expr_tup(&mut self, exprs: &[P<ast::Expr>], attrs: &[Attribute]) {\n+    fn print_expr_tup(&mut self, exprs: &[P<ast::Expr>], attrs: &[ast::Attribute]) {\n         self.popen();\n         self.print_inner_attributes_inline(attrs);\n         self.commasep_exprs(Inconsistent, &exprs[..]);"}, {"sha": "fdbf3feb900ef2d7c917f9bf3b02cd86605631bb", "filename": "src/librustc_ast_pretty/pprust/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2Fpprust%2Ftests.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n use super::*;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_span::source_map::respan;\n use rustc_span::symbol::Ident;\n use rustc_span::with_default_session_globals;"}, {"sha": "b8929fe08891305eb65e8ffa828164311b298c3a", "filename": "src/librustc_attr/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_attr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_attr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2Fbuiltin.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n //! Parsing and validation of builtin attributes\n \n-use rustc_ast::ast::{self, Attribute, Lit, LitKind, MetaItem, MetaItemKind, NestedMetaItem};\n+use rustc_ast::{self as ast, Attribute, Lit, LitKind, MetaItem, MetaItemKind, NestedMetaItem};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability};\n use rustc_feature::{find_gated_cfg, is_builtin_attr_name, Features, GatedCfg};"}, {"sha": "5dafd6b77ab1e704ca1b56d2aefc3bcf0f3308fa", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;"}, {"sha": "25181715540735bf393cae660c6aaa20fcf9394e", "filename": "src/librustc_builtin_macros/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fassert.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,9 +1,9 @@\n use rustc_errors::{Applicability, DiagnosticBuilder};\n \n-use rustc_ast::ast::{self, *};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, TokenKind};\n use rustc_ast::tokenstream::{DelimSpan, TokenStream, TokenTree};\n+use rustc_ast::{self as ast, *};\n use rustc_ast_pretty::pprust;\n use rustc_expand::base::*;\n use rustc_parse::parser::Parser;"}, {"sha": "4c00162b556b8cb8231580f52eee5352edf682b3", "filename": "src/librustc_builtin_macros/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fcfg.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@\n //! a literal `true` or `false` based on whether the given cfg matches the\n //! current compilation environment.\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_attr as attr;"}, {"sha": "75f4b077640d42e17772dd3467a7fa74d201962b", "filename": "src/librustc_builtin_macros/cfg_accessible.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fcfg_accessible.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fcfg_accessible.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fcfg_accessible.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n //! Implementation of the `#[cfg_accessible(path)]` attribute macro.\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_expand::base::{Annotatable, ExpandResult, ExtCtxt, MultiItemModifier};\n use rustc_feature::AttributeTemplate;\n use rustc_parse::validate_attr;"}, {"sha": "34e2accc61541bee4928b98f2b1dc7edb7a61d74", "filename": "src/librustc_builtin_macros/cmdline_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fcmdline_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fcmdline_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fcmdline_attrs.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n //! Attributes injected into the crate root from command line using `-Z crate-attr`.\n \n-use rustc_ast::ast::{self, AttrItem, AttrStyle};\n use rustc_ast::attr::mk_attr;\n use rustc_ast::token;\n+use rustc_ast::{self as ast, AttrItem, AttrStyle};\n use rustc_session::parse::ParseSess;\n use rustc_span::FileName;\n "}, {"sha": "e5077d93674a19be6ff1c0c1ea774a69e243d26f", "filename": "src/librustc_builtin_macros/concat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fconcat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fconcat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fconcat.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_expand::base::{self, DummyResult};\n use rustc_span::symbol::Symbol;"}, {"sha": "8223cdda072314b8b555bbf72dc667d153814c8f", "filename": "src/librustc_builtin_macros/concat_idents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fconcat_idents.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Token};\n use rustc_ast::tokenstream::{TokenStream, TokenTree};"}, {"sha": "12ef166b8b0512ddab9ae9069b0c6e0fad5d40e6", "filename": "src/librustc_builtin_macros/deriving/bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n-use rustc_ast::ast::MetaItem;\n+use rustc_ast::MetaItem;\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::Span;\n "}, {"sha": "957c8035399a2da862309d05c41ed00ae89a9730", "filename": "src/librustc_builtin_macros/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,8 +2,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n-use rustc_ast::ast::{self, Expr, GenericArg, Generics, ItemKind, MetaItem, VariantData};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, Expr, GenericArg, Generics, ItemKind, MetaItem, VariantData};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "79f35ad5819f1c2919969f74cd39a361672b1d2f", "filename": "src/librustc_builtin_macros/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,8 +2,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n-use rustc_ast::ast::{self, Expr, GenericArg, MetaItem};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, Expr, GenericArg, MetaItem};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "c1473e2409332b1b95bfa477b8538a93ca05ab97", "filename": "src/librustc_builtin_macros/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,8 +2,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n-use rustc_ast::ast::{self, Expr, MetaItem};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, Expr, MetaItem};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::Span;"}, {"sha": "8e9f15743cc34ea0053d9d6104f8cd0c81d20a07", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,8 +2,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std};\n \n-use rustc_ast::ast::{BinOpKind, Expr, MetaItem};\n use rustc_ast::ptr::P;\n+use rustc_ast::{BinOpKind, Expr, MetaItem};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "21174ca4c8bf9e370e9650129c6448e3e7380bf9", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,8 +4,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std, pathvec_std};\n \n-use rustc_ast::ast::{self, BinOpKind, Expr, MetaItem};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, BinOpKind, Expr, MetaItem};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "120e859f2b1a434bec10a4f4ef2ac6df4855e750", "filename": "src/librustc_builtin_macros/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,9 +2,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n-use rustc_ast::ast;\n-use rustc_ast::ast::{Expr, MetaItem};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, Expr, MetaItem};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "df69f6c90d813e0acfbdd877f3e48ce9ab6fea12", "filename": "src/librustc_builtin_macros/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,9 +4,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n-use rustc_ast::ast;\n-use rustc_ast::ast::{Expr, MetaItem, Mutability};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, Expr, MetaItem, Mutability};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "980be3a005039915ba0892103029d79c96a66a86", "filename": "src/librustc_builtin_macros/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n \n-use rustc_ast::ast::{Expr, MetaItem};\n use rustc_ast::ptr::P;\n+use rustc_ast::{Expr, MetaItem};\n use rustc_errors::struct_span_err;\n use rustc_expand::base::{Annotatable, DummyResult, ExtCtxt};\n use rustc_span::symbol::{kw, sym};"}, {"sha": "62aa1cbfbf2656162573c12245a09c430fef495a", "filename": "src/librustc_builtin_macros/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -89,8 +89,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n-use rustc_ast::ast::{Expr, ExprKind, MetaItem, Mutability};\n use rustc_ast::ptr::P;\n+use rustc_ast::{Expr, ExprKind, MetaItem, Mutability};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "accb0b3c9496514473c065721e99287bf55e9a91", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -181,9 +181,9 @@ use std::cell::RefCell;\n use std::iter;\n use std::vec;\n \n-use rustc_ast::ast::{self, BinOpKind, EnumDef, Expr, Generics, PatKind};\n-use rustc_ast::ast::{GenericArg, GenericParamKind, VariantData};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, BinOpKind, EnumDef, Expr, Generics, PatKind};\n+use rustc_ast::{GenericArg, GenericParamKind, VariantData};\n use rustc_attr as attr;\n use rustc_data_structures::map_in_place::MapInPlace;\n use rustc_expand::base::{Annotatable, ExtCtxt};"}, {"sha": "6b7d0e1f204b5f0a9712db0f32bc9efa547725ac", "filename": "src/librustc_builtin_macros/deriving/generic/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,8 +4,8 @@\n pub use PtrTy::*;\n pub use Ty::*;\n \n-use rustc_ast::ast::{self, Expr, GenericArg, GenericParamKind, Generics, SelfKind};\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, Expr, GenericArg, GenericParamKind, Generics, SelfKind};\n use rustc_expand::base::ExtCtxt;\n use rustc_span::source_map::{respan, DUMMY_SP};\n use rustc_span::symbol::{kw, Ident, Symbol};"}, {"sha": "868f863b990212d927d9a8aad398d38f48b361c2", "filename": "src/librustc_builtin_macros/deriving/hash.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,8 +2,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::{self, path_std, pathvec_std};\n \n-use rustc_ast::ast::{Expr, MetaItem, Mutability};\n use rustc_ast::ptr::P;\n+use rustc_ast::{Expr, MetaItem, Mutability};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "7e3fd131d4417c49ae7994976c56d0cb3b615732", "filename": "src/librustc_builtin_macros/deriving/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,8 @@\n //! The compiler code necessary to implement the `#[derive]` extensions.\n \n-use rustc_ast::ast::{self, ItemKind, MetaItem};\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n+use rustc_ast::{ItemKind, MetaItem};\n use rustc_expand::base::{Annotatable, ExpandResult, ExtCtxt, MultiItemModifier};\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "6de12acfb94294d834c5fcf5be8ccb7f4175f065", "filename": "src/librustc_builtin_macros/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fenv.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,8 +3,8 @@\n // interface.\n //\n \n-use rustc_ast::ast::{self, GenericArg};\n use rustc_ast::tokenstream::TokenStream;\n+use rustc_ast::{self as ast, GenericArg};\n use rustc_expand::base::{self, *};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "373277f525d74c81334771c917cbab7f996ea8c9", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use ArgumentType::*;\n use Position::*;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;"}, {"sha": "c37adb7baa05742d18998dc3eac6034c03506a91", "filename": "src/librustc_builtin_macros/global_allocator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,11 +1,11 @@\n use crate::util::check_builtin_macro_attribute;\n \n-use rustc_ast::ast::{self, Attribute, Expr, FnHeader, FnSig, Generics, Param};\n-use rustc_ast::ast::{ItemKind, Mutability, Stmt, Ty, TyKind, Unsafe};\n use rustc_ast::expand::allocator::{\n     AllocatorKind, AllocatorMethod, AllocatorTy, ALLOCATOR_METHODS,\n };\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, Attribute, Expr, FnHeader, FnSig, Generics, Param};\n+use rustc_ast::{ItemKind, Mutability, Stmt, Ty, TyKind, Unsafe};\n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;"}, {"sha": "2465f33622e847c903e92da0d9c9ed2e28887444", "filename": "src/librustc_builtin_macros/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -8,7 +8,7 @@\n //! LLVM's `module asm \"some assembly here\"`. All of LLVM's caveats\n //! therefore apply.\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;"}, {"sha": "db73fdbe24ff580b5b199711fc11c3663e56f9dc", "filename": "src/librustc_builtin_macros/llvm_asm.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fllvm_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fllvm_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fllvm_asm.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,10 +2,11 @@\n //\n use State::*;\n \n-use rustc_ast::ast::{self, LlvmAsmDialect};\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Token};\n use rustc_ast::tokenstream::{self, TokenStream};\n+use rustc_ast::LlvmAsmDialect;\n use rustc_errors::{struct_span_err, DiagnosticBuilder, PResult};\n use rustc_expand::base::*;\n use rustc_parse::parser::Parser;"}, {"sha": "0c6769906f3399d33bf76613c050eae1cd16e3f8", "filename": "src/librustc_builtin_macros/proc_macro_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,9 +1,9 @@\n use std::mem;\n \n-use rustc_ast::ast::{self, NodeId};\n use rustc_ast::attr;\n use rustc_ast::ptr::P;\n use rustc_ast::visit::{self, Visitor};\n+use rustc_ast::{self as ast, NodeId};\n use rustc_ast_pretty::pprust;\n use rustc_expand::base::{ExtCtxt, ResolverExpand};\n use rustc_expand::expand::{AstFragment, ExpansionConfig};"}, {"sha": "70753208af310bc47b2fac09526434d71c7cf29b", "filename": "src/librustc_builtin_macros/source_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fsource_util.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;"}, {"sha": "e801b5c7b0c62b4881cd1dfff12d21ec52e7d15c", "filename": "src/librustc_builtin_macros/standard_library_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_expand::base::{ExtCtxt, ResolverExpand};\n use rustc_expand::expand::ExpansionConfig;"}, {"sha": "8e56e80bba20451d8da7eb41945fbeefde0a0f1a", "filename": "src/librustc_builtin_macros/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@\n /// Ideally, this code would be in libtest but for efficiency and error messages it lives here.\n use crate::util::check_builtin_macro_attribute;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::attr;\n use rustc_ast_pretty::pprust;\n use rustc_expand::base::*;"}, {"sha": "277cd8389e3e2dbf44480a6a65a6bba256b8e25b", "filename": "src/librustc_builtin_macros/test_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest_harness.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n // Code that generates a test runner to run all the tests in a crate\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::attr;\n use rustc_ast::entry::EntryPointType;\n use rustc_ast::mut_visit::{ExpectOne, *};"}, {"sha": "01ea80c4c8a0639220f1bd3c18e5fffc781d5f5c", "filename": "src/librustc_builtin_macros/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_builtin_macros%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Futil.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast::MetaItem;\n+use rustc_ast::MetaItem;\n use rustc_expand::base::ExtCtxt;\n use rustc_feature::AttributeTemplate;\n use rustc_parse::validate_attr;"}, {"sha": "a6062de6bf8af48a993668019c8ace8b3e994e1f", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,8 +5,8 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n \n-use rustc_ast::ast::LlvmAsmDialect;\n-use rustc_ast::ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n+use rustc_ast::LlvmAsmDialect;\n+use rustc_ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_codegen_ssa::mir::operand::OperandValue;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::traits::*;"}, {"sha": "4737c73d57ffd9962b178ee1011a2e5712608396", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -303,8 +303,8 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         lhs: Self::Value,\n         rhs: Self::Value,\n     ) -> (Self::Value, Self::Value) {\n-        use rustc_ast::ast::IntTy::*;\n-        use rustc_ast::ast::UintTy::*;\n+        use rustc_ast::IntTy::*;\n+        use rustc_ast::UintTy::*;\n         use rustc_middle::ty::{Int, Uint};\n \n         let new_kind = match ty.kind {"}, {"sha": "0b1cf03fa7e42742bbf59caeed84d6b80c1f1733", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -9,7 +9,7 @@ use crate::type_::Type;\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n \n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::traits::*;\n use rustc_middle::bug;"}, {"sha": "9d92d53775cc7b1cb05d65794ed6ad6bdb933cb4", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -18,7 +18,7 @@ use crate::llvm::debuginfo::{\n };\n use crate::value::Value;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::const_cstr;\n use rustc_data_structures::fingerprint::Fingerprint;"}, {"sha": "f1977946ee9b14e1127f33a23cdaf6961234e300", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,9 +7,7 @@ use crate::type_of::LayoutLlvmExt;\n use crate::va_arg::emit_va_arg;\n use crate::value::Value;\n \n-use tracing::debug;\n-\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_codegen_ssa::base::{compare_simd_types, to_immediate, wants_msvc_seh};\n use rustc_codegen_ssa::common::span_invalid_monomorphization_error;\n use rustc_codegen_ssa::common::{IntPredicate, TypeKind};\n@@ -28,6 +26,7 @@ use rustc_middle::{bug, span_bug};\n use rustc_span::{sym, symbol::kw, Span, Symbol};\n use rustc_target::abi::{self, HasDataLayout, LayoutOf, Primitive};\n use rustc_target::spec::PanicStrategy;\n+use tracing::debug;\n \n use std::cmp::Ordering;\n use std::iter;"}, {"sha": "32822eba930c6022556ec3024e42f777dca36844", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -389,10 +389,10 @@ pub enum AsmDialect {\n }\n \n impl AsmDialect {\n-    pub fn from_generic(asm: rustc_ast::ast::LlvmAsmDialect) -> Self {\n+    pub fn from_generic(asm: rustc_ast::LlvmAsmDialect) -> Self {\n         match asm {\n-            rustc_ast::ast::LlvmAsmDialect::Att => AsmDialect::Att,\n-            rustc_ast::ast::LlvmAsmDialect::Intel => AsmDialect::Intel,\n+            rustc_ast::LlvmAsmDialect::Att => AsmDialect::Att,\n+            rustc_ast::LlvmAsmDialect::Intel => AsmDialect::Intel,\n         }\n     }\n }"}, {"sha": "3b53b4fe77be71250e411433a530bb035ff3d80f", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,7 +7,7 @@ use crate::llvm;\n use crate::llvm::{Bool, False, True};\n use crate::type_of::LayoutLlvmExt;\n use crate::value::Value;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_codegen_ssa::common::TypeKind;\n use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::small_c_str::SmallCStr;"}, {"sha": "371e1274d8d801cbdf4ae20d73a5a3f53f6108e8", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -9,7 +9,7 @@ use crate::meth;\n use crate::traits::*;\n use crate::MemFlags;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_hir::lang_items;\n use rustc_index::vec::Idx;\n use rustc_middle::mir;"}, {"sha": "69931935c496383087f24f7dfa17c2080622bbb0", "filename": "src/librustc_codegen_ssa/traits/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_ssa%2Ftraits%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_codegen_ssa%2Ftraits%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fasm.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use super::BackendTypes;\n use crate::mir::operand::OperandRef;\n use crate::mir::place::PlaceRef;\n-use rustc_ast::ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n+use rustc_ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{GlobalAsm, LlvmInlineAsmInner};\n use rustc_middle::ty::Instance;"}, {"sha": "09f5b22cc638141b0915a0e13a0fb495314dfd78", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -15,7 +15,7 @@ extern crate lazy_static;\n \n pub extern crate rustc_plugin_impl as plugin;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_codegen_ssa::{traits::CodegenBackend, CodegenResults};\n use rustc_data_structures::profiling::print_time_passes_entry;\n use rustc_data_structures::sync::SeqCst;"}, {"sha": "b0fbf1e03f5afd25cbd7eea466646d825c005bd8", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n //! The various pretty-printing routines.\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast_pretty::pprust;\n use rustc_errors::ErrorReported;\n use rustc_hir as hir;"}, {"sha": "0a5e1f76d1013acf97829f8342eb993a4a883fdb", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,12 +1,12 @@\n use crate::expand::{self, AstFragment, Invocation};\n use crate::module::DirectoryOwnership;\n \n-use rustc_ast::ast::{self, Attribute, NodeId, PatKind};\n use rustc_ast::mut_visit::{self, MutVisitor};\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n use rustc_ast::tokenstream::{self, TokenStream};\n use rustc_ast::visit::{AssocCtxt, Visitor};\n+use rustc_ast::{self as ast, Attribute, NodeId, PatKind};\n use rustc_attr::{self as attr, Deprecation, HasAttrs, Stability};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{self, Lrc};"}, {"sha": "7f4737a38ab5c8e17029103a8aa41ae015bd9fce", "filename": "src/librustc_expand/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbuild.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n use crate::base::ExtCtxt;\n \n-use rustc_ast::ast::{self, AttrVec, BlockCheckMode, Expr, PatKind, UnOp};\n use rustc_ast::attr;\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, AttrVec, BlockCheckMode, Expr, PatKind, UnOp};\n use rustc_span::source_map::{respan, Spanned};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n "}, {"sha": "afd1e6064027832d45390693a0211ed5c579acec", "filename": "src/librustc_expand/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fconfig.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,9 +1,9 @@\n //! Conditional compilation stripping.\n \n-use rustc_ast::ast::{self, AttrItem, Attribute, MetaItem};\n use rustc_ast::attr::HasAttrs;\n use rustc_ast::mut_visit::*;\n use rustc_ast::ptr::P;\n+use rustc_ast::{self as ast, AttrItem, Attribute, MetaItem};\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::map_in_place::MapInPlace;"}, {"sha": "7a21caf255a3ce1f548004335c0cdcf2c5553351", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,13 +7,13 @@ use crate::module::{parse_external_mod, push_directory, Directory, DirectoryOwne\n use crate::placeholders::{placeholder, PlaceholderExpander};\n use crate::proc_macro::collect_derives;\n \n-use rustc_ast::ast::{self, AttrItem, Block, LitKind, NodeId, PatKind, Path};\n-use rustc_ast::ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n use rustc_ast::mut_visit::*;\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_ast::visit::{self, AssocCtxt, Visitor};\n+use rustc_ast::{self as ast, AttrItem, Block, LitKind, NodeId, PatKind, Path};\n+use rustc_ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, is_builtin_attr, HasAttrs};\n use rustc_data_structures::map_in_place::MapInPlace;"}, {"sha": "6b419dae3f6e23346652956bf9d3d302ddd0a1f1", "filename": "src/librustc_expand/mbe/macro_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -106,8 +106,8 @@\n //! bound.\n use crate::mbe::{KleeneToken, TokenTree};\n \n-use rustc_ast::ast::{NodeId, DUMMY_NODE_ID};\n use rustc_ast::token::{DelimToken, Token, TokenKind};\n+use rustc_ast::{NodeId, DUMMY_NODE_ID};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_session::lint::builtin::META_VARIABLE_MISUSE;\n use rustc_session::parse::ParseSess;"}, {"sha": "48a622d13efcb4e20d1ccd1a9cb1e66deab8d635", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -8,7 +8,7 @@ use crate::mbe::macro_parser::{Error, ErrorReported, Failure, Success};\n use crate::mbe::macro_parser::{MatchedNonterminal, MatchedSeq};\n use crate::mbe::transcribe::transcribe;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::token::{self, NonterminalKind, NtTT, Token, TokenKind::*};\n use rustc_ast::tokenstream::{DelimSpan, TokenStream};\n use rustc_ast_pretty::pprust;"}, {"sha": "01b11bb979d68749ea9e558bd2a101c0a9df9691", "filename": "src/librustc_expand/mbe/quoted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,9 +1,9 @@\n use crate::mbe::macro_parser;\n use crate::mbe::{Delimited, KleeneOp, KleeneToken, SequenceRepetition, TokenTree};\n \n-use rustc_ast::ast::{NodeId, DUMMY_NODE_ID};\n use rustc_ast::token::{self, Token};\n use rustc_ast::tokenstream;\n+use rustc_ast::{NodeId, DUMMY_NODE_ID};\n use rustc_ast_pretty::pprust;\n use rustc_session::parse::ParseSess;\n use rustc_span::symbol::{kw, Ident};"}, {"sha": "b908a12c1fc9e5849a2b69609756a3c6d9a8884e", "filename": "src/librustc_expand/mbe/transcribe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Ftranscribe.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,10 +2,10 @@ use crate::base::ExtCtxt;\n use crate::mbe;\n use crate::mbe::macro_parser::{MatchedNonterminal, MatchedSeq, NamedMatch};\n \n-use rustc_ast::ast::MacCall;\n use rustc_ast::mut_visit::{self, MutVisitor};\n use rustc_ast::token::{self, NtTT, Token};\n use rustc_ast::tokenstream::{DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n+use rustc_ast::MacCall;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{pluralize, PResult};"}, {"sha": "1e123a2e14553a7d1edaf21bbffe8fc115f342e2", "filename": "src/librustc_expand/module.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmodule.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,5 +1,4 @@\n-use rustc_ast::ast::{Attribute, Mod};\n-use rustc_ast::token;\n+use rustc_ast::{token, Attribute, Mod};\n use rustc_errors::{struct_span_err, PResult};\n use rustc_parse::new_parser_from_file;\n use rustc_session::parse::ParseSess;"}, {"sha": "38ff594b6e9c12482e9443bbd11b5877ede20ac1", "filename": "src/librustc_expand/mut_visit/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmut_visit%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fmut_visit%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmut_visit%2Ftests.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n use crate::tests::{matches_codepattern, string_to_crate};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::mut_visit::{self, MutVisitor};\n use rustc_ast_pretty::pprust;\n use rustc_span::symbol::Ident;"}, {"sha": "643305f153ccde00ce5cd5bc2a821f7983bac136", "filename": "src/librustc_expand/parse/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fparse%2Ftests.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,10 +1,10 @@\n use crate::tests::{matches_codepattern, string_to_stream, with_error_checking_parse};\n \n-use rustc_ast::ast::{self, PatKind};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Token};\n use rustc_ast::tokenstream::{DelimSpan, TokenStream, TokenTree};\n use rustc_ast::visit;\n+use rustc_ast::{self as ast, PatKind};\n use rustc_ast_pretty::pprust::item_to_string;\n use rustc_errors::PResult;\n use rustc_parse::new_parser_from_source_str;"}, {"sha": "0788823b0e7762988a908301cc18eb3cc6263914", "filename": "src/librustc_expand/placeholders.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fplaceholders.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use crate::base::ExtCtxt;\n use crate::expand::{AstFragment, AstFragmentKind};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::mut_visit::*;\n use rustc_ast::ptr::P;\n use rustc_span::source_map::{dummy_spanned, DUMMY_SP};"}, {"sha": "4e865c20d6f4a12f74f7a6fe656fdbc21aa028a4", "filename": "src/librustc_expand/proc_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fproc_macro.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,9 +1,9 @@\n use crate::base::{self, *};\n use crate::proc_macro_server;\n \n-use rustc_ast::ast::{self, ItemKind, MetaItemKind, NestedMetaItem};\n use rustc_ast::token;\n use rustc_ast::tokenstream::{TokenStream, TokenTree};\n+use rustc_ast::{self as ast, *};\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{Applicability, ErrorReported};\n use rustc_parse::nt_to_tokenstream;"}, {"sha": "33e35cd0404fba4e256702cb948867096aa7459c", "filename": "src/librustc_expand/proc_macro_server.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fproc_macro_server.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n use crate::base::ExtCtxt;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::token;\n use rustc_ast::tokenstream::{self, DelimSpan, IsJoint::*, TokenStream, TreeAndJoint};\n use rustc_ast_pretty::pprust;"}, {"sha": "6993ce58fa6c4d5fe383b105347629c2edc2b1f9", "filename": "src/librustc_expand/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_expand%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Ftests.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_parse::{new_parser_from_source_str, parser::Parser, source_file_to_stream};\n use rustc_session::parse::ParseSess;"}, {"sha": "85ab7906d25504658228e839b2dca9ddf0dd9e7e", "filename": "src/librustc_hir/arena.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Farena.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -15,8 +15,8 @@ macro_rules! arena_types {\n             [few] hir_krate: rustc_hir::Crate<$tcx>,\n             [] arm: rustc_hir::Arm<$tcx>,\n             [] asm_operand: rustc_hir::InlineAsmOperand<$tcx>,\n-            [] asm_template: rustc_ast::ast::InlineAsmTemplatePiece,\n-            [] attribute: rustc_ast::ast::Attribute,\n+            [] asm_template: rustc_ast::InlineAsmTemplatePiece,\n+            [] attribute: rustc_ast::Attribute,\n             [] block: rustc_hir::Block<$tcx>,\n             [] bare_fn_ty: rustc_hir::BareFnTy<$tcx>,\n             [few] global_asm: rustc_hir::GlobalAsm,"}, {"sha": "fb7fced27c28056b225947f9aeba2416543ce8c5", "filename": "src/librustc_hir/def.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fdef.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n use crate::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use crate::hir;\n \n-use rustc_ast::ast;\n-use rustc_ast::ast::NodeId;\n+use rustc_ast as ast;\n+use rustc_ast::NodeId;\n use rustc_macros::HashStable_Generic;\n use rustc_span::hygiene::MacroKind;\n "}, {"sha": "cf356763130691055f565c50dd2b649f2a094807", "filename": "src/librustc_hir/hir.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fhir.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,13 +3,13 @@ use crate::def_id::DefId;\n crate use crate::hir_id::HirId;\n use crate::{itemlikevisit, LangItem};\n \n-use rustc_ast::ast::{self, CrateSugar, LlvmAsmDialect};\n-use rustc_ast::ast::{AttrVec, Attribute, FloatTy, IntTy, Label, LitKind, StrStyle, UintTy};\n-pub use rustc_ast::ast::{BorrowKind, ImplPolarity, IsAuto};\n-pub use rustc_ast::ast::{CaptureBy, Movability, Mutability};\n-use rustc_ast::ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_ast::node_id::NodeMap;\n use rustc_ast::util::parser::ExprPrecedence;\n+use rustc_ast::{self as ast, CrateSugar, LlvmAsmDialect};\n+use rustc_ast::{AttrVec, Attribute, FloatTy, IntTy, Label, LitKind, StrStyle, UintTy};\n+pub use rustc_ast::{BorrowKind, ImplPolarity, IsAuto};\n+pub use rustc_ast::{CaptureBy, Movability, Mutability};\n+use rustc_ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_data_structures::sync::{par_for_each_in, Send, Sync};\n use rustc_macros::HashStable_Generic;\n use rustc_span::def_id::LocalDefId;"}, {"sha": "76cf6bd47769fc0fac36386c2ff7d4a6b04c3b65", "filename": "src/librustc_hir/intravisit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fintravisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fintravisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fintravisit.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -34,8 +34,8 @@\n use crate::hir::*;\n use crate::hir_id::CRATE_HIR_ID;\n use crate::itemlikevisit::{ItemLikeVisitor, ParItemLikeVisitor};\n-use rustc_ast::ast::{Attribute, Label};\n use rustc_ast::walk_list;\n+use rustc_ast::{Attribute, Label};\n use rustc_span::symbol::{Ident, Symbol};\n use rustc_span::Span;\n "}, {"sha": "c00d861350dfa517b7c8389d90a17fedeb30235b", "filename": "src/librustc_hir/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Flang_items.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -12,7 +12,7 @@ pub use self::LangItem::*;\n use crate::def_id::DefId;\n use crate::{MethodKind, Target};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_macros::HashStable_Generic;"}, {"sha": "76b95c696f7ca0dcb1e2af38233b467cdfba9cf8", "filename": "src/librustc_hir/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fweak_lang_items.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,7 +3,7 @@\n use crate::def_id::DefId;\n use crate::{lang_items, LangItem, LanguageItems};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_span::symbol::{sym, Symbol};\n "}, {"sha": "f6e4b1fb418bfad4bf664dca1ad1658ac45aad8a", "filename": "src/librustc_hir_pretty/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir_pretty%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_hir_pretty%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir_pretty%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::util::parser::{self, AssocOp, Fixity};\n use rustc_ast_pretty::pp::Breaks::{Consistent, Inconsistent};\n use rustc_ast_pretty::pp::{self, Breaks};"}, {"sha": "e17396422f13fa33ab15833cd2b8d0e19e7086d7", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -33,7 +33,7 @@\n //! fn baz() { foo(); }\n //! ```\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};\n use rustc_graphviz as dot;"}, {"sha": "80448c01a262dd3085d665ff42d6c84ebdd6f48b", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -21,7 +21,7 @@\n //! allows for doing a more fine-grained check to see if pre- or post-lto data\n //! was re-used.\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_middle::mir::mono::CodegenUnitNameBuilder;\n use rustc_middle::ty::TyCtxt;"}, {"sha": "f0a1088555035b846517212b383acf1b0d4b4730", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -13,7 +13,7 @@\n //! Errors are reported if we are in the suitable configuration but\n //! the required condition is not met.\n \n-use rustc_ast::ast::{self, Attribute, NestedMetaItem};\n+use rustc_ast::{self as ast, Attribute, NestedMetaItem};\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;"}, {"sha": "3a54a6475301e2ede42408a9c33f3e064ec0bb15", "filename": "src/librustc_infer/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_infer%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcombine.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -34,7 +34,7 @@ use super::{InferCtxt, MiscVariable, TypeTrace};\n \n use crate::traits::{Obligation, PredicateObligations};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_hir::def_id::DefId;\n use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::error::TypeError;"}, {"sha": "4d84462c42b0b15f26e7bf3aaa18d2cb3bf24c9f", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n pub use crate::passes::BoxedResolver;\n use crate::util;\n \n-use rustc_ast::ast::{self, MetaItemKind};\n use rustc_ast::token;\n+use rustc_ast::{self as ast, MetaItemKind};\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;"}, {"sha": "007dbfb9fdd584ac0bc7b6df4728d9eb9f880479", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@ use crate::util;\n \n use once_cell::sync::Lazy;\n use rustc_ast::mut_visit::MutVisitor;\n-use rustc_ast::{self, ast, visit};\n+use rustc_ast::{self as ast, visit};\n use rustc_codegen_ssa::back::link::emit_metadata;\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::sync::{par_iter, Lrc, OnceCell, ParallelIterator, WorkerLocal};"}, {"sha": "8b82217a91ac6e0357b852a97d78b63686334063", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use crate::interface::{Compiler, Result};\n use crate::passes::{self, BoxedResolver, QueryContext};\n \n-use rustc_ast::{self, ast};\n+use rustc_ast as ast;\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::sync::{Lrc, OnceCell, WorkerLocal};\n use rustc_errors::ErrorReported;"}, {"sha": "8816ba198cf00871ddcf413643bd28fe4b0f7545", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,7 @@\n-use rustc_ast::ast::{AttrVec, BlockCheckMode};\n use rustc_ast::mut_visit::{visit_clobber, MutVisitor, *};\n use rustc_ast::ptr::P;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n-use rustc_ast::{self, ast};\n+use rustc_ast::{self as ast, AttrVec, BlockCheckMode};\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "36eb272cdfc8dcaa9534316c682a052a620105db", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -23,10 +23,10 @@\n use crate::{\n     types::CItemKind, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext,\n };\n-use rustc_ast::ast::{self, Expr};\n use rustc_ast::attr::{self, HasAttrs};\n use rustc_ast::tokenstream::{TokenStream, TokenTree};\n use rustc_ast::visit::{FnCtxt, FnKind};\n+use rustc_ast::{self as ast, *};\n use rustc_ast_pretty::pprust::{self, expr_to_string};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n@@ -1287,7 +1287,7 @@ impl EarlyLintPass for EllipsisInclusiveRangePatterns {\n             return;\n         }\n \n-        use self::ast::{PatKind, RangeEnd, RangeSyntax::DotDotDot};\n+        use self::ast::{PatKind, RangeSyntax::DotDotDot};\n \n         /// If `pat` is a `...` pattern, return the start and end of the range, as well as the span\n         /// corresponding to the ellipsis.\n@@ -1860,7 +1860,7 @@ impl<'tcx> LateLintPass<'tcx> for InvalidValue {\n         /// Test if this constant is all-0.\n         fn is_zero(expr: &hir::Expr<'_>) -> bool {\n             use hir::ExprKind::*;\n-            use rustc_ast::ast::LitKind::*;\n+            use rustc_ast::LitKind::*;\n             match &expr.kind {\n                 Lit(lit) => {\n                     if let Int(i, _) = lit.node {"}, {"sha": "a6784ffffcd3f081ac754c47c1bd9f1dfdb6bfe1", "filename": "src/librustc_lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fcontext.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -18,7 +18,7 @@ use self::TargetLint::*;\n \n use crate::levels::LintLevelsBuilder;\n use crate::passes::{EarlyLintPassObject, LateLintPassObject};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync;"}, {"sha": "998676d44d23c80125428aa27c934bfabfeb1a59", "filename": "src/librustc_lint/early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fearly.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -16,7 +16,7 @@\n \n use crate::context::{EarlyContext, LintContext, LintStore};\n use crate::passes::{EarlyLintPass, EarlyLintPassObject};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::visit as ast_visit;\n use rustc_session::lint::{BufferedEarlyLint, LintBuffer, LintPass};\n use rustc_session::Session;"}, {"sha": "100e555f299ae691bb9e3e35530dbe02cafb9348", "filename": "src/librustc_lint/internal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Finternal.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@\n //! Clippy.\n \n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc_ast::ast::{Item, ItemKind};\n+use rustc_ast::{Item, ItemKind};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n use rustc_hir::{GenericArg, HirId, MutTy, Mutability, Path, PathSegment, QPath, Ty, TyKind};"}, {"sha": "a6c04fb0b4c84a576bd8e576a7bc6fc19c4737f0", "filename": "src/librustc_lint/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flate.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -15,7 +15,7 @@\n //! for all lint attributes.\n \n use crate::{passes::LateLintPassObject, LateContext, LateLintPass, LintStore};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::walk_list;\n use rustc_data_structures::sync::{join, par_iter, ParallelIterator};\n use rustc_hir as hir;"}, {"sha": "48254dcee82febf0fe283ea64664d90045cab18c", "filename": "src/librustc_lint/levels.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flevels.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::attr;\n use rustc_ast::unwrap_or;\n use rustc_ast_pretty::pprust;"}, {"sha": "0a14b16e274c83396f46c4778cf45bde1e930bb9", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -55,7 +55,7 @@ mod redundant_semicolon;\n mod types;\n mod unused;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_middle::ty::query::Providers;"}, {"sha": "2f0b2a8d6802806d378abbc9b1a53108683593e0", "filename": "src/librustc_lint/non_ascii_idents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fnon_ascii_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fnon_ascii_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnon_ascii_idents.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,5 +1,5 @@\n use crate::{EarlyContext, EarlyLintPass, LintContext};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_span::symbol::Symbol;\n "}, {"sha": "f23e8c5e20888dae297e89a1146f50023f5ec973", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,5 +1,5 @@\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "159286c13a4cea74b908af0d33dbb4465ef20e9f", "filename": "src/librustc_lint/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fpasses.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n use crate::context::{EarlyContext, LateContext};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::sync;\n use rustc_hir as hir;\n use rustc_session::lint::builtin::HardwiredLints;"}, {"sha": "d4aa4968f25ee6f6be590175b1660aa49cc4a481", "filename": "src/librustc_lint/redundant_semicolon.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fredundant_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Fredundant_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fredundant_semicolon.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,5 +1,5 @@\n use crate::{EarlyContext, EarlyLintPass, LintContext};\n-use rustc_ast::ast::{Block, StmtKind};\n+use rustc_ast::{Block, StmtKind};\n use rustc_errors::Applicability;\n use rustc_span::Span;\n "}, {"sha": "4ca5f23ebfe6c22bfd2ca99b26862e26a91fab9e", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n #![allow(non_snake_case)]\n \n use crate::{LateContext, LateLintPass, LintContext};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n@@ -195,8 +195,8 @@ fn report_bin_hex_error(\n //\n // No suggestion for: `isize`, `usize`.\n fn get_type_suggestion(t: Ty<'_>, val: u128, negative: bool) -> Option<&'static str> {\n-    use rustc_ast::ast::IntTy::*;\n-    use rustc_ast::ast::UintTy::*;\n+    use rustc_ast::IntTy::*;\n+    use rustc_ast::UintTy::*;\n     macro_rules! find_fit {\n         ($ty:expr, $val:expr, $negative:expr,\n          $($type:ident => [$($utypes:expr),*] => [$($itypes:expr),*]),+) => {"}, {"sha": "c793e81ebe38b275243c38b7798b7aff5c82c607", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n use crate::Lint;\n use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext};\n-use rustc_ast::ast;\n-use rustc_ast::ast::{ExprKind, StmtKind};\n+use rustc_ast as ast;\n use rustc_ast::util::parser;\n+use rustc_ast::{ExprKind, StmtKind};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{pluralize, Applicability};\n@@ -526,7 +526,7 @@ trait UnusedDelimLint {\n     }\n \n     fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &ast::Expr) {\n-        use rustc_ast::ast::ExprKind::*;\n+        use rustc_ast::ExprKind::*;\n         let (value, ctx, followed_by_block, left_pos, right_pos) = match e.kind {\n             // Do not lint `unused_braces` in `if let` expressions.\n             If(ref cond, ref block, ..)"}, {"sha": "f8446d83d2b9e97de267f4e9b93c8674948bcd35", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@ use crate::locator::{CrateError, CrateLocator, CratePaths};\n use crate::rmeta::{CrateDep, CrateMetadata, CrateNumMap, CrateRoot, MetadataBlob};\n \n use rustc_ast::expand::allocator::AllocatorKind;\n-use rustc_ast::{ast, visit};\n+use rustc_ast::{self as ast, *};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "10f5b671748dab99a3efbecdb708a4d4976ccb25", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@ use crate::creader::CrateMetadataRef;\n use crate::rmeta::table::{FixedSizeEncoding, Table};\n use crate::rmeta::*;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fingerprint::{Fingerprint, FingerprintDecoder};"}, {"sha": "74d29b3df018aa3d64825dbeee0f7c21e9eae211", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@ use crate::link_args;\n use crate::native_libs;\n use crate::rmeta::{self, encoder};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_data_structures::svh::Svh;\n use rustc_hir as hir;"}, {"sha": "cb3bf10926b7d1655e14e868e15781e0bc7eed63", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use crate::rmeta::table::{FixedSizeEncoding, TableBuilder};\n use crate::rmeta::*;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fingerprint::{Fingerprint, FingerprintEncoder};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n use rustc_data_structures::stable_hasher::StableHasher;"}, {"sha": "ac1ac3607017be63ca36c38d67c43102c7537cbc", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use decoder::Metadata;\n use table::{Table, TableBuilder};\n \n-use rustc_ast::ast::{self, MacroDef};\n+use rustc_ast::{self as ast, MacroDef};\n use rustc_attr as attr;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;"}, {"sha": "f6570cc95d27d158d50749e331879b4dbcde0803", "filename": "src/librustc_middle/arena.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Farena.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -81,7 +81,7 @@ macro_rules! arena_types {\n             [] upvars_mentioned: rustc_data_structures::fx::FxIndexMap<rustc_hir::HirId, rustc_hir::Upvar>,\n             [] object_safety_violations: rustc_middle::traits::ObjectSafetyViolation,\n             [] codegen_unit: rustc_middle::mir::mono::CodegenUnit<$tcx>,\n-            [] attribute: rustc_ast::ast::Attribute,\n+            [] attribute: rustc_ast::Attribute,\n             [] name_set: rustc_data_structures::fx::FxHashSet<rustc_span::symbol::Symbol>,\n             [] hir_id_set: rustc_hir::HirIdSet,\n \n@@ -98,7 +98,7 @@ macro_rules! arena_types {\n             // Note that this deliberately duplicates items in the `rustc_hir::arena`,\n             // since we need to allocate this type on both the `rustc_hir` arena\n             // (during lowering) and the `librustc_middle` arena (for decoding MIR)\n-            [decode] asm_template: rustc_ast::ast::InlineAsmTemplatePiece,\n+            [decode] asm_template: rustc_ast::InlineAsmTemplatePiece,\n \n             // This is used to decode the &'tcx [Span] for InlineAsm's line_spans.\n             [decode] span: rustc_span::Span,"}, {"sha": "6f572a4875f865765d5aaae582b7fb298b17f2ec", "filename": "src/librustc_middle/hir/map/blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fmap%2Fblocks.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -12,7 +12,7 @@\n //! for the `Code` associated with a particular NodeId.\n \n use crate::hir::map::Map;\n-use rustc_ast::ast::Attribute;\n+use rustc_ast::Attribute;\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Expr, FnDecl, Node};"}, {"sha": "a6cc7cbc9207cca26f0108360abd8e6d85cb0d03", "filename": "src/librustc_middle/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fmap%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,7 +3,7 @@ use self::collector::NodeCollector;\n use crate::hir::{Owner, OwnerNodes};\n use crate::ty::query::Providers;\n use crate::ty::TyCtxt;\n-use rustc_ast::ast::{self};\n+use rustc_ast as ast;\n use rustc_data_structures::svh::Svh;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_INDEX, LOCAL_CRATE};"}, {"sha": "084fe4cfa168a4463b58ec194c595be6bb9f7453", "filename": "src/librustc_middle/ich/hcx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fhcx.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@ use crate::ich;\n use crate::middle::cstore::CrateStore;\n use crate::ty::{fast_reject, TyCtxt};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;"}, {"sha": "e3d4655831b322c6a9ca0d560754fe685be99149", "filename": "src/librustc_middle/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fich%2Fimpls_syntax.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,7 +3,7 @@\n \n use crate::ich::StableHashingContext;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_span::SourceFile;\n "}, {"sha": "6759ad61d3a39e28ef97131afb1a11b233cb348d", "filename": "src/librustc_middle/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fcstore.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@\n \n use crate::ty::TyCtxt;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::{self, MetadataRef};"}, {"sha": "def9e5ebb527ff9bfd2d8ce6eef940e33bbbc04c", "filename": "src/librustc_middle/middle/limits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Flimits.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -6,7 +6,7 @@\n //! just peeks and looks for that attribute.\n \n use crate::bug;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::sync::OnceCell;\n use rustc_session::{Limit, Session};\n use rustc_span::symbol::{sym, Symbol};"}, {"sha": "b32eebbb11e2c134be5066babc5159b3423ab95a", "filename": "src/librustc_middle/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmiddle%2Fstability.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@\n pub use self::StabilityLevel::*;\n \n use crate::ty::{self, TyCtxt};\n-use rustc_ast::ast::CRATE_NODE_ID;\n+use rustc_ast::CRATE_NODE_ID;\n use rustc_attr::{self as attr, ConstStability, Deprecation, Stability};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{Applicability, DiagnosticBuilder};"}, {"sha": "505939d56ed32cee852359fbe03c544616f93cac", "filename": "src/librustc_middle/mir/interpret/allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fallocation.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@ use std::convert::TryFrom;\n use std::iter;\n use std::ops::{Deref, DerefMut, Range};\n \n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n use rustc_data_structures::sorted_map::SortedMap;\n use rustc_target::abi::{Align, HasDataLayout, Size};\n "}, {"sha": "fb7269f648f0399ef68b86a46ceb7b4dbd1d99dd", "filename": "src/librustc_middle/mir/interpret/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -102,7 +102,7 @@ use std::num::NonZeroU32;\n use std::sync::atomic::{AtomicU32, Ordering};\n \n use byteorder::{BigEndian, LittleEndian, ReadBytesExt, WriteBytesExt};\n-use rustc_ast::ast::LitKind;\n+use rustc_ast::LitKind;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{HashMapExt, Lock};\n use rustc_data_structures::tiny_list::TinyList;"}, {"sha": "1faed87f8ff17026327f88f233ff55334b16b83a", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -19,7 +19,7 @@ use rustc_hir::{self, GeneratorKind};\n use rustc_target::abi::VariantIdx;\n \n use polonius_engine::Atom;\n-pub use rustc_ast::ast::Mutability;\n+pub use rustc_ast::Mutability;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::dominators::{dominators, Dominators};\n use rustc_data_structures::graph::{self, GraphSuccessors};"}, {"sha": "e8fe3a97a10c76295c72d75cf7f1a87b7e3f7830", "filename": "src/librustc_middle/mir/terminator/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fmir%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fterminator%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,12 +1,12 @@\n use crate::mir::interpret::Scalar;\n use crate::ty::{self, Ty, TyCtxt};\n-use rustc_ast::ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n+use rustc_ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n \n use super::{\n     AssertMessage, BasicBlock, InlineAsmOperand, Operand, Place, SourceInfo, Successors,\n     SuccessorsMut,\n };\n-pub use rustc_ast::ast::Mutability;\n+pub use rustc_ast::Mutability;\n use rustc_macros::HashStable;\n use rustc_span::Span;\n use std::borrow::Cow;"}, {"sha": "79a3008c364e980f7a09801dc98dff2c7ff61e7f", "filename": "src/librustc_middle/ty/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcast.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,7 +3,7 @@\n \n use crate::ty::{self, Ty};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_macros::HashStable;\n \n /// Types that are represented as ints."}, {"sha": "e6b05fe409438c1bd74d5b2f118d03c70cc1cc77", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -24,7 +24,7 @@ use crate::ty::{\n     ProjectionTy, Region, RegionKind, ReprOptions, TraitObjectVisitor, Ty, TyKind, TyS, TyVar,\n     TyVid, TypeAndMut,\n };\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_attr as attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "1963881626ea938ee64656e291e76919fa34b555", "filename": "src/librustc_middle/ty/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ferror.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use crate::traits::{ObligationCause, ObligationCauseCode};\n use crate::ty::diagnostics::suggest_constraining_type_param;\n use crate::ty::{self, BoundRegion, Region, Ty, TyCtxt};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_errors::Applicability::{MachineApplicable, MaybeIncorrect};\n use rustc_errors::{pluralize, DiagnosticBuilder};\n use rustc_hir as hir;"}, {"sha": "1bee2d60f7513a8713210b02794f916bc42045dc", "filename": "src/librustc_middle/ty/fast_reject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Ffast_reject.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n use crate::ich::StableHashingContext;\n use crate::ty::{self, Ty, TyCtxt};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir::def_id::DefId;\n use std::fmt::Debug;"}, {"sha": "928cba324d5849025aceb7c9303af7ec2c0728cc", "filename": "src/librustc_middle/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Flayout.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@ use crate::mir::{GeneratorLayout, GeneratorSavedLocal};\n use crate::ty::subst::Subst;\n use crate::ty::{self, subst::SubstsRef, ReprOptions, Ty, TyCtxt, TypeFoldable};\n \n-use rustc_ast::ast::{self, IntTy, UintTy};\n+use rustc_ast::{self as ast, IntTy, UintTy};\n use rustc_attr as attr;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir as hir;"}, {"sha": "02fd18ef968c56ffbd51619e9c6b907f76f132ce", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -17,7 +17,7 @@ use crate::traits::{self, Reveal};\n use crate::ty;\n use crate::ty::subst::{GenericArg, InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::{Discr, IntTypeExt};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fingerprint::Fingerprint;"}, {"sha": "999a1d52a26a2451dad767ba23e972f9ee7a648d", "filename": "src/librustc_middle/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@ use crate::ty::subst::{GenericArg, GenericArgKind, Subst};\n use crate::ty::{self, ConstInt, DefIdTree, ParamConst, Ty, TyCtxt, TypeFoldable};\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr::{SignedInt, UnsignedInt};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Namespace};"}, {"sha": "f220c4fb0728f0858472875c1836c4526bb2dcec", "filename": "src/librustc_middle/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -50,7 +50,7 @@ use rustc_session::utils::NativeLibKind;\n use rustc_session::CrateDisambiguator;\n use rustc_target::spec::PanicStrategy;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "dcfb8d314300f2ba971fd1718961cfbb652ddf7a", "filename": "src/librustc_middle/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -766,9 +766,7 @@ impl<'a, 'tcx> Decodable<CacheDecoder<'a, 'tcx>> for &'tcx [(ty::Predicate<'tcx>\n     }\n }\n \n-impl<'a, 'tcx> Decodable<CacheDecoder<'a, 'tcx>>\n-    for &'tcx [rustc_ast::ast::InlineAsmTemplatePiece]\n-{\n+impl<'a, 'tcx> Decodable<CacheDecoder<'a, 'tcx>> for &'tcx [rustc_ast::InlineAsmTemplatePiece] {\n     fn decode(d: &mut CacheDecoder<'a, 'tcx>) -> Result<Self, String> {\n         RefDecodable::decode(d)\n     }"}, {"sha": "ffa5df6ef2d40c65465a7b3719d34a7b48514b8e", "filename": "src/librustc_middle/ty/structural_impls.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -274,10 +274,10 @@ CloneTypeFoldableAndLiftImpls! {\n     u64,\n     String,\n     crate::middle::region::Scope,\n-    ::rustc_ast::ast::FloatTy,\n-    ::rustc_ast::ast::InlineAsmOptions,\n-    ::rustc_ast::ast::InlineAsmTemplatePiece,\n-    ::rustc_ast::ast::NodeId,\n+    ::rustc_ast::FloatTy,\n+    ::rustc_ast::InlineAsmOptions,\n+    ::rustc_ast::InlineAsmTemplatePiece,\n+    ::rustc_ast::NodeId,\n     ::rustc_span::symbol::Symbol,\n     ::rustc_hir::def::Res,\n     ::rustc_hir::def_id::DefId,"}, {"sha": "176bad6277f27a98eea1f4bfaf40e095a8a5eea1", "filename": "src/librustc_middle/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsty.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -12,7 +12,7 @@ use crate::ty::{\n };\n use crate::ty::{DelaySpanBugEmitted, List, ParamEnv, TyS};\n use polonius_engine::Atom;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::captures::Captures;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "63d4dcca0804ab10f013e7f7d3a2f43eef2418cf", "filename": "src/librustc_middle/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_middle%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Futil.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -10,7 +10,7 @@ use crate::ty::subst::{GenericArgKind, InternalSubsts, Subst, SubstsRef};\n use crate::ty::TyKind::*;\n use crate::ty::{self, DefIdTree, GenericParamDefKind, List, Ty, TyCtxt, TypeFoldable};\n use rustc_apfloat::Float as _;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr::{self as attr, SignedInt, UnsignedInt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};"}, {"sha": "b0357c508a3e0bcd68770a866f000f1fc7848fd3", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,7 +7,7 @@ use std::hash::Hash;\n \n use rustc_data_structures::fx::FxHashMap;\n \n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n use rustc_hir::def_id::DefId;\n use rustc_middle::mir::AssertMessage;\n use rustc_session::Limit;"}, {"sha": "b703852b1def7a8af14a1911dd2d67c57c4d63b6", "filename": "src/librustc_mir/dataflow/framework/engine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fframework%2Fengine.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@ use std::ffi::OsString;\n use std::fs;\n use std::path::PathBuf;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_graphviz as dot;\n use rustc_hir::def_id::DefId;"}, {"sha": "a0c246360599c509eee8af12223753de43248fb4", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast::{self, MetaItem};\n+use rustc_ast::{self as ast, MetaItem};\n use rustc_middle::ty;\n use rustc_session::Session;\n use rustc_span::symbol::{sym, Symbol};"}, {"sha": "501a5bcddb3f263836e6e14fc8f1905ee06fb044", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@ use std::convert::TryFrom;\n \n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::{Float, FloatConvert};\n-use rustc_ast::ast::FloatTy;\n+use rustc_ast::FloatTy;\n use rustc_attr as attr;\n use rustc_middle::mir::interpret::{InterpResult, PointerArithmetic, Scalar};\n use rustc_middle::mir::CastKind;"}, {"sha": "9959c38e5c7382ba4b43103d270462a6ee5110b2", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -9,7 +9,7 @@ use rustc_hir as hir;\n use rustc_middle::mir::interpret::InterpResult;\n use rustc_middle::ty::{self, query::TyCtxtAt, Ty};\n \n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n \n use super::{AllocId, Allocation, InterpCx, MPlaceTy, Machine, MemoryKind, Scalar, ValueVisitor};\n "}, {"sha": "d4be2ce0568fd38c285f0b88077f20c0b3d416aa", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -12,7 +12,7 @@ use std::convert::{TryFrom, TryInto};\n use std::fmt;\n use std::ptr;\n \n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_middle::ty::{Instance, ParamEnv, TyCtxt};\n use rustc_target::abi::{Align, HasDataLayout, Size, TargetDataLayout};"}, {"sha": "30c40b8fde90f37bdd3899d5f841201fe73f1e40", "filename": "src/librustc_mir/interpret/operator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperator.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use std::convert::TryFrom;\n \n use rustc_apfloat::Float;\n-use rustc_ast::ast::FloatTy;\n+use rustc_ast::FloatTy;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::{InterpResult, Scalar};\n use rustc_middle::ty::{self, layout::TyAndLayout, Ty};"}, {"sha": "be23fe7247e20cfb948ab1922b3cb28df91f5218", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,7 +3,7 @@\n \n use std::cell::Cell;\n \n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::DefKind;\n use rustc_hir::HirId;"}, {"sha": "b2dda1caa5482c92c53ca69df74b624f75bf7111", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -12,7 +12,7 @@\n //! initialization and can otherwise silence errors, if\n //! move analysis runs after promotion on broken MIR.\n \n-use rustc_ast::ast::LitKind;\n+use rustc_ast::LitKind;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_middle::mir::traversal::ReversePostorder;"}, {"sha": "00d269a4af82f40d40f4040fad57aa20656d079c", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;"}, {"sha": "3d623abfa6eef65bdbf2b89817c66804f92d9dd9", "filename": "src/librustc_mir_build/build/expr/into.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,7 +3,7 @@\n use crate::build::expr::category::{Category, RvalueFunc};\n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder};\n use crate::thir::*;\n-use rustc_ast::ast::InlineAsmOptions;\n+use rustc_ast::InlineAsmOptions;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_hir as hir;"}, {"sha": "dd5515d39b074796e3d8da2e357f4418b20cd23a", "filename": "src/librustc_mir_build/thir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fthir%2Fconstant.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_middle::mir::interpret::{\n     truncate, Allocation, ConstValue, LitToConstError, LitToConstInput, Scalar,\n };"}, {"sha": "cf42fee873e158f19cd3dfdc37f4d06de31eab23", "filename": "src/librustc_mir_build/thir/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fthir%2Fcx%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@\n use crate::thir::util::UserAnnotatedTyHelpers;\n use crate::thir::*;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::Node;"}, {"sha": "2837bfa040ff76407fb558ce927c1c545fdd9c63", "filename": "src/librustc_mir_build/thir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fthir%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@\n //! structures.\n \n use self::cx::Cx;\n-use rustc_ast::ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n+use rustc_ast::{InlineAsmOptions, InlineAsmTemplatePiece};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_middle::infer::canonical::Canonical;"}, {"sha": "4e7108667e15f92d9296e8030332c12945bd93c4", "filename": "src/librustc_mir_build/thir/pattern/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fthir%2Fpattern%2Fcheck_match.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@ use super::_match::{expand_pattern, is_useful, MatchCheckCtxt, Matrix, PatStack}\n use super::{PatCtxt, PatKind, PatternError};\n \n use rustc_arena::TypedArena;\n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n use rustc_errors::{error_code, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::def::*;"}, {"sha": "c163cb0e60c4241648c8d8f1b949a9e68b8d662b", "filename": "src/librustc_mir_build/thir/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_mir_build%2Fthir%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fthir%2Fpattern%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -8,7 +8,7 @@ pub(crate) use self::check_match::check_match;\n \n use crate::thir::util::UserAnnotatedTyHelpers;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};"}, {"sha": "49deb3474d97a0e209ed45452d046212463c2ffe", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -6,7 +6,7 @@\n #![feature(try_blocks)]\n #![feature(or_patterns)]\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::token::{self, DelimToken, Nonterminal, Token};\n use rustc_ast::tokenstream::{self, TokenStream, TokenTree};\n use rustc_ast_pretty::pprust;"}, {"sha": "4e4429e461f0f65b66acd6995eeb1432c55a891d", "filename": "src/librustc_parse/parser/attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fattr.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,5 +1,5 @@\n use super::{Parser, PathStyle};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::attr;\n use rustc_ast::token::{self, Nonterminal};\n use rustc_ast_pretty::pprust;"}, {"sha": "be01c7f849817a03297389a2c5b7815df18dbce0", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,13 +1,13 @@\n use super::ty::AllowPlus;\n use super::{BlockMode, Parser, PathStyle, SemiColonMode, SeqSep, TokenExpectType, TokenType};\n \n-use rustc_ast::ast::{\n-    self, AngleBracketedArgs, AttrVec, BinOpKind, BindingMode, BlockCheckMode, Expr, ExprKind,\n-    Item, ItemKind, Mutability, Param, Pat, PatKind, PathSegment, QSelf, Ty, TyKind,\n-};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Lit, LitKind, TokenKind};\n use rustc_ast::util::parser::AssocOp;\n+use rustc_ast::{\n+    self as ast, AngleBracketedArgs, AttrVec, BinOpKind, BindingMode, BlockCheckMode, Expr,\n+    ExprKind, Item, ItemKind, Mutability, Param, Pat, PatKind, PathSegment, QSelf, Ty, TyKind,\n+};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{pluralize, struct_span_err};"}, {"sha": "e5c28f225c611f3f5a15559076207e63bf546865", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,14 +4,14 @@ use super::{BlockMode, Parser, PathStyle, Restrictions, TokenType};\n use super::{SemiColonMode, SeqSep, TokenExpectType};\n use crate::maybe_recover_from_interpolated_ty_qpath;\n \n-use rustc_ast::ast::{self, AttrStyle, AttrVec, CaptureBy, Field, Lit, UnOp, DUMMY_NODE_ID};\n-use rustc_ast::ast::{AnonConst, BinOp, BinOpKind, FnDecl, FnRetTy, MacCall, Param, Ty, TyKind};\n-use rustc_ast::ast::{Arm, Async, BlockCheckMode, Expr, ExprKind, Label, Movability, RangeLimits};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Token, TokenKind};\n use rustc_ast::util::classify;\n use rustc_ast::util::literal::LitError;\n use rustc_ast::util::parser::{prec_let_scrutinee_needs_par, AssocOp, Fixity};\n+use rustc_ast::{self as ast, AttrStyle, AttrVec, CaptureBy, Field, Lit, UnOp, DUMMY_NODE_ID};\n+use rustc_ast::{AnonConst, BinOp, BinOpKind, FnDecl, FnRetTy, MacCall, Param, Ty, TyKind};\n+use rustc_ast::{Arm, Async, BlockCheckMode, Expr, ExprKind, Label, Movability, RangeLimits};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{Applicability, DiagnosticBuilder, PResult};\n use rustc_span::source_map::{self, Span, Spanned};"}, {"sha": "dd99a7587dd549660034495391ca46bd72a73790", "filename": "src/librustc_parse/parser/generics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,9 @@\n use super::Parser;\n \n-use rustc_ast::ast::{self, Attribute, GenericBounds, GenericParam, GenericParamKind, WhereClause};\n use rustc_ast::token;\n+use rustc_ast::{\n+    self as ast, Attribute, GenericBounds, GenericParam, GenericParamKind, WhereClause,\n+};\n use rustc_errors::PResult;\n use rustc_span::symbol::{kw, sym};\n "}, {"sha": "64479bc36e0155f56fd12df29935ae9c0376ca95", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,16 +4,16 @@ use super::{FollowedByType, Parser, PathStyle};\n \n use crate::maybe_whole;\n \n-use rustc_ast::ast::{self, AttrStyle, AttrVec, Attribute, DUMMY_NODE_ID};\n-use rustc_ast::ast::{AssocItem, AssocItemKind, ForeignItemKind, Item, ItemKind, Mod};\n-use rustc_ast::ast::{Async, Const, Defaultness, IsAuto, Mutability, Unsafe, UseTree, UseTreeKind};\n-use rustc_ast::ast::{BindingMode, Block, FnDecl, FnSig, Param, SelfKind};\n-use rustc_ast::ast::{EnumDef, Generics, StructField, TraitRef, Ty, TyKind, Variant, VariantData};\n-use rustc_ast::ast::{FnHeader, ForeignItem, Path, PathSegment, Visibility, VisibilityKind};\n-use rustc_ast::ast::{MacArgs, MacCall, MacDelimiter};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, TokenKind};\n use rustc_ast::tokenstream::{DelimSpan, TokenStream, TokenTree};\n+use rustc_ast::{self as ast, AttrStyle, AttrVec, Attribute, DUMMY_NODE_ID};\n+use rustc_ast::{AssocItem, AssocItemKind, ForeignItemKind, Item, ItemKind, Mod};\n+use rustc_ast::{Async, Const, Defaultness, IsAuto, Mutability, Unsafe, UseTree, UseTreeKind};\n+use rustc_ast::{BindingMode, Block, FnDecl, FnSig, Param, SelfKind};\n+use rustc_ast::{EnumDef, Generics, StructField, TraitRef, Ty, TyKind, Variant, VariantData};\n+use rustc_ast::{FnHeader, ForeignItem, Path, PathSegment, Visibility, VisibilityKind};\n+use rustc_ast::{MacArgs, MacCall, MacDelimiter};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, PResult, StashKey};\n use rustc_span::edition::Edition;"}, {"sha": "d67ed74bc9976d16275bc15ef449f24b1f30db7f", "filename": "src/librustc_parse/parser/mod.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -13,14 +13,12 @@ use crate::lexer::UnmatchedBrace;\n use diagnostics::Error;\n pub use path::PathStyle;\n \n-use rustc_ast::ast::DUMMY_NODE_ID;\n-use rustc_ast::ast::{self, AttrStyle, AttrVec, Const, CrateSugar, Extern, Unsafe};\n-use rustc_ast::ast::{\n-    Async, MacArgs, MacDelimiter, Mutability, StrLit, Visibility, VisibilityKind,\n-};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, DelimToken, Token, TokenKind};\n use rustc_ast::tokenstream::{self, DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n+use rustc_ast::DUMMY_NODE_ID;\n+use rustc_ast::{self as ast, AttrStyle, AttrVec, Const, CrateSugar, Extern, Unsafe};\n+use rustc_ast::{Async, MacArgs, MacDelimiter, Mutability, StrLit, Visibility, VisibilityKind};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, FatalError, PResult};\n use rustc_session::parse::ParseSess;"}, {"sha": "1d8e6cc9bac645240addbe19e54dfb7298b66a74", "filename": "src/librustc_parse/parser/pat.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpat.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,10 +1,10 @@\n use super::{Parser, PathStyle};\n use crate::{maybe_recover_from_interpolated_ty_qpath, maybe_whole};\n-use rustc_ast::ast::{self, AttrVec, Attribute, FieldPat, MacCall, Pat, PatKind, RangeEnd};\n-use rustc_ast::ast::{BindingMode, Expr, ExprKind, Mutability, Path, QSelf, RangeSyntax};\n use rustc_ast::mut_visit::{noop_visit_mac, noop_visit_pat, MutVisitor};\n use rustc_ast::ptr::P;\n use rustc_ast::token;\n+use rustc_ast::{self as ast, AttrVec, Attribute, FieldPat, MacCall, Pat, PatKind, RangeEnd};\n+use rustc_ast::{BindingMode, Expr, ExprKind, Mutability, Path, QSelf, RangeSyntax};\n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, PResult};\n use rustc_span::source_map::{respan, Span, Spanned};"}, {"sha": "54b4df8613f70e494608c08663c297c0cac5b745", "filename": "src/librustc_parse/parser/path.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpath.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,11 +1,13 @@\n use super::ty::{AllowPlus, RecoverQPath};\n use super::{Parser, TokenType};\n use crate::maybe_whole;\n-use rustc_ast::ast::{self, AngleBracketedArg, AngleBracketedArgs, GenericArg, ParenthesizedArgs};\n-use rustc_ast::ast::{AnonConst, AssocTyConstraint, AssocTyConstraintKind, BlockCheckMode};\n-use rustc_ast::ast::{Path, PathSegment, QSelf};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Token};\n+use rustc_ast::{\n+    self as ast, AngleBracketedArg, AngleBracketedArgs, GenericArg, ParenthesizedArgs,\n+};\n+use rustc_ast::{AnonConst, AssocTyConstraint, AssocTyConstraintKind, BlockCheckMode};\n+use rustc_ast::{Path, PathSegment, QSelf};\n use rustc_errors::{pluralize, Applicability, PResult};\n use rustc_span::source_map::{BytePos, Span};\n use rustc_span::symbol::{kw, sym, Ident};"}, {"sha": "ac067cb0eab8c322846052e97ad96d3a11931fc7", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -6,12 +6,12 @@ use super::path::PathStyle;\n use super::{BlockMode, Parser, Restrictions, SemiColonMode};\n use crate::maybe_whole;\n \n-use rustc_ast::ast;\n-use rustc_ast::ast::{AttrStyle, AttrVec, Attribute, MacCall, MacStmtStyle};\n-use rustc_ast::ast::{Block, BlockCheckMode, Expr, ExprKind, Local, Stmt, StmtKind, DUMMY_NODE_ID};\n+use rustc_ast as ast;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, TokenKind};\n use rustc_ast::util::classify;\n+use rustc_ast::{AttrStyle, AttrVec, Attribute, MacCall, MacStmtStyle};\n+use rustc_ast::{Block, BlockCheckMode, Expr, ExprKind, Local, Stmt, StmtKind, DUMMY_NODE_ID};\n use rustc_errors::{Applicability, PResult};\n use rustc_span::source_map::{BytePos, Span};\n use rustc_span::symbol::{kw, sym};"}, {"sha": "4356850818ee8700c4bba6639c9b062fc7f8bbe4", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,11 +2,11 @@ use super::{Parser, PathStyle, TokenType};\n \n use crate::{maybe_recover_from_interpolated_ty_qpath, maybe_whole};\n \n-use rustc_ast::ast::{self, BareFnTy, FnRetTy, GenericParam, Lifetime, MutTy, Ty, TyKind};\n-use rustc_ast::ast::{GenericBound, GenericBounds, MacCall, Mutability};\n-use rustc_ast::ast::{PolyTraitRef, TraitBoundModifier, TraitObjectSyntax};\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Token, TokenKind};\n+use rustc_ast::{self as ast, BareFnTy, FnRetTy, GenericParam, Lifetime, MutTy, Ty, TyKind};\n+use rustc_ast::{GenericBound, GenericBounds, MacCall, Mutability};\n+use rustc_ast::{PolyTraitRef, TraitBoundModifier, TraitObjectSyntax};\n use rustc_errors::{pluralize, struct_span_err, Applicability, PResult};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{kw, sym};"}, {"sha": "f4bb96109404af33fa84abb400edd8f3cb212794", "filename": "src/librustc_parse/validate_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fvalidate_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_parse%2Fvalidate_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fvalidate_attr.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,8 +2,8 @@\n \n use crate::parse_in;\n \n-use rustc_ast::ast::{self, Attribute, MacArgs, MacDelimiter, MetaItem, MetaItemKind};\n use rustc_ast::tokenstream::DelimSpan;\n+use rustc_ast::{self as ast, Attribute, MacArgs, MacDelimiter, MetaItem, MetaItemKind};\n use rustc_errors::{Applicability, PResult};\n use rustc_feature::{AttributeTemplate, BUILTIN_ATTRIBUTE_MAP};\n use rustc_session::lint::builtin::ILL_FORMED_ATTRIBUTE_INPUT;"}, {"sha": "59edf21b733c9a109638edebd39375072d8aebb7", "filename": "src/librustc_passes/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_attr.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -8,7 +8,7 @@ use rustc_middle::hir::map::Map;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n \n-use rustc_ast::ast::{Attribute, NestedMetaItem};\n+use rustc_ast::{Attribute, NestedMetaItem};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;"}, {"sha": "01da33ddd2e96763bef79956768ea5a6917a263e", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -15,7 +15,7 @@ use rustc_middle::middle::privacy;\n use rustc_middle::ty::{self, DefIdTree, TyCtxt};\n use rustc_session::lint;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_span::symbol::{sym, Symbol};\n \n // Any local node that may call something in its body block should be"}, {"sha": "df0f9f157aedf524b0ad8ee03a3f46940d0e9666", "filename": "src/librustc_passes/diagnostic_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostic_items.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -9,7 +9,7 @@\n //!\n //! * Compiler internal types like `Ty` and `TyCtxt`\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};"}, {"sha": "9537321026e5568dedb7ab01e88bd63de7710071", "filename": "src/librustc_passes/hir_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fhir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fhir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fhir_stats.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,8 +2,8 @@\n // pieces of AST and HIR. The resulting numbers are good approximations but not\n // completely accurate (some things might be counted twice, others missed).\n \n-use rustc_ast::ast::{self, AttrId, NodeId};\n use rustc_ast::visit as ast_visit;\n+use rustc_ast::{self as ast, AttrId, NodeId};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::intravisit as hir_visit;"}, {"sha": "ebe231009d38eaf14bb2d0f0ead38588822bf703", "filename": "src/librustc_passes/intrinsicck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fintrinsicck.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast::{FloatTy, InlineAsmTemplatePiece, IntTy, UintTy};\n+use rustc_ast::{FloatTy, InlineAsmTemplatePiece, IntTy, UintTy};\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};"}, {"sha": "0ae0c381a110b13129e979795a3f58685677ac81", "filename": "src/librustc_passes/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flang_items.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -13,7 +13,7 @@ use crate::weak_lang_items;\n use rustc_middle::middle::cstore::ExternCrate;\n use rustc_middle::ty::TyCtxt;\n \n-use rustc_ast::ast::Attribute;\n+use rustc_ast::Attribute;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};"}, {"sha": "504cbbfcb765f92580fce50c42253d9b4ebe169f", "filename": "src/librustc_passes/layout_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Flayout_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Flayout_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flayout_test.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast::Attribute;\n+use rustc_ast::Attribute;\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;"}, {"sha": "7c62a234dbaec0f97c48c38181fa656102bc211d", "filename": "src/librustc_passes/lib_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib_features.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@\n // and `#[unstable (..)]`), but are not declared in one single location\n // (unlike lang features), which means we need to collect them instead.\n \n-use rustc_ast::ast::{Attribute, MetaItem, MetaItemKind};\n+use rustc_ast::{Attribute, MetaItem, MetaItemKind};\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};"}, {"sha": "de21f0b5e09b3ba4e586ead2b23c486d45a57cad", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -84,7 +84,7 @@\n use self::LiveNodeKind::*;\n use self::VarKind::*;\n \n-use rustc_ast::ast::InlineAsmOptions;\n+use rustc_ast::InlineAsmOptions;\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "91edc7d9db775c5c317ce1487d6bb9da010b8006", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n //! A pass that annotates every item and method with its stability level,\n //! propagating default levels lexically from parent to children ast nodes.\n \n-use rustc_ast::ast::Attribute;\n+use rustc_ast::Attribute;\n use rustc_attr::{self as attr, ConstStability, Stability};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::struct_span_err;"}, {"sha": "687f7db221f4ec3ef777993e131755b7cbeacb96", "filename": "src/librustc_plugin_impl/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_plugin_impl%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_plugin_impl%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fload.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n //! Used by `rustc` when loading a plugin.\n \n use crate::Registry;\n-use rustc_ast::ast::Crate;\n+use rustc_ast::Crate;\n use rustc_errors::struct_span_err;\n use rustc_metadata::locator;\n use rustc_middle::middle::cstore::MetadataLoader;"}, {"sha": "761724be57daf3566ab5468490ef90f046b21f26", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -15,10 +15,10 @@ use crate::{\n };\n use crate::{Module, ModuleData, ModuleKind, NameBinding, NameBindingKind, Segment, ToNameBinding};\n \n-use rustc_ast::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n-use rustc_ast::ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use rustc_ast::token::{self, Token};\n use rustc_ast::visit::{self, AssocCtxt, Visitor};\n+use rustc_ast::{self as ast, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n+use rustc_ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use rustc_ast_lowering::ResolverAstLowering;\n use rustc_attr as attr;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "5624a6b6accc65b3ab4cb4cf513ade7b6bc52852", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -26,7 +26,7 @@\n use crate::imports::ImportKind;\n use crate::Resolver;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::node_id::NodeMap;\n use rustc_ast::visit::{self, Visitor};\n use rustc_ast_lowering::ResolverAstLowering;"}, {"sha": "5d5088de31b97a0110a5023789f94ca45916e8a4", "filename": "src/librustc_resolve/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n use crate::Resolver;\n-use rustc_ast::ast::*;\n use rustc_ast::token::{self, Token};\n use rustc_ast::visit::{self, FnKind};\n use rustc_ast::walk_list;\n+use rustc_ast::*;\n use rustc_ast_lowering::ResolverAstLowering;\n use rustc_expand::expand::AstFragment;\n use rustc_hir::def_id::LocalDefId;"}, {"sha": "48e1068b8daadfc3d6c843f1e1881156cf60f736", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,8 +1,8 @@\n use std::cmp::Reverse;\n use std::ptr;\n \n-use rustc_ast::ast::{self, Path};\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n+use rustc_ast::{self as ast, Path};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};"}, {"sha": "b02fc427d60046974a9f1e18926c3bd5e214fac7", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -9,9 +9,9 @@ use crate::{BindingKey, ModuleKind, ResolutionError, Resolver, Segment};\n use crate::{CrateLint, Module, ModuleOrUniformRoot, ParentScope, PerNS, ScopeSet, Weak};\n use crate::{NameBinding, NameBindingKind, PathResult, PrivacyError, ToNameBinding};\n \n-use rustc_ast::ast::NodeId;\n use rustc_ast::unwrap_or;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n+use rustc_ast::NodeId;\n use rustc_ast_lowering::ResolverAstLowering;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::ptr_key::PtrKey;"}, {"sha": "0dbb6269d2eb3f3f3efbdbf6e6643868d018ca73", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -11,9 +11,9 @@ use crate::{path_names_to_string, BindingError, CrateLint, LexicalScopeBinding};\n use crate::{Module, ModuleOrUniformRoot, NameBindingKind, ParentScope, PathResult};\n use crate::{ResolutionError, Resolver, Segment, UseError};\n \n-use rustc_ast::ast::*;\n use rustc_ast::ptr::P;\n use rustc_ast::visit::{self, AssocCtxt, FnCtxt, FnKind, Visitor};\n+use rustc_ast::*;\n use rustc_ast::{unwrap_or, walk_list};\n use rustc_ast_lowering::ResolverAstLowering;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "2549aee52ad4b0917d8dbe943efc0025bffe5776", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,9 +5,9 @@ use crate::path_names_to_string;\n use crate::{CrateLint, Module, ModuleKind, ModuleOrUniformRoot};\n use crate::{PathResult, PathSource, Segment};\n \n-use rustc_ast::ast::{self, Expr, ExprKind, Item, ItemKind, NodeId, Path, Ty, TyKind};\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_ast::visit::FnKind;\n+use rustc_ast::{self as ast, Expr, ExprKind, Item, ItemKind, NodeId, Path, Ty, TyKind};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;"}, {"sha": "36b7a430f78d1d8c4bd6a0aa475a741ece79114c", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -20,12 +20,12 @@ pub use rustc_hir::def::{Namespace, PerNS};\n use Determinacy::*;\n \n use rustc_arena::TypedArena;\n-use rustc_ast::ast::{self, FloatTy, IntTy, NodeId, UintTy};\n-use rustc_ast::ast::{Crate, CRATE_NODE_ID};\n-use rustc_ast::ast::{ItemKind, Path};\n use rustc_ast::node_id::NodeMap;\n use rustc_ast::unwrap_or;\n use rustc_ast::visit::{self, Visitor};\n+use rustc_ast::{self as ast, FloatTy, IntTy, NodeId, UintTy};\n+use rustc_ast::{Crate, CRATE_NODE_ID};\n+use rustc_ast::{ItemKind, Path};\n use rustc_ast_lowering::ResolverAstLowering;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};"}, {"sha": "51518d63ae9018547b3c6507d76a2c0cc2371ca1", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -6,7 +6,7 @@ use crate::Namespace::*;\n use crate::{AmbiguityError, AmbiguityErrorMisc, AmbiguityKind, Determinacy};\n use crate::{CrateLint, ParentScope, ResolutionError, Resolver, Scope, ScopeSet, Weak};\n use crate::{ModuleKind, ModuleOrUniformRoot, NameBinding, PathResult, Segment, ToNameBinding};\n-use rustc_ast::ast::{self, NodeId};\n+use rustc_ast::{self as ast, NodeId};\n use rustc_ast_lowering::ResolverAstLowering;\n use rustc_ast_pretty::pprust;\n use rustc_attr::StabilityLevel;"}, {"sha": "77aecefe5a2bece23a84c480704c999096306555", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -13,7 +13,7 @@\n //! DumpVisitor walks the AST and processes it, and Dumper is used for\n //! recording the output.\n \n-use rustc_ast::ast::{self};\n+use rustc_ast as ast;\n use rustc_ast::{token, walk_list};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;"}, {"sha": "629051c182069bb653cd4266596b5ae5aef5a96b", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -9,7 +9,7 @@ mod dumper;\n mod span_utils;\n mod sig;\n \n-use rustc_ast::ast::{self};\n+use rustc_ast as ast;\n use rustc_ast::util::comments::beautify_doc_string;\n use rustc_ast_pretty::pprust::attribute_to_string;\n use rustc_hir as hir;"}, {"sha": "b3003cc63d3110260c63bc9e1e0443b722d10cd0", "filename": "src/librustc_save_analysis/sig.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_save_analysis%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_save_analysis%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fsig.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -29,7 +29,7 @@ use crate::{id_from_def_id, id_from_hir_id, SaveContext};\n \n use rls_data::{SigElement, Signature};\n \n-use rustc_ast::ast::Mutability;\n+use rustc_ast::Mutability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir_pretty::id_to_string;"}, {"sha": "bf9c96c6c945947f423f9e06011ae4c35a9f9739", "filename": "src/librustc_session/output.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_session%2Foutput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_session%2Foutput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foutput.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n //! Related to out filenames of compilation (e.g. save analysis, binaries).\n use crate::config::{CrateType, Input, OutputFilenames, OutputType};\n use crate::Session;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use std::path::{Path, PathBuf};"}, {"sha": "d7da2038b549fda6d2422767919718eb2ccdb723", "filename": "src/librustc_session/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_session%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_session%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fsession.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,9 +7,9 @@ use crate::lint;\n use crate::parse::ParseSess;\n use crate::search_paths::{PathKind, SearchPath};\n \n-pub use rustc_ast::ast::Attribute;\n pub use rustc_ast::attr::MarkedAttrs;\n pub use rustc_ast::crate_disambiguator::CrateDisambiguator;\n+pub use rustc_ast::Attribute;\n use rustc_data_structures::flock;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::jobserver::{self, Client};"}, {"sha": "f01c3da8b5f10ec6ac8aaa3ff89c03b6801ae270", "filename": "src/librustc_symbol_mangling/v0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_symbol_mangling%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_symbol_mangling%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Fv0.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast::{FloatTy, IntTy, UintTy};\n+use rustc_ast::{FloatTy, IntTy, UintTy};\n use rustc_data_structures::base_n;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;"}, {"sha": "75822eadb2ab31973173b6a06022eb07185ac58a", "filename": "src/librustc_trait_selection/traits/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast::{MetaItem, NestedMetaItem};\n+use rustc_ast::{MetaItem, NestedMetaItem};\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, ErrorReported};"}, {"sha": "a043fa3f4c84590135f5e7aed86be03d0e7d3cbf", "filename": "src/librustc_traits/chalk/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_traits%2Fchalk%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_traits%2Fchalk%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk%2Flowering.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -327,7 +327,7 @@ impl<'tcx> LowerInto<'tcx, chalk_ir::GoalData<RustInterner<'tcx>>>\n impl<'tcx> LowerInto<'tcx, chalk_ir::Ty<RustInterner<'tcx>>> for Ty<'tcx> {\n     fn lower_into(self, interner: &RustInterner<'tcx>) -> chalk_ir::Ty<RustInterner<'tcx>> {\n         use chalk_ir::TyData;\n-        use rustc_ast::ast;\n+        use rustc_ast as ast;\n         use TyKind::*;\n \n         let empty = || chalk_ir::Substitution::empty(interner);"}, {"sha": "f18b4ca65f6f8cac474ae5d58395b0aedba6ab13", "filename": "src/librustc_traits/chalk/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_traits%2Fchalk%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_traits%2Fchalk%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -101,7 +101,7 @@ crate fn evaluate_goal<'tcx>(\n             match _data {\n                 chalk_ir::GenericArgData::Ty(_t) => {\n                     use chalk_ir::TyData;\n-                    use rustc_ast::ast;\n+                    use rustc_ast as ast;\n \n                     let _data = _t.data(&interner);\n                     let kind = match _data {"}, {"sha": "86081b150710d3743b6e95915d8a46886d22fc98", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -8,7 +8,7 @@\n use crate::collect::PlaceholderHirTyCollector;\n use crate::middle::resolve_lifetime as rl;\n use crate::require_c_abi_if_c_variadic;\n-use rustc_ast::{ast::ParamKindOrd, util::lev_distance::find_best_match_for_name};\n+use rustc_ast::{util::lev_distance::find_best_match_for_name, ParamKindOrd};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::ErrorReported;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticId, FatalError};"}, {"sha": "34693a73217884d9adf688fb4cdad80fa0509e8d", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -32,7 +32,7 @@ use super::FnCtxt;\n \n use crate::hir::def_id::DefId;\n use crate::type_error_struct;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, ErrorReported};\n use rustc_hir as hir;\n use rustc_hir::lang_items;"}, {"sha": "ff0c788c18b51598cdce7442c08927ce2618ea65", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -16,7 +16,7 @@ use crate::check::Needs;\n use crate::check::TupleArgumentsFlag::DontTupleArguments;\n use crate::type_error_struct;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stack::ensure_sufficient_stack;"}, {"sha": "7ac6681be1a4a963111e3839236d5f979bb29eb7", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,7 +7,7 @@ use crate::check::FnCtxt;\n use crate::hir::def::DefKind;\n use crate::hir::def_id::DefId;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::util::lev_distance::{find_best_match_for_name, lev_distance};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;"}, {"sha": "5b8c775e74d8fa7019db250a599e08406cb6487e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -88,7 +88,7 @@ pub mod writeback;\n use crate::astconv::{\n     AstConv, ExplicitLateBound, GenericArgCountMismatch, GenericArgCountResult, PathSeg,\n };\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::util::parser::ExprPrecedence;\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;"}, {"sha": "dc1ce2d89ba0eea10a3c92c451b236e75ad0a42c", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,5 +1,5 @@\n use crate::check::FnCtxt;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder};"}, {"sha": "d47a8273d07ea7e6c3bc1df8d6e05040e9cb0d3e", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use crate::check::{FnCtxt, Inherited};\n use crate::constrained_generic_params::{identify_constrained_generic_params, Parameter};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;"}, {"sha": "859d510dcbec972c57178202ed3cb6c974eebc3d", "filename": "src/librustc_typeck/coherence/inherent_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -13,7 +13,7 @@ use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, LOCAL_CRATE};\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_middle::ty::{self, CrateInherentImpls, TyCtxt};\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_span::Span;\n \n /// On-demand query: yields a map containing all types mapped to their inherent impls."}, {"sha": "7fb4026117be9d71b7aadcbce1ec80bb7c29ab99", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -18,8 +18,8 @@ use crate::astconv::{AstConv, Bounds, SizedByDefault};\n use crate::check::intrinsic::intrinsic_operation_unsafety;\n use crate::constrained_generic_params as cgp;\n use crate::middle::resolve_lifetime as rl;\n-use rustc_ast::ast;\n-use rustc_ast::ast::MetaItemKind;\n+use rustc_ast as ast;\n+use rustc_ast::MetaItemKind;\n use rustc_attr::{list_contains_name, InlineAttr, OptimizeAttr};\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n@@ -2683,7 +2683,7 @@ fn should_inherit_track_caller(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n }\n \n fn check_link_ordinal(tcx: TyCtxt<'_>, attr: &ast::Attribute) -> Option<usize> {\n-    use rustc_ast::ast::{Lit, LitIntType, LitKind};\n+    use rustc_ast::{Lit, LitIntType, LitKind};\n     let meta_item_list = attr.meta_item_list();\n     let meta_item_list: Option<&[ast::NestedMetaItem]> = meta_item_list.as_ref().map(Vec::as_ref);\n     let sole_meta_list = match meta_item_list {"}, {"sha": "ab0b332ee193676b5152ffdf6634ead8d6ff7b3f", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,7 +7,7 @@ use std::fmt::{self, Write};\n use std::mem;\n use std::ops;\n \n-use rustc_ast::ast::{LitKind, MetaItem, MetaItemKind, NestedMetaItem};\n+use rustc_ast::{LitKind, MetaItem, MetaItemKind, NestedMetaItem};\n use rustc_feature::Features;\n use rustc_session::parse::ParseSess;\n use rustc_span::symbol::{sym, Symbol};"}, {"sha": "96f0a1b7a7cb6887adaa69388ab46e5f88c78eb9", "filename": "src/librustdoc/clean/cfg/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use super::*;\n \n-use rustc_ast::ast::*;\n use rustc_ast::attr;\n+use rustc_ast::Path;\n use rustc_span::symbol::{Ident, Symbol};\n use rustc_span::with_default_session_globals;\n use rustc_span::DUMMY_SP;"}, {"sha": "38fa8a402c483e758eafc2d25a8879a1f8f6485b", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@\n \n use std::iter::once;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};"}, {"sha": "14e0fa7eabb00ab27a3b654e501376403b982aec", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -9,7 +9,7 @@ mod simplify;\n pub mod types;\n pub mod utils;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;"}, {"sha": "914dc2e1b88474152968cc13f839a70ae7e74272", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -8,9 +8,9 @@ use std::rc::Rc;\n use std::sync::Arc;\n use std::{slice, vec};\n \n-use rustc_ast::ast::{self, AttrStyle};\n use rustc_ast::attr;\n use rustc_ast::util::comments::beautify_doc_string;\n+use rustc_ast::{self as ast, AttrStyle};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n@@ -420,7 +420,7 @@ pub struct Attributes {\n impl Attributes {\n     /// Extracts the content from an attribute `#[doc(cfg(content))]`.\n     pub fn extract_cfg(mi: &ast::MetaItem) -> Option<&ast::MetaItem> {\n-        use rustc_ast::ast::NestedMetaItem::MetaItem;\n+        use rustc_ast::NestedMetaItem::MetaItem;\n \n         if let ast::MetaItemKind::List(ref nmis) = mi.kind {\n             if nmis.len() == 1 {"}, {"sha": "98125adbdea419516ce7d6264e4c1dc33c2dcbcc", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@\n //! manner (and with prettier names) before cleaning.\n pub use self::StructType::*;\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::{self, Span, Symbol};\n "}, {"sha": "d4d6a8119c316d7055fb83b8d4358de5b210d852", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_expand::base::SyntaxExtensionKind;\n use rustc_feature::UnstableFeatures;\n@@ -1204,20 +1204,20 @@ fn handle_variant(\n }\n \n const PRIMITIVES: &[(&str, Res)] = &[\n-    (\"u8\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::ast::UintTy::U8))),\n-    (\"u16\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::ast::UintTy::U16))),\n-    (\"u32\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::ast::UintTy::U32))),\n-    (\"u64\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::ast::UintTy::U64))),\n-    (\"u128\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::ast::UintTy::U128))),\n-    (\"usize\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::ast::UintTy::Usize))),\n-    (\"i8\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::ast::IntTy::I8))),\n-    (\"i16\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::ast::IntTy::I16))),\n-    (\"i32\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::ast::IntTy::I32))),\n-    (\"i64\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::ast::IntTy::I64))),\n-    (\"i128\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::ast::IntTy::I128))),\n-    (\"isize\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::ast::IntTy::Isize))),\n-    (\"f32\", Res::PrimTy(hir::PrimTy::Float(rustc_ast::ast::FloatTy::F32))),\n-    (\"f64\", Res::PrimTy(hir::PrimTy::Float(rustc_ast::ast::FloatTy::F64))),\n+    (\"u8\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::UintTy::U8))),\n+    (\"u16\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::UintTy::U16))),\n+    (\"u32\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::UintTy::U32))),\n+    (\"u64\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::UintTy::U64))),\n+    (\"u128\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::UintTy::U128))),\n+    (\"usize\", Res::PrimTy(hir::PrimTy::Uint(rustc_ast::UintTy::Usize))),\n+    (\"i8\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::IntTy::I8))),\n+    (\"i16\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::IntTy::I16))),\n+    (\"i32\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::IntTy::I32))),\n+    (\"i64\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::IntTy::I64))),\n+    (\"i128\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::IntTy::I128))),\n+    (\"isize\", Res::PrimTy(hir::PrimTy::Int(rustc_ast::IntTy::Isize))),\n+    (\"f32\", Res::PrimTy(hir::PrimTy::Float(rustc_ast::FloatTy::F32))),\n+    (\"f64\", Res::PrimTy(hir::PrimTy::Float(rustc_ast::FloatTy::F64))),\n     (\"str\", Res::PrimTy(hir::PrimTy::Str)),\n     (\"bool\", Res::PrimTy(hir::PrimTy::Bool)),\n     (\"char\", Res::PrimTy(hir::PrimTy::Char)),"}, {"sha": "693d5b9fb0736c22efc149f294da4372a429c467", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::ErrorReported;\n use rustc_feature::UnstableFeatures;"}, {"sha": "ac9f839600baf1ac8241aacb2e239030a927fcc4", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n //! The Rust AST Visitor. Extracts useful information and massages it into a form\n //! usable for `clean`.\n \n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};"}, {"sha": "8cf8b7a44933a7c3c360a0ea78eb53e1086df3d2", "filename": "src/test/ui-fulldeps/auxiliary/lint-plugin-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-plugin-test.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -14,7 +14,7 @@ extern crate rustc_session;\n \n use rustc_driver::plugin::Registry;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n \n declare_lint_pass!(Pass => [TEST_LINT]);"}, {"sha": "08b8fb3cbae5a93d1c125e38180e665044112379", "filename": "src/test/ui-fulldeps/auxiliary/lint-tool-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Flint-tool-test.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -12,7 +12,7 @@ extern crate rustc_session;\n \n use rustc_driver::plugin::Registry;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintArray, LintContext, LintId, LintPass};\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n declare_tool_lint!(pub clippy::TEST_LINT, Warn, \"Warn about stuff\");\n declare_tool_lint!(\n     /// Some docs"}, {"sha": "8d4101b652624aa515ffd3deb0053dc41c78f82f", "filename": "src/test/ui-fulldeps/pprust-expr-roundtrip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -33,7 +33,7 @@ use rustc_session::parse::ParseSess;\n use rustc_span::source_map::{Spanned, DUMMY_SP, FileName};\n use rustc_span::source_map::FilePathMapping;\n use rustc_span::symbol::Ident;\n-use rustc_ast::ast::*;\n+use rustc_ast::*;\n use rustc_ast::mut_visit::{self, MutVisitor, visit_clobber};\n use rustc_ast::ptr::P;\n "}, {"sha": "4b7016def9d604a6b5415b56440fc17e03d0b68d", "filename": "src/test/ui/unboxed-closures/unboxed-closures-unique-type-id.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-unique-type-id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-unique-type-id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-unique-type-id.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -4,7 +4,7 @@\n //\n //    error: internal compiler error: get_unique_type_id_of_type() -\n //    unexpected type: closure,\n-//    Closure(rustc_ast::ast::DefId{krate: 0, node: 66},\n+//    Closure(rustc_ast::DefId{krate: 0, node: 66},\n //    ReScope(63))\n //\n // This is a regression test for issue #17021."}, {"sha": "76ccf2e4bb98b0f37febdd73a133dcae08c2c952", "filename": "src/tools/clippy/clippy_lints/src/attrs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fattrs.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@ use crate::utils::{\n     span_lint_and_sugg, span_lint_and_then, without_block_comments,\n };\n use if_chain::if_chain;\n-use rustc_ast::ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n+use rustc_ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_errors::Applicability;\n use rustc_hir::{\n@@ -570,7 +570,7 @@ declare_lint_pass!(EarlyAttributes => [\n ]);\n \n impl EarlyLintPass for EarlyAttributes {\n-    fn check_item(&mut self, cx: &EarlyContext<'_>, item: &rustc_ast::ast::Item) {\n+    fn check_item(&mut self, cx: &EarlyContext<'_>, item: &rustc_ast::Item) {\n         check_empty_line_after_outer_attr(cx, item);\n     }\n \n@@ -580,7 +580,7 @@ impl EarlyLintPass for EarlyAttributes {\n     }\n }\n \n-fn check_empty_line_after_outer_attr(cx: &EarlyContext<'_>, item: &rustc_ast::ast::Item) {\n+fn check_empty_line_after_outer_attr(cx: &EarlyContext<'_>, item: &rustc_ast::Item) {\n     for attr in &item.attrs {\n         let attr_item = if let AttrKind::Normal(ref attr) = attr.kind {\n             attr"}, {"sha": "aa1002636406ad29310267f2067c045e396689c4", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -339,7 +339,7 @@ pub fn register_pre_expansion_lints(store: &mut rustc_lint::LintStore) {\n }\n \n #[doc(hidden)]\n-pub fn read_conf(args: &[rustc_ast::ast::NestedMetaItem], sess: &Session) -> Conf {\n+pub fn read_conf(args: &[rustc_ast::NestedMetaItem], sess: &Session) -> Conf {\n     use std::path::Path;\n     match utils::conf::file_from_args(args) {\n         Ok(file_name) => {"}, {"sha": "58bfd0bc553f425161c172dd35bd0d309fd12a1f", "filename": "src/tools/clippy/clippy_lints/src/single_component_path_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsingle_component_path_imports.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{in_macro, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc_ast::ast::{Item, ItemKind, UseTreeKind};\n+use rustc_ast::{Item, ItemKind, UseTreeKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "7a659bf779c0c0dd028a94bca82c9e684266d22f", "filename": "src/tools/clippy/clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fstrings.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -161,7 +161,7 @@ declare_lint_pass!(StringLitAsBytes => [STRING_LIT_AS_BYTES]);\n impl<'tcx> LateLintPass<'tcx> for StringLitAsBytes {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) {\n         use crate::utils::{snippet, snippet_with_applicability};\n-        use rustc_ast::ast::LitKind;\n+        use rustc_ast::LitKind;\n \n         if_chain! {\n             if let ExprKind::MethodCall(path, _, args, _) = &e.kind;"}, {"sha": "28fd55f6ff0ad0ea2fbe4e84a913f9ee39b78ec1", "filename": "src/tools/clippy/clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -3,7 +3,7 @@ use crate::utils::{\n     span_lint_and_then, sugg,\n };\n use if_chain::if_chain;\n-use rustc_ast::ast;\n+use rustc_ast as ast;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, GenericArg, Mutability, QPath, TyKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "d60306336c6e6a956d42d15f8d6a98f068eeddd0", "filename": "src/tools/clippy/clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -1,7 +1,7 @@\n use crate::consts::{constant_context, Constant};\n use crate::utils::{match_qpath, paths, span_lint};\n use if_chain::if_chain;\n-use rustc_ast::ast::LitKind;\n+use rustc_ast::LitKind;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;"}, {"sha": "0fd70550fa0c292dfbe001a2ad3df146565d1a09", "filename": "src/tools/clippy/clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@ use std::cmp::Ordering;\n use std::collections::BTreeMap;\n \n use if_chain::if_chain;\n-use rustc_ast::ast::{FloatTy, IntTy, LitFloatType, LitIntType, LitKind, UintTy};\n+use rustc_ast::{FloatTy, IntTy, LitFloatType, LitIntType, LitKind, UintTy};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_body, walk_expr, walk_ty, FnKind, NestedVisitorMap, Visitor};"}, {"sha": "b7e2eba0a8178a8f27c0d54e08a82bd6ad31ddbb", "filename": "src/tools/clippy/clippy_lints/src/unnested_or_patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnested_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnested_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funnested_or_patterns.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -2,7 +2,7 @@\n \n use crate::utils::ast_utils::{eq_field_pat, eq_id, eq_pat, eq_path};\n use crate::utils::{over, span_lint_and_then};\n-use rustc_ast::ast::{self, Pat, PatKind, PatKind::*, DUMMY_NODE_ID};\n+use rustc_ast::{self as ast, Pat, PatKind, PatKind::*, DUMMY_NODE_ID};\n use rustc_ast::mut_visit::*;\n use rustc_ast::ptr::P;\n use rustc_ast_pretty::pprust;"}, {"sha": "c32c80dcd3ce6da1f31bdd87e6ddb7ca62948626", "filename": "src/tools/clippy/clippy_lints/src/utils/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Fast_utils.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -5,7 +5,7 @@\n #![allow(clippy::similar_names, clippy::wildcard_imports, clippy::enum_glob_use)]\n \n use crate::utils::{both, over};\n-use rustc_ast::ast::{self, *};\n+use rustc_ast::{self as ast, *};\n use rustc_ast::ptr::P;\n use rustc_span::symbol::Ident;\n use std::mem;"}, {"sha": "d2494b321efcd48d6dc33142286a49d5e54e2adf", "filename": "src/tools/clippy/clippy_lints/src/vec_resize_to_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/668ef72f4429059240ee361a2f0f748558a5326f/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fvec_resize_to_zero.rs?ref=668ef72f4429059240ee361a2f0f748558a5326f", "patch": "@@ -7,7 +7,7 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n \n use crate::utils::{match_def_path, paths};\n-use rustc_ast::ast::LitKind;\n+use rustc_ast::LitKind;\n use rustc_hir as hir;\n \n declare_clippy_lint! {"}]}