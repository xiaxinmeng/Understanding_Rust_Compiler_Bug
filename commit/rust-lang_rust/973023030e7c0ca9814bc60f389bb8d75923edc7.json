{"sha": "973023030e7c0ca9814bc60f389bb8d75923edc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MzAyMzAzMGU3YzBjYTk4MTRiYzYwZjM4OWJiOGQ3NTkyM2VkYzc=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-04-07T22:41:24Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-04-07T22:41:52Z"}, "message": "add -O2 when compiling rt, fix warnings triggered by optimizer", "tree": {"sha": "c4e4b24902b899a1f9815ca30edaaf0d6a2f8915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4e4b24902b899a1f9815ca30edaaf0d6a2f8915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/973023030e7c0ca9814bc60f389bb8d75923edc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/973023030e7c0ca9814bc60f389bb8d75923edc7", "html_url": "https://github.com/rust-lang/rust/commit/973023030e7c0ca9814bc60f389bb8d75923edc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/973023030e7c0ca9814bc60f389bb8d75923edc7/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21b31a350a78374de951ae72d1223d3bd4894301", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b31a350a78374de951ae72d1223d3bd4894301", "html_url": "https://github.com/rust-lang/rust/commit/21b31a350a78374de951ae72d1223d3bd4894301"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8b4404e197726711eb9848bb99f51449b7715171", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/973023030e7c0ca9814bc60f389bb8d75923edc7/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/973023030e7c0ca9814bc60f389bb8d75923edc7/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=973023030e7c0ca9814bc60f389bb8d75923edc7", "patch": "@@ -11,7 +11,7 @@ endif\n \n CFG_INFO := $(info cfg: building on $(CFG_OSTYPE) $(CFG_CPUTYPE))\n \n-CFG_GCC_CFLAGS :=\n+CFG_GCC_CFLAGS := -O2 -fno-strict-aliasing\n CFG_GCC_LINK_FLAGS :=\n CFG_BOOT_FLAGS := $(BOOT_FLAGS)\n CFG_RUSTC_FLAGS := -nowarn -O"}, {"sha": "00253a68f7728eb995e0729c0d03a64eae2cb10e", "filename": "src/rt/rust_crate_reader.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Frust_crate_reader.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Frust_crate_reader.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_crate_reader.cpp?ref=973023030e7c0ca9814bc60f389bb8d75923edc7", "patch": "@@ -65,7 +65,7 @@ rust_crate_reader::mem_reader::adv_zstr(size_t sz)\n {\n   sz = 0;\n   while (ok) {\n-    char c;\n+    char c = 0;\n     get(c);\n     ++sz;\n     if (c == '\\0')\n@@ -124,7 +124,7 @@ rust_crate_reader::abbrev_reader::abbrev_reader\n     //          tell_off());\n \n     uintptr_t idx, tag;\n-    uint8_t has_children;\n+    uint8_t has_children = 0;\n     get_uleb(idx);\n     get_uleb(tag);\n     get(has_children);"}, {"sha": "4a1f3e458b351f9e8b63e915eefd9b43782af81e", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=973023030e7c0ca9814bc60f389bb8d75923edc7", "patch": "@@ -403,7 +403,7 @@ rust_crate_reader\n         void get_uleb(T &out) {\n             out = T(0);\n             for (size_t i = 0; i < sizeof(T) && ok; ++i) {\n-                uint8_t byte;\n+                uint8_t byte = 0;\n                 get(byte);\n                 out <<= 7;\n                 out |= byte & 0x7f;"}, {"sha": "c2fefef0d99c9cbadfd1fd791e85de5dc3d7949f", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=973023030e7c0ca9814bc60f389bb8d75923edc7", "patch": "@@ -175,7 +175,7 @@ rust_task::start(uintptr_t exit_task_glue,\n     *spp-- = (uintptr_t) 0x0;        // output\n     *spp-- = (uintptr_t) 0x0;        // retpc\n \n-    uintptr_t exit_task_frame_base;\n+    uintptr_t exit_task_frame_base = 0;\n \n     if (spawnee_abi == ABI_X86_RUSTBOOT_CDECL) {\n         for (size_t j = 0; j < n_callee_saves; ++j) {\n@@ -454,7 +454,7 @@ rust_task::notify_tasks_waiting_to_join() {\n     while (tasks_waiting_to_join.is_empty() == false) {\n         log(rust_log::TASK, \"notify_tasks_waiting_to_join: %d\",\n             tasks_waiting_to_join.size());\n-        maybe_proxy<rust_task> *waiting_task;\n+        maybe_proxy<rust_task> *waiting_task = 0;\n         tasks_waiting_to_join.pop(&waiting_task);\n         if (waiting_task->is_proxy()) {\n             notify_message::send(notify_message::WAKEUP, \"wakeup\","}, {"sha": "173e9ede2ba07d18dc16fa7f0e9aab65deb644a7", "filename": "src/rt/util/indexed_list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Futil%2Findexed_list.h", "raw_url": "https://github.com/rust-lang/rust/raw/973023030e7c0ca9814bc60f389bb8d75923edc7/src%2Frt%2Futil%2Findexed_list.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Futil%2Findexed_list.h?ref=973023030e7c0ca9814bc60f389bb8d75923edc7", "patch": "@@ -59,7 +59,7 @@ indexed_list<T>::remove(T *value) {\n     assert (value->list_index >= 0);\n     assert (value->list_index < (int32_t)list.size());\n     int32_t removeIndex = value->list_index;\n-    T *last;\n+    T *last = 0;\n     list.pop(&last);\n     if (last->list_index == removeIndex) {\n         last->list_index = -1;"}]}