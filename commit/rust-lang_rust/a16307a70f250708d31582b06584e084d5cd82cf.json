{"sha": "a16307a70f250708d31582b06584e084d5cd82cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNjMwN2E3MGYyNTA3MDhkMzE1ODJiMDY1ODRlMDg0ZDVjZDgyY2Y=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-21T08:53:03Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-21T08:57:31Z"}, "message": "Allow block-like rhs expression to stay on the same line as lhs", "tree": {"sha": "652a55f1be983e82bb77987d5581b91ebfd3cd8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/652a55f1be983e82bb77987d5581b91ebfd3cd8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a16307a70f250708d31582b06584e084d5cd82cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a16307a70f250708d31582b06584e084d5cd82cf", "html_url": "https://github.com/rust-lang/rust/commit/a16307a70f250708d31582b06584e084d5cd82cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a16307a70f250708d31582b06584e084d5cd82cf/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb27bc5c687c38ffc7e10e94ad55a10e06ee1e25", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb27bc5c687c38ffc7e10e94ad55a10e06ee1e25", "html_url": "https://github.com/rust-lang/rust/commit/bb27bc5c687c38ffc7e10e94ad55a10e06ee1e25"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "2ba08cd3390257a24f3f2760631565ce97469c3b", "filename": "src/expr.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a16307a70f250708d31582b06584e084d5cd82cf/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a16307a70f250708d31582b06584e084d5cd82cf/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=a16307a70f250708d31582b06584e084d5cd82cf", "patch": "@@ -377,9 +377,9 @@ where\n     // Note that this is non-conservative, but its just to see if it's even\n     // worth trying to put everything on one line.\n     let rhs_shape = try_opt!(shape.sub_width(suffix.len()));\n-    let rhs_result = rhs.rewrite(context, rhs_shape);\n+    let rhs_orig_result = rhs.rewrite(context, rhs_shape);\n \n-    if let Some(rhs_result) = rhs_result {\n+    if let Some(ref rhs_result) = rhs_orig_result {\n         // This is needed in case of line break not caused by a\n         // shortage of space, but by end-of-line comments, for example.\n         if !rhs_result.contains('\\n') {\n@@ -419,6 +419,7 @@ where\n     // We have to use multiple lines.\n \n     // Re-evaluate the rhs because we have more space now:\n+    let sep = if infix.ends_with(' ') { \" \" } else { \"\" };\n     let infix = infix.trim_right();\n     let rhs_shape = match context.config.control_style() {\n         Style::Legacy => {\n@@ -439,12 +440,24 @@ where\n         width: try_opt!(context.config.max_width().checked_sub(lhs_overhead)),\n         ..shape\n     };\n-    let lhs_result = try_opt!(lhs.rewrite(context, lhs_shape));\n+    let lhs_result = try_opt!(\n+        lhs.rewrite(context, lhs_shape)\n+            .map(|lhs_str| format!(\"{}{}{}\", prefix, lhs_str, infix))\n+    );\n+    if let Some(ref rhs_str) = rhs_orig_result {\n+        if rhs_str.lines().count() <= rhs_result.lines().count() &&\n+            rhs_str\n+                .lines()\n+                .next()\n+                .map_or(false, |first_line| first_line.ends_with('{')) &&\n+            last_line_width(&lhs_result) + sep.len() + first_line_width(rhs_str) <= shape.width\n+        {\n+            return Some(format!(\"{}{}{}{}\", lhs_result, sep, rhs_str, suffix));\n+        }\n+    }\n     Some(format!(\n-        \"{}{}{}\\n{}{}{}\",\n-        prefix,\n+        \"{}\\n{}{}{}\",\n         lhs_result,\n-        infix,\n         rhs_shape.indent.to_string(context.config),\n         rhs_result,\n         suffix"}]}