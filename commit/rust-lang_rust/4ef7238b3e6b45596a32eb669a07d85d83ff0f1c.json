{"sha": "4ef7238b3e6b45596a32eb669a07d85d83ff0f1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZjcyMzhiM2U2YjQ1NTk2YTMyZWI2NjlhMDdkODVkODNmZjBmMWM=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-03-31T18:55:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-31T18:55:33Z"}, "message": "Merge pull request #2601 from flip1995/export\n\nFix lintlib script", "tree": {"sha": "3420f8d73874eaea6964f6b7b8bd8931359ee0fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3420f8d73874eaea6964f6b7b8bd8931359ee0fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJav9mlCRBK7hj4Ov3rIwAAdHIIAGSJ8FeZZV0XIMjbY2XOik17\nUPZqTkv2hzwL5Kyr/WRLUG14WrV2dbrm9xEkomxOy8UFehnKtkcKKTUsVo6tZO/3\nysKBLBYlsS8G43ASSYmO4lLQDSYM03zlxhX14RvQz6p2Zi/AhQPxyphIjsWtRd6c\nIlg75MOTF7xBcDECctR4S5JeDYjXIB82Tt6WjEU24BPXI9N412eWh1Xn4e95VX3V\nntwNrqB9xIZSiP636JrYWdERM30IeZ1r3II1Oh5V5lQiO/nqgSW7u+6oeNpyZD+6\nEN47UOv0WxpEc73kDaJI/6L35ZcRZeEWjL9n3Ulv9X+PVhcjQHYtYB+E9ho2QvI=\n=hVhA\n-----END PGP SIGNATURE-----\n", "payload": "tree 3420f8d73874eaea6964f6b7b8bd8931359ee0fb\nparent b7a0b97e97e1aa9e7ce2377ae623cbbdaf78372c\nparent 2a52527a463f3e96e38d2eba3ece1bb56d970f5c\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1522522533 +0200\ncommitter GitHub <noreply@github.com> 1522522533 +0200\n\nMerge pull request #2601 from flip1995/export\n\nFix lintlib script"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c", "html_url": "https://github.com/rust-lang/rust/commit/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7a0b97e97e1aa9e7ce2377ae623cbbdaf78372c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7a0b97e97e1aa9e7ce2377ae623cbbdaf78372c", "html_url": "https://github.com/rust-lang/rust/commit/b7a0b97e97e1aa9e7ce2377ae623cbbdaf78372c"}, {"sha": "2a52527a463f3e96e38d2eba3ece1bb56d970f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a52527a463f3e96e38d2eba3ece1bb56d970f5c", "html_url": "https://github.com/rust-lang/rust/commit/2a52527a463f3e96e38d2eba3ece1bb56d970f5c"}], "stats": {"total": 60, "additions": 27, "deletions": 33}, "files": [{"sha": "c28177e10629c927618cea9bfbc226153e9de0da", "filename": "util/lintlib.py", "status": "modified", "additions": 27, "deletions": 33, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c/util%2Flintlib.py", "raw_url": "https://github.com/rust-lang/rust/raw/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c/util%2Flintlib.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Flintlib.py?ref=4ef7238b3e6b45596a32eb669a07d85d83ff0f1c", "patch": "@@ -7,12 +7,11 @@\n import logging as log\n log.basicConfig(level=log.INFO, format='%(levelname)s: %(message)s')\n \n-Lint = collections.namedtuple('Lint', 'name level doc sourcefile')\n+Lint = collections.namedtuple('Lint', 'name level doc sourcefile group')\n Config = collections.namedtuple('Config', 'name ty doc default')\n \n lintname_re = re.compile(r'''pub\\s+([A-Z_][A-Z_0-9]*)''')\n-level_re = re.compile(r'''(Forbid|Deny|Warn|Allow)''')\n-group_re = re.compile(r'''([a-z_][a-z_0-9]+)''')\n+group_re = re.compile(r'''\\s*([a-z_][a-z_0-9]+)''')\n conf_re = re.compile(r'''define_Conf! {\\n([^}]*)\\n}''', re.MULTILINE)\n confvar_re = re.compile(\n     r'''/// Lint: (\\w+). (.*).*\\n\\s*\\([^,]+,\\s+\"([^\"]+)\",\\s+([^=\\)]+)=>\\s+(.*)\\),''', re.MULTILINE)\n@@ -27,6 +26,7 @@\n     \"nursery\": 'Allow',\n }\n \n+\n def parse_lints(lints, filepath):\n     last_comment = []\n     comment = True\n@@ -57,36 +57,30 @@ def parse_lints(lints, filepath):\n                 else:\n                     last_comment = []\n             if not comment:\n-                if name:\n-                    g = group_re.search(line)\n-                    if g:\n-                        group = g.group(1).lower()\n-                        level = lint_levels[group]\n-                        log.info(\"found %s with level %s in %s\",\n-                                name, level, filepath)\n-                        lints.append(Lint(name, level, last_comment, filepath, group))\n-                        last_comment = []\n-                        comment = True\n-                else:\n-                    m = lintname_re.search(line)\n-                    if m:\n-                        name = m.group(1).lower()\n-\n-                        if deprecated:\n-                            level = \"Deprecated\"\n-                        else:\n-                            while True:\n-                                m = level_re.search(line)\n-                                if m:\n-                                    level = m.group(0)\n-                                    break\n-                                line = next(fp)\n-                        if not clippy:\n-                            log.info(\"found %s with level %s in %s\",\n-                                    name, level, filepath)\n-                            lints.append(Lint(name, level, last_comment, filepath, \"deprecated\"))\n-                            last_comment = []\n-                            comment = True\n+                m = lintname_re.search(line)\n+\n+                if m:\n+                    name = m.group(1).lower()\n+                    line = next(fp)\n+\n+                    if deprecated:\n+                        level = \"Deprecated\"\n+                        group = \"deprecated\"\n+                    else:\n+                        while True:\n+                            g = group_re.search(line)\n+                            if g:\n+                                group = g.group(1).lower()\n+                                level = lint_levels[group]\n+                                break\n+                            line = next(fp)\n+\n+                    log.info(\"found %s with level %s in %s\",\n+                             name, level, filepath)\n+                    lints.append(Lint(name, level, last_comment, filepath, group))\n+                    last_comment = []\n+                    comment = True\n+\n                     if \"}\" in line:\n                         log.warn(\"Warning: missing Lint-Name in %s\", filepath)\n                         comment = True"}]}