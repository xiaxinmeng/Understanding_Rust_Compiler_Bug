{"sha": "e63116c74f79a7909998b27615a308268f9093d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MzExNmM3NGY3OWE3OTA5OTk4YjI3NjE1YTMwODI2OGY5MDkzZDY=", "commit": {"author": {"name": "Domantas Jadenkus", "email": "djadenkus@gmail.com", "date": "2021-02-13T12:29:26Z"}, "committer": {"name": "Domantas Jadenkus", "email": "djadenkus@gmail.com", "date": "2021-02-13T12:29:26Z"}, "message": "allow any field type", "tree": {"sha": "40c11af5f94333a812b45f1df9e4cb376e0cb6ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40c11af5f94333a812b45f1df9e4cb376e0cb6ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e63116c74f79a7909998b27615a308268f9093d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e63116c74f79a7909998b27615a308268f9093d6", "html_url": "https://github.com/rust-lang/rust/commit/e63116c74f79a7909998b27615a308268f9093d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e63116c74f79a7909998b27615a308268f9093d6/comments", "author": {"login": "jDomantas", "id": 8329015, "node_id": "MDQ6VXNlcjgzMjkwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8329015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jDomantas", "html_url": "https://github.com/jDomantas", "followers_url": "https://api.github.com/users/jDomantas/followers", "following_url": "https://api.github.com/users/jDomantas/following{/other_user}", "gists_url": "https://api.github.com/users/jDomantas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jDomantas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jDomantas/subscriptions", "organizations_url": "https://api.github.com/users/jDomantas/orgs", "repos_url": "https://api.github.com/users/jDomantas/repos", "events_url": "https://api.github.com/users/jDomantas/events{/privacy}", "received_events_url": "https://api.github.com/users/jDomantas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jDomantas", "id": 8329015, "node_id": "MDQ6VXNlcjgzMjkwMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8329015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jDomantas", "html_url": "https://github.com/jDomantas", "followers_url": "https://api.github.com/users/jDomantas/followers", "following_url": "https://api.github.com/users/jDomantas/following{/other_user}", "gists_url": "https://api.github.com/users/jDomantas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jDomantas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jDomantas/subscriptions", "organizations_url": "https://api.github.com/users/jDomantas/orgs", "repos_url": "https://api.github.com/users/jDomantas/repos", "events_url": "https://api.github.com/users/jDomantas/events{/privacy}", "received_events_url": "https://api.github.com/users/jDomantas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee05b0491a71775c4319ce8f76641382f840770", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee05b0491a71775c4319ce8f76641382f840770", "html_url": "https://github.com/rust-lang/rust/commit/fee05b0491a71775c4319ce8f76641382f840770"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "ac9806368f52749de7cd234e3f7c45c8b4d5ca49", "filename": "crates/assists/src/handlers/generate_from_impl_for_enum.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e63116c74f79a7909998b27615a308268f9093d6/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63116c74f79a7909998b27615a308268f9093d6/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs?ref=e63116c74f79a7909998b27615a308268f9093d6", "patch": "@@ -34,10 +34,6 @@ pub(crate) fn generate_from_impl_for_enum(acc: &mut Assists, ctx: &AssistContext\n         return None;\n     }\n     let field_type = field_list.fields().next()?.ty()?;\n-    let path = match field_type {\n-        ast::Type::PathType(it) => it,\n-        _ => return None,\n-    };\n \n     if existing_from_impl(&ctx.sema, &variant).is_some() {\n         mark::hit!(test_add_from_impl_already_exists);\n@@ -59,7 +55,7 @@ impl From<{0}> for {1} {{\n         Self::{2}(v)\n     }}\n }}\"#,\n-                path.syntax(),\n+                field_type.syntax(),\n                 enum_name,\n                 variant_name\n             );\n@@ -195,6 +191,21 @@ impl From<String> for A {\n \n pub trait From<T> {\n     fn from(T) -> Self;\n+}\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_add_from_impl_static_str() {\n+        check_assist(\n+            generate_from_impl_for_enum,\n+            \"enum A { $0One(&'static str) }\",\n+            r#\"enum A { One(&'static str) }\n+\n+impl From<&'static str> for A {\n+    fn from(v: &'static str) -> Self {\n+        Self::One(v)\n+    }\n }\"#,\n         );\n     }"}]}