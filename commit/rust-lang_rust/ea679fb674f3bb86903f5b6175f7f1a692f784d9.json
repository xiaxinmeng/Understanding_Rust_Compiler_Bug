{"sha": "ea679fb674f3bb86903f5b6175f7f1a692f784d9", "node_id": "C_kwDOAAsO6NoAKGVhNjc5ZmI2NzRmM2JiODY5MDNmNWI2MTc1ZjdmMWE2OTJmNzg0ZDk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-14T17:02:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-14T17:02:55Z"}, "message": "Rollup merge of #108038 - eggyal:remove_needless_supertrait_constraints, r=lcnr\n\nRemove needless supertrait constraints from Interner projections\n\nThese associated types are already all constrained to implement `Ord`, so specifically requiring its supertraits `Eq`, `PartialEq` and `PartialOrd` is superfluous.", "tree": {"sha": "5461b07994f93625a35616a44d62aa080eaeb2fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5461b07994f93625a35616a44d62aa080eaeb2fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea679fb674f3bb86903f5b6175f7f1a692f784d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj676/CRBK7hj4Ov3rIwAAuIwIAAaTcluyj47VINCf0KKqn023\n7+fyeQllnrhI+LlD6HK490tQtERpfw6O3C3qrGiT802JfAHiRax3tbgPKJ9w1rpY\nQjHJOsiH2PKK+5sUjiMHQbWf67y1EqV+42Kox/mLdjRo3vkRjkCbgEbCQxf6uf9c\nOuORvCIIb9KImieDM+NUsSs3IDp3EVf2oJvoaZiu3+TH24yIa4vMcxirjTNbbwB6\nbPrR9aiYxSHOD9FrWrVFfFSkd53e5V3a9eT+VsIK70Raxg+d1j7OVxaZKpcEC32a\n3aJjA3f9kUjzsHyDV0ResZ5Cux8GPeTSb/mWH73a44pgIFRfxo2OL2eAV7XtqQg=\n=Ldoj\n-----END PGP SIGNATURE-----\n", "payload": "tree 5461b07994f93625a35616a44d62aa080eaeb2fd\nparent 7a9e6e8ccb47542ee3e9d9a2673750921e12e8fd\nparent 9e2947a62114e095c589854ae60b6c8df37b5c7a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676394175 +0100\ncommitter GitHub <noreply@github.com> 1676394175 +0100\n\nRollup merge of #108038 - eggyal:remove_needless_supertrait_constraints, r=lcnr\n\nRemove needless supertrait constraints from Interner projections\n\nThese associated types are already all constrained to implement `Ord`, so specifically requiring its supertraits `Eq`, `PartialEq` and `PartialOrd` is superfluous.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea679fb674f3bb86903f5b6175f7f1a692f784d9", "html_url": "https://github.com/rust-lang/rust/commit/ea679fb674f3bb86903f5b6175f7f1a692f784d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea679fb674f3bb86903f5b6175f7f1a692f784d9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a9e6e8ccb47542ee3e9d9a2673750921e12e8fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9e6e8ccb47542ee3e9d9a2673750921e12e8fd", "html_url": "https://github.com/rust-lang/rust/commit/7a9e6e8ccb47542ee3e9d9a2673750921e12e8fd"}, {"sha": "9e2947a62114e095c589854ae60b6c8df37b5c7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2947a62114e095c589854ae60b6c8df37b5c7a", "html_url": "https://github.com/rust-lang/rust/commit/9e2947a62114e095c589854ae60b6c8df37b5c7a"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "f27bcb9ea6b7384ab1ac2fc190e937d06b9e9d0b", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ea679fb674f3bb86903f5b6175f7f1a692f784d9/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea679fb674f3bb86903f5b6175f7f1a692f784d9/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=ea679fb674f3bb86903f5b6175f7f1a692f784d9", "patch": "@@ -39,35 +39,35 @@ pub use ty_info::*;\n pub trait HashStableContext {}\n \n pub trait Interner: Sized {\n-    type AdtDef: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type SubstsRef: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type DefId: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type AdtDef: Clone + Debug + Hash + Ord;\n+    type SubstsRef: Clone + Debug + Hash + Ord;\n+    type DefId: Clone + Debug + Hash + Ord;\n     type Binder<T>;\n-    type Ty: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Const: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Region: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type Ty: Clone + Debug + Hash + Ord;\n+    type Const: Clone + Debug + Hash + Ord;\n+    type Region: Clone + Debug + Hash + Ord;\n     type Predicate;\n-    type TypeAndMut: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Mutability: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Movability: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type PolyFnSig: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ListBinderExistentialPredicate: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type BinderListTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ListTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type AliasTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ParamTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type BoundTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type PlaceholderType: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type InferTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ErrorGuaranteed: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type TypeAndMut: Clone + Debug + Hash + Ord;\n+    type Mutability: Clone + Debug + Hash + Ord;\n+    type Movability: Clone + Debug + Hash + Ord;\n+    type PolyFnSig: Clone + Debug + Hash + Ord;\n+    type ListBinderExistentialPredicate: Clone + Debug + Hash + Ord;\n+    type BinderListTy: Clone + Debug + Hash + Ord;\n+    type ListTy: Clone + Debug + Hash + Ord;\n+    type AliasTy: Clone + Debug + Hash + Ord;\n+    type ParamTy: Clone + Debug + Hash + Ord;\n+    type BoundTy: Clone + Debug + Hash + Ord;\n+    type PlaceholderType: Clone + Debug + Hash + Ord;\n+    type InferTy: Clone + Debug + Hash + Ord;\n+    type ErrorGuaranteed: Clone + Debug + Hash + Ord;\n     type PredicateKind: Clone + Debug + Hash + PartialEq + Eq;\n-    type AllocId: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type AllocId: Clone + Debug + Hash + Ord;\n \n-    type EarlyBoundRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type BoundRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type FreeRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type RegionVid: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type PlaceholderRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type EarlyBoundRegion: Clone + Debug + Hash + Ord;\n+    type BoundRegion: Clone + Debug + Hash + Ord;\n+    type FreeRegion: Clone + Debug + Hash + Ord;\n+    type RegionVid: Clone + Debug + Hash + Ord;\n+    type PlaceholderRegion: Clone + Debug + Hash + Ord;\n }\n \n pub trait InternAs<T: ?Sized, R> {"}]}