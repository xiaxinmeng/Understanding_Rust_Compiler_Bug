{"sha": "aaf1983a5688683fa7514f273b86c030e9c7b92a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZjE5ODNhNTY4ODY4M2ZhNzUxNGYyNzNiODZjMDMwZTljN2I5MmE=", "commit": {"author": {"name": "Matthew Astley", "email": "mca@sanger.ac.uk", "date": "2015-06-10T15:15:24Z"}, "committer": {"name": "Matthew Astley", "email": "mca@sanger.ac.uk", "date": "2015-06-10T15:16:03Z"}, "message": "mend bad Markdown", "tree": {"sha": "8da9e83fd79b997d3a0791b7f88551fb41e91949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8da9e83fd79b997d3a0791b7f88551fb41e91949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaf1983a5688683fa7514f273b86c030e9c7b92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaf1983a5688683fa7514f273b86c030e9c7b92a", "html_url": "https://github.com/rust-lang/rust/commit/aaf1983a5688683fa7514f273b86c030e9c7b92a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaf1983a5688683fa7514f273b86c030e9c7b92a/comments", "author": {"login": "mcast", "id": 36801, "node_id": "MDQ6VXNlcjM2ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/36801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcast", "html_url": "https://github.com/mcast", "followers_url": "https://api.github.com/users/mcast/followers", "following_url": "https://api.github.com/users/mcast/following{/other_user}", "gists_url": "https://api.github.com/users/mcast/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcast/subscriptions", "organizations_url": "https://api.github.com/users/mcast/orgs", "repos_url": "https://api.github.com/users/mcast/repos", "events_url": "https://api.github.com/users/mcast/events{/privacy}", "received_events_url": "https://api.github.com/users/mcast/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcast", "id": 36801, "node_id": "MDQ6VXNlcjM2ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/36801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcast", "html_url": "https://github.com/mcast", "followers_url": "https://api.github.com/users/mcast/followers", "following_url": "https://api.github.com/users/mcast/following{/other_user}", "gists_url": "https://api.github.com/users/mcast/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcast/subscriptions", "organizations_url": "https://api.github.com/users/mcast/orgs", "repos_url": "https://api.github.com/users/mcast/repos", "events_url": "https://api.github.com/users/mcast/events{/privacy}", "received_events_url": "https://api.github.com/users/mcast/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ece0058382c234dc64ce596eb62b1f636632566", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ece0058382c234dc64ce596eb62b1f636632566", "html_url": "https://github.com/rust-lang/rust/commit/1ece0058382c234dc64ce596eb62b1f636632566"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ea927707ecd6fe272d8b8f454c2dddcc429e09cb", "filename": "src/doc/trpl/functions.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aaf1983a5688683fa7514f273b86c030e9c7b92a/src%2Fdoc%2Ftrpl%2Ffunctions.md", "raw_url": "https://github.com/rust-lang/rust/raw/aaf1983a5688683fa7514f273b86c030e9c7b92a/src%2Fdoc%2Ftrpl%2Ffunctions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ffunctions.md?ref=aaf1983a5688683fa7514f273b86c030e9c7b92a", "patch": "@@ -145,7 +145,7 @@ Note that assigning to an already-bound variable (e.g. `y = 5`) is still an\n expression, although its value is not particularly useful. Unlike other\n languages where an assignment evaluates to the assigned value (e.g. `5` in the\n previous example), in Rust the value of an assignment is an empty tuple `()`\n-because the assigned value can have (just one owner)[ownership.html], and any\n+because the assigned value can have [just one owner](ownership.html), and any\n other returned value would be too surprising:\n \n ```rust"}]}