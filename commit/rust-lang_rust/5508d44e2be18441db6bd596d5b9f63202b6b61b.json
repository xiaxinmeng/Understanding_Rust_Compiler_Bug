{"sha": "5508d44e2be18441db6bd596d5b9f63202b6b61b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MDhkNDRlMmJlMTg0NDFkYjZiZDU5NmQ1YjlmNjMyMDJiNmI2MWI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-27T13:23:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-06-27T13:23:40Z"}, "message": "Support bool constants and fix a u8 const error", "tree": {"sha": "a6a85daf9c6972ade2893314ab089d581798942d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6a85daf9c6972ade2893314ab089d581798942d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5508d44e2be18441db6bd596d5b9f63202b6b61b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5508d44e2be18441db6bd596d5b9f63202b6b61b", "html_url": "https://github.com/rust-lang/rust/commit/5508d44e2be18441db6bd596d5b9f63202b6b61b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5508d44e2be18441db6bd596d5b9f63202b6b61b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75430b22e323f0f8a47bc0e5e3e2a6618c71ad95", "url": "https://api.github.com/repos/rust-lang/rust/commits/75430b22e323f0f8a47bc0e5e3e2a6618c71ad95", "html_url": "https://github.com/rust-lang/rust/commit/75430b22e323f0f8a47bc0e5e3e2a6618c71ad95"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "399130be4de824ed1aae7c9bf1b21d825f0a9e85", "filename": "example.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5508d44e2be18441db6bd596d5b9f63202b6b61b/example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5508d44e2be18441db6bd596d5b9f63202b6b61b/example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example.rs?ref=5508d44e2be18441db6bd596d5b9f63202b6b61b", "patch": "@@ -18,10 +18,10 @@ trait Mul<RHS = Self> {\n     fn mul(self, rhs: RHS) -> Self::Output;\n }\n \n-impl Mul for u32 {\n-    type Output = u32;\n+impl Mul for u8 {\n+    type Output = Self;\n \n-    fn mul(self, rhs: u32) -> u32 {\n+    fn mul(self, rhs: Self) -> Self {\n         self * rhs\n     }\n }\n@@ -39,11 +39,11 @@ unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\n     drop_in_place(to_drop);\n }\n \n-fn abc(a: u32) -> u32 {\n+fn abc(a: u8) -> u8 {\n     a * 2\n }\n \n-fn bcd(b: bool, a: u32) -> u32 {\n+fn bcd(b: bool, a: u8) -> u8 {\n     if b {\n         a * 2\n     } else {\n@@ -73,6 +73,6 @@ fn option_unwrap_or(o: BoolOption, d: bool) -> bool {\n     }\n }\n \n-fn ret_42() -> u32 {\n+fn ret_42() -> u8 {\n     42\n }"}, {"sha": "5f1d7670f9bcb65b253bf217be4743a9242e60ba", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5508d44e2be18441db6bd596d5b9f63202b6b61b/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5508d44e2be18441db6bd596d5b9f63202b6b61b/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=5508d44e2be18441db6bd596d5b9f63202b6b61b", "patch": "@@ -514,6 +514,10 @@ fn trans_operand<'a, 'tcx>(fx: &mut FunctionCx<'a, 'tcx>, operand: &Operand<'tcx\n                 Literal::Value { value } => {\n                     let layout = fx.layout_of(const_.ty);\n                     match const_.ty.sty {\n+                        TypeVariants::TyBool => {\n+                            let bits = value.to_scalar().unwrap().to_bits(layout.size).unwrap();\n+                            CValue::const_val(fx, const_.ty, bits as u64 as i64)\n+                        }\n                         TypeVariants::TyUint(_) => {\n                             let bits = value.to_scalar().unwrap().to_bits(layout.size).unwrap();\n                             CValue::const_val(fx, const_.ty, bits as u64 as i64)"}, {"sha": "df6c88a2270ebaf172b607fa4cd8a53cdf79f3c7", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5508d44e2be18441db6bd596d5b9f63202b6b61b/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5508d44e2be18441db6bd596d5b9f63202b6b61b/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=5508d44e2be18441db6bd596d5b9f63202b6b61b", "patch": "@@ -165,6 +165,7 @@ impl<'tcx> CValue<'tcx> {\n \n     pub fn const_val<'a>(fx: &mut FunctionCx<'a, 'tcx>, ty: Ty<'tcx>, const_val: i64) -> CValue<'tcx> where 'tcx: 'a {\n         let cton_ty = fx.cton_type(ty).unwrap();\n+        let cton_ty = fixup_cton_ty(cton_ty);\n         let layout = fx.layout_of(ty);\n         CValue::ByVal(fx.bcx.ins().iconst(cton_ty, const_val), layout)\n     }"}]}