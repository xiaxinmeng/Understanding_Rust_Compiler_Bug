{"sha": "60dbffba294492427a00d6878a13f0ac3dae78d0", "node_id": "C_kwDOAAsO6NoAKDYwZGJmZmJhMjk0NDkyNDI3YTAwZDY4NzhhMTNmMGFjM2RhZTc4ZDA", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-10-26T11:41:57Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-10-26T11:41:57Z"}, "message": "Adjust normalization", "tree": {"sha": "d29caef07f67e0f0e0fd693ba2bf828d91bd19c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d29caef07f67e0f0e0fd693ba2bf828d91bd19c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60dbffba294492427a00d6878a13f0ac3dae78d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60dbffba294492427a00d6878a13f0ac3dae78d0", "html_url": "https://github.com/rust-lang/rust/commit/60dbffba294492427a00d6878a13f0ac3dae78d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60dbffba294492427a00d6878a13f0ac3dae78d0/comments", "author": {}, "committer": {}, "parents": [{"sha": "447d57f03669a551d395f8e9a77fac8316480e92", "url": "https://api.github.com/repos/rust-lang/rust/commits/447d57f03669a551d395f8e9a77fac8316480e92", "html_url": "https://github.com/rust-lang/rust/commit/447d57f03669a551d395f8e9a77fac8316480e92"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "fcc50a7aba07d5dddcf12f20cdefde6754b38a2e", "filename": "src/test/rustdoc-ui/track-diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.rs?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -3,7 +3,7 @@\n \n // Normalize the emitted location so this doesn't need\n // updating everytime someone adds or removes a line.\n-// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:LL:CC\"\n \n struct A;\n struct B;"}, {"sha": "ec30318625311fadb7af2c1017c1add7d216a2f0", "filename": "src/test/rustdoc-ui/track-diagnostics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftrack-diagnostics.stderr?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -1,9 +1,9 @@\n error[E0308]: mismatched types\n-  --> $DIR/track-diagnostics.rs:$LINE::$COL\n+  --> $DIR/track-diagnostics.rs:LL:CC\n    |\n LL | const S: A = B;\n    |              ^ expected struct `A`, found struct `B`\n--Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:LL:CC\n \n error: aborting due to previous error\n "}, {"sha": "61b9137eadd90f3d0de9acdcbde63f8c022df37f", "filename": "src/test/ui/track-diagnostics/track.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.rs?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -3,7 +3,7 @@\n \n // Normalize the emitted location so this doesn't need\n // updating everytime someone adds or removes a line.\n-// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:LL:CC\"\n // normalize-stderr-test \"note: rustc .+ running on .+\" -> \"note: rustc $$VERSION running on $$TARGET\"\n \n fn main() {"}, {"sha": "d23f625c2d177c89248b4e0867e5474835c2b00b", "filename": "src/test/ui/track-diagnostics/track.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack.stderr?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -1,16 +1,16 @@\n error[E0425]: cannot find value `rust` in this scope\n-  --> $DIR/track.rs:$LINE::$COL\n+  --> $DIR/track.rs:LL:CC\n    |\n LL |     break rust\n    |           ^^^^ not found in this scope\n--Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:LL:CC\n \n error[E0268]: `break` outside of a loop\n-  --> $DIR/track.rs:$LINE::$COL\n+  --> $DIR/track.rs:LL:CC\n    |\n LL |     break rust\n    |     ^^^^^^^^^^ cannot `break` outside of a loop\n--Ztrack-diagnostics: created at compiler/rustc_passes/src/errors.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_passes/src/errors.rs:LL:CC\n \n error: internal compiler error: It looks like you're trying to break rust; would you like some ICE?\n "}, {"sha": "dc105c61d723b36ed722b8dd969e305bb11555cd", "filename": "src/test/ui/track-diagnostics/track2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.rs?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -3,7 +3,7 @@\n \n // Normalize the emitted location so this doesn't need\n // updating everytime someone adds or removes a line.\n-// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:LL:CC\"\n \n fn main() {\n     let _moved @ _from = String::from(\"foo\");"}, {"sha": "38a621da816440a093cdb1ceed5b00909c37db10", "filename": "src/test/ui/track-diagnostics/track2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack2.stderr?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -1,12 +1,12 @@\n error[E0382]: use of moved value\n-  --> $DIR/track2.rs:$LINE::$COL\n+  --> $DIR/track2.rs:LL:CC\n    |\n LL |     let _moved @ _from = String::from(\"foo\");\n    |         ^^^^^^   -----   ------------------- move occurs because value has type `String`, which does not implement the `Copy` trait\n    |         |        |\n    |         |        value moved here\n    |         value used here after move\n--Ztrack-diagnostics: created at compiler/rustc_borrowck/src/borrowck_errors.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_borrowck/src/borrowck_errors.rs:LL:CC\n \n error: aborting due to previous error\n "}, {"sha": "0699239503a979ab41704f5e5c046558c1cf19c1", "filename": "src/test/ui/track-diagnostics/track3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.rs?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -3,7 +3,7 @@\n \n // Normalize the emitted location so this doesn't need\n // updating everytime someone adds or removes a line.\n-// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:LL:CC\"\n \n fn main() {\n     let _unimported = Blah { field: u8 };"}, {"sha": "dc468d7e8eeb15e6dc664cacbbcf11e6f3f48581", "filename": "src/test/ui/track-diagnostics/track3.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack3.stderr?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -1,16 +1,16 @@\n error[E0422]: cannot find struct, variant or union type `Blah` in this scope\n-  --> $DIR/track3.rs:$LINE::$COL\n+  --> $DIR/track3.rs:LL:CC\n    |\n LL |     let _unimported = Blah { field: u8 };\n    |                       ^^^^ not found in this scope\n--Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:LL:CC\n \n error[E0423]: expected value, found builtin type `u8`\n-  --> $DIR/track3.rs:$LINE::$COL\n+  --> $DIR/track3.rs:LL:CC\n    |\n LL |     let _unimported = Blah { field: u8 };\n    |                                     ^^ not a value\n--Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_resolve/src/late/diagnostics.rs:LL:CC\n \n error: aborting due to 2 previous errors\n "}, {"sha": "35eec799bba99d77eb1f0d96416803927bf331a7", "filename": "src/test/ui/track-diagnostics/track4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.rs?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -3,7 +3,7 @@\n \n // Normalize the emitted location so this doesn't need\n // updating everytime someone adds or removes a line.\n-// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:LL:CC\"\n \n pub onion {\n     Owo(u8),"}, {"sha": "c4668444c4bbb17abaecd316d58beff0ab16df18", "filename": "src/test/ui/track-diagnostics/track4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrack-diagnostics%2Ftrack4.stderr?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -1,9 +1,9 @@\n error: missing `struct` for struct definition\n-  --> $DIR/track4.rs:$LINE::$COL\n+  --> $DIR/track4.rs:LL:CC\n    |\n LL | pub onion {\n    |    ^\n--Ztrack-diagnostics: created at compiler/rustc_parse/src/parser/diagnostics.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_parse/src/parser/diagnostics.rs:LL:CC\n    |\n help: add `struct` here to parse `onion` as a public struct\n    |"}, {"sha": "fa9221ed02d7420efda22c38101df387b9a8ba07", "filename": "src/tools/clippy/tests/ui/track-diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.rs?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -3,7 +3,7 @@\n \n // Normalize the emitted location so this doesn't need\n // updating everytime someone adds or removes a line.\n-// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:$$LINE::$$COL\"\n+// normalize-stderr-test \".rs:\\d+:\\d+\" -> \".rs:LL:CC\"\n \n struct A;\n struct B;"}, {"sha": "ec30318625311fadb7af2c1017c1add7d216a2f0", "filename": "src/tools/clippy/tests/ui/track-diagnostics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60dbffba294492427a00d6878a13f0ac3dae78d0/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftrack-diagnostics.stderr?ref=60dbffba294492427a00d6878a13f0ac3dae78d0", "patch": "@@ -1,9 +1,9 @@\n error[E0308]: mismatched types\n-  --> $DIR/track-diagnostics.rs:$LINE::$COL\n+  --> $DIR/track-diagnostics.rs:LL:CC\n    |\n LL | const S: A = B;\n    |              ^ expected struct `A`, found struct `B`\n--Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:$LINE::$COL\n+-Ztrack-diagnostics: created at compiler/rustc_infer/src/infer/error_reporting/mod.rs:LL:CC\n \n error: aborting due to previous error\n "}]}