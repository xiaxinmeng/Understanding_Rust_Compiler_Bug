{"sha": "a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNzAxODNiYTM5YzMyYjlmODVjNTBhMzc5ZGM0ZjliOGJkNmUwZmE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-09-11T23:26:06Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-09-24T01:23:21Z"}, "message": "librusti: Eliminate `@fn`.", "tree": {"sha": "8f8908f47d6dc597459da88e4708ea6aa7cd6ea1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f8908f47d6dc597459da88e4708ea6aa7cd6ea1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa", "html_url": "https://github.com/rust-lang/rust/commit/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68ea9aed96b6b8147b6c37b844c85cb7ae2867f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/68ea9aed96b6b8147b6c37b844c85cb7ae2867f4", "html_url": "https://github.com/rust-lang/rust/commit/68ea9aed96b6b8147b6c37b844c85cb7ae2867f4"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "462c0a29236331c09451dd558fb726afdb0e3846", "filename": "src/librusti/rusti.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa/src%2Flibrusti%2Frusti.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa/src%2Flibrusti%2Frusti.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrusti%2Frusti.rs?ref=a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa", "patch": "@@ -72,6 +72,7 @@ extern mod syntax;\n \n use std::{libc, io, os, task};\n use std::cell::Cell;\n+use extra::rl::CompletionCb;\n use extra::rl;\n \n use rustc::driver::{driver, session};\n@@ -520,6 +521,19 @@ pub fn main() {\n     main_args(args);\n }\n \n+struct Completer;\n+\n+impl CompletionCb for Completer {\n+    fn complete(&self, line: ~str, suggest: &fn(~str)) {\n+        if line.starts_with(\":\") {\n+            suggest(~\":clear\");\n+            suggest(~\":exit\");\n+            suggest(~\":help\");\n+            suggest(~\":load\");\n+        }\n+    }\n+}\n+\n pub fn main_args(args: &[~str]) {\n     #[fixed_stack_segment]; #[inline(never)];\n \n@@ -543,13 +557,8 @@ pub fn main_args(args: &[~str]) {\n         println(\"unstable. If you encounter problems, please use the\");\n         println(\"compiler instead. Type :help for help.\");\n \n-        do rl::complete |line, suggest| {\n-            if line.starts_with(\":\") {\n-                suggest(~\":clear\");\n-                suggest(~\":exit\");\n-                suggest(~\":help\");\n-                suggest(~\":load\");\n-            }\n+        unsafe {\n+            rl::complete(@Completer as @CompletionCb)\n         }\n     }\n "}, {"sha": "904594fdfb8f5a94f27de907997660ae4c79c233", "filename": "src/librusti/utils.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa/src%2Flibrusti%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa/src%2Flibrusti%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrusti%2Futils.rs?ref=a170183ba39c32b9f85c50a379dc4f9b8bd6e0fa", "patch": "@@ -15,11 +15,11 @@ use syntax::print::pprust;\n use syntax::parse::token;\n use syntax::visit;\n \n-struct EachBindingVisitor {\n-    f: @fn(&ast::Path, ast::NodeId)\n+struct EachBindingVisitor<'self> {\n+    f: &'self fn(&ast::Path, ast::NodeId)\n }\n \n-impl visit::Visitor<()> for EachBindingVisitor {\n+impl<'self> visit::Visitor<()> for EachBindingVisitor<'self> {\n     fn visit_pat(&mut self, pat:@ast::Pat, _:()) {\n                 match pat.node {\n                     ast::PatIdent(_, ref path, _) => {\n@@ -32,7 +32,7 @@ impl visit::Visitor<()> for EachBindingVisitor {\n     }\n }\n \n-pub fn each_binding(l: @ast::Local, f: @fn(&ast::Path, ast::NodeId)) {\n+pub fn each_binding(l: @ast::Local, f: &fn(&ast::Path, ast::NodeId)) {\n     use syntax::visit::Visitor;\n \n     let mut vt = EachBindingVisitor{ f: f };"}]}