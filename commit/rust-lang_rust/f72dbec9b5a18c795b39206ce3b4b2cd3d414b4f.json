{"sha": "f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MmRiZWM5YjVhMThjNzk1YjM5MjA2Y2UzYjRiMmNkM2Q0MTRiNGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-09T04:45:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-09T19:36:03Z"}, "message": "Collect functions that look like unit tests. Issue #428", "tree": {"sha": "d6f8e73b55fd27de430e21daa6a0f67cc4643af9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6f8e73b55fd27de430e21daa6a0f67cc4643af9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f", "html_url": "https://github.com/rust-lang/rust/commit/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8", "html_url": "https://github.com/rust-lang/rust/commit/5543404abe2ecfe280ffd4393d4e4c9ad3d489b8"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "6d0badaf1296a6c0cb7ba6c396611b8322c7d4fa", "filename": "src/comp/front/test.rs", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f/src%2Fcomp%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f/src%2Fcomp%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ftest.rs?ref=f72dbec9b5a18c795b39206ce3b4b2cd3d414b4f", "patch": "@@ -4,13 +4,15 @@ import std::option;\n import std::ivec;\n import syntax::ast;\n import syntax::fold;\n+import front::attr;\n \n export modify_for_testing;\n \n type node_id_gen = @fn() -> ast::node_id;\n \n type test_ctxt = rec(node_id_gen next_node_id,\n-                     mutable ast::ident[] path);\n+                     mutable ast::ident[] path,\n+                     mutable ast::ident[][] testfns);\n \n // Traverse the crate, collecting all the test functions, eliding any\n // existing main functions, and synthesizing a main test harness\n@@ -28,8 +30,9 @@ fn modify_for_testing(@ast::crate crate) -> @ast::crate {\n         ret this_node_id;\n     } (next_node_id);\n \n-    auto cx = rec(next_node_id = next_node_id_fn,\n-                  mutable path = ~[]);\n+    let test_ctxt cx = rec(next_node_id = next_node_id_fn,\n+                  mutable path = ~[],\n+                  mutable testfns = ~[]);\n \n     auto precursor = rec(fold_crate = bind fold_crate(cx, _, _),\n                          fold_item = bind fold_item(cx, _, _)\n@@ -103,11 +106,36 @@ fn fold_item(&test_ctxt cx, &@ast::item i,\n \n     cx.path += ~[i.ident];\n     log #fmt(\"current path: %s\", ast::path_name_i(cx.path));\n+\n+    if (is_test_fn(i)) {\n+        log \"this is a test function\";\n+        cx.testfns += ~[cx.path];\n+    }\n+\n     auto res = fold::noop_fold_item(i, fld);\n     ivec::pop(cx.path);\n     ret res;\n }\n \n+fn is_test_fn(&@ast::item i) -> bool {\n+    auto has_test_attr = \n+        ivec::len(attr::find_attrs_by_name(i.attrs, \"test\")) > 0u;\n+\n+    fn has_test_signature(&@ast::item i) -> bool {\n+        alt (i.node) {\n+            case (ast::item_fn(?f, ?tps)) {\n+                auto input_cnt = ivec::len(f.decl.inputs);\n+                auto no_output = f.decl.output.node == ast::ty_nil;\n+                auto tparm_cnt = ivec::len(tps);\n+                input_cnt == 0u && no_output && tparm_cnt == 0u\n+            }\n+            case (_) { false }\n+        }\n+    }\n+\n+    ret has_test_attr && has_test_signature(i);\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}]}