{"sha": "4d8d0a6f85ee66c7b65c53de3039aa38d99f05af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkOGQwYTZmODVlZTY2YzdiNjVjNTNkZTMwMzlhYTM4ZDk5ZjA1YWY=", "commit": {"author": {"name": "Roman Stoliar", "email": "rizakrko@rambler.ru", "date": "2018-05-08T20:47:50Z"}, "committer": {"name": "Roman Stoliar", "email": "rizakrko@rambler.ru", "date": "2018-05-10T19:10:11Z"}, "message": "const time\n\nadded rustc_const_unstable attribute\n\nextended tests\n\nadded conversion test\n\nfixed tidy test\n\nadded feature attribute", "tree": {"sha": "0ad86f96d6997f9aafea2a49c4fd1fb4389bac61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ad86f96d6997f9aafea2a49c4fd1fb4389bac61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af", "html_url": "https://github.com/rust-lang/rust/commit/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af/comments", "author": {"login": "rizakrko", "id": 18172179, "node_id": "MDQ6VXNlcjE4MTcyMTc5", "avatar_url": "https://avatars.githubusercontent.com/u/18172179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rizakrko", "html_url": "https://github.com/rizakrko", "followers_url": "https://api.github.com/users/rizakrko/followers", "following_url": "https://api.github.com/users/rizakrko/following{/other_user}", "gists_url": "https://api.github.com/users/rizakrko/gists{/gist_id}", "starred_url": "https://api.github.com/users/rizakrko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rizakrko/subscriptions", "organizations_url": "https://api.github.com/users/rizakrko/orgs", "repos_url": "https://api.github.com/users/rizakrko/repos", "events_url": "https://api.github.com/users/rizakrko/events{/privacy}", "received_events_url": "https://api.github.com/users/rizakrko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rizakrko", "id": 18172179, "node_id": "MDQ6VXNlcjE4MTcyMTc5", "avatar_url": "https://avatars.githubusercontent.com/u/18172179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rizakrko", "html_url": "https://github.com/rizakrko", "followers_url": "https://api.github.com/users/rizakrko/followers", "following_url": "https://api.github.com/users/rizakrko/following{/other_user}", "gists_url": "https://api.github.com/users/rizakrko/gists{/gist_id}", "starred_url": "https://api.github.com/users/rizakrko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rizakrko/subscriptions", "organizations_url": "https://api.github.com/users/rizakrko/orgs", "repos_url": "https://api.github.com/users/rizakrko/repos", "events_url": "https://api.github.com/users/rizakrko/events{/privacy}", "received_events_url": "https://api.github.com/users/rizakrko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57dc98434eb818733dbc941405fdee59e5c3a023", "url": "https://api.github.com/repos/rust-lang/rust/commits/57dc98434eb818733dbc941405fdee59e5c3a023", "html_url": "https://github.com/rust-lang/rust/commit/57dc98434eb818733dbc941405fdee59e5c3a023"}], "stats": {"total": 82, "additions": 76, "deletions": 6}, "files": [{"sha": "0f3b95236f069a5432daaf029dcec5d5a61af1f8", "filename": "src/libcore/tests/time.rs", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af/src%2Flibcore%2Ftests%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af/src%2Flibcore%2Ftests%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Ftime.rs?ref=4d8d0a6f85ee66c7b65c53de3039aa38d99f05af", "patch": "@@ -23,9 +23,43 @@ fn creation() {\n #[test]\n fn secs() {\n     assert_eq!(Duration::new(0, 0).as_secs(), 0);\n+    assert_eq!(Duration::new(0, 500_000_005).as_secs(), 0);\n+    assert_eq!(Duration::new(0, 1_050_000_001).as_secs(), 1);\n     assert_eq!(Duration::from_secs(1).as_secs(), 1);\n     assert_eq!(Duration::from_millis(999).as_secs(), 0);\n     assert_eq!(Duration::from_millis(1001).as_secs(), 1);\n+    assert_eq!(Duration::from_micros(999_999).as_secs(), 0);\n+    assert_eq!(Duration::from_micros(1_000_001).as_secs(), 1);\n+    assert_eq!(Duration::from_nanos(999_999_999).as_secs(), 0);\n+    assert_eq!(Duration::from_nanos(1_000_000_001).as_secs(), 1);\n+}\n+\n+#[test]\n+fn millis() {\n+    assert_eq!(Duration::new(0, 0).subsec_millis(), 0);\n+    assert_eq!(Duration::new(0, 500_000_005).subsec_millis(), 500);\n+    assert_eq!(Duration::new(0, 1_050_000_001).subsec_millis(), 50);\n+    assert_eq!(Duration::from_secs(1).subsec_millis(), 0);\n+    assert_eq!(Duration::from_millis(999).subsec_millis(), 999);\n+    assert_eq!(Duration::from_millis(1001).subsec_millis(), 1);\n+    assert_eq!(Duration::from_micros(999_999).subsec_millis(), 999);\n+    assert_eq!(Duration::from_micros(1_001_000).subsec_millis(), 1);\n+    assert_eq!(Duration::from_nanos(999_999_999).subsec_millis(), 999);\n+    assert_eq!(Duration::from_nanos(1_001_000_000).subsec_millis(), 1);\n+}\n+\n+#[test]\n+fn micros() {\n+    assert_eq!(Duration::new(0, 0).subsec_micros(), 0);\n+    assert_eq!(Duration::new(0, 500_000_005).subsec_micros(), 500_000);\n+    assert_eq!(Duration::new(0, 1_050_000_001).subsec_micros(), 50_000);\n+    assert_eq!(Duration::from_secs(1).subsec_micros(), 0);\n+    assert_eq!(Duration::from_millis(999).subsec_micros(), 999_000);\n+    assert_eq!(Duration::from_millis(1001).subsec_micros(), 1_000);\n+    assert_eq!(Duration::from_micros(999_999).subsec_micros(), 999_999);\n+    assert_eq!(Duration::from_micros(1_000_001).subsec_micros(), 1);\n+    assert_eq!(Duration::from_nanos(999_999_999).subsec_micros(), 999_999);\n+    assert_eq!(Duration::from_nanos(1_000_001_000).subsec_micros(), 1);\n }\n \n #[test]\n@@ -34,8 +68,12 @@ fn nanos() {\n     assert_eq!(Duration::new(0, 5).subsec_nanos(), 5);\n     assert_eq!(Duration::new(0, 1_000_000_001).subsec_nanos(), 1);\n     assert_eq!(Duration::from_secs(1).subsec_nanos(), 0);\n-    assert_eq!(Duration::from_millis(999).subsec_nanos(), 999 * 1_000_000);\n-    assert_eq!(Duration::from_millis(1001).subsec_nanos(), 1 * 1_000_000);\n+    assert_eq!(Duration::from_millis(999).subsec_nanos(), 999_000_000);\n+    assert_eq!(Duration::from_millis(1001).subsec_nanos(), 1_000_000);\n+    assert_eq!(Duration::from_micros(999_999).subsec_nanos(), 999_999_000);\n+    assert_eq!(Duration::from_micros(1_000_001).subsec_nanos(), 1000);\n+    assert_eq!(Duration::from_nanos(999_999_999).subsec_nanos(), 999_999_999);\n+    assert_eq!(Duration::from_nanos(1_000_000_001).subsec_nanos(), 1);\n }\n \n #[test]"}, {"sha": "c0b2b2a0bc682abf3fbe56df4108fef764b1fcdd", "filename": "src/libcore/time.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=4d8d0a6f85ee66c7b65c53de3039aa38d99f05af", "patch": "@@ -203,8 +203,9 @@ impl Duration {\n     ///\n     /// [`subsec_nanos`]: #method.subsec_nanos\n     #[stable(feature = \"duration\", since = \"1.3.0\")]\n+    #[rustc_const_unstable(feature=\"duration_getters\")]\n     #[inline]\n-    pub fn as_secs(&self) -> u64 { self.secs }\n+    pub const fn as_secs(&self) -> u64 { self.secs }\n \n     /// Returns the fractional part of this `Duration`, in milliseconds.\n     ///\n@@ -222,8 +223,9 @@ impl Duration {\n     /// assert_eq!(duration.subsec_millis(), 432);\n     /// ```\n     #[stable(feature = \"duration_extras\", since = \"1.27.0\")]\n+    #[rustc_const_unstable(feature=\"duration_getters\")]\n     #[inline]\n-    pub fn subsec_millis(&self) -> u32 { self.nanos / NANOS_PER_MILLI }\n+    pub const fn subsec_millis(&self) -> u32 { self.nanos / NANOS_PER_MILLI }\n \n     /// Returns the fractional part of this `Duration`, in microseconds.\n     ///\n@@ -241,8 +243,9 @@ impl Duration {\n     /// assert_eq!(duration.subsec_micros(), 234_567);\n     /// ```\n     #[stable(feature = \"duration_extras\", since = \"1.27.0\")]\n+    #[rustc_const_unstable(feature=\"duration_getters\")]\n     #[inline]\n-    pub fn subsec_micros(&self) -> u32 { self.nanos / NANOS_PER_MICRO }\n+    pub const fn subsec_micros(&self) -> u32 { self.nanos / NANOS_PER_MICRO }\n \n     /// Returns the fractional part of this `Duration`, in nanoseconds.\n     ///\n@@ -260,8 +263,9 @@ impl Duration {\n     /// assert_eq!(duration.subsec_nanos(), 10_000_000);\n     /// ```\n     #[stable(feature = \"duration\", since = \"1.3.0\")]\n+    #[rustc_const_unstable(feature=\"duration_getters\")]\n     #[inline]\n-    pub fn subsec_nanos(&self) -> u32 { self.nanos }\n+    pub const fn subsec_nanos(&self) -> u32 { self.nanos }\n \n     /// Checked `Duration` addition. Computes `self + other`, returning [`None`]\n     /// if overflow occurred."}, {"sha": "4481b75840487440d363502b2ec0f832fce9164e", "filename": "src/test/ui/const-eval/duration_conversion.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af/src%2Ftest%2Fui%2Fconst-eval%2Fduration_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8d0a6f85ee66c7b65c53de3039aa38d99f05af/src%2Ftest%2Fui%2Fconst-eval%2Fduration_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fduration_conversion.rs?ref=4d8d0a6f85ee66c7b65c53de3039aa38d99f05af", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+\n+#![feature(duration_getters)]\n+\n+use std::time::Duration;\n+\n+fn main() {\n+    const _ONE_SECOND: Duration = Duration::from_nanos(1_000_000_000);\n+    const _ONE_MILLISECOND: Duration = Duration::from_nanos(1_000_000);\n+    const _ONE_MICROSECOND: Duration = Duration::from_nanos(1_000);\n+    const _ONE_NANOSECOND: Duration = Duration::from_nanos(1);\n+    const _ONE: usize = _ONE_SECOND.as_secs() as usize;\n+    const _TWO: usize = _ONE_MILLISECOND.subsec_millis() as usize;\n+    const _THREE: usize = _ONE_MICROSECOND.subsec_micros() as usize;\n+    const _FOUR: usize = _ONE_NANOSECOND.subsec_nanos() as usize;\n+    const _0: [[u8; _ONE]; _TWO] = [[1; _ONE]; _TWO];\n+    const _1: [[u8; _THREE]; _FOUR] = [[3; _THREE]; _FOUR];\n+}"}]}