{"sha": "1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYTc1NTBhODk5NmNmZmMwN2M2YWY4OWRjZDZlMWNkYzYzYjI0Y2Y=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-18T13:31:34Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-24T19:31:54Z"}, "message": "parser: type alias `type Expected = Option<&'static str>;`.", "tree": {"sha": "acc7f42fe5401fe2ae33012f373bd201bc51adb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acc7f42fe5401fe2ae33012f373bd201bc51adb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf", "html_url": "https://github.com/rust-lang/rust/commit/1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5299d8a191246cf55c8ead7b8be68c8aeca78d35", "url": "https://api.github.com/repos/rust-lang/rust/commits/5299d8a191246cf55c8ead7b8be68c8aeca78d35", "html_url": "https://github.com/rust-lang/rust/commit/5299d8a191246cf55c8ead7b8be68c8aeca78d35"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "36d5ed5c4aa640e5bc7a384f3273792639e94b10", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=1ba7550a8996cffc07c6af89dcd6e1cdc63b24cf", "patch": "@@ -12,12 +12,11 @@ use crate::ThinVec;\n \n use errors::{Applicability, DiagnosticBuilder};\n \n+type Expected = Option<&'static str>;\n+\n impl<'a> Parser<'a> {\n     /// Parses a pattern.\n-    pub fn parse_pat(\n-        &mut self,\n-        expected: Option<&'static str>\n-    ) -> PResult<'a, P<Pat>> {\n+    pub fn parse_pat(&mut self, expected: Expected) -> PResult<'a, P<Pat>> {\n         self.parse_pat_with_range_pat(true, expected)\n     }\n \n@@ -105,7 +104,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses a pattern, that may be a or-pattern (e.g. `Some(Foo | Bar)`).\n-    fn parse_pat_with_or(&mut self, expected: Option<&'static str>) -> PResult<'a, P<Pat>> {\n+    fn parse_pat_with_or(&mut self, expected: Expected) -> PResult<'a, P<Pat>> {\n         // Parse the first pattern.\n         let first_pat = self.parse_pat(expected)?;\n \n@@ -135,7 +134,7 @@ impl<'a> Parser<'a> {\n     fn parse_pat_with_range_pat(\n         &mut self,\n         allow_range_pat: bool,\n-        expected: Option<&'static str>,\n+        expected: Expected,\n     ) -> PResult<'a, P<Pat>> {\n         maybe_recover_from_interpolated_ty_qpath!(self, true);\n         maybe_whole!(self, NtPat, |x| x);\n@@ -257,7 +256,7 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parse `&pat` / `&mut pat`.\n-    fn parse_pat_deref(&mut self, expected: Option<&'static str>) -> PResult<'a, PatKind> {\n+    fn parse_pat_deref(&mut self, expected: Expected) -> PResult<'a, PatKind> {\n         self.expect_and()?;\n         let mutbl = self.parse_mutability();\n \n@@ -363,7 +362,7 @@ impl<'a> Parser<'a> {\n     fn fatal_unexpected_non_pat(\n         &mut self,\n         mut err: DiagnosticBuilder<'a>,\n-        expected: Option<&'static str>,\n+        expected: Expected,\n     ) -> PResult<'a, P<Pat>> {\n         self.cancel(&mut err);\n "}]}