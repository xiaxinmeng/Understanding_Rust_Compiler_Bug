{"sha": "fd30ec406ba776e670dbd46b964de626f28e2857", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMzBlYzQwNmJhNzc2ZTY3MGRiZDQ2Yjk2NGRlNjI2ZjI4ZTI4NTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-05T16:27:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-05T16:27:20Z"}, "message": "properly restrict diagnostics to a single file", "tree": {"sha": "49fed9c0f129306ce38dc201fe714f5d9c7651c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49fed9c0f129306ce38dc201fe714f5d9c7651c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd30ec406ba776e670dbd46b964de626f28e2857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd30ec406ba776e670dbd46b964de626f28e2857", "html_url": "https://github.com/rust-lang/rust/commit/fd30ec406ba776e670dbd46b964de626f28e2857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd30ec406ba776e670dbd46b964de626f28e2857/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec6f71576ace170fd306a68f77e5c5e9646d15be", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec6f71576ace170fd306a68f77e5c5e9646d15be", "html_url": "https://github.com/rust-lang/rust/commit/ec6f71576ace170fd306a68f77e5c5e9646d15be"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "6cf2c620d6183e23b3be5585706e39846bf4111e", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fd30ec406ba776e670dbd46b964de626f28e2857/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd30ec406ba776e670dbd46b964de626f28e2857/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=fd30ec406ba776e670dbd46b964de626f28e2857", "patch": "@@ -259,7 +259,12 @@ impl Module {\n         for decl in self.declarations(db) {\n             match decl {\n                 crate::ModuleDef::Function(f) => f.diagnostics(db, sink),\n-                crate::ModuleDef::Module(f) => f.diagnostics(db, sink),\n+                crate::ModuleDef::Module(m) => {\n+                    // Only add diagnostics from inline modules\n+                    if let ModuleSource::Module(_) = m.definition_source(db).ast {\n+                        m.diagnostics(db, sink)\n+                    }\n+                }\n                 _ => (),\n             }\n         }"}]}