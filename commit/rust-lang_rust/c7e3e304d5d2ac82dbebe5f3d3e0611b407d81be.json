{"sha": "c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be", "node_id": "C_kwDOAAsO6NoAKGM3ZTNlMzA0ZDVkMmFjODJkYmViZTVmM2QzZTA2MTFiNDA3ZDgxYmU", "commit": {"author": {"name": "bluthej", "email": "joffrey.bluthe@e.email", "date": "2023-03-21T21:08:37Z"}, "committer": {"name": "bluthej", "email": "joffrey.bluthe@e.email", "date": "2023-03-22T10:01:57Z"}, "message": "Add the lint logic", "tree": {"sha": "88a0f0bdcef8e5f95cf183cdac9f4925437bbed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88a0f0bdcef8e5f95cf183cdac9f4925437bbed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be", "html_url": "https://github.com/rust-lang/rust/commit/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be/comments", "author": {"login": "bluthej", "id": 29771403, "node_id": "MDQ6VXNlcjI5NzcxNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/29771403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluthej", "html_url": "https://github.com/bluthej", "followers_url": "https://api.github.com/users/bluthej/followers", "following_url": "https://api.github.com/users/bluthej/following{/other_user}", "gists_url": "https://api.github.com/users/bluthej/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluthej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluthej/subscriptions", "organizations_url": "https://api.github.com/users/bluthej/orgs", "repos_url": "https://api.github.com/users/bluthej/repos", "events_url": "https://api.github.com/users/bluthej/events{/privacy}", "received_events_url": "https://api.github.com/users/bluthej/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluthej", "id": 29771403, "node_id": "MDQ6VXNlcjI5NzcxNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/29771403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluthej", "html_url": "https://github.com/bluthej", "followers_url": "https://api.github.com/users/bluthej/followers", "following_url": "https://api.github.com/users/bluthej/following{/other_user}", "gists_url": "https://api.github.com/users/bluthej/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluthej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluthej/subscriptions", "organizations_url": "https://api.github.com/users/bluthej/orgs", "repos_url": "https://api.github.com/users/bluthej/repos", "events_url": "https://api.github.com/users/bluthej/events{/privacy}", "received_events_url": "https://api.github.com/users/bluthej/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "484c82e0418325df5d25e8d0e11e10a5d1371502", "url": "https://api.github.com/repos/rust-lang/rust/commits/484c82e0418325df5d25e8d0e11e10a5d1371502", "html_url": "https://github.com/rust-lang/rust/commit/484c82e0418325df5d25e8d0e11e10a5d1371502"}], "stats": {"total": 37, "additions": 32, "deletions": 5}, "files": [{"sha": "ac6c0e57257c7e8b7d4b3eefbd6a104cff94f279", "filename": "clippy_lints/src/methods/clear_with_drain.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be/clippy_lints%2Fsrc%2Fmethods%2Fclear_with_drain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be/clippy_lints%2Fsrc%2Fmethods%2Fclear_with_drain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fclear_with_drain.rs?ref=c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be", "patch": "@@ -1,8 +1,29 @@\n-use rustc_lint::{LateContext, LintContext};\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::higher::Range;\n+use clippy_utils::is_range_full;\n+use clippy_utils::ty::is_type_diagnostic_item;\n+use rustc_errors::Applicability;\n+use rustc_hir::Expr;\n+use rustc_lint::LateContext;\n+use rustc_span::symbol::sym;\n+use rustc_span::Span;\n \n use super::CLEAR_WITH_DRAIN;\n \n // TODO: Adjust the parameters as necessary\n-pub(super) fn check(cx: &LateContext) {\n-    todo!();\n+// see clippy_lints/src/methods/mod.rs to add call to this check in `check_methods`\n+pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, recv: &Expr<'_>, span: Span, arg: &Expr<'_>) {\n+    let ty = cx.typeck_results().expr_ty(recv);\n+    if is_type_diagnostic_item(cx, ty, sym::Vec) && let Some(range) = Range::hir(arg) && is_range_full(cx, recv, range)\n+    {\n+        span_lint_and_sugg(\n+            cx,\n+            CLEAR_WITH_DRAIN,\n+            span.with_hi(expr.span.hi()),\n+            \"`drain` used to clear a `Vec`\",\n+            \"try\",\n+            \"clear()\".to_string(),\n+            Applicability::MachineApplicable,\n+        );\n+    }\n }"}, {"sha": "257bc4eccc302925702ea4faf4c72168ed7386ef", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=c7e3e304d5d2ac82dbebe5f3d3e0611b407d81be", "patch": "@@ -111,7 +111,7 @@ use clippy_utils::ty::{contains_ty_adt_constructor_opaque, implements_trait, is_\n use clippy_utils::{contains_return, is_bool, is_trait_method, iter_input_pats, return_ty};\n use if_chain::if_chain;\n use rustc_hir as hir;\n-use rustc_hir::{Expr, ExprKind, TraitItem, TraitItemKind};\n+use rustc_hir::{Expr, ExprKind, Node, Stmt, StmtKind, TraitItem, TraitItemKind};\n use rustc_hir_analysis::hir_ty_to_ty;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n@@ -3590,7 +3590,13 @@ impl Methods {\n                     _ => {},\n                 },\n                 (\"drain\", [arg]) => {\n-                    iter_with_drain::check(cx, expr, recv, span, arg);\n+                if let Node::Stmt(Stmt { hir_id: _, kind, .. }) = cx.tcx.hir().get_parent(expr.hir_id)\n+                    && matches!(kind, StmtKind::Semi(_))\n+                    {\n+                        clear_with_drain::check(cx, expr, recv, span, arg);\n+                    } else {\n+                        iter_with_drain::check(cx, expr, recv, span, arg);\n+                    }\n                 },\n                 (\"ends_with\", [arg]) => {\n                     if let ExprKind::MethodCall(.., span) = expr.kind {"}]}