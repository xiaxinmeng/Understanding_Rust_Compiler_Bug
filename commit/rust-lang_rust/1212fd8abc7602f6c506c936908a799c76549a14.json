{"sha": "1212fd8abc7602f6c506c936908a799c76549a14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMTJmZDhhYmM3NjAyZjZjNTA2YzkzNjkwOGE3OTljNzY1NDlhMTQ=", "commit": {"author": {"name": "Brian Brooks", "email": "brooks.brian@gmail.com", "date": "2015-02-21T11:56:46Z"}, "committer": {"name": "Brian Brooks", "email": "brooks.brian@gmail.com", "date": "2015-02-21T11:56:46Z"}, "message": "Resolve includeme.fragment conflict.", "tree": {"sha": "981f92c6d7d037e02c77e4d8ee3c5acb3fd00359", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/981f92c6d7d037e02c77e4d8ee3c5acb3fd00359"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1212fd8abc7602f6c506c936908a799c76549a14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1212fd8abc7602f6c506c936908a799c76549a14", "html_url": "https://github.com/rust-lang/rust/commit/1212fd8abc7602f6c506c936908a799c76549a14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1212fd8abc7602f6c506c936908a799c76549a14/comments", "author": {"login": "brooksbp", "id": 130974, "node_id": "MDQ6VXNlcjEzMDk3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/130974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brooksbp", "html_url": "https://github.com/brooksbp", "followers_url": "https://api.github.com/users/brooksbp/followers", "following_url": "https://api.github.com/users/brooksbp/following{/other_user}", "gists_url": "https://api.github.com/users/brooksbp/gists{/gist_id}", "starred_url": "https://api.github.com/users/brooksbp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brooksbp/subscriptions", "organizations_url": "https://api.github.com/users/brooksbp/orgs", "repos_url": "https://api.github.com/users/brooksbp/repos", "events_url": "https://api.github.com/users/brooksbp/events{/privacy}", "received_events_url": "https://api.github.com/users/brooksbp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brooksbp", "id": 130974, "node_id": "MDQ6VXNlcjEzMDk3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/130974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brooksbp", "html_url": "https://github.com/brooksbp", "followers_url": "https://api.github.com/users/brooksbp/followers", "following_url": "https://api.github.com/users/brooksbp/following{/other_user}", "gists_url": "https://api.github.com/users/brooksbp/gists{/gist_id}", "starred_url": "https://api.github.com/users/brooksbp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brooksbp/subscriptions", "organizations_url": "https://api.github.com/users/brooksbp/orgs", "repos_url": "https://api.github.com/users/brooksbp/repos", "events_url": "https://api.github.com/users/brooksbp/events{/privacy}", "received_events_url": "https://api.github.com/users/brooksbp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/522d09dfecbeca1595f25ac58c6d0178bbd21d7d", "html_url": "https://github.com/rust-lang/rust/commit/522d09dfecbeca1595f25ac58c6d0178bbd21d7d"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "d02ed7c25381d2482508f838c1737781dd85520d", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=1212fd8abc7602f6c506c936908a799c76549a14", "patch": "@@ -15,15 +15,16 @@ macro_rules! panic {\n         panic!(\"explicit panic\")\n     );\n     ($msg:expr) => ({\n-        static _MSG_FILE_LINE: (&'static str, &'static str, usize) = ($msg, file!(), line!());\n+        static _MSG_FILE_LINE: (&'static str, &'static str, usize) =\n+            ($msg, file!(), line!() as usize);\n         ::core::panicking::panic(&_MSG_FILE_LINE)\n     });\n     ($fmt:expr, $($arg:tt)*) => ({\n         // The leading _'s are to avoid dead code warnings if this is\n         // used inside a dead function. Just `#[allow(dead_code)]` is\n         // insufficient, since the user may have\n         // `#[forbid(dead_code)]` and which cannot be overridden.\n-        static _FILE_LINE: (&'static str, usize) = (file!(), line!());\n+        static _FILE_LINE: (&'static str, usize) = (file!(), line!() as usize);\n         ::core::panicking::panic_fmt(format_args!($fmt, $($arg)*), &_FILE_LINE)\n     });\n }"}, {"sha": "787d9c470d41fffefacdeac36f0781c6731a1a8c", "filename": "src/liblog/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1212fd8abc7602f6c506c936908a799c76549a14/src%2Fliblog%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1212fd8abc7602f6c506c936908a799c76549a14/src%2Fliblog%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fmacros.rs?ref=1212fd8abc7602f6c506c936908a799c76549a14", "patch": "@@ -51,7 +51,7 @@\n macro_rules! log {\n     ($lvl:expr, $($arg:tt)+) => ({\n         static LOC: ::log::LogLocation = ::log::LogLocation {\n-            line: line!(),\n+            line: line!() as usize,\n             file: file!(),\n             module_path: module_path!(),\n         };"}, {"sha": "abdcca59c58f31a850d55476b3f0a7a9b8de96dd", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=1212fd8abc7602f6c506c936908a799c76549a14", "patch": "@@ -44,7 +44,7 @@ macro_rules! panic {\n     ($msg:expr) => ({\n         $crate::rt::begin_unwind($msg, {\n             // static requires less code at runtime, more constant data\n-            static _FILE_LINE: (&'static str, usize) = (file!(), line!());\n+            static _FILE_LINE: (&'static str, usize) = (file!(), line!() as usize);\n             &_FILE_LINE\n         })\n     });\n@@ -54,7 +54,7 @@ macro_rules! panic {\n             // used inside a dead function. Just `#[allow(dead_code)]` is\n             // insufficient, since the user may have\n             // `#[forbid(dead_code)]` and which cannot be overridden.\n-            static _FILE_LINE: (&'static str, usize) = (file!(), line!());\n+            static _FILE_LINE: (&'static str, usize) = (file!(), line!() as usize);\n             &_FILE_LINE\n         })\n     });"}, {"sha": "454c21fdc572d2e1088a191577cc6dcc59213d26", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=1212fd8abc7602f6c506c936908a799c76549a14", "patch": "@@ -147,7 +147,7 @@ pub trait AstBuilder {\n \n     fn expr_usize(&self, span: Span, i: usize) -> P<ast::Expr>;\n     fn expr_int(&self, sp: Span, i: isize) -> P<ast::Expr>;\n-    fn expr_u8(&self, sp: Span, u: u8) -> P<ast::Expr>;\n+    fn expr_u32(&self, sp: Span, u: u32) -> P<ast::Expr>;\n     fn expr_bool(&self, sp: Span, value: bool) -> P<ast::Expr>;\n \n     fn expr_vec(&self, sp: Span, exprs: Vec<P<ast::Expr>>) -> P<ast::Expr>;\n@@ -701,8 +701,8 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n         self.expr_lit(sp, ast::LitInt(i as u64, ast::SignedIntLit(ast::TyIs(false),\n                                                                   ast::Sign::new(i))))\n     }\n-    fn expr_u8(&self, sp: Span, u: u8) -> P<ast::Expr> {\n-        self.expr_lit(sp, ast::LitInt(u as u64, ast::UnsignedIntLit(ast::TyU8)))\n+    fn expr_u32(&self, sp: Span, u: u32) -> P<ast::Expr> {\n+        self.expr_lit(sp, ast::LitInt(u as u64, ast::UnsignedIntLit(ast::TyU32)))\n     }\n     fn expr_bool(&self, sp: Span, value: bool) -> P<ast::Expr> {\n         self.expr_lit(sp, ast::LitBool(value))"}, {"sha": "40e614c78c7cc92fd5c3165d306049ffa4f9c484", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1212fd8abc7602f6c506c936908a799c76549a14/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=1212fd8abc7602f6c506c936908a799c76549a14", "patch": "@@ -35,7 +35,7 @@ pub fn expand_line(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n     let topmost = cx.original_span_in_file();\n     let loc = cx.codemap().lookup_char_pos(topmost.lo);\n \n-    base::MacExpr::new(cx.expr_usize(topmost, loc.line))\n+    base::MacExpr::new(cx.expr_u32(topmost, loc.line as u32))\n }\n \n /* column!(): expands to the current column number */\n@@ -45,7 +45,8 @@ pub fn expand_column(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n \n     let topmost = cx.original_span_in_file();\n     let loc = cx.codemap().lookup_char_pos(topmost.lo);\n-    base::MacExpr::new(cx.expr_usize(topmost, loc.col.to_usize()))\n+\n+    base::MacExpr::new(cx.expr_u32(topmost, loc.col.to_usize() as u32))\n }\n \n /// file!(): expands to the current filename */"}, {"sha": "70cd7b772920db0d22205c6b9d10a0dfa301b725", "filename": "src/test/run-pass/syntax-extension-source-utils-files/includeme.fragment", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1212fd8abc7602f6c506c936908a799c76549a14/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils-files%2Fincludeme.fragment", "raw_url": "https://github.com/rust-lang/rust/raw/1212fd8abc7602f6c506c936908a799c76549a14/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils-files%2Fincludeme.fragment", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils-files%2Fincludeme.fragment?ref=1212fd8abc7602f6c506c936908a799c76549a14", "patch": "@@ -2,6 +2,6 @@\n \n {\n     assert!(file!().ends_with(\"includeme.fragment\"));\n-    assert!(line!() == 5_usize);\n+    assert!(line!() == 5_u32);\n     format!(\"victory robot {}\", line!())\n }"}, {"sha": "d1dc02bce8d6ec4db04d49a94ad76e3470e65521", "filename": "src/test/run-pass/syntax-extension-source-utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1212fd8abc7602f6c506c936908a799c76549a14/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1212fd8abc7602f6c506c936908a799c76549a14/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs?ref=1212fd8abc7602f6c506c936908a799c76549a14", "patch": "@@ -23,7 +23,7 @@ macro_rules! indirect_line { () => ( line!() ) }\n \n pub fn main() {\n     assert_eq!(line!(), 25);\n-    //assert!((column!() == 11));\n+    assert!((column!() == 4_u32));\n     assert_eq!(indirect_line!(), 27);\n     assert!((file!().ends_with(\"syntax-extension-source-utils.rs\")));\n     assert_eq!(stringify!((2*3) + 5).to_string(), \"( 2 * 3 ) + 5\".to_string());"}]}