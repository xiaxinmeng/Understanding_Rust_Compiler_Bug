{"sha": "440c0f07c3112d14dd3b359af873155a28865592", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MGMwZjA3YzMxMTJkMTRkZDNiMzU5YWY4NzMxNTVhMjg4NjU1OTI=", "commit": {"author": {"name": "Martin Wernst\u00e5l", "email": "m4rw3r@gmail.com", "date": "2015-08-16T13:53:18Z"}, "committer": {"name": "Martin Wernst\u00e5l", "email": "m4rw3r@gmail.com", "date": "2015-08-16T20:15:26Z"}, "message": "rustdoc: Added issue tracker option and issue data to clean::Stability", "tree": {"sha": "1795c5a38e369494478a6f7fc0ad3dd84ca35e84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1795c5a38e369494478a6f7fc0ad3dd84ca35e84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/440c0f07c3112d14dd3b359af873155a28865592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/440c0f07c3112d14dd3b359af873155a28865592", "html_url": "https://github.com/rust-lang/rust/commit/440c0f07c3112d14dd3b359af873155a28865592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/440c0f07c3112d14dd3b359af873155a28865592/comments", "author": {"login": "m4rw3r", "id": 108100, "node_id": "MDQ6VXNlcjEwODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/108100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m4rw3r", "html_url": "https://github.com/m4rw3r", "followers_url": "https://api.github.com/users/m4rw3r/followers", "following_url": "https://api.github.com/users/m4rw3r/following{/other_user}", "gists_url": "https://api.github.com/users/m4rw3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/m4rw3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m4rw3r/subscriptions", "organizations_url": "https://api.github.com/users/m4rw3r/orgs", "repos_url": "https://api.github.com/users/m4rw3r/repos", "events_url": "https://api.github.com/users/m4rw3r/events{/privacy}", "received_events_url": "https://api.github.com/users/m4rw3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m4rw3r", "id": 108100, "node_id": "MDQ6VXNlcjEwODEwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/108100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m4rw3r", "html_url": "https://github.com/m4rw3r", "followers_url": "https://api.github.com/users/m4rw3r/followers", "following_url": "https://api.github.com/users/m4rw3r/following{/other_user}", "gists_url": "https://api.github.com/users/m4rw3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/m4rw3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m4rw3r/subscriptions", "organizations_url": "https://api.github.com/users/m4rw3r/orgs", "repos_url": "https://api.github.com/users/m4rw3r/repos", "events_url": "https://api.github.com/users/m4rw3r/events{/privacy}", "received_events_url": "https://api.github.com/users/m4rw3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e822a18ae7d55cefc332c6598a607cef0554ec77", "url": "https://api.github.com/repos/rust-lang/rust/commits/e822a18ae7d55cefc332c6598a607cef0554ec77", "html_url": "https://github.com/rust-lang/rust/commit/e822a18ae7d55cefc332c6598a607cef0554ec77"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "05be445820d10b668b63345d5a171e0f458c5daa", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/440c0f07c3112d14dd3b359af873155a28865592/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440c0f07c3112d14dd3b359af873155a28865592/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=440c0f07c3112d14dd3b359af873155a28865592", "patch": "@@ -2688,7 +2688,8 @@ pub struct Stability {\n     pub feature: String,\n     pub since: String,\n     pub deprecated_since: String,\n-    pub reason: String\n+    pub reason: String,\n+    pub issue: Option<u32>\n }\n \n impl Clean<Stability> for attr::Stability {\n@@ -2702,6 +2703,7 @@ impl Clean<Stability> for attr::Stability {\n                                                                     |istr| istr.to_string()),\n             reason: self.reason.as_ref().map_or(\"\".to_string(),\n                                                 |interned| interned.to_string()),\n+            issue: self.issue,\n         }\n     }\n }\n@@ -2717,6 +2719,7 @@ impl<'a> Clean<Stability> for &'a attr::Stability {\n                                                                     |istr| istr.to_string()),\n             reason: self.reason.as_ref().map_or(\"\".to_string(),\n                                                 |interned| interned.to_string()),\n+            issue: self.issue,\n         }\n     }\n }"}, {"sha": "53869e042a812cc7f33c31cf91e409edb47168c2", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/440c0f07c3112d14dd3b359af873155a28865592/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440c0f07c3112d14dd3b359af873155a28865592/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=440c0f07c3112d14dd3b359af873155a28865592", "patch": "@@ -103,6 +103,9 @@ pub struct Context {\n     pub render_redirect_pages: bool,\n     /// All the passes that were run on this crate.\n     pub passes: HashSet<String>,\n+    /// The base-URL of the issue tracker for when an item has been tagged with\n+    /// an issue number.\n+    pub issue_tracker_base_url: Option<String>,\n }\n \n /// Indicates where an external crate can be found.\n@@ -303,7 +306,8 @@ thread_local!(pub static CURRENT_LOCATION_KEY: RefCell<Vec<String>> =\n pub fn run(mut krate: clean::Crate,\n            external_html: &ExternalHtml,\n            dst: PathBuf,\n-           passes: HashSet<String>) -> io::Result<()> {\n+           passes: HashSet<String>,\n+           issue_tracker_base_url: Option<String>) -> io::Result<()> {\n     let src_root = match krate.src.parent() {\n         Some(p) => p.to_path_buf(),\n         None => PathBuf::new(),\n@@ -323,6 +327,7 @@ pub fn run(mut krate: clean::Crate,\n         },\n         include_sources: true,\n         render_redirect_pages: false,\n+        issue_tracker_base_url: issue_tracker_base_url,\n     };\n \n     try!(mkdir(&cx.dst));\n@@ -352,6 +357,10 @@ pub fn run(mut krate: clean::Crate,\n                             }\n                         });\n                     }\n+                    clean::NameValue(ref x, ref s)\n+                            if \"issue_tracker_base_url\" == *x => {\n+                        cx.issue_tracker_base_url = Some(s.to_string());\n+                    }\n                     clean::Word(ref x)\n                             if \"html_no_source\" == *x => {\n                         cx.include_sources = false;"}, {"sha": "73b7de45c4a2c90fdc3949a5cb8bfe4d11c3cdc7", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/440c0f07c3112d14dd3b359af873155a28865592/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440c0f07c3112d14dd3b359af873155a28865592/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=440c0f07c3112d14dd3b359af873155a28865592", "patch": "@@ -178,6 +178,8 @@ pub fn opts() -> Vec<getopts::OptGroup> {\n                  \"FILES\"),\n         optopt(\"\", \"markdown-playground-url\",\n                \"URL to send code snippets to\", \"URL\"),\n+        optopt(\"\", \"issue-tracker-base-url\",\n+               \"base URL for issue tracker\", \"URL\"),\n         optflag(\"\", \"markdown-no-toc\", \"don't include table of contents\")\n     )\n }\n@@ -284,7 +286,8 @@ pub fn main_args(args: &[String]) -> isize {\n         Some(\"html\") | None => {\n             match html::render::run(krate, &external_html,\n                                     output.unwrap_or(PathBuf::from(\"doc\")),\n-                                    passes.into_iter().collect()) {\n+                                    passes.into_iter().collect(),\n+                                    matches.opt_str(\"issue-tracker-base-url\")) {\n                 Ok(()) => {}\n                 Err(e) => panic!(\"failed to generate documentation: {}\", e),\n             }"}]}