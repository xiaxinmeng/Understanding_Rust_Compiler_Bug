{"sha": "d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5NTljOTEzZWFlYWUzNmI5ZTA0YzdiNWVlOGIzNDFmNmM1YjY3OGI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-24T14:20:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-24T14:20:22Z"}, "message": "Merge #4556\n\n4556: More highlighting improvements r=matthewjasper a=matthewjasper\n\n* Separate `true` and `false` from keywords (this matches the Textmate grammar).\r\n* Handle more cases in `highlight_name_by_syntax`.\n\nCo-authored-by: Matthew Jasper <mjjasper1@gmail.com>", "tree": {"sha": "0bee9dbb6794748dc3aebce59292cbf466010af2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bee9dbb6794748dc3aebce59292cbf466010af2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeyoKmCRBK7hj4Ov3rIwAAdHIIAD0zcD5G6P759ZZ9tkLIMAgj\nkHrAVK238uRk4RQMcB6K/xtl5RHAA2NJnZsdmX7gemyscsPD/GvN15UVy2diuGdj\nssRARC22NSM6as6RJphnqC9gx0+/yXOmQsfy8H/fe0PSgkEYBkg+X0EY/lg45CEv\nl9Vkjmhj6F8tzLnFLJ32b0oF8yOLA3jiBdBAIHkhK1TWgH01imXpttYAw8T8uv4n\nt6pDqSW7By80WYG3G7eAX4Llj3Eob7WyGxk6I7+/JhsjPFtjZjQAsgNqmlb31S1v\n0mQdiBQlyX5bd4dDr6uWAxEXqUkBlnq3zmlHMtHab2c631/Iv8Uwe2FpzJAx86s=\n=Akd9\n-----END PGP SIGNATURE-----\n", "payload": "tree 0bee9dbb6794748dc3aebce59292cbf466010af2\nparent 7e862626cc892662c3c95ba393483ac89c07e31a\nparent 1895888aec1c87096809057b19a602e1cec9ada6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1590330022 +0000\ncommitter GitHub <noreply@github.com> 1590330022 +0000\n\nMerge #4556\n\n4556: More highlighting improvements r=matthewjasper a=matthewjasper\n\n* Separate `true` and `false` from keywords (this matches the Textmate grammar).\r\n* Handle more cases in `highlight_name_by_syntax`.\n\nCo-authored-by: Matthew Jasper <mjjasper1@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "html_url": "https://github.com/rust-lang/rust/commit/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e862626cc892662c3c95ba393483ac89c07e31a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e862626cc892662c3c95ba393483ac89c07e31a", "html_url": "https://github.com/rust-lang/rust/commit/7e862626cc892662c3c95ba393483ac89c07e31a"}, {"sha": "1895888aec1c87096809057b19a602e1cec9ada6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1895888aec1c87096809057b19a602e1cec9ada6", "html_url": "https://github.com/rust-lang/rust/commit/1895888aec1c87096809057b19a602e1cec9ada6"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "68fc589bc785df55ad5a3bc06638ab4015048d67", "filename": "crates/ra_ide/src/snapshots/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -17,6 +17,7 @@\n .type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n .numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }"}, {"sha": "326744361c6800c428619671d082cf6b4d56e360", "filename": "crates/ra_ide/src/snapshots/highlight_strings.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -17,6 +17,7 @@\n .type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n .numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }"}, {"sha": "198139220efc2fe6eb8e39a78f2170eb7218cbbd", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -17,6 +17,7 @@\n .type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n .numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }\n@@ -64,7 +65,7 @@\n     <span class=\"macro\">println!</span>(<span class=\"string_literal\">\"Hello, {}!\"</span>, <span class=\"numeric_literal\">92</span>);\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> = <span class=\"unresolved_reference\">Vec</span>::<span class=\"unresolved_reference\">new</span>();\n-    <span class=\"keyword control\">if</span> <span class=\"keyword\">true</span> {\n+    <span class=\"keyword control\">if</span> <span class=\"bool_literal\">true</span> {\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> = <span class=\"numeric_literal\">92</span>;\n         <span class=\"variable mutable\">vec</span>.<span class=\"unresolved_reference\">push</span>(<span class=\"struct\">Foo</span> { <span class=\"field\">x</span>, <span class=\"field\">y</span>: <span class=\"numeric_literal\">1</span> });\n     }"}, {"sha": "2a0294f719f5030317595e103b6e0145a7a2a7e7", "filename": "crates/ra_ide/src/snapshots/rainbow_highlighting.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -17,6 +17,7 @@\n .type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n .numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }"}, {"sha": "61aeb28cbc73c05bb791dee87287ac104cfe3e41", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -413,6 +413,7 @@ fn highlight_element(\n                 | T![in] => h | HighlightModifier::ControlFlow,\n                 T![for] if !is_child_of_impl(element) => h | HighlightModifier::ControlFlow,\n                 T![unsafe] => h | HighlightModifier::Unsafe,\n+                T![true] | T![false] => HighlightTag::BoolLiteral.into(),\n                 _ => h,\n             }\n         }\n@@ -480,23 +481,31 @@ fn highlight_name(db: &RootDatabase, def: Definition) -> Highlight {\n }\n \n fn highlight_name_by_syntax(name: ast::Name) -> Highlight {\n-    let default = HighlightTag::Function.into();\n+    let default = HighlightTag::UnresolvedReference;\n \n     let parent = match name.syntax().parent() {\n         Some(it) => it,\n-        _ => return default,\n+        _ => return default.into(),\n     };\n \n-    match parent.kind() {\n-        STRUCT_DEF => HighlightTag::Struct.into(),\n-        ENUM_DEF => HighlightTag::Enum.into(),\n-        UNION_DEF => HighlightTag::Union.into(),\n-        TRAIT_DEF => HighlightTag::Trait.into(),\n-        TYPE_ALIAS_DEF => HighlightTag::TypeAlias.into(),\n-        TYPE_PARAM => HighlightTag::TypeParam.into(),\n-        RECORD_FIELD_DEF => HighlightTag::Field.into(),\n+    let tag = match parent.kind() {\n+        STRUCT_DEF => HighlightTag::Struct,\n+        ENUM_DEF => HighlightTag::Enum,\n+        UNION_DEF => HighlightTag::Union,\n+        TRAIT_DEF => HighlightTag::Trait,\n+        TYPE_ALIAS_DEF => HighlightTag::TypeAlias,\n+        TYPE_PARAM => HighlightTag::TypeParam,\n+        RECORD_FIELD_DEF => HighlightTag::Field,\n+        MODULE => HighlightTag::Module,\n+        FN_DEF => HighlightTag::Function,\n+        CONST_DEF => HighlightTag::Constant,\n+        STATIC_DEF => HighlightTag::Static,\n+        ENUM_VARIANT => HighlightTag::EnumVariant,\n+        BIND_PAT => HighlightTag::Local,\n         _ => default,\n-    }\n+    };\n+\n+    tag.into()\n }\n \n fn highlight_injection("}, {"sha": "edfe61f39a131af5309cc4eef9b8b41379c61e0d", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -76,6 +76,7 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .type_param         { color: #DFAF8F; }\n .attribute          { color: #94BFF3; }\n .numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n .macro              { color: #94BFF3; }\n .module             { color: #AFD8AF; }\n .variable           { color: #DCDCCC; }"}, {"sha": "09652a5b1ccabb031fdbbe05882119c681ba43bb", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -15,6 +15,7 @@ pub struct HighlightModifiers(u32);\n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub enum HighlightTag {\n     Attribute,\n+    BoolLiteral,\n     BuiltinType,\n     ByteLiteral,\n     CharLiteral,\n@@ -60,6 +61,7 @@ impl HighlightTag {\n     fn as_str(self) -> &'static str {\n         match self {\n             HighlightTag::Attribute => \"attribute\",\n+            HighlightTag::BoolLiteral => \"bool_literal\",\n             HighlightTag::BuiltinType => \"builtin_type\",\n             HighlightTag::ByteLiteral => \"byte_literal\",\n             HighlightTag::CharLiteral => \"char_literal\","}, {"sha": "9b775871f0e855203ba875ede69b77390a38291c", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -36,6 +36,7 @@ macro_rules! define_semantic_token_types {\n \n define_semantic_token_types![\n     (ATTRIBUTE, \"attribute\"),\n+    (BOOLEAN, \"boolean\"),\n     (BUILTIN_TYPE, \"builtinType\"),\n     (ENUM_MEMBER, \"enumMember\"),\n     (LIFETIME, \"lifetime\"),"}, {"sha": "81a347247cb6dedb17e8a21580c787f61cb6a71f", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -295,6 +295,7 @@ fn semantic_token_type_and_modifiers(\n         HighlightTag::ByteLiteral | HighlightTag::NumericLiteral => {\n             lsp_types::SemanticTokenType::NUMBER\n         }\n+        HighlightTag::BoolLiteral => semantic_tokens::BOOLEAN,\n         HighlightTag::CharLiteral | HighlightTag::StringLiteral => {\n             lsp_types::SemanticTokenType::STRING\n         }"}, {"sha": "21039ced88588000be7d4944237e62feaa797b2f", "filename": "editors/code/package.json", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/d959c913eaeae36b9e04c7b5ee8b341f6c5b678b/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=d959c913eaeae36b9e04c7b5ee8b341f6c5b678b", "patch": "@@ -644,6 +644,9 @@\n                     \"function.attribute\": [\n                         \"entity.name.function.attribute.rust\"\n                     ],\n+                    \"boolean\": [\n+                        \"constant.language.boolean.rust\"\n+                    ],\n                     \"builtinType\": [\n                         \"support.type.primitive.rust\"\n                     ],"}]}