{"sha": "3da53ab3e75b0486c1b2e4f74babea10992c4747", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYTUzYWIzZTc1YjA0ODZjMWIyZTRmNzRiYWJlYTEwOTkyYzQ3NDc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-12T17:20:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-12T17:20:27Z"}, "message": "Merge #3125\n\n3125: Add couple of utility methods r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "684845bc3e9b38ffc8e61c354aba66fdd308fc48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/684845bc3e9b38ffc8e61c354aba66fdd308fc48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3da53ab3e75b0486c1b2e4f74babea10992c4747", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRDPbCRBK7hj4Ov3rIwAAdHIIAE5ihXjvLKtWpz1UEFsY9URc\nYGiOtxClw9XB6LzJX5JcTccitMalx6mWCIrqDhZei2JvP93t4rJRuWGCMX+4dAIZ\ntNpsBPzRLJRIDxQsK8QpwM7UkykOHZxZi19mF7cFqQ5592c2HIQuQWdqE1qwNF3z\nAxUjNV2GG0L1YOPypZaMrPKPuf+9YBPWr7zWFCnBOXD2KSIZWNoWTX0cEhvEJX+J\n7Phvu9UzR985DETb0NncmNL5t8I2iGbaYH94vcg0xeegxqQX3NOxQ73xBpnmGCHO\nOjGsph1Afa9hCGddHv7F03vfTHpBdt8ZxYh7v1S/mOTDUDbFfwPvIsMSP2Sh7a0=\n=m8zR\n-----END PGP SIGNATURE-----\n", "payload": "tree 684845bc3e9b38ffc8e61c354aba66fdd308fc48\nparent 9701e597830356571303d7fae16cd523091a6042\nparent f2424f947cb10fa5bdcd33f34b4444b7ab78b07d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581528027 +0000\ncommitter GitHub <noreply@github.com> 1581528027 +0000\n\nMerge #3125\n\n3125: Add couple of utility methods r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3da53ab3e75b0486c1b2e4f74babea10992c4747", "html_url": "https://github.com/rust-lang/rust/commit/3da53ab3e75b0486c1b2e4f74babea10992c4747", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3da53ab3e75b0486c1b2e4f74babea10992c4747/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9701e597830356571303d7fae16cd523091a6042", "url": "https://api.github.com/repos/rust-lang/rust/commits/9701e597830356571303d7fae16cd523091a6042", "html_url": "https://github.com/rust-lang/rust/commit/9701e597830356571303d7fae16cd523091a6042"}, {"sha": "f2424f947cb10fa5bdcd33f34b4444b7ab78b07d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d", "html_url": "https://github.com/rust-lang/rust/commit/f2424f947cb10fa5bdcd33f34b4444b7ab78b07d"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "9506f2e1cd4ce947da8b516fca200c21746a8e49", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3da53ab3e75b0486c1b2e4f74babea10992c4747/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da53ab3e75b0486c1b2e4f74babea10992c4747/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=3da53ab3e75b0486c1b2e4f74babea10992c4747", "patch": "@@ -323,11 +323,18 @@ impl<T: Clone> InFile<&T> {\n     }\n }\n \n+impl<T> InFile<Option<T>> {\n+    pub fn transpose(self) -> Option<InFile<T>> {\n+        let value = self.value?;\n+        Some(InFile::new(self.file_id, value))\n+    }\n+}\n+\n impl InFile<SyntaxNode> {\n-    pub fn ancestors_with_macros<'a>(\n+    pub fn ancestors_with_macros(\n         self,\n-        db: &'a impl crate::db::AstDatabase,\n-    ) -> impl Iterator<Item = InFile<SyntaxNode>> + 'a {\n+        db: &impl crate::db::AstDatabase,\n+    ) -> impl Iterator<Item = InFile<SyntaxNode>> + '_ {\n         std::iter::successors(Some(self), move |node| match node.value.parent() {\n             Some(parent) => Some(node.with_value(parent)),\n             None => {\n@@ -338,6 +345,15 @@ impl InFile<SyntaxNode> {\n     }\n }\n \n+impl InFile<SyntaxToken> {\n+    pub fn ancestors_with_macros(\n+        self,\n+        db: &impl crate::db::AstDatabase,\n+    ) -> impl Iterator<Item = InFile<SyntaxNode>> + '_ {\n+        self.map(|it| it.parent()).ancestors_with_macros(db)\n+    }\n+}\n+\n impl<N: AstNode> InFile<N> {\n     pub fn descendants<T: AstNode>(self) -> impl Iterator<Item = InFile<T>> {\n         self.value.syntax().descendants().filter_map(T::cast).map(move |n| self.with_value(n))"}]}