{"sha": "38659ec6ad5f341cf8eb3139725bf695872c6de7", "node_id": "C_kwDOAAsO6NoAKDM4NjU5ZWM2YWQ1ZjM0MWNmOGViMzEzOTcyNWJmNjk1ODcyYzZkZTc", "commit": {"author": {"name": "A-Walrus", "email": "58790821+A-Walrus@users.noreply.github.com", "date": "2022-08-18T23:44:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-18T23:44:29Z"}, "message": "Unicode comment align (#5505)\n\n* Fix comment alignment with unicode\r\n\r\nAlso added tests for this behaviour\r\n\r\n* Simplify tests\r\n\r\n* Improve tests", "tree": {"sha": "464ddea39d954fc7f590b1679d7bd193b35fc64e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/464ddea39d954fc7f590b1679d7bd193b35fc64e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38659ec6ad5f341cf8eb3139725bf695872c6de7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi/s7dCRBK7hj4Ov3rIwAATSgIAFpgWZYhM5ZWRYQHKjc4G6uS\nwKlMaftfli3i/HKTJSbMuHQ+hXQDKhKi+kig5BmcmNXq09ks9h4ISC6F6MONbD5M\nw9m/bdnPCPa7LprqkSZGw4eQIa21BhgY/l5B98SABpPJMHP6aRzckFF6uNpoj2Jw\nEHJqXrn+a1Pbc/wainSRO/rLvFNQGZ5uLuO4p4uIY7mr3/JiiKf+bzkVsjuEUOP2\nSjRCdnFIYJWzSvykl1zasEpYHbRNYJlaC5HjZ2peCBJDdlnkss75Jya3tzl8xDFj\nOrFN3gNrP72SVbaWr9uBAlYj8Lt0rOfngQYjc9LZPcHtMvhvrf8Nx0tDF55NXE8=\n=xhvt\n-----END PGP SIGNATURE-----\n", "payload": "tree 464ddea39d954fc7f590b1679d7bd193b35fc64e\nparent 949da529d7a0b348376f67e77676a8722ad21899\nauthor A-Walrus <58790821+A-Walrus@users.noreply.github.com> 1660866269 +0300\ncommitter GitHub <noreply@github.com> 1660866269 -0500\n\nUnicode comment align (#5505)\n\n* Fix comment alignment with unicode\r\n\r\nAlso added tests for this behaviour\r\n\r\n* Simplify tests\r\n\r\n* Improve tests"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38659ec6ad5f341cf8eb3139725bf695872c6de7", "html_url": "https://github.com/rust-lang/rust/commit/38659ec6ad5f341cf8eb3139725bf695872c6de7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38659ec6ad5f341cf8eb3139725bf695872c6de7/comments", "author": {"login": "A-Walrus", "id": 58790821, "node_id": "MDQ6VXNlcjU4NzkwODIx", "avatar_url": "https://avatars.githubusercontent.com/u/58790821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/A-Walrus", "html_url": "https://github.com/A-Walrus", "followers_url": "https://api.github.com/users/A-Walrus/followers", "following_url": "https://api.github.com/users/A-Walrus/following{/other_user}", "gists_url": "https://api.github.com/users/A-Walrus/gists{/gist_id}", "starred_url": "https://api.github.com/users/A-Walrus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/A-Walrus/subscriptions", "organizations_url": "https://api.github.com/users/A-Walrus/orgs", "repos_url": "https://api.github.com/users/A-Walrus/repos", "events_url": "https://api.github.com/users/A-Walrus/events{/privacy}", "received_events_url": "https://api.github.com/users/A-Walrus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "949da529d7a0b348376f67e77676a8722ad21899", "url": "https://api.github.com/repos/rust-lang/rust/commits/949da529d7a0b348376f67e77676a8722ad21899", "html_url": "https://github.com/rust-lang/rust/commit/949da529d7a0b348376f67e77676a8722ad21899"}], "stats": {"total": 296, "additions": 288, "deletions": 8}, "files": [{"sha": "a878e6cf9b2fc0efe824d9e98baeda3b918c7586", "filename": "src/lists.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38659ec6ad5f341cf8eb3139725bf695872c6de7/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38659ec6ad5f341cf8eb3139725bf695872c6de7/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=38659ec6ad5f341cf8eb3139725bf695872c6de7", "patch": "@@ -297,9 +297,9 @@ where\n         } else {\n             inner_item.as_ref()\n         };\n-        let mut item_last_line_width = item_last_line.len() + item_sep_len;\n+        let mut item_last_line_width = unicode_str_width(item_last_line) + item_sep_len;\n         if item_last_line.starts_with(&**indent_str) {\n-            item_last_line_width -= indent_str.len();\n+            item_last_line_width -= unicode_str_width(indent_str);\n         }\n \n         if !item.is_substantial() {\n@@ -449,7 +449,7 @@ where\n                 } else if starts_with_newline(comment) {\n                     false\n                 } else {\n-                    comment.trim().contains('\\n') || comment.trim().len() > width\n+                    comment.trim().contains('\\n') || unicode_str_width(comment.trim()) > width\n                 };\n \n                 rewrite_comment(\n@@ -465,7 +465,7 @@ where\n             if !starts_with_newline(comment) {\n                 if formatting.align_comments {\n                     let mut comment_alignment =\n-                        post_comment_alignment(item_max_width, inner_item.len());\n+                        post_comment_alignment(item_max_width, unicode_str_width(inner_item));\n                     if first_line_width(&formatted_comment)\n                         + last_line_width(&result)\n                         + comment_alignment\n@@ -475,7 +475,7 @@ where\n                         item_max_width = None;\n                         formatted_comment = rewrite_post_comment(&mut item_max_width)?;\n                         comment_alignment =\n-                            post_comment_alignment(item_max_width, inner_item.len());\n+                            post_comment_alignment(item_max_width, unicode_str_width(inner_item));\n                     }\n                     for _ in 0..=comment_alignment {\n                         result.push(' ');\n@@ -533,7 +533,7 @@ where\n     let mut first = true;\n     for item in items.clone().into_iter().skip(i) {\n         let item = item.as_ref();\n-        let inner_item_width = item.inner_as_ref().len();\n+        let inner_item_width = unicode_str_width(item.inner_as_ref());\n         if !first\n             && (item.is_different_group()\n                 || item.post_comment.is_none()\n@@ -552,8 +552,8 @@ where\n     max_width\n }\n \n-fn post_comment_alignment(item_max_width: Option<usize>, inner_item_len: usize) -> usize {\n-    item_max_width.unwrap_or(0).saturating_sub(inner_item_len)\n+fn post_comment_alignment(item_max_width: Option<usize>, inner_item_width: usize) -> usize {\n+    item_max_width.unwrap_or(0).saturating_sub(inner_item_width)\n }\n \n pub(crate) struct ListItems<'a, I, F1, F2, F3>"}, {"sha": "e65a245ba9343990fa2cc5dd009e6cdead950833", "filename": "tests/source/comments_unicode.rs", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/38659ec6ad5f341cf8eb3139725bf695872c6de7/tests%2Fsource%2Fcomments_unicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38659ec6ad5f341cf8eb3139725bf695872c6de7/tests%2Fsource%2Fcomments_unicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcomments_unicode.rs?ref=38659ec6ad5f341cf8eb3139725bf695872c6de7", "patch": "@@ -0,0 +1,140 @@\n+impl Default for WhitespaceCharacters {\n+    fn default() -> Self {\n+        Self {\n+            space: '\u00b7',    // U+00B7\n+            nbsp: '\u237d',    // U+237D\n+            tab: '\u2192',     // U+2192\n+            newline: '\u23ce', // U+23CE\n+        }\n+    }\n+}\n+\n+const RAINBOWS: &[&str] = &[\n+    \"r\u0430in\u042c\u03bf\u0461\",    // hue: 0\n+    \"ra\u0456n\u042c\u03bfw\",     // hue: 2\n+    \"r\u0430\u0456\u0274\u042cow\",    // hue: 2\n+    \"ra\u0456\u0274\u042co\u0461\",    // hue: 8\n+    \"\u0280ain\u042cow\",      // hue: 8\n+    \"\u0280a\u0456\u0274bo\u0461\",    // hue: 8\n+    \"\u0280\u0430\u0456nb\u03bfw\",    // hue: 11\n+    \"rain\u042co\u0461\",      // hue: 14\n+    \"ra\u0456\u0274bow\",      // hue: 14\n+    \"r\u0430i\u0274\u042cow\",     // hue: 20\n+    \"ra\u0456n\u042cow\",      // hue: 26\n+    \"\u0280ai\u0274b\u03bfw\",     // hue: 32\n+    \"ra\u0456\u0274bo\u0461\",     // hue: 35\n+    \"r\u0430i\u0274bow\",      // hue: 35\n+    \"r\u0430\u0456nb\u03bfw\",     // hue: 38\n+    \"r\u0430in\u042cow\",      // hue: 47\n+    \"\u0280a\u0456nbo\u0461\",     // hue: 47\n+    \"\u0280a\u0456n\u042co\u0461\",    // hue: 47\n+    \"\u0280\u0430\u0456\u0274b\u03bfw\",   // hue: 53\n+    \"\u0280a\u0456n\u042c\u03bf\u0461\",   // hue: 57\n+    \"rai\u0274\u042co\u0461\",     // hue: 68\n+    \"\u0280ainb\u03bf\u0461\",     // hue: 68\n+    \"\u0280\u0430inbo\u0461\",     // hue: 68\n+    \"\u0280\u0430i\u0274b\u03bfw\",    // hue: 68\n+    \"\u0280\u0430\u0456nbow\",     // hue: 68\n+    \"r\u0430\u0456n\u042c\u03bf\u0461\",   // hue: 69\n+    \"\u0280ain\u042c\u03bfw\",     // hue: 71\n+    \"rai\u0274bow\",       // hue: 73\n+    \"ra\u0456n\u042co\u0461\",     // hue: 74\n+    \"r\u0430\u0456\u0274b\u03bfw\",    // hue: 77\n+    \"ra\u0456n\u042c\u03bf\u0461\",    // hue: 81\n+    \"rai\u0274\u042cow\",      // hue: 83\n+    \"\u0280ainb\u03bfw\",      // hue: 83\n+    \"\u0280\u0430inbow\",      // hue: 83\n+    \"\u0280\u0430i\u0274b\u03bf\u0461\",   // hue: 83\n+    \"\u0280\u0430\u0456nbo\u0461\",    // hue: 83\n+    \"\u0280\u0430\u0456\u0274\u042c\u03bf\u0461\", // hue: 84\n+    \"rain\u042cow\",       // hue: 85\n+    \"\u0280\u0430i\u0274\u042c\u03bfw\",   // hue: 86\n+    \"\u0280\u0430\u0456nb\u03bf\u0461\",   // hue: 89\n+    \"\u0280\u0430\u0456n\u042c\u03bfw\",   // hue: 92\n+    \"r\u0430i\u0274b\u03bfw\",     // hue: 95\n+    \"\u0280\u0430\u0456\u0274b\u03bf\u0461\",  // hue: 98\n+    \"\u0280\u0430i\u0274\u042c\u03bf\u0461\",  // hue: 99\n+    \"ra\u0456nb\u03bfw\",      // hue: 101\n+    \"\u0280\u0430\u0456\u0274\u042c\u03bfw\",  // hue: 101\n+    \"\u0280ai\u0274bo\u0461\",     // hue: 104\n+    \"\u0280\u0430inb\u03bf\u0461\",    // hue: 104\n+    \"r\u0430i\u0274b\u03bf\u0461\",    // hue: 107\n+    \"\u0280\u0430in\u042c\u03bfw\",    // hue: 107\n+    \"r\u0430i\u0274\u042c\u03bfw\",    // hue: 110\n+    \"r\u0430\u0456nbo\u0461\",     // hue: 110\n+    \"r\u0430\u0456nb\u03bf\u0461\",    // hue: 113\n+    \"\u0280ain\u042c\u03bf\u0461\",    // hue: 114\n+    \"r\u0430\u0456n\u042c\u03bfw\",    // hue: 116\n+    \"\u0280a\u0456\u0274\u042cow\",    // hue: 116\n+    \"r\u0430inb\u03bfw\",      // hue: 122\n+    \"\u0280\u0430\u0456\u0274bo\u0461\",   // hue: 125\n+    \"r\u0430inb\u03bf\u0461\",     // hue: 131\n+    \"rainbow\",        // hue: 134\n+    \"r\u0430in\u042c\u03bfw\",     // hue: 134\n+    \"\u0280\u0430i\u0274bo\u0461\",    // hue: 140\n+    \"rain\u042c\u03bf\u0461\",     // hue: 141\n+    \"ra\u0456\u0274\u042cow\",     // hue: 143\n+    \"\u0280ain\u042co\u0461\",     // hue: 143\n+    \"\u0280a\u0456\u0274bow\",     // hue: 143\n+    \"\u0280ainbow\",       // hue: 148\n+    \"r\u0430\u0456\u0274bo\u0461\",    // hue: 149\n+    \"\u0280ainbo\u0461\",      // hue: 155\n+    \"\u0280a\u0456nbow\",      // hue: 155\n+    \"\u0280a\u0456n\u042cow\",     // hue: 155\n+    \"rai\u0274b\u03bfw\",      // hue: 158\n+    \"\u0280\u0430i\u0274\u042co\u0461\",   // hue: 158\n+    \"rainb\u03bfw\",       // hue: 160\n+    \"r\u0430inbow\",       // hue: 160\n+    \"\u0280a\u0456\u0274b\u03bf\u0461\",   // hue: 164\n+    \"\u0280\u0430i\u0274bow\",     // hue: 164\n+    \"\u0280\u0430\u0456n\u042co\u0461\",   // hue: 164\n+    \"\u0280ai\u0274\u042c\u03bf\u0461\",   // hue: 165\n+    \"r\u0430i\u0274bo\u0461\",     // hue: 167\n+    \"\u0280a\u0456\u0274\u042c\u03bfw\",   // hue: 167\n+    \"\u0280a\u0456\u0274\u042c\u03bf\u0461\",  // hue: 171\n+    \"ra\u0456nbo\u0461\",      // hue: 173\n+    \"\u0280\u0430\u0456\u0274\u042co\u0461\",  // hue: 173\n+    \"r\u0430\u0456\u0274b\u03bf\u0461\",   // hue: 176\n+    \"\u0280\u0430in\u042cow\",     // hue: 176\n+    \"r\u0430i\u0274\u042c\u03bf\u0461\",   // hue: 177\n+    \"r\u0430\u0456\u0274\u042c\u03bfw\",   // hue: 179\n+    \"\u0280\u0430in\u042co\u0461\",    // hue: 179\n+    \"\u0280\u0430\u0456\u0274bow\",    // hue: 179\n+    \"r\u0430i\u0274\u042co\u0461\",    // hue: 182\n+    \"ra\u0456\u0274b\u03bf\u0461\",    // hue: 188\n+    \"r\u0430\u0456n\u042co\u0461\",    // hue: 188\n+    \"rai\u0274\u042c\u03bf\u0461\",    // hue: 189\n+    \"ra\u0456\u0274\u042c\u03bfw\",    // hue: 191\n+    \"\u0280a\u0456\u0274b\u03bfw\",    // hue: 191\n+    \"\u0280\u0430\u0456n\u042cow\",    // hue: 191\n+    \"rainb\u03bf\u0461\",      // hue: 194\n+    \"r\u0430inbo\u0461\",      // hue: 194\n+    \"r\u0430\u0456nbow\",      // hue: 194\n+    \"rain\u042c\u03bfw\",      // hue: 197\n+    \"r\u0430in\u042co\u0461\",     // hue: 206\n+    \"r\u0430\u0456\u0274bow\",     // hue: 206\n+    \"r\u0430\u0456\u0274\u042c\u03bf\u0461\",  // hue: 210\n+    \"\u0280ai\u0274\u042cow\",     // hue: 212\n+    \"ra\u0456\u0274b\u03bfw\",     // hue: 218\n+    \"r\u0430\u0456n\u042cow\",     // hue: 218\n+    \"\u0280ai\u0274b\u03bf\u0461\",    // hue: 221\n+    \"\u0280ai\u0274\u042c\u03bfw\",    // hue: 224\n+    \"\u0280a\u0456nb\u03bf\u0461\",    // hue: 227\n+    \"rai\u0274bo\u0461\",      // hue: 230\n+    \"\u0280a\u0456nb\u03bfw\",     // hue: 230\n+    \"\u0280a\u0456n\u042c\u03bfw\",    // hue: 230\n+    \"\u0280\u0430in\u042c\u03bf\u0461\",   // hue: 231\n+    \"rainbo\u0461\",       // hue: 232\n+    \"ra\u0456nbow\",       // hue: 232\n+    \"\u0280\u0430\u0456\u0274\u042cow\",   // hue: 233\n+    \"\u0280a\u0456\u0274\u042co\u0461\",   // hue: 239\n+    \"\u0280\u0430\u0456n\u042c\u03bf\u0461\",  // hue: 246\n+    \"rai\u0274b\u03bf\u0461\",     // hue: 248\n+    \"\u0280\u0430i\u0274\u042cow\",    // hue: 248\n+    \"ra\u0456\u0274\u042c\u03bf\u0461\",   // hue: 249\n+    \"rai\u0274\u042c\u03bfw\",     // hue: 251\n+    \"r\u0430\u0456\u0274\u042co\u0461\",   // hue: 251\n+    \"\u0280ai\u0274bow\",      // hue: 251\n+    \"\u0280\u0430inb\u03bfw\",     // hue: 251\n+    \"ra\u0456nb\u03bf\u0461\",     // hue: 254\n+];"}, {"sha": "3e1b6b0a28fe4c9f44726ca8ae8961f576eca70c", "filename": "tests/target/comments_unicode.rs", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/38659ec6ad5f341cf8eb3139725bf695872c6de7/tests%2Ftarget%2Fcomments_unicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38659ec6ad5f341cf8eb3139725bf695872c6de7/tests%2Ftarget%2Fcomments_unicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomments_unicode.rs?ref=38659ec6ad5f341cf8eb3139725bf695872c6de7", "patch": "@@ -0,0 +1,140 @@\n+impl Default for WhitespaceCharacters {\n+    fn default() -> Self {\n+        Self {\n+            space: '\u00b7',   // U+00B7\n+            nbsp: '\u237d',    // U+237D\n+            tab: '\u2192',     // U+2192\n+            newline: '\u23ce', // U+23CE\n+        }\n+    }\n+}\n+\n+const RAINBOWS: &[&str] = &[\n+    \"r\u0430in\u042c\u03bf\u0461\", // hue: 0\n+    \"ra\u0456n\u042c\u03bfw\", // hue: 2\n+    \"r\u0430\u0456\u0274\u042cow\", // hue: 2\n+    \"ra\u0456\u0274\u042co\u0461\", // hue: 8\n+    \"\u0280ain\u042cow\", // hue: 8\n+    \"\u0280a\u0456\u0274bo\u0461\", // hue: 8\n+    \"\u0280\u0430\u0456nb\u03bfw\", // hue: 11\n+    \"rain\u042co\u0461\", // hue: 14\n+    \"ra\u0456\u0274bow\", // hue: 14\n+    \"r\u0430i\u0274\u042cow\", // hue: 20\n+    \"ra\u0456n\u042cow\", // hue: 26\n+    \"\u0280ai\u0274b\u03bfw\", // hue: 32\n+    \"ra\u0456\u0274bo\u0461\", // hue: 35\n+    \"r\u0430i\u0274bow\", // hue: 35\n+    \"r\u0430\u0456nb\u03bfw\", // hue: 38\n+    \"r\u0430in\u042cow\", // hue: 47\n+    \"\u0280a\u0456nbo\u0461\", // hue: 47\n+    \"\u0280a\u0456n\u042co\u0461\", // hue: 47\n+    \"\u0280\u0430\u0456\u0274b\u03bfw\", // hue: 53\n+    \"\u0280a\u0456n\u042c\u03bf\u0461\", // hue: 57\n+    \"rai\u0274\u042co\u0461\", // hue: 68\n+    \"\u0280ainb\u03bf\u0461\", // hue: 68\n+    \"\u0280\u0430inbo\u0461\", // hue: 68\n+    \"\u0280\u0430i\u0274b\u03bfw\", // hue: 68\n+    \"\u0280\u0430\u0456nbow\", // hue: 68\n+    \"r\u0430\u0456n\u042c\u03bf\u0461\", // hue: 69\n+    \"\u0280ain\u042c\u03bfw\", // hue: 71\n+    \"rai\u0274bow\", // hue: 73\n+    \"ra\u0456n\u042co\u0461\", // hue: 74\n+    \"r\u0430\u0456\u0274b\u03bfw\", // hue: 77\n+    \"ra\u0456n\u042c\u03bf\u0461\", // hue: 81\n+    \"rai\u0274\u042cow\", // hue: 83\n+    \"\u0280ainb\u03bfw\", // hue: 83\n+    \"\u0280\u0430inbow\", // hue: 83\n+    \"\u0280\u0430i\u0274b\u03bf\u0461\", // hue: 83\n+    \"\u0280\u0430\u0456nbo\u0461\", // hue: 83\n+    \"\u0280\u0430\u0456\u0274\u042c\u03bf\u0461\", // hue: 84\n+    \"rain\u042cow\", // hue: 85\n+    \"\u0280\u0430i\u0274\u042c\u03bfw\", // hue: 86\n+    \"\u0280\u0430\u0456nb\u03bf\u0461\", // hue: 89\n+    \"\u0280\u0430\u0456n\u042c\u03bfw\", // hue: 92\n+    \"r\u0430i\u0274b\u03bfw\", // hue: 95\n+    \"\u0280\u0430\u0456\u0274b\u03bf\u0461\", // hue: 98\n+    \"\u0280\u0430i\u0274\u042c\u03bf\u0461\", // hue: 99\n+    \"ra\u0456nb\u03bfw\", // hue: 101\n+    \"\u0280\u0430\u0456\u0274\u042c\u03bfw\", // hue: 101\n+    \"\u0280ai\u0274bo\u0461\", // hue: 104\n+    \"\u0280\u0430inb\u03bf\u0461\", // hue: 104\n+    \"r\u0430i\u0274b\u03bf\u0461\", // hue: 107\n+    \"\u0280\u0430in\u042c\u03bfw\", // hue: 107\n+    \"r\u0430i\u0274\u042c\u03bfw\", // hue: 110\n+    \"r\u0430\u0456nbo\u0461\", // hue: 110\n+    \"r\u0430\u0456nb\u03bf\u0461\", // hue: 113\n+    \"\u0280ain\u042c\u03bf\u0461\", // hue: 114\n+    \"r\u0430\u0456n\u042c\u03bfw\", // hue: 116\n+    \"\u0280a\u0456\u0274\u042cow\", // hue: 116\n+    \"r\u0430inb\u03bfw\", // hue: 122\n+    \"\u0280\u0430\u0456\u0274bo\u0461\", // hue: 125\n+    \"r\u0430inb\u03bf\u0461\", // hue: 131\n+    \"rainbow\", // hue: 134\n+    \"r\u0430in\u042c\u03bfw\", // hue: 134\n+    \"\u0280\u0430i\u0274bo\u0461\", // hue: 140\n+    \"rain\u042c\u03bf\u0461\", // hue: 141\n+    \"ra\u0456\u0274\u042cow\", // hue: 143\n+    \"\u0280ain\u042co\u0461\", // hue: 143\n+    \"\u0280a\u0456\u0274bow\", // hue: 143\n+    \"\u0280ainbow\", // hue: 148\n+    \"r\u0430\u0456\u0274bo\u0461\", // hue: 149\n+    \"\u0280ainbo\u0461\", // hue: 155\n+    \"\u0280a\u0456nbow\", // hue: 155\n+    \"\u0280a\u0456n\u042cow\", // hue: 155\n+    \"rai\u0274b\u03bfw\", // hue: 158\n+    \"\u0280\u0430i\u0274\u042co\u0461\", // hue: 158\n+    \"rainb\u03bfw\", // hue: 160\n+    \"r\u0430inbow\", // hue: 160\n+    \"\u0280a\u0456\u0274b\u03bf\u0461\", // hue: 164\n+    \"\u0280\u0430i\u0274bow\", // hue: 164\n+    \"\u0280\u0430\u0456n\u042co\u0461\", // hue: 164\n+    \"\u0280ai\u0274\u042c\u03bf\u0461\", // hue: 165\n+    \"r\u0430i\u0274bo\u0461\", // hue: 167\n+    \"\u0280a\u0456\u0274\u042c\u03bfw\", // hue: 167\n+    \"\u0280a\u0456\u0274\u042c\u03bf\u0461\", // hue: 171\n+    \"ra\u0456nbo\u0461\", // hue: 173\n+    \"\u0280\u0430\u0456\u0274\u042co\u0461\", // hue: 173\n+    \"r\u0430\u0456\u0274b\u03bf\u0461\", // hue: 176\n+    \"\u0280\u0430in\u042cow\", // hue: 176\n+    \"r\u0430i\u0274\u042c\u03bf\u0461\", // hue: 177\n+    \"r\u0430\u0456\u0274\u042c\u03bfw\", // hue: 179\n+    \"\u0280\u0430in\u042co\u0461\", // hue: 179\n+    \"\u0280\u0430\u0456\u0274bow\", // hue: 179\n+    \"r\u0430i\u0274\u042co\u0461\", // hue: 182\n+    \"ra\u0456\u0274b\u03bf\u0461\", // hue: 188\n+    \"r\u0430\u0456n\u042co\u0461\", // hue: 188\n+    \"rai\u0274\u042c\u03bf\u0461\", // hue: 189\n+    \"ra\u0456\u0274\u042c\u03bfw\", // hue: 191\n+    \"\u0280a\u0456\u0274b\u03bfw\", // hue: 191\n+    \"\u0280\u0430\u0456n\u042cow\", // hue: 191\n+    \"rainb\u03bf\u0461\", // hue: 194\n+    \"r\u0430inbo\u0461\", // hue: 194\n+    \"r\u0430\u0456nbow\", // hue: 194\n+    \"rain\u042c\u03bfw\", // hue: 197\n+    \"r\u0430in\u042co\u0461\", // hue: 206\n+    \"r\u0430\u0456\u0274bow\", // hue: 206\n+    \"r\u0430\u0456\u0274\u042c\u03bf\u0461\", // hue: 210\n+    \"\u0280ai\u0274\u042cow\", // hue: 212\n+    \"ra\u0456\u0274b\u03bfw\", // hue: 218\n+    \"r\u0430\u0456n\u042cow\", // hue: 218\n+    \"\u0280ai\u0274b\u03bf\u0461\", // hue: 221\n+    \"\u0280ai\u0274\u042c\u03bfw\", // hue: 224\n+    \"\u0280a\u0456nb\u03bf\u0461\", // hue: 227\n+    \"rai\u0274bo\u0461\", // hue: 230\n+    \"\u0280a\u0456nb\u03bfw\", // hue: 230\n+    \"\u0280a\u0456n\u042c\u03bfw\", // hue: 230\n+    \"\u0280\u0430in\u042c\u03bf\u0461\", // hue: 231\n+    \"rainbo\u0461\", // hue: 232\n+    \"ra\u0456nbow\", // hue: 232\n+    \"\u0280\u0430\u0456\u0274\u042cow\", // hue: 233\n+    \"\u0280a\u0456\u0274\u042co\u0461\", // hue: 239\n+    \"\u0280\u0430\u0456n\u042c\u03bf\u0461\", // hue: 246\n+    \"rai\u0274b\u03bf\u0461\", // hue: 248\n+    \"\u0280\u0430i\u0274\u042cow\", // hue: 248\n+    \"ra\u0456\u0274\u042c\u03bf\u0461\", // hue: 249\n+    \"rai\u0274\u042c\u03bfw\", // hue: 251\n+    \"r\u0430\u0456\u0274\u042co\u0461\", // hue: 251\n+    \"\u0280ai\u0274bow\", // hue: 251\n+    \"\u0280\u0430inb\u03bfw\", // hue: 251\n+    \"ra\u0456nb\u03bf\u0461\", // hue: 254\n+];"}]}