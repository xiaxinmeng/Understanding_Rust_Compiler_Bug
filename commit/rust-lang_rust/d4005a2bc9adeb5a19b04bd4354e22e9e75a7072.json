{"sha": "d4005a2bc9adeb5a19b04bd4354e22e9e75a7072", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MDA1YTJiYzlhZGViNWExOWIwNGJkNDM1NGUyMmU5ZTc1YTcwNzI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-07T11:11:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-15T11:06:30Z"}, "message": "thread borrow-set around more", "tree": {"sha": "3c47f410608f58143dbec869bdea668a6a2c9fc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c47f410608f58143dbec869bdea668a6a2c9fc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072", "html_url": "https://github.com/rust-lang/rust/commit/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a849da626d8e47265e6a70e1ff24997b935626bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a849da626d8e47265e6a70e1ff24997b935626bd", "html_url": "https://github.com/rust-lang/rust/commit/a849da626d8e47265e6a70e1ff24997b935626bd"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "04f4aaf1332e9375b1c0b9938bd39c156a2bb6b9", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=d4005a2bc9adeb5a19b04bd4354e22e9e75a7072", "patch": "@@ -193,7 +193,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         |bd, i| DebugFormatted::new(&bd.move_data().inits[i]),\n     ));\n \n-    let borrow_set = BorrowSet::build(tcx, mir);\n+    let borrow_set = Rc::new(BorrowSet::build(tcx, mir));\n \n     // If we are in non-lexical mode, compute the non-lexical lifetimes.\n     let (opt_regioncx, opt_closure_req) = if let Some(free_regions) = free_regions {\n@@ -205,6 +205,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n             param_env,\n             &mut flow_inits,\n             &mdpe.move_data,\n+            &borrow_set,\n         );\n         (Some(Rc::new(regioncx)), opt_closure_req)\n     } else {\n@@ -219,16 +220,16 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         id,\n         &attributes,\n         &dead_unwinds,\n-        Borrows::new(tcx, mir, opt_regioncx.clone(), def_id, body_id, borrow_set),\n+        Borrows::new(tcx, mir, opt_regioncx.clone(), def_id, body_id, &borrow_set),\n         |rs, i| DebugFormatted::new(&rs.location(i)),\n     ));\n \n-    let movable_generator = !match tcx.hir.get(id) {\n+    let movable_generator = match tcx.hir.get(id) {\n         hir::map::Node::NodeExpr(&hir::Expr {\n             node: hir::ExprClosure(.., Some(hir::GeneratorMovability::Static)),\n             ..\n-        }) => true,\n-        _ => false,\n+        }) => false,\n+        _ => true,\n     };\n \n     let dominators = mir.dominators();"}, {"sha": "3ca1bd23e86ef4c9556ebcc289dabd076a53354a", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=d4005a2bc9adeb5a19b04bd4354e22e9e75a7072", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use borrow_check::borrow_set::BorrowSet;\n use rustc::hir::def_id::DefId;\n use rustc::mir::{ClosureRegionRequirements, ClosureOutlivesSubject, Mir};\n use rustc::infer::InferCtxt;\n@@ -73,6 +74,7 @@ pub(in borrow_check) fn compute_regions<'cx, 'gcx, 'tcx>(\n     param_env: ty::ParamEnv<'gcx>,\n     flow_inits: &mut FlowAtLocation<MaybeInitializedPlaces<'cx, 'gcx, 'tcx>>,\n     move_data: &MoveData<'tcx>,\n+    _borrow_set: &BorrowSet<'tcx>,\n ) -> (\n     RegionInferenceContext<'tcx>,\n     Option<ClosureRegionRequirements<'gcx>>,"}, {"sha": "b1fa7eeb3a5501359a8513c15dde370ce30b3ed5", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4005a2bc9adeb5a19b04bd4354e22e9e75a7072/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=d4005a2bc9adeb5a19b04bd4354e22e9e75a7072", "patch": "@@ -47,7 +47,7 @@ pub struct Borrows<'a, 'gcx: 'tcx, 'tcx: 'a> {\n     scope_tree: Lrc<region::ScopeTree>,\n     root_scope: Option<region::Scope>,\n \n-    borrow_set: BorrowSet<'tcx>,\n+    borrow_set: Rc<BorrowSet<'tcx>>,\n \n     /// NLL region inference context with which NLL queries should be resolved\n     nonlexical_regioncx: Option<Rc<RegionInferenceContext<'tcx>>>,\n@@ -60,7 +60,7 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n         nonlexical_regioncx: Option<Rc<RegionInferenceContext<'tcx>>>,\n         def_id: DefId,\n         body_id: Option<hir::BodyId>,\n-        borrow_set: BorrowSet<'tcx>\n+        borrow_set: &Rc<BorrowSet<'tcx>>\n     ) -> Self {\n         let scope_tree = tcx.region_scope_tree(def_id);\n         let root_scope = body_id.map(|body_id| {\n@@ -70,7 +70,7 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n         Borrows {\n             tcx: tcx,\n             mir: mir,\n-            borrow_set,\n+            borrow_set: borrow_set.clone(),\n             scope_tree,\n             root_scope,\n             nonlexical_regioncx,"}]}