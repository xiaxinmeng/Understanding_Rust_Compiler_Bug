{"sha": "10737a5a45ed9a1d9ae73b996fae893da1d62512", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNzM3YTVhNDVlZDlhMWQ5YWU3M2I5OTZmYWU4OTNkYTFkNjI1MTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-02T14:38:33Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-02T14:38:33Z"}, "message": "`* as char` assumes `*` to be of type `u8`", "tree": {"sha": "22109f1fcc515d9c55da443bf8300ced901232f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22109f1fcc515d9c55da443bf8300ced901232f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10737a5a45ed9a1d9ae73b996fae893da1d62512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10737a5a45ed9a1d9ae73b996fae893da1d62512", "html_url": "https://github.com/rust-lang/rust/commit/10737a5a45ed9a1d9ae73b996fae893da1d62512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10737a5a45ed9a1d9ae73b996fae893da1d62512/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf51eafbef4d949673a17ae1f2cc478bcc8c0b58", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf51eafbef4d949673a17ae1f2cc478bcc8c0b58", "html_url": "https://github.com/rust-lang/rust/commit/bf51eafbef4d949673a17ae1f2cc478bcc8c0b58"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "21eb06dfb97d1b3bdac55d5576ef75e1794d9cbe", "filename": "src/librustc_const_eval/eval.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/10737a5a45ed9a1d9ae73b996fae893da1d62512/src%2Flibrustc_const_eval%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10737a5a45ed9a1d9ae73b996fae893da1d62512/src%2Flibrustc_const_eval%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Feval.rs?ref=10737a5a45ed9a1d9ae73b996fae893da1d62512", "patch": "@@ -408,7 +408,7 @@ pub enum ErrKind {\n     TypeMismatch(String, ConstInt),\n     BadType(ConstVal),\n     ErroneousReferencedConstant(Box<ConstEvalErr>),\n-    BadCharValue,\n+    CharCast(ConstInt),\n }\n \n impl From<ConstMathErr> for ErrKind {\n@@ -469,7 +469,9 @@ impl ConstEvalErr {\n             },\n             BadType(ref i) => format!(\"value of wrong type: {:?}\", i).into_cow(),\n             ErroneousReferencedConstant(_) => \"could not evaluate referenced constant\".into_cow(),\n-            BadCharValue => \"invalid numeric value for char\".into_cow(),\n+            CharCast(ref got) => {\n+                format!(\"only `u8` can be cast as `char`, not `{}`\", got.description()).into_cow()\n+            },\n         }\n     }\n }\n@@ -1080,16 +1082,19 @@ fn cast_const_int<'tcx>(tcx: &TyCtxt<'tcx>, val: ConstInt, ty: ty::Ty) -> CastRe\n         ty::TyFloat(ast::FloatTy::F64) => match val.erase_type() {\n             Infer(u) => Ok(Float(u as f64)),\n             InferSigned(i) => Ok(Float(i as f64)),\n-            _ => unreachable!(),\n+            _ => bug!(\"ConstInt::erase_type returned something other than Infer/InferSigned\"),\n         },\n         ty::TyFloat(ast::FloatTy::F32) => match val.erase_type() {\n             Infer(u) => Ok(Float(u as f32 as f64)),\n             InferSigned(i) => Ok(Float(i as f32 as f64)),\n-            _ => unreachable!(),\n+            _ => bug!(\"ConstInt::erase_type returned something other than Infer/InferSigned\"),\n         },\n         ty::TyRawPtr(_) => Err(ErrKind::UnimplementedConstVal(\"casting an address to a raw ptr\")),\n-        ty::TyChar if v as u32 as u64 == v => ::std::char::from_u32(v as u32).map(Char)\n-                                                                             .ok_or(BadCharValue),\n+        ty::TyChar => match infer(val, tcx, &ty::TyUint(ast::UintTy::U8)) {\n+            Ok(U8(u)) => Ok(Char(u as char)),\n+            // can only occur before typeck, typeck blocks `T as char` for `T` != `u8`\n+            _ => Err(CharCast(val)),\n+        },\n         _ => Err(CannotCast),\n     }\n }"}]}