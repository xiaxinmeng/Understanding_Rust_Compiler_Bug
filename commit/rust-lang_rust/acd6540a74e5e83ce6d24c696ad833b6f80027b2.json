{"sha": "acd6540a74e5e83ce6d24c696ad833b6f80027b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZDY1NDBhNzRlNWU4M2NlNmQyNGM2OTZhZDgzM2I2ZjgwMDI3YjI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-04T00:39:58Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-09T17:17:29Z"}, "message": "Tweak wording", "tree": {"sha": "b757e711f3112bd9869a8d0a697b0444281543bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b757e711f3112bd9869a8d0a697b0444281543bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acd6540a74e5e83ce6d24c696ad833b6f80027b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acd6540a74e5e83ce6d24c696ad833b6f80027b2", "html_url": "https://github.com/rust-lang/rust/commit/acd6540a74e5e83ce6d24c696ad833b6f80027b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acd6540a74e5e83ce6d24c696ad833b6f80027b2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d6d978baa3abb56ad56d481ab994698069626d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d6d978baa3abb56ad56d481ab994698069626d9", "html_url": "https://github.com/rust-lang/rust/commit/6d6d978baa3abb56ad56d481ab994698069626d9"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "ecd27fa99676d21e374e01653dd0ac317dd034db", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -1164,9 +1164,10 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         );\n                     } else {\n                         err.note(&format!(\n-                            \"`{}` is implemented for `{:?}`\",\n+                            \"`{}` is implemented for `{:?}`, but not for `{:?}`\",\n                             trait_ref,\n                             trait_type,\n+                            trait_ref.skip_binder().self_ty(),\n                         ));\n                     }\n                 }"}, {"sha": "0ffccc03e0418a397a9ec1bb25c4b876231e1d1a", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -582,7 +582,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         hir::Mutability::MutImmutable => self.tcx.mk_mut_ref(region, t_type),\n                     };\n                     if needs_mut {\n-                        err.note(&format!(\"you need `{}` instead\", trait_type));\n+                        err.note(&format!(\"you need `{}` instead of `{}`\", trait_type, rcvr_ty));\n                     }\n                 }\n                 err.emit();"}, {"sha": "2362ccd32de994d0239ba0ce9ac3a336273d7a09", "filename": "src/test/ui/not-panic/not-panic-safe.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fnot-panic%2Fnot-panic-safe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fnot-panic%2Fnot-panic-safe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnot-panic%2Fnot-panic-safe.stderr?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -8,7 +8,7 @@ LL |     assert::<&mut i32>();\n    |     ^^^^^^^^^^^^^^^^^^ `&mut i32` may not be safely transferred across an unwind boundary\n    |\n    = help: the trait `std::panic::UnwindSafe` is not implemented for `&mut i32`\n-   = note: `std::panic::UnwindSafe` is implemented for `&i32`\n+   = note: `std::panic::UnwindSafe` is implemented for `&i32`, but not for `&mut i32`\n \n error: aborting due to previous error\n "}, {"sha": "dc6e1e6e972cc87806eef9e5b21a55ce297c553f", "filename": "src/test/ui/parser/lex-bad-char-literals-6.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-6.stderr?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -35,7 +35,7 @@ LL |     if x == y {}\n    |          ^^ no implementation for `&str == char`\n    |\n    = help: the trait `std::cmp::PartialEq<char>` is not implemented for `&str`\n-   = note: `std::cmp::PartialEq<char>` is implemented for `&mut str`\n+   = note: `std::cmp::PartialEq<char>` is implemented for `&mut str`, but not for `&str`\n \n error[E0308]: mismatched types\n   --> $DIR/lex-bad-char-literals-6.rs:15:20\n@@ -53,7 +53,7 @@ LL |     if x == z {}\n    |          ^^ no implementation for `&str == char`\n    |\n    = help: the trait `std::cmp::PartialEq<char>` is not implemented for `&str`\n-   = note: `std::cmp::PartialEq<char>` is implemented for `&mut str`\n+   = note: `std::cmp::PartialEq<char>` is implemented for `&mut str`, but not for `&str`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "9185eaa65c06d02a7f186b5a6604108614248105", "filename": "src/test/ui/suggestions/imm-ref-trait-object.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object.stderr?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -4,7 +4,7 @@ error: the `min` method cannot be invoked on a trait object\n LL |      t.min().unwrap()\n    |        ^^^\n    |\n-   = note: you need `&mut dyn std::iter::Iterator<Item = &u64>` instead\n+   = note: you need `&mut dyn std::iter::Iterator<Item = &u64>` instead of `&dyn std::iter::Iterator<Item = &u64>`\n \n error: aborting due to previous error\n "}, {"sha": "a1e1f4d13572a703736c33b7dbf8cdb5d53bfff4", "filename": "src/test/ui/suggestions/into-str.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Finto-str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Finto-str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Finto-str.stderr?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -8,7 +8,7 @@ LL |     foo(String::new());\n    |     ^^^ the trait `std::convert::From<std::string::String>` is not implemented for `&str`\n    |\n    = note: to coerce a `std::string::String` into a `&str`, use `&*` as a prefix\n-   = note: `std::convert::From<std::string::String>` is implemented for `&mut str`\n+   = note: `std::convert::From<std::string::String>` is implemented for `&mut str`, but not for `&str`\n    = note: required because of the requirements on the impl of `std::convert::Into<&str>` for `std::string::String`\n \n error: aborting due to previous error"}, {"sha": "daa8e1162d197a54187ab4c548351cff66f93928", "filename": "src/test/ui/suggestions/mut-borrow-needed-by-trait.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -4,7 +4,7 @@ error[E0277]: the trait bound `&dyn std::io::Write: std::io::Write` is not satis\n LL |     let fp = BufWriter::new(fp);\n    |                             ^^ the trait `std::io::Write` is not implemented for `&dyn std::io::Write`\n    |\n-   = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`\n+   = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`, but not for `&dyn std::io::Write`\n    = note: required by `std::io::BufWriter::<W>::new`\n \n error[E0277]: the trait bound `&dyn std::io::Write: std::io::Write` is not satisfied\n@@ -13,7 +13,7 @@ error[E0277]: the trait bound `&dyn std::io::Write: std::io::Write` is not satis\n LL |     let fp = BufWriter::new(fp);\n    |              ^^^^^^^^^^^^^^ the trait `std::io::Write` is not implemented for `&dyn std::io::Write`\n    |\n-   = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`\n+   = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`, but not for `&dyn std::io::Write`\n    = note: required by `std::io::BufWriter`\n \n error[E0277]: the trait bound `&dyn std::io::Write: std::io::Write` is not satisfied\n@@ -22,7 +22,7 @@ error[E0277]: the trait bound `&dyn std::io::Write: std::io::Write` is not satis\n LL |     let fp = BufWriter::new(fp);\n    |              ^^^^^^^^^^^^^^^^^^ the trait `std::io::Write` is not implemented for `&dyn std::io::Write`\n    |\n-   = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`\n+   = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`, but not for `&dyn std::io::Write`\n    = note: required by `std::io::BufWriter`\n \n error[E0599]: no method named `write_fmt` found for type `std::io::BufWriter<&dyn std::io::Write>` in the current scope"}, {"sha": "04d17a16cc356c0090dff946297ef1fbd372d895", "filename": "src/test/ui/suggestions/suggest-remove-refs-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acd6540a74e5e83ce6d24c696ad833b6f80027b2/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-remove-refs-1.stderr?ref=acd6540a74e5e83ce6d24c696ad833b6f80027b2", "patch": "@@ -8,7 +8,7 @@ LL |     for (i, n) in &v.iter().enumerate() {\n    |                   help: consider removing 1 leading `&`-references\n    |\n    = help: the trait `std::iter::Iterator` is not implemented for `&std::iter::Enumerate<std::slice::Iter<'_, {integer}>>`\n-   = note: `std::iter::Iterator` is implemented for `&mut std::iter::Enumerate<std::slice::Iter<'_, {integer}>>`\n+   = note: `std::iter::Iterator` is implemented for `&mut std::iter::Enumerate<std::slice::Iter<'_, {integer}>>`, but not for `&std::iter::Enumerate<std::slice::Iter<'_, {integer}>>`\n    = note: required by `std::iter::IntoIterator::into_iter`\n \n error: aborting due to previous error"}]}