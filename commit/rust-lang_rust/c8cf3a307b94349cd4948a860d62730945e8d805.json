{"sha": "c8cf3a307b94349cd4948a860d62730945e8d805", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4Y2YzYTMwN2I5NDM0OWNkNDk0OGE4NjBkNjI3MzA5NDVlOGQ4MDU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-31T03:49:26Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-01T03:50:27Z"}, "message": "rustc: replace `pick` alias with an unboxed closure", "tree": {"sha": "27a43cac33f0a3e0d2976aa1cac8efa0e1e3b3cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27a43cac33f0a3e0d2976aa1cac8efa0e1e3b3cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8cf3a307b94349cd4948a860d62730945e8d805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8cf3a307b94349cd4948a860d62730945e8d805", "html_url": "https://github.com/rust-lang/rust/commit/c8cf3a307b94349cd4948a860d62730945e8d805", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8cf3a307b94349cd4948a860d62730945e8d805/comments", "author": null, "committer": null, "parents": [{"sha": "1d21dad1d29d57875ff47b38e5894668f5bec6f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d21dad1d29d57875ff47b38e5894668f5bec6f9", "html_url": "https://github.com/rust-lang/rust/commit/1d21dad1d29d57875ff47b38e5894668f5bec6f9"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "82071931fe3a654253b4907350f2c321d22efd38", "filename": "src/librustc/metadata/filesearch.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8cf3a307b94349cd4948a860d62730945e8d805/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8cf3a307b94349cd4948a860d62730945e8d805/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ffilesearch.rs?ref=c8cf3a307b94349cd4948a860d62730945e8d805", "patch": "@@ -30,10 +30,6 @@ pub enum FileMatch {\n // FIXME (#2658): I'm not happy how this module turned out. Should\n // probably just be folded into cstore.\n \n-/// Functions with type `pick` take a parent directory as well as\n-/// a file found in that directory.\n-pub type pick<'a> = |path: &Path|: 'a -> FileMatch;\n-\n pub struct FileSearch<'a> {\n     pub sysroot: &'a Path,\n     pub search_paths: &'a SearchPaths,\n@@ -95,7 +91,7 @@ impl<'a> FileSearch<'a> {\n         make_target_lib_path(self.sysroot, self.triple)\n     }\n \n-    pub fn search(&self, pick: pick) {\n+    pub fn search<F>(&self, mut pick: F) where F: FnMut(&Path) -> FileMatch {\n         self.for_each_lib_search_path(|lib_search_path| {\n             debug!(\"searching {}\", lib_search_path.display());\n             match fs::readdir(lib_search_path) {"}]}