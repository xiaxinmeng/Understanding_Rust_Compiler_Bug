{"sha": "cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b", "node_id": "C_kwDOAAsO6NoAKGNkM2JjYmI4ZTVmYjk3YTgzY2FhYjc1NTYxNzVhN2Q2YjNkMDYzMmI", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-02-10T13:43:29Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-02-10T13:44:46Z"}, "message": "add `AliasEq` to `PredicateKind`", "tree": {"sha": "9f612a5f6458b3c44a074a2c22f55af365881723", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f612a5f6458b3c44a074a2c22f55af365881723"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b", "html_url": "https://github.com/rust-lang/rust/commit/cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "821199c885b4e3648682ac41c1d32b832407112f", "url": "https://api.github.com/repos/rust-lang/rust/commits/821199c885b4e3648682ac41c1d32b832407112f", "html_url": "https://github.com/rust-lang/rust/commit/821199c885b4e3648682ac41c1d32b832407112f"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "26b1d01974990449c3a5f22ba782e2e9066a7863", "filename": "clippy_utils/src/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs?ref=cd3bcbb8e5fb97a83caab7556175a7d6b3d0632b", "patch": "@@ -36,6 +36,7 @@ pub fn is_min_const_fn<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>, msrv: &Msrv)\n                 | ty::PredicateKind::ConstEvaluatable(..)\n                 | ty::PredicateKind::ConstEquate(..)\n                 | ty::PredicateKind::TypeWellFormedFromEnv(..) => continue,\n+                ty::PredicateKind::AliasEq(..) => panic!(\"alias eq predicate on function: {predicate:#?}\"),\n                 ty::PredicateKind::ObjectSafe(_) => panic!(\"object safe predicate on function: {predicate:#?}\"),\n                 ty::PredicateKind::ClosureKind(..) => panic!(\"closure kind predicate on function: {predicate:#?}\"),\n                 ty::PredicateKind::Subtype(_) => panic!(\"subtype predicate on function: {predicate:#?}\"),"}]}