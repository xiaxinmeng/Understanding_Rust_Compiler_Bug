{"sha": "46b63c462d66925b59c0af7dec2eb3c48bc7be25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YjYzYzQ2MmQ2NjkyNWI1OWMwYWY3ZGVjMmViM2M0OGJjN2JlMjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-27T19:20:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-27T19:20:01Z"}, "message": "Merge #2099\n\n2099: Fix panic on raw string assist r=matklad a=aee11\n\nStrings that do not contain two quotation marks would cause a slice indexing panic because `find_usual_string_range` would return a range that only contained a single quotation mark.\r\nPanic example:\r\n```\r\nfn main() {\r\n    let s = \"<|>\r\n}\r\n```\r\n\r\nI noticed a lot of panics from the `make_raw_string` assist while working on another issue today.\n\nCo-authored-by: Alexander El\u00eds Ebenesersson <alex2789@gmail.com>", "tree": {"sha": "274837f2d667e2a91e253e3bd6d705f717369fbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/274837f2d667e2a91e253e3bd6d705f717369fbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46b63c462d66925b59c0af7dec2eb3c48bc7be25", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdte3hCRBK7hj4Ov3rIwAAdHIIAHb3dCvuagGiQVA369FYutnO\nro457pM0WFH5nD9jEOSSwZHxAVnXhDkRZ2HJx5EShtXXt1zCcp+rpWVjj0KWRi9S\nIIviq134WBHCefbt0au4WlAKpflrXAlj4QnKRL9qwcl88q9wQeMpLkutX12JtR28\nW0q2EYwf4cGpD3iM0Dj6p/SkNvwROIvirm7cXUJlVKqfo8bC+8d/sksTr1GELvpW\nNsgDf/boIyZWnL0jEKvr4Tz5rGs5TgwpgIXrHDipE4voIrmwhfF70e9cgmReA0WR\nIev30PaVqWVvE36B0LF9qIK2rwRTp3YhinmXWP+CQKRshaAvUz3WhZIOnEx7xgU=\n=7Wow\n-----END PGP SIGNATURE-----\n", "payload": "tree 274837f2d667e2a91e253e3bd6d705f717369fbe\nparent 534c8a0d78a74e28415f07954d4d948ecfbd64ed\nparent 17bd3e59f86a4da548c6c61dff9421dfdb31b65c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1572204001 +0000\ncommitter GitHub <noreply@github.com> 1572204001 +0000\n\nMerge #2099\n\n2099: Fix panic on raw string assist r=matklad a=aee11\n\nStrings that do not contain two quotation marks would cause a slice indexing panic because `find_usual_string_range` would return a range that only contained a single quotation mark.\r\nPanic example:\r\n```\r\nfn main() {\r\n    let s = \"<|>\r\n}\r\n```\r\n\r\nI noticed a lot of panics from the `make_raw_string` assist while working on another issue today.\n\nCo-authored-by: Alexander El\u00eds Ebenesersson <alex2789@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46b63c462d66925b59c0af7dec2eb3c48bc7be25", "html_url": "https://github.com/rust-lang/rust/commit/46b63c462d66925b59c0af7dec2eb3c48bc7be25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46b63c462d66925b59c0af7dec2eb3c48bc7be25/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "534c8a0d78a74e28415f07954d4d948ecfbd64ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/534c8a0d78a74e28415f07954d4d948ecfbd64ed", "html_url": "https://github.com/rust-lang/rust/commit/534c8a0d78a74e28415f07954d4d948ecfbd64ed"}, {"sha": "17bd3e59f86a4da548c6c61dff9421dfdb31b65c", "url": "https://api.github.com/repos/rust-lang/rust/commits/17bd3e59f86a4da548c6c61dff9421dfdb31b65c", "html_url": "https://github.com/rust-lang/rust/commit/17bd3e59f86a4da548c6c61dff9421dfdb31b65c"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "6f4b66c3131acca5dbfaf9b15c4810648ea1b49a", "filename": "crates/ra_assists/src/assists/raw_string.rs", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/46b63c462d66925b59c0af7dec2eb3c48bc7be25/crates%2Fra_assists%2Fsrc%2Fassists%2Fraw_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46b63c462d66925b59c0af7dec2eb3c48bc7be25/crates%2Fra_assists%2Fsrc%2Fassists%2Fraw_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fraw_string.rs?ref=46b63c462d66925b59c0af7dec2eb3c48bc7be25", "patch": "@@ -155,10 +155,17 @@ fn count_hashes(s: &str) -> usize {\n }\n \n fn find_usual_string_range(s: &str) -> Option<TextRange> {\n-    Some(TextRange::from_to(\n-        TextUnit::from(s.find('\"')? as u32),\n-        TextUnit::from(s.rfind('\"')? as u32),\n-    ))\n+    let left_quote = s.find('\"')?;\n+    let right_quote = s.rfind('\"')?;\n+    if left_quote == right_quote {\n+        // `s` only contains one quote\n+        None\n+    } else {\n+        Some(TextRange::from_to(\n+            TextUnit::from(left_quote as u32),\n+            TextUnit::from(right_quote as u32),\n+        ))\n+    }\n }\n \n #[cfg(test)]\n@@ -267,6 +274,30 @@ string\"###;\n         )\n     }\n \n+    #[test]\n+    fn make_raw_string_not_works_on_partial_string() {\n+        check_assist_not_applicable(\n+            make_raw_string,\n+            r#\"\n+            fn f() {\n+                let s = \"foo<|>\n+            }\n+            \"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn make_usual_string_not_works_on_partial_string() {\n+        check_assist_not_applicable(\n+            make_usual_string,\n+            r#\"\n+            fn main() {\n+                let s = r#\"bar<|>\n+            }\n+            \"#,\n+        )\n+    }\n+\n     #[test]\n     fn add_hash_target() {\n         check_assist_target("}]}