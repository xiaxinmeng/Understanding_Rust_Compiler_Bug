{"sha": "cced02fcacfe4a6d1598e987003e00aa65713efb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZWQwMmZjYWNmZTRhNmQxNTk4ZTk4NzAwM2UwMGFhNjU3MTNlZmI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-07T20:13:21Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-08T07:03:11Z"}, "message": "rustc: Don't read both rlib and dylib metadata\n\nThis is an optimization which is quite impactful for compiling small crates.\nReading libstd's metadata takes about 50ms, and a hello world before this change\ntook about 100ms (this change halves that time).\n\nRecent changes made it such that this optimization wasn't performed, but I think\nit's a better idea do to this for now. See #10786 for tracking this issue.", "tree": {"sha": "c9f5314c1c12b8ea57a69169cd375e94120fb59d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9f5314c1c12b8ea57a69169cd375e94120fb59d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cced02fcacfe4a6d1598e987003e00aa65713efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cced02fcacfe4a6d1598e987003e00aa65713efb", "html_url": "https://github.com/rust-lang/rust/commit/cced02fcacfe4a6d1598e987003e00aa65713efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cced02fcacfe4a6d1598e987003e00aa65713efb/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5367c32c7ddb873babec89f739a936409d45476a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5367c32c7ddb873babec89f739a936409d45476a", "html_url": "https://github.com/rust-lang/rust/commit/5367c32c7ddb873babec89f739a936409d45476a"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "5a342e39d701a8a02df13dfb719f51451a0a1110", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cced02fcacfe4a6d1598e987003e00aa65713efb/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cced02fcacfe4a6d1598e987003e00aa65713efb/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=cced02fcacfe4a6d1598e987003e00aa65713efb", "patch": "@@ -317,15 +317,23 @@ impl<'a> Context<'a> {\n     // read the metadata from it if `*slot` is `None`. If the metadata couldn't\n     // be read, it is assumed that the file isn't a valid rust library (no\n     // errors are emitted).\n-    //\n-    // FIXME(#10786): for an optimization, we only read one of the library's\n-    //                metadata sections. In theory we should read both, but\n-    //                reading dylib metadata is quite slow.\n     fn extract_one(&mut self, m: HashSet<Path>, flavor: &str,\n                    slot: &mut Option<MetadataBlob>) -> Option<Path> {\n         let mut ret = None::<Path>;\n         let mut error = 0;\n \n+        if slot.is_some() {\n+            // FIXME(#10786): for an optimization, we only read one of the\n+            //                library's metadata sections. In theory we should\n+            //                read both, but reading dylib metadata is quite\n+            //                slow.\n+            if m.len() == 0 {\n+                return None\n+            } else if m.len() == 1 {\n+                return Some(m.move_iter().next().unwrap())\n+            }\n+        }\n+\n         for lib in m.move_iter() {\n             info!(\"{} reading metadata from: {}\", flavor, lib.display());\n             let metadata = match get_metadata_section(self.os, &lib) {"}]}