{"sha": "52805833694ebe370f570467577afba23f034e34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyODA1ODMzNjk0ZWJlMzcwZjU3MDQ2NzU3N2FmYmEyM2YwMzRlMzQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-30T10:27:50Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-30T10:27:50Z"}, "message": "Format", "tree": {"sha": "2788f4918c00f9082baffed6ed36f7aa1d52aaa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2788f4918c00f9082baffed6ed36f7aa1d52aaa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52805833694ebe370f570467577afba23f034e34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52805833694ebe370f570467577afba23f034e34", "html_url": "https://github.com/rust-lang/rust/commit/52805833694ebe370f570467577afba23f034e34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52805833694ebe370f570467577afba23f034e34/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "979d131c5d8354a80d21942bed7d78ab1e76d9f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/979d131c5d8354a80d21942bed7d78ab1e76d9f0", "html_url": "https://github.com/rust-lang/rust/commit/979d131c5d8354a80d21942bed7d78ab1e76d9f0"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "f5275942425969f8b4551c4fbbc74445f8dd4605", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/52805833694ebe370f570467577afba23f034e34/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52805833694ebe370f570467577afba23f034e34/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=52805833694ebe370f570467577afba23f034e34", "patch": "@@ -180,17 +180,11 @@ pub fn format_expr(\n                 )\n             }\n         }\n-        ast::ExprKind::Yield(ref opt_expr) => {\n-            if let Some(ref expr) = *opt_expr {\n-                rewrite_unary_prefix(context, \"yield \", &**expr, shape)\n-            } else {\n-                wrap_str(\n-                    \"yield\".to_string(),\n-                    context.config.max_width(),\n-                    shape,\n-                )\n-            }\n-        }\n+        ast::ExprKind::Yield(ref opt_expr) => if let Some(ref expr) = *opt_expr {\n+            rewrite_unary_prefix(context, \"yield \", &**expr, shape)\n+        } else {\n+            wrap_str(\"yield\".to_string(), context.config.max_width(), shape)\n+        },\n         ast::ExprKind::Closure(capture, ref fn_decl, ref body, _) => {\n             rewrite_closure(capture, fn_decl, body, expr.span, context, shape)\n         }"}]}