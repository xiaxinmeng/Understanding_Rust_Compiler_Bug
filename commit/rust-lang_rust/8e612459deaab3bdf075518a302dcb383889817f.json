{"sha": "8e612459deaab3bdf075518a302dcb383889817f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlNjEyNDU5ZGVhYWIzYmRmMDc1NTE4YTMwMmRjYjM4Mzg4OTgxN2Y=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-17T22:05:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T22:05:16Z"}, "message": "Merge #10270\n\n10270: intenral: more item parsing cleanup r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "ae1555f56be10ff752d622de17af4e983282a242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae1555f56be10ff752d622de17af4e983282a242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e612459deaab3bdf075518a302dcb383889817f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRREcCRBK7hj4Ov3rIwAAR+4IAKnUoxqwsV7TH8Aa2voPFdYZ\nP57mj3kx/JtBCwhk7kF5s/nU/vMfm8tJpf8iPcYCxL1h+RiyQqJ6sjzpXIH48Hv1\nczS4peNNumpbeofIOjiniomrfSfiIzj1DlD7JridEj7wFqLBBdACV9r/hVAuipwS\nzo3tjgX8/8R727XlZdfMXigsgreJkEZEGZsXi+f9L+Q2mn0gNjiEPUfGhqAOdVZv\nY4Q2VO6RewqL+NbY5OLpruVM/UQQ8inAwWf5tjhV9LK5LeLdI+qVO2UonolXXhNQ\n3w1i8QcFxXQDfOa89Lpw+FGWY/xr6d/bmZ4sXp4emfJeolcSiwgrUloHFlyMjzE=\n=1InZ\n-----END PGP SIGNATURE-----\n", "payload": "tree ae1555f56be10ff752d622de17af4e983282a242\nparent 894abd1efd3d6e7fa33d3881df7530fd174d4c7e\nparent 3474e3b3b1b1037613bb3c7c6af33b57893fb332\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1631916316 +0000\ncommitter GitHub <noreply@github.com> 1631916316 +0000\n\nMerge #10270\n\n10270: intenral: more item parsing cleanup r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e612459deaab3bdf075518a302dcb383889817f", "html_url": "https://github.com/rust-lang/rust/commit/8e612459deaab3bdf075518a302dcb383889817f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e612459deaab3bdf075518a302dcb383889817f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "894abd1efd3d6e7fa33d3881df7530fd174d4c7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/894abd1efd3d6e7fa33d3881df7530fd174d4c7e", "html_url": "https://github.com/rust-lang/rust/commit/894abd1efd3d6e7fa33d3881df7530fd174d4c7e"}, {"sha": "3474e3b3b1b1037613bb3c7c6af33b57893fb332", "url": "https://api.github.com/repos/rust-lang/rust/commits/3474e3b3b1b1037613bb3c7c6af33b57893fb332", "html_url": "https://github.com/rust-lang/rust/commit/3474e3b3b1b1037613bb3c7c6af33b57893fb332"}], "stats": {"total": 352, "additions": 133, "deletions": 219}, "files": [{"sha": "13d9f9e1ab488e3adf59f0c4109b61f6ec242f75", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -148,14 +148,13 @@ pub(super) fn opt_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n             // impl T for Foo {\n             //     default async fn foo() {}\n             // }\n-\n-            // test default_async_unsafe_fn\n-            // impl T for Foo {\n-            //     default async unsafe fn foo() {}\n-            // }\n             T![async] => {\n                 let mut maybe_fn = p.nth(2);\n                 let is_unsafe = if matches!(maybe_fn, T![unsafe]) {\n+                    // test default_async_unsafe_fn\n+                    // impl T for Foo {\n+                    //     default async unsafe fn foo() {}\n+                    // }\n                     maybe_fn = p.nth(3);\n                     true\n                 } else {\n@@ -400,9 +399,9 @@ fn fn_(p: &mut Parser, m: Marker) {\n     // fn foo<T>() where T: Copy {}\n     type_params::opt_where_clause(p);\n \n-    // test fn_decl\n-    // trait T { fn foo(); }\n     if p.at(T![;]) {\n+        // test fn_decl\n+        // trait T { fn foo(); }\n         p.bump(T![;]);\n     } else {\n         expressions::block_expr(p)"}, {"sha": "e870de9de041c45f0770a6030635f2ebfa54e3d0", "filename": "crates/parser/src/grammar/items/adt.rs", "status": "modified", "additions": 18, "deletions": 29, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -22,9 +22,7 @@ fn struct_or_union(p: &mut Parser, m: Marker, is_struct: bool) {\n         T![where] => {\n             type_params::opt_where_clause(p);\n             match p.current() {\n-                T![;] => {\n-                    p.bump(T![;]);\n-                }\n+                T![;] => p.bump(T![;]),\n                 T!['{'] => record_field_list(p),\n                 _ => {\n                     //FIXME: special case `(` error message\n@@ -53,7 +51,6 @@ fn struct_or_union(p: &mut Parser, m: Marker, is_struct: bool) {\n }\n \n pub(super) fn enum_(p: &mut Parser, m: Marker) {\n-    assert!(p.at(T![enum]));\n     p.bump(T![enum]);\n     name_r(p, ITEM_RECOVERY_SET);\n     type_params::opt_generic_param_list(p);\n@@ -75,7 +72,16 @@ pub(crate) fn variant_list(p: &mut Parser) {\n             error_block(p, \"expected enum variant\");\n             continue;\n         }\n-        let var = p.start();\n+        variant(p);\n+        if !p.at(T!['}']) {\n+            p.expect(T![,]);\n+        }\n+    }\n+    p.expect(T!['}']);\n+    m.complete(p, VARIANT_LIST);\n+\n+    fn variant(p: &mut Parser) {\n+        let m = p.start();\n         attributes::outer_attrs(p);\n         if p.at(IDENT) {\n             name(p);\n@@ -90,17 +96,12 @@ pub(crate) fn variant_list(p: &mut Parser) {\n             if p.eat(T![=]) {\n                 expressions::expr(p);\n             }\n-            var.complete(p, VARIANT);\n+            m.complete(p, VARIANT);\n         } else {\n-            var.abandon(p);\n+            m.abandon(p);\n             p.err_and_bump(\"expected enum variant\");\n         }\n-        if !p.at(T!['}']) {\n-            p.expect(T![,]);\n-        }\n     }\n-    p.expect(T!['}']);\n-    m.complete(p, VARIANT_LIST);\n }\n \n // test record_field_list\n@@ -114,21 +115,18 @@ pub(crate) fn record_field_list(p: &mut Parser) {\n             error_block(p, \"expected field\");\n             continue;\n         }\n-        record_field_def(p);\n+        record_field(p);\n         if !p.at(T!['}']) {\n             p.expect(T![,]);\n         }\n     }\n     p.expect(T!['}']);\n     m.complete(p, RECORD_FIELD_LIST);\n \n-    fn record_field_def(p: &mut Parser) {\n+    fn record_field(p: &mut Parser) {\n         let m = p.start();\n         // test record_field_attrs\n-        // struct S {\n-        //     #[serde(with = \"url_serde\")]\n-        //     pub uri: Uri,\n-        // }\n+        // struct S { #[attr] f: f32 }\n         attributes::outer_attrs(p);\n         opt_visibility(p);\n         if p.at(IDENT) {\n@@ -146,20 +144,11 @@ pub(crate) fn record_field_list(p: &mut Parser) {\n fn tuple_field_list(p: &mut Parser) {\n     assert!(p.at(T!['(']));\n     let m = p.start();\n-    if !p.expect(T!['(']) {\n-        return;\n-    }\n+    p.bump(T!['(']);\n     while !p.at(T![')']) && !p.at(EOF) {\n         let m = p.start();\n         // test tuple_field_attrs\n-        // struct S (\n-        //     #[serde(with = \"url_serde\")]\n-        //     pub Uri,\n-        // );\n-        //\n-        // enum S {\n-        //     Uri(#[serde(with = \"url_serde\")] Uri),\n-        // }\n+        // struct S (#[attr] f32);\n         attributes::outer_attrs(p);\n         opt_visibility(p);\n         if !p.at_ts(types::TYPE_FIRST) {"}, {"sha": "93ba7d05fe7bfe050973221cd5a336dc40cd65ef", "filename": "crates/parser/src/grammar/items/consts.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems%2Fconsts.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -1,26 +1,29 @@\n use super::*;\n \n-pub(super) fn static_(p: &mut Parser, m: Marker) {\n-    const_or_static(p, m, T![static], STATIC)\n+// test const_item\n+// const C: u32 = 92;\n+pub(super) fn konst(p: &mut Parser, m: Marker) {\n+    p.bump(T![const]);\n+    const_or_static(p, m, true)\n }\n \n-pub(super) fn konst(p: &mut Parser, m: Marker) {\n-    const_or_static(p, m, T![const], CONST)\n+pub(super) fn static_(p: &mut Parser, m: Marker) {\n+    p.bump(T![static]);\n+    const_or_static(p, m, false)\n }\n \n-fn const_or_static(p: &mut Parser, m: Marker, kw: SyntaxKind, def: SyntaxKind) {\n-    assert!(p.at(kw));\n-    p.bump(kw);\n+fn const_or_static(p: &mut Parser, m: Marker, is_const: bool) {\n     p.eat(T![mut]);\n \n-    // Allow `_` in place of an identifier in a `const`.\n-    let is_const_underscore = kw == T![const] && p.eat(T![_]);\n-    if !is_const_underscore {\n+    if is_const && p.eat(T![_]) {\n+        // test anonymous_const\n+        // const _: u32 = 0;\n+    } else {\n+        // test_err anonymous_static\n+        // static _: i32 = 5;\n         name(p);\n     }\n \n-    // test_err static_underscore\n-    // static _: i32 = 5;\n     if p.at(T![:]) {\n         types::ascription(p);\n     } else {\n@@ -30,5 +33,5 @@ fn const_or_static(p: &mut Parser, m: Marker, kw: SyntaxKind, def: SyntaxKind) {\n         expressions::expr(p);\n     }\n     p.expect(T![;]);\n-    m.complete(p, def);\n+    m.complete(p, if is_const { CONST } else { STATIC });\n }"}, {"sha": "8d761b9074144d7c1a3d7531080042dfd43ad40f", "filename": "crates/syntax/test_data/parser/inline/err/0013_anonymous_static.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_anonymous_static.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_anonymous_static.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_anonymous_static.rast?ref=8e612459deaab3bdf075518a302dcb383889817f", "previous_filename": "crates/syntax/test_data/parser/inline/err/0013_static_underscore.rast"}, {"sha": "df8cecb43262bb2f31c7847fffa8572582a2be7c", "filename": "crates/syntax/test_data/parser/inline/err/0013_anonymous_static.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_anonymous_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_anonymous_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_anonymous_static.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "previous_filename": "crates/syntax/test_data/parser/inline/err/0013_static_underscore.rs"}, {"sha": "453bef315849dcda25619f20b20879c207fe20f6", "filename": "crates/syntax/test_data/parser/inline/ok/0054_record_field_attrs.rast", "status": "modified", "additions": 27, "deletions": 39, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -1,45 +1,33 @@\n-SOURCE_FILE@0..64\n-  STRUCT@0..63\n+SOURCE_FILE@0..28\n+  STRUCT@0..27\n     STRUCT_KW@0..6 \"struct\"\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"S\"\n     WHITESPACE@8..9 \" \"\n-    RECORD_FIELD_LIST@9..63\n+    RECORD_FIELD_LIST@9..27\n       L_CURLY@9..10 \"{\"\n-      WHITESPACE@10..15 \"\\n    \"\n-      RECORD_FIELD@15..60\n-        ATTR@15..43\n-          POUND@15..16 \"#\"\n-          L_BRACK@16..17 \"[\"\n-          META@17..42\n-            PATH@17..22\n-              PATH_SEGMENT@17..22\n-                NAME_REF@17..22\n-                  IDENT@17..22 \"serde\"\n-            TOKEN_TREE@22..42\n-              L_PAREN@22..23 \"(\"\n-              IDENT@23..27 \"with\"\n-              WHITESPACE@27..28 \" \"\n-              EQ@28..29 \"=\"\n-              WHITESPACE@29..30 \" \"\n-              STRING@30..41 \"\\\"url_serde\\\"\"\n-              R_PAREN@41..42 \")\"\n-          R_BRACK@42..43 \"]\"\n-        WHITESPACE@43..48 \"\\n    \"\n-        VISIBILITY@48..51\n-          PUB_KW@48..51 \"pub\"\n-        WHITESPACE@51..52 \" \"\n-        NAME@52..55\n-          IDENT@52..55 \"uri\"\n-        COLON@55..56 \":\"\n-        WHITESPACE@56..57 \" \"\n-        PATH_TYPE@57..60\n-          PATH@57..60\n-            PATH_SEGMENT@57..60\n-              NAME_REF@57..60\n-                IDENT@57..60 \"Uri\"\n-      COMMA@60..61 \",\"\n-      WHITESPACE@61..62 \"\\n\"\n-      R_CURLY@62..63 \"}\"\n-  WHITESPACE@63..64 \"\\n\"\n+      WHITESPACE@10..11 \" \"\n+      RECORD_FIELD@11..25\n+        ATTR@11..18\n+          POUND@11..12 \"#\"\n+          L_BRACK@12..13 \"[\"\n+          META@13..17\n+            PATH@13..17\n+              PATH_SEGMENT@13..17\n+                NAME_REF@13..17\n+                  IDENT@13..17 \"attr\"\n+          R_BRACK@17..18 \"]\"\n+        WHITESPACE@18..19 \" \"\n+        NAME@19..20\n+          IDENT@19..20 \"f\"\n+        COLON@20..21 \":\"\n+        WHITESPACE@21..22 \" \"\n+        PATH_TYPE@22..25\n+          PATH@22..25\n+            PATH_SEGMENT@22..25\n+              NAME_REF@22..25\n+                IDENT@22..25 \"f32\"\n+      WHITESPACE@25..26 \" \"\n+      R_CURLY@26..27 \"}\"\n+  WHITESPACE@27..28 \"\\n\""}, {"sha": "d7f0b4382dac61f6019d3a614788a7d8703f40fa", "filename": "crates/syntax/test_data/parser/inline/ok/0054_record_field_attrs.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -1,4 +1 @@\n-struct S {\n-    #[serde(with = \"url_serde\")]\n-    pub uri: Uri,\n-}\n+struct S { #[attr] f: f32 }"}, {"sha": "9a0bcdc18e3d404533db01111ed95eec1af8d889", "filename": "crates/syntax/test_data/parser/inline/ok/0115_tuple_field_attrs.rast", "status": "modified", "additions": 22, "deletions": 79, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -1,85 +1,28 @@\n-SOURCE_FILE@0..115\n-  STRUCT@0..59\n+SOURCE_FILE@0..24\n+  STRUCT@0..23\n     STRUCT_KW@0..6 \"struct\"\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"S\"\n     WHITESPACE@8..9 \" \"\n-    TUPLE_FIELD_LIST@9..58\n+    TUPLE_FIELD_LIST@9..22\n       L_PAREN@9..10 \"(\"\n-      WHITESPACE@10..15 \"\\n    \"\n-      TUPLE_FIELD@15..55\n-        ATTR@15..43\n-          POUND@15..16 \"#\"\n-          L_BRACK@16..17 \"[\"\n-          META@17..42\n-            PATH@17..22\n-              PATH_SEGMENT@17..22\n-                NAME_REF@17..22\n-                  IDENT@17..22 \"serde\"\n-            TOKEN_TREE@22..42\n-              L_PAREN@22..23 \"(\"\n-              IDENT@23..27 \"with\"\n-              WHITESPACE@27..28 \" \"\n-              EQ@28..29 \"=\"\n-              WHITESPACE@29..30 \" \"\n-              STRING@30..41 \"\\\"url_serde\\\"\"\n-              R_PAREN@41..42 \")\"\n-          R_BRACK@42..43 \"]\"\n-        WHITESPACE@43..48 \"\\n    \"\n-        VISIBILITY@48..51\n-          PUB_KW@48..51 \"pub\"\n-        WHITESPACE@51..52 \" \"\n-        PATH_TYPE@52..55\n-          PATH@52..55\n-            PATH_SEGMENT@52..55\n-              NAME_REF@52..55\n-                IDENT@52..55 \"Uri\"\n-      COMMA@55..56 \",\"\n-      WHITESPACE@56..57 \"\\n\"\n-      R_PAREN@57..58 \")\"\n-    SEMICOLON@58..59 \";\"\n-  WHITESPACE@59..61 \"\\n\\n\"\n-  ENUM@61..114\n-    ENUM_KW@61..65 \"enum\"\n-    WHITESPACE@65..66 \" \"\n-    NAME@66..67\n-      IDENT@66..67 \"S\"\n-    WHITESPACE@67..68 \" \"\n-    VARIANT_LIST@68..114\n-      L_CURLY@68..69 \"{\"\n-      WHITESPACE@69..74 \"\\n    \"\n-      VARIANT@74..111\n-        NAME@74..77\n-          IDENT@74..77 \"Uri\"\n-        TUPLE_FIELD_LIST@77..111\n-          L_PAREN@77..78 \"(\"\n-          TUPLE_FIELD@78..110\n-            ATTR@78..106\n-              POUND@78..79 \"#\"\n-              L_BRACK@79..80 \"[\"\n-              META@80..105\n-                PATH@80..85\n-                  PATH_SEGMENT@80..85\n-                    NAME_REF@80..85\n-                      IDENT@80..85 \"serde\"\n-                TOKEN_TREE@85..105\n-                  L_PAREN@85..86 \"(\"\n-                  IDENT@86..90 \"with\"\n-                  WHITESPACE@90..91 \" \"\n-                  EQ@91..92 \"=\"\n-                  WHITESPACE@92..93 \" \"\n-                  STRING@93..104 \"\\\"url_serde\\\"\"\n-                  R_PAREN@104..105 \")\"\n-              R_BRACK@105..106 \"]\"\n-            WHITESPACE@106..107 \" \"\n-            PATH_TYPE@107..110\n-              PATH@107..110\n-                PATH_SEGMENT@107..110\n-                  NAME_REF@107..110\n-                    IDENT@107..110 \"Uri\"\n-          R_PAREN@110..111 \")\"\n-      COMMA@111..112 \",\"\n-      WHITESPACE@112..113 \"\\n\"\n-      R_CURLY@113..114 \"}\"\n-  WHITESPACE@114..115 \"\\n\"\n+      TUPLE_FIELD@10..21\n+        ATTR@10..17\n+          POUND@10..11 \"#\"\n+          L_BRACK@11..12 \"[\"\n+          META@12..16\n+            PATH@12..16\n+              PATH_SEGMENT@12..16\n+                NAME_REF@12..16\n+                  IDENT@12..16 \"attr\"\n+          R_BRACK@16..17 \"]\"\n+        WHITESPACE@17..18 \" \"\n+        PATH_TYPE@18..21\n+          PATH@18..21\n+            PATH_SEGMENT@18..21\n+              NAME_REF@18..21\n+                IDENT@18..21 \"f32\"\n+      R_PAREN@21..22 \")\"\n+    SEMICOLON@22..23 \";\"\n+  WHITESPACE@23..24 \"\\n\""}, {"sha": "648ffe5654810ae5e0b1f59240a677759a319f3c", "filename": "crates/syntax/test_data/parser/inline/ok/0115_tuple_field_attrs.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -1,8 +1 @@\n-struct S (\n-    #[serde(with = \"url_serde\")]\n-    pub Uri,\n-);\n-\n-enum S {\n-    Uri(#[serde(with = \"url_serde\")] Uri),\n-}\n+struct S (#[attr] f32);"}, {"sha": "8a61d5e56683d236919d704175400003cc491db7", "filename": "crates/syntax/test_data/parser/inline/ok/0172_const_item.rast", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0172_const_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0172_const_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0172_const_item.rast?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -0,0 +1,20 @@\n+SOURCE_FILE@0..19\n+  CONST@0..18\n+    CONST_KW@0..5 \"const\"\n+    WHITESPACE@5..6 \" \"\n+    NAME@6..7\n+      IDENT@6..7 \"C\"\n+    COLON@7..8 \":\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..12\n+      PATH@9..12\n+        PATH_SEGMENT@9..12\n+          NAME_REF@9..12\n+            IDENT@9..12 \"u32\"\n+    WHITESPACE@12..13 \" \"\n+    EQ@13..14 \"=\"\n+    WHITESPACE@14..15 \" \"\n+    LITERAL@15..17\n+      INT_NUMBER@15..17 \"92\"\n+    SEMICOLON@17..18 \";\"\n+  WHITESPACE@18..19 \"\\n\""}, {"sha": "6d5f5be65dc5fc80c117a70e0925171c8270c87a", "filename": "crates/syntax/test_data/parser/inline/ok/0172_const_item.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0172_const_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0172_const_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0172_const_item.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -0,0 +1 @@\n+const C: u32 = 92;"}, {"sha": "68ce503c39d780cbe9bb212e3263f29308f6991e", "filename": "crates/syntax/test_data/parser/inline/ok/0173_anonymous_const.rast", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0173_anonymous_const.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0173_anonymous_const.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0173_anonymous_const.rast?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -0,0 +1,19 @@\n+SOURCE_FILE@0..18\n+  CONST@0..17\n+    CONST_KW@0..5 \"const\"\n+    WHITESPACE@5..6 \" \"\n+    UNDERSCORE@6..7 \"_\"\n+    COLON@7..8 \":\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..12\n+      PATH@9..12\n+        PATH_SEGMENT@9..12\n+          NAME_REF@9..12\n+            IDENT@9..12 \"u32\"\n+    WHITESPACE@12..13 \" \"\n+    EQ@13..14 \"=\"\n+    WHITESPACE@14..15 \" \"\n+    LITERAL@15..16\n+      INT_NUMBER@15..16 \"0\"\n+    SEMICOLON@16..17 \";\"\n+  WHITESPACE@17..18 \"\\n\""}, {"sha": "c1d5cdfc621b76a966da6de02a31aa93318c01f5", "filename": "crates/syntax/test_data/parser/inline/ok/0173_anonymous_const.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0173_anonymous_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0173_anonymous_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0173_anonymous_const.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -0,0 +1 @@\n+const _: u32 = 0;"}, {"sha": "6b234b0b2418e9767eb76efedf39c42d25058f1f", "filename": "crates/syntax/test_data/parser/ok/0024_const_item.rast", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rast?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -1,38 +1 @@\n-SOURCE_FILE@0..39\n-  CONST@0..17\n-    CONST_KW@0..5 \"const\"\n-    WHITESPACE@5..6 \" \"\n-    UNDERSCORE@6..7 \"_\"\n-    COLON@7..8 \":\"\n-    WHITESPACE@8..9 \" \"\n-    PATH_TYPE@9..12\n-      PATH@9..12\n-        PATH_SEGMENT@9..12\n-          NAME_REF@9..12\n-            IDENT@9..12 \"u32\"\n-    WHITESPACE@12..13 \" \"\n-    EQ@13..14 \"=\"\n-    WHITESPACE@14..15 \" \"\n-    LITERAL@15..16\n-      INT_NUMBER@15..16 \"0\"\n-    SEMICOLON@16..17 \";\"\n-  WHITESPACE@17..18 \"\\n\"\n-  CONST@18..38\n-    CONST_KW@18..23 \"const\"\n-    WHITESPACE@23..24 \" \"\n-    NAME@24..27\n-      IDENT@24..27 \"FOO\"\n-    COLON@27..28 \":\"\n-    WHITESPACE@28..29 \" \"\n-    PATH_TYPE@29..32\n-      PATH@29..32\n-        PATH_SEGMENT@29..32\n-          NAME_REF@29..32\n-            IDENT@29..32 \"u32\"\n-    WHITESPACE@32..33 \" \"\n-    EQ@33..34 \"=\"\n-    WHITESPACE@34..35 \" \"\n-    LITERAL@35..37\n-      INT_NUMBER@35..37 \"92\"\n-    SEMICOLON@37..38 \";\"\n-  WHITESPACE@38..39 \"\\n\"\n+SOURCE_FILE@0..0"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "crates/syntax/test_data/parser/ok/0024_const_item.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e612459deaab3bdf075518a302dcb383889817f/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0024_const_item.rs?ref=8e612459deaab3bdf075518a302dcb383889817f", "patch": "@@ -1,2 +0,0 @@\n-const _: u32 = 0;\n-const FOO: u32 = 92;"}]}