{"sha": "0d59b8c997e31095732c9f9864e10d76daaeb42e", "node_id": "C_kwDOAAsO6NoAKDBkNTliOGM5OTdlMzEwOTU3MzJjOWY5ODY0ZTEwZDc2ZGFhZWI0MmU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-21T21:52:40Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-06T21:29:02Z"}, "message": "Remove redundant test.", "tree": {"sha": "3812f1f091354a6f7082fb56e5323ff0d0da6359", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3812f1f091354a6f7082fb56e5323ff0d0da6359"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d59b8c997e31095732c9f9864e10d76daaeb42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d59b8c997e31095732c9f9864e10d76daaeb42e", "html_url": "https://github.com/rust-lang/rust/commit/0d59b8c997e31095732c9f9864e10d76daaeb42e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d59b8c997e31095732c9f9864e10d76daaeb42e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ff69b49dfcc0f7d37ee17e36f67c57168c44073", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff69b49dfcc0f7d37ee17e36f67c57168c44073", "html_url": "https://github.com/rust-lang/rust/commit/7ff69b49dfcc0f7d37ee17e36f67c57168c44073"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "45afd16c313e42252ec712f524a1e5abdbd565b6", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d59b8c997e31095732c9f9864e10d76daaeb42e/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d59b8c997e31095732c9f9864e10d76daaeb42e/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=0d59b8c997e31095732c9f9864e10d76daaeb42e", "patch": "@@ -622,8 +622,7 @@ impl Map {\n         ty: Ty<'tcx>,\n         filter: &mut impl FnMut(Ty<'tcx>) -> bool,\n     ) {\n-        // Note: The framework supports only scalars for now.\n-        if filter(ty) && ty.is_scalar() {\n+        if filter(ty) {\n             // We know that the projection only contains trackable elements.\n             let place = self.make_place(local, projection).unwrap();\n "}]}