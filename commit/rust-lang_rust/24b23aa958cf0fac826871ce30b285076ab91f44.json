{"sha": "24b23aa958cf0fac826871ce30b285076ab91f44", "node_id": "C_kwDOAAsO6NoAKDI0YjIzYWE5NThjZjBmYWM4MjY4NzFjZTMwYjI4NTA3NmFiOTFmNDQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-02-19T15:16:12Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-02-20T19:19:21Z"}, "message": "Fix handling of reexported macro in doc hidden items", "tree": {"sha": "c2c536c6787de0502860a0ea09be253e829054fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2c536c6787de0502860a0ea09be253e829054fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24b23aa958cf0fac826871ce30b285076ab91f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24b23aa958cf0fac826871ce30b285076ab91f44", "html_url": "https://github.com/rust-lang/rust/commit/24b23aa958cf0fac826871ce30b285076ab91f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24b23aa958cf0fac826871ce30b285076ab91f44/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eebdfb55fce148676c24555505aebf648123b2de", "url": "https://api.github.com/repos/rust-lang/rust/commits/eebdfb55fce148676c24555505aebf648123b2de", "html_url": "https://github.com/rust-lang/rust/commit/eebdfb55fce148676c24555505aebf648123b2de"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "890b3e8d67f7a9e7a8f9378adfb843aec9bb0823", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/24b23aa958cf0fac826871ce30b285076ab91f44/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b23aa958cf0fac826871ce30b285076ab91f44/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=24b23aa958cf0fac826871ce30b285076ab91f44", "patch": "@@ -62,7 +62,7 @@ impl<'a, 'tcx> Stripper<'a, 'tcx> {\n \n     /// In case `i` is a non-hidden impl block, then we special-case it by changing the value\n     /// of `is_in_hidden_item` to `true` because the impl children inherit its visibility.\n-    fn recurse_in_impl(&mut self, i: Item) -> Item {\n+    fn recurse_in_impl_or_exported_macro(&mut self, i: Item) -> Item {\n         let prev = mem::replace(&mut self.is_in_hidden_item, false);\n         let ret = self.fold_item_recur(i);\n         self.is_in_hidden_item = prev;\n@@ -73,9 +73,17 @@ impl<'a, 'tcx> Stripper<'a, 'tcx> {\n impl<'a, 'tcx> DocFolder for Stripper<'a, 'tcx> {\n     fn fold_item(&mut self, i: Item) -> Option<Item> {\n         let has_doc_hidden = i.attrs.lists(sym::doc).has_word(sym::hidden);\n-        let is_impl = matches!(*i.kind, clean::ImplItem(..));\n+        let is_impl_or_exported_macro = match *i.kind {\n+            clean::ImplItem(..) => true,\n+            // If the macro has the `#[macro_export]` attribute, it means it's accessible at the\n+            // crate level so it should be handled differently.\n+            clean::MacroItem(..) => {\n+                i.attrs.other_attrs.iter().any(|attr| attr.has_name(sym::macro_export))\n+            }\n+            _ => false,\n+        };\n         let mut is_hidden = has_doc_hidden;\n-        if !is_impl {\n+        if !is_impl_or_exported_macro {\n             is_hidden = self.is_in_hidden_item || has_doc_hidden;\n             if !is_hidden && i.inline_stmt_id.is_none() {\n                 // We don't need to check if it's coming from a reexport since the reexport itself was\n@@ -92,8 +100,8 @@ impl<'a, 'tcx> DocFolder for Stripper<'a, 'tcx> {\n             if self.update_retained {\n                 self.retained.insert(i.item_id);\n             }\n-            return Some(if is_impl {\n-                self.recurse_in_impl(i)\n+            return Some(if is_impl_or_exported_macro {\n+                self.recurse_in_impl_or_exported_macro(i)\n             } else {\n                 self.set_is_in_hidden_item_and_fold(false, i)\n             });"}]}