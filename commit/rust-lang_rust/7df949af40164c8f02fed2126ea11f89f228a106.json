{"sha": "7df949af40164c8f02fed2126ea11f89f228a106", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZjk0OWFmNDAxNjRjOGYwMmZlZDIxMjZlYTExZjg5ZjIyOGExMDY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T02:28:11Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T02:28:11Z"}, "message": "Add logging to trans_init_slot_from_atom.", "tree": {"sha": "3a1d9aa22f085abf6d4df07a1f68384f061fcb33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a1d9aa22f085abf6d4df07a1f68384f061fcb33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7df949af40164c8f02fed2126ea11f89f228a106", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7df949af40164c8f02fed2126ea11f89f228a106", "html_url": "https://github.com/rust-lang/rust/commit/7df949af40164c8f02fed2126ea11f89f228a106", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7df949af40164c8f02fed2126ea11f89f228a106/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c9832d3ec05d2df0444a6f31c79a11eafa56b72", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9832d3ec05d2df0444a6f31c79a11eafa56b72", "html_url": "https://github.com/rust-lang/rust/commit/6c9832d3ec05d2df0444a6f31c79a11eafa56b72"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "3c417cc7fe2d75e0555a33af0415a05e08be9ad3", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7df949af40164c8f02fed2126ea11f89f228a106/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/7df949af40164c8f02fed2126ea11f89f228a106/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=7df949af40164c8f02fed2126ea11f89f228a106", "patch": "@@ -3211,6 +3211,15 @@ let trans_visitor\n       (dst:Il.cell) (dst_slot:Ast.slot)\n       (src_atom:Ast.atom)\n       : unit =\n+    let _ =\n+      iflog (fun _ ->\n+               log cx \"trans_init_slot_from_atom\";\n+               log cx \"   dst slot %a, src ty %a\"\n+                 Ast.sprintf_slot dst_slot\n+                 Ast.sprintf_ty (atom_type cx src_atom);\n+               log cx \"   dst cell %s\"\n+                 (cell_str dst))\n+    in\n     match (dst_slot.Ast.slot_mode, clone, src_atom) with\n         (Ast.MODE_alias, CLONE_none,\n          Ast.ATOM_literal _) ->\n@@ -3225,9 +3234,12 @@ let trans_visitor\n           bug () \"attempting to clone into alias slot\"\n       | _ ->\n           let src = Il.Mem (force_to_mem (trans_atom src_atom)) in\n-            trans_init_slot_from_cell\n-              (get_ty_params_of_current_frame())\n-              clone dst dst_slot src (atom_type cx src_atom)\n+            begin\n+              log cx \"   forced-to-mem src cell %s\" (cell_str src);\n+              trans_init_slot_from_cell\n+                (get_ty_params_of_current_frame())\n+                clone dst dst_slot src (atom_type cx src_atom)\n+            end\n \n \n   and trans_be_fn"}]}