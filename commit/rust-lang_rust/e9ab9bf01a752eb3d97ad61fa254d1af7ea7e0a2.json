{"sha": "e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YWI5YmYwMWE3NTJlYjNkOTdhZDYxZmEyNTRkMWFmN2VhN2UwYTI=", "commit": {"author": {"name": "Florian Zeitz", "email": "florob@babelmonkeys.de", "date": "2013-11-23T17:56:56Z"}, "committer": {"name": "Florian Zeitz", "email": "florob@babelmonkeys.de", "date": "2013-11-27T22:21:22Z"}, "message": "Update unicode.py to reflect language changes", "tree": {"sha": "cfb81c96b9354501b1105a2be911c3e4b336b3fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfb81c96b9354501b1105a2be911c3e4b336b3fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2", "html_url": "https://github.com/rust-lang/rust/commit/e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2/comments", "author": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e147a090a5c7125428c16b142922002f7a645ea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e147a090a5c7125428c16b142922002f7a645ea1", "html_url": "https://github.com/rust-lang/rust/commit/e147a090a5c7125428c16b142922002f7a645ea1"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7c49b9b57726ae840c481800f2c8b93aaf506b9a", "filename": "src/etc/unicode.py", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2/src%2Fetc%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2/src%2Fetc%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Funicode.py?ref=e9ab9bf01a752eb3d97ad61fa254d1af7ea7e0a2", "patch": "@@ -5,7 +5,7 @@\n # code covering the core properties. Since this is a pretty rare event we\n # just store this out-of-line and check the unicode.rs file into git.\n #\n-# The emitted code is \"the minimum we think is necessary for libcore\", that\n+# The emitted code is \"the minimum we think is necessary for libstd\", that\n # is, to support basic operations of the compiler and \"most nontrivial rust\n # programs\". It is not meant to be a complete implementation of unicode.\n # For that we recommend you use a proper binding to libicu.\n@@ -144,7 +144,7 @@ def emit_bsearch_range_table(f):\n         use cmp::{Equal, Less, Greater};\n         use vec::ImmutableVector;\n         use option::None;\n-        (do r.bsearch |&(lo,hi)| {\n+        r.bsearch(|&(lo,hi)| {\n             if lo <= c && c <= hi { Equal }\n             else if hi < c { Less }\n             else { Greater }\n@@ -302,14 +302,14 @@ def emit_decomp_module(f, canon, compat, combine):\n         ix += 1\n     f.write(\"\\n    ];\\n\")\n \n-    f.write(\"    pub fn canonical(c: char, i: &fn(char)) \"\n+    f.write(\"    pub fn canonical(c: char, i: |char|) \"\n         + \"{ d(c, i, false); }\\n\\n\")\n-    f.write(\"    pub fn compatibility(c: char, i: &fn(char)) \"\n+    f.write(\"    pub fn compatibility(c: char, i: |char|) \"\n             +\"{ d(c, i, true); }\\n\\n\")\n     f.write(\"    pub fn canonical_combining_class(c: char) -> u8 {\\n\"\n         + \"        bsearch_range_value_table(c, combining_class_table)\\n\"\n         + \"    }\\n\\n\")\n-    f.write(\"    fn d(c: char, i: &fn(char), k: bool) {\\n\")\n+    f.write(\"    fn d(c: char, i: |char|, k: bool) {\\n\")\n     f.write(\"        use iter::Iterator;\\n\");\n \n     f.write(\"        if c <= '\\\\x7f' { i(c); return; }\\n\")"}]}