{"sha": "8edd32c9404f416945d82c438a62acb7f90c2f62", "node_id": "C_kwDOAAsO6NoAKDhlZGQzMmM5NDA0ZjQxNjk0NWQ4MmM0MzhhNjJhY2I3ZjkwYzJmNjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-02-01T17:52:22Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-02-09T19:11:33Z"}, "message": "Avoid clone.", "tree": {"sha": "91b37ae62fd7879872bec063963db00c105bac90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91b37ae62fd7879872bec063963db00c105bac90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8edd32c9404f416945d82c438a62acb7f90c2f62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8edd32c9404f416945d82c438a62acb7f90c2f62", "html_url": "https://github.com/rust-lang/rust/commit/8edd32c9404f416945d82c438a62acb7f90c2f62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8edd32c9404f416945d82c438a62acb7f90c2f62/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1a72c29aaef3b3145296dfc9e24201b3c655768", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a72c29aaef3b3145296dfc9e24201b3c655768", "html_url": "https://github.com/rust-lang/rust/commit/e1a72c29aaef3b3145296dfc9e24201b3c655768"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "087c216af14167ac81c1101b387bfe8f0e7b6579", "filename": "compiler/rustc_traits/src/dropck_outlives.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8edd32c9404f416945d82c438a62acb7f90c2f62/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8edd32c9404f416945d82c438a62acb7f90c2f62/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs?ref=8edd32c9404f416945d82c438a62acb7f90c2f62", "patch": "@@ -275,12 +275,12 @@ fn dtorck_constraint_for_ty<'tcx>(\n \n         ty::Adt(def, substs) => {\n             let DtorckConstraint { dtorck_types, outlives, overflows } =\n-                tcx.at(span).adt_dtorck_constraint(def.did)?.clone();\n+                tcx.at(span).adt_dtorck_constraint(def.did)?;\n             // FIXME: we can try to recursively `dtorck_constraint_on_ty`\n             // there, but that needs some way to handle cycles.\n-            constraints.dtorck_types.extend(dtorck_types.subst(tcx, substs));\n-            constraints.outlives.extend(outlives.subst(tcx, substs));\n-            constraints.overflows.extend(overflows.subst(tcx, substs));\n+            constraints.dtorck_types.extend(dtorck_types.iter().map(|t| t.subst(tcx, substs)));\n+            constraints.outlives.extend(outlives.iter().map(|t| t.subst(tcx, substs)));\n+            constraints.overflows.extend(overflows.iter().map(|t| t.subst(tcx, substs)));\n         }\n \n         // Objects must be alive in order for their destructor"}]}