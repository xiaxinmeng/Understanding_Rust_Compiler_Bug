{"sha": "6488aecb7405949f28b36bed534d2f03892644bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ODhhZWNiNzQwNTk0OWYyOGIzNmJlZDUzNGQyZjAzODkyNjQ0YmQ=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-08T05:21:21Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-10T20:17:24Z"}, "message": "Use standard formatting for \"rust-call\" ABI message\n\nNearly all error messages start with a lowercase letter and don't use\narticles - instead they refer to the plural case.", "tree": {"sha": "7cd5a139bd41fe4a2b85d4f3859e3d264069b321", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cd5a139bd41fe4a2b85d4f3859e3d264069b321"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6488aecb7405949f28b36bed534d2f03892644bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6488aecb7405949f28b36bed534d2f03892644bd", "html_url": "https://github.com/rust-lang/rust/commit/6488aecb7405949f28b36bed534d2f03892644bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6488aecb7405949f28b36bed534d2f03892644bd/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd34606ddf02d1e9364e459b373a6ad665c3d8a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd34606ddf02d1e9364e459b373a6ad665c3d8a4", "html_url": "https://github.com/rust-lang/rust/commit/fd34606ddf02d1e9364e459b373a6ad665c3d8a4"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "9bb4c9b3719e3308d9d7e0f9eb6911d07d469ed5", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6488aecb7405949f28b36bed534d2f03892644bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6488aecb7405949f28b36bed534d2f03892644bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=6488aecb7405949f28b36bed534d2f03892644bd", "patch": "@@ -113,7 +113,7 @@ pub(super) fn check_fn<'a, 'tcx>(\n             };\n \n             if let Some(header) = item {\n-                tcx.sess.span_err(header.span, \"A function with the \\\"rust-call\\\" ABI must take a single non-self argument that is a tuple\")\n+                tcx.sess.span_err(header.span, \"functions with the \\\"rust-call\\\" ABI must take a single non-self argument that is a tuple\")\n             }\n         };\n "}, {"sha": "a08e0bfb5e5da8589998c8767adac633502d6295", "filename": "src/test/ui/abi/issues/issue-22565-rust-call.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.rs?ref=6488aecb7405949f28b36bed534d2f03892644bd", "patch": "@@ -1,25 +1,25 @@\n #![feature(unboxed_closures)]\n \n extern \"rust-call\" fn b(_i: i32) {}\n-//~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+//~^ ERROR functions with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n \n trait Tr {\n     extern \"rust-call\" fn a();\n \n     extern \"rust-call\" fn b() {}\n-    //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+    //~^ ERROR functions with the \"rust-call\" ABI must take a single non-self argument\n }\n \n struct Foo;\n \n impl Foo {\n     extern \"rust-call\" fn bar() {}\n-    //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+    //~^ ERROR functions with the \"rust-call\" ABI must take a single non-self argument\n }\n \n impl Tr for Foo {\n     extern \"rust-call\" fn a() {}\n-    //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+    //~^ ERROR functions with the \"rust-call\" ABI must take a single non-self argument\n }\n \n fn main () {"}, {"sha": "3eee10bc5e95191209b38081c849179bc01edb5c", "filename": "src/test/ui/abi/issues/issue-22565-rust-call.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Fissues%2Fissue-22565-rust-call.stderr?ref=6488aecb7405949f28b36bed534d2f03892644bd", "patch": "@@ -1,22 +1,22 @@\n-error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+error: functions with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n   --> $DIR/issue-22565-rust-call.rs:3:1\n    |\n LL | extern \"rust-call\" fn b(_i: i32) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+error: functions with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n   --> $DIR/issue-22565-rust-call.rs:9:5\n    |\n LL |     extern \"rust-call\" fn b() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+error: functions with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n   --> $DIR/issue-22565-rust-call.rs:16:5\n    |\n LL |     extern \"rust-call\" fn bar() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+error: functions with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n   --> $DIR/issue-22565-rust-call.rs:21:5\n    |\n LL |     extern \"rust-call\" fn a() {}"}, {"sha": "07d44ff82b133daec527c5463cd488565006e0cd", "filename": "src/test/ui/overloaded-calls-nontuple.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Foverloaded-calls-nontuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Foverloaded-calls-nontuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foverloaded-calls-nontuple.rs?ref=6488aecb7405949f28b36bed534d2f03892644bd", "patch": "@@ -11,13 +11,13 @@ impl FnMut<isize> for S {\n     extern \"rust-call\" fn call_mut(&mut self, z: isize) -> isize {\n         self.x + self.y + z\n     }\n-    //~^^^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+    //~^^^ ERROR functions with the \"rust-call\" ABI must take a single non-self argument\n }\n \n impl FnOnce<isize> for S {\n     type Output = isize;\n     extern \"rust-call\" fn call_once(mut self, z: isize) -> isize { self.call_mut(z) }\n-    //~^ ERROR A function with the \"rust-call\" ABI must take a single non-self argument\n+    //~^ ERROR functions with the \"rust-call\" ABI must take a single non-self argument\n }\n \n fn main() {"}, {"sha": "8f299bc9434f38e416275da1809ec55d72225e42", "filename": "src/test/ui/overloaded-calls-nontuple.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Foverloaded-calls-nontuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6488aecb7405949f28b36bed534d2f03892644bd/src%2Ftest%2Fui%2Foverloaded-calls-nontuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foverloaded-calls-nontuple.stderr?ref=6488aecb7405949f28b36bed534d2f03892644bd", "patch": "@@ -1,10 +1,10 @@\n-error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+error: functions with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n   --> $DIR/overloaded-calls-nontuple.rs:11:5\n    |\n LL |     extern \"rust-call\" fn call_mut(&mut self, z: isize) -> isize {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: A function with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n+error: functions with the \"rust-call\" ABI must take a single non-self argument that is a tuple\n   --> $DIR/overloaded-calls-nontuple.rs:19:5\n    |\n LL |     extern \"rust-call\" fn call_once(mut self, z: isize) -> isize { self.call_mut(z) }"}]}