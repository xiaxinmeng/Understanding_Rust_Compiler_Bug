{"sha": "386f46a5a1bff654fc8b29ea84dcd18c29c75c18", "node_id": "C_kwDOAAsO6NoAKDM4NmY0NmE1YTFiZmY2NTRmYzhiMjllYTg0ZGNkMThjMjljNzVjMTg", "commit": {"author": {"name": "btwotwo", "email": "10519967+btwotwo@users.noreply.github.com", "date": "2022-10-06T14:29:23Z"}, "committer": {"name": "btwotwo", "email": "10519967+btwotwo@users.noreply.github.com", "date": "2022-10-06T14:32:21Z"}, "message": "Use helper method in is_format_string", "tree": {"sha": "263a243131689dcd8478db426381410f3f3f0a33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/263a243131689dcd8478db426381410f3f3f0a33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/386f46a5a1bff654fc8b29ea84dcd18c29c75c18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE7WZLfNy5oeDQue2p1FagNJ1zoKMFAmM+5vUACgkQ1FagNJ1z\noKO3KhAAiVkhD0kPPW8+I7SeZnawh71bvejaT4DGjmYxbYzhX4rm3Z7KS9CyhSeQ\nZLe0NQ7qBsYmrSBKNVGzkIYkKvIldtLezXGSFDA/trAqe7GErHC3hj9kUyYLGgHn\njTlVjNi6waLjpvIOopE2ddJQR2d4mO0ni1CPnaS50IPCjkVTeN3BON/CqfdpmIUo\nr69m3UJQL6jE2LnMSfHizR7708ab3zSm29zqnnn6BBefSvcxdeI9gp0g0Tgn8SYc\nkdtxWBZxfDgrCI9fHlegXk8aphMKxYAX7wkJFQZv0wcxm04qkmUQtqxnJzQx3YdX\n+TAZSREKD3TzRqidfkST8zawHXaXdFRoqijSQ7anSAk/x82dUbui/tfWJdd7ZPUx\nu45OldR+AGVip9pxk3Szc/VtxvEmJbnXdS1j2poQNxxkMYJmyJ6JjrXc9BlbzTv8\nlnG+Md/LlP4oENs2uYdskXkun9xuw+e5WJVRXXM6AoI7AJKv2w9KuAfkBjBgVzCK\ndnn2dnIuZZKWKCM4yxL/8PB9hFRH9bbeuzV+1FVC90x3Rh9eo5sNp5hb3wYXd1v5\nnissjYVQDOI03DajHc+hxPG2NMetsKINo9sSVyn5T5u1jaTYesFPrmRw79bE9XRo\nMXawJQywKPQYtbiJPBgfVu5PAeNJPOEPrWbWv4z2/TQbfd3ujQw=\n=Uvax\n-----END PGP SIGNATURE-----", "payload": "tree 263a243131689dcd8478db426381410f3f3f0a33\nparent 55c5014b760a5d4bf3c6dc6a19818278ec83816e\nauthor btwotwo <10519967+btwotwo@users.noreply.github.com> 1665066563 +0200\ncommitter btwotwo <10519967+btwotwo@users.noreply.github.com> 1665066741 +0200\n\nUse helper method in is_format_string\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/386f46a5a1bff654fc8b29ea84dcd18c29c75c18", "html_url": "https://github.com/rust-lang/rust/commit/386f46a5a1bff654fc8b29ea84dcd18c29c75c18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/386f46a5a1bff654fc8b29ea84dcd18c29c75c18/comments", "author": {"login": "btwotwo", "id": 10519967, "node_id": "MDQ6VXNlcjEwNTE5OTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10519967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btwotwo", "html_url": "https://github.com/btwotwo", "followers_url": "https://api.github.com/users/btwotwo/followers", "following_url": "https://api.github.com/users/btwotwo/following{/other_user}", "gists_url": "https://api.github.com/users/btwotwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/btwotwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btwotwo/subscriptions", "organizations_url": "https://api.github.com/users/btwotwo/orgs", "repos_url": "https://api.github.com/users/btwotwo/repos", "events_url": "https://api.github.com/users/btwotwo/events{/privacy}", "received_events_url": "https://api.github.com/users/btwotwo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "btwotwo", "id": 10519967, "node_id": "MDQ6VXNlcjEwNTE5OTY3", "avatar_url": "https://avatars.githubusercontent.com/u/10519967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btwotwo", "html_url": "https://github.com/btwotwo", "followers_url": "https://api.github.com/users/btwotwo/followers", "following_url": "https://api.github.com/users/btwotwo/following{/other_user}", "gists_url": "https://api.github.com/users/btwotwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/btwotwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btwotwo/subscriptions", "organizations_url": "https://api.github.com/users/btwotwo/orgs", "repos_url": "https://api.github.com/users/btwotwo/repos", "events_url": "https://api.github.com/users/btwotwo/events{/privacy}", "received_events_url": "https://api.github.com/users/btwotwo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55c5014b760a5d4bf3c6dc6a19818278ec83816e", "url": "https://api.github.com/repos/rust-lang/rust/commits/55c5014b760a5d4bf3c6dc6a19818278ec83816e", "html_url": "https://github.com/rust-lang/rust/commit/55c5014b760a5d4bf3c6dc6a19818278ec83816e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "894a4b0fbb343bf1c529ae9d7838ad51f7b00ee9", "filename": "crates/ide-db/src/syntax_helpers/format_string.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/386f46a5a1bff654fc8b29ea84dcd18c29c75c18/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fformat_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/386f46a5a1bff654fc8b29ea84dcd18c29c75c18/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fformat_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fformat_string.rs?ref=386f46a5a1bff654fc8b29ea84dcd18c29c75c18", "patch": "@@ -1,9 +1,10 @@\n //! Tools to work with format string literals for the `format_args!` family of macros.\n use syntax::{\n-    ast::{self, IsString},\n-    AstNode, AstToken, TextRange, TextSize,\n+    ast::{self, IsString}, TextRange, TextSize,\n };\n \n+use super::node_ext::get_outer_macro_name;\n+\n pub fn is_format_string(string: &ast::String) -> bool {\n     // Check if `string` is a format string argument of a macro invocation.\n     // `string` is a string literal, mapped down into the innermost macro expansion.\n@@ -14,8 +15,7 @@ pub fn is_format_string(string: &ast::String) -> bool {\n     // This setup lets us correctly highlight the components of `concat!(\"{}\", \"bla\")` format\n     // strings. It still fails for `concat!(\"{\", \"}\")`, but that is rare.\n     (|| {\n-        let macro_call = string.syntax().parent_ancestors().find_map(ast::MacroCall::cast)?;\n-        let name = macro_call.path()?.segment()?.name_ref()?;\n+        let name = get_outer_macro_name(string)?;\n \n         if !matches!(\n             name.text().as_str(),"}]}