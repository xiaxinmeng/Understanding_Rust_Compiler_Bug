{"sha": "9f481b85142362e725e6eb6b33a2eba062453c95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNDgxYjg1MTQyMzYyZTcyNWU2ZWI2YjMzYTJlYmEwNjI0NTNjOTU=", "commit": {"author": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-14T17:53:23Z"}, "committer": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-14T17:53:23Z"}, "message": "include_bytes! now registers the file included\n\nThis is a little bit tricky, since with include_str!, we know that we\nare including utf-8 content, so it's safe to store the source as a\nString in a FileMap. We don't know that for include_bytes!, but I don't\nthink we actually need to track the contents anyways, so I'm passing \"\".\n\nnew_filemap does check for the zero length content, and it should be\nreasonable, howeven I'm not sure if it would be better to pass None\ninstead of Some(Rc::new(\"\")) as the src component of a FileMap.\n\nFixes bug #24348", "tree": {"sha": "5c80be94f6f8aa17f2c96baba610ff2279184edd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c80be94f6f8aa17f2c96baba610ff2279184edd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f481b85142362e725e6eb6b33a2eba062453c95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f481b85142362e725e6eb6b33a2eba062453c95", "html_url": "https://github.com/rust-lang/rust/commit/9f481b85142362e725e6eb6b33a2eba062453c95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f481b85142362e725e6eb6b33a2eba062453c95/comments", "author": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47551b57456c108c69f698b114606a275fb01643", "url": "https://api.github.com/repos/rust-lang/rust/commits/47551b57456c108c69f698b114606a275fb01643", "html_url": "https://github.com/rust-lang/rust/commit/47551b57456c108c69f698b114606a275fb01643"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "d91659bafe4f04c0ce3e03120c87f2434737c16c", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9f481b85142362e725e6eb6b33a2eba062453c95/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f481b85142362e725e6eb6b33a2eba062453c95/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=9f481b85142362e725e6eb6b33a2eba062453c95", "patch": "@@ -184,6 +184,11 @@ pub fn expand_include_bytes(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree])\n             return DummyResult::expr(sp);\n         }\n         Ok(..) => {\n+            // Add this input file to the code map to make it available as\n+            // dependency information, but don't enter it's contents\n+            let filename = format!(\"{}\", file.display());\n+            cx.codemap().new_filemap(filename, \"\".to_string());\n+\n             base::MacEager::expr(cx.expr_lit(sp, ast::LitBinary(Rc::new(bytes))))\n         }\n     }"}]}