{"sha": "a72568efb61f7b8096a3460295f6174a04224728", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MjU2OGVmYjYxZjdiODA5NmEzNDYwMjk1ZjYxNzRhMDQyMjQ3Mjg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-01T13:14:49Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-04-01T13:14:49Z"}, "message": "Rollup merge of #32641 - tbu-:pr_e0277, r=pnkfelix\n\nImprove E0277 error message in a generic context\n\nThis now mentions that you can restrict type parameters to be able to\ncall functions of traits.", "tree": {"sha": "8ec263987a7e4a8a88d4b66c4d5e3c71b2c2e110", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ec263987a7e4a8a88d4b66c4d5e3c71b2c2e110"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a72568efb61f7b8096a3460295f6174a04224728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a72568efb61f7b8096a3460295f6174a04224728", "html_url": "https://github.com/rust-lang/rust/commit/a72568efb61f7b8096a3460295f6174a04224728", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a72568efb61f7b8096a3460295f6174a04224728/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d611cc080c4f7a5e078990e6cf74083a1d8c4823", "url": "https://api.github.com/repos/rust-lang/rust/commits/d611cc080c4f7a5e078990e6cf74083a1d8c4823", "html_url": "https://github.com/rust-lang/rust/commit/d611cc080c4f7a5e078990e6cf74083a1d8c4823"}, {"sha": "10caca24f0052a033cac648884d2393125bc24a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/10caca24f0052a033cac648884d2393125bc24a3", "html_url": "https://github.com/rust-lang/rust/commit/10caca24f0052a033cac648884d2393125bc24a3"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "6f06efd0f9f2659a272b1b4b0eb14037e3202fe4", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a72568efb61f7b8096a3460295f6174a04224728/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a72568efb61f7b8096a3460295f6174a04224728/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=a72568efb61f7b8096a3460295f6174a04224728", "patch": "@@ -1033,6 +1033,47 @@ fn main() {\n     some_func(5i32); // ok!\n }\n ```\n+\n+Or in a generic context, an erroneous code example would look like:\n+```compile_fail\n+fn some_func<T>(foo: T) {\n+    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n+                           //        implemented for the type `T`\n+}\n+\n+fn main() {\n+    // We now call the method with the i32 type,\n+    // which *does* implement the Debug trait.\n+    some_func(5i32);\n+}\n+```\n+\n+Note that the error here is in the definition of the generic function: Although\n+we only call it with a parameter that does implement `Debug`, the compiler\n+still rejects the function: It must work with all possible input types. In\n+order to make this example compile, we need to restrict the generic type we're\n+accepting:\n+```\n+use std::fmt;\n+\n+// Restrict the input type to types that implement Debug.\n+fn some_func<T: fmt::Debug>(foo: T) {\n+    println!(\"{:?}\", foo);\n+}\n+\n+fn main() {\n+    // Calling the method is still fine, as i32 implements Debug.\n+    some_func(5i32);\n+\n+    // This would fail to compile now:\n+    // struct WithoutDebug;\n+    // some_func(WithoutDebug);\n+}\n+\n+Rust only looks at the signature of the called function, as such it must\n+already specify all requirements that will be used for every type parameter.\n+```\n+\n \"##,\n \n E0281: r##\""}]}